[{"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6674", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6674/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6674/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6674/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6674", "id": 1667630588, "node_id": "PR_kwDOAALxiM5OS4CH", "number": 6674, "title": "Fix `WhiteNoise` Covariance bug", "user": {"login": "dehorsley", "id": 3401668, "node_id": "MDQ6VXNlcjM0MDE2Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/3401668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dehorsley", "html_url": "https://github.com/dehorsley", "followers_url": "https://api.github.com/users/dehorsley/followers", "following_url": "https://api.github.com/users/dehorsley/following{/other_user}", "gists_url": "https://api.github.com/users/dehorsley/gists{/gist_id}", "starred_url": "https://api.github.com/users/dehorsley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dehorsley/subscriptions", "organizations_url": "https://api.github.com/users/dehorsley/orgs", "repos_url": "https://api.github.com/users/dehorsley/repos", "events_url": "https://api.github.com/users/dehorsley/events{/privacy}", "received_events_url": "https://api.github.com/users/dehorsley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3517167559, "node_id": "LA_kwDOAALxiM7Ro7fH", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/GP", "name": "GP", "color": "CF1A41", "default": false, "description": "Gaussian Process"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-04-14T07:00:10Z", "updated_at": "2023-04-26T17:28:31Z", "closed_at": "2023-04-26T17:24:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6674", "html_url": "https://github.com/pymc-devs/pymc/pull/6674", "diff_url": "https://github.com/pymc-devs/pymc/pull/6674.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6674.patch", "merged_at": "2023-04-26T17:24:40Z"}, "body": "Since #6458, Covariance is now the base class for kernels/covariance functions with input_dim and active_dims, which does not include WhiteNoise and Constant kernels. While #6458 introduced the `BaseCovariance` class to make this distinction, it looks like `WhiteNoise` was inadvertently not updated to use the new base class.\r\n\r\nCombination kernels, which use instance of `Covariance` to test for the presents of input_dim and active_dims, fail with a `WhiteNoise` kernel input.\r\n\r\n## Bugfixes\r\n- fix WhiteNoise use in Combination kernels (#6673)\r\n\r\n\r\n<!-- readthedocs-preview pymc start -->\r\n----\r\n:books: Documentation preview :books:: https://pymc--6674.org.readthedocs.build/en/6674/\r\n\r\n<!-- readthedocs-preview pymc end -->", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6674/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6674/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6673", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6673/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6673/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6673/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6673", "id": 1667549156, "node_id": "I_kwDOAALxiM5jZMfk", "number": 6673, "title": "BUG: Combination covariance errors with WhiteNoise", "user": {"login": "dehorsley", "id": 3401668, "node_id": "MDQ6VXNlcjM0MDE2Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/3401668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dehorsley", "html_url": "https://github.com/dehorsley", "followers_url": "https://api.github.com/users/dehorsley/followers", "following_url": "https://api.github.com/users/dehorsley/following{/other_user}", "gists_url": "https://api.github.com/users/dehorsley/gists{/gist_id}", "starred_url": "https://api.github.com/users/dehorsley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dehorsley/subscriptions", "organizations_url": "https://api.github.com/users/dehorsley/orgs", "repos_url": "https://api.github.com/users/dehorsley/repos", "events_url": "https://api.github.com/users/dehorsley/events{/privacy}", "received_events_url": "https://api.github.com/users/dehorsley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3517167559, "node_id": "LA_kwDOAALxiM7Ro7fH", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/GP", "name": "GP", "color": "CF1A41", "default": false, "description": "Gaussian Process"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-04-14T05:48:18Z", "updated_at": "2023-04-26T17:25:41Z", "closed_at": "2023-04-26T17:25:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the issue:\r\n\r\nPost v5.2.0, `gp.cov.Combination` covariance has extra checks (at [cov.py:189](https://github.com/pymc-devs/pymc/blame/aae97a2abf9496c9d8348c185a9ffcee294bef09/pymc/gp/cov.py#L189)) that fail with a `WhiteNoise` covariance.\r\n\r\nCurrently, the check for `input_dim` equality fails there is also a lurking problem with calculating `active_dims`. \r\n\r\n### Reproduceable code example:\r\n\r\n```python\r\nimport pm\r\npm.gp.cov.Exponential(2, ls=1) + pm.gp.cov.WhiteNoise(sigma=1)\r\n```\r\n\r\n\r\n### Error message:\r\n<details>\r\n\r\n```\r\nAttributeError                            Traceback (most recent call last)\r\n\r\n<ipython-input-1-7257c4d70473> in <cell line: 3>()\r\n      1 import pymc as pm\r\n      2 print(pm.__version__)\r\n----> 3 pm.gp.cov.Exponential(2, ls=1) + pm.gp.cov.WhiteNoise(sigma=1)\r\n\r\n2 frames\r\n\r\n/usr/local/lib/python3.9/dist-packages/pymc/gp/cov.py in __add__(self, other)\r\n     83         if isinstance(other, numbers.Real):\r\n     84             other = Constant(c=other)\r\n---> 85         return Add([self, other])\r\n     86 \r\n     87     def __mul__(self, other):\r\n\r\n/usr/local/lib/python3.9/dist-packages/pymc/gp/cov.py in __init__(self, factor_list)\r\n    187 \r\n    188         # Check if all input_dim are the same in factor_list\r\n--> 189         input_dims = {factor.input_dim for factor in factor_list if isinstance(factor, Covariance)}\r\n    190 \r\n    191         if len(input_dims) != 1:\r\n\r\n/usr/local/lib/python3.9/dist-packages/pymc/gp/cov.py in <setcomp>(.0)\r\n    187 \r\n    188         # Check if all input_dim are the same in factor_list\r\n--> 189         input_dims = {factor.input_dim for factor in factor_list if isinstance(factor, Covariance)}\r\n    190 \r\n    191         if len(input_dims) != 1:\r\n\r\nAttributeError: 'WhiteNoise' object has no attribute 'input_dim'\r\n```\r\n</details>\r\n\r\n### PyMC version information:\r\n\r\n<details>\r\npymc==5.2.0\r\n\r\ninstalled via pip\r\n\r\nOS: *\r\n</details>\r\n\r\n### Context for the issue:\r\n\r\nAffects any use of latent GPs with noise.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6673/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6670", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6670/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6670/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6670/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6670", "id": 1666111248, "node_id": "I_kwDOAALxiM5jTtcQ", "number": 6670, "title": "BUG: ICDF implementation for the discrete geometric distribution fails some tests.", "user": {"login": "gokuld", "id": 5626382, "node_id": "MDQ6VXNlcjU2MjYzODI=", "avatar_url": "https://avatars.githubusercontent.com/u/5626382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gokuld", "html_url": "https://github.com/gokuld", "followers_url": "https://api.github.com/users/gokuld/followers", "following_url": "https://api.github.com/users/gokuld/following{/other_user}", "gists_url": "https://api.github.com/users/gokuld/gists{/gist_id}", "starred_url": "https://api.github.com/users/gokuld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gokuld/subscriptions", "organizations_url": "https://api.github.com/users/gokuld/orgs", "repos_url": "https://api.github.com/users/gokuld/repos", "events_url": "https://api.github.com/users/gokuld/events{/privacy}", "received_events_url": "https://api.github.com/users/gokuld/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2023-04-13T10:02:03Z", "updated_at": "2023-04-27T15:29:53Z", "closed_at": "2023-04-27T15:29:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the issue:\r\n\r\nThe ICDF function for the discrete geometric distribution involves the ceiling function applied on a ratio of two values which is a floating point number. If this ratio is close to an integer, a small noise added to it even in the smallest digit of precision can sway the result of the ceiling function to the other side resulting in a wrong ICDF value.\r\n\r\nThe example code below is for an example of a Geometric distribution with `p=0.99`, and CDF value `0.9999` whose ICDF is expected to be `2`. Within the ICDF function, defining  the ratio `a = pt.log1p(-value) / pt.log1p(-p)`\r\n```\r\n    Ratio a before ceil: 2.000000000000025\r\n    Ratio a after ceil: 3.0\r\n    Expected value after ceil: 2\r\n```\r\nThe tiny numerical error `000000000000025` contributes to the wrong value after ceil.\r\n\r\nI also have a solution to this, which involves truncating the floating point value to a certain number of digits before using the ceiling function on it. This gets rid of the sensitivity to the smallest of noise. I will push a commit with this fix shortly.\r\n\r\n### Reproduceable code example:\r\n\r\n```python\r\nimport pytensor as pt\r\nimport pymc as pm\r\nfrom pymc.logprob.basic import icdf\r\nfrom pymc.pytensorf import inputvars\r\nimport numpy as np\r\n\r\nvalue = 0.9999 # CDF value for n=2\r\np = 0.99 # Parameter p of the discrete Geometric distribution.\r\n\r\n# The below ratio 'a' is used inside the ICDF function:\r\na = np.log1p(-value) / np.log1p(-p)\r\n\r\nprint(\r\n    f\"\"\"\r\n    Ratio before ceil: {a}\r\n    Ratio after ceil: {np.ceil(a)}\r\n    Expected value after ceil: 2\r\n    \"\"\"\r\n)\r\n\r\ndist = pm.Geometric.dist(p=p)\r\n\r\ndist_icdf = icdf(dist, pt.tensor.type.TensorType(dtype='float64', shape=[])('value'))\r\ndist_icdf_fn = pt.function(list(inputvars(dist_icdf)), dist_icdf)\r\n\r\nassert dist_icdf_fn(value) == 2\r\n```\r\n\r\n\r\n### Error message:\r\n\r\n```shell\r\nAssertionError\r\n```\r\n\r\n\r\n### PyMC version information:\r\n\r\npytensor: 2.10.1\r\nPython: 3.10.10\r\nPyMC: latest commit 2a324bc04d65637f427858c519f2eb9c247ebc0b\r\n\r\n### Context for the issue:\r\n\r\n_No response_", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6670/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6669", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6669/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6669/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6669/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6669", "id": 1665965897, "node_id": "PR_kwDOAALxiM5ONTsi", "number": 6669, "title": "Fix dtype casting bug in icdf function", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3561358894, "node_id": "LA_kwDOAALxiM7URgYu", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/logprob-related", "name": "logprob-related", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/43", "html_url": "https://github.com/pymc-devs/pymc/milestone/43", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/43/labels", "id": 9257346, "node_id": "MI_kwDOAALxiM4AjUGC", "number": 43, "title": "5.3.0", "description": "", "creator": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "open", "created_at": "2023-04-07T14:14:01Z", "updated_at": "2023-04-13T11:21:39Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2023-04-13T08:30:14Z", "updated_at": "2023-04-13T11:21:37Z", "closed_at": "2023-04-13T11:21:36Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6669", "html_url": "https://github.com/pymc-devs/pymc/pull/6669", "diff_url": "https://github.com/pymc-devs/pymc/pull/6669.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6669.patch", "merged_at": "2023-04-13T11:21:36Z"}, "body": "Closes #6648\r\n\r\nCC @gokuld\r\n\r\n<!-- readthedocs-preview pymc start -->\r\n----\n:books: Documentation preview :books:: https://pymc--6669.org.readthedocs.build/en/6669/\n\r\n<!-- readthedocs-preview pymc end -->", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6669/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6666", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6666/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6666/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6666/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6666", "id": 1663273499, "node_id": "I_kwDOAALxiM5jI4ob", "number": 6666, "title": "BUG: Can't slice by a generator in observed data", "user": {"login": "alang9", "id": 881998, "node_id": "MDQ6VXNlcjg4MTk5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/881998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alang9", "html_url": "https://github.com/alang9", "followers_url": "https://api.github.com/users/alang9/followers", "following_url": "https://api.github.com/users/alang9/following{/other_user}", "gists_url": "https://api.github.com/users/alang9/gists{/gist_id}", "starred_url": "https://api.github.com/users/alang9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alang9/subscriptions", "organizations_url": "https://api.github.com/users/alang9/orgs", "repos_url": "https://api.github.com/users/alang9/repos", "events_url": "https://api.github.com/users/alang9/events{/privacy}", "received_events_url": "https://api.github.com/users/alang9/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2023-04-11T21:55:45Z", "updated_at": "2023-04-27T19:48:13Z", "closed_at": "2023-04-27T19:48:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the issue:\n\nI tried updating the code from https://discourse.pymc.io/t/creating-unshuffled-sequential-minibatches/1118 to modern pymc but it results in this error\r\n\r\nSimply removing the check here allows the code to run so maybe the check is simply too strict: https://github.com/pymc-devs/pymc/blob/640480545da026827a3b610a49e089958c7dd59a/pymc/model.py#L1337-L1352\r\n\r\nPS: is this the recommended way of having sequential minibatches?\n\n### Reproduceable code example:\n\n```python\nimport pymc as pm\r\nimport pytensor\r\nimport pytensor.tensor as at\r\nimport numpy as np\r\n\r\n\r\ndef gen1(batchsize, totalsize):\r\n    i = 0\r\n    k = totalsize // batchsize\r\n    while True:\r\n        yield np.arange(batchsize) + batchsize * i\r\n        i += 1\r\n        # reset counter\r\n        if i == k:\r\n            i = 0\r\n\r\n\r\ngenvar = pm.generator(gen1(100, 1000))\r\n\r\nX = np.random.randn(1000, 5)\r\nbeta = np.random.randn(5, 1)\r\ny = X.dot(beta) + np.random.randn(1000, 1) * 0.75\r\n\r\nXshared = pytensor.shared(X)\r\nyshared = pytensor.shared(y)\r\nwith pm.Model() as m:\r\n    b = pm.Normal(\"b\", 0.0, 100.0, shape=(5, 1))\r\n    sd = pm.HalfNormal(\"sd\", 5.0)\r\n    yhat = at.dot(Xshared[genvar], b)\r\n    obs = pm.Normal(\"y\", yhat, sd, observed=yshared[genvar])\r\n    approx = pm.fit()\n```\n\n\n### Error message:\n\n```shell\nTraceback (most recent call last):\r\n  File \"/home/alang/tmp/gibbs/test.py\", line 30, in <module>\r\n    obs = pm.Normal(\"y\", yhat, sd, observed=yshared[genvar])\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/alang/tmp/gibbs/venv/lib/python3.11/site-packages/pymc/distributions/distribution.py\", line 312, in __new__\r\n    rv_out = model.register_rv(\r\n             ^^^^^^^^^^^^^^^^^^\r\n  File \"/home/alang/tmp/gibbs/venv/lib/python3.11/site-packages/pymc/model.py\", line 1344, in register_rv\r\n    raise TypeError(\r\nTypeError: Variables that depend on other nodes cannot be used for observed data.The data variable was: AdvancedSubtensor.0\n```\n\n\n### PyMC version information:\n\npymc-5.2.0, pytensor-2.10.1 via pip on on x86_64 linux\n\n### Context for the issue:\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6666/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6659", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6659/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6659/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6659/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6659", "id": 1659416155, "node_id": "PR_kwDOAALxiM5N3l-c", "number": 6659, "title": "Fix changed files filters in tests workflow", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3767837109, "node_id": "LA_kwDOAALxiM7glKG1", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/Github%20CI/CD", "name": "Github CI/CD", "color": "546BD0", "default": false, "description": ""}, {"id": 4289458217, "node_id": "LA_kwDOAALxiM7_q_Ap", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/no%20releasenotes", "name": "no releasenotes", "color": "000000", "default": false, "description": "Skipped in automatic release notes generation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-04-08T06:31:22Z", "updated_at": "2023-04-08T11:44:14Z", "closed_at": "2023-04-08T11:44:14Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6659", "html_url": "https://github.com/pymc-devs/pymc/pull/6659", "diff_url": "https://github.com/pymc-devs/pymc/pull/6659.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6659.patch", "merged_at": "2023-04-08T11:44:14Z"}, "body": "The paths filter action syntax is different than the githubs action one, so that `pymc/**.py` only matches python files in the first subdirectory, whereas the github one matched files in any subdirectories.\r\n\r\nWe need to use `pymc/**/*.py` instead.\r\n\r\nThe tests in #6658 were not triggered because of this\r\n\r\n<!-- readthedocs-preview pymc start -->\r\n----\r\n:books: Documentation preview :books:: https://pymc--6659.org.readthedocs.build/en/6659/\r\n\r\n<!-- readthedocs-preview pymc end -->", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6659/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6658", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6658/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6658/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6658/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6658", "id": 1659245582, "node_id": "PR_kwDOAALxiM5N3DoE", "number": 6658, "title": "Fix bug in random function of HalfStudent", "user": {"login": "Dhruvanshu-Joshi", "id": 104030847, "node_id": "U_kgDOBjNifw", "avatar_url": "https://avatars.githubusercontent.com/u/104030847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dhruvanshu-Joshi", "html_url": "https://github.com/Dhruvanshu-Joshi", "followers_url": "https://api.github.com/users/Dhruvanshu-Joshi/followers", "following_url": "https://api.github.com/users/Dhruvanshu-Joshi/following{/other_user}", "gists_url": "https://api.github.com/users/Dhruvanshu-Joshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dhruvanshu-Joshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dhruvanshu-Joshi/subscriptions", "organizations_url": "https://api.github.com/users/Dhruvanshu-Joshi/orgs", "repos_url": "https://api.github.com/users/Dhruvanshu-Joshi/repos", "events_url": "https://api.github.com/users/Dhruvanshu-Joshi/events{/privacy}", "received_events_url": "https://api.github.com/users/Dhruvanshu-Joshi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2023-04-07T22:01:46Z", "updated_at": "2023-04-14T03:07:20Z", "closed_at": "2023-04-13T10:44:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6658", "html_url": "https://github.com/pymc-devs/pymc/pull/6658", "diff_url": "https://github.com/pymc-devs/pymc/pull/6658.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6658.patch", "merged_at": "2023-04-13T10:44:50Z"}, "body": "<!-- !! Thank your for opening a PR !! -->\r\n\r\n**What is this PR about?**\r\nIn this PR, we aim to solve the issue [6657](https://github.com/pymc-devs/pymc/issues/6657). Originally what was passed as ```sigma``` is now passed by keyword as ```scale```.\r\n\r\n**Checklist**\r\n+ [x] Explain important implementation details \ud83d\udc46\r\n+ [x] Make sure that [the pre-commit linting/style checks pass](https://docs.pymc.io/en/latest/contributing/python_style.html).\r\n+ [x] Link relevant issues (preferably in [nice commit messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html))\r\n+ [ ] Are the changes covered by tests and docstrings?\r\n+ [x] Fill out the short summary sections \ud83d\udc47\r\n\r\n## Major / Breaking Changes\r\n- ...\r\n\r\n## New features\r\n- ...\r\n\r\n## Bugfixes\r\n- Fixes the bug as found in [Discourse_link](https://discourse.pymc.io/t/pm-halfstudentt-dist-failing-to-give-correct-shape/11821)\r\n\r\n## Documentation\r\n- ...\r\n\r\n## Maintenance\r\n- ...\r\n\r\n\r\n<!-- readthedocs-preview pymc start -->\r\n----\n:books: Documentation preview :books:: https://pymc--6658.org.readthedocs.build/en/6658/\n\r\n<!-- readthedocs-preview pymc end -->", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6658/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6657", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6657/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6657/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6657/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6657", "id": 1658847324, "node_id": "I_kwDOAALxiM5i4ABc", "number": 6657, "title": "Bug in `rng_fn` of `HalfStudentT`", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/43", "html_url": "https://github.com/pymc-devs/pymc/milestone/43", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/43/labels", "id": 9257346, "node_id": "MI_kwDOAALxiM4AjUGC", "number": 43, "title": "5.3.0", "description": "", "creator": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "open", "created_at": "2023-04-07T14:14:01Z", "updated_at": "2023-04-13T11:21:39Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2023-04-07T14:10:02Z", "updated_at": "2023-04-13T11:17:15Z", "closed_at": "2023-04-13T11:17:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/pymc-devs/pymc/blob/b7764dd09b9266006f24db021f1c4a8b825d7534/pymc/distributions/continuous.py#L2483\r\n\r\n`sigma` should be passed by keyword as `scale`, otherwise it\u2019s read as `loc`\r\n\r\nFound in https://discourse.pymc.io/t/pm-halfstudentt-dist-failing-to-give-correct-shape/11821", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6657/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6648", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6648/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6648/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6648/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6648", "id": 1652728849, "node_id": "I_kwDOAALxiM5igqQR", "number": 6648, "title": "BUG: basic.icdf creates tensor variable of type of the distribution, rather than probability type (float64?)", "user": {"login": "gokuld", "id": 5626382, "node_id": "MDQ6VXNlcjU2MjYzODI=", "avatar_url": "https://avatars.githubusercontent.com/u/5626382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gokuld", "html_url": "https://github.com/gokuld", "followers_url": "https://api.github.com/users/gokuld/followers", "following_url": "https://api.github.com/users/gokuld/following{/other_user}", "gists_url": "https://api.github.com/users/gokuld/gists{/gist_id}", "starred_url": "https://api.github.com/users/gokuld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gokuld/subscriptions", "organizations_url": "https://api.github.com/users/gokuld/orgs", "repos_url": "https://api.github.com/users/gokuld/repos", "events_url": "https://api.github.com/users/gokuld/events{/privacy}", "received_events_url": "https://api.github.com/users/gokuld/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/43", "html_url": "https://github.com/pymc-devs/pymc/milestone/43", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/43/labels", "id": 9257346, "node_id": "MI_kwDOAALxiM4AjUGC", "number": 43, "title": "5.3.0", "description": "", "creator": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "open", "created_at": "2023-04-07T14:14:01Z", "updated_at": "2023-04-13T11:21:39Z", "due_on": null, "closed_at": null}, "comments": 4, "created_at": "2023-04-03T20:28:43Z", "updated_at": "2023-04-13T11:21:39Z", "closed_at": "2023-04-13T11:21:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the issue:\n\nIn basic.py, we have this definition of the icdf helper function:\r\n\r\n```\r\ndef icdf(rv: TensorVariable, value: TensorLike, **kwargs) -> TensorVariable:\r\n    \"\"\"Create a graph for the inverse CDF of a  Random Variable.\"\"\"\r\n    value = pt.as_tensor_variable(value, dtype=rv.dtype)\r\n    try:\r\n        return _icdf_helper(rv, value, **kwargs)\r\n    except NotImplementedError:\r\n        # Try to rewrite rv\r\n        fgraph, rv_values, _ = construct_ir_fgraph({rv: value})\r\n        [ir_rv] = fgraph.outputs\r\n        return _icdf_helper(ir_rv, value, **kwargs)\r\n```\r\n\r\nI specifically have a concern about `value = pt.as_tensor_variable(value, dtype=rv.dtype)`\r\nShould not the input type to icdf function be a floating point type? (Type of probability value).\r\n`rv.dtype` can be integer too, such as for discrete distributions and is not the right type for the probability value input to the icdf function.\n\n### Reproduceable code example:\n\n```python\nimport pytensor as pt\r\nimport pymc as pm\r\nfrom pymc.logprob.basic import icdf\r\nfrom pymc.pytensorf import inputvars\r\n\r\ndist = pm.Geometric.dist(p=0.1)\r\ndist_icdf = icdf(dist, dist.type())\r\ndist_icdf_fn = pt.function(list(inputvars(dist_icdf)), dist_icdf)\r\ndist_icdf_fn(0.1)\n```\n\n\n### Error message:\n\n```shell\nTensorType(int64, ()) cannot store accurately value 0.1, it would be represented as 0. If you do not mind this precision loss, you can: 1) explicitly convert your data to a numpy array of dtype int64, or 2) set \"allow_input_downcast=True\" when calling \"function\".\n```\n\n\n### PyMC version information:\n\npytensor: 2.10.1\r\nPython: 3.10.10\r\nPyMC: latest commit b7764dd09b9266006f24db021f1c4a8b825d7534\n\n### Context for the issue:\n\nI would like to implement a util function for a self consistency test for ICDF and logcdf of discrete distributions.\r\n\r\nThat is, to check if:\r\n`value = icdf(dist, exp(logcdf(dist, value)))`", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6648/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6640", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6640/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6640/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6640/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6640", "id": 1649371301, "node_id": "I_kwDOAALxiM5iT2il", "number": 6640, "title": "BUG: NUTS sampler for Gaussian process regression uses all system cores, even with cores=1", "user": {"login": "andrewanguswarwick", "id": 56439729, "node_id": "MDQ6VXNlcjU2NDM5NzI5", "avatar_url": "https://avatars.githubusercontent.com/u/56439729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewanguswarwick", "html_url": "https://github.com/andrewanguswarwick", "followers_url": "https://api.github.com/users/andrewanguswarwick/followers", "following_url": "https://api.github.com/users/andrewanguswarwick/following{/other_user}", "gists_url": "https://api.github.com/users/andrewanguswarwick/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewanguswarwick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewanguswarwick/subscriptions", "organizations_url": "https://api.github.com/users/andrewanguswarwick/orgs", "repos_url": "https://api.github.com/users/andrewanguswarwick/repos", "events_url": "https://api.github.com/users/andrewanguswarwick/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewanguswarwick/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-03-31T13:36:40Z", "updated_at": "2023-04-02T22:37:49Z", "closed_at": "2023-04-02T22:37:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the issue:\n\nFitting Gaussian process hyperparameters using NUTS sampler uses all system cores (24 in my case), no matter what the cores argument is set to in pm.sample(). The behaviour remains when setting environment variables such as OMP_NUM_THREADS = 1, MKL_NUM_THREADS=1, OPENBLAS_NUM_THREADS=1 within the python script. This is not desired behaviour.\n\n### Reproduceable code example:\n\n```python\nimport pymc as pm\r\nimport numpy as np\r\nimport os\r\n\r\n# Input and output data for GP\r\nx = np.random.rand(100,2)\r\ny = x[:,0]**2 + x[:,0]- 0.5*x[:,0]*x[:,1] - np.random.normal(scale=0.1)\r\n\r\n# Ensure thread environment variables set to one\r\nos.environ[\"OMP_NUM_THREADS\"] = \"1\"\r\nos.environ[\"MKL_NUM_THREADS\"] = \"1\"\r\nos.environ[\"OPENBLAS_NUM_THREADS\"] = \"1\"\r\n\r\n# PyMC Model\r\nm = pm.Model()\r\nwith m:\r\n\r\n  # GP Hyperparameters\r\n  gsig = pm.HalfNormal('gs')\r\n  kls = pm.LogNormal('l',shape=2)\r\n  kvar = pm.LogNormal('kv')\r\n\r\n  # GP Instance\r\n  kern = pm.gp.cov.ExpQuad(2,ls=kls)\r\n  gp = pm.gp.Marginal(cov_func = kern)\r\n  y_ = gp.marginal_likelihood('y_',X=x,y=y,sigma=gsig)\r\n\r\n  # MCMC Sampling\r\n  idata = pm.sample(cores=1)\n```\n\n\n### Error message:\n\n_No response_\n\n### PyMC version information:\n\nPyMC Version: 5.2.0\r\nPyTensor Version: 2.10.1\r\nPython Version: 3.10.6\r\nOperating System: Ubuntu 22.04.2 LTS x86_64\r\nInstall: via pip\n\n### Context for the issue:\n\nUsing all system cores, no matter what settings are chosen, is not desirable. It inhibits use of the system for anything else while the sampler is running, which can be for substantial periods of time. It is also likely not optimal to have such an extent of threading on systems with a lot of cores.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6640/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6613", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6613/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6613/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6613/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6613", "id": 1631105555, "node_id": "I_kwDOAALxiM5hOLIT", "number": 6613, "title": "BUG: target_accept ignored by numpyro and blackjax samplers", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-03-19T20:26:49Z", "updated_at": "2023-03-31T14:56:23Z", "closed_at": "2023-03-31T14:56:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Describe the issue:\n\nI noticed the following behavior while sampling a large model:\r\n\r\n<img width=\"624\" alt=\"Screenshot 2023-03-19 at 4 05 03 PM\" src=\"https://user-images.githubusercontent.com/81476/226206796-f6b8c612-aec4-4c13-98ca-602ec6af4297.png\">\r\n\r\nIt appears that `target_accept` is not being used by either the numpyro or blackjax samplers. Acceptance rates tend to be around 90%. This occurs using both `pm.sample(nuts_sampler=...)` or the `sampler_*_nuts` functions.\n\n### Reproduceable code example:\n\n```python\nimport pymc as pm\r\nimport numpy as np\r\nfrom pymc.sampling_jax import sample_numpyro_nuts\r\n\r\nwith pm.Model() as model:\r\n    x = pm.Normal('x')\r\n    y = pm.Normal('y', x * np.arange(10), sigma=1, observed=np.random.randn(10))\r\n\r\nwith model:\r\n    trace = pm.sample(target_accept=0.7, nuts_sampler='numpyro')\r\n\r\ntrace.sample_stats.acceptance_rate.mean()\r\n\r\nwith model:\r\n    trace = sample_numpyro_nuts(1000, tune=2000, target_accept=0.7)\r\n\r\ntrace.sample_stats.acceptance_rate.mean()\n```\n\n\n### Error message:\n\n```shell\n>>> trace.sample_stats.acceptance_rate.mean()\r\n<xarray.DataArray 'acceptance_rate' ()>\r\narray(0.86995989)\n```\n\n\n### PyMC version information:\n\n5.1.1, 5.1.2 and current main\n\n### Context for the issue:\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6613/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6607", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6607/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6607/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6607/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6607", "id": 1629617131, "node_id": "PR_kwDOAALxiM5MUpGT", "number": 6607, "title": "Infer logp for elemwise transformations of multivariate variables", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76152, "node_id": "MDU6TGFiZWw3NjE1Mg==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/enhancements", "name": "enhancements", "color": "02e10c", "default": false, "description": null}, {"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3561358894, "node_id": "LA_kwDOAALxiM7URgYu", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/logprob-related", "name": "logprob-related", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-03-17T16:41:01Z", "updated_at": "2023-03-29T10:49:12Z", "closed_at": "2023-03-29T10:49:12Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6607", "html_url": "https://github.com/pymc-devs/pymc/pull/6607", "diff_url": "https://github.com/pymc-devs/pymc/pull/6607.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6607.patch", "merged_at": "2023-03-29T10:49:11Z"}, "body": "Closes #6605 ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6607/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6598", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6598/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6598/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6598/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6598", "id": 1622247071, "node_id": "PR_kwDOAALxiM5L7wMV", "number": 6598, "title": "Fix release yml", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 4289458217, "node_id": "LA_kwDOAALxiM7_q_Ap", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/no%20releasenotes", "name": "no releasenotes", "color": "000000", "default": false, "description": "Skipped in automatic release notes generation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-03-13T20:57:03Z", "updated_at": "2023-03-13T20:58:00Z", "closed_at": "2023-03-13T20:58:00Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6598", "html_url": "https://github.com/pymc-devs/pymc/pull/6598", "diff_url": "https://github.com/pymc-devs/pymc/pull/6598.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6598.patch", "merged_at": "2023-03-13T20:58:00Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6598/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6591", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6591/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6591/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6591/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6591", "id": 1620157592, "node_id": "PR_kwDOAALxiM5L06-T", "number": 6591, "title": "Fix `warn_treedepth` looking at the wrong stat", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/41", "html_url": "https://github.com/pymc-devs/pymc/milestone/41", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/41/labels", "id": 9147869, "node_id": "MI_kwDOAALxiM4Ai5Xd", "number": 41, "title": "v5.1.1", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "closed", "created_at": "2023-03-11T21:57:23Z", "updated_at": "2023-03-16T12:37:49Z", "due_on": null, "closed_at": "2023-03-16T12:37:49Z"}, "comments": 2, "created_at": "2023-03-11T21:57:02Z", "updated_at": "2023-03-12T14:34:00Z", "closed_at": "2023-03-12T14:24:34Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6591", "html_url": "https://github.com/pymc-devs/pymc/pull/6591", "diff_url": "https://github.com/pymc-devs/pymc/pull/6591.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6591.patch", "merged_at": "2023-03-12T14:24:34Z"}, "body": "Fixes a bug in `warn_treedepth` that was introduced in code refactoring PR #6192.\r\n\r\nCloses #6587\r\n\r\n**Checklist**\r\n+ [x] Explain important implementation details \ud83d\udc46\r\n+ [x] Make sure that [the pre-commit linting/style checks pass](https://docs.pymc.io/en/latest/contributing/python_style.html).\r\n+ [x] Link relevant issues (preferably in [nice commit messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html))\r\n+ [x] Are the changes covered by tests and docstrings?\r\n+ [x] Fill out the short summary sections \ud83d\udc47\r\n\r\n## Bugfixes\r\n- Fixes incorrect warnings about reaching max treedepth.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6591/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6591/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6587", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6587/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6587/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6587/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6587", "id": 1620061619, "node_id": "I_kwDOAALxiM5gkC2z", "number": 6587, "title": "`max_treedepth` warning in `pm.sample()`?", "user": {"login": "larryshamalama", "id": 24764859, "node_id": "MDQ6VXNlcjI0NzY0ODU5", "avatar_url": "https://avatars.githubusercontent.com/u/24764859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larryshamalama", "html_url": "https://github.com/larryshamalama", "followers_url": "https://api.github.com/users/larryshamalama/followers", "following_url": "https://api.github.com/users/larryshamalama/following{/other_user}", "gists_url": "https://api.github.com/users/larryshamalama/gists{/gist_id}", "starred_url": "https://api.github.com/users/larryshamalama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larryshamalama/subscriptions", "organizations_url": "https://api.github.com/users/larryshamalama/orgs", "repos_url": "https://api.github.com/users/larryshamalama/repos", "events_url": "https://api.github.com/users/larryshamalama/events{/privacy}", "received_events_url": "https://api.github.com/users/larryshamalama/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2023-03-11T16:12:27Z", "updated_at": "2023-03-12T14:24:35Z", "closed_at": "2023-03-12T14:24:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Description\n\nRunning the following simple model:\r\n\r\n```python\r\nimport pymc as pm\r\n\r\nwith pm.Model() as model:\r\n    mu = pm.Normal(\"mu\", 0., 5.)\r\n    x = pm.Normal(\"x\", mu, 3.)\r\n    \r\n    trace = pm.sample()\r\n```\r\n\r\nyields the following warning message:\r\n\r\n```\r\nSampling 4 chains for 1_000 tune and 1_000 draw iterations (4_000 + 4_000 draws total) took 1 seconds.\r\nChain <xarray.DataArray 'chain' ()>\r\narray(0)\r\nCoordinates:\r\n    chain    int64 0 reached the maximum tree depth. Increase `max_treedepth`, increase `target_accept` or reparameterize.\r\nChain <xarray.DataArray 'chain' ()>\r\narray(1)\r\nCoordinates:\r\n    chain    int64 1 reached the maximum tree depth. Increase `max_treedepth`, increase `target_accept` or reparameterize.\r\nChain <xarray.DataArray 'chain' ()>\r\narray(2)\r\nCoordinates:\r\n    chain    int64 2 reached the maximum tree depth. Increase `max_treedepth`, increase `target_accept` or reparameterize.\r\nChain <xarray.DataArray 'chain' ()>\r\narray(3)\r\nCoordinates:\r\n    chain    int64 3 reached the maximum tree depth. Increase `max_treedepth`, increase `target_accept` or reparameterize.\r\n```\r\n\r\nIs this behaviour due to a recent addition to the codebase?", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6587/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6573", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6573/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6573/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6573/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6573", "id": 1613330887, "node_id": "PR_kwDOAALxiM5LeCS6", "number": 6573, "title": "Fix bug in transformed scan variables", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3561358894, "node_id": "LA_kwDOAALxiM7URgYu", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/logprob-related", "name": "logprob-related", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-03-07T12:19:42Z", "updated_at": "2023-03-07T17:46:21Z", "closed_at": "2023-03-07T17:46:21Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6573", "html_url": "https://github.com/pymc-devs/pymc/pull/6573", "diff_url": "https://github.com/pymc-devs/pymc/pull/6573.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6573.patch", "merged_at": "2023-03-07T17:46:21Z"}, "body": "This would happen when scans have different outputs with mixed transforms (e.g., None and LogOddsTransform), as it was using only the transform of the last variable, due to a typo", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6573/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6541", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6541/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6541/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6541/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6541", "id": 1593079392, "node_id": "I_kwDOAALxiM5e9HZg", "number": 6541, "title": "Installation of PyMC3 to Windows 11 using Spyder", "user": {"login": "Dresse97", "id": 125960329, "node_id": "U_kgDOB4IAiQ", "avatar_url": "https://avatars.githubusercontent.com/u/125960329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dresse97", "html_url": "https://github.com/Dresse97", "followers_url": "https://api.github.com/users/Dresse97/followers", "following_url": "https://api.github.com/users/Dresse97/following{/other_user}", "gists_url": "https://api.github.com/users/Dresse97/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dresse97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dresse97/subscriptions", "organizations_url": "https://api.github.com/users/Dresse97/orgs", "repos_url": "https://api.github.com/users/Dresse97/repos", "events_url": "https://api.github.com/users/Dresse97/events{/privacy}", "received_events_url": "https://api.github.com/users/Dresse97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-02-21T08:57:04Z", "updated_at": "2023-02-21T09:47:28Z", "closed_at": "2023-02-21T09:47:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the issue:\n\nHi\r\nI am trying to install PyMC3 for studying purpose (Bayesian Updating) but cannot make it work.\r\n\r\nI would like to use PyMC3 with Spyder and install it using Anaconda3.\r\n\r\nDoes anyone have a complete installation guide or maybe some ideas why it might work?\r\n\r\nI have tried many different procedures posted online and controlled the installation using their examples.\r\n\r\nI am new into this environment, so please help me.\n\n### Reproduceable code example:\n\n```python\n.\n```\n\n\n### Error message:\n\n_No response_\n\n### PyMC version information:\n\nPyMC3\n\n### Context for the issue:\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6541/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6484", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6484/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6484/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6484/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6484", "id": 1558731778, "node_id": "I_kwDOAALxiM5c6FwC", "number": 6484, "title": "BUG: Drawing samples with a single chain logs an incorrect warning and produces incorrect summary statistics", "user": {"login": "laurence-kobold", "id": 93557914, "node_id": "U_kgDOBZOUmg", "avatar_url": "https://avatars.githubusercontent.com/u/93557914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laurence-kobold", "html_url": "https://github.com/laurence-kobold", "followers_url": "https://api.github.com/users/laurence-kobold/followers", "following_url": "https://api.github.com/users/laurence-kobold/following{/other_user}", "gists_url": "https://api.github.com/users/laurence-kobold/gists{/gist_id}", "starred_url": "https://api.github.com/users/laurence-kobold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laurence-kobold/subscriptions", "organizations_url": "https://api.github.com/users/laurence-kobold/orgs", "repos_url": "https://api.github.com/users/laurence-kobold/repos", "events_url": "https://api.github.com/users/laurence-kobold/events{/privacy}", "received_events_url": "https://api.github.com/users/laurence-kobold/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-01-26T20:24:48Z", "updated_at": "2023-01-26T20:49:46Z", "closed_at": "2023-01-26T20:49:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the issue:\n\nCreating an `InferenceData` from a `MultiTrace` with a single chain logs an incorrect warning and produces an inference data with incorrect summary statistics. For instance, if the trace has 500 samples, the following warning will be logged:\r\n\r\n```UserWarning: More chains (500) than draws (1). Passed array should have shape (chains, draws, *shape)```\r\n\r\nThe summary statistics will have 500 chains. The data for all chains but the first will be NaNs\r\n\n\n### Reproduceable code example:\n\n```python\nimport pymc as pm\r\nimport numpy as np\r\n\r\n# Generate data\r\nrng = np.random.default_rng(8927)\r\nalpha, sigma = 1, 1\r\nbeta = [1, 2.5]\r\nsize = 100\r\nX1 = np.random.randn(size)\r\nX2 = np.random.randn(size) * 0.2\r\nY = alpha + beta[0] * X1 + beta[1] * X2 + rng.normal(size=size) * sigma\r\n\r\nmodel = pm.Model()\r\nwith model:\r\n    # Set up model\r\n    alpha = pm.Normal(\"alpha\", mu=0, sigma=10)\r\n    beta = pm.Normal(\"beta\", mu=0, sigma=10, shape=2)\r\n    sigma = pm.HalfNormal(\"sigma\", sigma=1)\r\n    mu = alpha + beta[0] * X1 + beta[1] * X2\r\n    pm.Normal(\"Y_obs\", mu=mu, sigma=sigma, observed=Y)\r\n\r\n    # Draw samples without using dask\r\n    idata = pm.sample(draws=50, tune=50, chains=1, cores=1)\n```\n\n\n### Error message:\n\n_No response_\n\n### PyMC version information:\n\npymc: 5.0.2\r\npytensor: 2.9.1\r\npython: 3.9.16\r\nOS: Debian 11 (Bullseye)\r\npymc was installed via pip\n\n### Context for the issue:\n\nThe incorrect warning and sample statistics are misleading to users. The incorrect sample statistics also break some of the `arviz` functions that are used to analyze the inference data (e.g. `plot_trace`).\r\n\r\nI realize that drawing samples for a single chain is not generally advisable, but this is actually part of a distributed inference workflow allowing me to draw samples using multiple machines. The workflow is as follows:\r\n- Create N tasks to draw samples from a single chain\r\n- Distribute those tasks across my machines (in my case, using `dask`)\r\n- Combine the results of the tasks using `az.concat`", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6484/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6481", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6481/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6481/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6481/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6481", "id": 1557392697, "node_id": "I_kwDOAALxiM5c0-05", "number": 6481, "title": "BUG: Error setting initval for parameters in the custom likelihood as one integer or a float. ", "user": {"login": "AisOmar", "id": 41978201, "node_id": "MDQ6VXNlcjQxOTc4MjAx", "avatar_url": "https://avatars.githubusercontent.com/u/41978201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AisOmar", "html_url": "https://github.com/AisOmar", "followers_url": "https://api.github.com/users/AisOmar/followers", "following_url": "https://api.github.com/users/AisOmar/following{/other_user}", "gists_url": "https://api.github.com/users/AisOmar/gists{/gist_id}", "starred_url": "https://api.github.com/users/AisOmar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AisOmar/subscriptions", "organizations_url": "https://api.github.com/users/AisOmar/orgs", "repos_url": "https://api.github.com/users/AisOmar/repos", "events_url": "https://api.github.com/users/AisOmar/events{/privacy}", "received_events_url": "https://api.github.com/users/AisOmar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-01-25T23:10:15Z", "updated_at": "2023-01-26T20:24:56Z", "closed_at": "2023-01-26T20:24:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the issue:\n\nI am using pymc to create a Wiener First Passage Time Distribution. I use 5 different parameters in the model - v ,sv, a, z, t. The model fails when I set an initval for each parameter as one integer or a float.  \r\n\r\nfor example: v = pm.Uniform(\"v\", -3.0, 3.0, initval=1)\r\n\r\nThe model run successfully when I do not define initval:\r\n\r\nfor example: v = pm.Uniform(\"v\", -3.0, 3.0)\r\n\n\n### Reproduceable code example:\n\n```python\nimport pytensor\r\nimport pytensor.tensor as pt\r\nimport pymc as pm\r\n\r\nfrom hssm import wfpt\r\n\r\n\r\npytensor.config.floatX = \"float32\"\r\n\r\nwith pm.Model() as m_angle:\r\n    v = pm.Uniform(\"v\", -3.0, 3.0, initval=1)\r\n    sv = pm.Uniform(\"sv\", 0.0, 1.2, initval=0.5)\r\n    a = pm.Uniform(\"a\", 2.0, 3.5, initval=2)\r\n    z = pm.Uniform(\"z\", 0.1, 0.9, initval=0.5)\r\n    t = pm.Uniform(\"t\", 0.0, 2.0, initval=0.3)\r\n\r\n    rt = WFPT_base(\r\n        name=\"rt\",\r\n        v=v,\r\n        sv=sv,\r\n        a=a,\r\n        z=z,\r\n        t=t,\r\n        observed=obs,\r\n    )\r\n\r\n    trace_angle_ddm_base = pm.sample(cores=2, draws=500, tune=500, mp_ctx=\"forkserver\")\n```\n\n\n### Error message:\n\n```shell\n---------------------------------------------------------------------------\r\nSamplingError                             Traceback (most recent call last)\r\n/var/folders/l4/435hd9s11dg80p3_94yq83qh0000gq/T/ipykernel_33781/1751249033.py in <module>\r\n     19 \r\n     20     # setting mp_ctx to \"forkserver\" fixes parallel sampling on M1 Macs\r\n---> 21     trace_angle_ddm_base = pm.sample(cores=2, draws=500, tune=500, mp_ctx=\"forkserver\")\r\n\r\n~/opt/anaconda3/lib/python3.9/site-packages/pymc/sampling/mcmc.py in sample(draws, step, init, n_init, initvals, trace, chains, cores, tune, progressbar, model, random_seed, discard_tuned_samples, compute_convergence_checks, callback, jitter_max_retries, return_inferencedata, keep_warning_stat, idata_kwargs, mp_ctx, **kwargs)\r\n    479     # One final check that shapes and logps at the starting points are okay.\r\n    480     for ip in initial_points:\r\n--> 481         model.check_start_vals(ip)\r\n    482         _check_start_shape(model, ip)\r\n    483 \r\n\r\n~/opt/anaconda3/lib/python3.9/site-packages/pymc/model.py in check_start_vals(self, start)\r\n   1766 \r\n   1767             if not all(np.isfinite(v) for v in initial_eval.values()):\r\n-> 1768                 raise SamplingError(\r\n   1769                     \"Initial evaluation of model at starting point failed!\\n\"\r\n   1770                     f\"Starting values:\\n{elem}\\n\\n\"\r\n\r\nSamplingError: Initial evaluation of model at starting point failed!\r\nStarting values:\r\n{'v_interval__': array(-0.09153509, dtype=float32), 'sv_interval__': array(-0.08268976, dtype=float32), 'a_interval__': array(-inf, dtype=float32), 'z_interval__': array(-0.88855255, dtype=float32), 't_interval__': array(-0.7660481, dtype=float32)}\r\n\r\nInitial evaluation results:\r\n{'v': -1.39, 'sv': -1.39, 'a': nan, 'z': -1.58, 't': -1.53, 'rt': -2999.04}\n```\n\n\n### PyMC version information:\n\npymc version: 5.0.1\r\npytensor version: 2.8.11\r\nPymc was installed using pip\n\n### Context for the issue:\n\nI think some of the users of WFPT would like to have the option to set initval value for those parameters. ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6481/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6471", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6471/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6471/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6471/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6471", "id": 1552919605, "node_id": "I_kwDOAALxiM5cj6w1", "number": 6471, "title": "BUG: Error calculating LOO score in pymc v4.4.0", "user": {"login": "rpdunne", "id": 52535839, "node_id": "MDQ6VXNlcjUyNTM1ODM5", "avatar_url": "https://avatars.githubusercontent.com/u/52535839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpdunne", "html_url": "https://github.com/rpdunne", "followers_url": "https://api.github.com/users/rpdunne/followers", "following_url": "https://api.github.com/users/rpdunne/following{/other_user}", "gists_url": "https://api.github.com/users/rpdunne/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpdunne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpdunne/subscriptions", "organizations_url": "https://api.github.com/users/rpdunne/orgs", "repos_url": "https://api.github.com/users/rpdunne/repos", "events_url": "https://api.github.com/users/rpdunne/events{/privacy}", "received_events_url": "https://api.github.com/users/rpdunne/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-01-23T11:17:25Z", "updated_at": "2023-01-23T16:43:56Z", "closed_at": "2023-01-23T16:43:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the issue:\n\nAs seen in the [documentation ](https://www.pymc.io/projects/docs/en/v4.4.0/learn/core_notebooks/model_comparison.html), there is an error calculating the loo score from an arviz.InferenceData trace?\r\n\r\nIf v4.4.0 is not stable, which version do you recommend to use?\n\n### Reproduceable code example:\n\n```python\nimport arviz as az\r\nimport numpy as np\r\nimport pymc as pm\r\n\r\ny = np.array([28, 8, -3, 7, -1, 1, 18, 12])\r\nsigma = np.array([15, 10, 16, 11, 9, 11, 10, 18])\r\nJ = len(y)\r\n\r\nwith pm.Model() as pooled:\r\n\r\n    # Latent pooled effect size\r\n    mu = pm.Normal(\"mu\", 0, sigma=1e6)\r\n\r\n    obs = pm.Normal(\"obs\", mu, sigma=sigma, observed=y)\r\n\r\n    trace_p = pm.sample(2000)\r\n\r\n\r\npooled_loo = az.loo(trace_p, pooled)\r\n\r\npooled_loo.loo\n```\n\n\n### Error message:\n\n```shell\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\nCell In [9], line 3\r\n      1 pooled_loo = az.loo(trace_p, pooled)\r\n----> 3 pooled_loo.loo\r\n\r\nFile ~/checkouts/readthedocs.org/user_builds/pymc/conda/v4.4.0/lib/python3.11/site-packages/pandas/core/generic.py:5902, in NDFrame.__getattr__(self, name)\r\n   5895 if (\r\n   5896     name not in self._internal_names_set\r\n   5897     and name not in self._metadata\r\n   5898     and name not in self._accessors\r\n   5899     and self._info_axis._can_hold_identifiers_and_holds_name(name)\r\n   5900 ):\r\n   5901     return self[name]\r\n-> 5902 return object.__getattribute__(self, name)\r\n\r\nAttributeError: 'ELPDData' object has no attribute 'loo'\n```\n\n\n### PyMC version information:\n\nPyMC3 v4.4.0\r\nWindows\r\nPip installed\n\n### Context for the issue:\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6471/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6470", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6470/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6470/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6470/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6470", "id": 1552840305, "node_id": "PR_kwDOAALxiM5IUDoU", "number": 6470, "title": "Enforce `dims` elements to be strings", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 4289460127, "node_id": "LA_kwDOAALxiM7_q_ef", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/major", "name": "major", "color": "D93F0B", "default": false, "description": "Include in major changes release notes section"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-01-23T10:20:32Z", "updated_at": "2023-01-25T09:47:55Z", "closed_at": "2023-01-25T09:47:55Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6470", "html_url": "https://github.com/pymc-devs/pymc/pull/6470", "diff_url": "https://github.com/pymc-devs/pymc/pull/6470.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6470.patch", "merged_at": "2023-01-25T09:47:55Z"}, "body": "I think there was a confusion introduced in https://github.com/pymc-devs/pymc/commit/64e63d8ac83586848c2a997844367f4f61641ebb\r\n\r\nUnless I am missing something, it's not possible to have arbitrary missing dims. Only works if missing dims are at the rightmost positions.\r\n\r\nCloses #6379", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6470/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6467", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6467/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6467/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6467/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6467", "id": 1552246201, "node_id": "I_kwDOAALxiM5chWW5", "number": 6467, "title": "BUG:  Can not use JAX samplers with `GaussianRandomWalk` in pymc 5 (but was ok in pymc 4)", "user": {"login": "juanitorduz", "id": 22996444, "node_id": "MDQ6VXNlcjIyOTk2NDQ0", "avatar_url": "https://avatars.githubusercontent.com/u/22996444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juanitorduz", "html_url": "https://github.com/juanitorduz", "followers_url": "https://api.github.com/users/juanitorduz/followers", "following_url": "https://api.github.com/users/juanitorduz/following{/other_user}", "gists_url": "https://api.github.com/users/juanitorduz/gists{/gist_id}", "starred_url": "https://api.github.com/users/juanitorduz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juanitorduz/subscriptions", "organizations_url": "https://api.github.com/users/juanitorduz/orgs", "repos_url": "https://api.github.com/users/juanitorduz/repos", "events_url": "https://api.github.com/users/juanitorduz/events{/privacy}", "received_events_url": "https://api.github.com/users/juanitorduz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-01-22T19:11:53Z", "updated_at": "2023-01-22T19:20:50Z", "closed_at": "2023-01-22T19:16:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the issue:\r\n\r\nI am not able to use ` pm.sampling_jax.sample_numpyro_nuts` in pymc 5.0.0 >= with a `GaussianRandomWalk`. I can no longer replicate the model presented in https://juanitorduz.github.io/bikes_pymc/. \r\n\r\n### Reproduceable code example:\r\n\r\n```python\r\nimport numpy as np\r\nimport pandas as pd\r\nimport pymc as pm\r\nimport pymc.sampling_jax\r\nfrom pymc.distributions.continuous import Exponential\r\nfrom sklearn.preprocessing import StandardScaler\r\nimport seaborn as sns\r\n\r\n\r\ndata_path = \"https://raw.githubusercontent.com/christophM/interpretable-ml-book/master/data/bike.csv\"\r\n\r\nraw_data_df = pd.read_csv(data_path)\r\n\r\ndata_df = raw_data_df.copy().assign(\r\n    date=pd.date_range(\r\n        start=pd.to_datetime(\"2011-01-01\"), end=pd.to_datetime(\"2012-12-31\"), freq=\"D\"\r\n    )\r\n)\r\n\r\ntarget = \"cnt\"\r\ntarget_scaled = f\"{target}_scaled\"\r\n\r\nendog_scaler = StandardScaler()\r\nexog_scaler = StandardScaler()\r\n\r\n\r\ndata_df[target_scaled] = endog_scaler.fit_transform(X=data_df[[target]])\r\ndata_df[[\"temp_scaled\", \"hum_scaled\", \"windspeed_scaled\"]] = exog_scaler.fit_transform(\r\n    X=data_df[[\"temp\", \"hum\", \"windspeed\"]]\r\n)\r\n\r\n\r\nn = data_df.shape[0]\r\n# target\r\ncnt = data_df[target].to_numpy()\r\ncnt_scaled = data_df[target_scaled].to_numpy()\r\n# date feature\r\ndate = data_df[\"date\"].to_numpy()\r\n# model regressors\r\ntemp_scaled = data_df[\"temp_scaled\"].to_numpy()\r\nhum_scaled = data_df[\"hum_scaled\"].to_numpy()\r\nwindspeed_scaled = data_df[\"windspeed_scaled\"].to_numpy()\r\nholiday_idx, holiday = data_df[\"holiday\"].factorize(sort=True)\r\nworkingday_idx, workingday = data_df[\"workingday\"].factorize(sort=True)\r\nweathersit_idx, weathersit = data_df[\"weathersit\"].factorize(sort=True)\r\nt = data_df[\"days_since_2011\"].to_numpy() / data_df[\"days_since_2011\"].max()\r\n\r\ncoords = {\r\n    \"date\": date,\r\n    \"workingday\": workingday,\r\n    \"weathersit\": weathersit,\r\n}\r\n\r\nwith pm.Model(coords=coords) as model:\r\n\r\n    # --- priors ---\r\n    intercept = pm.Normal(name=\"intercept\", mu=0, sigma=2)\r\n    b_hum = pm.Normal(name=\"b_hum\", mu=0, sigma=2)\r\n    b_windspeed = pm.Normal(name=\"b_windspeed\", mu=0, sigma=2)\r\n    b_workingday = pm.Normal(name=\"b_workingday\", mu=0, sigma=2, dims=\"workingday\")\r\n    b_weathersit = pm.Normal(name=\"b_weathersit\", mu=0, sigma=2, dims=\"weathersit\")\r\n    b_t = pm.Normal(name=\"b_t\", mu=0, sigma=3)\r\n    sigma_slopes = pm.HalfNormal(name=\"sigma_slope\", sigma=0.5)\r\n    nu = pm.Gamma(name=\"nu\", alpha=8, beta=2)\r\n    sigma = pm.HalfNormal(name=\"sigma\", sigma=2)\r\n\r\n    # --- model parametrization ---\r\n    slopes = pm.GaussianRandomWalk(\r\n        name=\"slopes\",\r\n        sigma=sigma_slopes,\r\n        init_dist=Exponential.dist(lam=1.0),\r\n        dims=\"date\",\r\n    )\r\n    mu = pm.Deterministic(\r\n        name=\"mu\",\r\n        var=(\r\n            intercept\r\n            + b_t * t\r\n            + slopes * temp_scaled\r\n            + b_hum * hum_scaled\r\n            + b_windspeed * windspeed_scaled\r\n            + b_workingday[workingday_idx]\r\n            + b_weathersit[weathersit_idx]\r\n        ),\r\n        dims=\"date\",\r\n    )\r\n\r\n    # --- likelihood ---\r\n    likelihood = pm.StudentT(\r\n        name=\"likelihood\", mu=mu, nu=nu, sigma=sigma, dims=\"date\", observed=cnt_scaled\r\n    )\r\n\r\n\r\nwith model:\r\n    idata = pm.sampling_jax.sample_numpyro_nuts(\r\n        target_accept=0.8, draws=1000, chains=4\r\n    )\r\n    posterior_predictive = pm.sample_posterior_predictive(trace=idata)\r\n```\r\n\r\n\r\n### Error message:\r\n\r\n```shell\r\nNotImplementedError                       Traceback (most recent call last)\r\nCell In [1], line 95\r\n     89     likelihood = pm.StudentT(\r\n     90         name=\"likelihood\", mu=mu, nu=nu, sigma=sigma, dims=\"date\", observed=cnt_scaled\r\n     91     )\r\n     94 with model:\r\n---> 95     idata = pm.sampling_jax.sample_numpyro_nuts(\r\n     96         target_accept=0.8, draws=1000, chains=4\r\n     97     )\r\n     98     posterior_predictive = pm.sample_posterior_predictive(trace=idata)\r\n\r\nFile ~/opt/anaconda3/envs/pymmmc_env/lib/python3.8/site-packages/pymc/sampling/jax.py:614, in sample_numpyro_nuts(draws, tune, chains, target_accept, random_seed, initvals, model, var_names, progressbar, keep_untransformed, chain_method, postprocessing_backend, postprocessing_chunks, idata_kwargs, nuts_kwargs)\r\n    605 print(\"Compiling...\", file=sys.stdout)\r\n    607 init_params = _get_batched_jittered_initial_points(\r\n    608     model=model,\r\n    609     chains=chains,\r\n    610     initvals=initvals,\r\n    611     random_seed=random_seed,\r\n    612 )\r\n--> 614 logp_fn = get_jaxified_logp(model, negative_logp=False)\r\n    616 nuts_kwargs = _update_numpyro_nuts_kwargs(nuts_kwargs)\r\n    617 nuts_kernel = NUTS(\r\n    618     potential_fn=logp_fn,\r\n    619     target_accept_prob=target_accept,\r\n    620     **nuts_kwargs,\r\n    621 )\r\n\r\nFile ~/opt/anaconda3/envs/pymmmc_env/lib/python3.8/site-packages/pymc/sampling/jax.py:118, in get_jaxified_logp(model, negative_logp)\r\n    116 if not negative_logp:\r\n    117     model_logp = -model_logp\r\n--> 118 logp_fn = get_jaxified_graph(inputs=model.value_vars, outputs=[model_logp])\r\n    120 def logp_fn_wrap(x):\r\n    121     return logp_fn(*x)[0]\r\n\r\nFile ~/opt/anaconda3/envs/pymmmc_env/lib/python3.8/site-packages/pymc/sampling/jax.py:111, in get_jaxified_graph(inputs, outputs)\r\n    108 mode.JAX.optimizer.rewrite(fgraph)\r\n    110 # We now jaxify the optimized fgraph\r\n--> 111 return jax_funcify(fgraph)\r\n\r\nFile ~/opt/anaconda3/envs/pymmmc_env/lib/python3.8/functools.py:875, in singledispatch.<locals>.wrapper(*args, **kw)\r\n    871 if not args:\r\n    872     raise TypeError(f'{funcname} requires at least '\r\n    873                     '1 positional argument')\r\n--> 875 return dispatch(args[0].__class__)(*args, **kw)\r\n...\r\n     37 def jax_funcify(op, node=None, storage_map=None, **kwargs):\r\n     38     \"\"\"Create a JAX compatible function from an PyTensor `Op`.\"\"\"\r\n---> 39     raise NotImplementedError(f\"No JAX conversion for the given `Op`: {op}\")\r\n\r\nNotImplementedError: No JAX conversion for the given `Op`: Split{2}\r\n```\r\n\r\n\r\n### PyMC version information:\r\n\r\n```python\r\nimport pymc\r\nimport pytensor\r\nimport jax\r\n\r\nprint (pymc.__version__)  - > 5.0.2\r\nprint (pytensor.__version__) -> 2.9.1\r\nprint (jax.__version__) -> 3.24\r\n```\r\n\r\n### Context for the issue:\r\n\r\n_No response_", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6467/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6466", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6466/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6466/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6466/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6466", "id": 1552039500, "node_id": "I_kwDOAALxiM5cgj5M", "number": 6466, "title": "BUG: Untagged PyMC version", "user": {"login": "SangamSwadiK", "id": 35230623, "node_id": "MDQ6VXNlcjM1MjMwNjIz", "avatar_url": "https://avatars.githubusercontent.com/u/35230623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SangamSwadiK", "html_url": "https://github.com/SangamSwadiK", "followers_url": "https://api.github.com/users/SangamSwadiK/followers", "following_url": "https://api.github.com/users/SangamSwadiK/following{/other_user}", "gists_url": "https://api.github.com/users/SangamSwadiK/gists{/gist_id}", "starred_url": "https://api.github.com/users/SangamSwadiK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SangamSwadiK/subscriptions", "organizations_url": "https://api.github.com/users/SangamSwadiK/orgs", "repos_url": "https://api.github.com/users/SangamSwadiK/repos", "events_url": "https://api.github.com/users/SangamSwadiK/events{/privacy}", "received_events_url": "https://api.github.com/users/SangamSwadiK/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2023-01-22T08:15:46Z", "updated_at": "2023-02-05T08:06:08Z", "closed_at": "2023-02-05T08:06:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the issue:\n\nHi, I'm following the official guide to contributing to PyMC from [https://docs.pymc.io/en/latest/contributing/pr_tutorial.html](https://docs.pymc.io/en/latest/contributing/pr_tutorial.html).\r\n\r\n`PyMC v4.1` got installed the first time I tried, but when I redid the entire thing, This `0+untagged.9350.g310ebaf` version came up. \r\nI'm on Miniconda as suggested on the pr_tutorial guide.\r\nAny suggestions on helping me to install the v5 would be helpful.\r\n\r\nThanks !\n\n### Reproduceable code example:\n\n```python\nimport pymc as pm\n```\n\n\n### Error message:\n\n```shell\nPython 3.11.0 | packaged by conda-forge | (main, Jan 14 2023, 12:27:40) [GCC 11.3.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pymc as pm\r\n>>> pm.__version__\r\n'0+untagged.9350.g310ebaf'\n```\n\n\n### PyMC version information:\n\n>>> pm.__version__\r\n'0+untagged.9350.g310ebaf'\n\n### Context for the issue:\n\nAttaching a snippet of conda list\r\n![image](https://user-images.githubusercontent.com/35230623/213906577-11aaf5d9-8a84-4e33-972c-6c1b17ac0468.png)\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6466/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6464", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6464/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6464/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6464/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6464", "id": 1551670289, "node_id": "I_kwDOAALxiM5cfJwR", "number": 6464, "title": "BUG: Rewrite failure due to: constant_folding in Microsoft Windows", "user": {"login": "helios1014", "id": 109540069, "node_id": "U_kgDOBody5Q", "avatar_url": "https://avatars.githubusercontent.com/u/109540069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/helios1014", "html_url": "https://github.com/helios1014", "followers_url": "https://api.github.com/users/helios1014/followers", "following_url": "https://api.github.com/users/helios1014/following{/other_user}", "gists_url": "https://api.github.com/users/helios1014/gists{/gist_id}", "starred_url": "https://api.github.com/users/helios1014/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/helios1014/subscriptions", "organizations_url": "https://api.github.com/users/helios1014/orgs", "repos_url": "https://api.github.com/users/helios1014/repos", "events_url": "https://api.github.com/users/helios1014/events{/privacy}", "received_events_url": "https://api.github.com/users/helios1014/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-01-21T03:03:43Z", "updated_at": "2023-01-24T16:40:31Z", "closed_at": "2023-01-24T16:40:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the issue:\r\n\r\nWhen I runt the following I receive an error that starts with ERROR (pytensor.graph.rewriting.basic): Rewrite failure due to: constant_folding\r\n\r\n### Reproduceable code example:\r\n\r\n```python\r\nimport pymc as pm\r\n\r\nVAGUE_PRIOR_SD = 5\r\nwith pm.Model() as weibull_model:\r\n    \u03b2 = pm.Normal('\u03b2', 0., VAGUE_PRIOR_SD, shape=(1,1))\r\n```\r\n\r\n\r\n### Error message:\r\n\r\n```shell\r\nERROR (pytensor.graph.rewriting.basic): Rewrite failure due to: constant_folding\r\nERROR (pytensor.graph.rewriting.basic): node: Subtensor{int64}(TensorConstant{(2,) of 1}, ScalarConstant{0})\r\nERROR (pytensor.graph.rewriting.basic): TRACEBACK:\r\nERROR (pytensor.graph.rewriting.basic): Traceback (most recent call last):\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\graph\\rewriting\\basic.py\", line 1933, in process_node\r\n    replacements = node_rewriter.transform(fgraph, node)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\graph\\rewriting\\basic.py\", line 1092, in transform\r\n    return self.fn(fgraph, node)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\tensor\\rewriting\\basic.py\", line 1141, in constant_folding\r\n    thunk = node.op.make_thunk(node, storage_map, compute_map, no_recycling=[])\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\op.py\", line 131, in make_thunk\r\n    return self.make_c_thunk(node, storage_map, compute_map, no_recycling)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\op.py\", line 96, in make_c_thunk\r\n    outputs = cl.make_thunk(\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\basic.py\", line 1202, in make_thunk\r\n    cthunk, module, in_storage, out_storage, error_storage = self.__compile__(\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\basic.py\", line 1122, in __compile__\r\n    thunk, module = self.cthunk_factory(\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\basic.py\", line 1647, in cthunk_factory\r\n    module = cache.module_from_key(key=key, lnk=self)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\cmodule.py\", line 1231, in module_from_key\r\n    module = lnk.compile_cmodule(location)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\basic.py\", line 1546, in compile_cmodule\r\n    module = c_compiler.compile_str(\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\cmodule.py\", line 2641, in compile_str\r\n    raise CompileError(\r\npytensor.link.c.exceptions.CompileError: Compilation failed (return status=1):\r\n\"C:\\Users\\*******\\Anaconda3\\Library\\mingw-w64\\bin\\g++.exe\" -shared -g -O3 -fno-math-errno -Wno-unused-label -Wno-unused-variable -Wno-write-strings -Wno-c++11-narrowing -fno-exceptions -fno-unwind-tables -fno-asynchronous-unwind-tables -DNPY_NO_DEPRECATED_API=NPY_1_7_API_VERSION -m64 -DMS_WIN64 -I\"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\numpy\\core\\include\" -I\"C:\\Users\\*******\\Anaconda3\\include\" -I\"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\c_code\" -L\"C:\\Users\\*******\\Anaconda3\\libs\" -L\"C:\\Users\\*******\\Anaconda3\" -o \"C:\\Users\\*******\\AppData\\Local\\PyTensor\\compiledir_Windows-10-10.0.19042-SP0-Intel64_Family_6_Model_165_Stepping_2_GenuineIntel-3.9.13-64\\tmpjl8s7h51\\m6fd1c484d580fa59c661a41ec3cabca2b3c7f6630a101cbab41b87c88570792c.pyd\" \"C:\\Users\\*******\\AppData\\Local\\PyTensor\\compiledir_Windows-10-10.0.19042-SP0-Intel64_Family_6_Model_165_Stepping_2_GenuineIntel-3.9.13-64\\tmpjl8s7h51\\mod.cpp\" \"C:\\Users\\*******\\Anaconda3\\python39.dll\"\r\n\r\n\r\n\r\nYou can find the C code in this temporary file: C:\\Users\\*******\\AppData\\Local\\Temp\\pytensor_compilation_error_bbcayvfc\r\nERROR (pytensor.graph.rewriting.basic): Rewrite failure due to: constant_folding\r\nERROR (pytensor.graph.rewriting.basic): node: Subtensor{int64}(TensorConstant{(2,) of 1}, ScalarConstant{1})\r\nERROR (pytensor.graph.rewriting.basic): TRACEBACK:\r\nERROR (pytensor.graph.rewriting.basic): Traceback (most recent call last):\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\graph\\rewriting\\basic.py\", line 1933, in process_node\r\n    replacements = node_rewriter.transform(fgraph, node)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\graph\\rewriting\\basic.py\", line 1092, in transform\r\n    return self.fn(fgraph, node)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\tensor\\rewriting\\basic.py\", line 1141, in constant_folding\r\n    thunk = node.op.make_thunk(node, storage_map, compute_map, no_recycling=[])\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\op.py\", line 131, in make_thunk\r\n    return self.make_c_thunk(node, storage_map, compute_map, no_recycling)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\op.py\", line 96, in make_c_thunk\r\n    outputs = cl.make_thunk(\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\basic.py\", line 1202, in make_thunk\r\n    cthunk, module, in_storage, out_storage, error_storage = self.__compile__(\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\basic.py\", line 1122, in __compile__\r\n    thunk, module = self.cthunk_factory(\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\basic.py\", line 1647, in cthunk_factory\r\n    module = cache.module_from_key(key=key, lnk=self)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\cmodule.py\", line 1231, in module_from_key\r\n    module = lnk.compile_cmodule(location)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\basic.py\", line 1546, in compile_cmodule\r\n    module = c_compiler.compile_str(\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\cmodule.py\", line 2641, in compile_str\r\n    raise CompileError(\r\npytensor.link.c.exceptions.CompileError: Compilation failed (return status=1):\r\n\"C:\\Users\\*******\\Anaconda3\\Library\\mingw-w64\\bin\\g++.exe\" -shared -g -O3 -fno-math-errno -Wno-unused-label -Wno-unused-variable -Wno-write-strings -Wno-c++11-narrowing -fno-exceptions -fno-unwind-tables -fno-asynchronous-unwind-tables -DNPY_NO_DEPRECATED_API=NPY_1_7_API_VERSION -m64 -DMS_WIN64 -I\"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\numpy\\core\\include\" -I\"C:\\Users\\*******\\Anaconda3\\include\" -I\"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\c_code\" -L\"C:\\Users\\*******\\Anaconda3\\libs\" -L\"C:\\Users\\*******\\Anaconda3\" -o \"C:\\Users\\*******\\AppData\\Local\\PyTensor\\compiledir_Windows-10-10.0.19042-SP0-Intel64_Family_6_Model_165_Stepping_2_GenuineIntel-3.9.13-64\\tmpuwfuavss\\m6fd1c484d580fa59c661a41ec3cabca2b3c7f6630a101cbab41b87c88570792c.pyd\" \"C:\\Users\\*******\\AppData\\Local\\PyTensor\\compiledir_Windows-10-10.0.19042-SP0-Intel64_Family_6_Model_165_Stepping_2_GenuineIntel-3.9.13-64\\tmpuwfuavss\\mod.cpp\" \"C:\\Users\\*******\\Anaconda3\\python39.dll\"\r\n\r\n\r\n\r\nYou can find the C code in this temporary file: C:\\Users\\*******\\AppData\\Local\\Temp\\pytensor_compilation_error_k_w_nit0\r\nERROR (pytensor.graph.rewriting.basic): Rewrite failure due to: constant_folding\r\nERROR (pytensor.graph.rewriting.basic): node: Subtensor{int64}(TensorConstant{(2,) of 1}, ScalarConstant{0})\r\nERROR (pytensor.graph.rewriting.basic): TRACEBACK:\r\nERROR (pytensor.graph.rewriting.basic): Traceback (most recent call last):\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\graph\\rewriting\\basic.py\", line 1933, in process_node\r\n    replacements = node_rewriter.transform(fgraph, node)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\graph\\rewriting\\basic.py\", line 1092, in transform\r\n    return self.fn(fgraph, node)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\tensor\\rewriting\\basic.py\", line 1141, in constant_folding\r\n    thunk = node.op.make_thunk(node, storage_map, compute_map, no_recycling=[])\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\op.py\", line 131, in make_thunk\r\n    return self.make_c_thunk(node, storage_map, compute_map, no_recycling)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\op.py\", line 96, in make_c_thunk\r\n    outputs = cl.make_thunk(\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\basic.py\", line 1202, in make_thunk\r\n    cthunk, module, in_storage, out_storage, error_storage = self.__compile__(\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\basic.py\", line 1122, in __compile__\r\n    thunk, module = self.cthunk_factory(\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\basic.py\", line 1647, in cthunk_factory\r\n    module = cache.module_from_key(key=key, lnk=self)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\cmodule.py\", line 1231, in module_from_key\r\n    module = lnk.compile_cmodule(location)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\basic.py\", line 1546, in compile_cmodule\r\n    module = c_compiler.compile_str(\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\cmodule.py\", line 2641, in compile_str\r\n    raise CompileError(\r\npytensor.link.c.exceptions.CompileError: Compilation failed (return status=1):\r\n\"C:\\Users\\*******\\Anaconda3\\Library\\mingw-w64\\bin\\g++.exe\" -shared -g -O3 -fno-math-errno -Wno-unused-label -Wno-unused-variable -Wno-write-strings -Wno-c++11-narrowing -fno-exceptions -fno-unwind-tables -fno-asynchronous-unwind-tables -DNPY_NO_DEPRECATED_API=NPY_1_7_API_VERSION -m64 -DMS_WIN64 -I\"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\numpy\\core\\include\" -I\"C:\\Users\\*******\\Anaconda3\\include\" -I\"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\c_code\" -L\"C:\\Users\\*******\\Anaconda3\\libs\" -L\"C:\\Users\\*******\\Anaconda3\" -o \"C:\\Users\\*******\\AppData\\Local\\PyTensor\\compiledir_Windows-10-10.0.19042-SP0-Intel64_Family_6_Model_165_Stepping_2_GenuineIntel-3.9.13-64\\tmpdx871k78\\m6fd1c484d580fa59c661a41ec3cabca2b3c7f6630a101cbab41b87c88570792c.pyd\" \"C:\\Users\\*******\\AppData\\Local\\PyTensor\\compiledir_Windows-10-10.0.19042-SP0-Intel64_Family_6_Model_165_Stepping_2_GenuineIntel-3.9.13-64\\tmpdx871k78\\mod.cpp\" \"C:\\Users\\*******\\Anaconda3\\python39.dll\"\r\n\r\n\r\n\r\nYou can find the C code in this temporary file: C:\\Users\\*******\\AppData\\Local\\Temp\\pytensor_compilation_error_mcdd9mb3\r\nERROR (pytensor.graph.rewriting.basic): Rewrite failure due to: constant_folding\r\nERROR (pytensor.graph.rewriting.basic): node: Subtensor{int64}(TensorConstant{(2,) of 1}, ScalarConstant{1})\r\nERROR (pytensor.graph.rewriting.basic): TRACEBACK:\r\nERROR (pytensor.graph.rewriting.basic): Traceback (most recent call last):\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\graph\\rewriting\\basic.py\", line 1933, in process_node\r\n    replacements = node_rewriter.transform(fgraph, node)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\graph\\rewriting\\basic.py\", line 1092, in transform\r\n    return self.fn(fgraph, node)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\tensor\\rewriting\\basic.py\", line 1141, in constant_folding\r\n    thunk = node.op.make_thunk(node, storage_map, compute_map, no_recycling=[])\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\op.py\", line 131, in make_thunk\r\n    return self.make_c_thunk(node, storage_map, compute_map, no_recycling)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\op.py\", line 96, in make_c_thunk\r\n    outputs = cl.make_thunk(\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\basic.py\", line 1202, in make_thunk\r\n    cthunk, module, in_storage, out_storage, error_storage = self.__compile__(\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\basic.py\", line 1122, in __compile__\r\n    thunk, module = self.cthunk_factory(\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\basic.py\", line 1647, in cthunk_factory\r\n    module = cache.module_from_key(key=key, lnk=self)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\cmodule.py\", line 1231, in module_from_key\r\n    module = lnk.compile_cmodule(location)\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\basic.py\", line 1546, in compile_cmodule\r\n    module = c_compiler.compile_str(\r\n  File \"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\cmodule.py\", line 2641, in compile_str\r\n    raise CompileError(\r\npytensor.link.c.exceptions.CompileError: Compilation failed (return status=1):\r\n\"C:\\Users\\*******\\Anaconda3\\Library\\mingw-w64\\bin\\g++.exe\" -shared -g -O3 -fno-math-errno -Wno-unused-label -Wno-unused-variable -Wno-write-strings -Wno-c++11-narrowing -fno-exceptions -fno-unwind-tables -fno-asynchronous-unwind-tables -DNPY_NO_DEPRECATED_API=NPY_1_7_API_VERSION -m64 -DMS_WIN64 -I\"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\numpy\\core\\include\" -I\"C:\\Users\\*******\\Anaconda3\\include\" -I\"C:\\Users\\*******\\Anaconda3\\lib\\site-packages\\pytensor\\link\\c\\c_code\" -L\"C:\\Users\\*******\\Anaconda3\\libs\" -L\"C:\\Users\\*******\\Anaconda3\" -o \"C:\\Users\\*******\\AppData\\Local\\PyTensor\\compiledir_Windows-10-10.0.19042-SP0-Intel64_Family_6_Model_165_Stepping_2_GenuineIntel-3.9.13-64\\tmpnoiakz49\\m6fd1c484d580fa59c661a41ec3cabca2b3c7f6630a101cbab41b87c88570792c.pyd\" \"C:\\Users\\*******\\AppData\\Local\\PyTensor\\compiledir_Windows-10-10.0.19042-SP0-Intel64_Family_6_Model_165_Stepping_2_GenuineIntel-3.9.13-64\\tmpnoiakz49\\mod.cpp\" \"C:\\Users\\*******\\Anaconda3\\python39.dll\"\r\n\r\n\r\n\r\nYou can find the C code in this temporary file: C:\\Users\\*******\\AppData\\Local\\Temp\\pytensor_compilation_error_amfyft2i\r\n```\r\n\r\n\r\n### PyMC version information:\r\n\r\n# packages in environment at C:\\Users\\wyoung1\\Anaconda3:\r\n#\r\n# Name                    Version                   Build  Channel\r\n_ipyw_jlab_nb_ext_conf    0.1.0            py39haa95532_0\r\naenum                     2.2.6              pyhd3deb0d_0    conda-forge\r\naesara                    2.8.9            py39h7171602_0    conda-forge\r\naesara-base               2.8.9            py39hcbf5309_0    conda-forge\r\naiohttp                   3.8.1            py39h2bbff1b_1\r\naiosignal                 1.2.0              pyhd3eb1b0_0\r\nalabaster                 0.7.12             pyhd3eb1b0_0\r\nanaconda                  2022.10                 py310_0\r\nanaconda-client           1.11.0           py39haa95532_0\r\nanaconda-navigator        2.3.2            py39haa95532_0\r\nanaconda-project          0.11.1           py39haa95532_0\r\nanyio                     3.5.0            py39haa95532_0\r\nappdirs                   1.4.4              pyhd3eb1b0_0\r\nargon2-cffi               21.3.0             pyhd3eb1b0_0\r\nargon2-cffi-bindings      21.2.0           py39h2bbff1b_0\r\narrow                     1.2.3            py39haa95532_0\r\narrow-cpp                 8.0.0            py39hbd6f097_0\r\narviz                     0.14.0             pyhd8ed1ab_0    conda-forge\r\nasn1crypto                1.4.0                      py_0\r\nastroid                   2.11.7           py39haa95532_0\r\nastropy                   5.1              py39h080aedc_0\r\nasync-timeout             4.0.2            py39haa95532_0\r\natomicwrites              1.4.0                      py_0\r\nattrs                     22.1.0           py39haa95532_0\r\nautomat                   20.2.0                     py_0\r\nautopep8                  1.6.0              pyhd3eb1b0_1\r\naws-c-common              0.4.57               ha925a31_1\r\naws-c-event-stream        0.1.6                hd77b12b_5\r\naws-checksums             0.1.9                ha925a31_0\r\naws-sdk-cpp               1.8.185              hd77b12b_0\r\nawswrangler               2.17.0             pyhd8ed1ab_0    conda-forge\r\nbabel                     2.11.0           py39haa95532_0\r\nbackcall                  0.2.0              pyhd3eb1b0_0\r\nbackoff                   2.2.1              pyhd8ed1ab_0    conda-forge\r\nbackports                 1.1                pyhd3eb1b0_0\r\nbackports.functools_lru_cache 1.6.4              pyhd3eb1b0_0\r\nbackports.tempfile        1.0                pyhd3eb1b0_1\r\nbackports.weakref         1.0.post1                  py_1\r\nbcrypt                    3.2.0            py39h2bbff1b_1\r\nbeautifulsoup4            4.11.1           py39haa95532_0\r\nbinaryornot               0.4.4              pyhd3eb1b0_1\r\nbitarray                  2.5.1            py39h2bbff1b_0\r\nbkcharts                  0.2              py39haa95532_1\r\nblack                     22.6.0           py39haa95532_0\r\nblas                      1.0                         mkl    anaconda\r\nbleach                    4.1.0              pyhd3eb1b0_0\r\nblosc                     1.21.0               h19a0ad4_1\r\nbokeh                     2.4.3            py39haa95532_0\r\nboost-cpp                 1.73.0              h2bbff1b_12\r\nboto3                     1.24.28          py39haa95532_0\r\nbotocore                  1.27.59          py39haa95532_0\r\nbottleneck                1.3.5            py39h080aedc_0\r\nbrotli                    1.0.9                h2bbff1b_7\r\nbrotli-bin                1.0.9                h2bbff1b_7\r\nbrotlipy                  0.7.0           py39h2bbff1b_1003\r\nbzip2                     1.0.8                he774522_0\r\nc-ares                    1.18.1               h2bbff1b_0\r\nca-certificates           2022.10.11           haa95532_0\r\ncachetools                4.2.2              pyhd3eb1b0_0\r\ncairo                     1.16.0               h1c23506_3\r\ncertifi                   2022.12.7        py39haa95532_0\r\ncffi                      1.15.1           py39h2bbff1b_3\r\ncfitsio                   3.470                h2bbff1b_7\r\ncftime                    1.5.1.1          py39h080aedc_0\r\nchardet                   4.0.0           py39haa95532_1003\r\ncharls                    2.2.0                h6c2663c_0\r\ncharset-normalizer        2.0.4              pyhd3eb1b0_0\r\nclick                     8.0.4            py39haa95532_0\r\ncloudpickle               2.0.0              pyhd3eb1b0_0\r\nclyent                    1.2.2            py39haa95532_1\r\ncolorama                  0.4.6            py39haa95532_0\r\ncolorcet                  3.0.1            py39haa95532_0\r\ncolorlog                  5.0.1            py39haa95532_1\r\ncomm                      0.1.2            py39haa95532_0\r\ncomtypes                  1.1.10          py39haa95532_1002\r\nconda                     22.11.1          py39haa95532_4\r\nconda-build               3.22.0           py39haa95532_0\r\nconda-content-trust       0.1.3            py39haa95532_0\r\nconda-env                 2.6.0                haa95532_1\r\nconda-pack                0.6.0              pyhd3eb1b0_0\r\nconda-package-handling    2.0.2            py39haa95532_0\r\nconda-package-streaming   0.7.0            py39haa95532_0\r\nconda-repo-cli            1.0.4              pyhd3eb1b0_0\r\nconda-token               0.4.0              pyhd3eb1b0_0\r\nconda-verify              3.4.2                      py_1\r\ncons                      0.4.5              pyhd8ed1ab_0    conda-forge\r\nconsole_shortcut          0.1.1                         4\r\nconstantly                15.1.0             pyh2b92418_0\r\ncontourpy                 1.0.5            py39h59b6b97_0\r\ncookiecutter              1.7.3              pyhd3eb1b0_0\r\ncryptography              38.0.4           py39h21b164f_0\r\ncssselect                 1.1.0              pyhd3eb1b0_0\r\ncurl                      7.87.0               h2bbff1b_0\r\ncycler                    0.11.0             pyhd3eb1b0_0\r\ncython                    0.29.32          py39hd77b12b_0\r\ncytoolz                   0.12.0           py39h2bbff1b_0\r\ndaal4py                   2021.4.0         py39h8cb3d55_0\r\ndal                       2021.4.0           haa95532_729\r\ndask                      2022.7.0         py39haa95532_0\r\ndask-core                 2022.7.0         py39haa95532_0\r\ndataclasses               0.8                pyh6d0b6a4_7\r\ndatashader                0.14.3           py39haa95532_0\r\ndatashape                 0.5.4            py39haa95532_1\r\ndebugpy                   1.5.1            py39hd77b12b_0\r\ndecorator                 5.1.1              pyhd3eb1b0_0\r\ndefusedxml                0.7.1              pyhd3eb1b0_0\r\ndiff-match-patch          20200713           pyhd3eb1b0_0\r\ndill                      0.3.6            py39haa95532_0\r\ndistributed               2022.7.0         py39haa95532_0\r\ndocutils                  0.18.1           py39haa95532_3\r\neasydev                   0.12.0             pyh6c4a22f_0    conda-forge\r\nentrypoints               0.4              py39haa95532_0\r\net_xmlfile                1.1.0            py39haa95532_0\r\netuples                   0.3.8              pyhd8ed1ab_0    conda-forge\r\nexpat                     2.4.9                h6c2663c_0\r\nfastprogress              1.0.0              pyhb85f177_0\r\nfftw                      3.3.9                h2bbff1b_1\r\nfilelock                  3.9.0            py39haa95532_0\r\nfitter                    1.4.1              pyh5e36f6f_0    bioconda\r\nflake8                    4.0.1              pyhd3eb1b0_1\r\nflask                     1.1.2              pyhd3eb1b0_0\r\nflit-core                 3.6.0              pyhd3eb1b0_0\r\nfontconfig                2.14.1               hc0defaf_1\r\nfonttools                 4.25.0             pyhd3eb1b0_0\r\nfreetype                  2.12.1               ha860e81_0\r\nfribidi                   1.0.10               h62dcd97_0\r\nfrozenlist                1.3.3            py39h2bbff1b_0\r\nfsspec                    2022.11.0        py39haa95532_0\r\nfuture                    0.18.2           py39haa95532_1\r\ngensim                    4.1.2            py39hd77b12b_0\r\ngeographiclib             1.52               pyhd8ed1ab_0    conda-forge\r\ngeopy                     2.2.0              pyhd8ed1ab_0    conda-forge\r\ngetopt-win32              0.1                  h2bbff1b_0\r\ngflags                    2.2.2                ha925a31_0\r\ngiflib                    5.2.1                h62dcd97_0\r\nglib                      2.69.1               h5dc1a3c_2\r\nglob2                     0.7                pyhd3eb1b0_0\r\nglog                      0.5.0                hd77b12b_0\r\ngraphite2                 1.3.14               hd77b12b_1\r\ngraphviz                  2.50.0               hdb8b0d4_0\r\ngreenlet                  2.0.1            py39hd77b12b_0\r\ngremlinpython             3.5.2              pyhd8ed1ab_0    conda-forge\r\ngst-plugins-base          1.18.5               h9e645db_0\r\ngstreamer                 1.18.5               hd78058f_0\r\ngts                       0.7.6                h63ab5a1_3\r\nh5py                      3.7.0            py39h3de5c98_0\r\nharfbuzz                  4.3.0                hda2c7e1_0\r\nhdf4                      4.2.13               h712560f_2\r\nhdf5                      1.10.6               h1756f20_1\r\nheapdict                  1.0.1              pyhd3eb1b0_0\r\nholoviews                 1.15.3           py39haa95532_0\r\nhvplot                    0.8.2            py39haa95532_0\r\nhyperlink                 21.0.0             pyhd3eb1b0_0\r\nicc_rt                    2022.1.0             h6049295_2\r\nicu                       58.2                 ha925a31_3\r\nidna                      3.4              py39haa95532_0\r\nimagecodecs               2021.8.26        py39hc0a7faf_1\r\nimageio                   2.19.3           py39haa95532_0\r\nimagesize                 1.4.1            py39haa95532_0\r\nimportlib-metadata        4.11.3           py39haa95532_0\r\nimportlib_metadata        4.11.3               hd3eb1b0_0\r\nincremental               21.3.0             pyhd3eb1b0_0\r\ninflection                0.5.1            py39haa95532_0\r\niniconfig                 1.1.1              pyhd3eb1b0_0\r\nintake                    0.6.6            py39haa95532_0\r\nintel-openmp              2021.4.0          haa95532_3556\r\nintervaltree              3.1.0              pyhd3eb1b0_0\r\nipykernel                 6.19.2           py39hd4e2768_0\r\nipython                   7.31.1           py39haa95532_1\r\nipython_genutils          0.2.0              pyhd3eb1b0_1\r\nipywidgets                7.6.5              pyhd3eb1b0_1\r\nisodate                   0.6.0              pyhd3eb1b0_1\r\nisort                     5.9.3              pyhd3eb1b0_0\r\nitemadapter               0.3.0              pyhd3eb1b0_0\r\nitemloaders               1.0.4              pyhd3eb1b0_1\r\nitsdangerous              2.0.1              pyhd3eb1b0_0\r\njdcal                     1.4.1              pyhd3eb1b0_0\r\njedi                      0.18.1           py39haa95532_1\r\njellyfish                 0.9.0            py39h2bbff1b_0\r\njinja2                    2.11.3             pyhd3eb1b0_0\r\njinja2-time               0.2.0              pyhd3eb1b0_3\r\njmespath                  0.10.0             pyhd3eb1b0_0\r\njoblib                    1.1.1            py39haa95532_0\r\njpeg                      9e                   h2bbff1b_0\r\njq                        1.6                  haa95532_1\r\njson5                     0.9.6              pyhd3eb1b0_0\r\njsonpath-ng               1.5.3              pyhd8ed1ab_0    conda-forge\r\njsonschema                4.16.0           py39haa95532_0\r\njupyter                   1.0.0            py39haa95532_8\r\njupyter_client            7.3.4            py39haa95532_0\r\njupyter_console           6.4.4            py39haa95532_0\r\njupyter_core              5.1.1            py39haa95532_0\r\njupyter_server            1.23.4           py39haa95532_0\r\njupyterlab                3.5.2            py39haa95532_0\r\njupyterlab_pygments       0.1.2                      py_0\r\njupyterlab_server         2.10.3             pyhd3eb1b0_1\r\njupyterlab_widgets        1.0.0              pyhd3eb1b0_1\r\nkeyring                   23.4.0           py39haa95532_0\r\nkiwisolver                1.4.4            py39hd77b12b_0\r\nlazy-object-proxy         1.6.0            py39h2bbff1b_0\r\nlcms2                     2.12                 h83e58a3_0\r\nlerc                      3.0                  hd77b12b_0\r\nlibaec                    1.0.4                h33f27b4_1\r\nlibarchive                3.6.1                hebabd0d_0\r\nlibboost                  1.73.0              h6c2663c_12\r\nlibbrotlicommon           1.0.9                h2bbff1b_7\r\nlibbrotlidec              1.0.9                h2bbff1b_7\r\nlibbrotlienc              1.0.9                h2bbff1b_7\r\nlibclang                  12.0.0          default_h627e005_2\r\nlibcurl                   7.87.0               h86230a5_0\r\nlibdeflate                1.8                  h2bbff1b_5\r\nlibffi                    3.4.2                hd77b12b_6\r\nlibgd                     2.3.3                ha43c60c_1\r\nlibgpuarray               0.7.6                h2bbff1b_1\r\nlibiconv                  1.16                 h2bbff1b_2\r\nliblief                   0.12.3               hd77b12b_0\r\nlibnetcdf                 4.8.1                h6685c40_1\r\nlibogg                    1.3.5                h2bbff1b_1\r\nlibpng                    1.6.37               h2a8f88b_0\r\nlibprotobuf               3.20.1               h23ce68f_0\r\nlibpython                 2.2              py39hcbf5309_2    conda-forge\r\nlibsodium                 1.0.18               h62dcd97_0\r\nlibspatialindex           1.9.3                h6c2663c_0\r\nlibssh2                   1.10.0               hcd4344a_0\r\nlibthrift                 0.15.0               he1d8c1a_0\r\nlibtiff                   4.5.0                h8a3f274_0\r\nlibvorbis                 1.3.7                he774522_0\r\nlibwebp                   1.2.4                h2bbff1b_0\r\nlibwebp-base              1.2.4                h2bbff1b_0\r\nlibxml2                   2.9.14               h0ad7f3c_0\r\nlibxslt                   1.1.35               h2bbff1b_0\r\nlibzip                    1.8.0                h49b8836_0\r\nlibzopfli                 1.0.3                ha925a31_0\r\nllvmlite                  0.39.1           py39h23ce68f_0\r\nlocket                    1.0.0            py39haa95532_0\r\nlogical-unification       0.4.5              pyhd8ed1ab_0    conda-forge\r\nlxml                      4.9.1            py39h1985fb9_0\r\nlz4                       3.1.3            py39h2bbff1b_0\r\nlz4-c                     1.9.4                h2bbff1b_0\r\nlzo                       2.10                 he774522_2\r\nm2-msys2-runtime          2.5.0.17080.65c939c               3\r\nm2-patch                  2.7.5                         2\r\nm2w64-binutils            2.25.1                        5\r\nm2w64-bzip2               1.0.6                         6\r\nm2w64-crt-git             5.0.0.4636.2595836               2\r\nm2w64-gcc                 5.3.0                         6\r\nm2w64-gcc-ada             5.3.0                         6\r\nm2w64-gcc-fortran         5.3.0                         6\r\nm2w64-gcc-libgfortran     5.3.0                         6\r\nm2w64-gcc-libs            5.3.0                         7\r\nm2w64-gcc-libs-core       5.3.0                         7\r\nm2w64-gcc-objc            5.3.0                         6\r\nm2w64-gmp                 6.1.0                         2\r\nm2w64-headers-git         5.0.0.4636.c0ad18a               2\r\nm2w64-isl                 0.16.1                        2\r\nm2w64-libiconv            1.14                          6\r\nm2w64-libmangle-git       5.0.0.4509.2e5a9a2               2\r\nm2w64-libwinpthread-git   5.0.0.4634.697f757               2\r\nm2w64-make                4.1.2351.a80a8b8               2\r\nm2w64-mpc                 1.0.3                         3\r\nm2w64-mpfr                3.1.4                         4\r\nm2w64-pkg-config          0.29.1                        2\r\nm2w64-toolchain           5.3.0                         7\r\nm2w64-toolchain_win-64    2.4.0                         0\r\nm2w64-tools-git           5.0.0.4592.90b8472               2\r\nm2w64-windows-default-manifest 6.4                           3\r\nm2w64-winpthreads-git     5.0.0.4634.697f757               2\r\nm2w64-zlib                1.2.8                        10\r\nmako                      1.2.3            py39haa95532_0\r\nmarkdown                  3.4.1            py39haa95532_0\r\nmarkupsafe                2.0.1            py39h2bbff1b_0\r\nmatplotlib                3.6.2            py39haa95532_0\r\nmatplotlib-base           3.6.2            py39h1094b8e_0\r\nmatplotlib-inline         0.1.6            py39haa95532_0\r\nmccabe                    0.7.0              pyhd3eb1b0_0\r\nmenuinst                  1.4.19           py39h59b6b97_0\r\nminikanren                1.0.3              pyhd8ed1ab_0    conda-forge\r\nmistune                   0.8.4           py39h2bbff1b_1000\r\nmkl                       2021.4.0           haa95532_640\r\nmkl-service               2.4.0            py39h2bbff1b_0\r\nmkl_fft                   1.3.1            py39h277e83a_0\r\nmkl_random                1.2.2            py39hf11a4ad_0\r\nmock                      4.0.3              pyhd3eb1b0_0\r\nmpmath                    1.2.1            py39haa95532_0\r\nmsgpack-python            1.0.3            py39h59b6b97_0\r\nmsys2-conda-epoch         20160418                      1\r\nmultidict                 6.0.2            py39h2bbff1b_0\r\nmultipledispatch          0.6.0            py39haa95532_0\r\nmunkres                   1.1.4                      py_0\r\nmypy_extensions           0.4.3            py39haa95532_1\r\nnavigator-updater         0.3.0            py39haa95532_0\r\nnbclassic                 0.4.8            py39haa95532_0\r\nnbclient                  0.5.13           py39haa95532_0\r\nnbconvert                 6.4.4            py39haa95532_0\r\nnbformat                  5.7.0            py39haa95532_0\r\nnest-asyncio              1.5.6            py39haa95532_0\r\nnetcdf4                   1.6.2            py39hda396d2_0\r\nnetworkx                  2.8.4            py39haa95532_0\r\nnltk                      3.7                pyhd3eb1b0_0\r\nnose                      1.3.7           pyhd3eb1b0_1008\r\nnotebook                  6.5.2            py39haa95532_0\r\nnotebook-shim             0.2.2            py39haa95532_0\r\nnumba                     0.56.4           py39hf11a4ad_0\r\nnumexpr                   2.8.4            py39h5b0cc5e_0\r\nnumpy                     1.21.5           py39h7a0a035_3\r\nnumpy-base                1.21.5           py39hca35cd5_3\r\nnumpydoc                  1.5.0            py39haa95532_0\r\nolefile                   0.46               pyhd3eb1b0_0\r\nopenjpeg                  2.4.0                h4fc8c34_0\r\nopenpyxl                  3.0.10           py39h2bbff1b_0\r\nopensearch-py             2.0.1              pyhd8ed1ab_0    conda-forge\r\nopenssl                   1.1.1s               h2bbff1b_0\r\npackaging                 22.0             py39haa95532_0\r\npandas                    1.4.4            py39hd77b12b_0\r\npandocfilters             1.5.0              pyhd3eb1b0_0\r\npanel                     0.14.2           py39haa95532_0\r\npango                     1.50.7               h78c2152_0\r\nparam                     1.12.3           py39haa95532_0\r\nparamiko                  2.8.1              pyhd3eb1b0_0\r\nparsel                    1.6.0            py39haa95532_0\r\nparso                     0.8.3              pyhd3eb1b0_0\r\npartd                     1.2.0              pyhd3eb1b0_1\r\npathspec                  0.9.0            py39haa95532_0\r\npatsy                     0.5.2            py39haa95532_1\r\npcre                      8.45                 hd77b12b_0\r\npep8                      1.7.1            py39haa95532_1\r\npexpect                   4.8.0              pyhd3eb1b0_3\r\npg8000                    1.20.0             pyhd3eb1b0_0\r\npickleshare               0.7.5           pyhd3eb1b0_1003\r\npillow                    9.3.0            py39hdc2b20a_1\r\npip                       22.3.1           py39haa95532_0\r\npixman                    0.40.0               h2bbff1b_1\r\npkginfo                   1.8.3            py39haa95532_0\r\nplatformdirs              2.5.2            py39haa95532_0\r\nplotly                    5.9.0            py39haa95532_0\r\npluggy                    1.0.0            py39haa95532_1\r\nply                       3.11             py39haa95532_0\r\npowershell_shortcut       0.0.1                         3\r\npoyo                      0.5.0              pyhd3eb1b0_0\r\nprogressbar2              4.2.0              pyhd8ed1ab_0    conda-forge\r\nprometheus_client         0.14.1           py39haa95532_0\r\nprompt-toolkit            3.0.36           py39haa95532_0\r\nprompt_toolkit            3.0.36               hd3eb1b0_0\r\nprotego                   0.1.16                     py_0\r\npsutil                    5.9.0            py39h2bbff1b_0\r\nptyprocess                0.7.0              pyhd3eb1b0_2\r\npy                        1.11.0             pyhd3eb1b0_0\r\npy-lief                   0.12.3           py39hd77b12b_0\r\npyarrow                   8.0.0            py39h953b917_0\r\npyasn1                    0.4.8              pyhd3eb1b0_0\r\npyasn1-modules            0.2.8                      py_0\r\npyathena                  2.14.0             pyhd8ed1ab_0    conda-forge\r\npycodestyle               2.8.0              pyhd3eb1b0_0\r\npycosat                   0.6.4            py39h2bbff1b_0\r\npycparser                 2.21               pyhd3eb1b0_0\r\npyct                      0.4.8            py39haa95532_1\r\npycurl                    7.45.1           py39hcd4344a_0\r\npydispatcher              2.0.5            py39haa95532_2\r\npydocstyle                6.1.1              pyhd3eb1b0_0\r\npyerfa                    2.0.0            py39h2bbff1b_0\r\npyflakes                  2.4.0              pyhd3eb1b0_0\r\npygments                  2.11.2             pyhd3eb1b0_0\r\npygpu                     0.7.6            py39h080aedc_1\r\npyhamcrest                2.0.2              pyhd3eb1b0_2\r\npyjwt                     2.4.0            py39haa95532_0\r\npylint                    2.14.5           py39haa95532_0\r\npyls-spyder               0.4.0              pyhd3eb1b0_0\r\npymc                      5.0.1                hd8ed1ab_0    conda-forge\r\npymc-base                 5.0.1              pyhd8ed1ab_0    conda-forge\r\npymysql                   1.0.2            py39haa95532_1\r\npynacl                    1.5.0            py39h8cc25b3_0\r\npyodbc                    4.0.34           py39hd77b12b_0\r\npyopenssl                 22.0.0             pyhd3eb1b0_0\r\npyparsing                 3.0.9            py39haa95532_0\r\npyqt                      5.15.7           py39hd77b12b_0\r\npyqt5-sip                 12.11.0          py39hd77b12b_0\r\npyqtwebengine             5.15.7           py39hd77b12b_0\r\npyrsistent                0.18.0           py39h196d8e1_0\r\npysocks                   1.7.1            py39haa95532_0\r\npytables                  3.7.0            py39h388bc9b_1\r\npytensor                  2.8.11           py39h7171602_1    conda-forge\r\npytensor-base             2.8.11           py39hcbf5309_1    conda-forge\r\npytest                    7.1.2            py39haa95532_0\r\npython                    3.9.13               h6244533_2\r\npython-dateutil           2.8.2              pyhd3eb1b0_0\r\npython-fastjsonschema     2.16.2           py39haa95532_0\r\npython-graphviz           0.20.1             pyh22cad53_0    conda-forge\r\npython-libarchive-c       2.9                pyhd3eb1b0_1\r\npython-lsp-black          1.2.1            py39haa95532_0\r\npython-lsp-jsonrpc        1.0.0              pyhd3eb1b0_0\r\npython-lsp-server         1.5.0            py39haa95532_0\r\npython-slugify            5.0.2              pyhd3eb1b0_0\r\npython-snappy             0.6.1            py39hd77b12b_0\r\npython-utils              3.3.3            py39haa95532_0\r\npython_abi                3.9                      2_cp39    conda-forge\r\npytz                      2022.1           py39haa95532_0\r\npyviz_comms               2.0.2              pyhd3eb1b0_0\r\npywavelets                1.4.1            py39h2bbff1b_0\r\npywin32                   305              py39h2bbff1b_0\r\npywin32-ctypes            0.2.0           py39haa95532_1000\r\npywinpty                  2.0.2            py39h5da7b33_0\r\npyyaml                    6.0              py39h2bbff1b_1\r\npyzmq                     23.2.0           py39hd77b12b_0\r\nqdarkstyle                3.0.2              pyhd3eb1b0_0\r\nqstylizer                 0.2.2            py39haa95532_0\r\nqt                        5.15.7               haa95532_0\r\nqt-main                   5.15.2               he8e5bd7_7\r\nqt-webengine              5.15.9               hb9a9bb5_5\r\nqtawesome                 1.2.2            py39haa95532_0\r\nqtconsole                 5.3.2            py39haa95532_0\r\nqtpy                      2.2.0            py39haa95532_0\r\nqtwebkit                  5.212                h3ad3cdb_4\r\nqueuelib                  1.5.0            py39haa95532_0\r\nre2                       2022.04.01           hd77b12b_0\r\nredshift_connector        2.0.908            pyhd8ed1ab_0    conda-forge\r\nregex                     2022.7.9         py39h2bbff1b_0\r\nrequests                  2.27.1             pyhd3eb1b0_0\r\nrequests-aws4auth         1.1.1              pyhd8ed1ab_0    conda-forge\r\nrequests-file             1.5.1              pyhd3eb1b0_0\r\nrope                      0.22.0             pyhd3eb1b0_0\r\nrtree                     0.9.7            py39h2eaa2aa_1\r\nruamel.yaml               0.17.21          py39h2bbff1b_0\r\nruamel.yaml.clib          0.2.6            py39h2bbff1b_1\r\nruamel_yaml               0.17.21          py39h2bbff1b_0\r\ns3transfer                0.6.0            py39haa95532_0\r\nscikit-image              0.19.3           py39hd77b12b_1\r\nscikit-learn              1.1.2            py39hd77b12b_0\r\nscikit-learn-intelex      2021.4.0         py39haa95532_0\r\nscipy                     1.9.3            py39he11b74f_0\r\nscramp                    1.4.0              pyhd3eb1b0_0\r\nscrapy                    2.6.2            py39haa95532_0\r\nseaborn                   0.12.2           py39haa95532_0\r\nsend2trash                1.8.0              pyhd3eb1b0_1\r\nservice_identity          18.1.0             pyhd3eb1b0_1\r\nsetuptools                65.6.3           py39haa95532_0\r\nsip                       6.6.2            py39hd77b12b_0\r\nsix                       1.16.0             pyhd3eb1b0_1\r\nsmart_open                5.2.1            py39haa95532_0\r\nsnappy                    1.1.9                h6c2663c_0\r\nsniffio                   1.2.0            py39haa95532_1\r\nsnowballstemmer           2.2.0              pyhd3eb1b0_0\r\nsortedcollections         2.1.0              pyhd3eb1b0_0\r\nsortedcontainers          2.4.0              pyhd3eb1b0_0\r\nsoupsieve                 2.3.2.post1      py39haa95532_0\r\nsphinx                    5.0.2            py39haa95532_0\r\nsphinxcontrib-applehelp   1.0.2              pyhd3eb1b0_0\r\nsphinxcontrib-devhelp     1.0.2              pyhd3eb1b0_0\r\nsphinxcontrib-htmlhelp    2.0.0              pyhd3eb1b0_0\r\nsphinxcontrib-jsmath      1.0.1              pyhd3eb1b0_0\r\nsphinxcontrib-qthelp      1.0.3              pyhd3eb1b0_0\r\nsphinxcontrib-serializinghtml 1.1.5              pyhd3eb1b0_0\r\nspyder                    5.3.3            py39hcbf5309_0    conda-forge\r\nspyder-kernels            2.3.3            py39haa95532_0\r\nsqlalchemy                1.4.39           py39h2bbff1b_0\r\nsqlite                    3.40.1               h2bbff1b_0\r\nstatsmodels               0.13.2           py39h2bbff1b_0\r\nsympy                     1.11.1           py39haa95532_0\r\ntabulate                  0.8.10           py39haa95532_0\r\ntbb                       2021.6.0             h59b6b97_1\r\ntbb4py                    2021.6.0         py39h59b6b97_1\r\ntblib                     1.7.0              pyhd3eb1b0_0\r\ntenacity                  8.0.1            py39haa95532_1\r\nterminado                 0.17.1           py39haa95532_0\r\ntestpath                  0.6.0            py39haa95532_0\r\ntext-unidecode            1.3                pyhd3eb1b0_0\r\ntextdistance              4.2.1              pyhd3eb1b0_0\r\ntheano                    1.0.5            py39h415ef7b_3    conda-forge\r\nthreadpoolctl             2.2.0              pyh0d69192_0\r\nthree-merge               0.1.1              pyhd3eb1b0_0\r\ntifffile                  2021.7.2           pyhd3eb1b0_2\r\ntinycss2                  1.2.1            py39haa95532_0\r\ntk                        8.6.12               h2bbff1b_0\r\ntldextract                3.2.0              pyhd3eb1b0_0\r\ntoml                      0.10.2             pyhd3eb1b0_0\r\ntomli                     2.0.1            py39haa95532_0\r\ntomlkit                   0.11.1           py39haa95532_0\r\ntoolz                     0.12.0           py39haa95532_0\r\ntornado                   6.1              py39h2bbff1b_0\r\ntqdm                      4.64.1           py39haa95532_0\r\ntraitlets                 5.7.1            py39haa95532_0\r\ntwisted                   22.2.0           py39h2bbff1b_1\r\ntwisted-iocpsupport       1.0.2            py39h2bbff1b_0\r\ntyping-extensions         4.4.0            py39haa95532_0\r\ntyping_extensions         4.4.0            py39haa95532_0\r\ntzdata                    2022g                h04d1e81_0\r\nujson                     5.4.0            py39hd77b12b_0\r\nunidecode                 1.2.0              pyhd3eb1b0_0\r\nurllib3                   1.26.14          py39haa95532_0\r\nutf8proc                  2.6.1                h2bbff1b_0\r\nvc                        14.2                 h21ff451_1\r\nvs2015_runtime            14.27.29016          h5e58377_2\r\nvs2017_win-64             19.16.27032.1        hb4161e2_3\r\nvswhere                   2.8.4                haa95532_0\r\nw3lib                     1.21.0             pyhd3eb1b0_0\r\nwatchdog                  2.1.6            py39haa95532_0\r\nwcwidth                   0.2.5              pyhd3eb1b0_0\r\nwebencodings              0.5.1            py39haa95532_1\r\nwebsocket-client          0.58.0           py39haa95532_4\r\nwerkzeug                  2.0.3              pyhd3eb1b0_0\r\nwhatthepatch              1.0.2            py39haa95532_0\r\nwheel                     0.37.1             pyhd3eb1b0_0\r\nwidgetsnbextension        3.5.2            py39haa95532_0\r\nwin_inet_pton             1.1.0            py39haa95532_0\r\nwin_unicode_console       0.5              py39haa95532_0\r\nwincertstore              0.2              py39haa95532_2\r\nwinpty                    0.4.3                         4\r\nwrapt                     1.14.1           py39h2bbff1b_0\r\nxarray                    2022.11.0        py39haa95532_0\r\nxarray-einstats           0.5.0              pyhd8ed1ab_0    conda-forge\r\nxlrd                      2.0.1              pyhd3eb1b0_0\r\nxlsxwriter                3.0.3              pyhd3eb1b0_0\r\nxlwings                   0.27.15          py39haa95532_0\r\nxz                        5.2.10               h8cc25b3_1\r\nyaml                      0.2.5                he774522_0\r\nyapf                      0.31.0             pyhd3eb1b0_0\r\nyarl                      1.8.1            py39h2bbff1b_0\r\nzeromq                    4.3.4                hd77b12b_0\r\nzfp                       0.5.5                hd77b12b_6\r\nzict                      2.1.0            py39haa95532_0\r\nzipp                      3.11.0           py39haa95532_0\r\nzlib                      1.2.13               h8cc25b3_0\r\nzope                      1.0              py39haa95532_1\r\nzope.interface            5.4.0            py39h2bbff1b_0\r\nzstandard                 0.18.0           py39h2bbff1b_0\r\nzstd                      1.5.2                h19a0ad4_0\r\n\r\n### Context for the issue:\r\n\r\nI am unable to create a model at all with this issue", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6464/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6460", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6460/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6460/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6460/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6460", "id": 1549632656, "node_id": "I_kwDOAALxiM5cXYSQ", "number": 6460, "title": "BUG: Graphviz error - omits edge when ZeroSumNormal is a parent of a deterministic", "user": {"login": "drbenvincent", "id": 6765047, "node_id": "MDQ6VXNlcjY3NjUwNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/6765047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drbenvincent", "html_url": "https://github.com/drbenvincent", "followers_url": "https://api.github.com/users/drbenvincent/followers", "following_url": "https://api.github.com/users/drbenvincent/following{/other_user}", "gists_url": "https://api.github.com/users/drbenvincent/gists{/gist_id}", "starred_url": "https://api.github.com/users/drbenvincent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drbenvincent/subscriptions", "organizations_url": "https://api.github.com/users/drbenvincent/orgs", "repos_url": "https://api.github.com/users/drbenvincent/repos", "events_url": "https://api.github.com/users/drbenvincent/events{/privacy}", "received_events_url": "https://api.github.com/users/drbenvincent/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2023-01-19T17:36:50Z", "updated_at": "2023-01-19T23:26:26Z", "closed_at": "2023-01-19T22:58:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the issue:\r\n\r\nThe graphviz representation of a model does not include an edge between a parent (when it's a ZeroSumNormal). In this case, the child in a deterministic.\r\n\r\nIn this graphviz output (see MWE below), there should be en edge from the `ZeroSumNormal` to the `Deterministic`\r\n![Screenshot 2023-01-19 at 17 35 52](https://user-images.githubusercontent.com/6765047/213518729-80defaaa-016b-4260-8b18-c1d7a6fab780.png)\r\n\r\n\r\n### Reproduceable code example:\r\n\r\n```python\r\nimport pymc as pm\r\nimport aesara.tensor as at\r\n\r\n\r\ncoords = {\"predictor\": [\"pred1\", \"pred2\"], \"group\": np.arange(4)}\r\nwith pm.Model(coords=coords) as model:\r\n    coords = {\"predictor\": [\"pred1\", \"pred2\"], \"group\": np.arange(4)}\r\n    beta = pm.Deterministic(\r\n        \"beta\",\r\n        at.transpose(\r\n            pm.ZeroSumNormal(\"_beta\", zerosum_axes=1, dims=[\"predictor\", \"group\"])\r\n        ),\r\n        dims=[\"group\", \"predictor\"],\r\n    )\r\n    \r\npm.model_to_graphviz(model)\r\n```\r\n\r\n\r\n### Error message:\r\n\r\n```shell\r\nN/A\r\n```\r\n\r\n\r\n### PyMC version information:\r\n\r\nSorry this was done in v4 due to constraints of a particular project I'm working on.\r\n\r\nPyMC version 4.4.0\r\naesara version 2.8.7\r\n\r\n### Context for the issue:\r\n\r\nThis is not a major error in that it doesn't produce incorrect results. But the printed graphviz _is_ wrong. Many people rely on the visual representation of the model to spot errors etc, so addressing this would certainly be useful.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6460/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6440", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6440/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6440/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6440/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6440", "id": 1522400375, "node_id": "PR_kwDOAALxiM5Gz1r8", "number": 6440, "title": "Revert \"Add informative error if user tries to use Aesara function with PyTensor variables", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-01-06T11:12:16Z", "updated_at": "2023-01-06T15:09:28Z", "closed_at": "2023-01-06T14:41:54Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6440", "html_url": "https://github.com/pymc-devs/pymc/pull/6440", "diff_url": "https://github.com/pymc-devs/pymc/pull/6440.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6440.patch", "merged_at": "2023-01-06T14:41:54Z"}, "body": "Since the cure was worse than the disease...\r\n\r\nCloses #6434\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6440/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6434", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6434/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6434/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6434/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6434", "id": 1520500451, "node_id": "I_kwDOAALxiM5aoP7j", "number": 6434, "title": "BUG: AmbiguityWarning:  Ambiguities exist in dispatched function _unify", "user": {"login": "maresb", "id": 15216687, "node_id": "MDQ6VXNlcjE1MjE2Njg3", "avatar_url": "https://avatars.githubusercontent.com/u/15216687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maresb", "html_url": "https://github.com/maresb", "followers_url": "https://api.github.com/users/maresb/followers", "following_url": "https://api.github.com/users/maresb/following{/other_user}", "gists_url": "https://api.github.com/users/maresb/gists{/gist_id}", "starred_url": "https://api.github.com/users/maresb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maresb/subscriptions", "organizations_url": "https://api.github.com/users/maresb/orgs", "repos_url": "https://api.github.com/users/maresb/repos", "events_url": "https://api.github.com/users/maresb/events{/privacy}", "received_events_url": "https://api.github.com/users/maresb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-01-05T10:33:23Z", "updated_at": "2023-01-06T14:41:55Z", "closed_at": "2023-01-06T14:41:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the issue:\n\nIf `aesara` is installed then the following warnings are emitted when sampling any PyMC model:\r\n\r\n```\r\nAuto-assigning NUTS sampler...\r\nInitializing NUTS using jitter+adapt_diag...\r\n/home/mares/micromamba/envs/pymcaesara/lib/python3.11/site-packages/multipledispatch/dispatcher.py:27: AmbiguityWarning: \r\nAmbiguities exist in dispatched function _unify\r\n\r\nThe following signatures may result in ambiguous behavior:\r\n\t[object, ConstrainedVar, Mapping], [ConstrainedVar, object, Mapping]\r\n\t[object, ConstrainedVar, Mapping], [ConstrainedVar, Var, Mapping]\r\n\t[object, ConstrainedVar, Mapping], [ConstrainedVar, object, Mapping]\r\n\t[object, ConstrainedVar, Mapping], [ConstrainedVar, Var, Mapping]\r\n\r\n\r\nConsider making the following additions:\r\n\r\n@dispatch(ConstrainedVar, ConstrainedVar, Mapping)\r\ndef _unify(...)\r\n\r\n@dispatch(ConstrainedVar, ConstrainedVar, Mapping)\r\ndef _unify(...)\r\n\r\n@dispatch(ConstrainedVar, ConstrainedVar, Mapping)\r\ndef _unify(...)\r\n\r\n@dispatch(ConstrainedVar, ConstrainedVar, Mapping)\r\ndef _unify(...)\r\n  warn(warning_text(dispatcher.name, ambiguities), AmbiguityWarning)\r\nMultiprocess sampling (4 chains in 4 jobs)\r\n```\r\n\r\nI believe the root of the problem is that PyMC triggers an import of Aesara [here](https://github.com/pymc-devs/pymc/blob/3961677dfca77282e679a5e63fa4ba668bf9a7f6/pymc/pytensorf.py#L95). That presumably leads to `unification.core._unify` being registered by both Aesara and PyTensor. Perhaps there's some clever way to warn the user without actually importing Aesara?\n\n### Reproduceable code example:\n\n```python\nmamba install pymc aesara\r\n\r\n...\r\nwith model:\r\n    pm.sample()\n```\n\n\n### Error message:\n\n_No response_\n\n### PyMC version information:\n\nInstalled via mamba.\r\n\r\npymc 5.0.0\r\naesara-base 2.8.9\r\npytensor 2.8.10\r\npython 3.11.0\r\n\r\nOS: Ubuntu 20.04\n\n### Context for the issue:\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6434/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6434/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6425", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6425/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6425/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6425/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6425", "id": 1516628737, "node_id": "PR_kwDOAALxiM5GgFUQ", "number": 6425, "title": "Fix bug that does not correctly set the dtype of determinsitic variab\u2026", "user": {"login": "jessegrabowski", "id": 48652735, "node_id": "MDQ6VXNlcjQ4NjUyNzM1", "avatar_url": "https://avatars.githubusercontent.com/u/48652735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jessegrabowski", "html_url": "https://github.com/jessegrabowski", "followers_url": "https://api.github.com/users/jessegrabowski/followers", "following_url": "https://api.github.com/users/jessegrabowski/following{/other_user}", "gists_url": "https://api.github.com/users/jessegrabowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/jessegrabowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jessegrabowski/subscriptions", "organizations_url": "https://api.github.com/users/jessegrabowski/orgs", "repos_url": "https://api.github.com/users/jessegrabowski/repos", "events_url": "https://api.github.com/users/jessegrabowski/events{/privacy}", "received_events_url": "https://api.github.com/users/jessegrabowski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-01-02T18:23:38Z", "updated_at": "2023-01-12T18:58:22Z", "closed_at": "2023-01-12T18:58:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6425", "html_url": "https://github.com/pymc-devs/pymc/pull/6425", "diff_url": "https://github.com/pymc-devs/pymc/pull/6425.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6425.patch", "merged_at": "2023-01-12T18:58:22Z"}, "body": "<!-- !! Thank your for opening a PR !! -->\r\n\r\n**What is this PR about?**\r\n\r\nCloses #6424 by setting the dtype of combined observed/interpolated deterministic generated by `model.make_obs_var` to be the same as the underling RV being interpolated. \r\n\r\n**Checklist**\r\n+ [x] Explain important implementation details \ud83d\udc46\r\n+ [ ] Make sure that [the pre-commit linting/style checks pass](https://docs.pymc.io/en/latest/contributing/python_style.html).\r\n+ [ ] Link relevant issues (preferably in [nice commit messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html))\r\n+ [x] Are the changes covered by tests and docstrings?\r\n+ [x] Fill out the short summary sections \ud83d\udc47\r\n\r\n## Major / Breaking Changes\r\n- None\r\n\r\n## New features\r\n- None\r\n\r\n## Bugfixes\r\n- Allow indexing by discrete RVs with missing data\r\n- \r\n\r\n## Documentation\r\n- ...\r\n\r\n## Maintenance\r\n- ...\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6425/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6425/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6424", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6424/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6424/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6424/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6424", "id": 1516628012, "node_id": "I_kwDOAALxiM5aZegs", "number": 6424, "title": "BUG: Datatype of Discrete RVs is changed to `float64` when `observed` data has missing values", "user": {"login": "jessegrabowski", "id": 48652735, "node_id": "MDQ6VXNlcjQ4NjUyNzM1", "avatar_url": "https://avatars.githubusercontent.com/u/48652735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jessegrabowski", "html_url": "https://github.com/jessegrabowski", "followers_url": "https://api.github.com/users/jessegrabowski/followers", "following_url": "https://api.github.com/users/jessegrabowski/following{/other_user}", "gists_url": "https://api.github.com/users/jessegrabowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/jessegrabowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jessegrabowski/subscriptions", "organizations_url": "https://api.github.com/users/jessegrabowski/orgs", "repos_url": "https://api.github.com/users/jessegrabowski/repos", "events_url": "https://api.github.com/users/jessegrabowski/events{/privacy}", "received_events_url": "https://api.github.com/users/jessegrabowski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-01-02T18:22:03Z", "updated_at": "2023-01-12T18:58:23Z", "closed_at": "2023-01-12T18:58:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the issue:\n\nIssue first reported [here](https://discourse.pymc.io/t/trying-to-impute-missing-categorical-data/11093). When using a categorical likelihood with missing variables in the observed data vector, the result is not able to be used as an index variable, because the dtype of the combined missing+observed data vector created in `model.make_obs_var` does not inherit the `dtype` of the underlying RV. \r\n\r\nThis will cause unexpected behavior if the user wants to index with the variable elsewhere in the model.\n\n### Reproduceable code example:\n\n```python\nimport pymc as pm\r\nimport numpy as np\r\nimport pytensor.tensor as pt\r\n\r\ndata = np.ma.masked_equal([1, 1, 0, 0, 2, -1, -1], -1)\r\nsomething_to_index = pt.as_tensor_variable(np.random.normal(size=(10, 3)))\r\n\r\nwith pm.Model():\r\n    idx = pm.Categorical(f\"idx\", p=[0.1, 0.2, 0.7], observed=data)\r\n    stuff = something_to_index[:, idx]\n```\n\n\n### Error message:\n\n```shell\n<details>\r\nTraceback (most recent call last):\r\n  File \"/Users/jessegrabowski/Documents/Python/pymc/test.py\", line 10, in <module>\r\n    stuff = something_to_index[:, idx]\r\n  File \"/Users/jessegrabowski/mambaforge/envs/econ/lib/python3.9/site-packages/pytensor/tensor/var.py\", line 551, in __getitem__\r\n    return at.subtensor.advanced_subtensor(self, *args)\r\n  File \"/Users/jessegrabowski/mambaforge/envs/econ/lib/python3.9/site-packages/pytensor/graph/op.py\", line 296, in __call__\r\n    node = self.make_node(*inputs, **kwargs)\r\n  File \"/Users/jessegrabowski/mambaforge/envs/econ/lib/python3.9/site-packages/pytensor/tensor/subtensor.py\", line 2556, in make_node\r\n    index = tuple(map(as_index_variable, index))\r\n  File \"/Users/jessegrabowski/mambaforge/envs/econ/lib/python3.9/site-packages/pytensor/tensor/subtensor.py\", line 2518, in as_index_variable\r\n    raise TypeError(\"index must be integers or a boolean mask\")\r\nTypeError: index must be integers or a boolean mask\r\n</details>\n```\n\n\n### PyMC version information:\n\n<details>\r\npymc: 0+untagged.9319.g78a3582.dirty\r\npytensor: 2.8.11\r\n</details>\n\n### Context for the issue:\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6424/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6421", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6421/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6421/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6421/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6421", "id": 1514061346, "node_id": "I_kwDOAALxiM5aPr4i", "number": 6421, "title": "BUG: `model_to_graphviz` nodes become detached if a named node is between two dependent random variables", "user": {"login": "lucianopaz", "id": 5230109, "node_id": "MDQ6VXNlcjUyMzAxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5230109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucianopaz", "html_url": "https://github.com/lucianopaz", "followers_url": "https://api.github.com/users/lucianopaz/followers", "following_url": "https://api.github.com/users/lucianopaz/following{/other_user}", "gists_url": "https://api.github.com/users/lucianopaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucianopaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucianopaz/subscriptions", "organizations_url": "https://api.github.com/users/lucianopaz/orgs", "repos_url": "https://api.github.com/users/lucianopaz/repos", "events_url": "https://api.github.com/users/lucianopaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lucianopaz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-12-29T21:24:44Z", "updated_at": "2023-01-03T07:45:34Z", "closed_at": "2023-01-03T07:45:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the issue:\n\n`model_to_graphviz` is completely dependent on named `Variables` in the pytensor graph that relates random variables, deterministics, and all other model components. If a named node is at some intermediate stage between random variables, the nodes become disconnected in the graphviz representation.\n\n### Reproduceable code example:\n\n```python\nimport pymc as pm\r\n\r\nwith pm.Model() as m1:\r\n    a = pm.Normal(\"a\", 0, 1, shape=3)\r\n    b = pm.Normal(\"b\", a.mean(axis=-1), 1)\r\n\r\nwith pm.Model() as m2:\r\n    a = pm.Normal(\"a\", 0, 1)\r\n    b = a + 1\r\n    b.name = \"b\"\r\n    c = pm.Normal(\"c\", b, 1)\r\n\r\npm.model_to_graphviz(m1)\r\npm.model_to_graphviz(m2)\n```\n\n\n### Error message:\n\n_No response_\n\n### PyMC version information:\n\npymc version: 5.0.0\n\n### Context for the issue:\n\nThe code snippet above produces the following graphviz representations\r\n\r\nFor m1:\r\n\r\n![image](https://user-images.githubusercontent.com/5230109/210012411-c785be5f-6389-4f34-829d-e826cdb64e23.png)\r\n\r\nFor m2:\r\n\r\n![image](https://user-images.githubusercontent.com/5230109/210012491-50ab1992-6e43-42ba-91a1-4cbf97611336.png)\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6421/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6414", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6414/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6414/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6414/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6414", "id": 1511798458, "node_id": "PR_kwDOAALxiM5GPyhf", "number": 6414, "title": " Infer logprob of absolute operations and fix logprob of powers with negative values", "user": {"login": "LukeLB", "id": 35955390, "node_id": "MDQ6VXNlcjM1OTU1Mzkw", "avatar_url": "https://avatars.githubusercontent.com/u/35955390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukeLB", "html_url": "https://github.com/LukeLB", "followers_url": "https://api.github.com/users/LukeLB/followers", "following_url": "https://api.github.com/users/LukeLB/following{/other_user}", "gists_url": "https://api.github.com/users/LukeLB/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukeLB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukeLB/subscriptions", "organizations_url": "https://api.github.com/users/LukeLB/orgs", "repos_url": "https://api.github.com/users/LukeLB/repos", "events_url": "https://api.github.com/users/LukeLB/events{/privacy}", "received_events_url": "https://api.github.com/users/LukeLB/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76152, "node_id": "MDU6TGFiZWw3NjE1Mg==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/enhancements", "name": "enhancements", "color": "02e10c", "default": false, "description": null}, {"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3561358894, "node_id": "LA_kwDOAALxiM7URgYu", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/logprob-related", "name": "logprob-related", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2022-12-27T13:19:33Z", "updated_at": "2023-01-07T08:22:56Z", "closed_at": "2023-01-07T08:21:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6414", "html_url": "https://github.com/pymc-devs/pymc/pull/6414", "diff_url": "https://github.com/pymc-devs/pymc/pull/6414.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6414.patch", "merged_at": "2023-01-07T08:21:57Z"}, "body": "<!-- !! Thank your for opening a PR !! -->\r\n\r\n**What is this PR about?**\r\nFollowing from #6400 and implements #6402. This PR allows the use of an absolute transform for cases like\r\n````python\r\nimport pymc as pm\r\n\r\nx = pm.math.abs(pm.Normal.dist())\r\ny = pm.HalfNormal.dist()\r\nassert pm.logp(x, 2.5).eval() == pm.logp(y, 2.5).eval()\r\n````\r\nI have included the above example as a test.\r\n\r\nSome notes:\r\n- I wasn't completely sure on how to derive the Jacobian determinant for an absolute function, I think its just the derivative wrt x, so that's what I've included. \r\n- Should we expect x and y (in the example above) to return the same value if the test_value is negative? e.g.\r\n````python\r\nimport pymc as pm\r\n\r\nx = pm.math.abs(pm.Normal.dist())\r\ny = pm.HalfNormal.dist()\r\nassert pm.logp(x, -2.5).eval() == pm.logp(y, -2.5).eval()\r\n````\r\nBecause in this case, `x` returns `-inf` while `y` returns `nan`\r\n\r\n**Checklist**\r\n+ [x] Explain important implementation details \ud83d\udc46\r\n+ [x] Make sure that [the pre-commit linting/style checks pass](https://docs.pymc.io/en/latest/contributing/python_style.html).\r\n+ [x] Link relevant issues (preferably in [nice commit messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html))\r\n+ [x] Are the changes covered by tests and docstrings?\r\n+ [x] Fill out the short summary sections \ud83d\udc47\r\n\r\n## New features\r\n- The ability to evaluate the log prob of an absolute transformed random variable \r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6414/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6414/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6409", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6409/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6409/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6409/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6409", "id": 1506448263, "node_id": "I_kwDOAALxiM5ZypOH", "number": 6409, "title": "5.0.1 auto-build on conda-forge fails ModuleNotFoundError: No module named 'pytensor.graph.replace'", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-12-21T15:07:17Z", "updated_at": "2023-01-21T17:17:07Z", "closed_at": "2023-01-21T17:17:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Describe the issue:\n\nhttps://github.com/conda-forge/pymc-feedstock/pull/70\r\n\r\nFrom:\r\nhttps://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=632169&view=logs&j=656edd35-690f-5c53-9ba3-09c10d0bea97&t=e5c8ab1d-8ff9-5cae-b332-e15ae582ed2d\r\n\r\n```\r\nimport: 'pymc'\r\nWARNING (pytensor.configdefaults): g++ not detected!  PyTensor will be unable to compile C-implementations and will default to Python. Performance may be severely degraded. To remove this warning, set PyTensor flags cxx to an empty string.\r\nWARNING (pytensor.tensor.blas): Using NumPy C-API based implementation for BLAS functions.\r\nTraceback (most recent call last):\r\n  File \"/home/conda/feedstock_root/build_artifacts/pymc-suite_1671632408232/test_tmp/run_test.py\", line 2, in <module>\r\n    import pymc\r\n  File \"/home/conda/feedstock_root/build_artifacts/pymc-suite_1671632408232/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.11/site-packages/pymc/__init__.py\", line 49, in <module>\r\n    from pymc import _version, gp, ode, sampling\r\n  File \"/home/conda/feedstock_root/build_artifacts/pymc-suite_1671632408232/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.11/site-packages/pymc/gp/__init__.py\", line 15, in <module>\r\n    from pymc.gp import cov, mean, util\r\n  File \"/home/conda/feedstock_root/build_artifacts/pymc-suite_1671632408232/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.11/site-packages/pymc/gp/util.py\", line 30, in <module>\r\n    from pymc.distributions.distribution import Distribution\r\n  File \"/home/conda/feedstock_root/build_artifacts/pymc-suite_1671632408232/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.11/site-packages/pymc/distributions/__init__.py\", line 15, in <module>\r\n    from pymc.distributions.logprob import (  # isort:skip\r\n  File \"/home/conda/feedstock_root/build_artifacts/pymc-suite_1671632408232/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.11/site-packages/pymc/distributions/logprob.py\", line 25, in <module>\r\n    from pymc.logprob.abstract import assign_custom_measurable_outputs\r\n  File \"/home/conda/feedstock_root/build_artifacts/pymc-suite_1671632408232/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.11/site-packages/pymc/logprob/__init__.py\", line 48, in <module>\r\n    import pymc.logprob.transforms\r\n  File \"/home/conda/feedstock_root/build_artifacts/pymc-suite_1671632408232/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.11/site-packages/pymc/logprob/transforms.py\", line 50, in <module>\r\n    from pytensor.graph.replace import clone_replace\r\nModuleNotFoundError: No module named 'pytensor.graph.replace'\r\n```\n\n### Reproduceable code example:\n\n```python\nasdf\n```\n\n\n### Error message:\n\n_No response_\n\n### PyMC version information:\n\n5.0.1\n\n### Context for the issue:\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6409/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6401", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6401/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6401/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6401/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6401", "id": 1501896382, "node_id": "I_kwDOAALxiM5ZhR6-", "number": 6401, "title": "BUG: `RandomWalk`/`joint_logprob` spam warnings about non-contributing RVs in the graph", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3561358894, "node_id": "LA_kwDOAALxiM7URgYu", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/logprob-related", "name": "logprob-related", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-12-18T13:05:03Z", "updated_at": "2023-01-20T10:15:36Z", "closed_at": "2023-01-20T10:15:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Describe the issue:\n\nRunning just a very simple `RandomWalk` leads to a bunch of warnings emitted by `joint_logprob`.\n\n### Reproduceable code example:\n\n```python\nimport pymc as pm\r\n\r\nwith pm.Model() as pmodel:\r\n    init_dist = pm.Normal.dist(1, 1.1)\r\n    innov_dist = pm.StudentT.dist(mu=0, sigma=0.2, nu=1)\r\n    rw = pm.RandomWalk(\r\n        \"RW\",\r\n        init_dist=init_dist,\r\n        innovation_dist=innov_dist,\r\n        steps=9,\r\n    )\r\n    L = pm.Normal(\"L\", mu=rw, observed=[0.1, 0.12, 0.115, 0.12, 0.125, 0.13, 0.135, 0.5, 0.51, 0.505])\r\n    map_ = pm.find_MAP()\n```\n\n\n### Error message:\n\n```shell\nc:\\Users\\zufal\\miniconda3\\envs\\murefidev\\lib\\site-packages\\pymc\\logprob\\joint_logprob.py:167: UserWarning: Found a random variable that was neither among the observations nor the conditioned variables: [studentt_rv{0, (0, 0, 0), floatX, False}.0, studentt_rv{0, (0, 0, 0), floatX, False}.out]\r\n  warnings.warn(\r\nc:\\Users\\zufal\\miniconda3\\envs\\murefidev\\lib\\site-packages\\pymc\\logprob\\joint_logprob.py:167: UserWarning: Found a random variable that was neither among the observations nor the conditioned variables: [normal_rv{0, (0, 0), floatX, False}.0, normal_rv{0, (0, 0), floatX, False}.out]\r\n  warnings.warn(\r\nc:\\Users\\zufal\\miniconda3\\envs\\murefidev\\lib\\site-packages\\pymc\\logprob\\joint_logprob.py:167: UserWarning: Found a random variable that was neither among the observations nor the conditioned variables: [studentt_rv{0, (0, 0, 0), floatX, False}.0, studentt_rv{0, (0, 0, 0), floatX, False}.out]\r\n  warnings.warn(\r\nc:\\Users\\zufal\\miniconda3\\envs\\murefidev\\lib\\site-packages\\pymc\\logprob\\joint_logprob.py:167: UserWarning: Found a random variable that was neither among the observations nor the conditioned variables: [normal_rv{0, (0, 0), floatX, False}.0, normal_rv{0, (0, 0), floatX, False}.out]\r\n  warnings.warn(\r\nc:\\Users\\zufal\\miniconda3\\envs\\murefidev\\lib\\site-packages\\pymc\\logprob\\joint_logprob.py:167: UserWarning: Found a random variable that was neither among the observations nor the conditioned variables: [studentt_rv{0, (0, 0, 0), floatX, False}.0, studentt_rv{0, (0, 0, 0), floatX, False}.out]\r\n  warnings.warn(\r\nc:\\Users\\zufal\\miniconda3\\envs\\murefidev\\lib\\site-packages\\pymc\\logprob\\joint_logprob.py:167: UserWarning: Found a random variable that was neither among the observations nor the conditioned variables: [normal_rv{0, (0, 0), floatX, False}.0, normal_rv{0, (0, 0), floatX, False}.out]\r\n  warnings.warn(\n```\n\n\n### PyMC version information:\n\n* PyMC v4.2.2 (confirmed)\r\n* PyMC v5.0.0 (confirmed)\n\n### Context for the issue:\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6401/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6397", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6397/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6397/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6397/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6397", "id": 1496324135, "node_id": "PR_kwDOAALxiM5FbtdQ", "number": 6397, "title": "Update PyTensor dependency and fix bugs in inferred mixture logprob", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2031712615, "node_id": "MDU6TGFiZWwyMDMxNzEyNjE1", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/maintenance", "name": "maintenance", "color": "71f271", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-12-14T10:44:58Z", "updated_at": "2023-04-05T07:27:27Z", "closed_at": "2022-12-15T13:06:07Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6397", "html_url": "https://github.com/pymc-devs/pymc/pull/6397", "diff_url": "https://github.com/pymc-devs/pymc/pull/6397.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6397.patch", "merged_at": "2022-12-15T13:06:07Z"}, "body": "Will need to wait for the conda-forge release", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6397/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6385", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6385/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6385/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6385/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6385", "id": 1490098822, "node_id": "I_kwDOAALxiM5Y0RqG", "number": 6385, "title": "BUG: Flaky test `test_truncation_continuous_random`", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-12-11T15:06:49Z", "updated_at": "2023-04-18T12:33:03Z", "closed_at": "2023-04-18T12:33:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Describe the issue:\n\nFailed in unreladed PR #6304 \n\n### Reproduceable code example:\n\n```python\npytest -v pymc/tests/distributions/test_truncated.py::test_truncation_continuous_random\n```\n\n\n### Error message:\n\n```shell\nFAILED pymc/tests/distributions/test_truncated.py::test_truncation_continuous_random[icdf--1-inf] - AssertionError: assert 0.00029154767179062624 > 0.001\r\n +  where 0.00029154767179062624 = CramerVonMisesResult(statistic=1.3978473883420102, pvalue=0.00029154767179062624).pvalue\r\n +    where CramerVonMisesResult(statistic=1.3978473883420102, pvalue=0.00029154767179062624) = <function cramervonmises at 0x7fe3eac1d870>(array([ 5.69499391e-01,  2.47397436e+01,  1.59518273e+01,  1.19881466e+01,\\n        3.53070763e+00,  1.14527299e+01,  1.48815303e+01,  1.64068971e+00,\\n        2.28426907e+01,  3.36705057e+00,  1.21290969e+01, -7.55946933e-02,\\n        5.76106370e+00,  2.30883716e+01,  5.74610573e+00,  1.07169945e+01,\\n        5.00904331e+00,  6.01263856e+00,  2.02089929e+01,  1.03287033e+01,\\n        1.07322193e+01,  9.79322368e+00,  3.13616682e+00,  1.13465281e+01,\\n        6.53586089e-01,  5.94285131e+00,  9.50424760e+00, -9.78666984e-01,\\n        1.23418498e+00,  4.16737213e+00,  1.12980372e+01,  1.27240973e+01,\\n        3.98939853e-01,  8.70598214e+00,  3.63015193e+00,  5.40308669e+00,\\n        4.31912879e+00,  2.90946154e+00,  3.25137568e+00,  5.56296972e+00,\\n        1.09199292e+01,  1.17052842e+00,  3.62962935e+00,  1.16261713e-02,\\n        5.18439612e+00,  6.43709993e+00,  2.41920212e+01,  1.29745230e+01,\\n        1.05114139e+01,  5.28257611e+00,  8.41240594e+00,  2.08172949e+00,\\n        8.83188236e+00,  1.02987229e+01,  6.25962307e+00,  1.19238582e+00,\\n        1.07447110e+01,  2.77491370e+00,  1.00046110e+01,  6.24380930e+00,\\n        5.50002639e+00,  4.64123666e+00,  5.56624736e+00,  4.35744863e+00,\\n        2.10564715e+01,  1.21630667e+00,  1.29396488e+01,  2.53395390e+00,\\n        7.79967421e+00,  7.52335090e+00,  2.21210625e+01, -7.37679468e-01,\\n        5.90018503e+00,  1.03908705e+01,  8.91184552e+00,  1.34874394e+01,\\n        2.45453866e+00,  2.46426170e+01,  6.78611558e+00,  1.31376650e-01,\\n        4.54842134e+00,  1.42594625e+01,  1.14890260e+01,  1.87003560e+01,\\n        5.56388091e+00,  1.72000795e+00,  1.84981616e+00,  1.04547711e+01,\\n        3.76992771e+00, -7.04581608e-01,  1.20767486e+01,  6.32423261e+00,\\n        1.24976852e+01,  8.63066183e+00, -1.82482794e-01,  9.19639513e-01,\\n        1.68271372e+00,  1.64281006e+01,  3.82550704e+00,  7.41977822e+00,\\n        4.58917347e+00,  1.55792349e+00,  1.41839205e+01,  5.66883426e+00,\\n        1.15791970e+00,  1.85168113e-01,  6.97898813e+00,  1.57004459e+01,\\n        1.57229656e+00,  9.35586658e+00,  4.64331467e+00,  1.20576611e+01,\\n        9.79360331e+00,  3.59171036e+00,  8.61009728e-01,  1.38048321e+01,\\n        1.47716920e+01,  4.80021417e+00,  5.46605708e+00,  1.00305083e+01,\\n        1.35790284e+01,  1.99444842e+01,  1.09547740e+01,  7.89702866e+00,\\n        1.88658871e+00,  5.68323106e+00,  1.17615582e+01,  1.49334995e+01,\\n        1.27340660e+01,  9.05197948e+00, -9.70167258e-01,  1.71053279e+01,\\n        2.13136456e+00,  6.81910955e+00,  7.69270141e+00,  1.05578244e+01,\\n        1.97849955e+01,  2.30536890e+01,  1.03748390e+01,  1.51638896e+01,\\n        3.07162133e+00,  5.97464438e+00,  1.08013784e+01,  8.09618421e+00,\\n        7.54603406e+00,  1.21518766e+01,  1.11290091e+01, -3.31644765e-01,\\n        3.12523945e+00,  1.21933867e+01,  3.20923765e+00,  1.90604401e+01,\\n        4.96096124e+00,  4.24202594e+00,  4.58939167e-01,  1.18228785e+01,\\n        1.58987361e+01,  1.31667060e+01,  1.48232898e+01,  8.86492614e+00,\\n        1.40562114e+00,  2.40611524e+01,  1.26716501e+01,  9.15930274e+00,\\n        3.76749164e+00,  2.00433641e+00, -3.35510231e-01,  1.56089381e+01,\\n        1.47681631e+01,  7.66681630e+00,  1.07243632e+01,  1.35655083e+01,\\n        3.67553340e+00,  4.83548599e+00,  1.81676205e+01,  1.57215165e+01,\\n        1.74978724e+00,  5.43803856e+00,  2.37500226e+01,  2.00631500e+01,\\n        8.45099861e+00,  1.74424651e+01,  9.23734224e+00, -1.53866975e-01,\\n        2.64686402e+00,  1.13773958e+01,  1.40274447e+00,  1.36005812e+01,\\n        1.47627018e+01, -3.82129207e-01, -9.00947727e-01, -2.35158914e-01,\\n        1.53578292e+01,  5.27101863e+00,  1.62170360e+01,  1.07353279e+01,\\n        3.73873115e+00,  1.35122728e+01,  4.24442432e+00,  1.12992186e+01,\\n       -1.88115377e-01,  7.91977638e+00,  1.61012705e+01,  1.29286897e+01,\\n        4.89930049e+00,  1.16168242e-02,  7.12144802e+00,  4.88909271e+00,\\n        1.24770783e+00,  2.10518883e+00,  5.25307216e-01,  8.69254436e+00,\\n        4.66930394e+00,  3.45391597e+00,  7.32976017e+00,  1.04352317e+01,\\n        7.64175466e+00,  7.71577079e+00, -4.58145434e-02,  4.00978958e+00,\\n        3.70778324e+00,  1.24704611e+01,  1.07918973e+01, -4.74852825e-01,\\n        8.19119842e+00,  7.03142190e+00,  2.67610932e+00,  4.18568476e+00,\\n        4.43777905e+00,  8.10496256e+00,  1.06936360e+01,  2.26337868e+01,\\n        1.33450429e+01,  8.33629977e+00,  5.91933785e+00,  7.69625086e+00,\\n       -1.13634934e-01,  2.70111983e-01,  1.06169630e+00,  2.32204487e+00,\\n        1.55662407e+01,  2.31523966e+00,  7.79739976e+00,  1.08429527e+01,\\n        1.91012770e+01,  1.02306845e+01,  8.83735649e+00,  1.07327439e+01,\\n        7.63956133e+00,  1.25442309e-01,  1.27064040e+01,  1.95271482e+01,\\n        1.18027824e+01,  5.85400919e+00,  1.02875013e+01,  1.42565752e+01,\\n        1.52891313e+01,  8.86827983e+00,  1.21135020e+01,  1.89344303e+00,\\n        8.46386320e+00,  7.75445241e+00,  2.92858375e+01,  1.25460442e+01,\\n        1.12969732e+01,  4.64140136e+00,  1.19959106e-01,  5.98576901e-01,\\n        7.56334440e+00,  7.80815549e+00, -7.52210925e-02,  3.31519693e+00,\\n        1.89885445e+01,  1.85627753e+01,  1.42959523e+01,  1.74831396e+01,\\n        1.26692277e+01,  1.75982827e+00,  1.95416947e+01,  2.29228988e+00,\\n        1.14355017e+01,  9.10964351e+00,  1.72458379e+01,  1.29832026e+01,\\n        1.72879147e+01,  6.25295852e+00,  1.33199786e+01,  2.14428771e+00,\\n        6.05519581e+00,  1.79119139e-01,  1.77630300e+01,  1.79042799e+01,\\n        3.41632954e+00,  1.64664235e+01,  2.21598003e+00, -2.78205204e-01,\\n        4.71518498e+00,  5.16445410e+00,  1.87285124e+01,  1.45360500e+01,\\n        4.73573428e-03,  4.11192304e+00, -4.69292561e-01,  7.23294030e+00,\\n        1.46414376e+01,  7.96843516e+00,  1.81895218e+01,  1.90751077e+01,\\n        1.22177610e+01,  1.81077880e+00,  9.14085712e+00,  1.87624717e+01,\\n        9.23836422e+00,  8.63606024e-01,  6.48769330e+00,  5.23166763e+00,\\n        2.35358843e+00,  6.10555945e+00,  1.01199644e+01,  6.90607500e+00,\\n        2.59437418e+00,  4.22609192e+00,  5.58380908e+00,  2.72737408e+01,\\n        1.37477481e+01,  9.12183807e-01,  1.02487762e+00,  5.27640358e-01,\\n        1.92791315e+01,  1.50359102e+01, -7.50142801e-01,  1.08801728e+01,\\n        3.93238164e+00,  7.75815212e+00,  1.19293478e+01,  8.77265856e+00,\\n        5.69163106e+00,  1.29460857e+01,  1.34161224e+01,  4.77510823e+00,\\n        8.23718483e+00,  8.07821977e+00,  9.16640029e+00,  6.85557036e+00,\\n        8.11271633e-01,  9.69726641e+00,  8.39293889e-01,  8.22415207e+00,\\n        1.30720682e+01,  5.39938940e+00,  1.04727769e+01,  8.25762332e+00,\\n        8.88773648e+00,  2.08589319e+01,  1.53854580e+01,  2.52688737e+00,\\n        4.32675379e+00,  1.07196975e+01,  1.64549921e+01,  8.40771233e+00,\\n        1.88375993e+01,  5.43102409e+00,  7.83822612e+00,  5.58645287e+00,\\n        4.80284377e+00,  7.61018088e+00,  1.86888774e+00,  1.06843632e+01,\\n        1.05860340e+01,  7.19203462e+00,  1.91775247e+00,  1.13988676e+01,\\n        1.07801425e+01,  3.13708773e+00,  3.15532399e+00,  2.67222136e+00,\\n        1.16487450e+01,  6.05041979e+00,  1.75100409e+00,  9.31822298e+00,\\n        1.13697891e+01,  1.92492953e+01,  2.56846545e-01,  1.15078373e+01,\\n       -7.23777958e-01,  1.47310648e+01,  1.55874769e+01,  1.40170269e+01,\\n        4.22441165e+00, -5.74207995e-01,  1.51168991e+01,  4.79364014e+00,\\n        1.50093802e+00,  6.26221767e+00,  9.72943626e+00,  4.04218493e-02,\\n        4.76944898e+00,  6.25204693e+00,  8.68402098e+00,  6.92597226e+00,\\n        4.26714869e-01,  8.70844245e+00,  9.71877551e+00,  2.16451940e-01,\\n        1.94464503e+01,  1.90957474e+01,  7.33672106e+00,  1.44496227e+01,\\n        7.34358150e+00,  1.87109876e+01,  2.08602224e+00,  5.65953013e-01,\\n        2.83899878e+00,  3.96383225e+00,  2.64714403e+01,  1.78813155e+01,\\n        5.72036206e+00,  1.56476282e+01,  1.62040981e+01,  7.47446827e+00,\\n        1.63991089e+01,  5.39570496e+00,  9.91735291e+00,  4.86074393e+00,\\n        7.98673716e+00,  5.46214637e+00,  6.48226508e-01,  2.02940326e+01,\\n        3.69702234e+00,  1.83283558e+01,  1.62538710e+01,  7.96740607e+00,\\n        1.01868767e+01,  3.97452081e+00,  1.21252554e+01,  3.82886841e+00,\\n        4.97264083e+00,  1.07185471e+01,  2.91483203e+00,  4.60691790e-01,\\n        3.37915413e-01,  1.86136314e+01,  1.10514674e+01,  1.89757027e+01,\\n        1.63093257e+01,  5.90080267e-01,  1.70762174e+01,  5.57054409e+00,\\n        7.70277869e-02,  9.30475156e+00,  1.42059177e+01,  5.09815867e+00,\\n       -6.76821222e-02, -9.50918720e-01,  1.76065463e+01,  1.11556361e+01,\\n        9.98097896e+00,  4.46593836e+00,  1.23728995e+01,  4.58140864e+00,\\n        4.09355949e-01,  9.68842898e+00, -7.33192165e-01,  2.08026495e+00,\\n        4.85621225e+00,  4.83381223e+00,  1.32001294e+01,  1.79479190e+01,\\n        8.24473793e+00,  1.40946699e+01,  1.06003291e+01,  1.00875175e+01,\\n        1.39954152e+01,  7.36617039e+00,  2.65244940e+01,  2.84874137e-01,\\n        9.43748727e+00,  5.60669687e-02, -8.97544346e-02, -2.03346026e-01,\\n        4.52794140e+00,  7.28973373e+00,  1.56996417e+00,  7.69521677e+00,\\n       -2.76643620e-02,  2.90504751e+00,  1.41248585e+01,  9.55334737e+00,\\n        3.25578268e-01,  1.77922909e+00, -2.61340937e-01,  9.48817726e+00,\\n        6.57969933e+00,  5.77968117e+00,  7.31625941e-01,  5.79316593e+00,\\n        8.33536753e+00,  8.80821932e+00,  1.86688971e+01, -1.57542582e-01]), <bound method rv_frozen.cdf of <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x7fe3df526c80>>)\r\n +      where <function cramervonmises at 0x7fe3eac1d870> = <module 'scipy.stats' from '/usr/share/miniconda3/envs/pymc-test/lib/python3.10/site-packages/scipy/stats/__init__.py'>.cramervonmises\r\n +        where <module 'scipy.stats' from '/usr/share/miniconda3/envs/pymc-test/lib/python3.10/site-packages/scipy/stats/__init__.py'> = scipy.stats\r\n +      and   array([ 5.69499391e-01,  2.47397436e+01,  1.59518273e+01,  1.19881466e+01,\\n        3.53070763e+00,  1.14527299e+01,  1.48815303e+01,  1.64068971e+00,\\n        2.28426907e+01,  3.36705057e+00,  1.21290969e+01, -7.55946933e-02,\\n        5.76106370e+00,  2.30883716e+01,  5.74610573e+00,  1.07169945e+01,\\n        5.00904331e+00,  6.01263856e+00,  2.02089929e+01,  1.03287033e+01,\\n        1.07322193e+01,  9.79322368e+00,  3.13616682e+00,  1.13465281e+01,\\n        6.53586089e-01,  5.94285131e+00,  9.50424760e+00, -9.78666984e-01,\\n        1.23418498e+00,  4.16737213e+00,  1.12980372e+01,  1.27240973e+01,\\n        3.98939853e-01,  8.70598214e+00,  3.63015193e+00,  5.40308669e+00,\\n        4.31912879e+00,  2.90946154e+00,  3.25137568e+00,  5.56296972e+00,\\n        1.09199292e+01,  1.17052842e+00,  3.62962935e+00,  1.16261713e-02,\\n        5.18439612e+00,  6.43709993e+00,  2.41920212e+01,  1.29745230e+01,\\n        1.05114139e+01,  5.28257611e+00,  8.41240594e+00,  2.08172949e+00,\\n        8.83188236e+00,  1.02987229e+01,  6.25962307e+00,  1.19238582e+00,\\n        1.07447110e+01,  2.77491370e+00,  1.00046110e+01,  6.24380930e+00,\\n        5.50002639e+00,  4.64123666e+00,  5.56624736e+00,  4.35744863e+00,\\n        2.10564715e+01,  1.21630667e+00,  1.29396488e+01,  2.53395390e+00,\\n        7.79967421e+00,  7.52335090e+00,  2.21210625e+01, -7.37679468e-01,\\n        5.90018503e+00,  1.03908705e+01,  8.91184552e+00,  1.34874394e+01,\\n        2.45453866e+00,  2.46426170e+01,  6.78611558e+00,  1.31376650e-01,\\n        4.54842134e+00,  1.42594625e+01,  1.14890260e+01,  1.87003560e+01,\\n        5.56388091e+00,  1.72000795e+00,  1.84981616e+00,  1.04547711e+01,\\n        3.76992771e+00, -7.04581608e-01,  1.20767486e+01,  6.32423261e+00,\\n        1.24976852e+01,  8.63066183e+00, -1.82482794e-01,  9.19639513e-01,\\n        1.68271372e+00,  1.64281006e+01,  3.82550704e+00,  7.41977822e+00,\\n        4.58917347e+00,  1.55792349e+00,  1.41839205e+01,  5.66883426e+00,\\n        1.15791970e+00,  1.85168113e-01,  6.97898813e+00,  1.57004459e+01,\\n        1.57229656e+00,  9.35586658e+00,  4.64331467e+00,  1.20576611e+01,\\n        9.79360331e+00,  3.59171036e+00,  8.61009728e-01,  1.38048321e+01,\\n        1.47716920e+01,  4.80021417e+00,  5.46605708e+00,  1.00305083e+01,\\n        1.35790284e+01,  1.99444842e+01,  1.09547740e+01,  7.89702866e+00,\\n        1.88658871e+00,  5.68323106e+00,  1.17615582e+01,  1.49334995e+01,\\n        1.27340660e+01,  9.05197948e+00, -9.70167258e-01,  1.71053279e+01,\\n        2.13136456e+00,  6.81910955e+00,  7.69270141e+00,  1.05578244e+01,\\n        1.97849955e+01,  2.30536890e+01,  1.03748390e+01,  1.51638896e+01,\\n        3.07162133e+00,  5.97464438e+00,  1.08013784e+01,  8.09618421e+00,\\n        7.54603406e+00,  1.21518766e+01,  1.11290091e+01, -3.31644765e-01,\\n        3.12523945e+00,  1.21933867e+01,  3.20923765e+00,  1.90604401e+01,\\n        4.96096124e+00,  4.24202594e+00,  4.58939167e-01,  1.18228785e+01,\\n        1.58987361e+01,  1.31667060e+01,  1.48232898e+01,  8.86492614e+00,\\n        1.40562114e+00,  2.40611524e+01,  1.26716501e+01,  9.15930274e+00,\\n        3.76749164e+00,  2.00433641e+00, -3.35510231e-01,  1.56089381e+01,\\n        1.47681631e+01,  7.66681630e+00,  1.07243632e+01,  1.35655083e+01,\\n        3.67553340e+00,  4.83548599e+00,  1.81676205e+01,  1.57215165e+01,\\n        1.74978724e+00,  5.43803856e+00,  2.37500226e+01,  2.00631500e+01,\\n        8.45099861e+00,  1.74424651e+01,  9.23734224e+00, -1.53866975e-01,\\n        2.64686402e+00,  1.13773958e+01,  1.40274447e+00,  1.36005812e+01,\\n        1.47627018e+01, -3.82129207e-01, -9.00947727e-01, -2.35158914e-01,\\n        1.53578292e+01,  5.27101863e+00,  1.62170360e+01,  1.07353279e+01,\\n        3.73873115e+00,  1.35122728e+01,  4.24442432e+00,  1.12992186e+01,\\n       -1.88115377e-01,  7.91977638e+00,  1.61012705e+01,  1.29286897e+01,\\n        4.89930049e+00,  1.16168242e-02,  7.12144802e+00,  4.88909271e+00,\\n        1.24770783e+00,  2.10518883e+00,  5.25307216e-01,  8.69254436e+00,\\n        4.66930394e+00,  3.45391597e+00,  7.32976017e+00,  1.04352317e+01,\\n        7.64175466e+00,  7.71577079e+00, -4.58145434e-02,  4.00978958e+00,\\n        3.70778324e+00,  1.24704611e+01,  1.07918973e+01, -4.74852825e-01,\\n        8.19119842e+00,  7.03142190e+00,  2.67610932e+00,  4.18568476e+00,\\n        4.43777905e+00,  8.10496256e+00,  1.06936360e+01,  2.26337868e+01,\\n        1.33450429e+01,  8.33629977e+00,  5.91933785e+00,  7.69625086e+00,\\n       -1.13634934e-01,  2.70111983e-01,  1.06169630e+00,  2.32204487e+00,\\n        1.55662407e+01,  2.31523966e+00,  7.79739976e+00,  1.08429527e+01,\\n        1.91012770e+01,  1.02306845e+01,  8.83735649e+00,  1.07327439e+01,\\n        7.63956133e+00,  1.25442309e-01,  1.27064040e+01,  1.95271482e+01,\\n        1.18027824e+01,  5.85400919e+00,  1.02875013e+01,  1.42565752e+01,\\n        1.52891313e+01,  8.86827983e+00,  1.21135020e+01,  1.89344303e+00,\\n        8.46386320e+00,  7.75445241e+00,  2.92858375e+01,  1.25460442e+01,\\n        1.12969732e+01,  4.64140136e+00,  1.19959106e-01,  5.98576901e-01,\\n        7.56334440e+00,  7.80815549e+00, -7.52210925e-02,  3.31519693e+00,\\n        1.89885445e+01,  1.85627753e+01,  1.42959523e+01,  1.74831396e+01,\\n        1.26692277e+01,  1.75982827e+00,  1.95416947e+01,  2.29228988e+00,\\n        1.14355017e+01,  9.10964351e+00,  1.72458379e+01,  1.29832026e+01,\\n        1.72879147e+01,  6.25295852e+00,  1.33199786e+01,  2.14428771e+00,\\n        6.05519581e+00,  1.79119139e-01,  1.77630300e+01,  1.79042799e+01,\\n        3.41632954e+00,  1.64664235e+01,  2.21598003e+00, -2.78205204e-01,\\n        4.71518498e+00,  5.16445410e+00,  1.87285124e+01,  1.45360500e+01,\\n        4.73573428e-03,  4.11192304e+00, -4.69292561e-01,  7.23294030e+00,\\n        1.46414376e+01,  7.96843516e+00,  1.81895218e+01,  1.90751077e+01,\\n        1.22177610e+01,  1.81077880e+00,  9.14085712e+00,  1.87624717e+01,\\n        9.23836422e+00,  8.63606024e-01,  6.48769330e+00,  5.23166763e+00,\\n        2.35358843e+00,  6.10555945e+00,  1.01199644e+01,  6.90607500e+00,\\n        2.59437418e+00,  4.22609192e+00,  5.58380908e+00,  2.72737408e+01,\\n        1.37477481e+01,  9.12183807e-01,  1.02487762e+00,  5.27640358e-01,\\n        1.92791315e+01,  1.50359102e+01, -7.50142801e-01,  1.08801728e+01,\\n        3.93238164e+00,  7.75815212e+00,  1.19293478e+01,  8.77265856e+00,\\n        5.69163106e+00,  1.29460857e+01,  1.34161224e+01,  4.77510823e+00,\\n        8.23718483e+00,  8.07821977e+00,  9.16640029e+00,  6.85557036e+00,\\n        8.11271633e-01,  9.69726641e+00,  8.39293889e-01,  8.22415207e+00,\\n        1.30720682e+01,  5.39938940e+00,  1.04727769e+01,  8.25762332e+00,\\n        8.88773648e+00,  2.08589319e+01,  1.53854580e+01,  2.52688737e+00,\\n        4.32675379e+00,  1.07196975e+01,  1.64549921e+01,  8.40771233e+00,\\n        1.88375993e+01,  5.43102409e+00,  7.83822612e+00,  5.58645287e+00,\\n        4.80284377e+00,  7.61018088e+00,  1.86888774e+00,  1.06843632e+01,\\n        1.05860340e+01,  7.19203462e+00,  1.91775247e+00,  1.13988676e+01,\\n        1.07801425e+01,  3.13708773e+00,  3.15532399e+00,  2.67222136e+00,\\n        1.16487450e+01,  6.05041979e+00,  1.75100409e+00,  9.31822298e+00,\\n        1.13697891e+01,  1.92492953e+01,  2.56846545e-01,  1.15078373e+01,\\n       -7.23777958e-01,  1.47310648e+01,  1.55874769e+01,  1.40170269e+01,\\n        4.22441165e+00, -5.74207995e-01,  1.51168991e+01,  4.79364014e+00,\\n        1.50093802e+00,  6.26221767e+00,  9.72943626e+00,  4.04218493e-02,\\n        4.76944898e+00,  6.25204693e+00,  8.68402098e+00,  6.92597226e+00,\\n        4.26714869e-01,  8.70844245e+00,  9.71877551e+00,  2.16451940e-01,\\n        1.94464503e+01,  1.90957474e+01,  7.33672106e+00,  1.44496227e+01,\\n        7.34358150e+00,  1.87109876e+01,  2.08602224e+00,  5.65953013e-01,\\n        2.83899878e+00,  3.96383225e+00,  2.64714403e+01,  1.78813155e+01,\\n        5.72036206e+00,  1.56476282e+01,  1.62040981e+01,  7.47446827e+00,\\n        1.63991089e+01,  5.39570496e+00,  9.91735291e+00,  4.86074393e+00,\\n        7.98673716e+00,  5.46214637e+00,  6.48226508e-01,  2.02940326e+01,\\n        3.69702234e+00,  1.83283558e+01,  1.62538710e+01,  7.96740607e+00,\\n        1.01868767e+01,  3.97452081e+00,  1.21252554e+01,  3.82886841e+00,\\n        4.97264083e+00,  1.07185471e+01,  2.91483203e+00,  4.60691790e-01,\\n        3.37915413e-01,  1.86136314e+01,  1.10514674e+01,  1.89757027e+01,\\n        1.63093257e+01,  5.90080267e-01,  1.70762174e+01,  5.57054409e+00,\\n        7.70277869e-02,  9.30475156e+00,  1.42059177e+01,  5.09815867e+00,\\n       -6.76821222e-02, -9.50918720e-01,  1.76065463e+01,  1.11556361e+01,\\n        9.98097896e+00,  4.46593836e+00,  1.23728995e+01,  4.58140864e+00,\\n        4.09355949e-01,  9.68842898e+00, -7.33192165e-01,  2.08026495e+00,\\n        4.85621225e+00,  4.83381223e+00,  1.32001294e+01,  1.79479190e+01,\\n        8.24473793e+00,  1.40946699e+01,  1.06003291e+01,  1.00875175e+01,\\n        1.39954152e+01,  7.36617039e+00,  2.65244940e+01,  2.84874137e-01,\\n        9.43748727e+00,  5.60669687e-02, -8.97544346e-02, -2.03346026e-01,\\n        4.52794140e+00,  7.28973373e+00,  1.56996417e+00,  7.69521677e+00,\\n       -2.76643620e-02,  2.90504751e+00,  1.41248585e+01,  9.55334737e+00,\\n        3.25578268e-01,  1.77922909e+00, -2.61340937e-01,  9.48817726e+00,\\n        6.57969933e+00,  5.77968117e+00,  7.31625941e-01,  5.79316593e+00,\\n        8.33536753e+00,  8.80821932e+00,  1.86688971e+01, -1.57542582e-01]) = <built-in method ravel of numpy.ndarray object at 0x7fe3de9d0690>()\r\n +        where <built-in method ravel of numpy.ndarray object at 0x7fe3de9d0690> = array([[ 5.69499391e-01,  2.47397436e+01,  1.59518273e+01,\\n         1.19881466e+01,  3.53070763e+00,  1.14527299e+01,\\n         1.48815303e+01,  1.64068971e+00,  2.28426907e+01,\\n         3.36705057e+00,  1.21290969e+01, -7.55946933e-02,\\n         5.76106370e+00,  2.30883716e+01,  5.74610573e+00,\\n         1.07169945e+01,  5.00904331e+00,  6.01263856e+00,\\n         2.02089929e+01,  1.03287033e+01,  1.07322193e+01,\\n         9.79322368e+00,  3.13616682e+00,  1.13465281e+01,\\n         6.53586089e-01,  5.94285131e+00,  9.50424760e+00,\\n        -9.78666984e-01,  1.23418498e+00,  4.16737213e+00,\\n         1.12980372e+01,  1.27240973e+01,  3.98939853e-01,\\n         8.70598214e+00,  3.63015193e+00,  5.40308669e+00,\\n         4.31912879e+00,  2.90946154e+00,  3.25137568e+00,\\n         5.56296972e+00,  1.09199292e+01,  1.17052842e+00,\\n         3.62962935e+00,  1.16261713e-02,  5.18439612e+00,\\n         6.43709993e+00,  2.41920212e+01,  1.29745230e+01,\\n         1.05114139e+01,  5.28257611e+00,  8.41240594e+00,\\n         2.08172949e+00,  8.83188236e+00,  1.02987229e+01,\\n         6.25962307e+00,  1.19238582e+00,  1.07447110e+01,\\n         2.77491370e+00,  1.00046110e+01,  6.24380930e+00,\\n         5.50002639e+00,  4.64123666e+00,  5.56624736e+00,\\n         4.35744863e+00,  2.10564715e+01,  1.21630667e+00,\\n         1.29396488e+01,  2.53395390e+00,  7.79967421e+00,\\n         7.52335090e+00,  2.21210625e+01, -7.37679468e-01,\\n         5.90018503e+00,  1.03908705e+01,  8.91184552e+00,\\n         1.34874394e+01,  2.45453866e+00,  2.46426170e+01,\\n         6.78611558e+00,  1.31376650e-01,  4.54842134e+00,\\n         1.42594625e+01,  1.14890260e+01,  1.87003560e+01,\\n         5.56388091e+00,  1.72000795e+00,  1.84981616e+00,\\n         1.04547711e+01,  3.76992771e+00, -7.04581608e-01,\\n         1.20767486e+01,  6.32423261e+00,  1.24976852e+01,\\n         8.63066183e+00, -1.82482794e-01,  9.19639513e-01,\\n         1.68271372e+00,  1.64281006e+01,  3.82550704e+00,\\n         7.41977822e+00],\\n       [ 4.58917347e+00,  1.55792349e+00,  1.41839205e+01,\\n         5.66883426e+00,  1.15791970e+00,  1.85168113e-01,\\n         6.97898813e+00,  1.57004459e+01,  1.57229656e+00,\\n         9.35586658e+00,  4.64331467e+00,  1.20576611e+01,\\n         9.79360331e+00,  3.59171036e+00,  8.61009728e-01,\\n         1.38048321e+01,  1.47716920e+01,  4.80021417e+00,\\n         5.46605708e+00,  1.00305083e+01,  1.35790284e+01,\\n         1.99444842e+01,  1.09547740e+01,  7.89702866e+00,\\n         1.88658871e+00,  5.68323106e+00,  1.17615582e+01,\\n         1.49334995e+01,  1.27340660e+01,  9.05197948e+00,\\n        -9.70167258e-01,  1.71053279e+01,  2.13136456e+00,\\n         6.81910955e+00,  7.69270141e+00,  1.05578244e+01,\\n         1.97849955e+01,  2.30536890e+01,  1.03748390e+01,\\n         1.51638896e+01,  3.07162133e+00,  5.97464438e+00,\\n         1.08013784e+01,  8.09618421e+00,  7.54603406e+00,\\n         1.21518766e+01,  1.11290091e+01, -3.31644765e-01,\\n         3.12523945e+00,  1.21933867e+01,  3.20923765e+00,\\n         1.90604401e+01,  4.96096124e+00,  4.24202594e+00,\\n         4.58939167e-01,  1.18228785e+01,  1.58987361e+01,\\n         1.31667060e+01,  1.48232898e+01,  8.86492614e+00,\\n         1.40562114e+00,  2.40611524e+01,  1.26716501e+01,\\n         9.15930274e+00,  3.76749164e+00,  2.00433641e+00,\\n        -3.35510231e-01,  1.56089381e+01,  1.47681631e+01,\\n         7.66681630e+00,  1.07243632e+01,  1.35655083e+01,\\n         3.67553340e+00,  4.83548599e+00,  1.81676205e+01,\\n         1.57215165e+01,  1.74978724e+00,  5.43803856e+00,\\n         2.37500226e+01,  2.00631500e+01,  8.45099861e+00,\\n         1.74424651e+01,  9.23734224e+00, -1.53866975e-01,\\n         2.64686402e+00,  1.13773958e+01,  1.40274447e+00,\\n         1.36005812e+01,  1.47627018e+01, -3.82129207e-01,\\n        -9.00947727e-01, -2.35158914e-01,  1.53578292e+01,\\n         5.27101863e+00,  1.62170360e+01,  1.07353279e+01,\\n         3.73873115e+00,  1.35122728e+01,  4.24442432e+00,\\n         1.12992186e+01],\\n       [-1.88115377e-01,  7.91977638e+00,  1.61012705e+01,\\n         1.29286897e+01,  4.89930049e+00,  1.16168242e-02,\\n         7.12144802e+00,  4.88909271e+00,  1.24770783e+00,\\n         2.10518883e+00,  5.25307216e-01,  8.69254436e+00,\\n         4.66930394e+00,  3.45391597e+00,  7.32976017e+00,\\n         1.04352317e+01,  7.64175466e+00,  7.71577079e+00,\\n        -4.58145434e-02,  4.00978958e+00,  3.70778324e+00,\\n         1.24704611e+01,  1.07918973e+01, -4.74852825e-01,\\n         8.19119842e+00,  7.03142190e+00,  2.67610932e+00,\\n         4.18568476e+00,  4.43777905e+00,  8.10496256e+00,\\n         1.06936360e+01,  2.26337868e+01,  1.33450429e+01,\\n         8.33629977e+00,  5.91933785e+00,  7.69625086e+00,\\n        -1.13634934e-01,  2.70111983e-01,  1.06169630e+00,\\n         2.32204487e+00,  1.55662407e+01,  2.31523966e+00,\\n         7.79739976e+00,  1.08429527e+01,  1.91012770e+01,\\n         1.02306845e+01,  8.83735649e+00,  1.07327439e+01,\\n         7.63956133e+00,  1.25442309e-01,  1.27064040e+01,\\n         1.95271482e+01,  1.18027824e+01,  5.85400919e+00,\\n         1.02875013e+01,  1.42565752e+01,  1.52891313e+01,\\n         8.86827983e+00,  1.21135020e+01,  1.89344303e+00,\\n         8.46386320e+00,  7.75445241e+00,  2.92858375e+01,\\n         1.25460442e+01,  1.12969732e+01,  4.64140136e+00,\\n         1.19959106e-01,  5.98576901e-01,  7.56334440e+00,\\n         7.80815549e+00, -7.52210925e-02,  3.31519693e+00,\\n         1.89885445e+01,  1.85627753e+01,  1.42959523e+01,\\n         1.74831396e+01,  1.26692277e+01,  1.75982827e+00,\\n         1.95416947e+01,  2.29228988e+00,  1.14355017e+01,\\n         9.10964351e+00,  1.72458379e+01,  1.29832026e+01,\\n         1.72879147e+01,  6.25295852e+00,  1.33199786e+01,\\n         2.14428771e+00,  6.05519581e+00,  1.79119139e-01,\\n         1.77630300e+01,  1.79042799e+01,  3.41632954e+00,\\n         1.64664235e+01,  2.21598003e+00, -2.78205204e-01,\\n         4.71518498e+00,  5.16445410e+00,  1.87285124e+01,\\n         1.45360500e+01],\\n       [ 4.73573428e-03,  4.11192304e+00, -4.69292561e-01,\\n         7.23294030e+00,  1.46414376e+01,  7.96843516e+00,\\n         1.81895218e+01,  1.90751077e+01,  1.22177610e+01,\\n         1.81077880e+00,  9.14085712e+00,  1.87624717e+01,\\n         9.23836422e+00,  8.63606024e-01,  6.48769330e+00,\\n         5.23166763e+00,  2.35358843e+00,  6.10555945e+00,\\n         1.01199644e+01,  6.90607500e+00,  2.59437418e+00,\\n         4.22609192e+00,  5.58380908e+00,  2.72737408e+01,\\n         1.37477481e+01,  9.12183807e-01,  1.02487762e+00,\\n         5.27640358e-01,  1.92791315e+01,  1.50359102e+01,\\n        -7.50142801e-01,  1.08801728e+01,  3.93238164e+00,\\n         7.75815212e+00,  1.19293478e+01,  8.77265856e+00,\\n         5.69163106e+00,  1.29460857e+01,  1.34161224e+01,\\n         4.77510823e+00,  8.23718483e+00,  8.07821977e+00,\\n         9.16640029e+00,  6.85557036e+00,  8.11271633e-01,\\n         9.69726641e+00,  8.39293889e-01,  8.22415207e+00,\\n         1.30720682e+01,  5.39938940e+00,  1.04727769e+01,\\n         8.25762332e+00,  8.88773648e+00,  2.08589319e+01,\\n         1.53854580e+01,  2.52688737e+00,  4.32675379e+00,\\n         1.07196975e+01,  1.64549921e+01,  8.40771233e+00,\\n         1.88375993e+01,  5.43102409e+00,  7.83822612e+00,\\n         5.58645287e+00,  4.80284377e+00,  7.61018088e+00,\\n         1.86888774e+00,  1.06843632e+01,  1.05860340e+01,\\n         7.19203462e+00,  1.91775247e+00,  1.13988676e+01,\\n         1.07801425e+01,  3.13708773e+00,  3.15532399e+00,\\n         2.67222136e+00,  1.16487450e+01,  6.05041979e+00,\\n         1.75100409e+00,  9.31822298e+00,  1.13697891e+01,\\n         1.92492953e+01,  2.56846545e-01,  1.15078373e+01,\\n        -7.23777958e-01,  1.47310648e+01,  1.55874769e+01,\\n         1.40170269e+01,  4.22441165e+00, -5.74207995e-01,\\n         1.51168991e+01,  4.79364014e+00,  1.50093802e+00,\\n         6.26221767e+00,  9.72943626e+00,  4.04218493e-02,\\n         4.76944898e+00,  6.25204693e+00,  8.68402098e+00,\\n         6.92597226e+00],\\n       [ 4.26714869e-01,  8.70844245e+00,  9.71877551e+00,\\n         2.16451940e-01,  1.94464503e+01,  1.90957474e+01,\\n         7.33672106e+00,  1.44496227e+01,  7.34358150e+00,\\n         1.87109876e+01,  2.08602224e+00,  5.65953013e-01,\\n         2.83899878e+00,  3.96383225e+00,  2.64714403e+01,\\n         1.78813155e+01,  5.72036206e+00,  1.56476282e+01,\\n         1.62040981e+01,  7.47446827e+00,  1.63991089e+01,\\n         5.39570496e+00,  9.91735291e+00,  4.86074393e+00,\\n         7.98673716e+00,  5.46214637e+00,  6.48226508e-01,\\n         2.02940326e+01,  3.69702234e+00,  1.83283558e+01,\\n         1.62538710e+01,  7.96740607e+00,  1.01868767e+01,\\n         3.97452081e+00,  1.21252554e+01,  3.82886841e+00,\\n         4.97264083e+00,  1.07185471e+01,  2.91483203e+00,\\n         4.60691790e-01,  3.37915413e-01,  1.86136314e+01,\\n         1.10514674e+01,  1.89757027e+01,  1.63093257e+01,\\n         5.90080267e-01,  1.70762174e+01,  5.57054409e+00,\\n         7.70277869e-02,  9.30475156e+00,  1.42059177e+01,\\n         5.09815867e+00, -6.76821222e-02, -9.50918720e-01,\\n         1.76065463e+01,  1.11556361e+01,  9.98097896e+00,\\n         4.46593836e+00,  1.23728995e+01,  4.58140864e+00,\\n         4.09355949e-01,  9.68842898e+00, -7.33192165e-01,\\n         2.08026495e+00,  4.85621225e+00,  4.83381223e+00,\\n         1.32001294e+01,  1.79479190e+01,  8.24473793e+00,\\n         1.40946699e+01,  1.06003291e+01,  1.00875175e+01,\\n         1.39954152e+01,  7.36617039e+00,  2.65244940e+01,\\n         2.84874137e-01,  9.43748727e+00,  5.60669687e-02,\\n        -8.97544346e-02, -2.03346026e-01,  4.52794140e+00,\\n         7.28973373e+00,  1.56996417e+00,  7.69521677e+00,\\n        -2.76643620e-02,  2.90504751e+00,  1.41248585e+01,\\n         9.55334737e+00,  3.25578268e-01,  1.77922909e+00,\\n        -2.61340937e-01,  9.48817726e+00,  6.57969933e+00,\\n         5.77968117e+00,  7.31625941e-01,  5.79316593e+00,\\n         8.33536753e+00,  8.80821932e+00,  1.86688971e+01,\\n        -1.57542582e-01]]).ravel\r\n +      and   <bound method rv_frozen.cdf of <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x7fe3df526c80>> = <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x7fe3df526c80>.cdf\n```\n\n\n### PyMC version information:\n\nmain\n\n### Context for the issue:\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6385/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6384", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6384/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6384/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6384/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6384", "id": 1490067127, "node_id": "I_kwDOAALxiM5Y0J63", "number": 6384, "title": "BUG: Flaky test `test_truncation_specialized_op`", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}, {"id": 2548173976, "node_id": "MDU6TGFiZWwyNTQ4MTczOTc2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/needs%20info", "name": "needs info", "color": "fbca04", "default": false, "description": "Additional information required"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2022-12-11T14:38:47Z", "updated_at": "2023-02-15T07:56:46Z", "closed_at": "2023-02-15T07:56:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Describe the issue:\n\nIt failed in #6304 and on main: https://github.com/pymc-devs/pymc/actions/runs/3665014447/jobs/6195812078\n\n### Reproduceable code example:\n\n```python\npytest -v pymc/tests/distributions/test_truncated.py::test_truncation_specialized_op\n```\n\n\n### Error message:\n\n```shell\nFAILED pymc/tests/distributions/test_truncated.py::test_truncation_specialized_op[observed] - assert False\r\n +  where False = isinstance(<pytensor.tensor.elemwise.Elemwise object at 0x7fdf5924e1a0>, TruncatedNormalRV)\r\n +    where <pytensor.tensor.elemwise.Elemwise object at 0x7fdf5924e1a0> = Elemwise{identity}(AdvancedIncSubtensor{inplace=False,  set_instead_of_inc=True}.0).op\r\n +      where Elemwise{identity}(AdvancedIncSubtensor{inplace=False,  set_instead_of_inc=True}.0) = xt.owne\n```\n\n\n### PyMC version information:\n\nmain\n\n### Context for the issue:\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6384/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6380", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6380/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6380/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6380/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6380", "id": 1486863056, "node_id": "I_kwDOAALxiM5Yn7rQ", "number": 6380, "title": "BUG: sampling error when indexing over mutliple dimensions", "user": {"login": "flo-schu", "id": 33749653, "node_id": "MDQ6VXNlcjMzNzQ5NjUz", "avatar_url": "https://avatars.githubusercontent.com/u/33749653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flo-schu", "html_url": "https://github.com/flo-schu", "followers_url": "https://api.github.com/users/flo-schu/followers", "following_url": "https://api.github.com/users/flo-schu/following{/other_user}", "gists_url": "https://api.github.com/users/flo-schu/gists{/gist_id}", "starred_url": "https://api.github.com/users/flo-schu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flo-schu/subscriptions", "organizations_url": "https://api.github.com/users/flo-schu/orgs", "repos_url": "https://api.github.com/users/flo-schu/repos", "events_url": "https://api.github.com/users/flo-schu/events{/privacy}", "received_events_url": "https://api.github.com/users/flo-schu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-12-09T14:33:53Z", "updated_at": "2022-12-09T17:27:09Z", "closed_at": "2022-12-09T17:26:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the issue:\n\nWhen indexing/broadcasting a random variable over multiple dimensions, during sampling, a dimension mismatch is called. However, when evaluating the final array, it matches the dimensionality of the input array. The error does not occur, when indexing is only done over one dimension. I'm not sure where the problem lies. Or even preferably, whether there is a better solution for the task.\n\n### Reproduceable code example:\n\n```python\nimport pymc as pm\r\nimport numpy as np\r\nrng = np.random.default_rng(5648)\r\n\r\n# prior dimensions\r\nN = 1\r\nS = 2\r\nT = 3\r\n\r\n# indexer\r\na = np.repeat(np.arange(S), [1,2])\r\nb = np.repeat(np.arange(T), [1,2,1])\r\nK = len(a)\r\nL = len(b)\r\n\r\ny = rng.standard_normal((N,K,L))\r\n\r\nwith pm.Model() as model:\r\n    mu = pm.Normal(\"mu\", size=(N, S, T))\r\n\r\n    mua = mu[:, a, :]\r\n    mub = mua[:, :, b]\r\n\r\n    y = pm.Normal(\"y\", mub, sigma=1, observed=y)\r\n\r\n    prior = pm.sample_prior_predictive()\r\n\r\n    y.eval()\r\n    pm.sample()\n```\n\n\n### Error message:\n\n```shell\npymc.sampling.parallel.RemoteTraceback: \r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"/home/schunckf/.conda/envs/pymc/lib/python3.10/site-packages/aesara/compile/function/types.py\", line 971, in __call__\r\n    self.vm()\r\nAssertionError: SpecifyShape: dim 1 of input has shape 3, expected 1.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/schunckf/.conda/envs/pymc/lib/python3.10/site-packages/pymc/sampling/parallel.py\", line 123, in run\r\n    self._start_loop()\r\n  File \"/home/schunckf/.conda/envs/pymc/lib/python3.10/site-packages/pymc/sampling/parallel.py\", line 176, in _start_loop\r\n    point, stats = self._step_method.step(self._point)\r\n  File \"/home/schunckf/.conda/envs/pymc/lib/python3.10/site-packages/pymc/step_methods/arraystep.py\", line 273, in step\r\n    return super().step(point)\r\n  File \"/home/schunckf/.conda/envs/pymc/lib/python3.10/site-packages/pymc/step_methods/arraystep.py\", line 199, in step\r\n    apoint, stats = self.astep(q)\r\n  File \"/home/schunckf/.conda/envs/pymc/lib/python3.10/site-packages/pymc/step_methods/hmc/base_hmc.py\", line 168, in astep\r\n    start = self.integrator.compute_state(q0, p0)\r\n  File \"/home/schunckf/.conda/envs/pymc/lib/python3.10/site-packages/pymc/step_methods/hmc/integration.py\", line 56, in compute_state\r\n    logp, dlogp = self._logp_dlogp_func(q)\r\n  File \"/home/schunckf/.conda/envs/pymc/lib/python3.10/site-packages/pymc/model.py\", line 409, in __call__\r\n    cost, *grads = self._aesara_function(*grad_vars)\r\n  File \"/home/schunckf/.conda/envs/pymc/lib/python3.10/site-packages/aesara/compile/function/types.py\", line 984, in __call__\r\n    raise_with_op(\r\n  File \"/home/schunckf/.conda/envs/pymc/lib/python3.10/site-packages/aesara/link/utils.py\", line 534, in raise_with_op\r\n    raise exc_value.with_traceback(exc_trace)\r\n  File \"/home/schunckf/.conda/envs/pymc/lib/python3.10/site-packages/aesara/compile/function/types.py\", line 971, in __call__\r\n    self.vm()\r\nAssertionError: SpecifyShape: dim 1 of input has shape 3, expected 1.\r\nApply node that caused the error: SpecifyShape(Elemwise{sub,no_inplace}.0, NoneConst, TensorConstant{1}, NoneConst)\r\nToposort index: 13\r\nInputs types: [TensorType(float64, (None, 3, 4)), <aesara.tensor.type_other.NoneTypeT object at 0x2afa257583a0>, TensorType(int8, ()), <aesara.tensor.type_other.NoneTypeT object at 0x2afa257583a0>]\r\nInputs shapes: [(1, 3, 4), 'No shapes', (), 'No shapes']\r\nInputs strides: [(96, 32, 8), 'No strides', (), 'No strides']\r\nInputs values: ['not shown', None, array(1, dtype=int8), None]\r\nOutputs clients: [[InplaceDimShuffle{2,1,0}(SpecifyShape.0)]]\r\n\r\nHINT: Re-running with most Aesara optimizations disabled could provide a back-trace showing when this node was created. This can be done by setting the Aesara flag 'optimizer=fast_compile'. If that does not work, Aesara optimizations can be disabled with 'optimizer=None'.\r\nHINT: Use the Aesara flag `exception_verbosity=high` for a debug print-out and storage map footprint of this Apply node.\r\n\"\"\"\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nAssertionError: SpecifyShape: dim 1 of input has shape 3, expected 1.\r\nApply node that caused the error: SpecifyShape(Elemwise{sub,no_inplace}.0, NoneConst, TensorConstant{1}, NoneConst)\r\nToposort index: 13\r\nInputs types: [TensorType(float64, (None, 3, 4)), <aesara.tensor.type_other.NoneTypeT object at 0x2afa257583a0>, TensorType(int8, ()), <aesara.tensor.type_other.NoneTypeT object at 0x2afa257583a0>]\r\nInputs shapes: [(1, 3, 4), 'No shapes', (), 'No shapes']\r\nInputs strides: [(96, 32, 8), 'No strides', (), 'No strides']\r\nInputs values: ['not shown', None, array(1, dtype=int8), None]\r\nOutputs clients: [[InplaceDimShuffle{2,1,0}(SpecifyShape.0)]]\r\n\r\nHINT: Re-running with most Aesara optimizations disabled could provide a back-trace showing when this node was created. This can be done by setting the Aesara flag 'optimizer=fast_compile'. If that does not work, Aesara optimizations can be disabled with 'optimizer=None'.\r\nHINT: Use the Aesara flag `exception_verbosity=high` for a debug print-out and storage map footprint of this Apply node.\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 29, in <module>\r\n  File \"/home/schunckf/.conda/envs/pymc/lib/python3.10/site-packages/pymc/sampling/mcmc.py\", line 529, in sample\r\n    mtrace = _mp_sample(**sample_args, **parallel_args)\r\n  File \"/home/schunckf/.conda/envs/pymc/lib/python3.10/site-packages/pymc/sampling/mcmc.py\", line 1019, in _mp_sample\r\n    for draw in sampler:\r\n  File \"/home/schunckf/.conda/envs/pymc/lib/python3.10/site-packages/pymc/sampling/parallel.py\", line 447, in __iter__\r\n    draw = ProcessAdapter.recv_draw(self._active)\r\n  File \"/home/schunckf/.conda/envs/pymc/lib/python3.10/site-packages/pymc/sampling/parallel.py\", line 332, in recv_draw\r\n    raise error from old_error\r\npymc.sampling.parallel.ParallelSamplingError: Chain 0 failed with: SpecifyShape: dim 1 of input has shape 3, expected 1.\r\nApply node that caused the error: SpecifyShape(Elemwise{sub,no_inplace}.0, NoneConst, TensorConstant{1}, NoneConst)\r\nToposort index: 13\r\nInputs types: [TensorType(float64, (None, 3, 4)), <aesara.tensor.type_other.NoneTypeT object at 0x2afa257583a0>, TensorType(int8, ()), <aesara.tensor.type_other.NoneTypeT object at 0x2afa257583a0>]\r\nInputs shapes: [(1, 3, 4), 'No shapes', (), 'No shapes']\r\nInputs strides: [(96, 32, 8), 'No strides', (), 'No strides']\r\nInputs values: ['not shown', None, array(1, dtype=int8), None]\r\nOutputs clients: [[InplaceDimShuffle{2,1,0}(SpecifyShape.0)]]\r\n\r\nHINT: Re-running with most Aesara optimizations disabled could provide a back-trace showing when this node was created. This can be done by setting the Aesara flag 'optimizer=fast_compile'. If that does not work, Aesara optimizations can be disabled with 'optimizer=None'.\r\nHINT: Use the Aesara flag `exception_verbosity=high` for a debug print-out and storage map footprint of this Apply node.\n```\n\n\n### PyMC version information:\n\n4.4\n\n### Context for the issue:\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6380/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6379", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6379/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6379/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6379/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6379", "id": 1484690476, "node_id": "I_kwDOAALxiM5YfpQs", "number": 6379, "title": "Bug in conversion of `None` dims to InferenceData", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-12-08T13:52:36Z", "updated_at": "2023-01-25T09:47:56Z", "closed_at": "2023-01-25T09:47:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Description\r\n\r\nThis snippet hast the effect of shifting the known dims to the \"left\":\r\n\r\nhttps://github.com/pymc-devs/pymc/blob/6b60804c3a5fdb75f95cc60042061a6e38ec72a3/pymc/backends/arviz.py#L217-L220\r\n\r\n```python\r\nimport pymc as pm\r\n\r\nwith pm.Model(coords={\"a\": range(5)}) as m:\r\n    x = pm.Normal(\"x\", shape=(10, 5), dims=(None, \"a\"))        \r\n    pm.sample()\r\n```\r\n```\r\nValueError: conflicting sizes for dimension 'a': length 10 on the data but length 5 on coordinate 'a'\r\n```\r\nWhereas this wrong specification goes unnoticed:\r\n```python\r\n    x = pm.Normal(\"x\", shape=(5, 10), dims=(None, \"a\"))        \r\n```\r\n\r\nDo we need `None` dims? It's annoying if we want to create Xarray datasets in multiple places as in #6374\r\n\r\nMore generally, it seems we don't do any sort of type check. The following are all allowed at creation time. I don't know if that's by design.\r\n\r\n```python\r\nimport pymc as pm\r\nwith pm.Model(coords={\"a\": range(5)}) as m:\r\n    x = pm.Normal(\"x\", shape=(10, 5), dims=(\"a\", ..., 5, pm.Normal.dist()))        \r\n    pm.sample()\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6379/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6376", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6376/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6376/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6376/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6376", "id": 1482815556, "node_id": "I_kwDOAALxiM5YYfhE", "number": 6376, "title": "BUG: gp.predict method not working for GP marginal on v4.4 ", "user": {"login": "smickleborough", "id": 58404766, "node_id": "MDQ6VXNlcjU4NDA0NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/58404766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smickleborough", "html_url": "https://github.com/smickleborough", "followers_url": "https://api.github.com/users/smickleborough/followers", "following_url": "https://api.github.com/users/smickleborough/following{/other_user}", "gists_url": "https://api.github.com/users/smickleborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/smickleborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smickleborough/subscriptions", "organizations_url": "https://api.github.com/users/smickleborough/orgs", "repos_url": "https://api.github.com/users/smickleborough/repos", "events_url": "https://api.github.com/users/smickleborough/events{/privacy}", "received_events_url": "https://api.github.com/users/smickleborough/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3517167559, "node_id": "LA_kwDOAALxiM7Ro7fH", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/GP", "name": "GP", "color": "CF1A41", "default": false, "description": "Gaussian Process"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-12-07T20:47:26Z", "updated_at": "2022-12-11T12:21:03Z", "closed_at": "2022-12-11T12:21:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the issue:\n\nI cannot use the .predict method after training a simple GP using MCMC or VI, works with the find_MAP() inference data though. The .conditional method seems to work but this is no good for my application. I need to sample the trained model inside a custom likelihood function.\n\n### Reproduceable code example:\n\n```python\n0     with pm.Model() as m:\r\n  1\r\n  2         # Length scales\r\n  3         lp = pm.HalfCauchy('lp', beta = 10, shape = (10,))\r\n  4         # Amplitude scale\r\n  5         sp = pm.HalfNormal('sp', 10)\r\n  6\r\n  7         # Noise\r\n  8         sn = pm.HalfNormal('sn', 10)\r\n  9\r\n 10         # Mean function\r\n 11         M = pm.gp.mean.Zero()\r\n 12\r\n 13         # Cov function\r\n 14         covfunc = sp**2 * pm.gp.cov.Matern32(10, lp)\r\n 15\r\n 16         # Prior\r\n 17         y_ = pm.gp.Marginal(mean_func = M, cov_func = covfunc)\r\n 18\r\n 19         # Likelihood\r\n 20         y_.marginal_likelihood('ly', X = x, y = y, sigma = sn)\r\n 21\r\n 22     \r\n 23         mp = pm.sample()\r\n 24\r\n 25     mu, cov = y_.predict(Xnew = xt,  point= mp, model=m)\n```\n\n\n### Error message:\n\n```shell\nIn [2]: mu, cov = y_.predict(Xnew = xt, point=mp,  diag=True, pred_noise=False, model=m)\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nCell In[2], line 1\r\n----> 1 mu, cov = y_.predict(Xnew = xt, point=mp,  diag=True, pred_noise=False, model=m)\r\n\r\nFile ~/mambaforge/envs/pmc/lib/python3.11/site-packages/pymc/gp/gp.py:612, in Marginal.predict(self, Xnew, point, diag, pred_noise, given, jitter, model)\r\n    610     given = {}\r\n    611 mu, cov = self._predict_at(Xnew, diag, pred_noise, given, jitter)\r\n--> 612 return replace_with_values([mu, cov], replacements=point, model=model)\r\n\r\nFile ~/mambaforge/envs/pmc/lib/python3.11/site-packages/pymc/gp/util.py:84, in replace_with_values(vars_needed, replacements, model)\r\n     82 if len(missing) > 0:\r\n     83     missing_str = \", \".join(missing)\r\n---> 84     raise ValueError(f\"Values for {missing_str} must be included in `replacements`.\")\r\n     86 return fn(**replacements)\r\n\r\nValueError: Values for sn, sp, lp must be included in `replacements`.\n```\n\n\n### PyMC version information:\n\npymc v4.4 \r\nwsl2 ubuntu 22.04\r\ninstalled with Mamba\n\n### Context for the issue:\n\nsame issue with pm.fit() and find_MAP() is not giving good results. Needed for PhD research", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6376/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6363", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6363/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6363/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6363/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6363", "id": 1473213878, "node_id": "PR_kwDOAALxiM5EKSHI", "number": 6363, "title": "Fixed overriding user provided `mp_ctx` strings to `pm.sample()` on M1 MacOS", "user": {"login": "digicosmos86", "id": 18012643, "node_id": "MDQ6VXNlcjE4MDEyNjQz", "avatar_url": "https://avatars.githubusercontent.com/u/18012643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/digicosmos86", "html_url": "https://github.com/digicosmos86", "followers_url": "https://api.github.com/users/digicosmos86/followers", "following_url": "https://api.github.com/users/digicosmos86/following{/other_user}", "gists_url": "https://api.github.com/users/digicosmos86/gists{/gist_id}", "starred_url": "https://api.github.com/users/digicosmos86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/digicosmos86/subscriptions", "organizations_url": "https://api.github.com/users/digicosmos86/orgs", "repos_url": "https://api.github.com/users/digicosmos86/repos", "events_url": "https://api.github.com/users/digicosmos86/events{/privacy}", "received_events_url": "https://api.github.com/users/digicosmos86/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2381812947, "node_id": "MDU6TGFiZWwyMzgxODEyOTQ3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/jax", "name": "jax", "color": "f241a5", "default": false, "description": ""}, {"id": 2543051866, "node_id": "MDU6TGFiZWwyNTQzMDUxODY2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/macOS", "name": "macOS", "color": "f9d0c4", "default": false, "description": "macOS related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-12-02T17:40:56Z", "updated_at": "2022-12-04T22:38:16Z", "closed_at": "2022-12-04T22:37:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6363", "html_url": "https://github.com/pymc-devs/pymc/pull/6363", "diff_url": "https://github.com/pymc-devs/pymc/pull/6363.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6363.patch", "merged_at": "2022-12-04T22:37:48Z"}, "body": "**What is this PR about?**\r\nPer #6362, when the user provides a `str` to `mp_ctx` on ARM-based Macs, this string will be overridden without warnings to `\"fork\"`, which might be incompatible with some JAX operations in parallel settings. This change was introduced in #6218.\r\n\r\nCloses #6362 \r\n\r\n## Bugfixes / New features\r\n- Changed one if-statement so user provided `str`s are not overridden.\r\n- Added a debugging message about the incompatibility of `\"fork\"` and JAX.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6363/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6363/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6362", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6362/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6362/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6362/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6362", "id": 1471940100, "node_id": "I_kwDOAALxiM5XvAYE", "number": 6362, "title": "New `mp_ctx` defaults in 4.3.0+ (#6218) for M1 Macs could break parallel sampling for M1 Mac users using JAX", "user": {"login": "digicosmos86", "id": 18012643, "node_id": "MDQ6VXNlcjE4MDEyNjQz", "avatar_url": "https://avatars.githubusercontent.com/u/18012643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/digicosmos86", "html_url": "https://github.com/digicosmos86", "followers_url": "https://api.github.com/users/digicosmos86/followers", "following_url": "https://api.github.com/users/digicosmos86/following{/other_user}", "gists_url": "https://api.github.com/users/digicosmos86/gists{/gist_id}", "starred_url": "https://api.github.com/users/digicosmos86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/digicosmos86/subscriptions", "organizations_url": "https://api.github.com/users/digicosmos86/orgs", "repos_url": "https://api.github.com/users/digicosmos86/repos", "events_url": "https://api.github.com/users/digicosmos86/events{/privacy}", "received_events_url": "https://api.github.com/users/digicosmos86/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2381812947, "node_id": "MDU6TGFiZWwyMzgxODEyOTQ3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/jax", "name": "jax", "color": "f241a5", "default": false, "description": ""}, {"id": 2543051866, "node_id": "MDU6TGFiZWwyNTQzMDUxODY2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/macOS", "name": "macOS", "color": "f9d0c4", "default": false, "description": "macOS related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-12-01T20:52:12Z", "updated_at": "2022-12-04T22:37:49Z", "closed_at": "2022-12-04T22:37:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the issue:\n\nProblem:\r\n\r\nIn #6218, the `mp_ctx` is set to `fork` by default if the user's system runs M1 Macs. However, I was running some jax functions wrapped in aesara ops following [this tutorial](https://www.pymc.io/projects/examples/en/latest/case_studies/wrapping_jax_function.html) When `cores` is set to `2`, sampling would get stuck at 0.00%. Setting `cores` to `1`, setting `mp_ctx` to `multiprocessing.get_context(\"forkserver\")` or downgrading to pymc 4.2.2 would solve this issue.\r\n\r\nCause:\r\n\r\nAccording to [this post](https://github.com/google/jax/issues/1805), JAX is internally multithreaded and does not work with `fork` strategy in `multiprocessing`. So Jax functions wrapped in aesara ops would not work in parallel sampling after 4.3.0 on M1 Macs because `mp_ctx` is set to `fork` and would not change unless a `context` object is passed. Even simply setting `forkserver` to `mp_ctx` does not work because a string argument does not change `mp_ctx` at all if the system is M1 Mac. This makes the code very difficult to debug.\r\n\r\nSolution:\r\n1. Change the behavior of `mp_ctx` so at least it does not internally force the context to `fork` if a `str` is passed on M1 Macs. Maybe the users can be warned if their system is M1 Macs.\r\n2. Potentially update [this tutorial](https://www.pymc.io/projects/examples/en/latest/case_studies/wrapping_jax_function.html) to the changes in 4.3.0 (#6218).\n\n### Reproduceable code example:\n\n```python\n# WFPT_LAN is a subclass of pm.Distribution that uses a jax function wrapped in an aesara Op as its log-likelihood function\r\n\r\nwith pm.Model() as m_angle:\r\n    v = pm.Uniform(\"v\", -3.0, 3.0)\r\n    a = 1.5\r\n    z = 0.5\r\n    t = 0.5\r\n    theta = 0.3\r\n\r\n    rt = WFPT_LAN(\r\n        name=\"rt\",\r\n        v=v,\r\n        a=a,\r\n        z=z,\r\n        t=t,\r\n        theta=theta,\r\n        observed=obs_angle[\"rts\"][:, 0] * obs_angle[\"choices\"][:, 0]\r\n    )\r\n\r\n    trace_angle_nuts = pm.sample(cores=2, chains=2, draws=500, tune=500)\n```\n\n\n### Error message:\n\n```shell\nSampling just gets stuck when with `cores` set to 2. Setting `mp_ctx=multiprocessing.get_context(\"forkserver\")` solves the problem.\r\n\r\nINFO:pymc:Auto-assigning NUTS sampler...\r\nINFO:pymc:Initializing NUTS using jitter+adapt_diag...\r\nINFO:pymc:Multiprocess sampling (2 chains in 2 jobs)\r\nINFO:pymc:NUTS: [v]\r\n[INFO/worker_chain_0] child process calling self.run()\r\n[INFO/worker_chain_1] child process calling self.run()\r\n\r\n 0.00% [0/2000 00:00<? Sampling 2 chains, 0 divergences]\n```\n\n\n### PyMC version information:\n\naesara==2.8.7, aesara==2.8.6\r\npymc==4.3.0, pymc==4.4.0\r\n\r\npymc==4.2.2 does not have the same issue.\n\n### Context for the issue:\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6362/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6353", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6353/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6353/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6353/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6353", "id": 1467789755, "node_id": "I_kwDOAALxiM5XfLG7", "number": 6353, "title": "Order of rewrites in logprob submodule is not respected", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}, {"id": 3561358894, "node_id": "LA_kwDOAALxiM7URgYu", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/logprob-related", "name": "logprob-related", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-11-29T10:07:38Z", "updated_at": "2022-12-05T14:06:50Z", "closed_at": "2022-12-05T14:06:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Description\n\nI could be wrong, but when working on https://github.com/pymc-devs/pymc/pull/6072, it seemed that the order of the rewrites in the database is only respected when using the kwarg `position`. Otherwise it seems to be ignored, and only the order of definition matters.\r\n\r\nSo: \r\nhttps://github.com/pymc-devs/pymc/blob/e0d25c899a555d7e17f683f4a42c06b933287783/pymc/logprob/rewriting.py#L263\r\n\r\nShould be:\r\n```python\r\nlogprob_rewrites_db.register( \r\n     \"measurable_ir_rewrites\", measurable_ir_rewrites_db, \"basic\", position=-10, \r\n )\r\n```\r\n\r\nWe should probably also leave an offset between `pre-canonicalize` and `measurable_ir_rewrites` (both are supposed to be at -10) in case anyone wants to introduce rewrites between those two phases.\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6353/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6353/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6348", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6348/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6348/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6348/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6348", "id": 1467746939, "node_id": "I_kwDOAALxiM5XfAp7", "number": 6348, "title": "VI variable replacement broken with Aesara 2.8.8", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}, {"id": 3449746171, "node_id": "LA_kwDOAALxiM7NnvL7", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/VI", "name": "VI", "color": "fef2c0", "default": false, "description": "Variational Inference"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-11-29T09:40:20Z", "updated_at": "2022-12-01T13:18:10Z", "closed_at": "2022-12-01T13:18:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Description\n\nWe added an xfail to this [test]() in #6336. The issue is that this VI method is trying to replace an RV by a larger one. This is not allowed when the graph is created with a fixed size RV.\r\n\r\nThe test case doesn't seem needed at all, one can create a variable sized RV already with a shared variable and then resize it. Would this fulfill all the needs?", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6348/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6343", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6343/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6343/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6343/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6343", "id": 1466840292, "node_id": "PR_kwDOAALxiM5D0wRb", "number": 6343, "title": "Fix transformed Scan values", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3561358894, "node_id": "LA_kwDOAALxiM7URgYu", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/logprob-related", "name": "logprob-related", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-28T17:51:33Z", "updated_at": "2022-12-10T16:30:54Z", "closed_at": "2022-12-10T16:30:54Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6343", "html_url": "https://github.com/pymc-devs/pymc/pull/6343", "diff_url": "https://github.com/pymc-devs/pymc/pull/6343.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6343.patch", "merged_at": "2022-12-10T16:30:54Z"}, "body": "The first commits belong to #6341 #6342. Marking this as draft until that is merged.\r\n\r\nOriginal Aeppl issue https://github.com/aesara-devs/aeppl/issues/107\r\n\r\n## Bugfixes / New features\r\n- Fix Scan variable transforms\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6343/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6342", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6342/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6342/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6342/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6342", "id": 1466782019, "node_id": "PR_kwDOAALxiM5D0mBO", "number": 6342, "title": "Fix measurable stack and join with interdependent inputs", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1288753732, "node_id": "MDU6TGFiZWwxMjg4NzUzNzMy", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/don't%20merge", "name": "don't merge", "color": "e10c02", "default": false, "description": ""}, {"id": 3561358894, "node_id": "LA_kwDOAALxiM7URgYu", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/logprob-related", "name": "logprob-related", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-11-28T17:11:54Z", "updated_at": "2022-12-07T15:14:54Z", "closed_at": "2022-12-07T15:14:54Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6342", "html_url": "https://github.com/pymc-devs/pymc/pull/6342", "diff_url": "https://github.com/pymc-devs/pymc/pull/6342.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6342.patch", "merged_at": "2022-12-07T15:14:54Z"}, "body": "This fixes measurable stacks and joins that have interdependent variables. \r\n\r\nThe main loop of `factorized_joint_logprob` replaces all the measurable variables already seen by their values before calling the logp of a new measurable node, but it does not replace said node by its value variable, as it assumes the returned logprob expression never depends on the original measurable (stochastic) node. \r\n\r\nHowever this can happen in Stack and Join whenever the base measurable RVs depend on one another. The new tests show this clearly. The solution proposed in this PR is to do the additional replacements needed in the respective logp functions.\r\n\r\n## Major / Breaking Changes\r\n- ...\r\n\r\n## Bugfixes / New features\r\n- Fix logprob of stack and join when base variables are interdependent\r\n\r\n## Docs / Maintenance\r\n- ...\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6342/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6339", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6339/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6339/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6339/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6339", "id": 1465432477, "node_id": "PR_kwDOAALxiM5DwG-d", "number": 6339, "title": "Bugfixes to increase robustness against unnamed `dims`", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-11-27T12:55:06Z", "updated_at": "2022-11-27T15:04:05Z", "closed_at": "2022-11-27T15:04:02Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6339", "html_url": "https://github.com/pymc-devs/pymc/pull/6339", "diff_url": "https://github.com/pymc-devs/pymc/pull/6339.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6339.patch", "merged_at": "2022-11-27T15:04:02Z"}, "body": "This fixes the two bugs I described in #6335.\r\n\r\nEssentially two `Model.get_plates` and `Model.add_named_variable` methods did not anticipate that elements of a `dims` tuple can be `None`.\r\n\r\nI added some comments to the refactored code and tests.\r\n\r\n**Checklist**\r\n+ [x] Explain important implementation details \ud83d\udc46\r\n+ [x] Make sure that [the pre-commit linting/style checks pass](https://docs.pymc.io/en/latest/contributing/python_style.html).\r\n+ [x] Link relevant issues (preferably in [nice commit messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html))\r\n+ [x] Are the changes covered by tests and docstrings?\r\n+ [x] Fill out the short summary sections \ud83d\udc47\r\n\r\n## Major / Breaking Changes\r\n- None\r\n\r\n## Bugfixes / New features\r\n- Fixes bugs in `pm.model_to_graphviz` and `Model.add_named_variable` that were triggered by `None` elements in `dims` tuples.\r\n\r\n## Docs / Maintenance\r\n- None\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6339/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6335", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6335/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6335/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6335/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6335", "id": 1463686832, "node_id": "I_kwDOAALxiM5XPhaw", "number": 6335, "title": "BUG: Deterministic variables with `dims` containing `None` break `model_to_graphviz`", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-11-24T18:13:39Z", "updated_at": "2022-11-27T15:04:06Z", "closed_at": "2022-11-27T15:04:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Describe the issue:\r\n\r\nWhen a `Deterministic` variable is created, one may pass a `dims=(None, \"time\")` which is a valid `dims` tuple.\r\n\r\nHowever, when attempting a `pm.model_to_graphviz` later, a `KeyError: None` is encountered when accessing `Model.dim_lengths`.\r\n\r\n### Reproduceable code example:\r\n\r\n```python\r\nimport numpy as np\r\nimport pymc as pm\r\n\r\nwith pm.Model(coords=dict(time=np.arange(5))) as pmodel:\r\n    data = at.as_tensor(np.ones((3, 5)))\r\n    # This works:\r\n    # pm.Normal(\"n\", data, dims=(None, \"time\"))\r\n\r\n    # This does not:\r\n    pm.Deterministic(\"n\", data, dims=(None, \"time\"))\r\n    \r\npm.model_to_graphviz(pmodel)\r\n```\r\n\r\n\r\n### Error message:\r\n\r\n```shell\r\nFile pymc\\model_graph.py:198, in <genexpr>(.0)\r\n    195 v = self.model[var_name]\r\n    196 if var_name in self.model.RV_dims:\r\n    197     plate_label = \" x \".join(\r\n--> 198         f\"{d} ({self._eval(self.model.dim_lengths[d])})\"\r\n    199         for d in self.model.RV_dims[var_name]\r\n    200     )\r\n    201 else:\r\n    202     plate_label = \" x \".join(map(str, self._eval(v.shape)))\r\n\r\nKeyError: None\r\n```\r\n\r\n\r\n### PyMC version information:\r\n\r\n4.1.7\r\n\r\n### Context for the issue:\r\n\r\n_No response_", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6335/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6319", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6319/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6319/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6319/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6319", "id": 1456973192, "node_id": "PR_kwDOAALxiM5DTjtj", "number": 6319, "title": "Add a type guard for `intX` (#4569)", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2022-11-20T17:02:11Z", "updated_at": "2023-01-28T12:21:01Z", "closed_at": "2023-01-28T12:21:00Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6319", "html_url": "https://github.com/pymc-devs/pymc/pull/6319", "diff_url": "https://github.com/pymc-devs/pymc/pull/6319.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6319.patch", "merged_at": null}, "body": "These are the changes from #4569 cherry-picked from 34476191145d7234e399cd480da1d16480be28fb on the `v3` branch.\r\n\r\nCloses #4279\r\n\r\n**Checklist**\r\n+ [x] Explain important implementation details (see #4569)\r\n+ [x] Make sure that [the pre-commit linting/style checks pass](https://docs.pymc.io/en/latest/contributing/python_style.html).\r\n+ [x] Link relevant issues (preferably in [nice commit messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html))\r\n+ [x] Are the changes covered by tests and docstrings?\r\n+ [x] Fill out the short summary sections \ud83d\udc47\r\n\r\n## Major / Breaking Changes\r\n- None\r\n\r\n## Bugfixes / New features\r\n- Integer dtypes are now not downcasted in intX\r\n\r\n## Docs / Maintenance\r\n- None\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6319/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6314", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6314/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6314/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6314/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6314", "id": 1456489133, "node_id": "PR_kwDOAALxiM5DSCQH", "number": 6314, "title": "Fix versioneer config to match version tags", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/39", "html_url": "https://github.com/pymc-devs/pymc/milestone/39", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/39/labels", "id": 8587946, "node_id": "MI_kwDOAALxiM4Agwqq", "number": 39, "title": "v4.4.0", "description": "", "creator": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2022-10-27T12:58:23Z", "updated_at": "2022-11-19T22:53:37Z", "due_on": null, "closed_at": "2022-11-19T22:53:37Z"}, "comments": 1, "created_at": "2022-11-19T13:55:09Z", "updated_at": "2022-11-19T16:54:11Z", "closed_at": "2022-11-19T16:54:10Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6314", "html_url": "https://github.com/pymc-devs/pymc/pull/6314", "diff_url": "https://github.com/pymc-devs/pymc/pull/6314.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6314.patch", "merged_at": "2022-11-19T16:54:10Z"}, "body": "The config was slightly wrong: We're prefixing release tags with `v` not with `rel-`.\r\n\r\nCloses #6303\r\n\r\n**Checklist**\r\n+ [x] Explain important implementation details \ud83d\udc46\r\n+ [x] Make sure that [the pre-commit linting/style checks pass](https://docs.pymc.io/en/latest/contributing/python_style.html).\r\n+ [x] Link relevant issues (preferably in [nice commit messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html))\r\n+ [x] ~Are the changes covered by tests and docstrings?~ A test would require the git history to get the previous tag, but we're just doing shallow checkouts in the CI pipeline. Deep checkout just for this isn't worth it..\r\n+ [x] Fill out the short summary sections \ud83d\udc47\r\n\r\n## Major / Breaking Changes\r\n- None\r\n\r\n## Bugfixes / New features\r\n- Fixes a bug that excluded the latest release version from `pm.__version__` in git installs.\r\n\r\n## Docs / Maintenance\r\n- None\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6314/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6299", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6299/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6299/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6299/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6299", "id": 1448616384, "node_id": "I_kwDOAALxiM5WWCHA", "number": 6299, "title": "`testTPvsLatentReparameterized` suffers from precision problems", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-14T19:25:04Z", "updated_at": "2023-02-28T22:27:09Z", "closed_at": "2023-02-28T22:27:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Today it failed twice on `main`, once on Ubuntu, once on Windows:\r\n* https://github.com/pymc-devs/pymc/actions/runs/3463369440/jobs/5783504362\r\n* https://github.com/pymc-devs/pymc/actions/runs/3463447214/jobs/5783695185\r\n\r\nmore runs:\r\n* https://github.com/pymc-devs/pymc/actions/runs/3412996830/jobs/5679199829\r\n* https://github.com/pymc-devs/pymc/actions/runs/3530040880/jobs/5921616117\r\n* https://github.com/pymc-devs/pymc/actions/runs/3523479244/jobs/5907689216\r\n* https://github.com/pymc-devs/pymc/actions/runs/3463369440/jobs/5783504362\r\n* https://github.com/pymc-devs/pymc/actions/runs/3463447214/jobs/5783695185\r\n\r\n...and there were only the ones on `main` \ud83d\ude2c", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6299/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6295", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6295/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6295/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6295/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6295", "id": 1447084328, "node_id": "I_kwDOAALxiM5WQMEo", "number": 6295, "title": "DOC: wrong bound for `sigma` in docstring of `Beta`", "user": {"login": "Gattocrucco", "id": 9684110, "node_id": "MDQ6VXNlcjk2ODQxMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/9684110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gattocrucco", "html_url": "https://github.com/Gattocrucco", "followers_url": "https://api.github.com/users/Gattocrucco/followers", "following_url": "https://api.github.com/users/Gattocrucco/following{/other_user}", "gists_url": "https://api.github.com/users/Gattocrucco/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gattocrucco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gattocrucco/subscriptions", "organizations_url": "https://api.github.com/users/Gattocrucco/orgs", "repos_url": "https://api.github.com/users/Gattocrucco/repos", "events_url": "https://api.github.com/users/Gattocrucco/events{/privacy}", "received_events_url": "https://api.github.com/users/Gattocrucco/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 86794, "node_id": "MDU6TGFiZWw4Njc5NA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/docs", "name": "docs", "color": "5319e7", "default": false, "description": null}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-11-13T21:05:19Z", "updated_at": "2023-02-03T19:16:06Z", "closed_at": "2023-02-03T19:16:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "The docstring of `Beta` says\r\n\r\n```\r\nsigma : tensor_like of float, optional\r\n    Alternative standard deviation (1 < ``sigma`` < sqrt(``mu`` * (1 - ``mu``))).\r\n```\r\n\r\nwhile it should be `0 < sigma < ...`.\r\n\r\n(Related issue: #5023 says that `sigma` may be dropped in favor of `nu`)\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: 4.3.0\r\n* Aesara/Theano Version: 2.8.7\r\n* Python Version: 3.10.5\r\n* Operating system: macos 12.6.1 arm\r\n* How did you install PyMC/PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6295/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6290", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6290/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6290/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6290/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6290", "id": 1445696252, "node_id": "I_kwDOAALxiM5WK5L8", "number": 6290, "title": "Duplicated `initial_point` method", "user": {"login": "wd60622", "id": 57733339, "node_id": "MDQ6VXNlcjU3NzMzMzM5", "avatar_url": "https://avatars.githubusercontent.com/u/57733339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wd60622", "html_url": "https://github.com/wd60622", "followers_url": "https://api.github.com/users/wd60622/followers", "following_url": "https://api.github.com/users/wd60622/following{/other_user}", "gists_url": "https://api.github.com/users/wd60622/gists{/gist_id}", "starred_url": "https://api.github.com/users/wd60622/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wd60622/subscriptions", "organizations_url": "https://api.github.com/users/wd60622/orgs", "repos_url": "https://api.github.com/users/wd60622/repos", "events_url": "https://api.github.com/users/wd60622/events{/privacy}", "received_events_url": "https://api.github.com/users/wd60622/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2031712615, "node_id": "MDU6TGFiZWwyMDMxNzEyNjE1", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/maintenance", "name": "maintenance", "color": "71f271", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-11-11T16:11:59Z", "updated_at": "2022-11-14T19:38:12Z", "closed_at": "2022-11-14T19:38:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nThe `initial_point` method for the `Model` class shows up twice. \r\n\r\nhttps://github.com/pymc-devs/pymc/blob/5d7283ea581266e05ca88ce2123d71bcba5f7c8e/pymc/model.py#L998-L1007\r\n\r\nhttps://github.com/pymc-devs/pymc/blob/5d7283ea581266e05ca88ce2123d71bcba5f7c8e/pymc/model.py#L1262-L1271\r\n\r\n**Please provide any additional information below.**\r\n\r\nSeems to be a mistake. \r\n\r\nAnother side note, the `seed` parameter seems to be inconsistent with many of the other methods using `random_seed` named argument. \r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: 4.3.0\r\n* Aesara/Theano Version:\r\n* Python Version:\r\n* Operating system:\r\n* How did you install PyMC/PyMC3: (conda/pip)\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6290/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6281", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6281/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6281/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6281/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6281", "id": 1441904422, "node_id": "PR_kwDOAALxiM5Cg7HH", "number": 6281, "title": "Do not rely on tag information for rv and logp conversions", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76152, "node_id": "MDU6TGFiZWw3NjE1Mg==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/enhancements", "name": "enhancements", "color": "02e10c", "default": false, "description": null}, {"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 4289460127, "node_id": "LA_kwDOAALxiM7_q_ef", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/major", "name": "major", "color": "D93F0B", "default": false, "description": "Include in major changes release notes section"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/39", "html_url": "https://github.com/pymc-devs/pymc/milestone/39", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/39/labels", "id": 8587946, "node_id": "MI_kwDOAALxiM4Agwqq", "number": 39, "title": "v4.4.0", "description": "", "creator": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2022-10-27T12:58:23Z", "updated_at": "2022-11-19T22:53:37Z", "due_on": null, "closed_at": "2022-11-19T22:53:37Z"}, "comments": 3, "created_at": "2022-11-09T11:14:58Z", "updated_at": "2022-11-11T10:49:43Z", "closed_at": "2022-11-11T10:48:08Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6281", "html_url": "https://github.com/pymc-devs/pymc/pull/6281", "diff_url": "https://github.com/pymc-devs/pymc/pull/6281.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6281.patch", "merged_at": "2022-11-11T10:48:08Z"}, "body": "This PR will finally clean the interface for accessing meta-information from RVs needed when transforming back and forth between the RV and logp representations of a PyMC model\r\n\r\nIt does not yet remove that information to not break anything. Some methods relied heavily on this local information and were simply marked for deprecation, with alternatives being provided from scratch.\r\n\r\nAccessing these variables (as long as they were introduced by PyMC) via tag will issue a FutureWarning:\r\n\r\n```python\r\nwith pm.Model() as m:\r\n  x = pm.Normal(\"x\")\r\nx.tag.value_var  # Warning: The tag attribute value_var is deprecated. Use model.rvs_to_values[rv] instead\r\n```\r\n\r\nCloses #5033\r\nCloses #6236 \r\n\r\n\r\n## Major / Breaking Changes\r\n- Deprecated accessing `[value_variable|observations|transform|total_size]` via `var.tag` in favor of `model.rvs_to_[values|transforms|total_sizes]`\r\n- Deprecated `joint_logp` in favor of `model.logp`\r\n- Deprecated `aesaraf.rvs_to_value_vars` in favor of `model.replace_rvs_by_values`\r\n\r\n## Bugfixes / New features\r\n- Fix bug when replacing random variables with nested value transforms\r\n\r\n## Docs / Maintenance\r\n- ...\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6281/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6278", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6278/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6278/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6278/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6278", "id": 1440304321, "node_id": "I_kwDOAALxiM5V2UzB", "number": 6278, "title": "Issue with GP prior size ", "user": {"login": "chopley", "id": 2196916, "node_id": "MDQ6VXNlcjIxOTY5MTY=", "avatar_url": "https://avatars.githubusercontent.com/u/2196916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chopley", "html_url": "https://github.com/chopley", "followers_url": "https://api.github.com/users/chopley/followers", "following_url": "https://api.github.com/users/chopley/following{/other_user}", "gists_url": "https://api.github.com/users/chopley/gists{/gist_id}", "starred_url": "https://api.github.com/users/chopley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chopley/subscriptions", "organizations_url": "https://api.github.com/users/chopley/orgs", "repos_url": "https://api.github.com/users/chopley/repos", "events_url": "https://api.github.com/users/chopley/events{/privacy}", "received_events_url": "https://api.github.com/users/chopley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3517167559, "node_id": "LA_kwDOAALxiM7Ro7fH", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/GP", "name": "GP", "color": "CF1A41", "default": false, "description": "Gaussian Process"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-11-08T14:24:39Z", "updated_at": "2022-11-15T20:52:46Z", "closed_at": "2022-11-15T20:52:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to reproduce the content in this blogpost: https://www.pymc-labs.io/blog-posts/spatial-gaussian-process-01/\r\n\r\nPyMC: v4.0.0b5\r\nPython: 3.9.10\r\nUsing Conda\r\n\r\nI seem to have an issue with this:\r\nhttps://github.com/pymc-devs/pymc/blob/f80e45c6dc25737c26234b190cccdbaf89f2b5ac/pymc/gp/gp.py#L153\r\n\r\n```\r\nX = np.array(list(county_lonlat.values()))\r\nwith pm.Model(\r\n    coords={\r\n        \"county\": counties,\r\n        \"household\": df.index,\r\n        \"feature\": [\"longitude\", \"latitude\"],\r\n    }\r\n) as m:\r\n    _county_idx = pm.ConstantData(\"county_idx\", county_idx, dims=\"household\")\r\n    _X = pm.ConstantData(\"county_X\", X, dims=(\"county\", \"feature\"))\r\n```\r\n\r\n```\r\nwith m:\r\n    state_mu = pm.Normal(\"state_mu\", 0, 3)\r\n    state_scale = pm.HalfNormal(\"state_scale\", 0.7)\r\n```\r\n```\r\nwith m:\r\n    ls = pm.Gamma(\"ls\", mu=200, sigma=50)\r\n    latent = pm.gp.Latent(cov_func=Matern32Chordal(2, ls),)\r\n    county_eps = latent.prior(\"county_eps\", _X, dims=\"county\", jitter=1e-7)\r\n```\r\n\r\nError message\r\n```\r\n/opt/conda/envs/pymc-dev-v4.0.0b5/lib/python3.9/site-packages/pymc/gp/cov.py:95: UserWarning: Only 2 column(s) out of Subtensor{int64}.0 are being used to compute the covariance function. If this is not intended, increase 'input_dim' parameter to the number of columns to use. Ignore otherwise.\r\n  warnings.warn(\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nFile /opt/conda/envs/pymc-dev-v4.0.0b5/lib/python3.9/site-packages/pymc/gp/util.py:108, in infer_size(X, n_points)\r\n    107 try:\r\n--> 108     n_points = int(X.shape[0])\r\n    109 except TypeError:\r\n\r\nTypeError: __trunc__ returned non-Integral (type TensorVariable)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTypeError                                 Traceback (most recent call last)\r\nInput In [24], in <module>\r\n      2 ls = pm.Gamma(\"ls\", mu=200, sigma=50)\r\n      3 latent = pm.gp.Latent(cov_func=Matern32Chordal(2, ls),)\r\n----> 4 county_eps = latent.prior(\"county_eps\", _X, dims=\"county\", jitter=1e-7)\r\n\r\nFile /opt/conda/envs/pymc-dev-v4.0.0b5/lib/python3.9/site-packages/pymc/gp/gp.py:169, in Latent.prior(self, name, X, reparameterize, jitter, **kwargs)\r\n    141 def prior(self, name, X, reparameterize=True, jitter=JITTER_DEFAULT, **kwargs):\r\n    142     R\"\"\"\r\n    143     Returns the GP prior distribution evaluated over the input\r\n    144     locations `X`.\r\n   (...)\r\n    166         Extra keyword arguments that are passed to distribution constructor.\r\n    167     \"\"\"\r\n--> 169     f = self._build_prior(name, X, reparameterize, jitter, **kwargs)\r\n    170     self.X = X\r\n    171     self.f = f\r\n\r\nFile /opt/conda/envs/pymc-dev-v4.0.0b5/lib/python3.9/site-packages/pymc/gp/gp.py:134, in Latent._build_prior(self, name, X, reparameterize, jitter, **kwargs)\r\n    132 cov = stabilize(self.cov_func(X), jitter)\r\n    133 if reparameterize:\r\n--> 134     size = infer_size(X, kwargs.pop(\"size\", None))\r\n    135     v = pm.Normal(name + \"_rotated_\", mu=0.0, sigma=1.0, size=size, **kwargs)\r\n    136     f = pm.Deterministic(name, mu + cholesky(cov).dot(v))\r\n\r\nFile /opt/conda/envs/pymc-dev-v4.0.0b5/lib/python3.9/site-packages/pymc/gp/util.py:110, in infer_size(X, n_points)\r\n    108         n_points = int(X.shape[0])\r\n    109     except TypeError:\r\n--> 110         raise TypeError(\"Cannot infer 'shape', provide as an argument\")\r\n    111 return n_points\r\n\r\nTypeError: Cannot infer 'shape', provide as an argument\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6278/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6265", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6265/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6265/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6265/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6265", "id": 1435017999, "node_id": "PR_kwDOAALxiM5CJ9qH", "number": 6265, "title": "Fix Categorical and Multinomial bugs", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-03T17:19:52Z", "updated_at": "2022-11-08T10:17:38Z", "closed_at": "2022-11-07T11:14:17Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6265", "html_url": "https://github.com/pymc-devs/pymc/pull/6265", "diff_url": "https://github.com/pymc-devs/pymc/pull/6265.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6265.patch", "merged_at": "2022-11-07T11:14:17Z"}, "body": "Closes #5514 \r\n\r\n\r\n## Major / Breaking Changes\r\n- ...\r\n\r\n## Bugfixes / New features\r\n- Fix bug when passing a list or tuple of variables as the `p` parameter of Categorical and Multinomial distributions\r\n\r\n## Docs / Maintenance\r\n- ...\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6265/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6263", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6263/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6263/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6263/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6263", "id": 1434781126, "node_id": "PR_kwDOAALxiM5CJKlZ", "number": 6263, "title": "Do not propagate dims to observed component of imputed variable", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-11-03T14:43:48Z", "updated_at": "2022-11-14T17:01:35Z", "closed_at": "2022-11-04T12:50:48Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6263", "html_url": "https://github.com/pymc-devs/pymc/pull/6263", "diff_url": "https://github.com/pymc-devs/pymc/pull/6263.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6263.patch", "merged_at": "2022-11-04T12:50:48Z"}, "body": "Closes #6177 \r\n\r\nAlso did some refactoring and more informative errors for when imputation is not supported\r\n\r\n## Major / Breaking Changes\r\n- ...\r\n\r\n## Bugfixes / New features\r\n- Fix bug where dims of partially observed variables would be propagated to the smaller observed sub-component.\r\n\r\n## Docs / Maintenance\r\n- ...\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6263/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6260", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6260/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6260/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6260/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6260", "id": 1434405669, "node_id": "PR_kwDOAALxiM5CH5uM", "number": 6260, "title": "Fix shared variable latex", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-11-03T10:11:00Z", "updated_at": "2022-11-14T17:01:46Z", "closed_at": "2022-11-03T13:38:25Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6260", "html_url": "https://github.com/pymc-devs/pymc/pull/6260", "diff_url": "https://github.com/pymc-devs/pymc/pull/6260.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6260.patch", "merged_at": "2022-11-03T13:38:25Z"}, "body": "Closes #6253 \r\n...\r\n\r\n\r\n## Major / Breaking Changes\r\n- ...\r\n\r\n## Bugfixes / New features\r\n- Fix error in string and latex representation of shared inputs\r\n\r\n## Docs / Maintenance\r\n- ...\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6260/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6259", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6259/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6259/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6259/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6259", "id": 1434403396, "node_id": "PR_kwDOAALxiM5CH5QO", "number": 6259, "title": "Do not infer `graph_model` node types based on variable Op class", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-03T10:09:25Z", "updated_at": "2022-11-14T17:01:58Z", "closed_at": "2022-11-03T13:38:37Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6259", "html_url": "https://github.com/pymc-devs/pymc/pull/6259", "diff_url": "https://github.com/pymc-devs/pymc/pull/6259.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6259.patch", "merged_at": "2022-11-03T13:38:36Z"}, "body": "Closes #5766 \r\n\r\n\r\n## Major / Breaking Changes\r\n- ...\r\n\r\n## Bugfixes / New features\r\n- Do not show `SymbolicRandomVariable`s as deterministics in `model_graph`\r\n\r\n## Docs / Maintenance\r\n- ...\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6259/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6255", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6255/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6255/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6255/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6255", "id": 1428750842, "node_id": "PR_kwDOAALxiM5B08L3", "number": 6255, "title": "Fix ordering Transformation for batched dimensions", "user": {"login": "TimOliverMaier", "id": 25755339, "node_id": "MDQ6VXNlcjI1NzU1MzM5", "avatar_url": "https://avatars.githubusercontent.com/u/25755339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimOliverMaier", "html_url": "https://github.com/TimOliverMaier", "followers_url": "https://api.github.com/users/TimOliverMaier/followers", "following_url": "https://api.github.com/users/TimOliverMaier/following{/other_user}", "gists_url": "https://api.github.com/users/TimOliverMaier/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimOliverMaier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimOliverMaier/subscriptions", "organizations_url": "https://api.github.com/users/TimOliverMaier/orgs", "repos_url": "https://api.github.com/users/TimOliverMaier/repos", "events_url": "https://api.github.com/users/TimOliverMaier/events{/privacy}", "received_events_url": "https://api.github.com/users/TimOliverMaier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2022-10-30T11:49:45Z", "updated_at": "2022-11-22T12:43:35Z", "closed_at": "2022-11-22T12:43:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6255", "html_url": "https://github.com/pymc-devs/pymc/pull/6255", "diff_url": "https://github.com/pymc-devs/pymc/pull/6255.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6255.patch", "merged_at": "2022-11-22T12:43:35Z"}, "body": "This PR is the continuation of @purna135 's PR #5660 addressing issue #5659 (ordering transformation fails for dim>1).\r\n\r\nShort summary: \r\nThe initial change of the dimensionality of the jacobian determinant:\r\n```diff\r\n     def log_jac_det(self, value, *inputs): \r\n-        return at.sum(value[..., 1:], axis=-1)\r\n+        return at.sum(value[..., 1:], axis=-1, keepdims=True)\r\n```\r\nThis led to issues with multivariate distributions (as pointed out by @Sayam753 [here](https://github.com/pymc-devs/pymc/pull/5660#discussion_r856940379)).\r\n\r\nBased on the [suggestions](https://github.com/pymc-devs/pymc/pull/5660#discussion_r857030059) of @ricardoV94, I added a simple case inside the `log_jac_det` method of `ordered` and `sumto1`transform like this:\r\n\r\n```diff\r\n+    def __init__(self, ndim_supp=0):\r\n+        self.ndim_supp = ndim_supp\r\n\r\n     def log_jac_det(self, value, *inputs): \r\n-        return at.sum(value[..., 1:], axis=-1, keepdims=True)\r\n+        if self.ndim_supp == 0:\r\n+            return at.sum(y, axis=-1, keepdims=True)\r\n+        else:\r\n+            return at.sum(y, axis=-1)\r\n```\r\n\r\nWhile fixing the mentioned problem with multivariate distributions, two problems remain:\r\n1.  `TestElementWiseLogP` in `test_transform.py` fails \r\n     due to the inconsistent dimensionality of the jacobian determinant among the possible transformations. \r\n     I also ran all other the tests in the `distribution` subfolder locally. Here many tests are also failing in the main branch for me.\r\n     I am unsure here if any of the failing tests are caused by this PR's additions.\r\n\r\n2.  While experimenting with the multivariate distributions I realized that ordering of a `MvNormal` fails in main and still fails in \r\n     this PR. In both branches it fails with an `ValueError`:\r\n     \"array must not contain infs or NaNs\\nApply node that caused the error: SolveTriangular{lower=True, trans=0, unit_diagonal=False, check_finite=True}(TensorConstant{[[1. 0. 0...0. 0. 1.]]}, SpecifyShape.0)\\nToposort index: 12\\nInputs types: [TensorType(float64, (4, 4)), TensorType(float64, (4, 1))]\\nInputs shapes: [(4, 4), (4, 1)]\\nInputs strides: [(8, 32), (8, 8)]\\nInputs values: ['not shown', array([[0.80230155],\\n       [       nan],\\n       [       nan],\\n       [       nan]])]\\nOutputs clients: [[InplaceDimShuffle{1,0}(SolveTriangular{lower=True, trans=0, unit_diagonal=False, check_finite=True}.0)]]\\n\\nBacktrace when the node is created (use Aesara flag traceback__limit=N to make it longer):\\n  File \\\"/home/tim/miniconda3/envs/pymc_dev/lib/python3.10/site-packages/aeppl/joint_logprob.py\\\", line 151, in factorized_joint_logprob\\n    q_logprob_vars = _logprob(\\n  File \\\"/home/tim/miniconda3/envs/pymc_dev/lib/python3.10/functools.py\\\", line 889, in wrapper\\n    return dispatch(args[0].__class__)(*args, **kw)\\n  File \\\"/home/tim/miniconda3/envs/pymc_dev/lib/python3.10/site-packages/aeppl/transforms.py\\\", line 611, in transformed_logprob\\n    logprob = _logprob(rv_op, values, *inputs, **kwargs)\\n  File \\\"/home/tim/miniconda3/envs/pymc_dev/lib/python3.10/functools.py\\\", line 889, in wrapper\\n    return dispatch(args[0].__class__)(*args, **kw)\\n  File \\\"/home/tim/Workspaces/pymc/pymc/distributions/distribution.py\\\", line 123, in logp\\n    return class_logp(value, *dist_params)\\n  File \\\"/home/tim/Workspaces/pymc/pymc/distributions/multivariate.py\\\", line 288, in logp\\n    quaddist, logdet, ok = quaddist_parse(value, mu, cov)\\n  File \\\"/home/tim/Workspaces/pymc/pymc/distributions/multivariate.py\\\", line 156, in quaddist_parse\\n    dist, logdet, ok = quaddist_chol(delta, chol_cov)\\n  File \\\"/home/tim/Workspaces/pymc/pymc/distributions/multivariate.py\\\", line 173, in quaddist_chol\\n    delta_trans = solve_lower(chol_cov, delta.T).T\\n\\nHINT: Use the Aesara flag `exception_verbosity=high` for a debug print-out and storage map footprint of this Apply node.\"\r\n\r\n\r\n\r\n For reproduction, see code below.\r\n\r\n```python3\r\n\r\nwith pm.Model() as model:\r\n    kappa_MV = pm.MvNormal(\"kappa_mv\",\r\n                           mu=[1,1,1,1],\r\n                           cov = np.eye(4),\r\n                           initval=[2,1,0,2],\r\n                           transform=pm.distributions.transforms.ordered\r\n                           )\r\n    pm.sample()\r\n```\r\n\r\nI want to share my progress here as draft to make collaboration possible ;) . \r\n\r\nCheers!\r\n\r\n**Checklist**\r\n+ [x] Explain important implementation details \ud83d\udc46\r\n+ [x] Make sure that [the pre-commit linting/style checks pass](https://docs.pymc.io/en/latest/contributing/python_style.html).\r\n+ [x] Link relevant issues (preferably in [nice commit messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html))\r\n+ [x] Are the changes covered by tests and docstrings?\r\n+ [x] Fill out the short summary sections \ud83d\udc47\r\n\r\n## Bugfixes / New features\r\n- ordering transformation for RVs with number of dimensions > 1\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6255/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6255/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6248", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6248/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6248/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6248/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6248", "id": 1425426158, "node_id": "I_kwDOAALxiM5U9kbu", "number": 6248, "title": "Duplicated log output in prior/posterior predictive sampling", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2107010938, "node_id": "MDU6TGFiZWwyMTA3MDEwOTM4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/help%20wanted", "name": "help wanted", "color": "b58f13", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-10-27T10:45:04Z", "updated_at": "2023-04-18T12:33:51Z", "closed_at": "2023-04-18T12:33:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I get this issue often after the changes in https://github.com/pymc-devs/pymc/pull/6142 in jupyter environments.\r\n\r\n![image](https://user-images.githubusercontent.com/28983449/198264312-728642bd-ee29-4bf4-ae11-8e7d74f5b5ba.png)\r\n\r\nIf someone can reproduce and provide a minimum example that would be great. \r\n\r\nIf someone knows how to fix the problem, even better!\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6248/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6225", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6225/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6225/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6225/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6225", "id": 1412768176, "node_id": "PR_kwDOAALxiM5A_hqN", "number": 6225, "title": "Fix `debug_print` of wrong variable in notebook", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 86794, "node_id": "MDU6TGFiZWw4Njc5NA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/docs", "name": "docs", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-10-18T08:11:33Z", "updated_at": "2022-11-04T08:58:58Z", "closed_at": "2022-10-18T09:51:20Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6225", "html_url": "https://github.com/pymc-devs/pymc/pull/6225", "diff_url": "https://github.com/pymc-devs/pymc/pull/6225.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6225.patch", "merged_at": "2022-10-18T09:51:20Z"}, "body": "We were debug_printing `x` instead of `z` when we start talking about PyMC models\r\n\r\n## Major / Breaking Changes\r\n- ...\r\n\r\n## Bugfixes / New features\r\n- ...\r\n\r\n## Docs / Maintenance\r\n- Fix `debug_print` of wrong variable in notebook\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6225/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6223", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6223/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6223/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6223/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6223", "id": 1412409916, "node_id": "I_kwDOAALxiM5UL6o8", "number": 6223, "title": "Raise informative error when non-value variables are assigned to samplers", "user": {"login": "dfm", "id": 350282, "node_id": "MDQ6VXNlcjM1MDI4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/350282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfm", "html_url": "https://github.com/dfm", "followers_url": "https://api.github.com/users/dfm/followers", "following_url": "https://api.github.com/users/dfm/following{/other_user}", "gists_url": "https://api.github.com/users/dfm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfm/subscriptions", "organizations_url": "https://api.github.com/users/dfm/orgs", "repos_url": "https://api.github.com/users/dfm/repos", "events_url": "https://api.github.com/users/dfm/events{/privacy}", "received_events_url": "https://api.github.com/users/dfm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76152, "node_id": "MDU6TGFiZWw3NjE1Mg==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/enhancements", "name": "enhancements", "color": "02e10c", "default": false, "description": null}, {"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2022-10-18T00:39:09Z", "updated_at": "2022-11-09T12:42:18Z", "closed_at": "2022-11-09T12:42:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nIn PyMC3, the `pm.inputvars` would (correctly, I think!) identify and the top-level input variables, whereas in PyMC v4 (`main` branch and released), it basically seems to be a no-op. To be more explicit, the following passes in PyMC3 (things get a bit more complicated with transformed variables - that's a different but related conversation!):\r\n\r\n```python\r\nwith pm.Model():\r\n    x = pm.Normal(\"x\")\r\n    assert pm.inputvars([x]) == [x]\r\n\r\n    y = pm.Normal(\"y\")\r\n    assert len(inputvars([x, y])) == 2\r\n    assert x in pm.inputvars([x, y])\r\n    assert y in pm.inputvars([x, y])\r\n\r\n    z = x + y\r\n    assert len(pm.inputvars([z])) == 2\r\n    assert x in pm.inputvars([z])\r\n    assert y in pm.inputvars([z])\r\n\r\n    w = pm.Deterministic(\"w\", x + y)\r\n    assert len(pm.inputvars([w])) == 2\r\n    assert x in pm.inputvars([w])\r\n    assert y in pm.inputvars([w])\r\n```\r\n\r\nbut in PyMC (v4) all these asserts fail, since every call to `pm.inputvars` returns an empty list. This can be mitigated to some extent using `Model.rvs_to_values` (see [here](https://github.com/pymc-devs/pymc/blob/9822ce5c7d23ff27734bf1cdebc7efd34e5e6480/pymc/tuning/starting.py#L99-L101), for example), for reasons that I don't totally understand - adding this makes things work correctly for `x` and `y` in the example above, but still returns the empty list for `z` and `w`.\r\n\r\nThe real issue seems to be that `aesara.graph.basic.graph_inputs` walks up the graph too far:\r\n\r\n```python\r\nfrom aesara.graph.basic import graph_inputs\r\nwith pm.Model():\r\n    x = pm.Uniform(\"x\")\r\n    print(list(graph_inputs([x])))\r\n\r\n# prints: [RandomGeneratorSharedVariable(<Generator(PCG64) at 0x7F4FFBFCC7D0>), TensorConstant{[]}, TensorConstant{11}, TensorConstant{0.0}, TensorConstant{1.0}]\r\n```\r\n\r\nI'm opening the issue here instead of over on Aesara, because I think that Aesara is providing the intended behavior, but PyMC is incorrectly using the results.\r\n\r\n**What is affected?** I noticed this when using `pm.find_MAP`, but this also leads to strange behavior in `Model.compile_fn` where `inputvars` is used to determine the relevant inputs. This function shows up in a few other spots throughout the codebase where I think issues could pop up.\r\n\r\nI tried to look into fixing this, but I don't really follow the core back end details enough to know what the best approach is! ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6223/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6217", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6217/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6217/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6217/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6217", "id": 1409169278, "node_id": "I_kwDOAALxiM5T_jd-", "number": 6217, "title": "Dirichlet with \"dims\" instead of \"shape\" produces many warnings", "user": {"login": "hottwaj", "id": 5629061, "node_id": "MDQ6VXNlcjU2MjkwNjE=", "avatar_url": "https://avatars.githubusercontent.com/u/5629061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hottwaj", "html_url": "https://github.com/hottwaj", "followers_url": "https://api.github.com/users/hottwaj/followers", "following_url": "https://api.github.com/users/hottwaj/following{/other_user}", "gists_url": "https://api.github.com/users/hottwaj/gists{/gist_id}", "starred_url": "https://api.github.com/users/hottwaj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hottwaj/subscriptions", "organizations_url": "https://api.github.com/users/hottwaj/orgs", "repos_url": "https://api.github.com/users/hottwaj/repos", "events_url": "https://api.github.com/users/hottwaj/events{/privacy}", "received_events_url": "https://api.github.com/users/hottwaj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-10-14T10:57:41Z", "updated_at": "2022-11-03T17:23:31Z", "closed_at": "2022-11-03T17:23:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\n(as always, thanks for the amazing library :))\r\n\r\nUsing a Dirichlet distribution with \"dims\" instead of \"shape\" arg produces lots of warnings about not being able to infer shape.\r\n\r\nThe model does run though.\r\n\r\nIf I replace Dirichlet with Beta with same dims, or specify shape arg instead of \"dims\" arg, no warnings are generated.\r\n\r\nI suspect the issue is a combination of:\r\n- Dirichlet distribution has something funny going on with how it works out its shape when it is given \"dims\" arg\r\n- sharedvar.value (instead of get_value - .value is deprecated) is used somewhere within aesara - though attempting to fix that caused an Exception to occur instead and the model then did not run - see aesara-devs/aesara#1255 which I posted for this yesterday\r\n\r\nSample code that generates the issue below\r\n\r\n```python\r\nwith pymc.Model() as model:\r\n    model.add_coord(name = 'time_window_dim',\r\n                     values = [0, 1],\r\n                     mutable = True)\r\n    model.add_coord(name = 'type_dim',\r\n                     values = ['A', 'B', 'C', 'D'],\r\n                     mutable = True)\r\n    \r\n    years = pymc.MutableData('years',\r\n                             numpy.array([[1, 2, 2, 1]]*2, dtype = float),\r\n                             dims = ('time_window_dim', 'type_dim'))\r\n    rates = pymc.Dirichlet('rates',\r\n                           a = numpy.ones(4),\r\n                           dims = ('time_window_dim', 'type_dim',))\r\n    \r\n    compounded_rates = rates*years\r\n    \r\n    pymc.find_MAP()  # pymc.sample() produces endless warnings of the same type listed in traceback below\r\n```\r\n\r\n**Please provide the full traceback.**\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\n/..../aesara/tensor/rewriting/shape.py:169: UserWarning: Failed to infer_shape from Op Elemwise{true_div,no_inplace}.\r\nInput shapes: [(time_window_dim, TensorConstant{1}), (TensorConstant{1}, TensorConstant{1})]\r\nException encountered during infer_shape: <class 'Exception'>\r\nException message: sharedvar.value does not exist anymore. Use sharedvar.get_value() or sharedvar.set_value() instead.\r\nTraceback: Traceback (most recent call last):\r\n  File \"/..../aesara/tensor/rewriting/shape.py\", line 145, in get_node_infer_shape\r\n    o_shapes = shape_infer(\r\n  File \"/..../aesara/tensor/elemwise.py\", line 834, in infer_shape\r\n    out_shape = aesara.tensor.broadcast_shape(*i_shapes, arrays_are_shapes=True)\r\n  File \"/..../aesara/tensor/extra_ops.py\", line 1459, in broadcast_shape\r\n    return broadcast_shape_iter(arrays, **kwargs)\r\n  File \"/..../aesara/tensor/extra_ops.py\", line 1492, in broadcast_shape_iter\r\n    array_shapes = [\r\n  File \"/..../aesara/tensor/extra_ops.py\", line 1494, in <listcomp>\r\n    + tuple(\r\n  File \"/..../aesara/tensor/extra_ops.py\", line 1496, in <genexpr>\r\n    if getattr(sh, \"value\", sh) == 1\r\n  File \"/..../aesara/compile/sharedvalue.py\", line 207, in _value_get\r\n    raise Exception(\r\nException: sharedvar.value does not exist anymore. Use sharedvar.get_value() or sharedvar.set_value() instead.\r\n\r\n  warn(msg)\r\n/..../aesara/tensor/rewriting/shape.py:169: UserWarning: Failed to infer_shape from Op Elemwise{mul,no_inplace}.\r\nInput shapes: [(TensorConstant{1}, TensorConstant{1}), (time_window_dim, TensorConstant{1})]\r\nException encountered during infer_shape: <class 'Exception'>\r\nException message: sharedvar.value does not exist anymore. Use sharedvar.get_value() or sharedvar.set_value() instead.\r\nTraceback: Traceback (most recent call last):\r\n  File \"/..../aesara/tensor/rewriting/shape.py\", line 145, in get_node_infer_shape\r\n    o_shapes = shape_infer(\r\n  File \"/..../aesara/tensor/elemwise.py\", line 834, in infer_shape\r\n    out_shape = aesara.tensor.broadcast_shape(*i_shapes, arrays_are_shapes=True)\r\n  File \"/..../aesara/tensor/extra_ops.py\", line 1459, in broadcast_shape\r\n    return broadcast_shape_iter(arrays, **kwargs)\r\n  File \"/..../aesara/tensor/extra_ops.py\", line 1492, in broadcast_shape_iter\r\n    array_shapes = [\r\n  File \"/..../aesara/tensor/extra_ops.py\", line 1494, in <listcomp>\r\n    + tuple(\r\n  File \"/..../aesara/tensor/extra_ops.py\", line 1496, in <genexpr>\r\n    if getattr(sh, \"value\", sh) == 1\r\n  File \"/..../aesara/compile/sharedvalue.py\", line 207, in _value_get\r\n    raise Exception(\r\nException: sharedvar.value does not exist anymore. Use sharedvar.get_value() or sharedvar.set_value() instead.\r\n\r\n  warn(msg)\r\n```\r\n\r\n</details>\r\n\r\n\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: 4.2.2\r\n* Aesara/Theano Version: 2.8.7\r\n* Python Version: 3.10.2\r\n* Operating system: Ubuntu 20.04\r\n* How did you install PyMC/PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6217/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6203", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6203/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6203/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6203/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6203", "id": 1404653576, "node_id": "PR_kwDOAALxiM5AklTc", "number": 6203, "title": "Fix bug in `get_vars_in_point_list` when model does not have variables that exist in the trace", "user": {"login": "lucianopaz", "id": 5230109, "node_id": "MDQ6VXNlcjUyMzAxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5230109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucianopaz", "html_url": "https://github.com/lucianopaz", "followers_url": "https://api.github.com/users/lucianopaz/followers", "following_url": "https://api.github.com/users/lucianopaz/following{/other_user}", "gists_url": "https://api.github.com/users/lucianopaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucianopaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucianopaz/subscriptions", "organizations_url": "https://api.github.com/users/lucianopaz/orgs", "repos_url": "https://api.github.com/users/lucianopaz/repos", "events_url": "https://api.github.com/users/lucianopaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lucianopaz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2031712615, "node_id": "MDU6TGFiZWwyMDMxNzEyNjE1", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/maintenance", "name": "maintenance", "color": "71f271", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-10-11T13:34:57Z", "updated_at": "2022-10-11T17:43:04Z", "closed_at": "2022-10-11T16:29:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6203", "html_url": "https://github.com/pymc-devs/pymc/pull/6203", "diff_url": "https://github.com/pymc-devs/pymc/pull/6203.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6203.patch", "merged_at": "2022-10-11T16:29:40Z"}, "body": "Closes #6199 \r\n\r\n<!-- !! Thank your for opening a PR !! -->\r\n\r\n**What is this PR about?**\r\n...\r\n\r\n**Checklist**\r\n+ [X] Explain important implementation details \ud83d\udc46\r\n+ [X] Make sure that [the pre-commit linting/style checks pass](https://docs.pymc.io/en/latest/contributing/python_style.html).\r\n+ [X] Link relevant issues (preferably in [nice commit messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html))\r\n+ [X] Are the changes covered by tests and docstrings?\r\n+ [X] Fill out the short summary sections \ud83d\udc47\r\n\r\n## Major / Breaking Changes\r\n- ...\r\n\r\n## Bugfixes / New features\r\n- `get_vars_in_point_list` was implemented in a way that expected all of the variables that were contained in the trace, to also be defined in the model. This fixes that problem and makes the function return a list of the variables that are defined both in the trace and in the model.\r\n\r\n## Docs / Maintenance\r\n- ...\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6203/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6198", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6198/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6198/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6198/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6198", "id": 1403628484, "node_id": "I_kwDOAALxiM5TqavE", "number": 6198, "title": "Bad version name showing up in the rendered docs ", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 86794, "node_id": "MDU6TGFiZWw4Njc5NA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/docs", "name": "docs", "color": "5319e7", "default": false, "description": null}, {"id": 2107010938, "node_id": "MDU6TGFiZWwyMTA3MDEwOTM4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/help%20wanted", "name": "help wanted", "color": "b58f13", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-10-10T19:41:06Z", "updated_at": "2022-10-11T10:16:56Z", "closed_at": "2022-10-11T10:16:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Related to versioneer #6078 \r\n\r\n![image](https://user-images.githubusercontent.com/28983449/194940215-6f48d139-92a6-4356-937c-1e1b160ec912.png)\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6198/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6189", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6189/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6189/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6189/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6189", "id": 1401255963, "node_id": "PR_kwDOAALxiM5AZhZe", "number": 6189, "title": "Don't mask inputs to `pm.Data` containers", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-10-07T14:17:06Z", "updated_at": "2022-10-16T20:10:25Z", "closed_at": "2022-10-16T20:10:24Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": true, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6189", "html_url": "https://github.com/pymc-devs/pymc/pull/6189", "diff_url": "https://github.com/pymc-devs/pymc/pull/6189.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6189.patch", "merged_at": null}, "body": "<!-- !! Thank your for opening a PR !! -->\r\n\r\n**What is this PR about?**\r\nI ran into a problem where NaN values in my data got masked away when creating `pm.Data` containers.\r\nThis was quite unexpected.\r\n\r\nWe need the masking for `observed`, but that's being taken care of in other places already.\r\n\r\n**Checklist**\r\n+ [x] Explain important implementation details \ud83d\udc46\r\n+ [x] Make sure that [the pre-commit linting/style checks pass](https://docs.pymc.io/en/latest/contributing/python_style.html).\r\n+ [x] Link relevant issues (preferably in [nice commit messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html))\r\n+ [x] Are the changes covered by tests and docstrings?\r\n+ [x] Fill out the short summary sections \ud83d\udc47\r\n\r\n## Major / Breaking Changes\r\n- NaN values passed to `pm.Data` are no longer masked automatically.\r\n\r\n## Bugfixes / New features\r\n- None\r\n\r\n## Docs / Maintenance\r\n- None\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6189/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6177", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6177/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6177/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6177/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6177", "id": 1394535321, "node_id": "I_kwDOAALxiM5THuuZ", "number": 6177, "title": "Impute results in mismatch dimensions in dims and data", "user": {"login": "mattiasthalen", "id": 2592140, "node_id": "MDQ6VXNlcjI1OTIxNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/2592140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattiasthalen", "html_url": "https://github.com/mattiasthalen", "followers_url": "https://api.github.com/users/mattiasthalen/followers", "following_url": "https://api.github.com/users/mattiasthalen/following{/other_user}", "gists_url": "https://api.github.com/users/mattiasthalen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattiasthalen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattiasthalen/subscriptions", "organizations_url": "https://api.github.com/users/mattiasthalen/orgs", "repos_url": "https://api.github.com/users/mattiasthalen/repos", "events_url": "https://api.github.com/users/mattiasthalen/events{/privacy}", "received_events_url": "https://api.github.com/users/mattiasthalen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-10-03T10:58:02Z", "updated_at": "2022-11-04T12:50:49Z", "closed_at": "2022-11-04T12:50:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I\u2019m trying to use a model for data with missing values.\r\nThe error I get is: ValueError: different number of dimensions on data and dims: 3 vs 5\r\n\r\nIt seems like a shape issue for the missing values.\r\n\r\n**Example Code**\r\n```python\r\nimport pymc as pm\r\nimport numpy as np\r\nimport xarray as xr\r\nimport pandas as pd\r\n\r\n# Create xarray with test data\r\ncoords = {'exercise': ['Squat', 'Overhead Press', 'Deadlift'],\r\n          'date': ['2020-02-24', '2020-02-26', '2020-03-21', '2020-03-25', '2020-04-06', '2020-07-25', '2020-08-10'],\r\n          'observation': [1, 2, 3, 4, 5, 6]}\r\n\r\ndims = list(coords.keys())\r\n\r\nvelocities = np.array([[[1.198, 1.042, 0.875, 0.735, 0.574, 0.552],\r\n                        [1.261, 0.993, 0.857, 0.828, 0.624, 0.599],\r\n                        [1.224, 1.028, 0.990, 0.742, 0.595, 0.427],\r\n                        [1.112, 0.999, 0.865, 0.751, 0.607, 0.404],\r\n                        [1.157, 1.010, 0.849, 0.716, 0.593, 0.536],\r\n                        [1.179, 1.060, 0.898, 0.783, 0.615, 0.501],\r\n                        [1.209, 1.192, 0.979, 1.025, 0.875, 0.887]],\r\n                       \r\n                       [[0.911, 0.933, 0.779, 0.629, 0.528, 0.409],\r\n                        [1.004, 0.863, 0.770, 0.611, 0.511, 0.376],\r\n                        [0.980, 0.828, 0.766, 0.611, 0.529, 0.349],\r\n                        [1.024, 0.933, 0.841, 0.734, 0.551, 0.287],\r\n                        [0.985, 0.852, 0.599, 0.522, 0.313, 0.234],\r\n                        [0.996, 0.763, 0.758, 0.542, 0.463, 0.378],\r\n                        [1.066, 0.915, 0.786, 0.686, 0.565, 0.429]],\r\n              \r\n                       [[0.654, 1.004, 0.727, 0.483, 0.344, 0.317],\r\n                        [0.885, 0.738, 0.577, 0.495, 0.335, 0.291],\r\n                        [0.749, 0.695, 0.539, 0.461, 0.395, 0.279],\r\n                        [0.801, 0.548, 0.404, 0.424, 0.337, 0.338],\r\n                        [0.770, 0.642, 0.602, 0.493, 0.394, 0.290],\r\n                        [0.766, 0.545, 0.426, 0.431, 0.349, 0.329],\r\n                        [0.787, 0.640, 0.480, 0.401, 0.395, 0.304]]])\r\n\r\nloads = np.array([[[20.0,  40.0,  60.0,  80.0, 100.0, 110.0],\r\n                   [20.0,  40.0,  60.0,  80.0, 100.0, 110.0],\r\n                   [20.0,  40.0,  60.0,  80.0, 100.0, 117.5],\r\n                   [20.0,  40.0,  60.0,  80.0, 100.0, 115.0],\r\n                   [20.0,  40.0,  60.0,  80.0, 100.0, 110.0],\r\n                   [20.0,  40.0,  60.0,  80.0, 100.0, 110.0],\r\n                   [20.0,  30.0,  40.0,  50.0,  60.0,  70.0]],\r\n         \r\n                  [[20.0,  25.0,  30.0,  35.0,  40.0,  45.0],\r\n                   [20.0,  25.0,  30.0,  35.0,  40.0,  45.0],\r\n                   [20.0,  25.0,  30.0,  35.0,  40.0,  45.0],\r\n                   [20.0,  25.0,  30.0,  35.0,  40.0,  45.0],\r\n                   [20.0,  30.0,  40.0,  45.0,  50.0,  52.5],\r\n                   [20.0,  30.0,  35.0,  40.0,  42.5,  45.0],\r\n                   [20.0,  25.0,  30.0,  35.0,  40.0,  45.0]],\r\n         \r\n                  [[60.0,  80.0, 100.0, 120.0, 140.0, 145.0],\r\n                   [60.0,  80.0, 100.0, 120.0, 140.0, 145.0],\r\n                   [60.0,  80.0, 100.0, 120.0, 127.5, 140.0],\r\n                   [60.0, 100.0, 120.0, 125.0, 140.0, 145.0],\r\n                   [60.0,  80.0, 100.0, 120.0, 130.0, 140.0],\r\n                   [60.0, 100.0, 120.0, 125.0, 130.0, 132.5],\r\n                   [70.0,  90.0, 120.0, 135.0, 140.0, 150.0]]])\r\n\r\nmask = np.random.binomial(n = 1, p = 0.8, size = velocities.shape)\r\n\r\ndataset = (xr.Dataset({'velocity': (dims, velocities),\r\n                       'load': (dims, loads),\r\n                       'mask': (dims, mask)},\r\n                      coords = coords)\r\n             .set_coords(['mask']))\r\n\r\ndataset['velocity_std'] = (dataset['velocity'] - dataset['velocity'].mean())/dataset['velocity'].std()\r\ndataset['load_std'] = (dataset['load'] - dataset['load'].mean())/dataset['load'].std()\r\n\r\ndataset['velocity_std_masked'] = dataset['velocity_std'].where(dataset['mask'])\r\ndataset['load_std_masked'] = dataset['load_std'].where(dataset['mask'])\r\n\r\n# Create PyMC\r\nn_exercises = dataset.dims['exercise']\r\nn_dates = dataset.dims['date']\r\nn_observations = dataset.dims['observation']\r\n\r\nexercise_date_idx = [[i]*n_dates for i in np.arange(n_exercises)]\r\nexercise_idx = [[[i]*n_observations for j in np.arange(n_dates)] for i in np.arange(n_exercises)]\r\ndate_idx = [[[j]*n_observations for j in np.arange(n_dates)] for i in np.arange(n_exercises)]\r\n\r\nvelocity = dataset['velocity_std_masked']\r\nload = dataset['load_std_masked']\r\n\r\nwith pm.Model(coords = coords) as model:\r\n    # Inputs\r\n    velocity = pm.Normal('velocity',\r\n                         mu = 0.0,\r\n                         sigma = 1.0,\r\n                         observed = velocity,\r\n                         dims = dims)\r\n\r\n    # Global parameters\r\n    global_intercept = pm.Normal('global_intercept', mu = 0, sigma = 1)\r\n    global_intercept_sd = pm.Exponential('global_intercept_sd', lam = 1)\r\n\r\n    global_slope = pm.Normal('global_slope', mu = 0, sigma = 1)\r\n    global_slope_sd = pm.Exponential('global_slope_sd', lam = 1)\r\n\r\n    # Exercise parameters\r\n    exercise_intercept = pm.Normal('exercise_intercept', mu = global_intercept, sigma = global_intercept_sd, dims = 'exercise')\r\n    exercise_intercept_sd = pm.Exponential('exercise_intercept_sd', lam = 1, dims = 'exercise')\r\n\r\n    exercise_slope = pm.Normal('exercise_slope', mu = global_slope, sigma = global_slope_sd, dims = 'exercise')\r\n    exercise_slope_sd = pm.Exponential('exercise_slope_sd', lam = 1, dims = 'exercise')\r\n    \r\n    # Date parameters\r\n    date_intercept = pm.Normal('date_intercept', mu = exercise_intercept[exercise_date_idx], sigma = exercise_intercept_sd[exercise_date_idx], dims = ['exercise', 'date'])\r\n    date_slope = pm.Normal('date_slope', mu = exercise_slope[exercise_date_idx], sigma = exercise_slope_sd[exercise_date_idx], dims = ['exercise', 'date'])\r\n\r\n    # Model error\r\n    sigma = pm.Exponential('sigma', lam = 1)\r\n\r\n    # Expected value\r\n    mu = date_intercept[exercise_idx, date_idx] + date_slope[exercise_idx, date_idx]*velocity\r\n\r\n    # Likelihood of observed values\r\n    likelihood = pm.Normal('load',\r\n                           mu = mu,\r\n                           sigma = sigma,\r\n                           observed = load,\r\n                           dims = dims)\r\n\r\npm.sample_prior_predictive(model = model)\r\n```\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\n/usr/local/lib/python3.7/dist-packages/arviz/data/base.py:141: UserWarning: In variable load_observed, there are more dims (3) given than exist (1). Passed array should have shape (chain,draw, *shape)\r\n  UserWarning,\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-64-864ebabcd045> in <module>\r\n----> 1 pm.sample_prior_predictive(model = model)\r\n\r\n7 frames\r\n/usr/local/lib/python3.7/dist-packages/pymc/sampling.py in sample_prior_predictive(samples, model, var_names, random_seed, return_inferencedata, idata_kwargs, compile_kwargs)\r\n   2265     if idata_kwargs:\r\n   2266         ikwargs.update(idata_kwargs)\r\n-> 2267     return pm.to_inference_data(prior=prior, **ikwargs)\r\n   2268 \r\n   2269 \r\n\r\n/usr/local/lib/python3.7/dist-packages/pymc/backends/arviz.py in to_inference_data(trace, prior, posterior_predictive, log_likelihood, coords, dims, model, save_warmup)\r\n    588         dims=dims,\r\n    589         model=model,\r\n--> 590         save_warmup=save_warmup,\r\n    591     ).to_inference_data()\r\n    592 \r\n\r\n/usr/local/lib/python3.7/dist-packages/pymc/backends/arviz.py in to_inference_data(self)\r\n    520             \"posterior_predictive\": self.posterior_predictive_to_xarray(),\r\n    521             \"predictions\": self.predictions_to_xarray(),\r\n--> 522             **self.priors_to_xarray(),\r\n    523             \"observed_data\": self.observed_data_to_xarray(),\r\n    524         }\r\n\r\n/usr/local/lib/python3.7/dist-packages/pymc/backends/arviz.py in priors_to_xarray(self)\r\n    473                     library=pymc,\r\n    474                     coords=self.coords,\r\n--> 475                     dims=self.dims,\r\n    476                 )\r\n    477             )\r\n\r\n/usr/local/lib/python3.7/dist-packages/arviz/data/base.py in dict_to_dataset(data, attrs, library, coords, dims, default_dims, index_origin, skip_event_dims)\r\n    312             default_dims=default_dims,\r\n    313             index_origin=index_origin,\r\n--> 314             skip_event_dims=skip_event_dims,\r\n    315         )\r\n    316     return xr.Dataset(data_vars=data_vars, attrs=make_attrs(attrs=attrs, library=library))\r\n\r\n/usr/local/lib/python3.7/dist-packages/arviz/data/base.py in numpy_to_data_array(ary, var_name, coords, dims, default_dims, index_origin, skip_event_dims)\r\n    252     # filter coords based on the dims\r\n    253     coords = {key: xr.IndexVariable((key,), data=np.asarray(coords[key])) for key in dims}\r\n--> 254     return xr.DataArray(ary, coords=coords, dims=dims)\r\n    255 \r\n    256 \r\n\r\n/usr/local/lib/python3.7/dist-packages/xarray/core/dataarray.py in __init__(self, data, coords, dims, name, attrs, indexes, fastpath)\r\n    404             data = _check_data_shape(data, coords, dims)\r\n    405             data = as_compatible_data(data)\r\n--> 406             coords, dims = _infer_coords_and_dims(data.shape, coords, dims)\r\n    407             variable = Variable(dims, data, attrs, fastpath=True)\r\n    408             indexes = dict(\r\n\r\n/usr/local/lib/python3.7/dist-packages/xarray/core/dataarray.py in _infer_coords_and_dims(shape, coords, dims)\r\n    122     elif len(dims) != len(shape):\r\n    123         raise ValueError(\r\n--> 124             \"different number of dimensions on data \"\r\n    125             f\"and dims: {len(shape)} vs {len(dims)}\"\r\n    126         )\r\n\r\nValueError: different number of dimensions on data and dims: 3 vs 5\r\n```\r\n\r\n</details>\r\n\r\n**Model Graph**\r\n![image](https://user-images.githubusercontent.com/2592140/193560575-9d375062-cf0a-402e-b0bc-ca89eb6f049c.png)\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: 4.1.4\r\n* Aesara/Theano Version: 2.7.9\r\n* Python Version: 3.7.14\r\n* Operating system: Google Colab\r\n* How did you install PyMC/PyMC3: !pip install --upgrade pymc\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6177/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6165", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6165/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6165/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6165/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6165", "id": 1392069449, "node_id": "PR_kwDOAALxiM4_60Xn", "number": 6165, "title": "Pass size to specialized truncated dispatch", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-09-30T08:33:56Z", "updated_at": "2022-09-30T12:58:52Z", "closed_at": "2022-09-30T12:58:52Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6165", "html_url": "https://github.com/pymc-devs/pymc/pull/6165", "diff_url": "https://github.com/pymc-devs/pymc/pull/6165.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6165.patch", "merged_at": "2022-09-30T12:58:52Z"}, "body": "Closes #6156 \r\n\r\n**Checklist**\r\n+ [x] Explain important implementation details \ud83d\udc46\r\n+ [x] Make sure that [the pre-commit linting/style checks pass](https://docs.pymc.io/en/latest/contributing/python_style.html).\r\n+ [x] Link relevant issues (preferably in [nice commit messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html))\r\n+ [x] Are the changes covered by tests and docstrings?\r\n+ [x] Fill out the short summary sections \ud83d\udc47\r\n\r\n## Major / Breaking Changes\r\n- ...\r\n\r\n## Bugfixes / New features\r\n- Fix shape bug when creating a specialized `TruncatedNormal` via `Truncated`\r\n\r\n## Docs / Maintenance\r\n- ...\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6165/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6151", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6151/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6151/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6151/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6151", "id": 1387696733, "node_id": "PR_kwDOAALxiM4_sRM4", "number": 6151, "title": "Fix DiscreteUniformRV dropping degenerate dimension", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-09-27T12:41:57Z", "updated_at": "2022-09-29T17:01:48Z", "closed_at": "2022-09-29T17:01:48Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6151", "html_url": "https://github.com/pymc-devs/pymc/pull/6151", "diff_url": "https://github.com/pymc-devs/pymc/pull/6151.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6151.patch", "merged_at": "2022-09-29T17:01:48Z"}, "body": "**What is this PR about?**\r\n\r\nBug found by @drbenvincent \r\nScipy does not respect degenerate dimensions (size=1) implied by the parameters\r\n\r\n**Checklist**\r\n+ [x] Explain important implementation details \ud83d\udc46\r\n+ [x] Make sure that [the pre-commit linting/style checks pass](https://docs.pymc.io/en/latest/contributing/python_style.html).\r\n+ [x] Link relevant issues (preferably in [nice commit messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html))\r\n+ [x] Are the changes covered by tests and docstrings?\r\n+ [x] Fill out the short summary sections \ud83d\udc47\r\n\r\n## Major / Breaking Changes\r\n- ...\r\n\r\n## Bugfixes / New features\r\n- Fix bug where `DiscreteUniformRV` would drop degenerate dimensions from draws\r\n\r\n## Docs / Maintenance\r\n- ...\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6151/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6150", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6150/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6150/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6150/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6150", "id": 1387337844, "node_id": "PR_kwDOAALxiM4_rErQ", "number": 6150, "title": "Add Constant fold helper", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 4289458217, "node_id": "LA_kwDOAALxiM7_q_Ap", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/no%20releasenotes", "name": "no releasenotes", "color": "000000", "default": false, "description": "Skipped in automatic release notes generation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-09-27T08:25:06Z", "updated_at": "2022-09-28T16:10:14Z", "closed_at": "2022-09-28T06:49:16Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6150", "html_url": "https://github.com/pymc-devs/pymc/pull/6150", "diff_url": "https://github.com/pymc-devs/pymc/pull/6150.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6150.patch", "merged_at": "2022-09-28T06:49:16Z"}, "body": "<!-- !! Thank your for opening a PR !! -->\r\n\r\n**What is this PR about?**\r\n\r\nThis PR refactors repeated constant fold logic into a helper function in aesaraf\r\n\r\n**Checklist**\r\n+ [x] Explain important implementation details \ud83d\udc46\r\n+ [x] Make sure that [the pre-commit linting/style checks pass](https://docs.pymc.io/en/latest/contributing/python_style.html).\r\n+ [x] Link relevant issues (preferably in [nice commit messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html))\r\n+ [x] Are the changes covered by tests and docstrings?\r\n+ [x] Fill out the short summary sections \ud83d\udc47\r\n\r\n## Major / Breaking Changes\r\n- ...\r\n\r\n## Bugfixes / New features\r\n- Add `constant_fold` helper\r\n\r\n## Docs / Maintenance\r\n- ...\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6150/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6148", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6148/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6148/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6148/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6148", "id": 1386560540, "node_id": "I_kwDOAALxiM5SpTwc", "number": 6148, "title": "Weird interaction between for loop and aesara.scan result in bug", "user": {"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-09-26T18:58:47Z", "updated_at": "2022-09-30T10:43:55Z", "closed_at": "2022-09-30T10:43:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Reported by user in https://discourse.pymc.io/t/aesara-scan-creating-weird-intermediate-variables-that-crash-the-model/10473/4\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nwith pm.Model() as model:\r\n    m = pm.Uniform(\"m0\", lower=0, upper=1)        # Init the state\r\n\r\n    # Broken with Normal\r\n    # delta = pm.Normal(\"delta\", mu=0, sigma=1)     \r\n    # Works with Uniform\r\n    delta = pm.Uniform(\"delta\", lower=-1, upper=1)     \r\n    \r\n    def step(prev, d): # System dynamics\r\n        return prev + d\r\n    \r\n    for i in range(10): # Time loop\r\n        res, _ = aesara.scan(step, outputs_info=[m], n_steps=3, non_sequences=[delta])\r\n        m = res[-1]\r\n        pm.Normal(f\"inter_{i}\", mu=m) # Extracting an intermediate \"measurement\"\r\n    \r\n    trace = pm.sample()\r\n```\r\n\r\n**Please provide the full traceback.**\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\nFile /opt/homebrew/Caskroom/miniforge/base/envs/pymc2/lib/python3.10/site-packages/pymc/step_methods/hmc/base_hmc.py:107, in <listcomp>(.0)\r\n    101 # We're using the initial/test point to determine the (initial) step\r\n    102 # size.\r\n    103 # XXX: If the dimensions of these terms change, the step size\r\n    104 # dimension-scaling should change as well, no?\r\n    105 test_point = self._model.initial_point()\r\n--> 107 nuts_vars = [test_point[v.name] for v in vars]\r\n    108 size = sum(v.size for v in nuts_vars)\r\n    110 self.step_size = step_scale / (size**0.25)\r\n\r\nKeyError: 'delta0'\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6148/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6147", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6147/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6147/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6147/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6147", "id": 1385892478, "node_id": "PR_kwDOAALxiM4_mOkN", "number": 6147, "title": "Check shared variable values to determine volatility in posterior predictive sampling", "user": {"login": "lucianopaz", "id": 5230109, "node_id": "MDQ6VXNlcjUyMzAxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5230109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucianopaz", "html_url": "https://github.com/lucianopaz", "followers_url": "https://api.github.com/users/lucianopaz/followers", "following_url": "https://api.github.com/users/lucianopaz/following{/other_user}", "gists_url": "https://api.github.com/users/lucianopaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucianopaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucianopaz/subscriptions", "organizations_url": "https://api.github.com/users/lucianopaz/orgs", "repos_url": "https://api.github.com/users/lucianopaz/repos", "events_url": "https://api.github.com/users/lucianopaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lucianopaz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2031712615, "node_id": "MDU6TGFiZWwyMDMxNzEyNjE1", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/maintenance", "name": "maintenance", "color": "71f271", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-09-26T11:19:26Z", "updated_at": "2022-09-30T10:25:55Z", "closed_at": "2022-09-30T10:25:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6147", "html_url": "https://github.com/pymc-devs/pymc/pull/6147", "diff_url": "https://github.com/pymc-devs/pymc/pull/6147.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6147.patch", "merged_at": "2022-09-30T10:25:45Z"}, "body": "<!-- !! Thank your for opening a PR !! -->\r\n\r\n**What is this PR about?**\r\n\r\nCloses #6047.\r\n\r\nThis PR did two things:\r\n\r\n1. It makes the mutable dimension `SharedVariable` length have the name of the corresponding dimension.\r\n2. Adds two arguments to `compile_forward_sampling_function`: `constant_data` and `constant_coords`.\r\n\r\nThese two arguments allow it to determine if a `SharedVariable` has changed after between a call to `sample` and `sample_posterior_predictive`. We have to note that `constant_data` is only knowable if `sample_posterior_predictive` is called supplying an `InferenceData` object, and `constant_coords` are only knowable if `sample_posterior_predictive` is called supplying an `InferenceData` or an `xarray.Dataset` object.\r\n\r\nThe way `sample_posterior_predictive` is able to determine if a data container changed is by doing the following. It first checks the `InferenceData.constant_data` group to find the values of data containers at inference time, and passes those into the `constant_data` argument of `compile_forward_sampling_function`. When a `SharedVariable` is found while walking the graph, it looks up the entry in `constant_data`, it it finds an entry, it checks whether the values in the dictionary match the values of the `SharedVariable` at run time. If they match, the `SharedVariable` is deemed not volatile, if they don't match, the `SharedVariable` is considered volatile.\r\nTo check if a dimension's coordinates changed, `sample_posterior_predictive` compares the model's coordinates to those found in the supplied trace (must be an `InferenceData` or `xarray.Dataset` to have this information). If the coordinates did not change, then the dimension name is added to the `constant_coords` set. Then, when `compile_forward_sampling_function` finds the dimension length's shared variable, it tries to see if its name is in `constant_coords`. If it is, then the dimension is not deemed volatile, if it isn't it is considered volatile.\r\n\r\n**Checklist**\r\n+ [X] Explain important implementation details \ud83d\udc46\r\n+ [X] Make sure that [the pre-commit linting/style checks pass](https://docs.pymc.io/en/latest/contributing/python_style.html).\r\n+ [X] Link relevant issues (preferably in [nice commit messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html))\r\n+ [X] Are the changes covered by tests and docstrings?\r\n+ [X] Fill out the short summary sections \ud83d\udc47\r\n\r\n## Major / Breaking Changes\r\n- ...\r\n\r\n## Bugfixes / New features\r\n- `sample_posterior_predictive`, when supplied with an `InferenceData` object, properly identifies if a `MutableData` or mutable dimension has changed between a call to `pymc.sample` and `pymc.sample_posterior_predictive`. If they have, then the descendant random variables are resampled, if they have not changed, then the descendant random variables are taken from the `InferenceData.posterior`.\r\n\r\n## Docs / Maintenance\r\n- ...\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6147/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6147/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6127", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6127/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6127/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6127/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6127", "id": 1373061452, "node_id": "I_kwDOAALxiM5R10FM", "number": 6127, "title": "Faling test_variational_inference.py::test_fit_fn_text", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}, {"id": 3449746171, "node_id": "LA_kwDOAALxiM7NnvL7", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/VI", "name": "VI", "color": "fef2c0", "default": false, "description": "Variational Inference"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-09-14T14:13:54Z", "updated_at": "2022-09-15T21:38:18Z", "closed_at": "2022-09-15T21:38:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This test failed a couple of times in #6113 \r\n\r\ntest_variational_inference.py::test_fit_fn_text[asvgd-kwargs6-TypeError]\r\n\r\nhttps://github.com/pymc-devs/pymc/actions/runs/3053220065/jobs/4923561777", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6127/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6101", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6101/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6101/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6101/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6101", "id": 1362088325, "node_id": "PR_kwDOAALxiM4-YIIa", "number": 6101, "title": "Make rvs_to_values work with non-RandomVariables", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3561358894, "node_id": "LA_kwDOAALxiM7URgYu", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/logprob-related", "name": "logprob-related", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-09-05T14:31:24Z", "updated_at": "2022-09-09T14:32:32Z", "closed_at": "2022-09-09T14:32:32Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6101", "html_url": "https://github.com/pymc-devs/pymc/pull/6101", "diff_url": "https://github.com/pymc-devs/pymc/pull/6101.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6101.patch", "merged_at": "2022-09-09T14:32:32Z"}, "body": "**What is this PR about?**\r\nCleanup some logic that assumed only RandomVariables can be valued\r\n\r\nRelated to #6072 \r\nRelated to https://github.com/aesara-devs/aeppl/issues/174\r\n\r\n**Checklist**\r\n+ [x] Explain important implementation details \ud83d\udc46\r\n+ [x] Make sure that [the pre-commit linting/style checks pass](https://docs.pymc.io/en/latest/contributing/python_style.html).\r\n+ [x] Link relevant issues (preferably in [nice commit messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html))\r\n+ [x] Are the changes covered by tests and docstrings?\r\n+ [x] Fill out the short summary sections \ud83d\udc47\r\n\r\n## Major / Breaking Changes\r\n- ...\r\n\r\n## Bugfixes / New features\r\n- rvs_to_values now works with non-RandomVariables and unvalued RandomVariables\r\n\r\n## Docs / Maintenance\r\n- ...\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6101/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6063", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6063/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6063/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6063/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6063", "id": 1351003631, "node_id": "PR_kwDOAALxiM49zR99", "number": 6063, "title": "Fix broadcasting via observed and dims", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}, {"id": 4289460127, "node_id": "LA_kwDOAALxiM7_q_ef", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/major", "name": "major", "color": "D93F0B", "default": false, "description": "Include in major changes release notes section"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2022-08-25T14:35:55Z", "updated_at": "2022-08-29T10:19:50Z", "closed_at": "2022-08-29T10:19:50Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6063", "html_url": "https://github.com/pymc-devs/pymc/pull/6063", "diff_url": "https://github.com/pymc-devs/pymc/pull/6063.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6063.patch", "merged_at": "2022-08-29T10:19:50Z"}, "body": "Fixes #5993 \r\n\r\nThis PR also removes the support of ellipsis in dims and shape. This feature was not very advertised so hopefully this won't cause too much pain.\r\n\r\nThese tests illustrate the bug fix\r\n\r\n```python\r\n    def test_broadcast_by_dims(self):\r\n        with pm.Model(coords={\"broadcast_dim\": range(3)}) as m:\r\n            x = pm.Normal(\"x\", mu=np.zeros((1,)), dims=(\"broadcast_dim\",))\r\n            assert x.eval().shape == (3,)\r\n\r\n    def test_broadcast_by_observed(self):\r\n        with pm.Model() as m:\r\n            x = pm.Normal(\"x\", mu=np.zeros((1,)), observed=np.zeros((3,)))\r\n            assert x.eval().shape == (3,)\r\n```\r\n\r\n**Checklist**\r\n+ [x] Explain important implementation details \ud83d\udc46\r\n+ [x] Make sure that [the pre-commit linting/style checks pass](https://docs.pymc.io/en/latest/contributing/python_style.html).\r\n+ [x] Link relevant issues (preferably in [nice commit messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html))\r\n+ [x] Are the changes covered by tests and docstrings?\r\n+ [x] Fill out the short summary sections \ud83d\udc47\r\n\r\n## Major / Breaking Changes\r\n- When shape is not provided, dims or observed are used to define the shape of a variable. If you want a variable that has dims or is observed to automatically resize when its inputs change, you must specify that explicitly via the shape argument. For example, `pm.Normal(\"likelihood\", mu=mu, sigma=sigma, observed=data, dims=\"data\", shape=mu.shape)`\r\n- Remove support of Ellipsis (`...`) in shape and dims\r\n\r\n## Bugfixes / New features\r\n- Fix bug where distribution shape would not be broadcasted by dims or observed\r\n- Allow specifying dims on the fly from observed\r\n- Do not show shape-related dependencies of RandomVariables in `model_graph`\r\n\r\n## Docs / Maintenance\r\n- Update `_make_nice_attr_error` to suggest `pm.draw` instead of `.eval()`\r\n- Add `_make_nice_attr_error` to `SymbolicDistribution`s\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6063/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6061", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6061/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6061/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6061/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6061", "id": 1350687509, "node_id": "I_kwDOAALxiM5QgdsV", "number": 6061, "title": "Variable in `_get_scaling` is never used", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2031712615, "node_id": "MDU6TGFiZWwyMDMxNzEyNjE1", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/maintenance", "name": "maintenance", "color": "71f271", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-08-25T10:34:09Z", "updated_at": "2023-02-28T13:06:15Z", "closed_at": "2023-02-28T13:06:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "PyCharm tells me this variable is never used:\r\n\r\nhttps://github.com/pymc-devs/pymc/blob/4ca3414e2f4e95a9cc8b393e1310de22d3afa473/pymc/distributions/logprob.py#L94\r\n\r\nCC: @ferrine and @chritter ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6061/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6047", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6047/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6047/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6047/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6047", "id": 1334804246, "node_id": "I_kwDOAALxiM5Pj38W", "number": 6047, "title": "Variables with shared inputs are always resampled from the prior in sample_posterior_predictive", "user": {"login": "jcstucki", "id": 14301909, "node_id": "MDQ6VXNlcjE0MzAxOTA5", "avatar_url": "https://avatars.githubusercontent.com/u/14301909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcstucki", "html_url": "https://github.com/jcstucki", "followers_url": "https://api.github.com/users/jcstucki/followers", "following_url": "https://api.github.com/users/jcstucki/following{/other_user}", "gists_url": "https://api.github.com/users/jcstucki/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcstucki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcstucki/subscriptions", "organizations_url": "https://api.github.com/users/jcstucki/orgs", "repos_url": "https://api.github.com/users/jcstucki/repos", "events_url": "https://api.github.com/users/jcstucki/events{/privacy}", "received_events_url": "https://api.github.com/users/jcstucki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 32, "created_at": "2022-08-10T15:28:51Z", "updated_at": "2022-10-11T13:44:23Z", "closed_at": "2022-09-30T10:25:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nUsing the model.add_coord method appears to break pm.sample_posterior_predictive. \r\n\r\nHere\u2019s a simple example, estimating the loc and scale of three independent normals:\r\n\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\n# Generate data\r\ndata = np.random.normal(loc=np.array([3, 5, 8]), scale=np.array([1.1, 6.3, 9.1]), size=(1000, 3))\r\n\r\n# Model 1: No coords\r\nwith pm.Model() as no_coords_model:\r\n    mu = pm.Normal('mu', mu=0, sigma=10, size=3)\r\n    sigma = pm.HalfNormal('sigma', sigma=10, size=3)\r\n    \r\n    ll = pm.Normal('obs', mu=mu, sigma=sigma, observed=data)\r\n    no_coords_trace = pm.sample()\r\n    no_coords_post = pm.sample_posterior_predictive(no_coords_trace)\r\n\r\n# Model 2: Context manager\r\ncoords = {'name': ['A', 'B', 'C']}\r\nwith pm.Model(coords=coords) as context_model:\r\n    mu = pm.Normal('mu', mu=0, sigma=10, dims=['name'])\r\n    sigma = pm.HalfNormal('sigma', sigma=10, dims=['name'])\r\n    ll = pm.Normal('obs', mu=mu, sigma=sigma, observed=data)\r\n    \r\n    context_trace = pm.sample()\r\n    context_post = pm.sample_posterior_predictive(context_trace)\r\n\r\n# Model 3: Within model\r\nwith pm.Model() as within_model:\r\n    within_model.add_coord('name', ['A', 'B', 'C'], mutable=True)\r\n    mu = pm.Normal('mu', mu=0, sigma=10, dims=['name'])\r\n    sigma = pm.HalfNormal('sigma', sigma=10, dims=['name'])\r\n    \r\n    ll = pm.Normal('obs', mu=mu, sigma=sigma, observed=data)\r\n    within_trace = pm.sample()\r\n    within_post = pm.sample_posterior_predictive(within_trace)\r\n\r\n\r\n\r\ntraces = [no_coords_trace, context_trace, within_trace]\r\nmus = [trace.posterior.mu.values[..., i].mean() for trace in traces for i in range(3)]\r\nsigmas = [trace.posterior.sigma.values[..., i].mean() for trace in traces for i in range(3)]\r\npost_df = pd.DataFrame(np.c_[mus, sigmas], columns=['mu', 'sigma'], index=pd.MultiIndex.from_product([['no_coords', 'context', 'within'], ['A', 'B', 'C']]))\r\nprint(post_df.unstack(1).to_string())\r\n\r\n                 mu                         sigma                    \r\n                  A         B         C         A         B         C\r\ncontext    2.977460  4.982624  7.826642  1.081710  6.287514  9.165928\r\nno_coords  2.976785  4.984743  7.827109  1.081657  6.289910  9.174939\r\nwithin     2.976568  4.990646  7.825051  1.081552  6.286198  9.167916\r\n\r\n\r\npps = [no_coords_post, context_post, within_post]\r\nmean_value = [post.posterior_predictive.obs.values[..., i].mean() for post in pps for i in range(3)]\r\npost_df = pd.DataFrame(mean_value, columns=['mean_ppc'], index=pd.MultiIndex.from_product([['no_coords', 'context', 'within'], ['A', 'B', 'C']]))\r\n\r\n           mean_ppc                    \r\n                  A         B         C\r\ncontext    2.977167  4.985852  7.825006\r\nno_coords  2.976837  4.982244  7.818495\r\nwithin    -0.045788 -0.594845 -0.270400\r\n\r\n\r\n```\r\n\r\n\"The dims on within_post are the same as the others, but it seems like totally wrong values are getting sampled. It is telling that the mean of each distribution is not the mean of the means, suggesting it\u2019s not a case of correct values being shuffled.\"\r\n\r\nThis is pretty breaking when attempting to do out-of-sample predictions, since coords needs to be set somehow, and it can't (to my knowledge) be re-added to the model context after instantiation. \r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: 4.1.3\r\n* Aesara/Theano Version: 2.7.7\r\n* Python Version: 3.8\r\n* Operating system: Mac OS\r\n* How did you install PyMC/PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6047/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6037", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6037/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6037/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6037/events", "html_url": "https://github.com/pymc-devs/pymc/pull/6037", "id": 1332296735, "node_id": "PR_kwDOAALxiM481jCc", "number": 6037, "title": "Fix AttributeError in HMC bad initial energy warning", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-08-08T19:23:55Z", "updated_at": "2022-08-10T19:25:56Z", "closed_at": "2022-08-10T19:25:53Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/6037", "html_url": "https://github.com/pymc-devs/pymc/pull/6037", "diff_url": "https://github.com/pymc-devs/pymc/pull/6037.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/6037.patch", "merged_at": "2022-08-10T19:25:53Z"}, "body": "**What is this PR about?**\r\nFixing an `AttributeError: 'numpy.ndarray' object has no attribute 'to_string'`.\r\n\r\nThis is a bit strange, because as far as I can tell `np.ndarray` never had a `.to_string()` method to beging with.\r\nThere's a [`tostring()`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.tostring.html) which got deprecated in NumPy 1.19 however.\r\n\r\nIn any case, the f-string should fix it.\r\n\r\n**Checklist**\r\n+ [x] Explain important implementation details \ud83d\udc46\r\n+ [x] Make sure that [the pre-commit linting/style checks pass](https://docs.pymc.io/en/latest/contributing/python_style.html).\r\n+ [x] ~Link relevant issues (preferably in [nice commit messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html))~\r\n+ [x] Are the changes covered by tests and docstrings?\r\n+ [x] Fill out the short summary sections \ud83d\udc47\r\n\r\n## Major / Breaking Changes\r\nNone\r\n\r\n## Bugfixes / New features\r\nFixes an `AttributeError` in the \"Bad initial energy\" warning.\r\n\r\n## Docs / Maintenance\r\nNone\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6037/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6009", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6009/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6009/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6009/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6009", "id": 1316456559, "node_id": "I_kwDOAALxiM5Od4hv", "number": 6009, "title": "Strange behavior of `pm.sample()` with respect to NUTS-specific keyword arguments", "user": {"login": "mschmidt87", "id": 6512628, "node_id": "MDQ6VXNlcjY1MTI2Mjg=", "avatar_url": "https://avatars.githubusercontent.com/u/6512628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mschmidt87", "html_url": "https://github.com/mschmidt87", "followers_url": "https://api.github.com/users/mschmidt87/followers", "following_url": "https://api.github.com/users/mschmidt87/following{/other_user}", "gists_url": "https://api.github.com/users/mschmidt87/gists{/gist_id}", "starred_url": "https://api.github.com/users/mschmidt87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mschmidt87/subscriptions", "organizations_url": "https://api.github.com/users/mschmidt87/orgs", "repos_url": "https://api.github.com/users/mschmidt87/repos", "events_url": "https://api.github.com/users/mschmidt87/events{/privacy}", "received_events_url": "https://api.github.com/users/mschmidt87/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2022-07-25T08:26:09Z", "updated_at": "2022-08-10T11:58:02Z", "closed_at": "2022-08-10T11:58:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nI noticed a strange behavior of the `pm.sample()` function in terms of specifying arguments for the NUTS sampler. As explained in the docstring, it is possible to specify `target_accept` as a direct arguments to `pm.sample()`, but for `max_treedepth` (and other arguments), this is not possible. Now, this leads to an inconsistency in the interface where `target_accept` is ignored when specified directly while `max_treedepth` is specified in a dictionary. \r\nI find this quite confusing because it means that specifying an argument changes the behavior of another argument. \r\n\r\nThis is a minimal reproducer with comments explaining my observations:\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport numpy as np\r\nimport pymc as pm\r\n\r\n\r\nrng = np.random.RandomState(123)\r\n\r\nwith pm.Model() as model:\r\n    mu = pm.Normal(\"mu\", mu=0, sigma=1)\r\n    obs = pm.Normal(\"obs\", mu=mu, sigma=1, observed=rng.standard_normal(100))\r\n\r\n# Arguments passed to the NUTS sampler internally:\r\n# target_accept = 0.99\r\n\r\nwith model:\r\n    pm.sample(target_accept=0.99)\r\n\r\n# Arguments passed to the NUTS sampler internally:\r\n# max_treedepth = 15\r\n\r\nwith model:\r\n    pm.sample(nuts={\"max_treedepth\": 15})\r\n\r\n# Arguments passed to the NUTS sampler internally:\r\n# max_treedepth = 15\r\n# That means target_accept is not passed to the sampler but just silently dropped.\r\n\r\nwith model:\r\n    pm.sample(nuts={\"max_treedepth\": 15}, target_accept=0.99)\r\n\r\n\r\n# Arguments passed to the NUTS sampler internally:\r\n# max_treedepth = 15, target_accept = 0.99\r\n# Here, everything works as expected.\r\nwith model:\r\n    pm.sample(nuts={\"max_treedepth\": 15, \"target_accept\": 0.99})\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: 4.1.3\r\n* Aesara/Theano Version: 2.7.7\r\n* Python Version: 3.9.11\r\n* Operating system: Mac OS\r\n* How did you install PyMC/PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6009/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6003", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6003/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6003/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6003/events", "html_url": "https://github.com/pymc-devs/pymc/issues/6003", "id": 1315652274, "node_id": "I_kwDOAALxiM5Oa0Ky", "number": 6003, "title": "Broken link in PyMC3 docs", "user": {"login": "maresb", "id": 15216687, "node_id": "MDQ6VXNlcjE1MjE2Njg3", "avatar_url": "https://avatars.githubusercontent.com/u/15216687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maresb", "html_url": "https://github.com/maresb", "followers_url": "https://api.github.com/users/maresb/followers", "following_url": "https://api.github.com/users/maresb/following{/other_user}", "gists_url": "https://api.github.com/users/maresb/gists{/gist_id}", "starred_url": "https://api.github.com/users/maresb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maresb/subscriptions", "organizations_url": "https://api.github.com/users/maresb/orgs", "repos_url": "https://api.github.com/users/maresb/repos", "events_url": "https://api.github.com/users/maresb/events{/privacy}", "received_events_url": "https://api.github.com/users/maresb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 86794, "node_id": "MDU6TGFiZWw4Njc5NA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/docs", "name": "docs", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-07-23T12:53:12Z", "updated_at": "2022-11-19T16:43:23Z", "closed_at": "2022-11-19T14:02:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A Google search of \"bayesian linear regression pymc\" leads me to [this old page](https://docs.pymc.io/en/v3/pymc-examples/examples/generalized_linear_models/GLM-linear.html), which has the handy link at the top:\r\n\r\n> Note\r\n>\r\n> You are not reading the most recent version of this documentation. [v4.1.3](https://docs.pymc.io/en/v4.1.3/pymc-examples/examples/generalized_linear_models/GLM-linear.html) is the latest version available.\r\n\r\nUnfortunately this link looks broken. The correct link seems to be [https://www.pymc.io/projects/docs/en/stable/learn/core_notebooks/GLM_linear.html](https://www.pymc.io/projects/docs/en/stable/learn/core_notebooks/GLM_linear.html).", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/6003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/6003/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5993", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5993/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5993/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5993/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5993", "id": 1312436248, "node_id": "I_kwDOAALxiM5OOjAY", "number": 5993, "title": "Implied dimensions of RVs are not broadcasted by dims or observed", "user": {"login": "aseyboldt", "id": 1882397, "node_id": "MDQ6VXNlcjE4ODIzOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1882397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aseyboldt", "html_url": "https://github.com/aseyboldt", "followers_url": "https://api.github.com/users/aseyboldt/followers", "following_url": "https://api.github.com/users/aseyboldt/following{/other_user}", "gists_url": "https://api.github.com/users/aseyboldt/gists{/gist_id}", "starred_url": "https://api.github.com/users/aseyboldt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aseyboldt/subscriptions", "organizations_url": "https://api.github.com/users/aseyboldt/orgs", "repos_url": "https://api.github.com/users/aseyboldt/repos", "events_url": "https://api.github.com/users/aseyboldt/events{/privacy}", "received_events_url": "https://api.github.com/users/aseyboldt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2022-07-21T03:11:54Z", "updated_at": "2022-08-29T10:19:50Z", "closed_at": "2022-08-29T10:19:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The dims argument is not respected when a random variable is created with parameters that broadcast to the desired output dimensions:\r\n\r\n```python\r\ncoords = {\r\n     \"dim1\": pd.RangeIndex(10),\r\n     \"dim2\": pd.RangeIndex(7)\r\n}\r\n\r\nwith pm.Model(coords=coords) as model:\r\n     mu = np.zeros((10, 1))\r\n     x = pm.Normal(\"x\", mu=mu, dims=(\"dim1\", \"dim2\"))\r\n     y = pm.Normal(\"y\", mu=mu, dims=(\"dim1\", \"dim2\"), shape=(10, 7))\r\n\r\nx.eval().shape\r\n# Returns (10, 1), when it should be (10, 7)\r\n\r\ny.eval().shape\r\n# Correctly returns (10, 7)\r\n```\r\n\r\n* PyMC/PyMC3 Version: latest release 4.1.3\r\n* Aesara/Theano Version:\r\n* Python Version:\r\n* Operating system:\r\n* How did you install PyMC/PyMC3: conda\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5993/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5992", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5992/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5992/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5992/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5992", "id": 1311831368, "node_id": "I_kwDOAALxiM5OMPVI", "number": 5992, "title": "Data objects not connected to binomial, Poisson likelihood when parameters have non-scalar shape", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-07-20T20:10:52Z", "updated_at": "2022-08-26T06:41:04Z", "closed_at": "2022-08-26T06:41:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nWhen using `Data` or `MutableData` objects with binomial or Poisson likelihoods, they are not properly added to the model graph when the likelihood has non-scalar shapes. For example, this works fine:\r\n\r\n\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport pymc as pm \r\nimport numpy as np\r\nwith pm.Model() as m:\r\n    # Initialize with dummy values\r\n    X = pm.MutableData(\"X\", np.empty(3))\r\n\r\n    mu = pm.Exponential('mu', 5)\r\n    theta_like = pm.Poisson(\r\n        \"theta_like\",\r\n        mu=mu,\r\n        observed=X,\r\n    )\r\n```\r\n![working](https://user-images.githubusercontent.com/81476/180070390-255e7b3e-119b-4bad-8981-cd0dd77c4a0e.svg)\r\n\r\nYet giving `mu` a non-scalar shape breaks the model graph:\r\n\r\n```python\r\nimport pymc as pm \r\nimport numpy as np\r\nwith pm.Model() as m:\r\n    # Initialize with dummy values\r\n    X = pm.MutableData(\"X\", np.empty(3))\r\n\r\n    mu = pm.Exponential('mu', 5, shape=3)\r\n    theta_like = pm.Poisson(\r\n        \"theta_like\",\r\n        mu=mu,\r\n        observed=X,\r\n    )\r\n```\r\n\r\n![not_working](https://user-images.githubusercontent.com/81476/180070458-f7f4b7b5-7c9d-48bc-8af0-54e5a813795d.svg)\r\n\r\nInterestingly, this does not occur for some other likelihoods (e.g. normal).\r\n\r\nI discovered this when the Binomial model appeared not to be learning when sampling with data.\r\n\r\n</details>\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: 4.1.2\r\n* Aesara Version:  2.7.5\r\n* Python Version: 3.8.9\r\n* Operating system: Ubuntu\r\n* How did you install PyMC/PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5992/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5979", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5979/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5979/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5979/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5979", "id": 1306445566, "node_id": "I_kwDOAALxiM5N3sb-", "number": 5979, "title": "Sampling with `sampling_jax.sample_blackjax_nuts` fails for `tune < 20`", "user": {"login": "bherwerth", "id": 108834862, "node_id": "U_kgDOBnywLg", "avatar_url": "https://avatars.githubusercontent.com/u/108834862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bherwerth", "html_url": "https://github.com/bherwerth", "followers_url": "https://api.github.com/users/bherwerth/followers", "following_url": "https://api.github.com/users/bherwerth/following{/other_user}", "gists_url": "https://api.github.com/users/bherwerth/gists{/gist_id}", "starred_url": "https://api.github.com/users/bherwerth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bherwerth/subscriptions", "organizations_url": "https://api.github.com/users/bherwerth/orgs", "repos_url": "https://api.github.com/users/bherwerth/repos", "events_url": "https://api.github.com/users/bherwerth/events{/privacy}", "received_events_url": "https://api.github.com/users/bherwerth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2381812947, "node_id": "MDU6TGFiZWwyMzgxODEyOTQ3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/jax", "name": "jax", "color": "f241a5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-07-15T20:11:43Z", "updated_at": "2022-08-26T19:13:54Z", "closed_at": "2022-08-26T19:13:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\n# %%\r\nimport pymc as pm\r\nimport numpy as np\r\nfrom functools import partial\r\n\r\nfrom pymc import sampling_jax\r\nimport pytest\r\n\r\nrstate = np.random.default_rng(seed=0)\r\nobserved = rstate.normal(size=10)\r\nwith pm.Model() as model:\r\n    mu = pm.Normal(\"mu\", mu=0, sigma=10)\r\n    sigma = pm.Gamma(\"sigma\", alpha=1, beta=1)\r\n    y = pm.Normal(\"y\", mu=mu, sigma=sigma, observed=observed)\r\n\r\n    # pm.sample(10, tune=19, cores=1) # works\r\n    # sampling_jax.sample_numpyro_nuts(10, tune=19) # works\r\n    # sampling_jax.sample_blackjax_nuts(10, tune=20) # works\r\n    sampling_jax.sample_blackjax_nuts(10, tune=19) # fails\r\n```\r\n\r\n**Please provide the full traceback.**\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/Users/benedikt/code/pymc/nb_examples/number_of_samples.py\", line 19, in <module>\r\n    sampling_jax.sample_blackjax_nuts(10, tune=19) # fails\r\n  File \"/Users/benedikt/code/pymc/pymc/sampling_jax.py\", line 331, in sample_blackjax_nuts\r\n    states, _ = map_fn(get_posterior_samples)(keys, init_params)\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/_src/traceback_util.py\", line 162, in reraise_with_filtered_traceback\r\n    return fun(*args, **kwargs)\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/_src/api.py\", line 2144, in cache_miss\r\n    out_tree, out_flat = f_pmapped_(*args, **kwargs)\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/_src/api.py\", line 2020, in pmap_f\r\n    out = pxla.xla_pmap(\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/core.py\", line 1939, in bind\r\n    return map_bind(self, fun, *args, **params)\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/core.py\", line 1971, in map_bind\r\n    outs = primitive.process(top_trace, fun, tracers, params)\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/core.py\", line 1942, in process\r\n    return trace.process_map(self, fun, tracers, params)\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/core.py\", line 683, in process_call\r\n    return primitive.impl(f, *tracers, **params)\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/interpreters/pxla.py\", line 829, in xla_pmap_impl\r\n    compiled_fun, fingerprint = parallel_callable(\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/linear_util.py\", line 286, in memoized_fun\r\n    ans = call(fun, *args)\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/interpreters/pxla.py\", line 857, in parallel_callable\r\n    pmap_computation = lower_parallel_callable(\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/_src/profiler.py\", line 312, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/interpreters/pxla.py\", line 1030, in lower_parallel_callable\r\n    jaxpr, consts, replicas, parts, shards = stage_parallel_callable(\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/interpreters/pxla.py\", line 937, in stage_parallel_callable\r\n    jaxpr, out_sharded_avals, consts = pe.trace_to_jaxpr_final(\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/_src/profiler.py\", line 312, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/interpreters/partial_eval.py\", line 1946, in trace_to_jaxpr_final\r\n    jaxpr, out_avals, consts = trace_to_subjaxpr_dynamic(\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/interpreters/partial_eval.py\", line 1892, in trace_to_subjaxpr_dynamic\r\n    ans = fun.call_wrapped(*in_tracers_)\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/linear_util.py\", line 168, in call_wrapped\r\n    ans = self.f(*args, **dict(self.params, **kwargs))\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/_src/traceback_util.py\", line 162, in reraise_with_filtered_traceback\r\n    return fun(*args, **kwargs)\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/_src/api.py\", line 522, in cache_miss\r\n    out_flat = xla.xla_call(\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/core.py\", line 1836, in bind\r\n    return call_bind(self, fun, *args, **params)\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/core.py\", line 1852, in call_bind\r\n    outs = top_trace.process_call(primitive, fun_, tracers, params)\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/interpreters/partial_eval.py\", line 1626, in process_call\r\n    jaxpr, out_type, consts = trace_to_subjaxpr_dynamic2(f, self.main)\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/interpreters/partial_eval.py\", line 1920, in trace_to_subjaxpr_dynamic2\r\n    ans = fun.call_wrapped(*in_tracers_)\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/linear_util.py\", line 168, in call_wrapped\r\n    ans = self.f(*args, **dict(self.params, **kwargs))\r\n  File \"/Users/benedikt/code/pymc/pymc/sampling_jax.py\", line 196, in _blackjax_inference_loop\r\n    last_state, kernel, _ = adapt.run(seed, init_position)\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/blackjax/kernels.py\", line 577, in run\r\n    last_state, warmup_chain = jax.lax.scan(\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/_src/traceback_util.py\", line 162, in reraise_with_filtered_traceback\r\n    return fun(*args, **kwargs)\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/jax/_src/lax/control_flow/loops.py\", line 213, in scan\r\n    raise ValueError(msg.format(', '.join(str(x.shape[0]) for x in xs_flat)))\r\njax._src.traceback_util.UnfilteredStackTrace: ValueError: scan got values with different leading axis sizes: 19, 19, 18.\r\n\r\nThe stack trace below excludes JAX-internal frames.\r\nThe preceding is the original exception that occurred, unmodified.\r\n\r\n--------------------\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/benedikt/code/pymc/nb_examples/number_of_samples.py\", line 19, in <module>\r\n    sampling_jax.sample_blackjax_nuts(10, tune=19) # fails\r\n  File \"/Users/benedikt/code/pymc/pymc/sampling_jax.py\", line 331, in sample_blackjax_nuts\r\n    states, _ = map_fn(get_posterior_samples)(keys, init_params)\r\n  File \"/Users/benedikt/code/pymc/pymc/sampling_jax.py\", line 196, in _blackjax_inference_loop\r\n    last_state, kernel, _ = adapt.run(seed, init_position)\r\n  File \"/Users/benedikt/miniforge3/envs/pymc-dev/lib/python3.10/site-packages/blackjax/kernels.py\", line 577, in run\r\n    last_state, warmup_chain = jax.lax.scan(\r\nValueError: scan got values with different leading axis sizes: 19, 19, 18.\r\n```\r\n\r\n</details>\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version:  commit 2583b7f834f2012bc4a462a576b956cfca722a7c\r\n* Aesara/Theano Version: `aesara=2.7.5`\r\n* Python Version: `3.10.5`\r\n* Operating system: `mac OS 10.15.7`\r\n* How did you install PyMC/PyMC3: env with conda, pymc with pip from git\r\n* Other:\r\n  - jax=0.3.14=pyhd8ed1ab_1\r\n  - jaxlib=0.3.14=cpu_py310h52bc2dc_0\r\n    - blackjax==0.8.2\r\n    - jaxopt==0.4.3\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5979/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5959", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5959/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5959/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5959/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5959", "id": 1299121065, "node_id": "I_kwDOAALxiM5NbwOp", "number": 5959, "title": "Interpolated distribution in V4", "user": {"login": "symeneses", "id": 12284951, "node_id": "MDQ6VXNlcjEyMjg0OTUx", "avatar_url": "https://avatars.githubusercontent.com/u/12284951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/symeneses", "html_url": "https://github.com/symeneses", "followers_url": "https://api.github.com/users/symeneses/followers", "following_url": "https://api.github.com/users/symeneses/following{/other_user}", "gists_url": "https://api.github.com/users/symeneses/gists{/gist_id}", "starred_url": "https://api.github.com/users/symeneses/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/symeneses/subscriptions", "organizations_url": "https://api.github.com/users/symeneses/orgs", "repos_url": "https://api.github.com/users/symeneses/repos", "events_url": "https://api.github.com/users/symeneses/events{/privacy}", "received_events_url": "https://api.github.com/users/symeneses/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "larryshamalama", "id": 24764859, "node_id": "MDQ6VXNlcjI0NzY0ODU5", "avatar_url": "https://avatars.githubusercontent.com/u/24764859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larryshamalama", "html_url": "https://github.com/larryshamalama", "followers_url": "https://api.github.com/users/larryshamalama/followers", "following_url": "https://api.github.com/users/larryshamalama/following{/other_user}", "gists_url": "https://api.github.com/users/larryshamalama/gists{/gist_id}", "starred_url": "https://api.github.com/users/larryshamalama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larryshamalama/subscriptions", "organizations_url": "https://api.github.com/users/larryshamalama/orgs", "repos_url": "https://api.github.com/users/larryshamalama/repos", "events_url": "https://api.github.com/users/larryshamalama/events{/privacy}", "received_events_url": "https://api.github.com/users/larryshamalama/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "larryshamalama", "id": 24764859, "node_id": "MDQ6VXNlcjI0NzY0ODU5", "avatar_url": "https://avatars.githubusercontent.com/u/24764859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larryshamalama", "html_url": "https://github.com/larryshamalama", "followers_url": "https://api.github.com/users/larryshamalama/followers", "following_url": "https://api.github.com/users/larryshamalama/following{/other_user}", "gists_url": "https://api.github.com/users/larryshamalama/gists{/gist_id}", "starred_url": "https://api.github.com/users/larryshamalama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larryshamalama/subscriptions", "organizations_url": "https://api.github.com/users/larryshamalama/orgs", "repos_url": "https://api.github.com/users/larryshamalama/repos", "events_url": "https://api.github.com/users/larryshamalama/events{/privacy}", "received_events_url": "https://api.github.com/users/larryshamalama/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-07-08T14:49:27Z", "updated_at": "2022-07-26T15:51:17Z", "closed_at": "2022-07-26T15:51:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nWhile working on the issue https://github.com/pymc-devs/pymc-examples/issues/115, where I am updating the code from PyMC v3 to v4, I got this error:\r\n\r\n```python\r\nFile ~/Documents/tech_world/bayesian/pymc/pymc/model.py:1790, in Model.check_start_vals(self, start)\r\n   1787 initial_eval = self.point_logps(point=elem)\r\n   1789 if not all(np.isfinite(v) for v in initial_eval.values()):\r\n-> 1790     raise SamplingError(\r\n   1791         \"Initial evaluation of model at starting point failed!\\n\"\r\n   1792         f\"Starting values:\\n{elem}\\n\\n\"\r\n...\r\nStarting values:\r\n{'alpha_interval__': array(nan), 'beta0_interval__': array(nan), 'beta1_interval__': array(nan)}\r\n\r\nInitial evaluation results:\r\n{'alpha': nan, 'beta0': nan, 'beta1': nan, 'Y_obs': nan}\r\n```\r\nTrying to find the reason, I realized that the next basic model works in **v3 but not in V4.**\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport numpy as np\r\nimport pymc as pm\r\n\r\nfrom scipy import stats\r\n\r\nmodel = pm.Model()\r\n\r\nx_points = np.linspace(0, 10, 100)\r\npdf_points = stats.norm.pdf(x_points, loc=1, scale=1)\r\nwith model:    \r\n    # alpha = from_posterior(\"alpha\", trace[\"alpha\"])\r\n    alpha = pm.Interpolated(\"alpha\", x_points, pdf_points)\r\n    # Expected value of outcome\r\n    pm.sample(1000)\r\n```\r\n\r\n**Please provide the full traceback.**\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nSamplingError                             Traceback (most recent call last)\r\n/Users/symeneses/Documents/tech_world/bayesian/pymc-examples/examples/howto/updating_priors.ipynb Cell 16' in <cell line: 10>()\r\n     [12](vscode-notebook-cell:/Users/symeneses/Documents/tech_world/bayesian/pymc-examples/examples/howto/updating_priors.ipynb#ch0000023?line=11) alpha = pm.Interpolated(\"alpha\", x_points, pdf_points)\r\n     [13](vscode-notebook-cell:/Users/symeneses/Documents/tech_world/bayesian/pymc-examples/examples/howto/updating_priors.ipynb#ch0000023?line=12) # Expected value of outcome\r\n---> [14](vscode-notebook-cell:/Users/symeneses/Documents/tech_world/bayesian/pymc-examples/examples/howto/updating_priors.ipynb#ch0000023?line=13) pm.sample(1000)\r\n\r\nFile ~/Documents/tech_world/bayesian/pymc/pymc/sampling.py:558, in sample(draws, step, init, n_init, initvals, trace, chain_idx, chains, cores, tune, progressbar, model, random_seed, discard_tuned_samples, compute_convergence_checks, callback, jitter_max_retries, return_inferencedata, idata_kwargs, mp_ctx, **kwargs)\r\n    556 # One final check that shapes and logps at the starting points are okay.\r\n    557 for ip in initial_points:\r\n--> 558     model.check_start_vals(ip)\r\n    559     _check_start_shape(model, ip)\r\n    561 sample_args = {\r\n    562     \"draws\": draws,\r\n    563     \"step\": step,\r\n   (...)\r\n    573     \"discard_tuned_samples\": discard_tuned_samples,\r\n    574 }\r\n\r\nFile ~/Documents/tech_world/bayesian/pymc/pymc/model.py:1790, in Model.check_start_vals(self, start)\r\n   1787 initial_eval = self.point_logps(point=elem)\r\n   1789 if not all(np.isfinite(v) for v in initial_eval.values()):\r\n-> 1790     raise SamplingError(\r\n   1791         \"Initial evaluation of model at starting point failed!\\n\"\r\n   1792         f\"Starting values:\\n{elem}\\n\\n\"\r\n```\r\n\r\n</details>\r\n\r\n**Please provide any additional information below.**\r\n\r\nChanging the number of sample in `linspace` from 100 to 10 , it works also in V4.\r\n```python\r\nimport numpy as np\r\nimport pymc as pm\r\n\r\nfrom scipy import stats\r\n\r\nmodel = pm.Model()\r\n\r\nx_points = np.linspace(0, 10, 10)\r\npdf_points = stats.norm.pdf(x_points, loc=1, scale=1)\r\nwith model:    \r\n    # alpha = from_posterior(\"alpha\", trace[\"alpha\"])\r\n    alpha = pm.Interpolated(\"alpha\", x_points, pdf_points)\r\n    # Expected value of outcome\r\n    pm.sample(1000)\r\n```\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: v4.0.1 (It works in 3.11.4)\r\n* Aesara/Theano Version: 2.7.3\r\n* Python Version: 3.10\r\n* Operating system: macOS 12.4\r\n* How did you install PyMC/PyMC3: conda\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5959/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5956", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5956/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5956/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5956/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5956", "id": 1297075939, "node_id": "PR_kwDOAALxiM47AMsn", "number": 5956, "title": "Workaround to suppress (some) import warnings from NumPy", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-07-07T09:14:42Z", "updated_at": "2022-07-07T13:17:58Z", "closed_at": "2022-07-07T12:34:54Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5956", "html_url": "https://github.com/pymc-devs/pymc/pull/5956", "diff_url": "https://github.com/pymc-devs/pymc/pull/5956.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5956.patch", "merged_at": "2022-07-07T12:34:53Z"}, "body": "**What is this PR about?**\r\nSuppressing at least some of the annoying print output that appears on import.\r\n\r\nThis copies the changes from https://github.com/aesara-devs/aesara/pull/980 which got delayed.\r\n\r\nSome print output looking like `gcc -v`, but I narrowed that down to a NumPy issue: https://github.com/numpy/numpy/issues/21942\r\n\r\n**Checklist**\r\n+ [x] Explain important implementation details \ud83d\udc46\r\n+ [x] Make sure that [the pre-commit linting/style checks pass](https://docs.pymc.io/en/latest/contributing/python_style.html).\r\n+ [x] Link relevant issues (preferably in [nice commit messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html))\r\n+ [x] ~Are the changes covered by tests and docstrings?~ Executed in all tests; manually validated that it works.\r\n+ [x] Fill out the short summary sections \ud83d\udc47\r\n\r\n## Major / Breaking Changes\r\nNone\r\n\r\n## Bugfixes / New features\r\n- Reduces the amount of uninformative/annoying print output upon import.\r\n\r\n## Docs / Maintenance\r\nNone\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5956/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5953", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5953/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5953/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5953/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5953", "id": 1295585993, "node_id": "PR_kwDOAALxiM467IZD", "number": 5953, "title": "Fix model graph node name to remove RV from end only and not the start", "user": {"login": "cscheffler", "id": 449835, "node_id": "MDQ6VXNlcjQ0OTgzNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/449835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cscheffler", "html_url": "https://github.com/cscheffler", "followers_url": "https://api.github.com/users/cscheffler/followers", "following_url": "https://api.github.com/users/cscheffler/following{/other_user}", "gists_url": "https://api.github.com/users/cscheffler/gists{/gist_id}", "starred_url": "https://api.github.com/users/cscheffler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cscheffler/subscriptions", "organizations_url": "https://api.github.com/users/cscheffler/orgs", "repos_url": "https://api.github.com/users/cscheffler/repos", "events_url": "https://api.github.com/users/cscheffler/events{/privacy}", "received_events_url": "https://api.github.com/users/cscheffler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-07-06T09:59:08Z", "updated_at": "2022-07-06T19:40:28Z", "closed_at": "2022-07-06T19:24:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5953", "html_url": "https://github.com/pymc-devs/pymc/pull/5953", "diff_url": "https://github.com/pymc-devs/pymc/pull/5953.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5953.patch", "merged_at": "2022-07-06T19:24:58Z"}, "body": "The model graph (graphviz) output currently strips the leading \"V\" from a \"VonMises\" random variable node. The reason is that the current code uses `.strip(\"RV\")` to remove characters which is too aggressive. It has been replaced with a check to see if the node name ends with \"RV\" and to remove those two characters if it does.\r\n\r\nThere is also a minor typo where `style = None` was written as `syle = None` (the `t` is missing) but this has no impact since `style` is set to `None` earlier in the code anyway.\r\n\r\n## Bugfixes\r\n- Fixed model graph node names to remove RV from end only and not the start.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5953/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5937", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5937/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5937/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5937/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5937", "id": 1291538489, "node_id": "I_kwDOAALxiM5M-1A5", "number": 5937, "title": "Sampling in numba mode fails with scalar RVs", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-07-01T15:15:29Z", "updated_at": "2022-07-25T08:10:37Z", "closed_at": "2022-07-25T08:10:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```python\r\nimport aesara\r\naesara.config.mode = \"NUMBA\"\r\nimport pymc as pm\r\n\r\nwith pm.Model():\r\n    x = pm.Normal(\"x\") # does not work\r\n    #x = pm.Normal(\"x\", shape=1) # works\r\n    pm.sample(chains=1, cores=1)\r\n```\r\n\r\nTrace:\r\n```\r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"/Users/twiecki/miniforge3/envs/pymc4/lib/python3.10/site-packages/pymc/parallel_sampling.py\", line 129, in run\r\n    self._start_loop()\r\n  File \"/Users/twiecki/miniforge3/envs/pymc4/lib/python3.10/site-packages/pymc/parallel_sampling.py\", line 182, in _start_loop\r\n    point, stats = self._compute_point()\r\n  File \"/Users/twiecki/miniforge3/envs/pymc4/lib/python3.10/site-packages/pymc/parallel_sampling.py\", line 207, in _compute_point\r\n    point, stats = self._step_method.step(self._point)\r\n  File \"/Users/twiecki/miniforge3/envs/pymc4/lib/python3.10/site-packages/pymc/step_methods/arraystep.py\", line 286, in step\r\n    return super().step(point)\r\n  File \"/Users/twiecki/miniforge3/envs/pymc4/lib/python3.10/site-packages/pymc/step_methods/arraystep.py\", line 208, in step\r\n    step_res = self.astep(q)\r\n  File \"/Users/twiecki/miniforge3/envs/pymc4/lib/python3.10/site-packages/pymc/step_methods/hmc/base_hmc.py\", line 156, in astep\r\n    start = self.integrator.compute_state(q0, p0)\r\n  File \"/Users/twiecki/miniforge3/envs/pymc4/lib/python3.10/site-packages/pymc/step_methods/hmc/integration.py\", line 47, in compute_state\r\n    logp, dlogp = self._logp_dlogp_func(q)\r\n  File \"/Users/twiecki/miniforge3/envs/pymc4/lib/python3.10/site-packages/pymc/model.py\", line 411, in __call__\r\n    grads_raveled = DictToArrayBijection.map(\r\n  File \"/Users/twiecki/miniforge3/envs/pymc4/lib/python3.10/site-packages/pymc/blocking.py\", line 61, in map\r\n    vars_info = tuple((v, k, v.shape, v.dtype) for k, v in var_dict.items())\r\n  File \"/Users/twiecki/miniforge3/envs/pymc4/lib/python3.10/site-packages/pymc/blocking.py\", line 61, in <genexpr>\r\n    vars_info = tuple((v, k, v.shape, v.dtype) for k, v in var_dict.items())\r\nAttributeError: 'float' object has no attribute 'shape'\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5937/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5937/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5923", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5923/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5923/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5923/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5923", "id": 1282722746, "node_id": "I_kwDOAALxiM5MdMu6", "number": 5923, "title": "Variables in logp and dlogp functions used in `find_MAP` are not always aligned", "user": {"login": "OleBialas", "id": 38684453, "node_id": "MDQ6VXNlcjM4Njg0NDUz", "avatar_url": "https://avatars.githubusercontent.com/u/38684453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OleBialas", "html_url": "https://github.com/OleBialas", "followers_url": "https://api.github.com/users/OleBialas/followers", "following_url": "https://api.github.com/users/OleBialas/following{/other_user}", "gists_url": "https://api.github.com/users/OleBialas/gists{/gist_id}", "starred_url": "https://api.github.com/users/OleBialas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OleBialas/subscriptions", "organizations_url": "https://api.github.com/users/OleBialas/orgs", "repos_url": "https://api.github.com/users/OleBialas/repos", "events_url": "https://api.github.com/users/OleBialas/events{/privacy}", "received_events_url": "https://api.github.com/users/OleBialas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/29", "html_url": "https://github.com/pymc-devs/pymc/milestone/29", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/29/labels", "id": 7556766, "node_id": "MI_kwDOAALxiM4Ac06e", "number": 29, "title": "v4.1.0", "description": "", "creator": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 13, "state": "closed", "created_at": "2022-01-10T10:37:24Z", "updated_at": "2022-07-03T18:20:28Z", "due_on": null, "closed_at": "2022-07-03T18:20:28Z"}, "comments": 14, "created_at": "2022-06-23T17:23:55Z", "updated_at": "2022-07-02T11:11:01Z", "closed_at": "2022-06-26T05:16:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "In this reproducible example, sampling from the model gives the correct\r\nparameter estimates while `pymc.find_MAP()` does not.\r\n(I just installed the latest pymc version using conda in a new environment on Ubuntu)\r\n\r\nI am modeling weight as a function of height, here is some simulated data:\r\n```python\r\nimport numpy as np\r\nfrom scipy import stats\r\nimport pymc\r\nn_individuals = 1000\r\nalpha = 50\r\nbeta = 0.3\r\nsigma = 5\r\nheight = np.random.uniform(130, 170, n_individuals)\r\nmu = alpha + beta * (height-height.mean())\r\nweight = stats.norm.rvs(loc=mu, scale=sigma, size=n_individuals)\r\n```\r\n\r\nWhen the prior for alpha is centered on the true value of alpha,\r\nfind_MAP() correctly estimates the values for alpha, beta and sigma:\r\n```python\r\nwith pymc.Model() as model:\r\n    alpha = pymc.Normal('alpha', mu=50, sigma=10)\r\n    beta = pymc.Lognormal('beta', mu=0, sigma=1)\r\n    sigma = pymc.Uniform('sigma', lower=0, upper=10)\r\n    mu = alpha + beta * (height-height.mean())\r\n    weight = pymc.Normal('height', mu=mu, sigma=sigma, observed=weight)\r\n    mean_q = pymc.find_MAP()\r\nprint(mean_q)\r\n```\r\n\r\nHowever, when the true value of alpha differs from the prior mean,\r\nbeta and sigma are estimated to be 0:\r\n```python\r\nimport numpy as np\r\nfrom scipy import stats\r\nimport pymc\r\nn_individuals = 1000\r\nalpha = 30\r\nbeta = 0.3\r\nsigma = 5\r\nheight = np.random.uniform(130, 170, n_individuals)\r\nmu = alpha + beta * (height-height.mean())\r\nweight = stats.norm.rvs(loc=mu, scale=sigma, size=n_individuals)\r\nwith pymc.Model() as model:\r\n    alpha = pymc.Normal('alpha', mu=50, sigma=10)\r\n    beta = pymc.Lognormal('beta', mu=0, sigma=1)\r\n    sigma = pymc.Uniform('sigma', lower=0, upper=10)\r\n    mu = alpha + beta * (height-height.mean())\r\n    weight = pymc.Normal('height', mu=mu, sigma=sigma, observed=weight)\r\n    mean_q = pymc.find_MAP()\r\nprint(mean_q)\r\n```\r\n\r\nSampling from the model still returns the correct values for all three parameters:\r\n```python\r\nwith model:\r\n    trace = pymc.sample(1000, tune=1000)\r\npymc.summary(trace)\r\n```\r\nSo I am wondering if this is a bug or if find_MAP() is supposed to fail in the second case.\r\nIf latter, I would have expected some error or warning being put out by the function.\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5923/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5922", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5922/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5922/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5922/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5922", "id": 1282218147, "node_id": "I_kwDOAALxiM5MbRij", "number": 5922, "title": "MarginalApprox doesn't allow non-constant covariance parameters or inducing point locations in v4", "user": {"login": "quantheory", "id": 1740206, "node_id": "MDQ6VXNlcjE3NDAyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1740206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quantheory", "html_url": "https://github.com/quantheory", "followers_url": "https://api.github.com/users/quantheory/followers", "following_url": "https://api.github.com/users/quantheory/following{/other_user}", "gists_url": "https://api.github.com/users/quantheory/gists{/gist_id}", "starred_url": "https://api.github.com/users/quantheory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quantheory/subscriptions", "organizations_url": "https://api.github.com/users/quantheory/orgs", "repos_url": "https://api.github.com/users/quantheory/repos", "events_url": "https://api.github.com/users/quantheory/events{/privacy}", "received_events_url": "https://api.github.com/users/quantheory/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3517167559, "node_id": "LA_kwDOAALxiM7Ro7fH", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/GP", "name": "GP", "color": "CF1A41", "default": false, "description": "Gaussian Process"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2022-06-23T10:59:00Z", "updated_at": "2022-09-01T06:14:09Z", "closed_at": "2022-09-01T06:14:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nThe following code that worked in PyMC3 (and works in v4 if `Marginal` is used instead of `MarginalApprox`) is no longer functional:\r\n\r\n```python\r\nx = np.linspace(0., 1., 10)\r\nxu = np.linspace(0., 1., 5)\r\ny = np.sin(x)\r\n\r\nwith pm.Model():\r\n    sigma_gp = pm.HalfNormal('sigma_gp', sigma=1.)\r\n    l = pm.HalfNormal('l', sigma=0.1)\r\n    cov = sigma_gp**2 * pm.gp.cov.Matern32(1, ls=[l])\r\n    gp = pm.gp.MarginalApprox(cov_func=cov, approx='VFE')\r\n    sigma_noise = pm.HalfNormal('sigma_noise', sigma=1.)\r\n    gp.marginal_likelihood('like', X=x[:,None], y=y,\r\n                           noise=sigma_noise, Xu=xu[:,None])\r\n    maxpost = pm.find_MAP()\r\n    print(maxpost)\r\n```\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n/tmp/ipykernel_33029/329055196.py in <module>\r\n     11     gp.marginal_likelihood('like', X=x[:,None], y=y,\r\n     12                            noise=sigma_noise, Xu=xu[:,None])\r\n---> 13     maxpost = pm.find_MAP()\r\n     14     print(maxpost)\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/pymc/tuning/starting.py in find_MAP(start, vars, method, return_raw, include_transformed, progressbar, maxeval, model, seed, *args, **kwargs)\r\n    109     )\r\n    110     start = ipfn(seed)\r\n--> 111     model.check_start_vals(start)\r\n    112 \r\n    113     var_names = {var.name for var in vars}\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/pymc/model.py in check_start_vals(self, start)\r\n   1785                 )\r\n   1786 \r\n-> 1787             initial_eval = self.point_logps(point=elem)\r\n   1788 \r\n   1789             if not all(np.isfinite(v) for v in initial_eval.values()):\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/pymc/model.py in point_logps(self, point, round_vals)\r\n   1821 \r\n   1822         factors = self.basic_RVs + self.potentials\r\n-> 1823         factor_logps_fn = [at.sum(factor) for factor in self.logp(factors, sum=False)]\r\n   1824         return {\r\n   1825             factor.name: np.round(np.asarray(factor_logp), round_vals)\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/pymc/model.py in logp(self, vars, jacobian, sum)\r\n    751         rv_logps: List[TensorVariable] = []\r\n    752         if rv_values:\r\n--> 753             rv_logps = joint_logp(list(rv_values.keys()), rv_values, sum=False, jacobian=jacobian)\r\n    754             assert isinstance(rv_logps, list)\r\n    755 \r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/pymc/distributions/logprob.py in joint_logp(var, rv_values, jacobian, scaling, transformed, sum, **kwargs)\r\n    255     ]\r\n    256     if unexpected_rv_nodes:\r\n--> 257         raise ValueError(\r\n    258             f\"Random variables detected in the logp graph: {unexpected_rv_nodes}.\\n\"\r\n    259             \"This can happen when DensityDist logp or Interval transform functions \"\r\n\r\nValueError: Random variables detected in the logp graph: [l, sigma_gp].\r\nThis can happen when DensityDist logp or Interval transform functions reference nonlocal variables.\r\n```\r\n\r\n</details>\r\n\r\nThis is probably related to some degree to the `DensityDist` changes and to #5024. Note that the following case where `sigma_noise` is the only random variable works fine:\r\n\r\n```python\r\nx = np.linspace(0., 1., 10)\r\nxu = np.linspace(0., 1., 5)\r\ny = np.sin(x)\r\n\r\nwith pm.Model():\r\n    cov = pm.gp.cov.Matern32(1, ls=[1.])\r\n    gp = pm.gp.MarginalApprox(cov_func=cov, approx='VFE')\r\n    sigma_noise = pm.HalfNormal('sigma_noise', sigma=1.)\r\n    gp.marginal_likelihood('like', X=x[:,None], y=y,\r\n                           noise=sigma_noise, Xu=xu[:,None])\r\n    maxpost = pm.find_MAP()\r\n    print(maxpost)\r\n```\r\n\r\nyielding\r\n\r\n```python\r\n{'sigma_noise_log__': array(-2.8405184), 'sigma_noise': array(0.05839539)}\r\n```\r\n\r\nI'm guessing that this is why this error was not caught earlier. `MarginalApprox` needs a test to be added with non-constant length scales.\r\n\r\nThere's a completely different error if the inducing point locations are non-constant. Example code:\r\n\r\n```python\r\nx = np.linspace(0., 1., 10)\r\nxu_init = np.linspace(0., 1., 5)\r\ny = np.sin(x)\r\n\r\nwith pm.Model():\r\n    cov = pm.gp.cov.Matern32(1, ls=[1.])\r\n    gp = pm.gp.MarginalApprox(cov_func=cov, approx='VFE')\r\n    sigma_noise = pm.HalfNormal('sigma_noise', sigma=1.)\r\n    xu = pm.Flat(\"xu\", shape=(5, 1), initval=xu_init[:,None])\r\n    gp.marginal_likelihood('like', X=x[:,None], y=y,\r\n                           noise=sigma_noise, Xu=xu)\r\n    maxpost = pm.find_MAP()\r\n    print(maxpost)\r\n```\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nMissingInputError                         Traceback (most recent call last)\r\n/tmp/ipykernel_33029/1554036267.py in <module>\r\n     10     gp.marginal_likelihood('like', X=x[:,None], y=y,\r\n     11                            noise=sigma_noise, Xu=xu)\r\n---> 12     maxpost = pm.find_MAP()\r\n     13     print(maxpost)\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/pymc/tuning/starting.py in find_MAP(start, vars, method, return_raw, include_transformed, progressbar, maxeval, model, seed, *args, **kwargs)\r\n    109     )\r\n    110     start = ipfn(seed)\r\n--> 111     model.check_start_vals(start)\r\n    112 \r\n    113     var_names = {var.name for var in vars}\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/pymc/model.py in check_start_vals(self, start)\r\n   1785                 )\r\n   1786 \r\n-> 1787             initial_eval = self.point_logps(point=elem)\r\n   1788 \r\n   1789             if not all(np.isfinite(v) for v in initial_eval.values()):\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/pymc/model.py in point_logps(self, point, round_vals)\r\n   1821 \r\n   1822         factors = self.basic_RVs + self.potentials\r\n-> 1823         factor_logps_fn = [at.sum(factor) for factor in self.logp(factors, sum=False)]\r\n   1824         return {\r\n   1825             factor.name: np.round(np.asarray(factor_logp), round_vals)\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/pymc/model.py in logp(self, vars, jacobian, sum)\r\n    751         rv_logps: List[TensorVariable] = []\r\n    752         if rv_values:\r\n--> 753             rv_logps = joint_logp(list(rv_values.keys()), rv_values, sum=False, jacobian=jacobian)\r\n    754             assert isinstance(rv_logps, list)\r\n    755 \r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/pymc/distributions/logprob.py in joint_logp(var, rv_values, jacobian, scaling, transformed, sum, **kwargs)\r\n    233 \r\n    234     transform_opt = TransformValuesOpt(transform_map)\r\n--> 235     temp_logp_var_dict = factorized_joint_logprob(\r\n    236         tmp_rvs_to_values,\r\n    237         extra_rewrites=transform_opt,\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/aeppl/joint_logprob.py in factorized_joint_logprob(rv_values, warn_missing_rvs, extra_rewrites, **kwargs)\r\n    145         q_rv_inputs = remapped_vars[len(q_value_vars) :]\r\n    146 \r\n--> 147         q_logprob_vars = _logprob(\r\n    148             node.op,\r\n    149             q_value_vars,\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/functools.py in wrapper(*args, **kw)\r\n    875                             '1 positional argument')\r\n    876 \r\n--> 877         return dispatch(args[0].__class__)(*args, **kw)\r\n    878 \r\n    879     funcname = getattr(func, '__name__', 'singledispatch function')\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/pymc/distributions/distribution.py in density_dist_logp(op, value_var_list, *dist_params, **kwargs)\r\n    795             _dist_params = dist_params[3:]\r\n    796             value_var = value_var_list[0]\r\n--> 797             return logp(value_var, *_dist_params)\r\n    798 \r\n    799         @_logcdf.register(rv_type)\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/pymc/gp/gp.py in _build_marginal_likelihood_logp(self, y, X, Xu, sigma, jitter)\r\n    685     def _build_marginal_likelihood_logp(self, y, X, Xu, sigma, jitter):\r\n    686         sigma2 = at.square(sigma)\r\n--> 687         Kuu = self.cov_func(Xu)\r\n    688         Kuf = self.cov_func(Xu, X)\r\n    689         Luu = cholesky(stabilize(Kuu, jitter))\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/pymc/gp/cov.py in __call__(self, X, Xs, diag)\r\n     84             return self.diag(X)\r\n     85         else:\r\n---> 86             return self.full(X, Xs)\r\n     87 \r\n     88     def diag(self, X):\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/pymc/gp/cov.py in full(self, X, Xs)\r\n    507 \r\n    508     def full(self, X, Xs=None):\r\n--> 509         X, Xs = self._slice(X, Xs)\r\n    510         r = self.euclidean_dist(X, Xs)\r\n    511         return (1.0 + np.sqrt(3.0) * r) * at.exp(-np.sqrt(3.0) * r)\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/pymc/gp/cov.py in _slice(self, X, Xs)\r\n     95         xdims = X.shape[-1]\r\n     96         if isinstance(xdims, Variable):\r\n---> 97             xdims = xdims.eval()\r\n     98         if self.input_dim != xdims:\r\n     99             warnings.warn(\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/aesara/graph/basic.py in eval(self, inputs_to_values)\r\n    597         inputs = tuple(sorted(inputs_to_values.keys(), key=id))\r\n    598         if inputs not in self._fn_cache:\r\n--> 599             self._fn_cache[inputs] = function(inputs, self)\r\n    600         args = [inputs_to_values[param] for param in inputs]\r\n    601 \r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/aesara/compile/function/__init__.py in function(inputs, outputs, mode, updates, givens, no_default_updates, accept_inplace, name, rebuild_strict, allow_input_downcast, profile, on_unused_input)\r\n    315         # note: pfunc will also call orig_function -- orig_function is\r\n    316         #      a choke point that all compilation must pass through\r\n--> 317         fn = pfunc(\r\n    318             params=inputs,\r\n    319             outputs=outputs,\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/aesara/compile/function/pfunc.py in pfunc(params, outputs, mode, updates, givens, no_default_updates, accept_inplace, name, rebuild_strict, allow_input_downcast, profile, on_unused_input, output_keys, fgraph)\r\n    372     )\r\n    373 \r\n--> 374     return orig_function(\r\n    375         inputs,\r\n    376         cloned_outputs,\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/aesara/compile/function/types.py in orig_function(inputs, outputs, mode, accept_inplace, name, profile, on_unused_input, output_keys, fgraph)\r\n   1749     try:\r\n   1750         Maker = getattr(mode, \"function_maker\", FunctionMaker)\r\n-> 1751         m = Maker(\r\n   1752             inputs,\r\n   1753             outputs,\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/aesara/compile/function/types.py in __init__(self, inputs, outputs, mode, accept_inplace, function_builder, profile, on_unused_input, fgraph, output_keys, name, no_fgraph_prep)\r\n   1507         indices = [[input, None, [input]] for input in inputs]\r\n   1508 \r\n-> 1509         fgraph, found_updates = std_fgraph(\r\n   1510             inputs, outputs, accept_inplace, fgraph=fgraph\r\n   1511         )\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/aesara/compile/function/types.py in std_fgraph(input_specs, output_specs, accept_inplace, fgraph, features, force_clone)\r\n    228             clone |= spec.variable.owner is not None\r\n    229 \r\n--> 230         fgraph = FunctionGraph(\r\n    231             input_vars,\r\n    232             [spec.variable for spec in output_specs] + updates,\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/aesara/graph/fg.py in __init__(self, inputs, outputs, features, clone, update_mapping, **clone_kwds)\r\n    151 \r\n    152         for output in outputs:\r\n--> 153             self.add_output(output, reason=\"init\")\r\n    154 \r\n    155         self.profile = None\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/aesara/graph/fg.py in add_output(self, var, reason, import_missing)\r\n    161         \"\"\"Add a new variable as an output to this `FunctionGraph`.\"\"\"\r\n    162         self.outputs.append(var)\r\n--> 163         self.import_var(var, reason=reason, import_missing=import_missing)\r\n    164         self.clients[var].append((\"output\", len(self.outputs) - 1))\r\n    165 \r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/aesara/graph/fg.py in import_var(self, var, reason, import_missing)\r\n    302         # Imports the owners of the variables\r\n    303         if var.owner and var.owner not in self.apply_nodes:\r\n--> 304             self.import_node(var.owner, reason=reason, import_missing=import_missing)\r\n    305         elif (\r\n    306             var.owner is None\r\n\r\n~/anaconda3/envs/pymc3/lib/python3.9/site-packages/aesara/graph/fg.py in import_node(self, apply_node, check, reason, import_missing)\r\n    367                                 \"for more information on this error.\"\r\n    368                             )\r\n--> 369                             raise MissingInputError(error_msg, variable=var)\r\n    370 \r\n    371         for node in new_nodes:\r\n\r\nMissingInputError: Input 0 (xu) of the graph (indices start from 0), used to compute Shape(xu), was not provided and not given a value. Use the Aesara flag exception_verbosity='high', for more information on this error.\r\n \r\nBacktrace when that variable is created:\r\n\r\n  File \"/home/spsantos/anaconda3/envs/pymc3/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 3169, in run_cell_async\r\n    has_raised = await self.run_ast_nodes(code_ast.body, cell_name,\r\n  File \"/home/spsantos/anaconda3/envs/pymc3/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 3361, in run_ast_nodes\r\n    if (await self.run_code(code, result,  async_=asy)):\r\n  File \"/home/spsantos/anaconda3/envs/pymc3/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 3441, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"/tmp/ipykernel_33029/1554036267.py\", line 9, in <module>\r\n    xu = pm.Flat(\"xu\", shape=(5, 1), initval=xu_init[:,None])\r\n  File \"/home/spsantos/anaconda3/envs/pymc3/lib/python3.9/site-packages/pymc/distributions/continuous.py\", line 364, in __new__\r\n    return super().__new__(cls, *args, **kwargs)\r\n  File \"/home/spsantos/anaconda3/envs/pymc3/lib/python3.9/site-packages/pymc/distributions/distribution.py\", line 271, in __new__\r\n    rv_out = model.register_rv(\r\n  File \"/home/spsantos/anaconda3/envs/pymc3/lib/python3.9/site-packages/pymc/model.py\", line 1359, in register_rv\r\n    self.create_value_var(rv_var, transform)\r\n  File \"/home/spsantos/anaconda3/envs/pymc3/lib/python3.9/site-packages/pymc/model.py\", line 1509, in create_value_var\r\n    value_var = rv_var.type()\r\n\r\n```\r\n\r\n</details>\r\n\r\nI don't really understand this error, since it's not really clear to me when or how the shape information is propagated through either the Aesara variables or PyMC wrappers. So I'm not sure if this error has the same underlying cause as the other or not.\r\n\r\nI will say that this regression is rather disappointing, since being unable to tune either the hyperparameters or the inducing points makes `MarginalApprox` much less useful.\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: 4.0.1\r\n* Aesara/Theano Version: 2.7.3\r\n* Python Version: 3.9.5\r\n* Operating system: Linux\r\n* How did you install PyMC/PyMC3: conda\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5922/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5917", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5917/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5917/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5917/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5917", "id": 1278043948, "node_id": "PR_kwDOAALxiM46AjJ7", "number": 5917, "title": "Drop support for Python 3.7 and add support for Python 3.10", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 34672788, "node_id": "MDU6TGFiZWwzNDY3Mjc4OA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/release", "name": "release", "color": "e102d8", "default": false, "description": null}, {"id": 2031712615, "node_id": "MDU6TGFiZWwyMDMxNzEyNjE1", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/maintenance", "name": "maintenance", "color": "71f271", "default": false, "description": ""}, {"id": 3767837109, "node_id": "LA_kwDOAALxiM7glKG1", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/Github%20CI/CD", "name": "Github CI/CD", "color": "546BD0", "default": false, "description": ""}, {"id": 4289460127, "node_id": "LA_kwDOAALxiM7_q_ef", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/major", "name": "major", "color": "D93F0B", "default": false, "description": "Include in major changes release notes section"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/29", "html_url": "https://github.com/pymc-devs/pymc/milestone/29", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/29/labels", "id": 7556766, "node_id": "MI_kwDOAALxiM4Ac06e", "number": 29, "title": "v4.1.0", "description": "", "creator": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 13, "state": "closed", "created_at": "2022-01-10T10:37:24Z", "updated_at": "2022-07-03T18:20:28Z", "due_on": null, "closed_at": "2022-07-03T18:20:28Z"}, "comments": 12, "created_at": "2022-06-21T07:55:52Z", "updated_at": "2022-07-03T17:30:33Z", "closed_at": "2022-06-22T14:30:16Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5917", "html_url": "https://github.com/pymc-devs/pymc/pull/5917", "diff_url": "https://github.com/pymc-devs/pymc/pull/5917.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5917.patch", "merged_at": "2022-06-22T14:30:15Z"}, "body": "Temporarily running all tests in 3.10, will remove last commit before merging.\r\n\r\nCloses #5209", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5917/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5909", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5909/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5909/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5909/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5909", "id": 1276021535, "node_id": "PR_kwDOAALxiM4550MH", "number": 5909, "title": "Fix `compile_fn` bug and reduce return type confusion", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2031712615, "node_id": "MDU6TGFiZWwyMDMxNzEyNjE1", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/maintenance", "name": "maintenance", "color": "71f271", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/34", "html_url": "https://github.com/pymc-devs/pymc/milestone/34", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/34/labels", "id": 8072591, "node_id": "MI_kwDOAALxiM4Aey2P", "number": 34, "title": "v4.0.1", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2022-06-11T18:13:45Z", "updated_at": "2022-07-02T11:14:00Z", "due_on": null, "closed_at": "2022-06-20T15:06:56Z"}, "comments": 8, "created_at": "2022-06-19T10:48:02Z", "updated_at": "2022-06-20T10:32:57Z", "closed_at": "2022-06-20T10:14:23Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5909", "html_url": "https://github.com/pymc-devs/pymc/pull/5909", "diff_url": "https://github.com/pymc-devs/pymc/pull/5909.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5909.patch", "merged_at": "2022-06-20T10:14:22Z"}, "body": "This takes the bugfix from #5865 by @dfm albeit without the test case.\r\n\r\nI looked into the test case and couldn't quite figure out why it's not working.\r\nBut if we were to test these module-level functions that are just forwarding to the `Model` methods, we should be doing that with mocks..\r\n\r\nWhile I was at it, I also deprecated `Model.compile_fn(point_fn=True)` in favor of having `Model.compile_fn` vs. `Model.compile_point_fn`.\r\nThe motivation here is that switching the return type via a kwarg is really terrible from a typing perspective.\r\n\r\nThe `Model.compile_point_fn() -> PointFunc` signature on the other hand is less confusing.\r\n\r\n## Incompatible Changes\r\n+ None\r\n\r\n## Compatible Changes\r\n+ `Model.compile_fn(point_fn=True)` was deprecated in favor of a new `Model.compile_point_fn()` method\r\n\r\n## Bugfixes\r\n+ `pm.compile_fn` now correctly forwards the `mode` kwarg (closes #5867)\r\n+ Docstring formatting\r\n+ Type hints", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5909/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 1, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5909/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5898", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5898/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5898/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5898/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5898", "id": 1271041941, "node_id": "I_kwDOAALxiM5Lwo-V", "number": 5898, "title": "Error w/ `deepcopy` of pymc v4 model", "user": {"login": "hectormz", "id": 23343812, "node_id": "MDQ6VXNlcjIzMzQzODEy", "avatar_url": "https://avatars.githubusercontent.com/u/23343812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hectormz", "html_url": "https://github.com/hectormz", "followers_url": "https://api.github.com/users/hectormz/followers", "following_url": "https://api.github.com/users/hectormz/following{/other_user}", "gists_url": "https://api.github.com/users/hectormz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hectormz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hectormz/subscriptions", "organizations_url": "https://api.github.com/users/hectormz/orgs", "repos_url": "https://api.github.com/users/hectormz/repos", "events_url": "https://api.github.com/users/hectormz/events{/privacy}", "received_events_url": "https://api.github.com/users/hectormz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-06-14T16:14:52Z", "updated_at": "2022-08-13T14:46:31Z", "closed_at": "2022-08-13T14:46:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Error w/ `deepcopy` of pymc v4 model\r\n\r\nThis used to work on pymc3 and theano-pymc\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nfrom copy import deepcopy\r\n\r\nimport numpy as np\r\nimport pymc as pm\r\n\r\nRANDOM_SEED = 8927\r\nrng = np.random.default_rng(RANDOM_SEED)\r\n\r\n# True parameter values\r\nalpha, sigma = 1, 1\r\nbeta = [1, 2.5]\r\n\r\n# Size of dataset\r\nsize = 100\r\n\r\n# Predictor variable\r\nX1 = np.random.randn(size)\r\nX2 = np.random.randn(size) * 0.2\r\n\r\n# Simulate outcome variable\r\nY = alpha + beta[0] * X1 + beta[1] * X2 + rng.normal(size=size) * sigma\r\n\r\nbasic_model = pm.Model()\r\n\r\nwith basic_model:\r\n\r\n    # Priors for unknown model parameters\r\n    alpha = pm.Normal(\"alpha\", mu=0, sigma=10)\r\n    beta = pm.Normal(\"beta\", mu=0, sigma=10, shape=2)\r\n    sigma = pm.HalfNormal(\"sigma\", sigma=1)\r\n\r\n    # Expected value of outcome\r\n    mu = alpha + beta[0] * X1 + beta[1] * X2\r\n\r\n    # Likelihood (sampling distribution) of observations\r\n    Y_obs = pm.Normal(\"Y_obs\", mu=mu, sigma=sigma, observed=Y)\r\n\r\nmodel_copy = deepcopy(basic_model)\r\n```\r\n\r\n**Please provide the full traceback.**\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nInput In [9], in <cell line: 41>()\r\n     38     # Likelihood (sampling distribution) of observations\r\n     39     Y_obs = pm.Normal(\"Y_obs\", mu=mu, sigma=sigma, observed=Y)\r\n---> 41 model_copy = deepcopy(basic_model)\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\copy.py:172, in deepcopy(x, memo, _nil)\r\n    170                 y = x\r\n    171             else:\r\n--> 172                 y = _reconstruct(x, memo, *rv)\r\n    174 # If is its own copy, don't memoize.\r\n    175 if y is not x:\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\copy.py:270, in _reconstruct(x, memo, func, args, state, listiter, dictiter, deepcopy)\r\n    268 if state is not None:\r\n    269     if deep:\r\n--> 270         state = deepcopy(state, memo)\r\n    271     if hasattr(y, '__setstate__'):\r\n    272         y.__setstate__(state)\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\copy.py:146, in deepcopy(x, memo, _nil)\r\n    144 copier = _deepcopy_dispatch.get(cls)\r\n    145 if copier is not None:\r\n--> 146     y = copier(x, memo)\r\n    147 else:\r\n    148     if issubclass(cls, type):\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\copy.py:230, in _deepcopy_dict(x, memo, deepcopy)\r\n    228 memo[id(x)] = y\r\n    229 for key, value in x.items():\r\n--> 230     y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n    231 return y\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\copy.py:146, in deepcopy(x, memo, _nil)\r\n    144 copier = _deepcopy_dispatch.get(cls)\r\n    145 if copier is not None:\r\n--> 146     y = copier(x, memo)\r\n    147 else:\r\n    148     if issubclass(cls, type):\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\copy.py:230, in _deepcopy_dict(x, memo, deepcopy)\r\n    228 memo[id(x)] = y\r\n    229 for key, value in x.items():\r\n--> 230     y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n    231 return y\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\copy.py:172, in deepcopy(x, memo, _nil)\r\n    170                 y = x\r\n    171             else:\r\n--> 172                 y = _reconstruct(x, memo, *rv)\r\n    174 # If is its own copy, don't memoize.\r\n    175 if y is not x:\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\copy.py:270, in _reconstruct(x, memo, func, args, state, listiter, dictiter, deepcopy)\r\n    268 if state is not None:\r\n    269     if deep:\r\n--> 270         state = deepcopy(state, memo)\r\n    271     if hasattr(y, '__setstate__'):\r\n    272         y.__setstate__(state)\r\n\r\n    [... skipping similar frames: _deepcopy_dict at line 230 (1 times), deepcopy at line 146 (1 times)]\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\copy.py:172, in deepcopy(x, memo, _nil)\r\n    170                 y = x\r\n    171             else:\r\n--> 172                 y = _reconstruct(x, memo, *rv)\r\n    174 # If is its own copy, don't memoize.\r\n    175 if y is not x:\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\copy.py:270, in _reconstruct(x, memo, func, args, state, listiter, dictiter, deepcopy)\r\n    268 if state is not None:\r\n    269     if deep:\r\n--> 270         state = deepcopy(state, memo)\r\n    271     if hasattr(y, '__setstate__'):\r\n    272         y.__setstate__(state)\r\n\r\n    [... skipping similar frames: deepcopy at line 146 (1 times)]\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\copy.py:230, in _deepcopy_dict(x, memo, deepcopy)\r\n    228 memo[id(x)] = y\r\n    229 for key, value in x.items():\r\n--> 230     y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n    231 return y\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\copy.py:146, in deepcopy(x, memo, _nil)\r\n    144 copier = _deepcopy_dispatch.get(cls)\r\n    145 if copier is not None:\r\n--> 146     y = copier(x, memo)\r\n    147 else:\r\n    148     if issubclass(cls, type):\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\copy.py:205, in _deepcopy_list(x, memo, deepcopy)\r\n    203 append = y.append\r\n    204 for a in x:\r\n--> 205     append(deepcopy(a, memo))\r\n    206 return y\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\copy.py:172, in deepcopy(x, memo, _nil)\r\n    170                 y = x\r\n    171             else:\r\n--> 172                 y = _reconstruct(x, memo, *rv)\r\n    174 # If is its own copy, don't memoize.\r\n    175 if y is not x:\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\copy.py:270, in _reconstruct(x, memo, func, args, state, listiter, dictiter, deepcopy)\r\n    268 if state is not None:\r\n    269     if deep:\r\n--> 270         state = deepcopy(state, memo)\r\n    271     if hasattr(y, '__setstate__'):\r\n    272         y.__setstate__(state)\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\copy.py:146, in deepcopy(x, memo, _nil)\r\n    144 copier = _deepcopy_dispatch.get(cls)\r\n    145 if copier is not None:\r\n--> 146     y = copier(x, memo)\r\n    147 else:\r\n    148     if issubclass(cls, type):\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\copy.py:230, in _deepcopy_dict(x, memo, deepcopy)\r\n    228 memo[id(x)] = y\r\n    229 for key, value in x.items():\r\n--> 230     y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n    231 return y\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\copy.py:153, in deepcopy(x, memo, _nil)\r\n    151 copier = getattr(x, \"__deepcopy__\", None)\r\n    152 if copier is not None:\r\n--> 153     y = copier(memo)\r\n    154 else:\r\n    155     reductor = dispatch_table.get(cls)\r\n\r\nFile ~\\.virtualenvs\\pymc4-venv\\lib\\site-packages\\aesara\\link\\basic.py:142, in Container.__deepcopy__(self, memo)\r\n    132 r = type(self)(\r\n    133     deepcopy(self.type, memo=memo),\r\n    134     deepcopy(self.storage, memo=memo),\r\n   (...)\r\n    138     name=deepcopy(self.name, memo=memo),\r\n    139 )\r\n    140 # Work around NumPy deepcopy of ndarray with 0 dimension that\r\n    141 # don't return an ndarray.\r\n--> 142 if r.storage[0] is not None and not self.type.is_valid_value(r.storage[0]):\r\n    143     assert not data_was_in_memo\r\n    144     assert self.type.is_valid_value(self.storage[0])\r\n\r\nTypeError: is_valid_value() missing 1 required positional argument: 'strict'\r\n```\r\n</details>\r\n\r\n\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC Version: 4.0\r\n* Aesara Version: 2.66\r\n* Python Version: 3.9\r\n* Operating system: Windows\r\n* How did you install PyMC: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5898/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5898/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5887", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5887/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5887/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5887/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5887", "id": 1269026041, "node_id": "PR_kwDOAALxiM45imRN", "number": 5887, "title": "Cast rounded input replacement to original discrete dtype in sample_smc", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3120230247, "node_id": "MDU6TGFiZWwzMTIwMjMwMjQ3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/SMC", "name": "SMC", "color": "238E83", "default": false, "description": "Sequential Monte Carlo"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-06-13T07:31:54Z", "updated_at": "2022-06-13T16:30:21Z", "closed_at": "2022-06-13T16:30:21Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5887", "html_url": "https://github.com/pymc-devs/pymc/pull/5887", "diff_url": "https://github.com/pymc-devs/pymc/pull/5887.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5887.patch", "merged_at": "2022-06-13T16:30:21Z"}, "body": "Solves the problem described in https://discourse.pymc.io/t/model-works-with-nuts-prior-predictive-but-not-with-smc/9585/4", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5887/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5882", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5882/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5882/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5882/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5882", "id": 1268554874, "node_id": "PR_kwDOAALxiM45hHFH", "number": 5882, "title": "Align advertised `Metropolis` `stats_dtypes` with changes from 1e7d91f", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/34", "html_url": "https://github.com/pymc-devs/pymc/milestone/34", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/34/labels", "id": 8072591, "node_id": "MI_kwDOAALxiM4Aey2P", "number": 34, "title": "v4.0.1", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2022-06-11T18:13:45Z", "updated_at": "2022-07-02T11:14:00Z", "due_on": null, "closed_at": "2022-06-20T15:06:56Z"}, "comments": 4, "created_at": "2022-06-12T11:42:23Z", "updated_at": "2022-06-12T12:49:49Z", "closed_at": "2022-06-12T12:45:59Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5882", "html_url": "https://github.com/pymc-devs/pymc/pull/5882", "diff_url": "https://github.com/pymc-devs/pymc/pull/5882.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5882.patch", "merged_at": "2022-06-12T12:45:59Z"}, "body": "In https://github.com/michaelosthege/mcbackend/pull/27 I tried to upgrade to `4.0.0` but the CI failed.\r\n\r\nThe reason for the failure is an incorrect `stats_dtypes[\"accepted\"]` which was not updated with the changes in 1e7d91f.\r\n\r\n------\r\n\r\n+ [x] No breaks\r\n+ [x] right before it's ready to merge, mention the PR in the RELEASE-NOTES.md\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5882/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5867", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5867/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5867/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5867/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5867", "id": 1264767417, "node_id": "I_kwDOAALxiM5LYtG5", "number": 5867, "title": "Bug in pm.compile_fn", "user": {"login": "dfm", "id": 350282, "node_id": "MDQ6VXNlcjM1MDI4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/350282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfm", "html_url": "https://github.com/dfm", "followers_url": "https://api.github.com/users/dfm/followers", "following_url": "https://api.github.com/users/dfm/following{/other_user}", "gists_url": "https://api.github.com/users/dfm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfm/subscriptions", "organizations_url": "https://api.github.com/users/dfm/orgs", "repos_url": "https://api.github.com/users/dfm/repos", "events_url": "https://api.github.com/users/dfm/events{/privacy}", "received_events_url": "https://api.github.com/users/dfm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/34", "html_url": "https://github.com/pymc-devs/pymc/milestone/34", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/34/labels", "id": 8072591, "node_id": "MI_kwDOAALxiM4Aey2P", "number": 34, "title": "v4.0.1", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2022-06-11T18:13:45Z", "updated_at": "2022-07-02T11:14:00Z", "due_on": null, "closed_at": "2022-06-20T15:06:56Z"}, "comments": 0, "created_at": "2022-06-08T13:37:52Z", "updated_at": "2022-06-20T10:14:22Z", "closed_at": "2022-06-20T10:14:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nAs discussed in #5865, `pm.compile_fn` is incorrect as implemented:\r\n\r\n```python\r\nimport pymc as pm\r\n\r\nwith pm.Model() as model:\r\n    x = pm.Normal(\"x\")\r\n    pm.compile_fn(x)\r\n```\r\n\r\nFails with `TypeError` because `Model.compile_fn` expects `mode` as keyword argument:\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n\r\n[<ipython-input-11-13dd2931074e>](https://localhost:8080/#) in <module>()\r\n      5     x = pm.Normal(\"x\")\r\n      6 \r\n----> 7     pm.compile_fn(x)\r\n\r\n[/usr/local/lib/python3.7/dist-packages/pymc/model.py](https://localhost:8080/#) in compile_fn(outs, mode, point_fn, model, **kwargs)\r\n   1826     \"\"\"\r\n   1827     model = modelcontext(model)\r\n-> 1828     return model.compile_fn(outs, mode, point_fn=point_fn, **kwargs)\r\n   1829 \r\n   1830 \r\n\r\nTypeError: compile_fn() takes 2 positional arguments but 3 positional arguments (and 1 keyword-only argument) were given\r\n```\r\n\r\n</details>\r\n\r\n[The fix is simple](https://github.com/pymc-devs/pymc/pull/5865), but I don't know the code base enough to add a sensible test.\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version:\r\n* Aesara/Theano Version:\r\n* Python Version:\r\n* Operating system:\r\n* How did you install PyMC/PyMC3: (conda/pip)\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5867/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5817", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5817/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5817/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5817/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5817", "id": 1251673963, "node_id": "PR_kwDOAALxiM44oVJv", "number": 5817, "title": "More safety nets for resizing mutable dimensions", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76152, "node_id": "MDU6TGFiZWw3NjE1Mg==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/enhancements", "name": "enhancements", "color": "02e10c", "default": false, "description": null}, {"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2022-05-28T16:39:53Z", "updated_at": "2022-06-03T14:31:04Z", "closed_at": "2022-06-03T14:28:10Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5817", "html_url": "https://github.com/pymc-devs/pymc/pull/5817", "diff_url": "https://github.com/pymc-devs/pymc/pull/5817.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5817.patch", "merged_at": "2022-06-03T14:28:09Z"}, "body": "+ Adds a `Model.set_dim` method for resizing dimensions that were created by `add_coord(..., mutable=True)`.\r\n+ Changes `Model.set_data` to anticipate that data-induced resizing can target dimensions that were created through `add_coord(..., mutable=True)` which are not symbolically linked to the data variables.\r\n\r\nCloses #5812.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5817/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5817/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5816", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5816/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5816/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5816/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5816", "id": 1251672963, "node_id": "PR_kwDOAALxiM44oU9Z", "number": 5816, "title": "Fix bug in Slice sampler and speedup `test_step.py`", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76152, "node_id": "MDU6TGFiZWw3NjE1Mg==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/enhancements", "name": "enhancements", "color": "02e10c", "default": false, "description": null}, {"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2022-05-28T16:35:04Z", "updated_at": "2022-05-30T16:28:56Z", "closed_at": "2022-05-30T16:28:56Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5816", "html_url": "https://github.com/pymc-devs/pymc/pull/5816", "diff_url": "https://github.com/pymc-devs/pymc/pull/5816.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5816.patch", "merged_at": "2022-05-30T16:28:55Z"}, "body": "Closes #5815 \r\n\r\nI changed the logic when creating the initial interval according to MacKay (2005, page 375) [[pdf](https://www.inference.org.uk/itprnn/book.pdf)].\r\n\r\n![image](https://user-images.githubusercontent.com/28983449/170834162-f05db517-64a9-4510-8d45-af69cf5de746.png)\r\n\r\n### Before\r\n\r\n```python\r\nql[i] = q[i] - nr.uniform(0, self.w[i])\r\nqr[i] = q[i] + self.w[i]\r\n```\r\n\r\n### After\r\n```python\r\nr = nr.uniform()\r\nql[i] = q[i] - r * self.w[i]\r\nqr[i] = q[i] + (1 - r) * self.w[i]\r\n```\r\n\r\nI think the previous was causing the proposals to be systematically biased towards higher values (right).\r\n\r\nAlso made sure that we set the boundaries of previous variables to the accepted values, which probably by mistake was only being done during tuning.\r\n\r\n```\r\n# Set qr and ql to the accepted points (they matter for subsequent iterations)\r\nqr[i] = ql[i] = q[i]\r\n```\r\n\r\nIf someone more familiar with these can confirm my changes to `Slice` make sense that would be great. \r\n\r\nThe sampler now converges in the multivariate example in #5815, and does an increasingly better job with more samples.\r\n\r\n***\r\n\r\nAlso did some other minor changes, see individual commits for more details.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5816/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5815", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5815/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5815/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5815/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5815", "id": 1251621548, "node_id": "I_kwDOAALxiM5Kmjqs", "number": 5815, "title": "Slice sampler does not converge in simple MvNormal prior model", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2595955764, "node_id": "MDU6TGFiZWwyNTk1OTU1NzY0", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/question", "name": "question", "color": "1d76db", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-05-28T12:41:41Z", "updated_at": "2022-05-30T16:28:55Z", "closed_at": "2022-05-30T16:28:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This example is taken from the step_tests here: https://github.com/pymc-devs/pymc/blob/4d2f3a8d5f99fc773bc0a1aad6d51e4f3f047698/pymc/tests/test_step.py#L89\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport pymc as pm\r\nimport numpy as np\r\n\r\nmu = np.array([-0.1, 0.5, 1.1])\r\np = np.array([[2.0, 0, 0], [0.05, 0.1, 0], [1.0, -0.05, 5.5]])\r\ntau = np.dot(p, p.T)\r\n\r\nwith pm.Model() as model:\r\n    pm.MvNormal( \"x\",  mu, tau=tau,)\r\n\r\nexpected_mean = mu\r\nexpected_std = np.diag(np.linalg.inv(tau)) ** 0.5\r\n\r\nwith model:\r\n    trace = pm.sample(\r\n        tune=10_000,\r\n        draws=10_000,\r\n        chains=1,\r\n        step=pm.Slice(),\r\n        return_inferencedata=False,\r\n    )\r\n\r\n# Very bad, the second mean seems to be consistently biased\r\nprint(expected_mean, trace[\"x\"].mean(axis=0))\r\n# [-0.1  0.5  1.1] [-0.14368236  1.76355742  1.11952911]\r\n\r\n# Quite good\r\nprint(expected_std, trace[\"x\"].std(axis=0)) \r\n# [ 0.56672996 10.00041321  0.18181818] [0.56335647 9.88682831 0.18468393]\r\n```\r\n\r\nThis was also the case in V3: https://colab.research.google.com/drive/1Pw7a-1J-bnb4dPsPvxwuWH6TdFENYb5m?usp=sharing", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5815/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5812", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5812/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5812/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5812/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5812", "id": 1250727286, "node_id": "I_kwDOAALxiM5KjJV2", "number": 5812, "title": "set_data cannot deal with nodes without owners", "user": {"login": "lucianopaz", "id": 5230109, "node_id": "MDQ6VXNlcjUyMzAxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5230109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucianopaz", "html_url": "https://github.com/lucianopaz", "followers_url": "https://api.github.com/users/lucianopaz/followers", "following_url": "https://api.github.com/users/lucianopaz/following{/other_user}", "gists_url": "https://api.github.com/users/lucianopaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucianopaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucianopaz/subscriptions", "organizations_url": "https://api.github.com/users/lucianopaz/orgs", "repos_url": "https://api.github.com/users/lucianopaz/repos", "events_url": "https://api.github.com/users/lucianopaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lucianopaz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 818212053, "node_id": "MDU6TGFiZWw4MTgyMTIwNTM=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/request%20discussion", "name": "request discussion", "color": "dbef5b", "default": false, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26", "html_url": "https://github.com/pymc-devs/pymc/milestone/26", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26/labels", "id": 7210288, "node_id": "MI_kwDOAALxiM4AbgUw", "number": 26, "title": "v4.0.0", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 50, "state": "closed", "created_at": "2021-10-01T14:41:57Z", "updated_at": "2022-11-05T04:50:00Z", "due_on": null, "closed_at": "2022-06-12T18:19:16Z"}, "comments": 5, "created_at": "2022-05-27T12:44:55Z", "updated_at": "2022-06-03T14:28:09Z", "closed_at": "2022-06-03T14:28:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\n`set_data` seems to have a problem when the new coordinates are nodes without an owner.\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport numpy as np\r\nimport pymc as pm\r\n\r\n\r\nwith pm.Model() as m:\r\n    m.add_coord(\"a\", np.arange(10), mutable=True)\r\n    pm.MutableData(\"x\", np.zeros(10), dims=\"a\")\r\n\r\nm.set_data(\"x\", np.ones(5), coords={\"a\": np.arange(10, 15)})\r\n```\r\n\r\n**Please provide the full traceback.**\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-1-dc6231ed80dd> in <module>\r\n      7     pm.MutableData(\"x\", np.zeros(10), dims=\"a\")\r\n      8 \r\n----> 9 m.set_data(\"x\", np.ones(5), coords={\"a\": np.arange(10, 15)})\r\n\r\n~/repos/pymc3/pymc/model.py in set_data(self, name, values, coords)\r\n   1172                     )\r\n   1173                 else:\r\n-> 1174                     length_belongs_to = length_tensor.owner.inputs[0].owner.inputs[0]\r\n   1175                     if not isinstance(length_belongs_to, SharedVariable):\r\n   1176                         raise ShapeError(\r\n\r\nAttributeError: 'NoneType' object has no attribute 'inputs'\r\n```\r\n\r\n</details>\r\n\r\n**Please provide any additional information below.**\r\n\r\nIn the traceback, `length_tensor` is `m.dim_lengths[\"a\"]`. The type of this variable is `aesara.tensor.sharedvar.ScalarSharedVariable` and it has no owners. I don't know when the owner logic was introduced, but it doesn't cover the simple case where the new coordinate is an array. Maybe this was intended? In any case, this should be fixed before releasing v4\r\n\r\n### Original code\r\n\r\nOriginally, I was running on an older version with respect to main. The code that I used was this\r\n\r\n```python\r\nimport numpy as np\r\nimport pymc as pm\r\n\r\n\r\ncoords = {\"a\": np.arange(10)}\r\nwith pm.Model(coords=coords) as m:\r\n    pm.MutableData(\"x\", np.zeros(10), dims=\"a\")\r\n\r\nm.set_data(\"x\", np.ones(5), coords={\"a\": np.arange(10, 15)})\r\n```\r\n\r\n<details><summary>Which now leads to the following traceback instead</summary>\r\n\r\n```python\r\nShapeError                                Traceback (most recent call last)\r\n<ipython-input-2-d7c5b13f43a6> in <module>\r\n      7     pm.MutableData(\"x\", np.zeros(10), dims=\"a\")\r\n      8 \r\n----> 9 m.set_data(\"x\", np.ones(5), coords={\"a\": np.arange(10, 15)})\r\n\r\n~/repos/pymc3/pymc/model.py in set_data(self, name, values, coords)\r\n   1164                         )\r\n   1165                 if isinstance(length_tensor, TensorConstant):\r\n-> 1166                     raise ShapeError(\r\n   1167                         f\"Resizing dimension '{dname}' is impossible, because \"\r\n   1168                         \"a 'TensorConstant' stores its length. To be able \"\r\n\r\nShapeError: Resizing dimension 'a' is impossible, because a 'TensorConstant' stores its length. To be able to change the dimension length, pass `mutable=True` when registering the dimension via `model.add_coord`, or define it via a `pm.MutableData` variable.\r\n\r\n```\r\n</details>\r\n\r\nI think that it's rather strange not to be able to modify coordinates given via a constant tensor, but to be honest I didn't see when/where it was discussed.\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: 4.0.0b6\r\n* Aesara/Theano Version:\r\n* Python Version:\r\n* Operating system:\r\n* How did you install PyMC/PyMC3: (conda/pip)\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5812/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5805", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5805/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5805/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5805/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5805", "id": 1248385931, "node_id": "PR_kwDOAALxiM44dbxh", "number": 5805, "title": "Limit model graph nodes to named model variables", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-05-25T16:41:51Z", "updated_at": "2022-05-26T11:06:29Z", "closed_at": "2022-05-26T11:06:24Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5805", "html_url": "https://github.com/pymc-devs/pymc/pull/5805", "diff_url": "https://github.com/pymc-devs/pymc/pull/5805.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5805.patch", "merged_at": "2022-05-26T11:06:24Z"}, "body": "Some nodes such as `NoneConst` in an Aesara graph are named, but aren't model variables\r\nthat the user is interested in.\r\n\r\nPrior to this fix, the model graph would print nodes like this:\r\n\r\n![grafik](https://user-images.githubusercontent.com/5894642/170316131-c712b7f6-7b1a-4d9b-9631-fbd1db08718f.png)\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5805/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5804", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5804/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5804/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5804/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5804", "id": 1248313254, "node_id": "PR_kwDOAALxiM44dO8A", "number": 5804, "title": "Fix non-reparametrized GP prior shape problem and forward `dims`", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}, {"id": 3517167559, "node_id": "LA_kwDOAALxiM7Ro7fH", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/GP", "name": "GP", "color": "CF1A41", "default": false, "description": "Gaussian Process"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-05-25T15:51:04Z", "updated_at": "2022-05-26T10:26:45Z", "closed_at": "2022-05-26T10:26:42Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5804", "html_url": "https://github.com/pymc-devs/pymc/pull/5804", "diff_url": "https://github.com/pymc-devs/pymc/pull/5804.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5804.patch", "merged_at": "2022-05-26T10:26:41Z"}, "body": "Fixes #5803 by using a straightforward link to the input shape - symbolic or not.\r\n\r\nI added asserts into existing tests to safeguard against the original issue.\r\n\r\nAlso, I forwarded the `dims` from `kwargs` to the `Deterministic` variable that's created in the reparametrization.\r\nThis leads to prettier `pm.model_to_graphviz` outputs.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5804/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5803", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5803/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5803/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5803/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5803", "id": 1248182466, "node_id": "I_kwDOAALxiM5KZcDC", "number": 5803, "title": "Shape problem in GP priors when `reparameterize=False`", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}, {"id": 3517167559, "node_id": "LA_kwDOAALxiM7Ro7fH", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/GP", "name": "GP", "color": "CF1A41", "default": false, "description": "Gaussian Process"}], "state": "closed", "locked": false, "assignee": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-05-25T14:26:02Z", "updated_at": "2022-05-26T10:26:41Z", "closed_at": "2022-05-26T10:26:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nWhen passing `reparameterize=False` to a `pm.Latent` prior, the resulting variable changes its shape.\r\n\r\n```python\r\nwith pm.Model() as pmodel:\r\n\r\n    ls = pm.LogNormal(\"ls\")\r\n    scaling = pm.LogNormal(\"scaling\")\r\n\r\n    mean_func = pm.gp.mean.Zero()\r\n    cov_func = scaling**2 * pm.gp.cov.ExpQuad(input_dim=1, ls=ls)\r\n    gp = pm.gp.Latent(mean_func=mean_func, cov_func=cov_func)\r\n    \r\n    x = numpy.array([1,2,3])\r\n    predA = gp.prior(\r\n        \"predA\",\r\n        x[:, None],\r\n        size=3,\r\n        reparameterize=True,\r\n    )\r\n    print(predA.shape.eval())\r\n    # [3]\r\n\r\n    predB = gp.prior(\r\n        \"predB\",\r\n        x[:, None],\r\n        size=3,\r\n        reparameterize=False,\r\n    )\r\n    print(predB.shape.eval())\r\n    # [3 3]\r\n```\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: `main`\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5803/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5795", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5795/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5795/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5795/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5795", "id": 1245824065, "node_id": "I_kwDOAALxiM5KQcRB", "number": 5795, "title": "Graphviz does not properly show observed `ConstantData` when subjected to intermediate Ops", "user": {"login": "larryshamalama", "id": 24764859, "node_id": "MDQ6VXNlcjI0NzY0ODU5", "avatar_url": "https://avatars.githubusercontent.com/u/24764859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larryshamalama", "html_url": "https://github.com/larryshamalama", "followers_url": "https://api.github.com/users/larryshamalama/followers", "following_url": "https://api.github.com/users/larryshamalama/following{/other_user}", "gists_url": "https://api.github.com/users/larryshamalama/gists{/gist_id}", "starred_url": "https://api.github.com/users/larryshamalama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larryshamalama/subscriptions", "organizations_url": "https://api.github.com/users/larryshamalama/orgs", "repos_url": "https://api.github.com/users/larryshamalama/repos", "events_url": "https://api.github.com/users/larryshamalama/events{/privacy}", "received_events_url": "https://api.github.com/users/larryshamalama/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-05-24T00:15:54Z", "updated_at": "2022-07-26T16:16:36Z", "closed_at": "2022-07-26T16:16:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```python\r\nwith pm.Model() as model:\r\n    data = pm.ConstantData(\"data\", [0, 0, 1, 1], dtype=np.int64)\r\n    p = pm.Beta(\"p\", 1, 1)\r\n    bern = pm.Bernoulli(\"response\", p, observed=data)\r\n    \r\npm.model_to_graphviz(model)\r\n```\r\n\r\nyields\r\n\r\n<img width=\"323\" alt=\"image\" src=\"https://user-images.githubusercontent.com/24764859/169923807-e9b2033a-bc6c-4e2b-83ec-1130c6f94a8e.png\">\r\n\r\nIn other words, there should be an arrow from `response` to `data`. This is because `model[\"data\"].tag.observations` is in fact an `Elemwise` operation rather than `data` as defined under the context manager. I don't think that this was broken from the recently merged PR #5634.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5795/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5784", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5784/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5784/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5784/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5784", "id": 1241592712, "node_id": "I_kwDOAALxiM5KATOI", "number": 5784, "title": "NUTS initialized with ADVI is not reproducible across multiple calls", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3449746171, "node_id": "LA_kwDOAALxiM7NnvL7", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/VI", "name": "VI", "color": "fef2c0", "default": false, "description": "Variational Inference"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-05-19T10:53:50Z", "updated_at": "2022-05-24T20:33:40Z", "closed_at": "2022-05-24T20:33:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This happens because ADVI compiles a function from the model RandomVariables which depend on shared RandomState/Generator variables that are updated in place and not reset.\r\n\r\nThere is currently no easy way to reseed these shared variables. There used to be something like this at some point in the V4 refactor, but it's gone. Probably it will be reintroduced by whatever fixes #5733. \r\n\r\nThis is also a limitation in prior and posterior predictive, as those functions can only be resampled with the same results if a whole `Model` is recreated with the original `rng_seeder`. This is \"less of a problem\" because those functions explicitly raise if a user tries to pass seeds, whereas these are still supported in `sampling`.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5784/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5771", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5771/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5771/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5771/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5771", "id": 1238547690, "node_id": "I_kwDOAALxiM5J0rzq", "number": 5771, "title": "Remove `size` option from `sample_posterior_predictive`", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2031712615, "node_id": "MDU6TGFiZWwyMDMxNzEyNjE1", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/maintenance", "name": "maintenance", "color": "71f271", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-05-17T12:12:26Z", "updated_at": "2022-05-18T08:05:20Z", "closed_at": "2022-05-18T08:05:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We should remove this option, as the call to `change_rv_size` will break any dependencies across resized variables.\r\n\r\nhttps://github.com/pymc-devs/pymc/blob/85468b0cf9f174d9d0f8076ebe763f71dae8ec8f/pymc/sampling.py#L1740-L1741", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5771/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5769", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5769/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5769/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5769/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5769", "id": 1237199981, "node_id": "I_kwDOAALxiM5Jvixt", "number": 5769, "title": "`draw` coordinate values are re-numbered after `sample_posterior_predictive` from thinned posterior", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1395104865, "node_id": "MDU6TGFiZWwxMzk1MTA0ODY1", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/feature%20request", "name": "feature request", "color": "006b75", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-05-16T13:55:04Z", "updated_at": "2022-05-17T13:13:53Z", "closed_at": "2022-05-17T13:13:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nThe recommended way to thin a posterior is with a `slice(None, None, thin)` slicing.\r\n\r\nThis slicing results in `draw` coordinate values like `0, 10, 20, ...`.\r\n\r\nHowever, these are not passed through to the result which is re-indexed as `draw=[0, 1, 2, ...]`.\r\n\r\n```python\r\nimport pymc as pm\r\n\r\nwith pm.Model() as pmodel:\r\n    pm.Normal(\"n\")\r\n\r\n    idata = pm.sample()\r\n\r\n    pp = pm.sample_posterior_predictive(\r\n        trace=idata.posterior.sel(draw=slice(None, None, 10)),\r\n        var_names=[\"n\"],\r\n    )\r\n\r\nprint(pp.posterior_predictive.draw)\r\n# <xarray.DataArray 'draw' (draw: 100)>\r\n# array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\r\n#        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\r\n#        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,\r\n#        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,\r\n#        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,\r\n#        90, 91, 92, 93, 94, 95, 96, 97, 98, 99])\r\n# Coordinates:\r\n#   * draw     (draw) int32 0 1 2 3 4 5 6 7 8 9 ... 90 91 92 93 94 95 96 97 98 99\r\n```\r\n\r\nThis makes it much harder to reconstruct wich posterior draw a posterior predictive sample belongs to.\r\n\r\nAFAIK this is not intentional.\r\n\r\nIn my opinion we should pass the coordinate values through?\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: `4.0.0b6`\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5769/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5766", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5766/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5766/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5766/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5766", "id": 1236297804, "node_id": "I_kwDOAALxiM5JsGhM", "number": 5766, "title": "ZeroInflatedPoisson and ZeroInflatedNegativeBinomial show up as Deterministic on graphviz", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2107010938, "node_id": "MDU6TGFiZWwyMTA3MDEwOTM4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/help%20wanted", "name": "help wanted", "color": "b58f13", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2022-05-15T14:04:31Z", "updated_at": "2022-11-03T13:38:39Z", "closed_at": "2022-11-03T13:38:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It's probably because they are not pure RandomVariables. We need to update the `model_graph` logic to accommodate them", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5766/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5766/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5732", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5732/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5732/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5732/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5732", "id": 1217579611, "node_id": "I_kwDOAALxiM5Ikspb", "number": 5732, "title": "Error in NUTS + ADVI init with deterministics", "user": {"login": "PedroSebe", "id": 35467940, "node_id": "MDQ6VXNlcjM1NDY3OTQw", "avatar_url": "https://avatars.githubusercontent.com/u/35467940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PedroSebe", "html_url": "https://github.com/PedroSebe", "followers_url": "https://api.github.com/users/PedroSebe/followers", "following_url": "https://api.github.com/users/PedroSebe/following{/other_user}", "gists_url": "https://api.github.com/users/PedroSebe/gists{/gist_id}", "starred_url": "https://api.github.com/users/PedroSebe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PedroSebe/subscriptions", "organizations_url": "https://api.github.com/users/PedroSebe/orgs", "repos_url": "https://api.github.com/users/PedroSebe/repos", "events_url": "https://api.github.com/users/PedroSebe/events{/privacy}", "received_events_url": "https://api.github.com/users/PedroSebe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3449746171, "node_id": "LA_kwDOAALxiM7NnvL7", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/VI", "name": "VI", "color": "fef2c0", "default": false, "description": "Variational Inference"}], "state": "closed", "locked": false, "assignee": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26", "html_url": "https://github.com/pymc-devs/pymc/milestone/26", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26/labels", "id": 7210288, "node_id": "MI_kwDOAALxiM4AbgUw", "number": 26, "title": "v4.0.0", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 50, "state": "closed", "created_at": "2021-10-01T14:41:57Z", "updated_at": "2022-11-05T04:50:00Z", "due_on": null, "closed_at": "2022-06-12T18:19:16Z"}, "comments": 1, "created_at": "2022-04-27T16:12:23Z", "updated_at": "2022-05-18T09:35:43Z", "closed_at": "2022-05-18T09:35:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nUsing NUTS sampler with ADVI initialization in models with Dirichlet distribution yields `TypeError: Too many parameter passed to aesara function` in PyMC 4.0.0b6. Note that this is not the same issue as in #4733. The error can be reproduced as:\r\n```python\r\nimport pymc as pm\r\nimport numpy as np\r\n\r\nwith pm.Model() as model:\r\n    var = pm.Dirichlet(\"var\", np.ones((3,4)))\r\n    trace = pm.sample(cores=1, init=\"advi\", n_init=2000)\r\n```\r\n\r\n<details><summary><b>Click for full traceback</b></summary>\r\n\r\n```python\r\nAuto-assigning NUTS sampler...\r\nInitializing NUTS using advi...\r\n 65.10% [1302/2000 00:00<00:00 Average Loss = 1.3673]\r\nConvergence achieved at 1900\r\nInterrupted at 1,899 [94%]: Average Loss = 1.3242\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nInput In [7], in <cell line: 4>()\r\n      4 with pm.Model() as model:\r\n      5     var = pm.Dirichlet(\"var\", np.ones((3,4)))\r\n----> 6     trace = pm.sample(cores=1, init=\"advi\", n_init=2000)\r\n\r\nFile ~/miniconda3/envs/pymc_env/lib/python3.10/site-packages/pymc/sampling.py:506, in sample(draws, step, init, n_init, initvals, trace, chain_idx, chains, cores, tune, progressbar, model, random_seed, discard_tuned_samples, compute_convergence_checks, callback, jitter_max_retries, return_inferencedata, idata_kwargs, mp_ctx, **kwargs)\r\n    504 # One final check that shapes and logps at the starting points are okay.\r\n    505 for ip in initial_points:\r\n--> 506     model.check_start_vals(ip)\r\n    507     _check_start_shape(model, ip)\r\n    509 sample_args = {\r\n    510     \"draws\": draws,\r\n    511     \"step\": step,\r\n   (...)\r\n    522     \"discard_tuned_samples\": discard_tuned_samples,\r\n    523 }\r\n\r\nFile ~/miniconda3/envs/pymc_env/lib/python3.10/site-packages/pymc/model.py:1695, in Model.check_start_vals(self, start)\r\n   1689     valid_keys = \", \".join(self.named_vars.keys())\r\n   1690     raise KeyError(\r\n   1691         \"Some start parameters do not appear in the model!\\n\"\r\n   1692         f\"Valid keys are: {valid_keys}, but {extra_keys} was supplied\"\r\n   1693     )\r\n-> 1695 initial_eval = self.point_logps(point=elem)\r\n   1697 if not all(np.isfinite(v) for v in initial_eval.values()):\r\n   1698     raise SamplingError(\r\n   1699         \"Initial evaluation of model at starting point failed!\\n\"\r\n   1700         f\"Starting values:\\n{elem}\\n\\n\"\r\n   1701         f\"Initial evaluation results:\\n{initial_eval}\"\r\n   1702     )\r\n\r\nFile ~/miniconda3/envs/pymc_env/lib/python3.10/site-packages/pymc/model.py:1736, in Model.point_logps(self, point, round_vals)\r\n   1730 factors = self.basic_RVs + self.potentials\r\n   1731 factor_logps_fn = [at.sum(factor) for factor in self.logpt(factors, sum=False)]\r\n   1732 return {\r\n   1733     factor.name: np.round(np.asarray(factor_logp), round_vals)\r\n   1734     for factor, factor_logp in zip(\r\n   1735         factors,\r\n-> 1736         self.compile_fn(factor_logps_fn)(point),\r\n   1737     )\r\n   1738 }\r\n\r\nFile ~/miniconda3/envs/pymc_env/lib/python3.10/site-packages/pymc/model.py:1835, in PointFunc.__call__(self, state)\r\n   1834 def __call__(self, state):\r\n-> 1835     return self.f(**state)\r\n\r\nFile ~/miniconda3/envs/pymc_env/lib/python3.10/site-packages/aesara/compile/function/types.py:836, in Function.__call__(self, *args, **kwargs)\r\n    833     c.provided = 0\r\n    835 if len(args) + len(kwargs) > len(self.input_storage):\r\n--> 836     raise TypeError(\"Too many parameter passed to aesara function\")\r\n    838 # Set positional arguments\r\n    839 i = 0\r\n\r\nTypeError: Too many parameter passed to aesara function\r\n```\r\n\r\n</details>\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: 4.0.0b6\r\n* Aesara/Theano Version: 2.5.1\r\n* Python Version: 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:39:04) [GCC 10.3.0]\r\n* Operating system: untu 20.04.4 LTS x86-64\r\n* How did you install PyMC/PyMC3: pip. I followed the instructions from the [installation guide](https://github.com/pymc-devs/pymc/wiki/Installation-Guide-(Linux)#pymc-installation-for-linux), changing `jax` to `jax[cpu]`.\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5732/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5732/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5711", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5711/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5711/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5711/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5711", "id": 1203232571, "node_id": "PR_kwDOAALxiM42LE-A", "number": 5711, "title": "Deterministic group order of Approximations", "user": {"login": "zcabaal", "id": 6473834, "node_id": "MDQ6VXNlcjY0NzM4MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6473834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zcabaal", "html_url": "https://github.com/zcabaal", "followers_url": "https://api.github.com/users/zcabaal/followers", "following_url": "https://api.github.com/users/zcabaal/following{/other_user}", "gists_url": "https://api.github.com/users/zcabaal/gists{/gist_id}", "starred_url": "https://api.github.com/users/zcabaal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zcabaal/subscriptions", "organizations_url": "https://api.github.com/users/zcabaal/orgs", "repos_url": "https://api.github.com/users/zcabaal/repos", "events_url": "https://api.github.com/users/zcabaal/events{/privacy}", "received_events_url": "https://api.github.com/users/zcabaal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3449746171, "node_id": "LA_kwDOAALxiM7NnvL7", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/VI", "name": "VI", "color": "fef2c0", "default": false, "description": "Variational Inference"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-04-13T12:27:19Z", "updated_at": "2022-04-18T14:03:07Z", "closed_at": "2022-04-18T14:02:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5711", "html_url": "https://github.com/pymc-devs/pymc/pull/5711", "diff_url": "https://github.com/pymc-devs/pymc/pull/5711.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5711.patch", "merged_at": "2022-04-18T14:02:50Z"}, "body": "In the `__init__` of the `Approximation` class, there is an issue with `list(set(...))` makes the order of elements not deterministic, and it varies between runs. This means runs are not reproducible even when fixing random seeds.\r\n\r\nThis PR fixes the issue, and make sure that the order of variables in the group is the same is the order is `model.free_RVs`", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5711/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5704", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5704/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5704/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5704/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5704", "id": 1197609809, "node_id": "I_kwDOAALxiM5HYhNR", "number": 5704, "title": "GaussianRandomWalk fails with ellipsis", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-04-08T17:55:27Z", "updated_at": "2022-04-19T19:33:24Z", "closed_at": "2022-04-19T19:33:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```python\r\nimport pymc as pm\r\nx = pm.GaussianRandomWalk.dist(init=pm.Normal.dist(), steps=5, shape=(3, ...))\r\nprint(x.shape.eval())  # [3, 3, 6]; should be [3, 6]\r\nprint(x.eval())  # ValueError\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5704/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5703", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5703/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5703/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5703/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5703", "id": 1197607055, "node_id": "I_kwDOAALxiM5HYgiP", "number": 5703, "title": "Handle broadcasting of parameters in Censored distributions", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-04-08T17:53:15Z", "updated_at": "2022-04-19T19:33:24Z", "closed_at": "2022-04-19T19:33:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When size is not specified, the base distribution is not resized and can broadcast with `lower` / `upper`, with repeated draws.\r\n\r\n```python\r\nimport aesara.tensor as at\r\nimport pymc as pm\r\nrng = at.random.default_rng(123)\r\nx = pm.Censored.dist(pm.Normal.dist(0), lower=[-1, -1, -1], upper=[1, 1, 1], rngs=(rng,))\r\nx.eval()  # array([-0.98912135, -0.98912135, -0.98912135])\r\n```\r\n\r\nWe need to do something like in:\r\nhttps://github.com/pymc-devs/pymc/blob/4702bd413376e6bd01c34b10228619e906875a9d/pymc/distributions/timeseries.py#L185-L187\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5703/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5696", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5696/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5696/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5696/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5696", "id": 1195965671, "node_id": "PR_kwDOAALxiM41zb0c", "number": 5696, "title": "Eval symbolic shapes before warning condition", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-04-07T12:19:05Z", "updated_at": "2022-04-12T21:24:06Z", "closed_at": "2022-04-12T21:23:59Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5696", "html_url": "https://github.com/pymc-devs/pymc/pull/5696", "diff_url": "https://github.com/pymc-devs/pymc/pull/5696.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5696.patch", "merged_at": "2022-04-12T21:23:59Z"}, "body": "This warning annoyed me for weeks..\r\n\r\n+ [x] No breaking changes\r\n+ [x] A symbolic shape is evaluated before comparing it in the condition for a warning\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5696/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5695", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5695/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5695/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5695/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5695", "id": 1195934757, "node_id": "I_kwDOAALxiM5HSIQl", "number": 5695, "title": "New variables not sampled in posterior predictive when using InferenceData", "user": {"login": "lucianopaz", "id": 5230109, "node_id": "MDQ6VXNlcjUyMzAxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5230109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucianopaz", "html_url": "https://github.com/lucianopaz", "followers_url": "https://api.github.com/users/lucianopaz/followers", "following_url": "https://api.github.com/users/lucianopaz/following{/other_user}", "gists_url": "https://api.github.com/users/lucianopaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucianopaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucianopaz/subscriptions", "organizations_url": "https://api.github.com/users/lucianopaz/orgs", "repos_url": "https://api.github.com/users/lucianopaz/repos", "events_url": "https://api.github.com/users/lucianopaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lucianopaz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "lucianopaz", "id": 5230109, "node_id": "MDQ6VXNlcjUyMzAxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5230109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucianopaz", "html_url": "https://github.com/lucianopaz", "followers_url": "https://api.github.com/users/lucianopaz/followers", "following_url": "https://api.github.com/users/lucianopaz/following{/other_user}", "gists_url": "https://api.github.com/users/lucianopaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucianopaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucianopaz/subscriptions", "organizations_url": "https://api.github.com/users/lucianopaz/orgs", "repos_url": "https://api.github.com/users/lucianopaz/repos", "events_url": "https://api.github.com/users/lucianopaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lucianopaz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lucianopaz", "id": 5230109, "node_id": "MDQ6VXNlcjUyMzAxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5230109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucianopaz", "html_url": "https://github.com/lucianopaz", "followers_url": "https://api.github.com/users/lucianopaz/followers", "following_url": "https://api.github.com/users/lucianopaz/following{/other_user}", "gists_url": "https://api.github.com/users/lucianopaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucianopaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucianopaz/subscriptions", "organizations_url": "https://api.github.com/users/lucianopaz/orgs", "repos_url": "https://api.github.com/users/lucianopaz/repos", "events_url": "https://api.github.com/users/lucianopaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lucianopaz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2022-04-07T11:51:05Z", "updated_at": "2022-04-11T14:58:30Z", "closed_at": "2022-04-11T14:58:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nI'm trying to do some predictions and forecasts that involve GPs, and deterministics. I run inference on an initial model, but then for the predictions I have to add new RVs and deterministics that are conditioned on the new time points. This doesn't seem to be possible at the moment.\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nwith pm.Model() as m:\r\n    a = pm.Normal(\"a\")\r\n    b = pm.Normal(\"b\", a, 0.1, observed=np.random.randn(10)* 0.1 + 3)\r\n    ida = pm.sample()\r\n# You sample on one model, then add deterministics on another and try to draw ppc samples\r\nwith m:\r\n    d = pm.Deterministic(\"d\", m[\"a\"] - 4)\r\n    c = pm.Normal(\"c\", d, size=5)\r\n    ppc = pm.sample_posterior_predictive(ida, var_names=\"c\")\r\n```\r\n\r\n**Please provide the full traceback.**\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n/tmp/ipykernel_14672/2975257511.py in <module>\r\n      2     d = pm.Deterministic(\"d\", m[\"a\"] - 4)\r\n      3     c = pm.Normal(\"c\", d, size=5)\r\n----> 4     ppc = pm.sample_posterior_predictive(ida, var_names=\"c\")\r\n      5 ppc\r\n\r\n~/repos/pymc3/pymc/sampling.py in sample_posterior_predictive(trace, samples, model, var_names, size, keep_size, random_seed, progressbar, mode, return_inferencedata, extend_inferencedata, predictions, idata_kwargs)\r\n   1769                 param = _trace[idx % len_trace]\r\n   1770 \r\n-> 1771             values = sampler_fn(*(param[n] for n in input_names))\r\n   1772 \r\n   1773             for k, v in zip(vars_, values):\r\n\r\n~/repos/pymc3/pymc/sampling.py in <genexpr>(.0)\r\n   1769                 param = _trace[idx % len_trace]\r\n   1770 \r\n-> 1771             values = sampler_fn(*(param[n] for n in input_names))\r\n   1772 \r\n   1773             for k, v in zip(vars_, values):\r\n\r\nKeyError: 'd'\r\n```\r\n\r\n</details>\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: 4.0.0b6\r\n* Aesara/Theano Version: 2.5.1\r\n* Python Version:\r\n* Operating system:\r\n* How did you install PyMC/PyMC3: (conda/pip)\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5695/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5668", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5668/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5668/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5668/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5668", "id": 1185329178, "node_id": "I_kwDOAALxiM5GprAa", "number": 5668, "title": "Strange samples from multilevel model with bounded distributions", "user": {"login": "finncatling", "id": 11691520, "node_id": "MDQ6VXNlcjExNjkxNTIw", "avatar_url": "https://avatars.githubusercontent.com/u/11691520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/finncatling", "html_url": "https://github.com/finncatling", "followers_url": "https://api.github.com/users/finncatling/followers", "following_url": "https://api.github.com/users/finncatling/following{/other_user}", "gists_url": "https://api.github.com/users/finncatling/gists{/gist_id}", "starred_url": "https://api.github.com/users/finncatling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/finncatling/subscriptions", "organizations_url": "https://api.github.com/users/finncatling/orgs", "repos_url": "https://api.github.com/users/finncatling/repos", "events_url": "https://api.github.com/users/finncatling/events{/privacy}", "received_events_url": "https://api.github.com/users/finncatling/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1715881852, "node_id": "MDU6TGFiZWwxNzE1ODgxODUy", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/wontfix", "name": "wontfix", "color": "efefff", "default": true, "description": ""}, {"id": 2809192918, "node_id": "MDU6TGFiZWwyODA5MTkyOTE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v3", "name": "v3", "color": "F92E0C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-03-29T19:37:50Z", "updated_at": "2022-03-31T19:42:16Z", "closed_at": "2022-03-31T19:42:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting strange samples from this simple multilevel model with bounded priors:\r\n\r\n```python\r\nimport pymc3 as pm\r\n\r\nwith pm.Model(coords={'plate_dim': [0] * 5}):\r\n    BoundedNormal = pm.Bound(pm.Normal, lower=0.0)\r\n    parent = BoundedNormal(\"parent\", mu=1.0, sigma=0.4)\r\n    child = BoundedNormal(\"child\", mu=parent, sigma=0.05, dims='plate_dim')\r\n\r\n    prior_samples = pm.sample_prior_predictive(10000, random_seed=1)\r\n```\r\n\r\nInspecting the bivariate plots for the `child` prior samples:\r\n\r\n```python\r\nimport pandas as pd\r\nimport matplotlib.pyplot as plt\r\nimport seaborn as sns\r\n\r\ng = sns.PairGrid(\r\n    pd.DataFrame(prior_samples['child']),\r\n    height=1.0,\r\n    diag_sharey=False,\r\n    corner=True\r\n)\r\ng = g.map_lower(plt.scatter, alpha=0.03, s=1)\r\ng = g.map_diag(plt.hist, bins=20)\r\nplt.show()\r\n```\r\n\r\n![Figure_1](https://user-images.githubusercontent.com/11691520/160692146-11a63fca-b338-4a7c-82d0-365309249b44.png)\r\n\r\nWe see two distributions superimposed in each subplot:\r\n\r\n1. The correlated samples you would expect\r\n2. Some uncorrelated Gaussian samples. I assume that these are generated when a sample from `parent` is outside the bound (lower than 0). I'm not sure if this is expected behaviour but it is alluded to in #4800 \r\n\r\nThe puzzling thing is that there are many more of the uncorrelated samples in some `child` variables (e.g. see towards bottom left of plot). I doubt this is expected?\r\n\r\nNB. I'm bounding Gaussians here just for illustration purposes. I have seen `pm.TruncatedNormal` and this issue doesn't occur when it's used.\r\n\r\nThanks for your work on this great library!\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: 3.11.4\r\n* Theano Version: 1.1.2\r\n* Python Version: 3.9.10\r\n* Operating system: Ubuntu 20.04\r\n* How did you install PyMC/PyMC3: conda\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5668/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5668/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5659", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5659/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5659/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5659/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5659", "id": 1183156211, "node_id": "I_kwDOAALxiM5GhYfz", "number": 5659, "title": "`pm.distributions.transforms.ordered` fails on >1 dimension", "user": {"login": "drbenvincent", "id": 6765047, "node_id": "MDQ6VXNlcjY3NjUwNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/6765047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drbenvincent", "html_url": "https://github.com/drbenvincent", "followers_url": "https://api.github.com/users/drbenvincent/followers", "following_url": "https://api.github.com/users/drbenvincent/following{/other_user}", "gists_url": "https://api.github.com/users/drbenvincent/gists{/gist_id}", "starred_url": "https://api.github.com/users/drbenvincent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drbenvincent/subscriptions", "organizations_url": "https://api.github.com/users/drbenvincent/orgs", "repos_url": "https://api.github.com/users/drbenvincent/repos", "events_url": "https://api.github.com/users/drbenvincent/events{/privacy}", "received_events_url": "https://api.github.com/users/drbenvincent/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-03-28T09:29:41Z", "updated_at": "2022-11-22T13:31:35Z", "closed_at": "2022-11-22T13:31:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Applying the `pm.distributions.transforms.ordered` fails when applied to more than one dimension\r\n\r\n## Minimum working example\r\n```python\r\nimport pymc as pm\r\nimport numpy as np\r\n\r\nCOORDS = {'question': np.arange(10), \r\n          'thresholds': np.arange(4)}\r\n\r\nwith pm.Model(coords=COORDS) as model:\r\n    kappa = pm.Normal('kappa', \r\n                      mu=[-3, -1,  1,  2], \r\n                      sigma=1, \r\n                      dims=['question', 'thresholds'],\r\n                      transform=pm.distributions.transforms.ordered)\r\n\r\nmodel.point_logps()\r\n```\r\n\r\n## Traceback\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n~/opt/miniconda3/envs/pymc-dev-py39/lib/python3.9/site-packages/aesara/compile/function/types.py in __call__(self, *args, **kwargs)\r\n    963             outputs = (\r\n--> 964                 self.fn()\r\n    965                 if output_subset is None\r\n\r\nValueError: Input dimension mismatch. (input[2].shape[1] = 4, input[4].shape[1] = 10)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n/var/folders/3d/p29f9frn6d3c3gnfq2bxbd1c0000gn/T/ipykernel_31128/1701730019.py in <module>\r\n----> 1 model.point_logps()\r\n\r\n~/opt/miniconda3/envs/pymc-dev-py39/lib/python3.9/site-packages/pymc/model.py in point_logps(self, point, round_vals)\r\n   1726             for factor, factor_logp in zip(\r\n   1727                 factors,\r\n-> 1728                 self.compile_fn(factor_logps_fn)(point),\r\n   1729             )\r\n   1730         }\r\n\r\n~/opt/miniconda3/envs/pymc-dev-py39/lib/python3.9/site-packages/pymc/model.py in __call__(self, state)\r\n   1825 \r\n   1826     def __call__(self, state):\r\n-> 1827         return self.f(**state)\r\n   1828 \r\n   1829 \r\n\r\n~/opt/miniconda3/envs/pymc-dev-py39/lib/python3.9/site-packages/aesara/compile/function/types.py in __call__(self, *args, **kwargs)\r\n    975                 if hasattr(self.fn, \"thunks\"):\r\n    976                     thunk = self.fn.thunks[self.fn.position_of_error]\r\n--> 977                 raise_with_op(\r\n    978                     self.maker.fgraph,\r\n    979                     node=self.fn.nodes[self.fn.position_of_error],\r\n\r\n~/opt/miniconda3/envs/pymc-dev-py39/lib/python3.9/site-packages/aesara/link/utils.py in raise_with_op(fgraph, node, thunk, exc_info, storage_map)\r\n    536         # Some exception need extra parameter in inputs. So forget the\r\n    537         # extra long error message in that case.\r\n--> 538     raise exc_value.with_traceback(exc_trace)\r\n    539 \r\n    540 \r\n\r\n~/opt/miniconda3/envs/pymc-dev-py39/lib/python3.9/site-packages/aesara/compile/function/types.py in __call__(self, *args, **kwargs)\r\n    962         try:\r\n    963             outputs = (\r\n--> 964                 self.fn()\r\n    965                 if output_subset is None\r\n    966                 else self.fn(output_subset=output_subset)\r\n\r\nValueError: Input dimension mismatch. (input[2].shape[1] = 4, input[4].shape[1] = 10)\r\nApply node that caused the error: Elemwise{Composite{(i0 + (i1 * sqr((i2 - i3))) + i4)}}[(0, 2)](TensorConstant{(1, 1) of ..5332046727}, TensorConstant{(1, 1) of -0.5}, kappa_ordered___ordered, TensorConstant{[[-3 -1  1  2]]}, InplaceDimShuffle{x,0}.0)\r\nToposort index: 11\r\nInputs types: [TensorType(float64, (1, 1)), TensorType(float64, (1, 1)), TensorType(float64, (None, None)), TensorType(int64, (1, 4)), TensorType(float64, (1, None))]\r\nInputs shapes: [(1, 1), (1, 1), (10, 4), (1, 4), (1, 10)]\r\nInputs strides: [(8, 8), (8, 8), (32, 8), (32, 8), (80, 8)]\r\nInputs values: [array([[-0.91893853]]), array([[-0.5]]), 'not shown', array([[-3, -1,  1,  2]]), 'not shown']\r\nOutputs clients: [[Sum{acc_dtype=float64}(kappa_ordered___logprob)]]\r\n\r\nHINT: Re-running with most Aesara optimizations disabled could provide a back-trace showing when this node was created. This can be done by setting the Aesara flag 'optimizer=fast_compile'. If that does not work, Aesara optimizations can be disabled with 'optimizer=None'.\r\nHINT: Use the Aesara flag `exception_verbosity=high` for a debug print-out and storage map footprint of this Apply node.\r\n```\r\n\r\n## Versions and main components\r\n\r\nPython implementation: CPython\r\nPython version       : 3.9.9\r\nIPython version      : 7.31.0\r\n\r\npymc  : 4.0.0b5\r\naesara: 2.5.1\r\n\r\nCompiler    : Clang 11.1.0 \r\nOS          : Darwin\r\nRelease     : 21.4.0\r\nMachine     : x86_64\r\nProcessor   : i386\r\nCPU cores   : 8\r\nArchitecture: 64bit", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5659/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5657", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5657/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5657/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5657/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5657", "id": 1183146595, "node_id": "I_kwDOAALxiM5GhWJj", "number": 5657, "title": "az.to_netcdf errors in variables containing / in names", "user": {"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26", "html_url": "https://github.com/pymc-devs/pymc/milestone/26", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26/labels", "id": 7210288, "node_id": "MI_kwDOAALxiM4AbgUw", "number": 26, "title": "v4.0.0", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 50, "state": "closed", "created_at": "2021-10-01T14:41:57Z", "updated_at": "2022-11-05T04:50:00Z", "due_on": null, "closed_at": "2022-06-12T18:19:16Z"}, "comments": 2, "created_at": "2022-03-28T09:23:48Z", "updated_at": "2022-03-30T09:44:37Z", "closed_at": "2022-03-30T09:44:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nin #5607 variable scopes became separated by `/` which appeared to be an [incompatibility](https://www.unidata.ucar.edu/blogs/developer/en/entry/netcdf_identifiers_and_character_escape) with HDF5 format. No longer these models save with `az.to_netcdf`\r\n\r\nWe need a different semantic separator for scopes that is compliant with hdf5 saving\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: '4.0.0b5'\r\n* Aesara/Theano Version: not ralated\r\n* Python Version: not ralated\r\n* Operating system: Linux\r\n* How did you install PyMC/PyMC3: (conda/pip) conda\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5657/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5653", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5653/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5653/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5653/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5653", "id": 1182489538, "node_id": "I_kwDOAALxiM5Ge1vC", "number": 5653, "title": "Prior predictive incorrect randomness behaviour", "user": {"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/32", "html_url": "https://github.com/pymc-devs/pymc/milestone/32", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/32/labels", "id": 7790737, "node_id": "MI_kwDOAALxiM4AduCR", "number": 32, "title": "v4.0.0b6", "description": "", "creator": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2022-03-22T08:54:37Z", "updated_at": "2022-03-30T16:00:58Z", "due_on": null, "closed_at": "2022-03-30T16:00:58Z"}, "comments": 9, "created_at": "2022-03-27T11:11:30Z", "updated_at": "2022-03-29T18:35:56Z", "closed_at": "2022-03-29T18:35:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Random is weird\r\n\r\nSampling from prior in pymc4 I get weird results. Samples seem to be very correlated\r\n\r\n```python\r\nwith pm.Model(coords=dict(time=range(150), i=range(5)), rng_seeder=42):\r\n    rotated = pm.Normal(\"latent\", dims=(\"time\", \"i\"))\r\n    t = pm.sample_prior_predictive(30)\r\nplt.figure(figsize=(16, 4))\r\n[plt.plot(t.prior.latent.sel(chain=0, i=1, draw=i).values, color=\"b\", alpha=0.5) for i in [2, 7]];\r\n```\r\n![image](https://user-images.githubusercontent.com/11705326/160278728-04c7b462-1189-4e39-8adf-1c0943a45226.png)\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: '4.0.0b5'\r\n* Aesara/Theano Version: '2.5.1'\r\n* Python Version: 3.10\r\n* Operating system: Linux\r\n* How did you install PyMC/PyMC3: (conda/pip) conda\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5653/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5632", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5632/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5632/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5632/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5632", "id": 1174644418, "node_id": "I_kwDOAALxiM5GA6bC", "number": 5632, "title": "Simulator logprob not implemented for float32", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-03-20T18:40:47Z", "updated_at": "2022-03-21T06:35:00Z", "closed_at": "2022-03-21T06:35:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/pymc-devs/pymc/runs/5618251798?check_suite_focus=true#step:7:178\r\n\r\ncc @ricardoV94  it's working for the scalar case, so I assume it's not intentionally not implemented.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5632/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5620", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5620/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5620/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5620/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5620", "id": 1174226304, "node_id": "I_kwDOAALxiM5F_UWA", "number": 5620, "title": "Sampler argument target_accept not working in 4.0.0b4 ", "user": {"login": "larryshamalama", "id": 24764859, "node_id": "MDQ6VXNlcjI0NzY0ODU5", "avatar_url": "https://avatars.githubusercontent.com/u/24764859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larryshamalama", "html_url": "https://github.com/larryshamalama", "followers_url": "https://api.github.com/users/larryshamalama/followers", "following_url": "https://api.github.com/users/larryshamalama/following{/other_user}", "gists_url": "https://api.github.com/users/larryshamalama/gists{/gist_id}", "starred_url": "https://api.github.com/users/larryshamalama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larryshamalama/subscriptions", "organizations_url": "https://api.github.com/users/larryshamalama/orgs", "repos_url": "https://api.github.com/users/larryshamalama/repos", "events_url": "https://api.github.com/users/larryshamalama/events{/privacy}", "received_events_url": "https://api.github.com/users/larryshamalama/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "aloctavodia", "id": 1338958, "node_id": "MDQ6VXNlcjEzMzg5NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1338958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aloctavodia", "html_url": "https://github.com/aloctavodia", "followers_url": "https://api.github.com/users/aloctavodia/followers", "following_url": "https://api.github.com/users/aloctavodia/following{/other_user}", "gists_url": "https://api.github.com/users/aloctavodia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aloctavodia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aloctavodia/subscriptions", "organizations_url": "https://api.github.com/users/aloctavodia/orgs", "repos_url": "https://api.github.com/users/aloctavodia/repos", "events_url": "https://api.github.com/users/aloctavodia/events{/privacy}", "received_events_url": "https://api.github.com/users/aloctavodia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aloctavodia", "id": 1338958, "node_id": "MDQ6VXNlcjEzMzg5NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1338958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aloctavodia", "html_url": "https://github.com/aloctavodia", "followers_url": "https://api.github.com/users/aloctavodia/followers", "following_url": "https://api.github.com/users/aloctavodia/following{/other_user}", "gists_url": "https://api.github.com/users/aloctavodia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aloctavodia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aloctavodia/subscriptions", "organizations_url": "https://api.github.com/users/aloctavodia/orgs", "repos_url": "https://api.github.com/users/aloctavodia/repos", "events_url": "https://api.github.com/users/aloctavodia/events{/privacy}", "received_events_url": "https://api.github.com/users/aloctavodia/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/31", "html_url": "https://github.com/pymc-devs/pymc/milestone/31", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/31/labels", "id": 7777509, "node_id": "MI_kwDOAALxiM4Adqzl", "number": 31, "title": "v4.0.0b5", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2022-03-17T09:43:42Z", "updated_at": "2022-03-30T08:00:39Z", "due_on": null, "closed_at": "2022-03-30T08:00:39Z"}, "comments": 3, "created_at": "2022-03-19T10:00:17Z", "updated_at": "2022-03-21T19:24:31Z", "closed_at": "2022-03-21T19:24:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```python\r\nwith pm.Model() as model:\r\n    norm = pm.Normal(\"norm\")\r\n    pm.sample(target_accept=0.9, tune=2000)\r\n```\r\n\r\nyields\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nInput In [2], in <module>\r\n      1 with pm.Model() as model:\r\n      2     norm = pm.Normal(\"norm\")\r\n----> 3     pm.sample(target_accept=0.9, tune=2000)\r\n\r\nFile ~/opt/anaconda3/envs/pymc-dev-py39/lib/python3.9/site-packages/pymc/sampling.py:470, in sample(draws, step, init, n_init, initvals, trace, chain_idx, chains, cores, tune, progressbar, model, random_seed, discard_tuned_samples, compute_convergence_checks, callback, jitter_max_retries, return_inferencedata, idata_kwargs, mp_ctx, **kwargs)\r\n    467 draws += tune\r\n    469 initial_points = None\r\n--> 470 step = assign_step_methods(model, step, methods=pm.STEP_METHODS, step_kwargs=kwargs)\r\n    472 if isinstance(step, list):\r\n    473     step = CompoundStep(step)\r\n\r\nFile ~/opt/anaconda3/envs/pymc-dev-py39/lib/python3.9/site-packages/pymc/sampling.py:219, in assign_step_methods(model, step, methods, step_kwargs)\r\n    211         selected = max(\r\n    212             methods,\r\n    213             key=lambda method, var=rv_var, has_gradient=has_gradient: method._competence(\r\n    214                 var, has_gradient\r\n    215             ),\r\n    216         )\r\n    217         selected_steps[selected].append(var)\r\n--> 219 return instantiate_steppers(model, steps, selected_steps, step_kwargs)\r\n\r\nFile ~/opt/anaconda3/envs/pymc-dev-py39/lib/python3.9/site-packages/pymc/sampling.py:142, in instantiate_steppers(model, steps, selected_steps, step_kwargs)\r\n    140 unused_args = set(step_kwargs).difference(used_keys)\r\n    141 if unused_args:\r\n--> 142     raise ValueError(\"Unused step method arguments: %s\" % unused_args)\r\n    144 if len(steps) == 1:\r\n    145     return steps[0]\r\n\r\nValueError: Unused step method arguments: {'target_accept'}\r\n```\r\n\r\nwith PyMC version 4.0.0b4, aesara version 2.5.1 and aeppl version 0.0.27. However, there is no error when using PyMC version 4.0.0b3 (and aesara version 2.4.0, aeppl version 0.0.26). See notebooks [here (b3)](https://github.com/larryshamalama/pymc3-playground/blob/master/notebooks/shortcomings/target-accept-vb3.ipynb) and [here (b4)](https://github.com/larryshamalama/pymc3-playground/blob/master/notebooks/shortcomings/target-accept-vb4.ipynb)\r\n\r\nFirst raised by @OriolAbril ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5620/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5616", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5616/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5616/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5616/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5616", "id": 1173783287, "node_id": "I_kwDOAALxiM5F9oL3", "number": 5616, "title": "Latex representation broken for models with SymbolicDistributions", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2107010938, "node_id": "MDU6TGFiZWwyMTA3MDEwOTM4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/help%20wanted", "name": "help wanted", "color": "b58f13", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "larryshamalama", "id": 24764859, "node_id": "MDQ6VXNlcjI0NzY0ODU5", "avatar_url": "https://avatars.githubusercontent.com/u/24764859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larryshamalama", "html_url": "https://github.com/larryshamalama", "followers_url": "https://api.github.com/users/larryshamalama/followers", "following_url": "https://api.github.com/users/larryshamalama/following{/other_user}", "gists_url": "https://api.github.com/users/larryshamalama/gists{/gist_id}", "starred_url": "https://api.github.com/users/larryshamalama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larryshamalama/subscriptions", "organizations_url": "https://api.github.com/users/larryshamalama/orgs", "repos_url": "https://api.github.com/users/larryshamalama/repos", "events_url": "https://api.github.com/users/larryshamalama/events{/privacy}", "received_events_url": "https://api.github.com/users/larryshamalama/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "larryshamalama", "id": 24764859, "node_id": "MDQ6VXNlcjI0NzY0ODU5", "avatar_url": "https://avatars.githubusercontent.com/u/24764859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larryshamalama", "html_url": "https://github.com/larryshamalama", "followers_url": "https://api.github.com/users/larryshamalama/followers", "following_url": "https://api.github.com/users/larryshamalama/following{/other_user}", "gists_url": "https://api.github.com/users/larryshamalama/gists{/gist_id}", "starred_url": "https://api.github.com/users/larryshamalama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larryshamalama/subscriptions", "organizations_url": "https://api.github.com/users/larryshamalama/orgs", "repos_url": "https://api.github.com/users/larryshamalama/repos", "events_url": "https://api.github.com/users/larryshamalama/events{/privacy}", "received_events_url": "https://api.github.com/users/larryshamalama/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26", "html_url": "https://github.com/pymc-devs/pymc/milestone/26", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26/labels", "id": 7210288, "node_id": "MI_kwDOAALxiM4AbgUw", "number": 26, "title": "v4.0.0", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 50, "state": "closed", "created_at": "2021-10-01T14:41:57Z", "updated_at": "2022-11-05T04:50:00Z", "due_on": null, "closed_at": "2022-06-12T18:19:16Z"}, "comments": 8, "created_at": "2022-03-18T16:28:43Z", "updated_at": "2022-06-03T15:13:01Z", "closed_at": "2022-06-03T15:13:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```python\r\nwith pm.Model() as model:\r\n    x = pm.ZeroInflatedPoisson(\"x\", 0.5, 5)\r\nprint(model)\r\n```\r\n\r\n```\r\n  File \"/home/ricardo/miniconda3/envs/roche_preclinical_hd/lib/python3.9/site-packages/IPython/core/formatters.py\", line 224, in catch_format_error\r\n    r = method(self, *args, **kwargs)\r\n  File \"/home/ricardo/miniconda3/envs/roche_preclinical_hd/lib/python3.9/site-packages/IPython/core/formatters.py\", line 702, in __call__\r\n    printer.pretty(obj)\r\n  File \"/home/ricardo/miniconda3/envs/roche_preclinical_hd/lib/python3.9/site-packages/IPython/lib/pretty.py\", line 377, in pretty\r\n    return self.type_pprinters[cls](obj, self, cycle)\r\n  File \"/home/ricardo/miniconda3/envs/roche_preclinical_hd/lib/python3.9/site-packages/pymc/printing.py\", line 185, in _default_repr_pretty\r\n    output = obj.str_repr()\r\n  File \"/home/ricardo/miniconda3/envs/roche_preclinical_hd/lib/python3.9/site-packages/pymc/printing.py\", line 83, in str_for_model\r\n    names = [s[: s.index(\"~\") - 1] for s in rv_reprs]\r\n  File \"/home/ricardo/miniconda3/envs/roche_preclinical_hd/lib/python3.9/site-packages/pymc/printing.py\", line 83, in <listcomp>\r\n    names = [s[: s.index(\"~\") - 1] for s in rv_reprs]\r\nValueError: substring not found\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5616/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5613", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5613/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5613/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5613/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5613", "id": 1173512204, "node_id": "I_kwDOAALxiM5F8mAM", "number": 5613, "title": "Wrong broadcasting of size 1 vector distributions defined with dims", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}, {"id": 2107010938, "node_id": "MDU6TGFiZWwyMTA3MDEwOTM4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/help%20wanted", "name": "help wanted", "color": "b58f13", "default": true, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26", "html_url": "https://github.com/pymc-devs/pymc/milestone/26", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26/labels", "id": 7210288, "node_id": "MI_kwDOAALxiM4AbgUw", "number": 26, "title": "v4.0.0", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 50, "state": "closed", "created_at": "2021-10-01T14:41:57Z", "updated_at": "2022-11-05T04:50:00Z", "due_on": null, "closed_at": "2022-06-12T18:19:16Z"}, "comments": 13, "created_at": "2022-03-18T12:02:53Z", "updated_at": "2022-05-06T14:51:38Z", "closed_at": "2022-05-06T14:51:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "> And this particular situation of not broadcasting two 1d arrays of lenghts 1 and 10 feels strange, how does broadcasting differ between Aesara and numpy?\r\n\r\nSomehow the dims is turning the output variable into something that is not (known) to be broadcastable:\r\n\r\n```python\r\nimport pymc as pm\r\n\r\nwith pm.Model(coords={\"slopes\":[\"x_1\"]}) as m:\r\n\r\n    b_dim = pm.Normal(\"b_dim\", sigma=1000, dims=(\"slopes\"))\r\n    b_size = pm.Normal(\"b_size\", sigma=1000, size=1)\r\n\r\nprint(b_dim.broadcastable, b_size.broadcastable)\r\n# (False,) (True,)\r\n```\r\n\r\n_Originally posted by @ricardoV94 in https://github.com/pymc-devs/pymc/issues/5561#issuecomment-1071047299_", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5613/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5604", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5604/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5604/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5604/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5604", "id": 1172129539, "node_id": "I_kwDOAALxiM5F3UcD", "number": 5604, "title": "Memory leaks with PyMC `4.0.0b3`", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/30", "html_url": "https://github.com/pymc-devs/pymc/milestone/30", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/30/labels", "id": 7744044, "node_id": "MI_kwDOAALxiM4Adios", "number": 30, "title": "v4.0.0b4", "description": "", "creator": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2022-03-07T17:50:52Z", "updated_at": "2022-03-19T21:19:08Z", "due_on": null, "closed_at": "2022-03-19T21:19:08Z"}, "comments": 4, "created_at": "2022-03-17T09:26:14Z", "updated_at": "2022-03-17T11:33:54Z", "closed_at": "2022-03-17T11:33:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nIn `4.0.0b2` we pinned `aesara==2.3.2`.\r\n\r\nIn `4.0.0b3` we pinned `aesara==2.4.0`.\r\n\r\nUnfortunately, [`aesara==2.3.3` introduced a memory leak](https://github.com/aesara-devs/aesara/issues/852#issuecomment-1064602927).\r\n\r\nThe leak was fixed in [`aesara==2.5.1`](https://github.com/aesara-devs/aesara/releases/tag/rel-2.5.1).\r\n\r\nConsequently we need to update to Aesara 2.5.1 as soon as possible.\r\nSince there was a minor version bump 2.4\u21922.5, we'll probably run into incompatibilities.\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: `4.0.0b3`, `main`\r\n* Aesara/Theano Version: `2.4.0...2.5.0`\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5604/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5599", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5599/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5599/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5599/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5599", "id": 1169666892, "node_id": "I_kwDOAALxiM5Ft7NM", "number": 5599, "title": "Nested model variables don't include all parent names as prefix", "user": {"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-15T13:20:43Z", "updated_at": "2022-03-18T12:44:52Z", "closed_at": "2022-03-18T12:44:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nWhen you have a model factory that can potentially create duplicated variables, you can use nested model context (its main purpose). But it appears to be working correctly only for one level of nesting\r\n\r\n```python\r\nimport pymc as pm\r\nimport numpy as np\r\n\r\ndef create_vars():\r\n    pm.Data(\"constant\", np.random.randn(10), mutable=False)\r\n    pm.Data(\"mutable\", np.random.randn(10), mutable=True)\r\n    pm.Normal(\"normal\", 0, 1)\r\n\r\nwith pm.Model() as model:\r\n    create_vars()\r\n\r\nmodel.named_vars.keys()\r\n# dict_keys(['constant', 'mutable', 'normal'])\r\n\r\nwith pm.Model() as model:\r\n    create_vars()\r\n    with pm.Model(\"sub\"):\r\n        create_vars()\r\n\r\nmodel.named_vars.keys()\r\n# dict_keys(['constant', 'mutable', 'normal', 'sub_constant', 'sub_mutable', 'sub_normal'])\r\n\r\nwith pm.Model() as model:\r\n    create_vars()\r\n    with pm.Model(\"sub\"):\r\n        create_vars()\r\n        with pm.Model(\"sub\"):\r\n            create_vars()\r\n# errors\r\n```\r\n\r\n**Please provide the full traceback.**\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n/tmp/ipykernel_258649/663987284.py in <module>\r\n      4         create_vars()\r\n      5         with pm.Model(\"sub\"):\r\n----> 6             create_vars()\r\n      7 \r\n      8 model.named_vars.keys()\r\n\r\n/tmp/ipykernel_258649/2696593453.py in create_vars()\r\n      1 def create_vars():\r\n----> 2     pm.Data(\"constant\", np.random.randn(10), mutable=False)\r\n      3     pm.Data(\"mutable\", np.random.randn(10), mutable=True)\r\n      4     pm.Normal(\"normal\", 0, 1)\r\n\r\n~/dev/pymc3/pymc/data.py in Data(name, value, dims, export_index_as_coords, mutable, **kwargs)\r\n    676                 model.add_coord(dname, values=None, length=x.shape[d])\r\n    677 \r\n--> 678     model.add_random_variable(x, dims=dims)\r\n    679 \r\n    680     return x\r\n\r\n~/dev/pymc3/pymc/model.py in add_random_variable(self, var, dims)\r\n   1438         \"\"\"Add a random variable to the named variables of the model.\"\"\"\r\n   1439         if self.named_vars.tree_contains(var.name):\r\n-> 1440             raise ValueError(f\"Variable name {var.name} already exists.\")\r\n   1441 \r\n   1442         if dims is not None:\r\n\r\nValueError: Variable name sub_constant already exists.\r\n\r\n```\r\n\r\n</details>\r\n\r\n**Expected behaviour**\r\n```\r\n# dict_keys(['constant', 'mutable', 'normal', 'sub_constant', 'sub_mutable', 'sub_normal', 'sub_sub_constant', 'sub_sub_mutable', 'sub_sub_normal'])\r\n```\r\n\r\n**Additional information**\r\nI also think naming convention should better be like \r\n```\r\n# dict_keys(['constant', 'mutable', 'normal', 'sub/constant', 'sub/mutable', 'sub/normal', 'sub/sub/constant', 'sub/sub/mutable', 'sub/sub/normal'])\r\n```\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: [08b6b01](https://github.com/pymc-devs/pymc/commit/08b6b01e825de321d75177ec031e5a9118f3dd57)\r\n* Aesara/Theano Version: as in requirements\r\n* Python Version: not important\r\n* Operating system: Linux\r\n* How did you install PyMC/PyMC3: development\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5599/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5598", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5598/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5598/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5598/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5598", "id": 1168905535, "node_id": "I_kwDOAALxiM5FrBU_", "number": 5598, "title": "pip install pymc-nightly won't get any version after 4.0.0b2.dev20200304", "user": {"login": "theorashid", "id": 30835680, "node_id": "MDQ6VXNlcjMwODM1Njgw", "avatar_url": "https://avatars.githubusercontent.com/u/30835680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theorashid", "html_url": "https://github.com/theorashid", "followers_url": "https://api.github.com/users/theorashid/followers", "following_url": "https://api.github.com/users/theorashid/following{/other_user}", "gists_url": "https://api.github.com/users/theorashid/gists{/gist_id}", "starred_url": "https://api.github.com/users/theorashid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theorashid/subscriptions", "organizations_url": "https://api.github.com/users/theorashid/orgs", "repos_url": "https://api.github.com/users/theorashid/repos", "events_url": "https://api.github.com/users/theorashid/events{/privacy}", "received_events_url": "https://api.github.com/users/theorashid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 34672788, "node_id": "MDU6TGFiZWwzNDY3Mjc4OA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/release", "name": "release", "color": "e102d8", "default": false, "description": null}, {"id": 3190640810, "node_id": "MDU6TGFiZWwzMTkwNjQwODEw", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/installation", "name": "installation", "color": "000000", "default": false, "description": "issues about dependencies or installation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-03-14T21:07:31Z", "updated_at": "2022-04-15T11:41:46Z", "closed_at": "2022-04-15T11:41:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a separate issue to #5570 because it has nothing to do with the test. I tried to `pip install pymc-nightly` today. I got \r\n```\r\nCollecting pymc-nightly\r\n  Downloading pymc-nightly-4.0.0b3.dev20220314.tar.gz (516 kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 516 kB 12.6 MB/s \r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... done\r\n    Preparing wheel metadata ... done\r\n  WARNING: Generating metadata for package pymc-nightly produced metadata for project name pymc. Fix your #egg=pymc-nightly fragments.\r\nWARNING: Discarding https://files.pythonhosted.org/packages/36/89/c4fb4a7898968e1c502451970593d9f9b52e2ccc2c2c68e58bccad4f0ace/pymc-nightly-4.0.0b3.dev20220314.tar.gz#sha256=d1ad062853fc0865a41cdb29fc75e97cae139f754c8d284488dd4e88ba156334 (from https://pypi.org/simple/pymc-nightly/) (requires-python:>=3.7). Requested pymc from https://files.pythonhosted.org/packages/36/89/c4fb4a7898968e1c502451970593d9f9b52e2ccc2c2c68e58bccad4f0ace/pymc-nightly-4.0.0b3.dev20220314.tar.gz#sha256=d1ad062853fc0865a41cdb29fc75e97cae139f754c8d284488dd4e88ba156334 has inconsistent name: filename has 'pymc-nightly', but metadata has 'pymc'\r\n  Downloading pymc-nightly-4.0.0b3.dev20220313.tar.gz (516 kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 516 kB 50.3 MB/s \r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... done\r\n    Preparing wheel metadata ... done\r\n  WARNING: Generating metadata for package pymc-nightly produced metadata for project name pymc. Fix your #egg=pymc-nightly fragments.\r\nWARNING: Discarding https://files.pythonhosted.org/packages/60/09/18810a3b206239a588f356557358fb7c8cc09cd0ddb3c1a74599b2539862/pymc-nightly-4.0.0b3.dev20220313.tar.gz#sha256=0caa11a8eef57ff0d6fa7ee13f7f36927cbd16e04851c360355ff2ea24d104a5 (from https://pypi.org/simple/pymc-nightly/) (requires-python:>=3.7). Requested pymc from https://files.pythonhosted.org/packages/60/09/18810a3b206239a588f356557358fb7c8cc09cd0ddb3c1a74599b2539862/pymc-nightly-4.0.0b3.dev20220313.tar.gz#sha256=0caa11a8eef57ff0d6fa7ee13f7f36927cbd16e04851c360355ff2ea24d104a5 has inconsistent name: filename has 'pymc-nightly', but metadata has 'pymc'\r\n  Downloading pymc-nightly-4.0.0b3.dev20220312.tar.gz (516 kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 516 kB 55.4 MB/s \r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... done\r\n    Preparing wheel metadata ... done\r\n  WARNING: Generating metadata for package pymc-nightly produced metadata for project name pymc. Fix your #egg=pymc-nightly fragments.\r\nWARNING: Discarding https://files.pythonhosted.org/packages/09/fd/5189a063fb7146b35a2193aca23cceabb8d68a18af8b1f1260a0e301e83f/pymc-nightly-4.0.0b3.dev20220312.tar.gz#sha256=20b5fe055b37291a28812729fc367e2d414c090d3f5b10eecce0f57e1402aa98 (from https://pypi.org/simple/pymc-nightly/) (requires-python:>=3.7). Requested pymc from https://files.pythonhosted.org/packages/09/fd/5189a063fb7146b35a2193aca23cceabb8d68a18af8b1f1260a0e301e83f/pymc-nightly-4.0.0b3.dev20220312.tar.gz#sha256=20b5fe055b37291a28812729fc367e2d414c090d3f5b10eecce0f57e1402aa98 has inconsistent name: filename has 'pymc-nightly', but metadata has 'pymc'\r\n  Downloading pymc-nightly-4.0.0b3.dev20220311.tar.gz (515 kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 515 kB 84.6 MB/s \r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... done\r\n    Preparing wheel metadata ... done\r\n  WARNING: Generating metadata for package pymc-nightly produced metadata for project name pymc. Fix your #egg=pymc-nightly fragments.\r\nWARNING: Discarding https://files.pythonhosted.org/packages/eb/6c/b135c4053f2c416a4d779ef1f663f0acf9fc9f24e36647596114eb836455/pymc-nightly-4.0.0b3.dev20220311.tar.gz#sha256=39fa7946e82604055d0d9b26dca78acdbb419626181fb47703a3bb4ed403441c (from https://pypi.org/simple/pymc-nightly/) (requires-python:>=3.7). Requested pymc from https://files.pythonhosted.org/packages/eb/6c/b135c4053f2c416a4d779ef1f663f0acf9fc9f24e36647596114eb836455/pymc-nightly-4.0.0b3.dev20220311.tar.gz#sha256=39fa7946e82604055d0d9b26dca78acdbb419626181fb47703a3bb4ed403441c has inconsistent name: filename has 'pymc-nightly', but metadata has 'pymc'\r\n  Downloading pymc-nightly-4.0.0b3.dev20220310.tar.gz (525 kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 525 kB 66.8 MB/s \r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... done\r\n    Preparing wheel metadata ... done\r\n  WARNING: Generating metadata for package pymc-nightly produced metadata for project name pymc. Fix your #egg=pymc-nightly fragments.\r\nWARNING: Discarding https://files.pythonhosted.org/packages/62/9f/d9d7955101ec1650fc51e99cc9d28e751b72f75e555cccf4f33f2dd71f80/pymc-nightly-4.0.0b3.dev20220310.tar.gz#sha256=e8d9d3ca9b4f336e749fafa6b879f9d4de7049acd9d4e33af070f468941dac1c (from https://pypi.org/simple/pymc-nightly/) (requires-python:>=3.7). Requested pymc from https://files.pythonhosted.org/packages/62/9f/d9d7955101ec1650fc51e99cc9d28e751b72f75e555cccf4f33f2dd71f80/pymc-nightly-4.0.0b3.dev20220310.tar.gz#sha256=e8d9d3ca9b4f336e749fafa6b879f9d4de7049acd9d4e33af070f468941dac1c has inconsistent name: filename has 'pymc-nightly', but metadata has 'pymc'\r\n  Downloading pymc-nightly-4.0.0b3.dev20220309.tar.gz (526 kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 526 kB 58.5 MB/s \r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... done\r\n    Preparing wheel metadata ... done\r\n  WARNING: Generating metadata for package pymc-nightly produced metadata for project name pymc. Fix your #egg=pymc-nightly fragments.\r\nWARNING: Discarding https://files.pythonhosted.org/packages/ee/7a/5b8e9de1da97f105083b6b7b4ca8b1c4bf19a85035d66b443125eb300f92/pymc-nightly-4.0.0b3.dev20220309.tar.gz#sha256=d5755a19a28c03ae2cc3427d96d48aa482c2a8149879ed3685fdf71ff04365ab (from https://pypi.org/simple/pymc-nightly/) (requires-python:>=3.7). Requested pymc from https://files.pythonhosted.org/packages/ee/7a/5b8e9de1da97f105083b6b7b4ca8b1c4bf19a85035d66b443125eb300f92/pymc-nightly-4.0.0b3.dev20220309.tar.gz#sha256=d5755a19a28c03ae2cc3427d96d48aa482c2a8149879ed3685fdf71ff04365ab has inconsistent name: filename has 'pymc-nightly', but metadata has 'pymc'\r\n  Downloading pymc-nightly-4.0.0b3.dev20220308.tar.gz (526 kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 526 kB 51.7 MB/s \r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... done\r\n    Preparing wheel metadata ... done\r\n  WARNING: Generating metadata for package pymc-nightly produced metadata for project name pymc. Fix your #egg=pymc-nightly fragments.\r\nWARNING: Discarding https://files.pythonhosted.org/packages/97/ab/8e92ff2e4522bf34e0939dfcbfe209cd087a36f2e40667d18c991d7c1726/pymc-nightly-4.0.0b3.dev20220308.tar.gz#sha256=2a46c71c4aad7eef7f56fd9d6854749e125ceb5bbf41c9b7a48a40001876b8fc (from https://pypi.org/simple/pymc-nightly/) (requires-python:>=3.7). Requested pymc from https://files.pythonhosted.org/packages/97/ab/8e92ff2e4522bf34e0939dfcbfe209cd087a36f2e40667d18c991d7c1726/pymc-nightly-4.0.0b3.dev20220308.tar.gz#sha256=2a46c71c4aad7eef7f56fd9d6854749e125ceb5bbf41c9b7a48a40001876b8fc has inconsistent name: filename has 'pymc-nightly', but metadata has 'pymc'\r\n  Downloading pymc_nightly-4.0.0b2.dev20220304-py3-none-any.whl (565 kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 565 kB 69.5 MB/s \r\nRequirement already satisfied: cloudpickle in /usr/local/lib/python3.7/dist-packages (from pymc-nightly) (1.3.0)\r\n```\r\n\r\nand then it happily installs.`4.0.0b2.dev20220304` isn't the [first version](https://pypi.org/project/pymc-nightly/#history), but it was the last 4.0.0b2. Everything after is 4.0.0b3. I'm a bit stumped by why it is happy with earlier releases. Any ideas?", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5598/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5586", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5586/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5586/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5586/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5586", "id": 1167224766, "node_id": "I_kwDOAALxiM5Fkm--", "number": 5586, "title": "observed_data missing from InferenceData when data is cast", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2022-03-12T08:43:27Z", "updated_at": "2022-03-29T11:31:14Z", "closed_at": "2022-03-29T11:31:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "A user on discourse reported that `observed_data` is missing from the InferenceData returned from the jax samplers in `sampling_jax.py`. We should check if that is still the case and fix it.\n\nhttps://discourse.pymc.io/t/pymc-v4-not-returning-observed-data-in-inferencedata-object/8916", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5586/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5568", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5568/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5568/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5568/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5568", "id": 1162734573, "node_id": "I_kwDOAALxiM5FTevt", "number": 5568, "title": "Representation for empty model raises ValueError", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-08T14:37:50Z", "updated_at": "2022-03-11T15:26:23Z", "closed_at": "2022-03-11T15:26:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```python\r\nimport pymc as pm\r\npm.Model().str_repr()\r\n```\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/home/ricardo/miniconda3/envs/roche_preclinical_hd/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 3444, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-5-fa2b838ad5d3>\", line 1, in <module>\r\n    pm.Model().str_repr()\r\n  File \"/home/ricardo/Documents/Projects/pymc/pymc/printing.py\", line 82, in str_for_model\r\n    maxlen = str(max(len(x) for x in names))\r\nValueError: max() arg is an empty sequence\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5568/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5545", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5545/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5545/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5545/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5545", "id": 1159698285, "node_id": "I_kwDOAALxiM5FH5dt", "number": 5545, "title": "_get_scaling raises TypeError  due to misformatted message", "user": {"login": "Icyshaman", "id": 48732898, "node_id": "MDQ6VXNlcjQ4NzMyODk4", "avatar_url": "https://avatars.githubusercontent.com/u/48732898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Icyshaman", "html_url": "https://github.com/Icyshaman", "followers_url": "https://api.github.com/users/Icyshaman/followers", "following_url": "https://api.github.com/users/Icyshaman/following{/other_user}", "gists_url": "https://api.github.com/users/Icyshaman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Icyshaman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Icyshaman/subscriptions", "organizations_url": "https://api.github.com/users/Icyshaman/orgs", "repos_url": "https://api.github.com/users/Icyshaman/repos", "events_url": "https://api.github.com/users/Icyshaman/events{/privacy}", "received_events_url": "https://api.github.com/users/Icyshaman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-03-04T14:20:13Z", "updated_at": "2023-04-18T12:36:20Z", "closed_at": "2023-04-18T12:36:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\nWhen we are passing **tuple** (tuple is a valid data-structure for total_size) for `total_size` as an argument in `_get_scaling()` we are getting `TypeError` instead of `ValueError` even though it should raise a `ValueError` and this is all because of the use of old-style formatting.\r\n\r\nExample:\r\nWhen we pass a tuple containing more than one `Ellipsis` it should raise a `ValueError` but instead of that, it is throwing `TypeError`.\r\n\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\n_get_scaling((1, 2, 5, Ellipsis, Ellipsis), (2, 3), 2)\r\n```\r\n\r\n**Please provide the full traceback.**\r\n`pymc.distributions.logprob._get_scaling()`\r\n\r\n**<summary>Complete error traceback</summary>**\r\n\r\n```python\r\nInput In [1], in _get_scaling(total_size, shape, ndim)\r\n     60     end = total_size[sep + 1 :]\r\n     61     if Ellipsis in end:\r\n     62         raise ValueError(\r\n---> 63             \"Double Ellipsis in `total_size` is restricted, got %r\" % total_size\r\n     64         )\r\n     65 else:\r\n     66     begin = total_size\r\n\r\nTypeError: not all arguments converted during string formatting\r\n\r\n```\r\n\r\n</details>\r\n\r\n**Please provide any additional information below.**\r\nThe above-mentioned issue can be solved by replacing\r\n```python\r\n\"Double Ellipsis in `total_size` is restricted, got %r\" % total_size\r\n```\r\nin _get_scaling() by \r\n```python\r\n\"Double Ellipsis in `total_size` is restricted, got {}\".format(total_size)\r\n```\r\nSince in present version of code it is trying to unpack the tuple elements which leads to error.\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: `4.0.0b2`\r\n* Aesara/Theano Version: `2.3.8`\r\n* Python Version: `3.8.12`\r\n* Operating system: `Windows 10 Pro, Version: 21H1, OS Build: 19043.1566`\r\n* How did you install PyMC/PyMC3: `conda`\r\n\r\nRelated To: #5544 ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5545/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5528", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5528/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5528/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5528/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5528", "id": 1153315721, "node_id": "I_kwDOAALxiM5EvjOJ", "number": 5528, "title": "numpyro sampling fails with more than one chain", "user": {"login": "martiningram", "id": 8013690, "node_id": "MDQ6VXNlcjgwMTM2OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8013690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martiningram", "html_url": "https://github.com/martiningram", "followers_url": "https://api.github.com/users/martiningram/followers", "following_url": "https://api.github.com/users/martiningram/following{/other_user}", "gists_url": "https://api.github.com/users/martiningram/gists{/gist_id}", "starred_url": "https://api.github.com/users/martiningram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martiningram/subscriptions", "organizations_url": "https://api.github.com/users/martiningram/orgs", "repos_url": "https://api.github.com/users/martiningram/repos", "events_url": "https://api.github.com/users/martiningram/events{/privacy}", "received_events_url": "https://api.github.com/users/martiningram/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2381812947, "node_id": "MDU6TGFiZWwyMzgxODEyOTQ3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/jax", "name": "jax", "color": "f241a5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-02-27T16:42:35Z", "updated_at": "2022-03-03T15:14:44Z", "closed_at": "2022-03-03T15:14:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi all,\r\n\r\nit looks like the latest version of pymc may have broken numpyro sampling when more than one chain is used? Here's a minimal example:\r\n\r\n```python\r\nimport pymc as pm\r\nfrom pymc.sampling_jax import sample_numpyro_nuts\r\n\r\nwith pm.Model() as m:\r\n\r\n    test = pm.Normal('test', mu=0, sigma=1)\r\n\r\nwith m:\r\n    result_jax = sample_numpyro_nuts()\r\n```\r\n\r\nProduces:\r\n\r\n```python\r\nCompiling...\r\nCompilation time =  0:00:00.754562\r\nSampling...\r\n\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nInput In [5], in <module>\r\n      1 with m:\r\n----> 2     result_jax = sample_numpyro_nuts()\r\n\r\nFile ~/projects/pymc_v4/pymc/pymc/sampling_jax.py:258, in sample_numpyro_nuts(draws, tune, chains, target_accept, random_seed, initvals, model, var_names, progress_bar, keep_untransformed, chain_method, idata_kwargs, nuts_kwargs)\r\n    254 print(\"Compilation time = \", tic2 - tic1, file=sys.stdout)\r\n    256 print(\"Sampling...\", file=sys.stdout)\r\n--> 258 map_seed = jax.random.PRNGKey(random_seed)\r\n    259 if chains > 1:\r\n    260     map_seed = jax.random.split(map_seed, chains)\r\n\r\nFile ~/miniconda3/envs/pymc-dev-py39/lib/python3.9/site-packages/jax/_src/random.py:119, in PRNGKey(seed)\r\n    105 \"\"\"Create a pseudo-random number generator (PRNG) key given an integer seed.\r\n    106 \r\n    107 The resulting key carries the default PRNG implementation, as\r\n   (...)\r\n    116 \r\n    117 \"\"\"\r\n    118 impl = default_prng_impl()\r\n--> 119 key = prng.seed_with_impl(impl, seed)\r\n    120 return _return_prng_keys(True, key)\r\n\r\nFile ~/miniconda3/envs/pymc-dev-py39/lib/python3.9/site-packages/jax/_src/prng.py:222, in seed_with_impl(impl, seed)\r\n    221 def seed_with_impl(impl: PRNGImpl, seed: int) -> PRNGKeyArray:\r\n--> 222   return PRNGKeyArray(impl, impl.seed(seed))\r\n\r\nFile ~/miniconda3/envs/pymc-dev-py39/lib/python3.9/site-packages/jax/_src/prng.py:256, in threefry_seed(seed)\r\n    254   seed_arr = jnp.asarray(seed)\r\n    255 if seed_arr.shape:\r\n--> 256   raise TypeError(f\"PRNG key seed must be a scalar; got {seed!r}.\")\r\n    257 if not np.issubdtype(seed_arr.dtype, np.integer):\r\n    258   raise TypeError(f\"PRNG key seed must be an integer; got {seed!r}\")\r\n\r\nTypeError: PRNG key seed must be a scalar; got array([ 970387577,  294435933, 1058679839,  301875541]).\r\n```\r\n\r\nThis is with commit hash `a3bab7ddc0f4612ad039a7d2755f22fa6c8c0a72`.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5528/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5514", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5514/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5514/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5514/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5514", "id": 1147468811, "node_id": "I_kwDOAALxiM5EZPwL", "number": 5514, "title": "Problem with Categorical distribution with tensor probabilities", "user": {"login": "Armavica", "id": 5855503, "node_id": "MDQ6VXNlcjU4NTU1MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5855503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Armavica", "html_url": "https://github.com/Armavica", "followers_url": "https://api.github.com/users/Armavica/followers", "following_url": "https://api.github.com/users/Armavica/following{/other_user}", "gists_url": "https://api.github.com/users/Armavica/gists{/gist_id}", "starred_url": "https://api.github.com/users/Armavica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Armavica/subscriptions", "organizations_url": "https://api.github.com/users/Armavica/orgs", "repos_url": "https://api.github.com/users/Armavica/repos", "events_url": "https://api.github.com/users/Armavica/events{/privacy}", "received_events_url": "https://api.github.com/users/Armavica/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76152, "node_id": "MDU6TGFiZWw3NjE1Mg==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/enhancements", "name": "enhancements", "color": "02e10c", "default": false, "description": null}, {"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-02-22T23:25:43Z", "updated_at": "2022-11-07T11:14:18Z", "closed_at": "2022-11-07T11:14:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nHi, I can't seem to use the `Categorical` distribution with tensor probabilities.\r\n\r\n```python\r\nimport pymc3 as pm\r\n\r\nwith pm.Model() as model:\r\n    p = pm.Uniform('p', 0, 1)\r\n    c = pm.Categorical('c', [p, 1-p])\r\n```\r\n\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/home/virgile/.miniconda3/envs/gadX/lib/python3.9/site-packages/pymc3/theanof.py\", line 83, in floatX\r\n    return X.astype(theano.config.floatX)\r\nAttributeError: 'list' object has no attribute 'astype'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTypeError: float() argument must be a string or a number, not 'TransformedRV'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/virgile/src/airthings/t.py\", line 7, in <module>\r\n    c = pm.Categorical('c', [p, 1-p])\r\n  File \"/home/virgile/.miniconda3/envs/gadX/lib/python3.9/site-packages/pymc3/distributions/distribution.py\", line 121, in __new__\r\n    dist = cls.dist(*args, **kwargs)\r\n  File \"/home/virgile/.miniconda3/envs/gadX/lib/python3.9/site-packages/pymc3/distributions/distribution.py\", line 130, in dist\r\n    dist.__init__(*args, **kwargs)\r\n  File \"/home/virgile/.miniconda3/envs/gadX/lib/python3.9/site-packages/pymc3/distributions/discrete.py\", line 1347, in __init__\r\n    p = tt.as_tensor_variable(floatX(p))\r\n  File \"/home/virgile/.miniconda3/envs/gadX/lib/python3.9/site-packages/pymc3/theanof.py\", line 86, in floatX\r\n    return np.asarray(X, dtype=theano.config.floatX)\r\nValueError: setting an array element with a sequence.\r\n```\r\n\r\n</details>\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: 3.11.4\r\n* Aesara/Theano Version: 1.1.2 (theano)\r\n* Python Version: 3.9.10\r\n* Operating system: linux\r\n* How did you install PyMC/PyMC3: conda\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5514/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5448", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5448/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5448/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5448/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5448", "id": 1125189058, "node_id": "I_kwDOAALxiM5DEQXC", "number": 5448, "title": "Remove pin of SciPy 1.8.0 once we run Aesara 2.4.0", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}, {"id": 2809192918, "node_id": "MDU6TGFiZWwyODA5MTkyOTE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v3", "name": "v3", "color": "F92E0C", "default": false, "description": ""}, {"id": 3190640810, "node_id": "MDU6TGFiZWwzMTkwNjQwODEw", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/installation", "name": "installation", "color": "000000", "default": false, "description": "issues about dependencies or installation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26", "html_url": "https://github.com/pymc-devs/pymc/milestone/26", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26/labels", "id": 7210288, "node_id": "MI_kwDOAALxiM4AbgUw", "number": 26, "title": "v4.0.0", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 50, "state": "closed", "created_at": "2021-10-01T14:41:57Z", "updated_at": "2022-11-05T04:50:00Z", "due_on": null, "closed_at": "2022-06-12T18:19:16Z"}, "comments": 1, "created_at": "2022-02-06T12:22:55Z", "updated_at": "2022-02-27T18:18:31Z", "closed_at": "2022-02-27T18:18:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\n There's a new SciPy release 1.8.0 and they refactored their public/private API.\r\n\r\nhttps://github.com/scipy/scipy/releases/tag/v1.8.0\r\n\r\nAesara has some import incompatibilities and this is causing our CIs to fail.\r\n\r\nRelated Aesara issue: https://github.com/aesara-devs/aesara/issues/810\r\n\r\nThe incompatibility will most probably affect `v3` too, so we'll want to backport a pin of the upper SciPy version.\r\n\r\n## Versions and main components\r\n* PyMC/PyMC3 Version: `<=3.11.4`, `<=4.0.0b2`\r\n* Aesara/Theano Version: all `<=2.3.8`", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5448/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5444", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5444/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5444/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5444/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5444", "id": 1122984243, "node_id": "PR_kwDOAALxiM4yBVec", "number": 5444, "title": "Fix transform projection bug", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/28", "html_url": "https://github.com/pymc-devs/pymc/milestone/28", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/28/labels", "id": 7551761, "node_id": "MI_kwDOAALxiM4AczsR", "number": 28, "title": "v4.0.0b3", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 17, "state": "closed", "created_at": "2022-01-07T15:42:51Z", "updated_at": "2022-03-17T09:44:35Z", "due_on": null, "closed_at": "2022-03-17T09:44:35Z"}, "comments": 1, "created_at": "2022-02-03T11:42:32Z", "updated_at": "2022-02-03T17:07:27Z", "closed_at": "2022-02-03T12:58:44Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5444", "html_url": "https://github.com/pymc-devs/pymc/pull/5444", "diff_url": "https://github.com/pymc-devs/pymc/pull/5444.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5444.patch", "merged_at": "2022-02-03T12:58:44Z"}, "body": "Replace RVs by respective value variables in the graph of untransformed variables\r\n\r\nThis fixes incorrect behavior, where deterministic projection from transformed (sampling) to untransformed space would be nonsensical when transforms depend on other graph variables", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5444/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5440", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5440/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5440/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5440/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5440", "id": 1121536892, "node_id": "I_kwDOAALxiM5C2Ut8", "number": 5440, "title": "Update Aeppl dependency", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}, {"id": 3561358894, "node_id": "LA_kwDOAALxiM7URgYu", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/logprob-related", "name": "logprob-related", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/28", "html_url": "https://github.com/pymc-devs/pymc/milestone/28", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/28/labels", "id": 7551761, "node_id": "MI_kwDOAALxiM4AczsR", "number": 28, "title": "v4.0.0b3", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 17, "state": "closed", "created_at": "2022-01-07T15:42:51Z", "updated_at": "2022-03-17T09:44:35Z", "due_on": null, "closed_at": "2022-03-17T09:44:35Z"}, "comments": 2, "created_at": "2022-02-02T05:44:01Z", "updated_at": "2022-02-15T13:37:53Z", "closed_at": "2022-02-15T13:37:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Due to a bug in Aeppl (https://github.com/aesara-devs/aeppl/issues/115), the changes introduced in #5386 lead to issues when using MvNormal or MvStudentT with random `mu` inputs", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5440/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5412", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5412/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5412/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5412/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5412", "id": 1116058436, "node_id": "I_kwDOAALxiM5ChbNE", "number": 5412, "title": "SMC Sampler - AttributeError: 'ValidatingScratchpad' object has no attribute 'test_value' when running parallel ", "user": {"login": "NathanielF", "id": 10588167, "node_id": "MDQ6VXNlcjEwNTg4MTY3", "avatar_url": "https://avatars.githubusercontent.com/u/10588167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NathanielF", "html_url": "https://github.com/NathanielF", "followers_url": "https://api.github.com/users/NathanielF/followers", "following_url": "https://api.github.com/users/NathanielF/following{/other_user}", "gists_url": "https://api.github.com/users/NathanielF/gists{/gist_id}", "starred_url": "https://api.github.com/users/NathanielF/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NathanielF/subscriptions", "organizations_url": "https://api.github.com/users/NathanielF/orgs", "repos_url": "https://api.github.com/users/NathanielF/repos", "events_url": "https://api.github.com/users/NathanielF/events{/privacy}", "received_events_url": "https://api.github.com/users/NathanielF/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1715881852, "node_id": "MDU6TGFiZWwxNzE1ODgxODUy", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/wontfix", "name": "wontfix", "color": "efefff", "default": true, "description": ""}, {"id": 2809192918, "node_id": "MDU6TGFiZWwyODA5MTkyOTE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v3", "name": "v3", "color": "F92E0C", "default": false, "description": ""}, {"id": 3120230247, "node_id": "MDU6TGFiZWwzMTIwMjMwMjQ3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/SMC", "name": "SMC", "color": "238E83", "default": false, "description": "Sequential Monte Carlo"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-01-27T10:50:14Z", "updated_at": "2022-01-30T22:11:18Z", "closed_at": "2022-01-30T22:11:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm also getting the an Attribute error with the SMC sampler when trying to replicate the Approximate Bayesian Computation referenced in https://bayesiancomputationbook.com/notebooks/chp_08.html\r\n\r\n```python\r\n  import pandas as pd\r\n  import numpy as np\r\n  from scipy import stats\r\n  from scipy import optimize\r\n  import sys\r\n  import pymc3 as pm\r\n  import sys\r\n  \r\n  class g_and_k_quantile:\r\n      def __init__(self):\r\n          self.quantile_normal = stats.norm(0, 1).ppf\r\n          self.pdf_normal = stats.norm(0, 1).pdf\r\n  \r\n      def ppf(self, x, a, b, g, k):\r\n          z = self.quantile_normal(x)\r\n          return a + b * (1 + 0.8 * np.tanh(g*z/2)) * ((1 + z**2)**k) * z\r\n  \r\n      \r\n      def rvs(self, samples, a, b, g, k):\r\n          x = np.random.uniform(0, 1, samples)\r\n          return self.ppf(x, a, b, g, k)\r\n  \r\n      def cdf(self, x, a, b, g, k, zscale=False):   \r\n          optimize.fminbound(f, -5, 5)\r\n  \r\n      def pdf(self, x, a, b, g, k):\r\n          #z = cdf(x, a, b, g, k)\r\n          z = x\r\n          z_sq = z**2\r\n          term1 = (1+z_sq)**k\r\n          term2 = 1+0.8*np.tanh(g*x/2)\r\n          term3 = (1+(2*k+1)*z_sq)/(1+z_sq)\r\n          term4 = 0.8*g*z/(2*np.cosh(g*z/2)**2)\r\n  \r\n          deriv = b*term1*(term2*term3+term4)\r\n          return self.pdf_normal(x) / deriv\r\n  \r\n  \r\n  def octo_summary(x):\r\n      e1, e2, e3, e4, e5, e6, e7 = np.quantile(x, [0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875])\r\n      sa = e4\r\n      sb = e6 - e2\r\n      sg = (e6 + e2 - 2*e4)/sb\r\n      sk = (e7 - e5 + e3 - e1)/sb\r\n      return np.array([sa, sb, sg, sk])\r\n  \r\n  pollution_df = pd.read_csv('../input_data/pollution.csv')\r\n  bsas_co = pollution_df[\"co\"].dropna().values\r\n  \r\n  gk = g_and_k_quantile()\r\n  def gk_simulator(a, b, g, k):\r\n      return gk.rvs(len(bsas_co), a, b, g, k)\r\n  \r\n  bsas_co = np.array([0.5, 0.4, 0.3])\r\n  \r\n  \r\n  if __name__ == '__main__':\r\n  \r\n      with pm.Model() as gkm:\r\n          a = pm.HalfNormal('a', sd=1)\r\n          b = pm.HalfNormal('b', sd=1)\r\n          g = pm.HalfNormal('g', sd=1)\r\n          k = pm.HalfNormal('k', sd=1)\r\n  \r\n          s = pm.Simulator('s', gk_simulator, params=[a, b, g, k],\r\n                           sum_stat=octo_summary,\r\n                           epsilon=0.1,\r\n                           observed=bsas_co)\r\n  \r\n          trace_gk, sim_data_gk = pm.sample_smc(kernel=\"ABC\",\r\n                                                parallel=True,\r\n                                                save_sim_data=True\r\n                                                )\r\n```\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/10588167/151331375-470d1876-44ce-4fc7-970a-3fa81b55e7f0.png)\r\n\r\nEnvironment: \r\n\r\nname: bmcp\r\nchannels:\r\n  - defaults\r\n  - conda-forge\r\ndependencies:\r\n  - python=3.9.6\r\n  - pip=21.2.4\r\n  - python-graphviz==0.17\r\n  - pip:\r\n    - arviz==0.11.2\r\n    - ipython==7.26.0\r\n    - jupyter==1.0.0\r\n    - jupyterlab==3.2.1\r\n    - matplotlib==3.4.3\r\n    - mkl==2021.3.0\r\n    - numpy==1.19.5\r\n    - numpyro==0.7.2\r\n    - pandas==1.3.2\r\n    - pydot==1.4.2\r\n    - pymc3==3.11.4\r\n    - statsmodels==0.12.2\r\n    - scipy==1.7.1\r\n    - tensorflow_probability==0.15.0\r\n    - tensorflow==2.7.0\r\n    - theano-pymc==1.1.2\r\n    - xarray== 0.19.0\r\n\r\n---------\r\nUPDATE - The error disappears if i remove the parrallel=True, which is weird. So probably related to multithreading rather than purely the attribute error above\r\n\r\n![image](https://user-images.githubusercontent.com/10588167/151335436-7c042443-822c-4abf-8714-be84b19003a8.png)\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5412/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5394", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5394/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5394/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5394/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5394", "id": 1114801058, "node_id": "I_kwDOAALxiM5CcoOi", "number": 5394, "title": "`convert_size` wrongly assumes symbolic sizes have to be scalars", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26", "html_url": "https://github.com/pymc-devs/pymc/milestone/26", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26/labels", "id": 7210288, "node_id": "MI_kwDOAALxiM4AbgUw", "number": 26, "title": "v4.0.0", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 50, "state": "closed", "created_at": "2021-10-01T14:41:57Z", "updated_at": "2022-11-05T04:50:00Z", "due_on": null, "closed_at": "2022-06-12T18:19:16Z"}, "comments": 6, "created_at": "2022-01-26T09:24:45Z", "updated_at": "2022-03-17T01:02:17Z", "closed_at": "2022-03-17T01:02:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```python\r\nimport pymc as pm\r\nimport aesara.tensor as at\r\n\r\ns = at.scalar('s')\r\nsize = at.stack([s, s])\r\nx = at.random.normal(size=size)\r\nx.eval({s: 2})\r\n# array([[-0.66285345,  0.97341598],\r\n#        [ 0.05158132,  2.03399059]])\r\n\r\npm.Normal.dist(size=size)\r\n# ValueError: The `size` parameter must be a tuple, TensorVariable, int or list. Actual: <class 'aesara.tensor.var.TensorVariable'>\r\n```\r\n\r\nThe error comes from this check here:\r\nhttps://github.com/pymc-devs/pymc/blob/915592235ea6920689f89bece48e2d679e8ed4f1/pymc/distributions/shape_utils.py#L475\r\n\r\nCC @michaelosthege ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5394/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5384", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5384/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5384/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5384/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5384", "id": 1112983543, "node_id": "I_kwDOAALxiM5CVsf3", "number": 5384, "title": "MissingInputError upon completion of `sample_numpyro_nuts`", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2381812947, "node_id": "MDU6TGFiZWwyMzgxODEyOTQ3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/jax", "name": "jax", "color": "f241a5", "default": false, "description": ""}, {"id": 2548173976, "node_id": "MDU6TGFiZWwyNTQ4MTczOTc2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/needs%20info", "name": "needs info", "color": "fbca04", "default": false, "description": "Additional information required"}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2022-01-24T18:15:20Z", "updated_at": "2022-02-14T18:28:19Z", "closed_at": "2022-02-14T18:28:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nRunning a model with `sample_numpyro_nuts` samples to completion,  but then fails before returning the trace:\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\nMissingInputError                         Traceback (most recent call last)\r\n<ipython-input-26-9a9cb2e2e693> in <module>()\r\n      2 \r\n      3     try:\r\n----> 4         trace = sample_numpyro_nuts(1000, tune=2000, chains=1, target_accept=0.95)\r\n      5     except NameError:\r\n      6         trace = pm.sample(1000, tune=2000, cores=4, target_accept=0.95)\r\n\r\n3 frames\r\n/usr/local/lib/python3.7/dist-packages/pymc/sampling_jax.py in sample_numpyro_nuts(draws, tune, chains, target_accept, random_seed, model, var_names, progress_bar, keep_untransformed, chain_method)\r\n    230     mcmc_samples = {}\r\n    231     for v in vars_to_sample:\r\n--> 232         fgraph = FunctionGraph(model.value_vars, [v], clone=False)\r\n    233         optimize_graph(fgraph, include=[\"fast_run\"], exclude=[\"cxx_only\", \"BlasOpt\"])\r\n    234         jax_fn = jax_funcify(fgraph)\r\n\r\n/usr/local/lib/python3.7/dist-packages/aesara/graph/fg.py in __init__(self, inputs, outputs, features, clone, update_mapping, memo, copy_inputs, copy_orphans)\r\n    165 \r\n    166         for output in outputs:\r\n--> 167             self.import_var(output, reason=\"init\")\r\n    168         for i, output in enumerate(outputs):\r\n    169             self.clients[output].append((\"output\", i))\r\n\r\n/usr/local/lib/python3.7/dist-packages/aesara/graph/fg.py in import_var(self, var, reason, import_missing)\r\n    335         # Imports the owners of the variables\r\n    336         if var.owner and var.owner not in self.apply_nodes:\r\n--> 337             self.import_node(var.owner, reason=reason, import_missing=import_missing)\r\n    338         elif (\r\n    339             var.owner is None\r\n\r\n/usr/local/lib/python3.7/dist-packages/aesara/graph/fg.py in import_node(self, apply_node, check, reason, import_missing)\r\n    400                                 \"for more information on this error.\"\r\n    401                             )\r\n--> 402                             raise MissingInputError(error_msg, variable=var)\r\n    403 \r\n    404         for node in new_nodes:\r\n\r\nMissingInputError: Input 1 (x_std) of the graph (indices start from 0), used to compute Elemwise{mul,no_inplace}(InplaceDimShuffle{x}.0, x_std), was not provided and not given a value. Use the Aesara flag exception_verbosity='high', for more information on this error.\r\n \r\nBacktrace when that variable is created:\r\n\r\n  File \"/usr/local/lib/python3.7/dist-packages/ipykernel/kernelbase.py\", line 399, in execute_request\r\n    user_expressions, allow_stdin)\r\n  File \"/usr/local/lib/python3.7/dist-packages/ipykernel/ipkernel.py\", line 208, in do_execute\r\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\r\n  File \"/usr/local/lib/python3.7/dist-packages/ipykernel/zmqshell.py\", line 537, in run_cell\r\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/dist-packages/IPython/core/interactiveshell.py\", line 2718, in run_cell\r\n    interactivity=interactivity, compiler=compiler, result=result)\r\n  File \"/usr/local/lib/python3.7/dist-packages/IPython/core/interactiveshell.py\", line 2822, in run_ast_nodes\r\n    if self.run_code(code, result):\r\n  File \"/usr/local/lib/python3.7/dist-packages/IPython/core/interactiveshell.py\", line 2882, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-25-6bb22e74edec>\", line 9, in <module>\r\n    x_std = pm.Data('x_std', (df_clean.stuff_plus.values - mean_stuff) / std_stuff, mutable=True)\r\n  File \"/usr/local/lib/python3.7/dist-packages/pymc/data.py\", line 648, in Data\r\n    x = aesara.shared(arr, name, **kwargs)\r\n```\r\n\r\n</details>\r\n\r\nThe error appears to be related to a covariate input:\r\n\r\n```python\r\n    x_std = pm.Data('x_std', (df_clean.stuff_plus.values - mean_stuff) / std_stuff, mutable=True)\r\n\r\n    ...\r\n\r\n    # Failure rate\r\n    rate = pm.Deterministic('rate', lambda0[age_ind] * at.exp(beta*x_std))\r\n```\r\n\r\nI can't submit this model as a reproducible example due to its proprietary nature, but will try and generate a simpler reproducible example.\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: 4.0.0b2\r\n* Aesara/Theano Version: 2.3.4\r\n* Python Version: 3.7.12\r\n* Operating system: Colab (linux)\r\n* How did you install PyMC/PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5384/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5378", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5378/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5378/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5378/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5378", "id": 1109641964, "node_id": "I_kwDOAALxiM5CI8rs", "number": 5378, "title": "Seeding not working for single chains", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2107010938, "node_id": "MDU6TGFiZWwyMTA3MDEwOTM4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/help%20wanted", "name": "help wanted", "color": "b58f13", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26", "html_url": "https://github.com/pymc-devs/pymc/milestone/26", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26/labels", "id": 7210288, "node_id": "MI_kwDOAALxiM4AbgUw", "number": 26, "title": "v4.0.0", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 50, "state": "closed", "created_at": "2021-10-01T14:41:57Z", "updated_at": "2022-11-05T04:50:00Z", "due_on": null, "closed_at": "2022-06-12T18:19:16Z"}, "comments": 4, "created_at": "2022-01-20T18:38:35Z", "updated_at": "2022-07-02T11:16:46Z", "closed_at": "2022-05-19T22:05:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Seeding seems to not be respected when using a single chain:\r\n\r\n```python\r\nimport numpy as np\r\nimport pymc as pm\r\n\r\nwith pm.Model(rng_seeder=3):\r\n    x = pm.Normal(\"x\")\r\n\r\n    tr1 = pm.sample(\r\n        chains=1,\r\n        random_seed=1,\r\n        tune=0,\r\n        draws=10,\r\n        return_inferencedata=False,\r\n        compute_convergence_checks=False,\r\n    )\r\n    tr2 = pm.sample(\r\n        chains=1,\r\n        random_seed=1,\r\n        tune=0,\r\n        draws=10,\r\n        return_inferencedata=False,\r\n        compute_convergence_checks=False,\r\n    )\r\n\r\n    assert np.allclose(tr1[\"x\"], tr2[\"x\"])  # Fails\r\n```\r\n\r\nThere is also a similar failure when passing multiple seeds, but working with a single core (i.e., sequential sampling)\r\n\r\n#5377 Includes a test which covers the failing cases", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5378/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5377", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5377/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5377/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5377/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5377", "id": 1109634833, "node_id": "PR_kwDOAALxiM4xV3Ua", "number": 5377, "title": "Fix seeding issues in sequential sampling", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2107010938, "node_id": "MDU6TGFiZWwyMTA3MDEwOTM4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/help%20wanted", "name": "help wanted", "color": "b58f13", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26", "html_url": "https://github.com/pymc-devs/pymc/milestone/26", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26/labels", "id": 7210288, "node_id": "MI_kwDOAALxiM4AbgUw", "number": 26, "title": "v4.0.0", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 50, "state": "closed", "created_at": "2021-10-01T14:41:57Z", "updated_at": "2022-11-05T04:50:00Z", "due_on": null, "closed_at": "2022-06-12T18:19:16Z"}, "comments": 1, "created_at": "2022-01-20T18:30:16Z", "updated_at": "2022-05-19T22:05:25Z", "closed_at": "2022-05-19T22:05:25Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5377", "html_url": "https://github.com/pymc-devs/pymc/pull/5377", "diff_url": "https://github.com/pymc-devs/pymc/pull/5377.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5377.patch", "merged_at": "2022-05-19T22:05:24Z"}, "body": "This PR fixes some seeding issues in sequential sampling and reveals others related to ADVI sampling (described in #5784)\r\n\r\nCloses #5378", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5377/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5339", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5339/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5339/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5339/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5339", "id": 1098149760, "node_id": "I_kwDOAALxiM5BdG-A", "number": 5339, "title": "Strange Aesara warning and broken pipe error when fitting model with missing values", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2543051866, "node_id": "MDU6TGFiZWwyNTQzMDUxODY2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/macOS", "name": "macOS", "color": "f9d0c4", "default": false, "description": "macOS related"}, {"id": 2548173976, "node_id": "MDU6TGFiZWwyNTQ4MTczOTc2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/needs%20info", "name": "needs info", "color": "fbca04", "default": false, "description": "Additional information required"}, {"id": 3561358894, "node_id": "LA_kwDOAALxiM7URgYu", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/logprob-related", "name": "logprob-related", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2022-01-10T17:04:30Z", "updated_at": "2022-11-05T04:47:02Z", "closed_at": "2022-11-05T04:47:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm fitting a manually-constructed GRW model in v4beta that includes a likelihood with a lot of missing values. As the model is fit using `sample`, I get several of these errors.\r\n\r\n```\r\nwarnings.warn(\r\n/Users/cfonnesbeck/GitHub/pie/.env/lib/python3.8/site-packages/aeppl/joint_logprob.py:161: UserWarning: Found a random variable that was neither among the observations nor the conditioned variables: halfnormal_rv{0, (0, 0), floatX, False}(RandomStateSharedVariable(<RandomState(MT19937) at 0x16E5E6640>), TensorConstant{[]}, TensorConstant{11}, BroadcastTo.0, BroadcastTo.0)\r\n```\r\n\r\nThe model is below; the node it is referring to is the likelihood standard deviation. If missing value is filled, the model runs normally.\r\n\r\n```python\r\ncoords = {\r\n    'pitcher': pitcher.values,\r\n    'age': age.values.astype(int)\r\n}\r\nwith pm.Model(coords=coords) as age_model:\r\n\r\n    z_mu = pm.Normal('z_mu', mu=0, sigma=1, dims='pitcher')\r\n    s_mu = pm.HalfCauchy('s_mu', 3)\r\n    m_mu = pm.Normal('m_mu', mu=92, sigma=5)\r\n    mu = pm.Deterministic('mu', m_mu + s_mu * z_mu)\r\n\r\n    # GRW \r\n    rho = pm.Normal('rho', mu=0, sigma=np.append(0.001, np.ones(len(age)-1)))\r\n    age_curve = pm.Deterministic('age_curve', rho.cumsum(), dims='age')\r\n\r\n    theta = mu.dimshuffle(0, 'x') + age_curve\r\n\r\n    sigma = pm.HalfNormal('sigma', 10)\r\n    velo = pm.Normal('velo', theta, sigma=sigma, observed=y)\r\n```\r\n\r\nWhen run, the model quickly dies with a broken pipe, apparently related to multiprocessing:\r\n\r\n```\r\n/Users/cfonnesbeck/GitHub/pie/.env/src/pymc/pymc/model.py:1301: ImputationWarning: Data in velo contains missing values and will be automatically imputed from the sampling distribution.\r\n  warnings.warn(impute_message, ImputationWarning)\r\nAuto-assigning NUTS sampler...\r\nInitializing NUTS using adapt_full...\r\n/Users/cfonnesbeck/GitHub/pie/.env/src/pymc/pymc/step_methods/hmc/quadpotential.py:611: UserWarning: QuadPotentialFullAdapt is an experimental feature\r\n  warnings.warn(\"QuadPotentialFullAdapt is an experimental feature\")\r\nMultiprocess sampling (4 chains in 4 jobs)\r\nNUTS: [z_mu, s_mu, m_mu, rho, velo_missing]\r\nTraceback (most recent call last):\r\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/multiprocessing/forkserver.py\", line 280, in main\r\n    code = _serve_one(child_r, fds,\r\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/multiprocessing/forkserver.py\", line 319, in _serve_one\r\n    code = spawn._main(child_r, parent_sentinel)\r\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/multiprocessing/spawn.py\", line 125, in _main\r\n    prepare(preparation_data)\r\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/multiprocessing/spawn.py\", line 236, in prepare\r\n    _fixup_main_from_path(data['init_main_from_path'])\r\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/multiprocessing/spawn.py\", line 287, in _fixup_main_from_path\r\n    main_content = runpy.run_path(main_path,\r\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/runpy.py\", line 265, in run_path\r\n    return _run_module_code(code, init_globals, run_name,\r\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/runpy.py\", line 97, in _run_module_code\r\n    _run_code(code, mod_globals, init_globals,\r\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/runpy.py\", line 87, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/Users/cfonnesbeck/GitHub/pie/research/projections/src/pitchers/ageing_curves.py\", line 115, in <module>\r\n    trace = pm.sample(1000, tune=1000, init='adapt_full')\r\n  File \"/Users/cfonnesbeck/GitHub/pie/.env/src/pymc/pymc/sampling.py\", line 566, in sample\r\n    trace = _mp_sample(**sample_args, **parallel_args)\r\n  File \"/Users/cfonnesbeck/GitHub/pie/.env/src/pymc/pymc/sampling.py\", line 1468, in _mp_sample\r\n    sampler = ps.ParallelSampler(\r\n  File \"/Users/cfonnesbeck/GitHub/pie/.env/src/pymc/pymc/parallel_sampling.py\", line 413, in __init__\r\n    self._samplers = [\r\n  File \"/Users/cfonnesbeck/GitHub/pie/.env/src/pymc/pymc/parallel_sampling.py\", line 414, in <listcomp>\r\n    ProcessAdapter(\r\n  File \"/Users/cfonnesbeck/GitHub/pie/.env/src/pymc/pymc/parallel_sampling.py\", line 282, in __init__\r\n    self._process.start()\r\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/multiprocessing/process.py\", line 121, in start\r\n    self._popen = self._Popen(self)\r\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/multiprocessing/context.py\", line 291, in _Popen\r\n    return Popen(process_obj)\r\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/multiprocessing/popen_forkserver.py\", line 35, in __init__\r\n    super().__init__(process_obj)\r\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/multiprocessing/popen_fork.py\", line 19, in __init__\r\n    self._launch(process_obj)\r\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/multiprocessing/popen_forkserver.py\", line 42, in _launch\r\n    prep_data = spawn.get_preparation_data(process_obj._name)\r\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/multiprocessing/spawn.py\", line 154, in get_preparation_data\r\n    _check_not_importing_main()\r\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/multiprocessing/spawn.py\", line 134, in _check_not_importing_main\r\n    raise RuntimeError('''\r\nRuntimeError: \r\n        An attempt has been made to start a new process before the\r\n        current process has finished its bootstrapping phase.\r\n\r\n        This probably means that you are not using fork to start your\r\n        child processes and you have forgotten to use the proper idiom\r\n        in the main module:\r\n\r\n            if __name__ == '__main__':\r\n                freeze_support()\r\n                ...\r\n\r\n        The \"freeze_support()\" line can be omitted if the program\r\n        is not going to be frozen to produce an executable.\r\n\r\n---------------------------------------------------------------------------\r\nBrokenPipeError                           Traceback (most recent call last)\r\n~/GitHub/pie/research/projections/src/pitchers/ageing_curves.py in <module>\r\n      113 with age_model:\r\n      114 \r\n----> 115     trace = pm.sample(1000, tune=1000, init='adapt_full')\r\n      116 \r\n\r\n~/GitHub/pie/.env/src/pymc/pymc/sampling.py in sample(draws, step, init, n_init, initvals, trace, chain_idx, chains, cores, tune, progressbar, model, random_seed, discard_tuned_samples, compute_convergence_checks, callback, jitter_max_retries, return_inferencedata, idata_kwargs, mp_ctx, **kwargs)\r\n    564         _print_step_hierarchy(step)\r\n    565         try:\r\n--> 566             trace = _mp_sample(**sample_args, **parallel_args)\r\n    567         except pickle.PickleError:\r\n    568             _log.warning(\"Could not pickle model, sampling singlethreaded.\")\r\n\r\n~/GitHub/pie/.env/src/pymc/pymc/sampling.py in _mp_sample(draws, tune, step, chains, cores, chain, random_seed, start, progressbar, trace, model, callback, discard_tuned_samples, mp_ctx, **kwargs)\r\n   1466         traces.append(strace)\r\n   1467 \r\n-> 1468     sampler = ps.ParallelSampler(\r\n   1469         draws,\r\n   1470         tune,\r\n\r\n~/GitHub/pie/.env/src/pymc/pymc/parallel_sampling.py in __init__(self, draws, tune, chains, cores, seeds, start_points, step_method, start_chain_num, progressbar, mp_ctx)\r\n    411             step_method_pickled = cloudpickle.dumps(step_method, protocol=-1)\r\n    412 \r\n--> 413         self._samplers = [\r\n    414             ProcessAdapter(\r\n    415                 draws,\r\n\r\n~/GitHub/pie/.env/src/pymc/pymc/parallel_sampling.py in <listcomp>(.0)\r\n    412 \r\n    413         self._samplers = [\r\n--> 414             ProcessAdapter(\r\n    415                 draws,\r\n    416                 tune,\r\n\r\n~/GitHub/pie/.env/src/pymc/pymc/parallel_sampling.py in __init__(self, draws, tune, step_method, step_method_pickled, chain, seed, start, mp_ctx)\r\n    280             ),\r\n    281         )\r\n--> 282         self._process.start()\r\n    283         # Close the remote pipe, so that we get notified if the other\r\n    284         # end is closed.\r\n\r\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/multiprocessing/process.py in start(self)\r\n    119                'daemonic processes are not allowed to have children'\r\n    120         _cleanup()\r\n--> 121         self._popen = self._Popen(self)\r\n    122         self._sentinel = self._popen.sentinel\r\n    123         # Avoid a refcycle if the target function holds an indirect\r\n\r\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/multiprocessing/context.py in _Popen(process_obj)\r\n    289         def _Popen(process_obj):\r\n    290             from .popen_forkserver import Popen\r\n--> 291             return Popen(process_obj)\r\n    292 \r\n    293     class ForkContext(BaseContext):\r\n\r\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/multiprocessing/popen_forkserver.py in __init__(self, process_obj)\r\n     33     def __init__(self, process_obj):\r\n     34         self._fds = []\r\n---> 35         super().__init__(process_obj)\r\n     36 \r\n     37     def duplicate_for_child(self, fd):\r\n\r\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/multiprocessing/popen_fork.py in __init__(self, process_obj)\r\n     17         self.returncode = None\r\n     18         self.finalizer = None\r\n---> 19         self._launch(process_obj)\r\n     20 \r\n     21     def duplicate_for_child(self, fd):\r\n\r\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/multiprocessing/popen_forkserver.py in _launch(self, process_obj)\r\n     56                                        (_parent_w, self.sentinel))\r\n     57         with open(w, 'wb', closefd=True) as f:\r\n---> 58             f.write(buf.getbuffer())\r\n     59         self.pid = forkserver.read_signed(self.sentinel)\r\n     60 \r\n\r\nBrokenPipeError: [Errno 32] Broken pipe\r\n```\r\nRunning with a single chain resolves the error (but not the warning)\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: 4.0.0b1\r\n* Aesara/Theano Version: Aesara 2.3.2\r\n* Python Version: 3.8.9\r\n* Operating system: macOS\r\n* How did you install PyMC/PyMC3: miniforge\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5339/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5338", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5338/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5338/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5338/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5338", "id": 1098111806, "node_id": "PR_kwDOAALxiM4wvqnv", "number": 5338, "title": "Only pack variables for which prior samples are available", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/25", "html_url": "https://github.com/pymc-devs/pymc/milestone/25", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/25/labels", "id": 6910899, "node_id": "MDk6TWlsZXN0b25lNjkxMDg5OQ==", "number": 25, "title": "v4.0.0b2", "description": "", "creator": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 21, "state": "closed", "created_at": "2021-07-02T08:30:43Z", "updated_at": "2022-07-02T11:15:56Z", "due_on": null, "closed_at": "2022-01-20T18:52:17Z"}, "comments": 1, "created_at": "2022-01-10T16:36:01Z", "updated_at": "2022-01-10T17:28:36Z", "closed_at": "2022-01-10T17:28:33Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5338", "html_url": "https://github.com/pymc-devs/pymc/pull/5338", "diff_url": "https://github.com/pymc-devs/pymc/pull/5338.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5338.patch", "merged_at": "2022-01-10T17:28:33Z"}, "body": "Closes #5337", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5338/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5337", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5337/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5337/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5337/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5337", "id": 1098072017, "node_id": "I_kwDOAALxiM5Bcz_R", "number": 5337, "title": "`sample_prior_predictive(var_names=[...])` results in `KeyError` inside `to_inferencedata()`", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/25", "html_url": "https://github.com/pymc-devs/pymc/milestone/25", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/25/labels", "id": 6910899, "node_id": "MDk6TWlsZXN0b25lNjkxMDg5OQ==", "number": 25, "title": "v4.0.0b2", "description": "", "creator": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 21, "state": "closed", "created_at": "2021-07-02T08:30:43Z", "updated_at": "2022-07-02T11:15:56Z", "due_on": null, "closed_at": "2022-01-20T18:52:17Z"}, "comments": 0, "created_at": "2022-01-10T16:03:35Z", "updated_at": "2022-01-10T17:28:33Z", "closed_at": "2022-01-10T17:28:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nwith pm.Model() as model:\r\n    x = pm.Normal(\"x\")\r\n    y = pm.Normal(\"y\", x, observed=5)\r\n    idata = pm.sample(tune=10, draws=20, chains=1, step=pm.Metropolis())\r\n    pm.sample_posterior_predictive(idata, var_names=[\"x\"]) # \ud83d\udc48 this works fine\r\n    pm.sample_prior_predictive(var_names=[\"x\"])          # \ud83d\udc48 this doesn't\r\n```\r\n\r\n**Please provide the full traceback.**\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-12-46d00c82b13d> in <module>\r\n      4     idata = pm.sample(tune=10, draws=20, chains=1, step=pm.Metropolis())\r\n      5     pm.sample_posterior_predictive(idata)\r\n----> 6     pm.sample_prior_predictive(var_names=[\"x\"])\r\n\r\nc:\\users\\osthege\\repos\\pymc-main\\pymc\\sampling.py in sample_prior_predictive(samples, model, var_names, random_seed, mode, return_inferencedata, idata_kwargs)\r\n   2030     if idata_kwargs:\r\n   2031         ikwargs.update(idata_kwargs)\r\n-> 2032     return pm.to_inference_data(prior=prior, **ikwargs)\r\n   2033 \r\n   2034 \r\n\r\nc:\\users\\osthege\\repos\\pymc-main\\pymc\\backends\\arviz.py in to_inference_data(trace, prior, posterior_predictive, log_likelihood, coords, dims, model, save_warmup, density_dist_obs)\r\n    587         return trace\r\n    588 \r\n--> 589     return InferenceDataConverter(\r\n    590         trace=trace,\r\n    591         prior=prior,\r\n\r\nc:\\users\\osthege\\repos\\pymc-main\\pymc\\backends\\arviz.py in to_inference_data(self)\r\n    523             \"posterior_predictive\": self.posterior_predictive_to_xarray(),\r\n    524             \"predictions\": self.predictions_to_xarray(),\r\n--> 525             **self.priors_to_xarray(),\r\n    526             \"observed_data\": self.observed_data_to_xarray(),\r\n    527         }\r\n\r\nc:\\users\\osthege\\repos\\pymc-main\\pymc\\backends\\arviz.py in priors_to_xarray(self)\r\n    442                 if var_names is None\r\n    443                 else dict_to_dataset(\r\n--> 444                     {k: np.expand_dims(self.prior[k], 0) for k in var_names},\r\n    445                     library=pymc,\r\n    446                     coords=self.coords,\r\n\r\nc:\\users\\osthege\\repos\\pymc-main\\pymc\\backends\\arviz.py in <dictcomp>(.0)\r\n    442                 if var_names is None\r\n    443                 else dict_to_dataset(\r\n--> 444                     {k: np.expand_dims(self.prior[k], 0) for k in var_names},\r\n    445                     library=pymc,\r\n    446                     coords=self.coords,\r\n\r\nKeyError: 'y'\r\n```\r\n\r\n</details>\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: `main`", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5337/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5310", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5310/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5310/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5310/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5310", "id": 1093501364, "node_id": "I_kwDOAALxiM5BLYG0", "number": 5310, "title": "Theano Issue with NumPy 1.22.0", "user": {"login": "aliakbars", "id": 7055994, "node_id": "MDQ6VXNlcjcwNTU5OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7055994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aliakbars", "html_url": "https://github.com/aliakbars", "followers_url": "https://api.github.com/users/aliakbars/followers", "following_url": "https://api.github.com/users/aliakbars/following{/other_user}", "gists_url": "https://api.github.com/users/aliakbars/gists{/gist_id}", "starred_url": "https://api.github.com/users/aliakbars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aliakbars/subscriptions", "organizations_url": "https://api.github.com/users/aliakbars/orgs", "repos_url": "https://api.github.com/users/aliakbars/repos", "events_url": "https://api.github.com/users/aliakbars/events{/privacy}", "received_events_url": "https://api.github.com/users/aliakbars/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2809192918, "node_id": "MDU6TGFiZWwyODA5MTkyOTE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v3", "name": "v3", "color": "F92E0C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/27", "html_url": "https://github.com/pymc-devs/pymc/milestone/27", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/27/labels", "id": 7227358, "node_id": "MI_kwDOAALxiM4Abkfe", "number": 27, "title": "v3.11.5 (vNext) ", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2021-10-06T22:09:14Z", "updated_at": "2022-03-17T09:44:28Z", "due_on": null, "closed_at": "2022-03-17T09:44:28Z"}, "comments": 6, "created_at": "2022-01-04T16:07:42Z", "updated_at": "2022-03-14T18:46:02Z", "closed_at": "2022-01-07T05:52:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## BLAS issue with the latest release of NumPy\r\n\r\nHad this issue directly after importing `pymc3` or `theano`.\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/Users/ali.septiandri/anaconda/lib/python3.8/site-packages/theano/configparser.py\", line 238, in fetch_val_for_key\r\n    return self._theano_cfg.get(section, option)\r\n  File \"/Users/ali.septiandri/anaconda/lib/python3.8/configparser.py\", line 781, in get\r\n    d = self._unify_values(section, vars)\r\n  File \"/Users/ali.septiandri/anaconda/lib/python3.8/configparser.py\", line 1149, in _unify_values\r\n    raise NoSectionError(section) from None\r\nconfigparser.NoSectionError: No section: 'blas'\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/Users/ali.septiandri/anaconda/lib/python3.8/site-packages/theano/configparser.py\", line 354, in __get__\r\n    val_str = cls.fetch_val_for_key(self.name, delete_key=delete_key)\r\n  File \"/Users/ali.septiandri/anaconda/lib/python3.8/site-packages/theano/configparser.py\", line 242, in fetch_val_for_key\r\n    raise KeyError(key)\r\nKeyError: 'blas__ldflags'\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/ali.septiandri/anaconda/lib/python3.8/site-packages/pymc3/__init__.py\", line 23, in <module>\r\n    import theano\r\n  File \"/Users/ali.septiandri/anaconda/lib/python3.8/site-packages/theano/__init__.py\", line 83, in <module>\r\n    from theano import scalar, tensor\r\n  File \"/Users/ali.septiandri/anaconda/lib/python3.8/site-packages/theano/tensor/__init__.py\", line 20, in <module>\r\n    from theano.tensor import nnet  # used for softmax, sigmoid, etc.\r\n  File \"/Users/ali.septiandri/anaconda/lib/python3.8/site-packages/theano/tensor/nnet/__init__.py\", line 3, in <module>\r\n    from . import opt\r\n  File \"/Users/ali.septiandri/anaconda/lib/python3.8/site-packages/theano/tensor/nnet/opt.py\", line 32, in <module>\r\n    from theano.tensor.nnet.conv import ConvOp, conv2d\r\n  File \"/Users/ali.septiandri/anaconda/lib/python3.8/site-packages/theano/tensor/nnet/conv.py\", line 20, in <module>\r\n    from theano.tensor import blas\r\n  File \"/Users/ali.septiandri/anaconda/lib/python3.8/site-packages/theano/tensor/blas.py\", line 163, in <module>\r\n    from theano.tensor.blas_headers import blas_header_text, blas_header_version\r\n  File \"/Users/ali.septiandri/anaconda/lib/python3.8/site-packages/theano/tensor/blas_headers.py\", line 1016, in <module>\r\n    if not config.blas__ldflags:\r\n  File \"/Users/ali.septiandri/anaconda/lib/python3.8/site-packages/theano/configparser.py\", line 358, in __get__\r\n    val_str = self.default()\r\n  File \"/Users/ali.septiandri/anaconda/lib/python3.8/site-packages/theano/link/c/cmodule.py\", line 2621, in default_blas_ldflags\r\n    blas_info = numpy.distutils.__config__.blas_opt_info\r\nAttributeError: module 'numpy.distutils.__config__' has no attribute 'blas_opt_info'\r\n```\r\n\r\n</details>\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: 3.11.4\r\n* Aesara/Theano Version: 1.1.2\r\n* Python Version: 3.8\r\n* Operating system: macOS Big Sur\r\n* How did you install PyMC/PyMC3: conda\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5310/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5309", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5309/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5309/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5309/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5309", "id": 1093297216, "node_id": "I_kwDOAALxiM5BKmRA", "number": 5309, "title": "`pm.Data` silently missing from `InferenceData` when dims match the variable name", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}, {"id": 3425466025, "node_id": "LA_kwDOAALxiM7MLHap", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/trace-backend", "name": "trace-backend", "color": "0F37D2", "default": false, "description": "Traces and ArviZ stuff"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2022-01-04T12:16:13Z", "updated_at": "2022-02-27T20:00:25Z", "closed_at": "2022-02-27T20:00:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Xarray, and thereby `InferenceData` don't support labeling dimensions with the same name as the variable.\r\n\r\n\r\n```python\r\nwith pm.Model() as pmodel:\r\n    pm.Data(\"city\", numpy.arange(5), dims=\"cities\") # \u2714 ends up in .constant_data as expected\r\n\r\n    pm.Data(\"time\", numpy.arange(5), dims=\"time\")   # \u274c silently missing\r\n    pm.Normal(\"a\")                                  # \u274c errors in InferenceData conversion\r\n    idata = pm.sample(chains=1)\r\n```\r\n\r\nOnly variable \"a\" caused an error - but unfortunately only after MCMC.\r\n```\r\nMissingDimensionsError: 'a' has more than 1-dimension and the same name as one of its dimensions ('chain', 'draw', 'a').\r\nxarray disallows such variables because they conflict with the coordinates used to label dimensions.\r\n```\r\n\r\nSince dims are passed at creation of the variables, we should raise that error in `Model.add_random_variable`. That will raise the error much earlier, and work for variables and data.\r\n\r\nhttps://github.com/pymc-devs/pymc/blob/14c4f39122ae313e25b2698195067ec44b69b26a/pymc/model.py#L1416-L1429\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: latest\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5309/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5309/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5307", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5307/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5307/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5307/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5307", "id": 1092554368, "node_id": "PR_kwDOAALxiM4weDNw", "number": 5307, "title": "Fix Poisson logcdf", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-01-03T14:23:13Z", "updated_at": "2022-01-05T07:08:34Z", "closed_at": "2022-01-03T16:12:10Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5307", "html_url": "https://github.com/pymc-devs/pymc/pull/5307", "diff_url": "https://github.com/pymc-devs/pymc/pull/5307.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5307.patch", "merged_at": "2022-01-03T16:12:10Z"}, "body": "This showed up in #5231, the evalution of a scalar logcdf was returning a 1D result, because of a silly comma :D\r\n\r\nDidn't add tests, because we are not checking this for any other distribution...", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5307/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5303", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5303/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5303/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5303/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5303", "id": 1091993743, "node_id": "I_kwDOAALxiM5BFoCP", "number": 5303, "title": "Attribute Error using graphviz: MvGaussianRandomWalk", "user": {"login": "ltoniazzi", "id": 61414566, "node_id": "MDQ6VXNlcjYxNDE0NTY2", "avatar_url": "https://avatars.githubusercontent.com/u/61414566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ltoniazzi", "html_url": "https://github.com/ltoniazzi", "followers_url": "https://api.github.com/users/ltoniazzi/followers", "following_url": "https://api.github.com/users/ltoniazzi/following{/other_user}", "gists_url": "https://api.github.com/users/ltoniazzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ltoniazzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ltoniazzi/subscriptions", "organizations_url": "https://api.github.com/users/ltoniazzi/orgs", "repos_url": "https://api.github.com/users/ltoniazzi/repos", "events_url": "https://api.github.com/users/ltoniazzi/events{/privacy}", "received_events_url": "https://api.github.com/users/ltoniazzi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/38", "html_url": "https://github.com/pymc-devs/pymc/milestone/38", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/38/labels", "id": 8422369, "node_id": "MI_kwDOAALxiM4AgIPh", "number": 38, "title": "v4.3.0", "description": "", "creator": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 7, "state": "closed", "created_at": "2022-09-14T14:54:22Z", "updated_at": "2022-10-31T10:12:50Z", "due_on": null, "closed_at": "2022-10-31T10:12:50Z"}, "comments": 2, "created_at": "2022-01-02T10:41:17Z", "updated_at": "2022-10-27T12:55:37Z", "closed_at": "2022-10-27T12:55:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nWhen I try to plot a model with `pm.model_to_graphviz` that features a distribution `pm.MvGaussianRandomWalk`, I get the Attribute Error `'MvGaussianRandomWalk' object has no attribute 'mu'`.\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport numpy as np\r\nimport pymc3 as pm\r\nshape = (3,2)\r\nchol = np.array([[1,0],[1,1]])\r\nmu = np.zeros(2)\r\nwith pm.Model() as model:\r\n    RW = pm.MvGaussianRandomWalk(\"RW\", mu=mu, chol=chol, shape=shape)\r\npm.model_to_graphviz(model)\r\n```\r\n\r\n**Please provide the full traceback.**\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n/tmp/ipykernel_7565/1959954546.py in <module>\r\n      6 with pm.Model() as model:\r\n      7     RW = pm.MvGaussianRandomWalk(\"RW\", mu=mu, chol=chol, shape=shape)\r\n----> 8 pm.model_to_graphviz(model)\r\n\r\n~/miniconda3/envs/pymc/lib/python3.9/site-packages/pymc3/model_graph.py in model_to_graphviz(model, formatting)\r\n    241         raise ValueError(f\"Unsupported formatting for graph nodes: '{formatting}'. See docstring.\")\r\n    242     model = pm.modelcontext(model)\r\n--> 243     return ModelGraph(model).make_graph(formatting=formatting)\r\n\r\n~/miniconda3/envs/pymc/lib/python3.9/site-packages/pymc3/model_graph.py in make_graph(self, formatting)\r\n    207                 with graph.subgraph(name=\"cluster\" + label) as sub:\r\n    208                     for var_name in var_names:\r\n--> 209                         self._make_node(var_name, sub, formatting=formatting)\r\n    210                     # plate label goes bottom right\r\n    211                     sub.attr(label=label, labeljust=\"r\", labelloc=\"b\", style=\"rounded\")\r\n\r\n~/miniconda3/envs/pymc/lib/python3.9/site-packages/pymc3/model_graph.py in _make_node(self, var_name, graph, formatting)\r\n    148             label = f\"{var_name}\\n~\\nData\"\r\n    149         else:\r\n--> 150             label = v._str_repr(formatting=formatting).replace(\" ~ \", \"\\n~\\n\")\r\n    151 \r\n    152         graph.node(var_name.replace(\":\", \"&\"), label, **attrs)\r\n\r\n~/miniconda3/envs/pymc/lib/python3.9/site-packages/pymc3/model.py in _str_repr(self, name, dist, formatting)\r\n     78         if dist is None and hasattr(self, \"distribution\"):\r\n     79             dist = self.distribution\r\n---> 80         return self.distribution._str_repr(name=name, dist=dist, formatting=formatting)\r\n     81 \r\n     82     def _repr_latex_(self, *, formatting=\"latex_with_params\", **kwargs):\r\n\r\n~/miniconda3/envs/pymc/lib/python3.9/site-packages/pymc3/distributions/distribution.py in _str_repr(self, name, dist, formatting)\r\n    211 \r\n    212         param_names = self._distr_parameters_for_repr()\r\n--> 213         param_values = [\r\n    214             get_repr_for_variable(getattr(dist, x), formatting=formatting) for x in param_names\r\n    215         ]\r\n\r\n~/miniconda3/envs/pymc/lib/python3.9/site-packages/pymc3/distributions/distribution.py in <listcomp>(.0)\r\n    212         param_names = self._distr_parameters_for_repr()\r\n    213         param_values = [\r\n--> 214             get_repr_for_variable(getattr(dist, x), formatting=formatting) for x in param_names\r\n    215         ]\r\n    216 \r\n\r\nAttributeError: 'MvGaussianRandomWalk' object has no attribute 'mu'\r\n```\r\n\r\n</details>\r\n\r\n**Please provide any additional information below.**\r\nThis error is briefly discussed on [discourse](https://discourse.pymc.io/t/attributeerror-mvgaussianrandomwalk-object-has-no-attribute-mu/7709). A related issue might be [4391](https://github.com/pymc-devs/pymc/issues/4391) with corresponding PR [4403](https://github.com/pymc-devs/pymc/pull/4403). \r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.11.2\r\n* Theano Version: 1.1.2\r\n* Python Version: 3.9.6\r\n* Operating system: Ubuntu Linux\r\n* How did you install PyMC3: conda\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5303/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5302", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5302/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5302/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5302/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5302", "id": 1091938404, "node_id": "I_kwDOAALxiM5BFahk", "number": 5302, "title": "Deterministics not resampled in posterior predictive", "user": {"login": "ericmjl", "id": 2631566, "node_id": "MDQ6VXNlcjI2MzE1NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2631566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericmjl", "html_url": "https://github.com/ericmjl", "followers_url": "https://api.github.com/users/ericmjl/followers", "following_url": "https://api.github.com/users/ericmjl/following{/other_user}", "gists_url": "https://api.github.com/users/ericmjl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericmjl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericmjl/subscriptions", "organizations_url": "https://api.github.com/users/ericmjl/orgs", "repos_url": "https://api.github.com/users/ericmjl/repos", "events_url": "https://api.github.com/users/ericmjl/events{/privacy}", "received_events_url": "https://api.github.com/users/ericmjl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2107010938, "node_id": "MDU6TGFiZWwyMTA3MDEwOTM4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/help%20wanted", "name": "help wanted", "color": "b58f13", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26", "html_url": "https://github.com/pymc-devs/pymc/milestone/26", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26/labels", "id": 7210288, "node_id": "MI_kwDOAALxiM4AbgUw", "number": 26, "title": "v4.0.0", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 50, "state": "closed", "created_at": "2021-10-01T14:41:57Z", "updated_at": "2022-11-05T04:50:00Z", "due_on": null, "closed_at": "2022-06-12T18:19:16Z"}, "comments": 8, "created_at": "2022-01-02T02:49:07Z", "updated_at": "2022-05-17T16:55:36Z", "closed_at": "2022-05-17T16:55:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nI noticed that when I want to use `pm.set_data()`, if my model has a `pm.Deterministic` transformation that gets passed into the likelihood, I will get shape issues. \r\n\r\nWithout the use of `pm.Deterministic` in my model, the shapes of posterior predictive samples, when I pass in new data of length 1, are of shape `(chain, draw, 1)`.\r\n\r\nWith the use of `pm.Deterministic` in my model, the shapes of posterior predictive samples, when I pass in new data, are of shape `(chain, draw, n)`, where `n` == \"length of data that I used to fit the model\".\r\n\r\nI believe this is a bug with `pm.Deterministic`s interacting with `pm.set_data`, but I'm not quite sure how to pinpoint the problem.\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n\r\nI found it much easier to provide a reprex as a Jupyter notebook available here: https://gist.github.com/ericmjl/e82b40805805d9feeaff9f39182ff32c\r\n\r\n**Please provide the full traceback.**\r\n\r\nNo traceback necessary.\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: 4.0.0b1\r\n* Aesara/Theano Version: 2.3.2\r\n* Python Version: 3.9.9\r\n* Operating system: Ubuntu Linux\r\n* How did you install PyMC/PyMC3: conda\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5302/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5289", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5289/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5289/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5289/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5289", "id": 1089186778, "node_id": "I_kwDOAALxiM5A66va", "number": 5289, "title": "Exponential CDF gradient is failing", "user": {"login": "AlexAndorra", "id": 30447180, "node_id": "MDQ6VXNlcjMwNDQ3MTgw", "avatar_url": "https://avatars.githubusercontent.com/u/30447180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexAndorra", "html_url": "https://github.com/AlexAndorra", "followers_url": "https://api.github.com/users/AlexAndorra/followers", "following_url": "https://api.github.com/users/AlexAndorra/following{/other_user}", "gists_url": "https://api.github.com/users/AlexAndorra/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexAndorra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexAndorra/subscriptions", "organizations_url": "https://api.github.com/users/AlexAndorra/orgs", "repos_url": "https://api.github.com/users/AlexAndorra/repos", "events_url": "https://api.github.com/users/AlexAndorra/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexAndorra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2021-12-27T11:45:43Z", "updated_at": "2022-01-20T15:40:47Z", "closed_at": "2022-01-20T15:40:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nThe gradient of the Exponential distribution in PyMC is failing because it contains missing or infinite values. \r\nIf you use [the new](https://github.com/pymc-devs/pymc/pull/5231) `find_constrained_prior` function for instance:\r\n```python\r\npm.find_constrained_prior(pm.Exponential, lower=0, upper=1, init_guess={\"lam\": 1})\r\n```\r\nyou get a `ValueError: array must not contain infs or NaNs`\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-3-1eea11105ccf> in <module>\r\n----> 1 pm.find_constrained_prior(pm.Exponential, lower=0, upper=1, init_guess={\"lam\": 1})\r\n\r\n~/tptm_alex/pymc/pymc/func_utils.py in find_constrained_prior(distribution, lower, upper, init_guess, mass, fixed_params)\r\n    112         jac = \"2-point\"\r\n    113\r\n--> 114     opt = optimize.least_squares(cdf_error_fn, x0=list(init_guess.values()), jac=jac)\r\n    115     if not opt.success:\r\n    116         raise ValueError(\"Optimization of parameters failed.\")\r\n\r\n~/opt/anaconda3/envs/pymc-dev-py39/lib/python3.9/site-packages/scipy/optimize/_lsq/least_squares.py in least_squares(fun, x0, jac, bounds, method, ftol, xtol, gtol, x_scale, loss, f_scale, diff_step, tr_solver, tr_options, jac_sparsity, max_nfev, verbose, args, kwargs)\r\n    926\r\n    927     elif method == 'trf':\r\n--> 928         result = trf(fun_wrapped, jac_wrapped, x0, f0, J0, lb, ub, ftol, xtol,\r\n    929                      gtol, max_nfev, x_scale, loss_function, tr_solver,\r\n    930                      tr_options.copy(), verbose)\r\n\r\n~/opt/anaconda3/envs/pymc-dev-py39/lib/python3.9/site-packages/scipy/optimize/_lsq/trf.py in trf(fun, jac, x0, f0, J0, lb, ub, ftol, xtol, gtol, max_nfev, x_scale, loss_function, tr_solver, tr_options, verbose)\r\n    117     # functions are kept the most readable.\r\n    118     if np.all(lb == -np.inf) and np.all(ub == np.inf):\r\n--> 119         return trf_no_bounds(\r\n    120             fun, jac, x0, f0, J0, ftol, xtol, gtol, max_nfev, x_scale,\r\n    121             loss_function, tr_solver, tr_options, verbose)\r\n\r\n~/opt/anaconda3/envs/pymc-dev-py39/lib/python3.9/site-packages/scipy/optimize/_lsq/trf.py in trf_no_bounds(fun, jac, x0, f0, J0, ftol, xtol, gtol, max_nfev, x_scale, loss_function, tr_solver, tr_options, verbose)\r\n    465         if tr_solver == 'exact':\r\n    466             J_h = J * d\r\n--> 467             U, s, V = svd(J_h, full_matrices=False)\r\n    468             V = V.T\r\n    469             uf = U.T.dot(f)\r\n\r\n~/opt/anaconda3/envs/pymc-dev-py39/lib/python3.9/site-packages/scipy/linalg/decomp_svd.py in svd(a, full_matrices, compute_uv, overwrite_a, check_finite, lapack_driver)\r\n    106\r\n    107     \"\"\"\r\n--> 108     a1 = _asarray_validated(a, check_finite=check_finite)\r\n    109     if len(a1.shape) != 2:\r\n    110         raise ValueError('expected matrix')\r\n\r\n~/opt/anaconda3/envs/pymc-dev-py39/lib/python3.9/site-packages/scipy/_lib/_util.py in _asarray_validated(a, check_finite, sparse_ok, objects_ok, mask_ok, as_inexact)\r\n    291             raise ValueError('masked arrays are not supported')\r\n    292     toarray = np.asarray_chkfinite if check_finite else np.asarray\r\n--> 293     a = toarray(a)\r\n    294     if not objects_ok:\r\n    295         if a.dtype is np.dtype('O'):\r\n\r\n~/opt/anaconda3/envs/pymc-dev-py39/lib/python3.9/site-packages/numpy/lib/function_base.py in asarray_chkfinite(a, dtype, order)\r\n    486     a = asarray(a, dtype=dtype, order=order)\r\n    487     if a.dtype.char in typecodes['AllFloat'] and not np.isfinite(a).all():\r\n--> 488         raise ValueError(\r\n    489             \"array must not contain infs or NaNs\")\r\n    490     return a\r\n\r\nValueError: array must not contain infs or NaNs\r\n```\r\n\r\n</details>\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: dev version\r\n* Aesara/Theano Version: 2.3.3\r\n* Python Version: 3.9.7\r\n* Operating system: MacOS\r\n* How did you install PyMC/PyMC3: local install\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5289/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5287", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5287/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5287/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5287/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5287", "id": 1088500261, "node_id": "PR_kwDOAALxiM4wROX8", "number": 5287, "title": "Define `rtd_version` for locally build docs", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 86794, "node_id": "MDU6TGFiZWw4Njc5NA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/docs", "name": "docs", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-12-24T21:27:37Z", "updated_at": "2021-12-24T22:20:50Z", "closed_at": "2021-12-24T22:20:46Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5287", "html_url": "https://github.com/pymc-devs/pymc/pull/5287", "diff_url": "https://github.com/pymc-devs/pymc/pull/5287.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5287.patch", "merged_at": "2021-12-24T22:20:46Z"}, "body": "Closes #5284\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5287/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5254", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5254/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5254/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5254/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5254", "id": 1077581962, "node_id": "I_kwDOAALxiM5AOpiK", "number": 5254, "title": "sample_prior_predictive generates NxN samples instead of N for samples=N", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}, {"id": 1715881852, "node_id": "MDU6TGFiZWwxNzE1ODgxODUy", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/wontfix", "name": "wontfix", "color": "efefff", "default": true, "description": ""}, {"id": 2809192918, "node_id": "MDU6TGFiZWwyODA5MTkyOTE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v3", "name": "v3", "color": "F92E0C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-12-11T16:28:35Z", "updated_at": "2022-11-03T14:11:28Z", "closed_at": "2022-11-03T14:11:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Running 3.11.4 on Colab, with a likelihood as follows:\r\n\r\n```python\r\n    # Likelihood\r\n    pm.NegativeBinomial('obs',\r\n                 growth,\r\n                 alpha=pm.Gamma(\"alpha\", mu=6, sigma=1),\r\n                 observed=confirmed_data)\r\n    \r\n    prior_pred = pm.sample_prior_predictive(100)\r\n```\r\n\r\nand\r\n\r\n```python\r\nconfirmed_data = pm.Data('confirmed', df_country.confirmed.values)\r\n```\r\n\r\nhaving shape `(650,)` results in `prior_pred[\"obs\"]` having shape `(100, 100, 650)`. The graph shows no evidence of an extra dimension anywhere.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5254/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5252", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5252/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5252/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5252/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5252", "id": 1076971947, "node_id": "I_kwDOAALxiM5AMUmr", "number": 5252, "title": "Simulator tests failing sporadically", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2548173976, "node_id": "MDU6TGFiZWwyNTQ4MTczOTc2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/needs%20info", "name": "needs info", "color": "fbca04", "default": false, "description": "Additional information required"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-12-10T15:35:59Z", "updated_at": "2022-01-04T04:18:09Z", "closed_at": "2022-01-04T04:18:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Main tests are failing after #5233\n https://github.com/pymc-devs/pymc/runs/4480177015?check_suite_focus=true\n\nI found a different Simulator related test failing before but it went away when I reran the tests. \n\nSomething subtle must have changed with that PR likely related to the Simulator logp parsing.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5252/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5236", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5236/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5236/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5236/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5236", "id": 1070472564, "node_id": "I_kwDOAALxiM4_zh10", "number": 5236, "title": "inferencedata.log_likelihood is summing observations", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2107010938, "node_id": "MDU6TGFiZWwyMTA3MDEwOTM4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/help%20wanted", "name": "help wanted", "color": "b58f13", "default": true, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}, {"id": 3425466025, "node_id": "LA_kwDOAALxiM7MLHap", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/trace-backend", "name": "trace-backend", "color": "0F37D2", "default": false, "description": "Traces and ArviZ stuff"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19", "html_url": "https://github.com/pymc-devs/pymc/milestone/19", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19/labels", "id": 6130583, "node_id": "MDk6TWlsZXN0b25lNjEzMDU4Mw==", "number": 19, "title": "v4.0.0b1 (vNext)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 65, "state": "closed", "created_at": "2020-11-20T09:32:38Z", "updated_at": "2021-12-16T14:23:33Z", "due_on": null, "closed_at": "2021-12-16T14:23:33Z"}, "comments": 2, "created_at": "2021-12-03T11:03:38Z", "updated_at": "2021-12-13T09:42:43Z", "closed_at": "2021-12-13T09:42:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When talking with @lucianopaz I realized we completely broke log_likelihood computation in V4.\r\n\r\n```python\r\nimport pymc as pm\r\nwith pm.Model() as m:\r\n    y = pm.Normal(\"y\")\r\n    x = pm.Normal(\"x\", y, 1, observed=[5, 2])    \r\n    idata = pm.sample(tune=5, draws=5, chains=2)\r\nprint(idata.log_likelihood['x'].values.shape)\r\n# (2, 5, 1)\r\n```\r\n\r\nWhereas in V3:\r\n```python\r\nimport pymc3 as pm\r\nwith pm.Model() as m:\r\n    y = pm.Normal(\"y\")\r\n    x = pm.Normal(\"x\", y, 1, observed=[5, 2])    \r\n    idata = pm.sample(tune=5, draws=5, chains=2, return_inferencedata=True)\r\nprint(idata.log_likelihood['x'].values.shape)\r\n# (2, 5, 2)\r\n```\r\n\r\nThis happened because the default `model.logpt` now returns the `summed` logp by default whereas before it returned the vectorized logp by default. The change was done in https://github.com/pymc-devs/pymc/commit/0a172c87e39ee64bf5101a5887281ad6548e6ea4\r\n\r\nAlthough that is a more sane default, we have to reintroduce an easy helper `logp_elemwiset` (I think this is pretty much broken right now as well) which calls `logpt` with `sum=False`. \r\n\r\nAlso in this case we might want to just return the logprob terms as the dictionary items that are returned by `aeppl.factorized_joint_lopgrob` and let the end-user decide how he wants to combine them. These keys contain `{value variable: logp term}`. The default of calling `at.add` on all variables when `sum=False` is seldom useful (that's why we switched the default), due to potential unwanted broadcasting across variables with different dimensions.\r\n\r\nOne extra advantage of returning the dictionary items is that we don't need to create nearly duplicated graphs for each observed variable when computing the log-likelihood here:\r\n\r\nhttps://github.com/pymc-devs/pymc/blob/fe2d101bb27e05b889eafda7e54b07e05250faee/pymc/backends/arviz.py#L268\r\n\r\nWe can request it for any number of observed variables at the same time, and then simply compile a function that has each variable logp term as an output, but otherwise shares the common nodes, saving on compilation, computation and memory footprint, when a model has more than one observed variable. \r\n\r\nFor instance, this nested loop would no longer be needed:\r\n\r\nhttps://github.com/pymc-devs/pymc/blob/fe2d101bb27e05b889eafda7e54b07e05250faee/pymc/backends/arviz.py#L276-L282\r\n\r\nCC @OriolAbril ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5236/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5236/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5205", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5205/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5205/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5205/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5205", "id": 1057420354, "node_id": "I_kwDOAALxiM4_BvRC", "number": 5205, "title": "Sampling issues due to Aeppl logp assertions", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3561358894, "node_id": "LA_kwDOAALxiM7URgYu", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/logprob-related", "name": "logprob-related", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19", "html_url": "https://github.com/pymc-devs/pymc/milestone/19", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19/labels", "id": 6130583, "node_id": "MDk6TWlsZXN0b25lNjEzMDU4Mw==", "number": 19, "title": "v4.0.0b1 (vNext)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 65, "state": "closed", "created_at": "2020-11-20T09:32:38Z", "updated_at": "2021-12-16T14:23:33Z", "due_on": null, "closed_at": "2021-12-16T14:23:33Z"}, "comments": 1, "created_at": "2021-11-18T14:27:06Z", "updated_at": "2021-12-10T06:18:54Z", "closed_at": "2021-12-10T06:18:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As discussed in https://github.com/aesara-devs/aeppl/issues/84, Aeppl introduced explicit Aesara asserts in the logp graphs of several distributions. Until a rewrite is implemented ~there or~ here, we can expect to see some `AssertionErrors` crashing `pm.sampling`. \r\n\r\nFor instance, one of the test regression documented in #5088 was precisely because of this.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5205/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5191", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5191/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5191/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5191/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5191", "id": 1054954667, "node_id": "I_kwDOAALxiM4-4VSr", "number": 5191, "title": "Test suite failing in latest version of aeppl", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-11-16T14:35:54Z", "updated_at": "2021-11-18T20:42:52Z", "closed_at": "2021-11-18T20:42:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I have opened an issue in https://github.com/aesara-devs/aeppl/issues/92\r\n\r\nIt is still unclear what is going on, but seems related to transforms", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5191/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5181", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5181/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5181/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5181/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5181", "id": 1052652063, "node_id": "I_kwDOAALxiM4-vjIf", "number": 5181, "title": "RV size is not correctly inferred from dims", "user": {"login": "lucianopaz", "id": 5230109, "node_id": "MDQ6VXNlcjUyMzAxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5230109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucianopaz", "html_url": "https://github.com/lucianopaz", "followers_url": "https://api.github.com/users/lucianopaz/followers", "following_url": "https://api.github.com/users/lucianopaz/following{/other_user}", "gists_url": "https://api.github.com/users/lucianopaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucianopaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucianopaz/subscriptions", "organizations_url": "https://api.github.com/users/lucianopaz/orgs", "repos_url": "https://api.github.com/users/lucianopaz/repos", "events_url": "https://api.github.com/users/lucianopaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lucianopaz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26", "html_url": "https://github.com/pymc-devs/pymc/milestone/26", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/26/labels", "id": 7210288, "node_id": "MI_kwDOAALxiM4AbgUw", "number": 26, "title": "v4.0.0", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 50, "state": "closed", "created_at": "2021-10-01T14:41:57Z", "updated_at": "2022-11-05T04:50:00Z", "due_on": null, "closed_at": "2022-06-12T18:19:16Z"}, "comments": 6, "created_at": "2021-11-13T10:43:29Z", "updated_at": "2022-05-06T14:51:42Z", "closed_at": "2022-05-06T14:51:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nWhile writing a hierarchical model, I ran into a shape problem. Minimally, what I want to do looks like this:\r\n\r\n```python\r\n>>> with pm.Model(coords={\"feature\": [1], \"group\": [\"A\", \"B\"]}):\r\n...     x = pm.Normal(\"x\", 0, 1, dims=\"feature\")\r\n...     y = pm.Normal(\"y\", x[..., None], 1, dims=(\"feature\", \"group\"))\r\n... y.shape.eval()\r\nWARNING (aesara.tensor.basic_opt): Failed to infer_shape from Op normal_rv{0, (0, 0), floatX, True}.\r\nInput shapes: [None, (TensorConstant{0},), (), (<TensorType(int64, scalar)>, TensorConstant{1}), ()]\r\nException encountered during infer_shape: <class 'Exception'>\r\nException message: sharedvar.value does not exist anymore. Use sharedvar.get_value() or sharedvar.set_value() instead.\r\nTraceback: Traceback (most recent call last):\r\n  File \"/home/lpaz/repos/aesara/aesara/tensor/basic_opt.py\", line 867, in get_node_infer_shape\r\n    o_shapes = shape_infer(\r\n  File \"/home/lpaz/repos/aesara/aesara/tensor/random/op.py\", line 299, in infer_shape\r\n    shape = self._infer_shape(size, dist_params, param_shapes=param_shapes)\r\n  File \"/home/lpaz/repos/aesara/aesara/tensor/random/op.py\", line 196, in _infer_shape\r\n    param_shapes = params_broadcast_shapes(\r\n  File \"/home/lpaz/repos/aesara/aesara/tensor/random/utils.py\", line 47, in params_broadcast_shapes\r\n    rev_extra_dims = [\r\n  File \"/home/lpaz/repos/aesara/aesara/tensor/random/utils.py\", line 48, in <listcomp>\r\n    max_bcast(a, b)\r\n  File \"/home/lpaz/repos/aesara/aesara/tensor/random/utils.py\", line 41, in max_bcast\r\n    if getattr(x, \"value\", x) == 1:\r\n  File \"/home/lpaz/repos/aesara/aesara/compile/sharedvalue.py\", line 211, in _value_get\r\n    raise Exception(\r\nException: sharedvar.value does not exist anymore. Use sharedvar.get_value() or sharedvar.set_value() instead.\r\narray([1, 1])\r\n```\r\n\r\nSo the shape of `y` is inferred incorrectly, and this led to problems downstream in the full model. If instead of using `dims`, I use `size`, everything works fine.\r\n\r\n```python\r\n>>> with pm.Model(coords={\"feature\": [1], \"group\": [\"A\", \"B\"]}):\r\n...     x = pm.Normal(\"x\", 0, 1, size=(1,))\r\n...     y = pm.Normal(\"y\", x[..., None], 1, size=(1, 2))\r\n... y.shape.eval()\r\narray([1, 2])\r\n```\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: main branch at commit 073e26b9\r\n* Aesara/Theano Version: 2.2.6\r\n* Python Version: 3.8.5\r\n* Operating system: Ubuntu 18.04\r\n* How did you install PyMC/PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5181/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5172", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5172/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5172/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5172/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5172", "id": 1051003228, "node_id": "I_kwDOAALxiM4-pQlc", "number": 5172, "title": "Calling `rvs_to_value_vars` modifies `model.free_RVs`", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19", "html_url": "https://github.com/pymc-devs/pymc/milestone/19", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19/labels", "id": 6130583, "node_id": "MDk6TWlsZXN0b25lNjEzMDU4Mw==", "number": 19, "title": "v4.0.0b1 (vNext)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 65, "state": "closed", "created_at": "2020-11-20T09:32:38Z", "updated_at": "2021-12-16T14:23:33Z", "due_on": null, "closed_at": "2021-12-16T14:23:33Z"}, "comments": 2, "created_at": "2021-11-11T13:53:29Z", "updated_at": "2021-11-16T18:41:59Z", "closed_at": "2021-11-16T18:41:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This error was found while working on #5170:\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nwith pm.Model() as pmodel:\r\n    hyper = pm.LogNormal(\"hyper\", mu=0)\r\n    group = pm.LogNormal(\"group\", mu=at.log(hyper))\r\n\r\n    # We add potentials or deterministics that are not in topological order\r\n    pm.Potential('group_pot', group)\r\n    pm.Potential(\"hyper_pot\", hyper)\r\n\r\n    before = len(FunctionGraph(outputs=pmodel.free_RVs).toposort())\r\n\r\n    # This call will change the model free_RVs in place!\r\n    # rvs_to_value_vars(pmodel.deterministics, apply_transforms=True)\r\n    rvs_to_value_vars(pmodel.potentials, apply_transforms=True)\r\n\r\n    after = len(FunctionGraph(outputs=pmodel.free_RVs).toposort())\r\n\r\n    assert before == after\r\n```\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/ricardo/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/IPython/core/interactiveshell.py\", line 3418, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-9-66cc9d4cc5c8>\", line 37, in <module>\r\n    assert before == after\r\nAssertionError\r\n```\r\n\r\nThe same happens with the `Deterministics`, and can be checked by flipping the commented lines and commenting those referring to `Potentials`\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: `main`\r\n* Aesara/Theano Version: `2.2.6`\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5172/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5168", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5168/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5168/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5168/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5168", "id": 1049651666, "node_id": "I_kwDOAALxiM4-kGnS", "number": 5168, "title": "Recursion problems in `make_initial_point_expression`", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2107010938, "node_id": "MDU6TGFiZWwyMTA3MDEwOTM4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/help%20wanted", "name": "help wanted", "color": "b58f13", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19", "html_url": "https://github.com/pymc-devs/pymc/milestone/19", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19/labels", "id": 6130583, "node_id": "MDk6TWlsZXN0b25lNjEzMDU4Mw==", "number": 19, "title": "v4.0.0b1 (vNext)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 65, "state": "closed", "created_at": "2020-11-20T09:32:38Z", "updated_at": "2021-12-16T14:23:33Z", "due_on": null, "closed_at": "2021-12-16T14:23:33Z"}, "comments": 7, "created_at": "2021-11-10T10:28:39Z", "updated_at": "2021-11-12T18:27:56Z", "closed_at": "2021-11-12T18:27:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nI have a rather big model that's taking ages to compile the initial point function, eventually running into a `MemoryError` after ~45 minutes.\r\n\r\nThe model involes a latent GP and __lots__ of subindexing.\r\n\r\n__UPDATE:__ It happens also without the GP.\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\nhttps://github.com/pymc-devs/pymc/issues/5168#issuecomment-965237335\r\n\r\n**Please provide the full traceback.**\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\nc:\\users\\osthege\\repos\\pymc-main\\pymc\\sampling.py in sample(draws, step, init, n_init, initvals, trace, chain_idx, chains, cores, tune, progressbar, model, random_seed, discard_tuned_samples, compute_convergence_checks, callback, jitter_max_retries, return_inferencedata, idata_kwargs, mp_ctx, **kwargs)\r\n    480             # By default, try to use NUTS\r\n    481             _log.info(\"Auto-assigning NUTS sampler...\")\r\n--> 482             initial_points, step = init_nuts(\r\n    483                 init=init,\r\n    484                 chains=chains,\r\n\r\nc:\\users\\osthege\\repos\\pymc-main\\pymc\\sampling.py in init_nuts(init, chains, n_init, model, seeds, progressbar, jitter_max_retries, tune, initvals, **kwargs)\r\n   2191     ]\r\n   2192 \r\n-> 2193     initial_points = _init_jitter(\r\n   2194         model,\r\n   2195         initvals,\r\n\r\nc:\\users\\osthege\\repos\\pymc-main\\pymc\\sampling.py in _init_jitter(model, initvals, seeds, jitter, jitter_max_retries)\r\n   2060     \"\"\"\r\n   2061 \r\n-> 2062     ipfns = make_initial_point_fns_per_chain(\r\n   2063         model=model,\r\n   2064         overrides=initvals,\r\n\r\nc:\\users\\osthege\\repos\\pymc-main\\pymc\\initial_point.py in make_initial_point_fns_per_chain(model, overrides, jitter_rvs, chains)\r\n    102         # Only one function compilation is needed.\r\n    103         ipfns = [\r\n--> 104             make_initial_point_fn(\r\n    105                 model=model,\r\n    106                 overrides=overrides,\r\n\r\nc:\\users\\osthege\\repos\\pymc-main\\pymc\\initial_point.py in make_initial_point_fn(model, overrides, jitter_rvs, default_strategy, return_transformed)\r\n    165     overrides = convert_str_to_rv_dict(model, overrides or {})\r\n    166 \r\n--> 167     initial_values = make_initial_point_expression(\r\n    168         free_rvs=model.free_RVs,\r\n    169         rvs_to_values=model.rvs_to_values,\r\n\r\nc:\\users\\osthege\\repos\\pymc-main\\pymc\\initial_point.py in make_initial_point_expression(free_rvs, rvs_to_values, initval_strategies, jitter_rvs, default_strategy, return_transformed)\r\n    318     for i in range(n_variables):\r\n    319         outputs = [initial_values_clone[i], initial_values_transformed_clone[i]]\r\n--> 320         graph = FunctionGraph(outputs=outputs, clone=False)\r\n    321         graph.replace_all(zip(free_rvs_clone[:i], initial_values), import_missing=True)\r\n    322         initial_values.append(graph.outputs[0])\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\CARenv\\lib\\site-packages\\aesara\\graph\\fg.py in __init__(self, inputs, outputs, features, clone, update_mapping, memo, copy_inputs, copy_orphans)\r\n    165 \r\n    166         for output in outputs:\r\n--> 167             self.import_var(output, reason=\"init\")\r\n    168         for i, output in enumerate(outputs):\r\n    169             self.clients[output].append((\"output\", i))\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\CARenv\\lib\\site-packages\\aesara\\graph\\fg.py in import_var(self, var, reason, import_missing)\r\n    335         # Imports the owners of the variables\r\n    336         if var.owner and var.owner not in self.apply_nodes:\r\n--> 337             self.import_node(var.owner, reason=reason, import_missing=import_missing)\r\n    338         elif (\r\n    339             var.owner is None\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\CARenv\\lib\\site-packages\\aesara\\graph\\fg.py in import_node(self, apply_node, check, reason, import_missing)\r\n    379         # input set.  (The functions in the graph module only use the input set\r\n    380         # to know where to stop going down.)\r\n--> 381         new_nodes = io_toposort(self.variables, apply_node.outputs)\r\n    382 \r\n    383         if check:\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\CARenv\\lib\\site-packages\\aesara\\graph\\basic.py in io_toposort(inputs, outputs, orderings, clients)\r\n   1160             else:\r\n   1161                 todo.append(cur)\r\n-> 1162                 todo.extend(i.owner for i in cur.inputs if i.owner)\r\n   1163         return order\r\n   1164 \r\n\r\nMemoryError: \r\n```\r\n\r\n</details>\r\n\r\n**Please provide any additional information below.**\r\n\r\nInterestingly I can do `.eval()` on the likelihoods in the model just fine.\r\n\r\nAny ideas?\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: latest `main`\r\n* Aesara/Theano Version: 2.2.6\r\n* Python Version: 3.8.10\r\n* Operating system: Windows 10\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5168/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5162", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5162/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5162/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5162/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5162", "id": 1048500625, "node_id": "I_kwDOAALxiM4-ftmR", "number": 5162, "title": "Deprecate `assert_negative_support`", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/35", "html_url": "https://github.com/pymc-devs/pymc/milestone/35", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/35/labels", "id": 8079613, "node_id": "MI_kwDOAALxiM4Ae0j9", "number": 35, "title": "v4.2.0", "description": "", "creator": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2022-06-14T10:25:10Z", "updated_at": "2022-10-09T13:02:10Z", "due_on": null, "closed_at": "2022-10-09T13:02:10Z"}, "comments": 4, "created_at": "2021-11-09T11:35:17Z", "updated_at": "2022-07-13T14:57:22Z", "closed_at": "2022-07-13T14:57:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In a lot of distributions we have a call to `assert_negative_support` which in V4 is not doing anything because we are not using the output anywhere:\r\n\r\nhttps://github.com/pymc-devs/pymc/blob/bdd4d1992f11cab9202774b14b8044ddf0cb7674/pymc/distributions/continuous.py#L200-L203\r\n\r\nhttps://github.com/pymc-devs/pymc/blob/bdd4d1992f11cab9202774b14b8044ddf0cb7674/pymc/distributions/continuous.py#L841-L851\r\n\r\nBut we might not want to use this as is, see https://github.com/aesara-devs/aeppl/issues/84\r\n\r\nIn V3 it seems this was doing some hackish test: https://github.com/pymc-devs/pymc/blob/c332f8c957bb2ebaf346832f440e5ee94b65026a/pymc3/distributions/continuous.py#L120-L138\r\n\r\nShould we just remove the call? If we want to do the kind of V3 check era we should probably do it properly by adding domain information to the RandomVariables instead of doing the -1e-6 logp test.\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5162/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5134", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5134/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5134/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5134/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5134", "id": 1043854013, "node_id": "I_kwDOAALxiM4-N_K9", "number": 5134, "title": "Fix regression in `test_step` caused by #5131", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}, {"id": 2031712615, "node_id": "MDU6TGFiZWwyMDMxNzEyNjE1", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/maintenance", "name": "maintenance", "color": "71f271", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19", "html_url": "https://github.com/pymc-devs/pymc/milestone/19", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19/labels", "id": 6130583, "node_id": "MDk6TWlsZXN0b25lNjEzMDU4Mw==", "number": 19, "title": "v4.0.0b1 (vNext)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 65, "state": "closed", "created_at": "2020-11-20T09:32:38Z", "updated_at": "2021-12-16T14:23:33Z", "due_on": null, "closed_at": "2021-12-16T14:23:33Z"}, "comments": 1, "created_at": "2021-11-03T17:04:58Z", "updated_at": "2021-11-05T09:35:14Z", "closed_at": "2021-11-05T09:35:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The test failures are coming from #5131 because the Metropolis proposals are no longer following a global seeding, but several tests in `test_step` are based on this assumption.\r\n\r\n_Originally posted by @ricardoV94 in https://github.com/pymc-devs/pymc/issues/5133#issuecomment-959735892_", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5134/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5133", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5133/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5133/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5133/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5133", "id": 1043799636, "node_id": "PR_kwDOAALxiM4uDAnl", "number": 5133, "title": "Do not compare arrays with strings in make_initial_point_expression", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-11-03T16:16:24Z", "updated_at": "2021-12-08T14:38:03Z", "closed_at": "2021-11-03T17:06:44Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5133", "html_url": "https://github.com/pymc-devs/pymc/pull/5133", "diff_url": "https://github.com/pymc-devs/pymc/pull/5133.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5133.patch", "merged_at": "2021-11-03T17:06:44Z"}, "body": "This gets rid of numpy FutureWarnings when we set the initval to an array:\r\n\r\n```python\r\nimport numpy as np\r\nimport pymc as pm\r\n\r\nwith pm.Model() as m:\r\n  x = pm.Normal('x', size=10, initval=np.arange(10))\r\nm.recompute_initial_point()\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5133/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5130", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5130/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5130/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5130/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5130", "id": 1043378194, "node_id": "PR_kwDOAALxiM4uB0IH", "number": 5130, "title": "Update Aesara dependency and add regression test for #5090", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19", "html_url": "https://github.com/pymc-devs/pymc/milestone/19", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19/labels", "id": 6130583, "node_id": "MDk6TWlsZXN0b25lNjEzMDU4Mw==", "number": 19, "title": "v4.0.0b1 (vNext)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 65, "state": "closed", "created_at": "2020-11-20T09:32:38Z", "updated_at": "2021-12-16T14:23:33Z", "due_on": null, "closed_at": "2021-12-16T14:23:33Z"}, "comments": 1, "created_at": "2021-11-03T10:39:25Z", "updated_at": "2022-01-31T09:23:37Z", "closed_at": "2021-11-03T12:39:46Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5130", "html_url": "https://github.com/pymc-devs/pymc/pull/5130", "diff_url": "https://github.com/pymc-devs/pymc/pull/5130.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5130.patch", "merged_at": "2021-11-03T12:39:46Z"}, "body": "Closes #5090 ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5130/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5099", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5099/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5099/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5099/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5099", "id": 1035116980, "node_id": "I_kwDOAALxiM49sqG0", "number": 5099, "title": "`TestMLDA.test_aem_mu_sigma` is failing", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mikkelbue", "id": 7152798, "node_id": "MDQ6VXNlcjcxNTI3OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7152798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikkelbue", "html_url": "https://github.com/mikkelbue", "followers_url": "https://api.github.com/users/mikkelbue/followers", "following_url": "https://api.github.com/users/mikkelbue/following{/other_user}", "gists_url": "https://api.github.com/users/mikkelbue/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikkelbue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikkelbue/subscriptions", "organizations_url": "https://api.github.com/users/mikkelbue/orgs", "repos_url": "https://api.github.com/users/mikkelbue/repos", "events_url": "https://api.github.com/users/mikkelbue/events{/privacy}", "received_events_url": "https://api.github.com/users/mikkelbue/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mikkelbue", "id": 7152798, "node_id": "MDQ6VXNlcjcxNTI3OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7152798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikkelbue", "html_url": "https://github.com/mikkelbue", "followers_url": "https://api.github.com/users/mikkelbue/followers", "following_url": "https://api.github.com/users/mikkelbue/following{/other_user}", "gists_url": "https://api.github.com/users/mikkelbue/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikkelbue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikkelbue/subscriptions", "organizations_url": "https://api.github.com/users/mikkelbue/orgs", "repos_url": "https://api.github.com/users/mikkelbue/repos", "events_url": "https://api.github.com/users/mikkelbue/events{/privacy}", "received_events_url": "https://api.github.com/users/mikkelbue/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/25", "html_url": "https://github.com/pymc-devs/pymc/milestone/25", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/25/labels", "id": 6910899, "node_id": "MDk6TWlsZXN0b25lNjkxMDg5OQ==", "number": 25, "title": "v4.0.0b2", "description": "", "creator": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 21, "state": "closed", "created_at": "2021-07-02T08:30:43Z", "updated_at": "2022-07-02T11:15:56Z", "due_on": null, "closed_at": "2022-01-20T18:52:17Z"}, "comments": 3, "created_at": "2021-10-25T13:07:41Z", "updated_at": "2021-10-26T13:49:58Z", "closed_at": "2021-10-26T13:49:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\n=================================== FAILURES ===================================\r\n1984\r\n__________________________ TestMLDA.test_aem_mu_sigma __________________________\r\n1985\r\n\r\n1986\r\nself = <pymc.tests.test_step.TestMLDA object at 0x7f0d8c30bad0>\r\n1987\r\n\r\n1988\r\n    def test_aem_mu_sigma(self):\r\n1989\r\n        \"\"\"Test that AEM estimates mu_B and Sigma_B in\r\n1990\r\n        the coarse models of a 3-level LR example correctly\"\"\"\r\n1991\r\n        # create data for linear regression\r\n1992\r\n        if aesara.config.floatX == \"float32\":\r\n1993\r\n            p = \"float32\"\r\n1994\r\n        else:\r\n1995\r\n            p = \"float64\"\r\n1996\r\n        np.random.seed(123456)\r\n1997\r\n        size = 200\r\n1998\r\n        true_intercept = 1\r\n1999\r\n        true_slope = 2\r\n2000\r\n        sigma = 1\r\n2001\r\n        x = np.linspace(0, 1, size, dtype=p)\r\n2002\r\n        # y = a + b*x\r\n2003\r\n        true_regression_line = true_intercept + true_slope * x\r\n2004\r\n        # add noise\r\n2005\r\n        y = true_regression_line + np.random.normal(0, sigma ** 2, size)\r\n2006\r\n        s = np.identity(y.shape[0], dtype=p)\r\n2007\r\n        np.fill_diagonal(s, sigma ** 2)\r\n2008\r\n    \r\n2009\r\n        # forward model Op - here, just the regression equation\r\n2010\r\n        class ForwardModel(Op):\r\n2011\r\n            if aesara.config.floatX == \"float32\":\r\n2012\r\n                itypes = [at.fvector]\r\n2013\r\n                otypes = [at.fvector]\r\n2014\r\n            else:\r\n2015\r\n                itypes = [at.dvector]\r\n2016\r\n                otypes = [at.dvector]\r\n2017\r\n    \r\n2018\r\n            def __init__(self, x, pymc_model):\r\n2019\r\n                self.x = x\r\n2020\r\n                self.pymc_model = pymc_model\r\n2021\r\n    \r\n2022\r\n            def perform(self, node, inputs, outputs):\r\n2023\r\n                intercept = inputs[0][0]\r\n2024\r\n                x_coeff = inputs[0][1]\r\n2025\r\n    \r\n2026\r\n                temp = intercept + x_coeff * x + self.pymc_model.bias.get_value()\r\n2027\r\n                with self.pymc_model:\r\n2028\r\n                    set_data({\"model_output\": temp})\r\n2029\r\n                outputs[0][0] = np.array(temp)\r\n2030\r\n    \r\n2031\r\n        # create the coarse models with separate biases\r\n2032\r\n        mout = []\r\n2033\r\n        coarse_models = []\r\n2034\r\n    \r\n2035\r\n        with Model() as coarse_model_0:\r\n2036\r\n            bias = Data(\"bias\", 3.5 * np.ones(y.shape, dtype=p))\r\n2037\r\n            mu_B = Data(\"mu_B\", -1.3 * np.ones(y.shape, dtype=p))\r\n2038\r\n            Sigma_B = Data(\"Sigma_B\", np.zeros((y.shape[0], y.shape[0]), dtype=p))\r\n2039\r\n            model_output = Data(\"model_output\", np.zeros(y.shape, dtype=p))\r\n2040\r\n            Sigma_e = Data(\"Sigma_e\", s)\r\n2041\r\n    \r\n2042\r\n            # Define priors\r\n2043\r\n            intercept = Normal(\"Intercept\", 0, sigma=20)\r\n2044\r\n            x_coeff = Normal(\"x\", 0, sigma=20)\r\n2045\r\n    \r\n2046\r\n            theta = at.as_tensor_variable([intercept, x_coeff])\r\n2047\r\n    \r\n2048\r\n            mout.append(ForwardModel(x, coarse_model_0))\r\n2049\r\n    \r\n2050\r\n            # Define likelihood\r\n2051\r\n            likelihood = MvNormal(\"y\", mu=mout[0](theta) + mu_B, cov=Sigma_e, observed=y)\r\n2052\r\n    \r\n2053\r\n            coarse_models.append(coarse_model_0)\r\n2054\r\n    \r\n2055\r\n        with Model() as coarse_model_1:\r\n2056\r\n            bias = Data(\"bias\", 2.2 * np.ones(y.shape, dtype=p))\r\n2057\r\n            mu_B = Data(\"mu_B\", -2.2 * np.ones(y.shape, dtype=p))\r\n2058\r\n            Sigma_B = Data(\"Sigma_B\", np.zeros((y.shape[0], y.shape[0]), dtype=p))\r\n2059\r\n            model_output = Data(\"model_output\", np.zeros(y.shape, dtype=p))\r\n2060\r\n            Sigma_e = Data(\"Sigma_e\", s)\r\n2061\r\n    \r\n2062\r\n            # Define priors\r\n2063\r\n            intercept = Normal(\"Intercept\", 0, sigma=20)\r\n2064\r\n            x_coeff = Normal(\"x\", 0, sigma=20)\r\n2065\r\n    \r\n2066\r\n            theta = at.as_tensor_variable([intercept, x_coeff])\r\n2067\r\n    \r\n2068\r\n            mout.append(ForwardModel(x, coarse_model_1))\r\n2069\r\n    \r\n2070\r\n            # Define likelihood\r\n2071\r\n            likelihood = MvNormal(\"y\", mu=mout[1](theta) + mu_B, cov=Sigma_e, observed=y)\r\n2072\r\n    \r\n2073\r\n            coarse_models.append(coarse_model_1)\r\n2074\r\n    \r\n2075\r\n        # fine model and inference\r\n2076\r\n        with Model() as model:\r\n2077\r\n            bias = Data(\"bias\", np.zeros(y.shape, dtype=p))\r\n2078\r\n            model_output = Data(\"model_output\", np.zeros(y.shape, dtype=p))\r\n2079\r\n            Sigma_e = Data(\"Sigma_e\", s)\r\n2080\r\n    \r\n2081\r\n            # Define priors\r\n2082\r\n            intercept = Normal(\"Intercept\", 0, sigma=20)\r\n2083\r\n            x_coeff = Normal(\"x\", 0, sigma=20)\r\n2084\r\n    \r\n2085\r\n            theta = at.as_tensor_variable([intercept, x_coeff])\r\n2086\r\n    \r\n2087\r\n            mout.append(ForwardModel(x, model))\r\n2088\r\n    \r\n2089\r\n            # Define likelihood\r\n2090\r\n            likelihood = MvNormal(\"y\", mu=mout[-1](theta), cov=Sigma_e, observed=y)\r\n2091\r\n    \r\n2092\r\n            step_mlda = MLDA(coarse_models=coarse_models, adaptive_error_model=True)\r\n2093\r\n    \r\n2094\r\n            trace_mlda = sample(\r\n2095\r\n                draws=100,\r\n2096\r\n                step=step_mlda,\r\n2097\r\n                chains=1,\r\n2098\r\n                tune=200,\r\n2099\r\n                discard_tuned_samples=True,\r\n2100\r\n                random_seed=84759238,\r\n2101\r\n            )\r\n2102\r\n    \r\n2103\r\n            m0 = step_mlda.step_method_below.model_below.mu_B.get_value()\r\n2104\r\n            s0 = step_mlda.step_method_below.model_below.Sigma_B.get_value()\r\n2105\r\n            m1 = step_mlda.model_below.mu_B.get_value()\r\n2106\r\n            s1 = step_mlda.model_below.Sigma_B.get_value()\r\n2107\r\n    \r\n2108\r\n>           assert np.allclose(m0, -3.5)\r\n2109\r\nE           assert False\r\n2110\r\nE            +  where False = <function allclose at 0x7f0df851a4d0>(array([-3.487413 , -3.4893727, -3.4913301, -3.493289 , -3.495273 ,\\n       -3.49723  , -3.49919  , -3.5011551, -3.50311...44214, -3.8663938, -3.8683414,\\n       -3.8703194, -3.8722787, -3.874239 , -3.876195 , -3.8781743],\\n      dtype=float32), -3.5)\r\n2111\r\nE            +    where <function allclose at 0x7f0df851a4d0> = np.allclose\r\n2112\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5099/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5090", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5090/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5090/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5090/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5090", "id": 1031491406, "node_id": "I_kwDOAALxiM49e09O", "number": 5090, "title": "recompute_test_point fails after pickling", "user": {"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19", "html_url": "https://github.com/pymc-devs/pymc/milestone/19", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19/labels", "id": 6130583, "node_id": "MDk6TWlsZXN0b25lNjEzMDU4Mw==", "number": 19, "title": "v4.0.0b1 (vNext)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 65, "state": "closed", "created_at": "2020-11-20T09:32:38Z", "updated_at": "2021-12-16T14:23:33Z", "due_on": null, "closed_at": "2021-12-16T14:23:33Z"}, "comments": 1, "created_at": "2021-10-20T14:37:43Z", "updated_at": "2021-11-03T12:39:46Z", "closed_at": "2021-11-03T12:39:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Recompute_test_point fails after pickling\r\n\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\ndef test_pickling():\r\n    import cloudpickle\r\n    with pm.Model() as model:\r\n        pm.Normal(\"one\")\r\n    model = cloudpickle.loads(cloudpickle.dumps(model))\r\n    model.recompute_initial_point()\r\n```\r\n\r\n**Please provide the full traceback.**\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\n>       model.recompute_initial_point()\r\n\r\npymc/tests/test_initial_point.py:74:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\npymc/model.py:945: in recompute_initial_point\r\n    fn = make_initial_point_fn(model=self, return_transformed=True)\r\npymc/initial_point.py:185: in make_initial_point_fn\r\n    graph.replace_all(zip(rng_nodes, new_rng_nodes), import_missing=True)\r\n../../.pyenv/versions/3.8.7/envs/pymc3/lib/python3.8/site-packages/aesara/graph/fg.py:554: in replace_all\r\n    self.replace(var, new_var, **kwargs)\r\n../../.pyenv/versions/3.8.7/envs/pymc3/lib/python3.8/site-packages/aesara/graph/fg.py:515: in replace\r\n    new_var = var.type.filter_variable(new_var, allow_convert=True)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = RandomStateType, other = RandomStateSharedVariable(<RandomState(PCG64) at 0x7FEE7A091240>), allow_convert = True\r\n\r\n    def filter_variable(\r\n        self, other: Union[Variable, D], allow_convert: bool = True\r\n    ) -> Variable:\r\n        r\"\"\"Convert a symbolic variable into this `Type`, if compatible.\r\n\r\n        For the moment, the only `Type`\\s compatible with one another are\r\n        `TensorType` and `GpuArrayType`, provided they have the same number of\r\n        dimensions, same broadcasting pattern, and same dtype.\r\n\r\n        If `Type`\\s are not compatible, a ``TypeError`` should be raised.\r\n\r\n        \"\"\"\r\n        if not isinstance(other, Variable):\r\n            # The value is not a Variable: we cast it into\r\n            # a Constant of the appropriate Type.\r\n            other = self.Constant(type=self, data=other)\r\n\r\n        if other.type != self and allow_convert:\r\n            other2 = self.convert_variable(other)\r\n            if other2 is not None:\r\n                return other2\r\n\r\n        if other.type != self:\r\n>           raise TypeError(\r\n                \"Cannot convert Type %(othertype)s \"\r\n                \"(of Variable %(other)s) into Type %(self)s. \"\r\n                \"You can try to manually convert %(other)s into a %(self)s.\"\r\n                % dict(othertype=other.type, other=other, self=self)\r\n            )\r\nE           TypeError: Cannot convert Type RandomStateType (of Variable RandomStateSharedVariable(<RandomState(PCG64) at 0x7FEE7A091240>)) into Type RandomStateType. You can try to manually co\r\nnvert RandomStateSharedVariable(<RandomState(PCG64) at 0x7FEE7A091240>) into a RandomStateType.\r\n```\r\n\r\n</details>\r\n\r\nRelated to #4582 \r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC/PyMC3 Version: master\r\n* Aesara/Theano Version: master\r\n* Python Version: 3.9\r\n* Operating system: Linux\r\n* How did you install PyMC/PyMC3: development\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5090/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5065", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5065/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5065/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5065/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5065", "id": 1021731028, "node_id": "PR_kwDOAALxiM4s-ThQ", "number": 5065, "title": "Add `Model.eval_rv_shapes` for fast shape evaluation", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76152, "node_id": "MDU6TGFiZWw3NjE1Mg==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/enhancements", "name": "enhancements", "color": "02e10c", "default": false, "description": null}, {"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}, {"id": 2031712615, "node_id": "MDU6TGFiZWwyMDMxNzEyNjE1", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/maintenance", "name": "maintenance", "color": "71f271", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19", "html_url": "https://github.com/pymc-devs/pymc/milestone/19", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19/labels", "id": 6130583, "node_id": "MDk6TWlsZXN0b25lNjEzMDU4Mw==", "number": 19, "title": "v4.0.0b1 (vNext)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 65, "state": "closed", "created_at": "2020-11-20T09:32:38Z", "updated_at": "2021-12-16T14:23:33Z", "due_on": null, "closed_at": "2021-12-16T14:23:33Z"}, "comments": 1, "created_at": "2021-10-09T15:06:48Z", "updated_at": "2021-10-09T19:54:36Z", "closed_at": "2021-10-09T19:44:19Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5065", "html_url": "https://github.com/pymc-devs/pymc/pull/5065", "diff_url": "https://github.com/pymc-devs/pymc/pull/5065.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5065.patch", "merged_at": "2021-10-09T19:44:19Z"}, "body": "This PR adds a `Model.eval_rv_shapes` method that can be used to evaluate the shapes of all free untransformed and transformed RVs at the same time.\r\n\r\nConsequently the `_check_start_shapes` function that's applied at the start of every sampling became much simpler.\r\n\r\nEven though the new shape checks only evaluate the `.shape` of tensors, the `TestNutsCheckTrace.test_linalg` still errored from a finite-check.\r\nApparently the `at.slinalg.solve` Op also applies the finite-check in shape inference (on purpose? cc @brandonwillard).\r\n\r\nDepending on what your PR does, here are a few things you might want to address in the description:\r\n+ [x] what are the (breaking) changes that this PR makes? \u2192 no breaking changes \ud83c\udf89\r\n+ [x] important background, or details about the implementation \u2192 above\r\n+ [x] are the changes\u2014especially new features\u2014covered by tests and docstrings? \u2192 \u2714\ufe0f \r\n+ [x] [linting/style checks have been run](https://github.com/pymc-devs/pymc3/wiki/PyMC3-Python-Code-Style)\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5065/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5062", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5062/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5062/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5062/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5062", "id": 1021546230, "node_id": "PR_kwDOAALxiM4s90oK", "number": 5062, "title": "Fix coords in constant_data issue #5046", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3425466025, "node_id": "LA_kwDOAALxiM7MLHap", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/trace-backend", "name": "trace-backend", "color": "0F37D2", "default": false, "description": "Traces and ArviZ stuff"}], "state": "closed", "locked": false, "assignee": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19", "html_url": "https://github.com/pymc-devs/pymc/milestone/19", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19/labels", "id": 6130583, "node_id": "MDk6TWlsZXN0b25lNjEzMDU4Mw==", "number": 19, "title": "v4.0.0b1 (vNext)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 65, "state": "closed", "created_at": "2020-11-20T09:32:38Z", "updated_at": "2021-12-16T14:23:33Z", "due_on": null, "closed_at": "2021-12-16T14:23:33Z"}, "comments": 3, "created_at": "2021-10-09T00:13:30Z", "updated_at": "2021-10-09T11:59:13Z", "closed_at": "2021-10-09T11:58:21Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5062", "html_url": "https://github.com/pymc-devs/pymc/pull/5062", "diff_url": "https://github.com/pymc-devs/pymc/pull/5062.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5062.patch", "merged_at": "2021-10-09T11:58:21Z"}, "body": "I got a minimum example to reproduce the problem.\r\n\r\n@OriolAbril it looks like ArviZ `0.11.4` also has a bug there. This is the traceback when passing to `dict_to_dataset` from ArviZ:\r\n\r\n```\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  \r\n\r\nshape = (1, 17)\r\ncoords = {'backwards': <xarray.IndexVariable 'backwards' (backwards: 17)>\r\narray([16, 15, 14, 13, 12, 11, 10,  9,  8,  7,  6,  5...: <xarray.IndexVariable 'draw' (draw: 17)>\r\narray([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16])}\r\ndims = ['chain', 'draw', 'backwards']\r\n\r\n    def _infer_coords_and_dims(\r\n        shape, coords, dims\r\n    ) -> \"Tuple[Dict[Any, Variable], Tuple[Hashable, ...]]\":\r\n        \"\"\"All the logic for creating a new DataArray\"\"\"\r\n\r\n        if (\r\n            coords is not None\r\n            and not utils.is_dict_like(coords)\r\n            and len(coords) != len(shape)\r\n        ):\r\n            raise ValueError(\r\n                f\"coords is not dict-like, but it has {len(coords)} items, \"\r\n                f\"which does not match the {len(shape)} dimensions of the \"\r\n                \"data\"\r\n            )\r\n\r\n        if isinstance(dims, str):\r\n            dims = (dims,)\r\n\r\n        if dims is None:\r\n            dims = [f\"dim_{n}\" for n in range(len(shape))]\r\n            if coords is not None and len(coords) == len(shape):\r\n                # try to infer dimensions from coords\r\n                if utils.is_dict_like(coords):\r\n                    # deprecated in GH993, removed in GH1539\r\n                    raise ValueError(\r\n                        \"inferring DataArray dimensions from \"\r\n                        \"dictionary like ``coords`` is no longer \"\r\n                        \"supported. Use an explicit list of \"\r\n                        \"``dims`` instead.\"\r\n                    )\r\n                for n, (dim, coord) in enumerate(zip(dims, coords)):\r\n                    coord = as_variable(coord, name=dims[n]).to_index_variable()\r\n                    dims[n] = coord.name\r\n            dims = tuple(dims)\r\n        elif len(dims) != len(shape):\r\n>           raise ValueError(\r\n                \"different number of dimensions on data \"\r\n                f\"and dims: {len(shape)} vs {len(dims)}\"\r\n            )\r\nE           ValueError: different number of dimensions on data and dims: 2 vs 3\r\n\r\n..\\..\\appdata\\local\\continuum\\miniconda3\\envs\\pm3v4\\lib\\site-packages\\xarray\\core\\dataarray.py:126: ValueError\r\n================================================================================================== warnings summary ================================================================================================== \r\n..\\..\\appdata\\local\\continuum\\miniconda3\\envs\\pm3v4\\lib\\site-packages\\win32\\lib\\pywintypes.py:2\r\n  c:\\users\\osthege\\appdata\\local\\continuum\\miniconda3\\envs\\pm3v4\\lib\\site-packages\\win32\\lib\\pywintypes.py:2: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses\r\n    import imp, sys, os\r\n\r\npymc/tests/test_idata_conversion.py::TestDataPyMC::test_constant_data_coords_issue_5046\r\n  c:\\users\\osthege\\appdata\\local\\continuum\\miniconda3\\envs\\pm3v4\\lib\\site-packages\\arviz\\data\\base.py:130: UserWarning: In variable alpha, there are more dims (1) given than exist (0). Passed array should have shape (chain,draw, *shape)\r\n    warnings.warn(\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/warnings.html\r\n============================================================================================== short test summary info =============================================================================================== \r\nFAILED pymc/tests/test_idata_conversion.py::TestDataPyMC::test_constant_data_coords_issue_5046 - ValueError: different number of dimensions on data and dims: 2 vs 3\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5062/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5061", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5061/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5061/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5061/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5061", "id": 1021414859, "node_id": "PR_kwDOAALxiM4s9aWj", "number": 5061, "title": "Manage coordinates as tuples", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3425466025, "node_id": "LA_kwDOAALxiM7MLHap", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/trace-backend", "name": "trace-backend", "color": "0F37D2", "default": false, "description": "Traces and ArviZ stuff"}], "state": "closed", "locked": false, "assignee": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19", "html_url": "https://github.com/pymc-devs/pymc/milestone/19", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19/labels", "id": 6130583, "node_id": "MDk6TWlsZXN0b25lNjEzMDU4Mw==", "number": 19, "title": "v4.0.0b1 (vNext)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 65, "state": "closed", "created_at": "2020-11-20T09:32:38Z", "updated_at": "2021-12-16T14:23:33Z", "due_on": null, "closed_at": "2021-12-16T14:23:33Z"}, "comments": 1, "created_at": "2021-10-08T19:48:00Z", "updated_at": "2021-10-10T07:41:27Z", "closed_at": "2021-10-10T07:41:20Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5061", "html_url": "https://github.com/pymc-devs/pymc/pull/5061", "diff_url": "https://github.com/pymc-devs/pymc/pull/5061.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5061.patch", "merged_at": "2021-10-10T07:41:20Z"}, "body": "Model coordinates should be immutable objects, so tuples are prime candidates for that.\r\n\r\nUnfortunately tuples cause problems when passed to xarray (#5043) which happens _after_ the compute-intensive MCMC.\r\n\r\nThis PR modifies the `Model.coords` such that all coordinate values become tuples.\r\nThis way they're immutable and one can do `model.coords[\"city\"].index(\"London\")` to obtain indices that can be used for slicing tensors.\r\n\r\nIn the `InferenceData` conversion tuples are then automatically converted to NumPy arrays to avoid the problems with xarray.\r\n\r\nNote that while this PR restricts the `Model.coords` to tuples, the user may still manually pass other types such as `MultiIndex` for the conversion.\r\n\r\nDepending on what your PR does, here are a few things you might want to address in the description:\r\n+ [x] what are the (breaking) changes that this PR makes? \u2192 above\r\n+ [x] important background, or details about the implementation \u2192 above\r\n+ [x] are the changes\u2014especially new features\u2014covered by tests and docstrings? \u2192 yes\r\n+ [x] [linting/style checks have been run](https://github.com/pymc-devs/pymc3/wiki/PyMC3-Python-Code-Style) \u2192 yes", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5061/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5060", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5060/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5060/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5060/events", "html_url": "https://github.com/pymc-devs/pymc/pull/5060", "id": 1021378291, "node_id": "PR_kwDOAALxiM4s9TGD", "number": 5060, "title": "Remove workaround in InferenceData conversion; require ArviZ >=0.11.4", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2031712615, "node_id": "MDU6TGFiZWwyMDMxNzEyNjE1", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/maintenance", "name": "maintenance", "color": "71f271", "default": false, "description": ""}, {"id": 3425466025, "node_id": "LA_kwDOAALxiM7MLHap", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/trace-backend", "name": "trace-backend", "color": "0F37D2", "default": false, "description": "Traces and ArviZ stuff"}], "state": "closed", "locked": false, "assignee": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19", "html_url": "https://github.com/pymc-devs/pymc/milestone/19", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19/labels", "id": 6130583, "node_id": "MDk6TWlsZXN0b25lNjEzMDU4Mw==", "number": 19, "title": "v4.0.0b1 (vNext)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 65, "state": "closed", "created_at": "2020-11-20T09:32:38Z", "updated_at": "2021-12-16T14:23:33Z", "due_on": null, "closed_at": "2021-12-16T14:23:33Z"}, "comments": 5, "created_at": "2021-10-08T18:51:18Z", "updated_at": "2021-10-11T08:58:00Z", "closed_at": "2021-10-11T08:53:38Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/5060", "html_url": "https://github.com/pymc-devs/pymc/pull/5060", "diff_url": "https://github.com/pymc-devs/pymc/pull/5060.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/5060.patch", "merged_at": "2021-10-11T08:53:38Z"}, "body": "This PR removes a workaround in the InferenceData conversion and at the same time fixes a bug that was present in the workaround.\r\n\r\nDepending on what your PR does, here are a few things you might want to address in the description:\r\n+ [x] what are the (breaking) changes that this PR makes? \u2192 possibly ArviZ API changes\r\n+ [x] important background, or details about the implementation \u2192 \r\n+ [x] are the changes\u2014especially new features\u2014covered by tests and docstrings? \u2192 yup\r\n+ [x] [linting/style checks have been run](https://github.com/pymc-devs/pymc3/wiki/PyMC3-Python-Code-Style) \u2192 aye\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5060/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5048", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5048/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5048/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5048/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5048", "id": 1020016803, "node_id": "I_kwDOAALxiM48zDij", "number": 5048, "title": "Interpolated class missing `bound_args_indices`", "user": {"login": "FabiJa", "id": 37300416, "node_id": "MDQ6VXNlcjM3MzAwNDE2", "avatar_url": "https://avatars.githubusercontent.com/u/37300416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabiJa", "html_url": "https://github.com/FabiJa", "followers_url": "https://api.github.com/users/FabiJa/followers", "following_url": "https://api.github.com/users/FabiJa/following{/other_user}", "gists_url": "https://api.github.com/users/FabiJa/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabiJa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabiJa/subscriptions", "organizations_url": "https://api.github.com/users/FabiJa/orgs", "repos_url": "https://api.github.com/users/FabiJa/repos", "events_url": "https://api.github.com/users/FabiJa/events{/privacy}", "received_events_url": "https://api.github.com/users/FabiJa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2021-10-07T13:00:13Z", "updated_at": "2021-11-25T16:39:54Z", "closed_at": "2021-11-25T16:39:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\na have a problem with the ``Interpolated`` class in the development branch. As a starting point I tried the example from the [source](https://github.com/pymc-devs/pymc/blob/328a8eb29e64bc55ac45bae0651a410523912b74/pymc/distributions/continuous.py#L3831):\r\n\r\n```\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\nimport pymc as pm\r\nimport arviz as az\r\nfrom scipy.stats import gamma\r\nplt.style.use('arviz-darkgrid')\r\nrv = gamma(1.99)\r\nx = np.linspace(rv.ppf(0.01),rv.ppf(0.99), 1000)\r\npoints = np.linspace(x[0], x[-1], 50)\r\npdf = rv.pdf(points)\r\ninterpolated = pm.Interpolated.dist(points, pdf)\r\nfig, ax = plt.subplots(1, 1)\r\nax.plot(x, rv.pdf(x), 'C0', linestyle = '--',  label='Original Gamma pdf',alpha=0.8,lw=2)\r\nax.plot(points, pdf, color='black', marker='o', label='Lattice Points',alpha=0.5,linestyle='')\r\nax.plot(x, np.exp(interpolated.logp(x).eval()),'C1',label='Interpolated pdf',alpha=0.8,lw=3)\r\nr = interpolated.random(size=1000)\r\nax.hist(r, density=True, alpha=0.4,align ='mid',color='grey')\r\nax.legend(loc='best', frameon=False)\r\nplt.show()\r\n```\r\n\r\nI get the following error:\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n/tmp/ipykernel_5967/2908023609.py in <module>\r\n     13 ax.plot(x, rv.pdf(x), 'C0', linestyle = '--',  label='Original Gamma pdf',alpha=0.8,lw=2)\r\n     14 ax.plot(points, pdf, color='black', marker='o', label='Lattice Points',alpha=0.5,linestyle='')\r\n---> 15 ax.plot(x, np.exp(interpolated.logp(x).eval()),'C1',label='Interpolated pdf',alpha=0.8,lw=3)\r\n     16 r = interpolated.random(size=1000)\r\n     17 ax.hist(r, density=True, alpha=0.4,align ='mid',color='grey')\r\n\r\n~/anaconda3/envs/pymc3_jax/lib/python3.9/site-packages/pymc/distributions/distribution.py in fn(*args, **kwargs)\r\n    128 def _make_nice_attr_error(oldcode: str, newcode: str):\r\n    129     def fn(*args, **kwargs):\r\n--> 130         raise AttributeError(f\"The `{oldcode}` method was removed. Instead use `{newcode}`.`\")\r\n    131 \r\n    132     return fn\r\n\r\nAttributeError: The `rv.logp(x)` method was removed. Instead use `pm.logp(rv, x)`.\r\n```\r\n\r\nAny advice?\r\nThx.\r\n\r\n* PyMC3 Version: `main`\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5048/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5048/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5046", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5046/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5046/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5046/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5046", "id": 1018816433, "node_id": "I_kwDOAALxiM48ueex", "number": 5046, "title": "Coordinates and values of `constant_data` messed up", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3425466025, "node_id": "LA_kwDOAALxiM7MLHap", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/trace-backend", "name": "trace-backend", "color": "0F37D2", "default": false, "description": "Traces and ArviZ stuff"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-10-06T17:26:31Z", "updated_at": "2021-10-09T11:58:24Z", "closed_at": "2021-10-09T11:58:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nI have a model that has two data variables of identical dimensionality:\r\n```python\r\npymc3.Data(\"obs_A360\", obs_A360, dims=(\"replicate_id\", \"cycle\"))\r\npymc3.Data(\"obs_A600\", obs_A600, dims=(\"replicate_id\", \"cycle\"))\r\n```\r\nwhere `obs_A360` and `obs_A600` are numpy arrays of shape (131, 5).\r\n\r\nSampling works fine, also an `InferenceData` object is returned.\r\n\r\nBut looking into `idata.constant_data` the shapes, values and coordinates of those data variables are completely messed up:\r\n\r\n- The `replicate_id` coordinate became a concatenation of the string-valued replicate IDs with a numpy arange of the same length.\r\n- `idata.posterior.replicate_id` and `idata.constant_data.replicate_id` don't match\r\n- `constant_data.obs_A360` and `constant_data.obs_A600` have shapes (262, 5) and are half filled with `nan`. And not even the same way!\r\n\r\n![grafik](https://user-images.githubusercontent.com/5894642/136253278-275af748-7801-41c0-b15d-77bc13750c29.png)\r\n\r\nWhat's going on?!\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: `main`\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5046/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5043", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5043/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5043/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5043/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5043", "id": 1016472899, "node_id": "I_kwDOAALxiM48liVD", "number": 5043, "title": "Passing tuples as coordinate values gives `ValueError` after sampling", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}, {"id": 3425466025, "node_id": "LA_kwDOAALxiM7MLHap", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/trace-backend", "name": "trace-backend", "color": "0F37D2", "default": false, "description": "Traces and ArviZ stuff"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-10-05T15:31:28Z", "updated_at": "2021-10-10T07:41:23Z", "closed_at": "2021-10-10T07:41:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nThis minimum example uses a tuple for coordinate values. Nothing fancy, right?\r\n```python\r\nwith pymc3.Model(coords={\r\n    \"city\": (\"Bonn\", \"Berlin\")\r\n}):\r\n    pymc3.Normal(\"x\", dims=\"city\")\r\n    pymc3.sample(return_inferencedata=True)\r\n```\r\n\r\nKaboom \ud83e\udde8  _after_ sampling.\r\n```\r\nValueError: dimensions ('city',) must have the same length as the number of data dimensions, ndim=0\r\n```\r\n\r\n<details><summary>Traceback</summary>\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-132-c3a70b936a71> in <module>\r\n      3 }):\r\n      4     pymc3.Normal(\"x\", dims=\"city\")\r\n----> 5     pymc3.sample(return_inferencedata=True)\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\CARenv\\lib\\site-packages\\pymc3\\sampling.py in sample(draws, step, init, n_init, start, trace, chain_idx, chains, cores, tune, progressbar, model, random_seed, discard_tuned_samples, compute_convergence_checks, callback, jitter_max_retries, return_inferencedata, idata_kwargs, mp_ctx, pickle_backend, **kwargs)\r\n    652         if idata_kwargs:\r\n    653             ikwargs.update(idata_kwargs)\r\n--> 654         idata = pm.to_inference_data(trace, **ikwargs)\r\n    655 \r\n    656     if compute_convergence_checks:\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\CARenv\\lib\\site-packages\\pymc3\\backends\\arviz.py in to_inference_data(trace, prior, posterior_predictive, log_likelihood, coords, dims, model, save_warmup, density_dist_obs)\r\n    636         return trace\r\n    637 \r\n--> 638     return InferenceDataConverter(\r\n    639         trace=trace,\r\n    640         prior=prior,\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\CARenv\\lib\\site-packages\\pymc3\\backends\\arviz.py in to_inference_data(self)\r\n    567         \"\"\"\r\n    568         id_dict = {\r\n--> 569             \"posterior\": self.posterior_to_xarray(),\r\n    570             \"sample_stats\": self.sample_stats_to_xarray(),\r\n    571             \"log_likelihood\": self.log_likelihood_to_xarray(),\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\CARenv\\lib\\site-packages\\arviz\\data\\base.py in wrapped(cls, *args, **kwargs)\r\n     44                 if all([getattr(cls, prop_i) is None for prop_i in prop]):\r\n     45                     return None\r\n---> 46             return func(cls, *args, **kwargs)\r\n     47 \r\n     48         return wrapped\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\CARenv\\lib\\site-packages\\pymc3\\backends\\arviz.py in posterior_to_xarray(self)\r\n    337                 )\r\n    338         return (\r\n--> 339             dict_to_dataset(\r\n    340                 data,\r\n    341                 library=pymc3,\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\CARenv\\lib\\site-packages\\pymc3\\backends\\arviz.py in dict_to_dataset(data, library, coords, dims, attrs, default_dims, skip_event_dims, index_origin)\r\n    119     \"\"\"\r\n    120     if default_dims is None:\r\n--> 121         return _dict_to_dataset(\r\n    122             data,\r\n    123             attrs=attrs,\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\CARenv\\lib\\site-packages\\arviz\\data\\base.py in dict_to_dataset(data, attrs, library, coords, dims, skip_event_dims)\r\n    238     data_vars = {}\r\n    239     for key, values in data.items():\r\n--> 240         data_vars[key] = numpy_to_data_array(\r\n    241             values, var_name=key, coords=coords, dims=dims.get(key), skip_event_dims=skip_event_dims\r\n    242         )\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\CARenv\\lib\\site-packages\\arviz\\data\\base.py in numpy_to_data_array(ary, var_name, coords, dims, skip_event_dims)\r\n    196 \r\n    197     # filter coords based on the dims\r\n--> 198     coords = {key: xr.IndexVariable((key,), data=coords[key]) for key in dims}\r\n    199     return xr.DataArray(ary, coords=coords, dims=dims)\r\n    200 \r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\CARenv\\lib\\site-packages\\arviz\\data\\base.py in <dictcomp>(.0)\r\n    196 \r\n    197     # filter coords based on the dims\r\n--> 198     coords = {key: xr.IndexVariable((key,), data=coords[key]) for key in dims}\r\n    199     return xr.DataArray(ary, coords=coords, dims=dims)\r\n    200 \r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\CARenv\\lib\\site-packages\\xarray\\core\\variable.py in __init__(self, dims, data, attrs, encoding, fastpath)\r\n   2532 \r\n   2533     def __init__(self, dims, data, attrs=None, encoding=None, fastpath=False):\r\n-> 2534         super().__init__(dims, data, attrs, encoding, fastpath)\r\n   2535         if self.ndim != 1:\r\n   2536             raise ValueError(f\"{type(self).__name__} objects must be 1-dimensional\")\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\CARenv\\lib\\site-packages\\xarray\\core\\variable.py in __init__(self, dims, data, attrs, encoding, fastpath)\r\n    313         \"\"\"\r\n    314         self._data = as_compatible_data(data, fastpath=fastpath)\r\n--> 315         self._dims = self._parse_dimensions(dims)\r\n    316         self._attrs = None\r\n    317         self._encoding = None\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\CARenv\\lib\\site-packages\\xarray\\core\\variable.py in _parse_dimensions(self, dims)\r\n    572         dims = tuple(dims)\r\n    573         if len(dims) != self.ndim:\r\n--> 574             raise ValueError(\r\n    575                 f\"dimensions {dims} must have the same length as the \"\r\n    576                 f\"number of data dimensions, ndim={self.ndim}\"\r\n\r\nValueError: dimensions ('city',) must have the same length as the number of data dimensions, ndim=0\r\n```\r\n\r\n</details>\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: `main` (not the latest though, but AFAIK there was no work done on the converter recently)\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5043/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5007", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5007/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5007/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5007/events", "html_url": "https://github.com/pymc-devs/pymc/issues/5007", "id": 1002402660, "node_id": "I_kwDOAALxiM47v3Nk", "number": 5007, "title": "Access to model.logp changes the free random variables inplace", "user": {"login": "aseyboldt", "id": 1882397, "node_id": "MDQ6VXNlcjE4ODIzOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1882397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aseyboldt", "html_url": "https://github.com/aseyboldt", "followers_url": "https://api.github.com/users/aseyboldt/followers", "following_url": "https://api.github.com/users/aseyboldt/following{/other_user}", "gists_url": "https://api.github.com/users/aseyboldt/gists{/gist_id}", "starred_url": "https://api.github.com/users/aseyboldt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aseyboldt/subscriptions", "organizations_url": "https://api.github.com/users/aseyboldt/orgs", "repos_url": "https://api.github.com/users/aseyboldt/repos", "events_url": "https://api.github.com/users/aseyboldt/events{/privacy}", "received_events_url": "https://api.github.com/users/aseyboldt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19", "html_url": "https://github.com/pymc-devs/pymc/milestone/19", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19/labels", "id": 6130583, "node_id": "MDk6TWlsZXN0b25lNjEzMDU4Mw==", "number": 19, "title": "v4.0.0b1 (vNext)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 65, "state": "closed", "created_at": "2020-11-20T09:32:38Z", "updated_at": "2021-12-16T14:23:33Z", "due_on": null, "closed_at": "2021-12-16T14:23:33Z"}, "comments": 2, "created_at": "2021-09-21T12:41:41Z", "updated_at": "2021-10-23T12:18:14Z", "closed_at": "2021-10-23T12:18:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```python\r\nwith pm.Model() as model:\r\n    a = pm.HalfNormal(\"a\")\r\n    c = pm.Uniform(\"c\", lower=a - 1, upper=1)\r\n\r\nprint(\"before\")\r\nprint(\"------\")\r\naesara.dprint(c)\r\n\r\nprint()\r\nmodel.logpt\r\n\r\nprint(\"after\")\r\nprint(\"-----\")\r\naesara.dprint(c)\r\n```\r\n\r\n```\r\nbefore\r\n------\r\nuniform_rv{0, (0, 0), floatX, False}.1 [id A] 'c'   \r\n |RandomStateSharedVariable(<RandomState(MT19937) at 0x7F649E351540>) [id B]\r\n |TensorConstant{[]} [id C]\r\n |TensorConstant{11} [id D]\r\n |Elemwise{sub,no_inplace} [id E] ''   \r\n | |halfnormal_rv{0, (0, 0), floatX, False}.1 [id F] 'a'   \r\n | | |RandomStateSharedVariable(<RandomState(MT19937) at 0x7F649D753040>) [id G]\r\n | | |TensorConstant{[]} [id H]\r\n | | |TensorConstant{11} [id I]\r\n | | |TensorConstant{0.0} [id J]\r\n | | |TensorConstant{1.0} [id K]\r\n | |TensorConstant{1} [id L]\r\n |TensorConstant{1.0} [id M]\r\n\r\nafter\r\n-----\r\nuniform_rv{0, (0, 0), floatX, False}.1 [id A] 'c'   \r\n |RandomStateSharedVariable(<RandomState(MT19937) at 0x7F649E351540>) [id B]\r\n |TensorConstant{[]} [id C]\r\n |TensorConstant{11} [id D]\r\n |Elemwise{sub,no_inplace} [id E] ''   \r\n | |Elemwise{exp,no_inplace} [id F] ''   \r\n | | |a_log__ [id G]\r\n | |TensorConstant{1} [id H]\r\n |TensorConstant{1.0} [id I]\r\n```\r\n\r\nMaybe some `graph.replace_all` is changing the variables inplace when it should have made a copy first?\r\n\r\nCC @brandonwillard ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/5007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/5007/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4997", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4997/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4997/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4997/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4997", "id": 997551762, "node_id": "I_kwDOAALxiM47dW6S", "number": 4997, "title": "Mixture.dist compilation fails on first attempt", "user": {"login": "katosh", "id": 4857068, "node_id": "MDQ6VXNlcjQ4NTcwNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/4857068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/katosh", "html_url": "https://github.com/katosh", "followers_url": "https://api.github.com/users/katosh/followers", "following_url": "https://api.github.com/users/katosh/following{/other_user}", "gists_url": "https://api.github.com/users/katosh/gists{/gist_id}", "starred_url": "https://api.github.com/users/katosh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/katosh/subscriptions", "organizations_url": "https://api.github.com/users/katosh/orgs", "repos_url": "https://api.github.com/users/katosh/repos", "events_url": "https://api.github.com/users/katosh/events{/privacy}", "received_events_url": "https://api.github.com/users/katosh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1715881852, "node_id": "MDU6TGFiZWwxNzE1ODgxODUy", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/wontfix", "name": "wontfix", "color": "efefff", "default": true, "description": ""}, {"id": 2809192918, "node_id": "MDU6TGFiZWwyODA5MTkyOTE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v3", "name": "v3", "color": "F92E0C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-09-15T21:54:43Z", "updated_at": "2022-11-03T14:13:09Z", "closed_at": "2022-11-03T14:13:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## `Mixture.dist` fails on first attempt if components are defined out of context\r\n\r\n```python\r\nimport numpy as np\r\nimport pymc3 as pm\r\n\r\ndef make_model():\r\n    comps = [\r\n        pm.Lognormal.dist(1),\r\n        pm.Lognormal.dist(2),\r\n    ]\r\n    with pm.Model() as model:\r\n        weights = pm.Dirichlet('weights', np.array([1, 1]))\r\n        l_like = pm.Mixture.dist(w=weights, comp_dists=comps)\r\n    return model\r\n\r\ntry:\r\n    model = make_model()\r\nexcept Exception as e:\r\n    print(f'First compilation failed with:\\n{e}')\r\n    model = make_model()\r\n    print('Second compilation successful.')\r\nprint(model)\r\n```\r\n```\r\nFirst compilation failed with:\r\nCannot compute test value: input 0 (Elemwise{exp,no_inplace}.0) of Op MakeVector{dtype='float64'}(Elemwise{exp,no_inplace}.0, Elemwise{exp,no_inplace}.0) missing default value.  \r\nBacktrace when that variable is created:\r\n\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/IPython/core/async_helpers.py\", line 68, in _pseudo_sync_runner\r\n    coro.send(None)\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 3169, in run_cell_async\r\n    has_raised = await self.run_ast_nodes(code_ast.body, cell_name,\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 3361, in run_ast_nodes\r\n    if (await self.run_code(code, result,  async_=asy)):\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 3441, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"/loc/scratch/37508145/ipykernel_989/1481143961.py\", line 2, in <module>\r\n    model = make_model()\r\n  File \"/loc/scratch/37508145/ipykernel_989/3740946427.py\", line 3, in make_model\r\n    pm.Lognormal.dist(1),\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/pymc3/distributions/distribution.py\", line 130, in dist\r\n    dist.__init__(*args, **kwargs)\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/pymc3/distributions/continuous.py\", line 1854, in __init__\r\n    self.mean = tt.exp(self.mu + 1.0 / (2 * self.tau))\r\n\r\nSecond compilation successful.\r\nweights_stickbreaking__ ~ TransformedDistribution\r\n                weights ~ Dirichlet\r\n```\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n~/.conda/envs/pymc3_test3/lib/python3.9/site-packages/pymc3/distributions/mixture.py in _comp_means(self)\r\n    305         try:\r\n--> 306             return tt.as_tensor_variable(self.comp_dists.mean)\r\n    307         except AttributeError:\r\n\r\nAttributeError: 'list' object has no attribute 'mean'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTestValueError                            Traceback (most recent call last)\r\n~/.conda/envs/pymc3_test3/lib/python3.9/site-packages/theano/graph/op.py in compute_test_value(node)\r\n     80         try:\r\n---> 81             storage_map[ins] = [ins.get_test_value()]\r\n     82             compute_map[ins] = [True]\r\n\r\n~/.conda/envs/pymc3_test3/lib/python3.9/site-packages/theano/graph/basic.py in get_test_value(self)\r\n    421             detailed_err_msg = get_variable_trace_string(self)\r\n--> 422             raise TestValueError(f\"{self} has no test value {detailed_err_msg}\")\r\n    423 \r\n\r\nTestValueError: Elemwise{exp,no_inplace}.0 has no test value  \r\nBacktrace when that variable is created:\r\n\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 2944, in _run_cell\r\n    return runner(coro)\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/IPython/core/async_helpers.py\", line 68, in _pseudo_sync_runner\r\n    coro.send(None)\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 3169, in run_cell_async\r\n    has_raised = await self.run_ast_nodes(code_ast.body, cell_name,\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 3361, in run_ast_nodes\r\n    if (await self.run_code(code, result,  async_=asy)):\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 3441, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"/loc/scratch/37508145/ipykernel_643/1369965341.py\", line 8, in <module>\r\n    pm.Lognormal.dist(1),\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/pymc3/distributions/distribution.py\", line 130, in dist\r\n    dist.__init__(*args, **kwargs)\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/pymc3/distributions/continuous.py\", line 1854, in __init__\r\n    self.mean = tt.exp(self.mu + 1.0 / (2 * self.tau))\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n/loc/scratch/37508145/ipykernel_643/1938979322.py in <module>\r\n----> 1 make_model(comps)\r\n\r\n/loc/scratch/37508145/ipykernel_643/1369965341.py in make_model(comps)\r\n      2     with pm.Model() as model:\r\n      3         weights = pm.Dirichlet('weights', np.array([1, 1]))\r\n----> 4         l_like = pm.Mixture.dist(w=weights, comp_dists=comps)\r\n      5     return model\r\n      6 \r\n\r\n~/.conda/envs/pymc3_test3/lib/python3.9/site-packages/pymc3/distributions/distribution.py in dist(cls, *args, **kwargs)\r\n    128     def dist(cls, *args, **kwargs):\r\n    129         dist = object.__new__(cls)\r\n--> 130         dist.__init__(*args, **kwargs)\r\n    131         return dist\r\n    132 \r\n\r\n~/.conda/envs/pymc3_test3/lib/python3.9/site-packages/pymc3/distributions/mixture.py in __init__(self, w, comp_dists, *args, **kwargs)\r\n    155 \r\n    156             try:\r\n--> 157                 self.mean = (w * self._comp_means()).sum(axis=-1)\r\n    158 \r\n    159                 if \"mean\" not in defaults:\r\n\r\n~/.conda/envs/pymc3_test3/lib/python3.9/site-packages/pymc3/distributions/mixture.py in _comp_means(self)\r\n    306             return tt.as_tensor_variable(self.comp_dists.mean)\r\n    307         except AttributeError:\r\n--> 308             return tt.squeeze(tt.stack([comp_dist.mean for comp_dist in self.comp_dists], axis=-1))\r\n    309 \r\n    310     def _comp_modes(self):\r\n\r\n~/.conda/envs/pymc3_test3/lib/python3.9/site-packages/theano/tensor/basic.py in stack(*tensors, **kwargs)\r\n   4771         tensors = list(map(as_tensor_variable, tensors))\r\n   4772         dtype = scal.upcast(*[i.dtype for i in tensors])\r\n-> 4773         return theano.tensor.opt.MakeVector(dtype)(*tensors)\r\n   4774     return join(axis, *[shape_padaxis(t, axis) for t in tensors])\r\n   4775 \r\n\r\n~/.conda/envs/pymc3_test3/lib/python3.9/site-packages/theano/graph/op.py in __call__(self, *inputs, **kwargs)\r\n    251 \r\n    252         if config.compute_test_value != \"off\":\r\n--> 253             compute_test_value(node)\r\n    254 \r\n    255         if self.default_output is not None:\r\n\r\n~/.conda/envs/pymc3_test3/lib/python3.9/site-packages/theano/graph/op.py in compute_test_value(node)\r\n     92                 detailed_err_msg = get_variable_trace_string(ins)\r\n     93 \r\n---> 94                 raise ValueError(\r\n     95                     f\"Cannot compute test value: input {i} ({ins}) of Op {node} missing default value. {detailed_err_msg}\"\r\n     96                 )\r\n\r\nValueError: Cannot compute test value: input 0 (Elemwise{exp,no_inplace}.0) of Op MakeVector{dtype='float64'}(Elemwise{exp,no_inplace}.0, Elemwise{exp,no_inplace}.0) missing default value.  \r\nBacktrace when that variable is created:\r\n\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 2944, in _run_cell\r\n    return runner(coro)\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/IPython/core/async_helpers.py\", line 68, in _pseudo_sync_runner\r\n    coro.send(None)\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 3169, in run_cell_async\r\n    has_raised = await self.run_ast_nodes(code_ast.body, cell_name,\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 3361, in run_ast_nodes\r\n    if (await self.run_code(code, result,  async_=asy)):\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 3441, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"/loc/scratch/37508145/ipykernel_643/1369965341.py\", line 8, in <module>\r\n    pm.Lognormal.dist(1),\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/pymc3/distributions/distribution.py\", line 130, in dist\r\n    dist.__init__(*args, **kwargs)\r\n  File \"/home/dotto/.conda/envs/pymc3_test3/lib/python3.9/site-packages/pymc3/distributions/continuous.py\", line 1854, in __init__\r\n    self.mean = tt.exp(self.mu + 1.0 / (2 * self.tau))\r\n```\r\n\r\n</details>\r\n\r\n - The error only occurs when the components `comps` are defined out of the model context.\r\n    However, I would not expect the components to be related to the model in any way.\r\n - `comps` have to be defined again to resolve the error on the second attempt.\r\n - Passing `testval=` to the components does not resolve the error.\r\n - Since I want to use the log-density `logp` of the mixture distribution and not sample an RV from it I need to use the `.dist` method.\r\n\r\nSince the next release will likely be v4 this may not get fixed. \r\nHowever, I do not know how to access the log-density of mixture distributions without producing an RV in `v4` yet.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.11.4 bfc3813367592e62cc25be5abf0484d417972d84\r\n* Aesara/Theano Version: 1.1.2\r\n* Python Version: 3.9.7\r\n* Operating system: Ubuntu 18.04.4 LTS\r\n* How did you install PyMC3: `pip install 'git+https://github.com/pymc-devs/pymc3@v3'`\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4997/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4996", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4996/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4996/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4996/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4996", "id": 996984276, "node_id": "PR_kwDOAALxiM4rx19F", "number": 4996, "title": "Fix Flat/HalfFlat initial value dimensionality", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}, {"id": 2107010938, "node_id": "MDU6TGFiZWwyMTA3MDEwOTM4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/help%20wanted", "name": "help wanted", "color": "b58f13", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-09-15T11:44:13Z", "updated_at": "2021-09-23T15:05:23Z", "closed_at": "2021-09-23T15:05:16Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": true, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4996", "html_url": "https://github.com/pymc-devs/pymc/pull/4996", "diff_url": "https://github.com/pymc-devs/pymc/pull/4996.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4996.patch", "merged_at": null}, "body": "Just adding the MRE as unit tests.\r\n\r\nAnybody please feel free to pick this up.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4996/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4995", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4995/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4995/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4995/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4995", "id": 996925337, "node_id": "I_kwDOAALxiM47a9-Z", "number": 4995, "title": "`get_moment` TypeError on Windows", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1008939096, "node_id": "MDU6TGFiZWwxMDA4OTM5MDk2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/winOS", "name": "winOS", "color": "f9d0c4", "default": false, "description": "windows OS related"}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-09-15T10:37:00Z", "updated_at": "2021-09-15T10:46:53Z", "closed_at": "2021-09-15T10:46:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nRunning `pytest -sv pymc3\\tests\\test_initvals.py` on Windows I'm getting a TypeError related to the new `get_moment` method.\r\n\r\n\u26a0 This test is also running in CI, but does not fail there. But I saw this on at least two different PCs so far.\r\n\r\n**Please provide the full traceback.**\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\n_____________________________________________________________________________________________ TestMoment.test_basic _____________________________________________________________________________________________ \r\n\r\nself = <pymc3.tests.test_initvals.TestMoment object at 0x000001DB15C54C10>\r\n\r\n    def test_basic(self):\r\n        rv = pm.Flat.dist()\r\n>       assert get_moment(rv).eval() == np.zeros(())\r\n\r\npymc3\\tests\\test_initvals.py:99:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\npymc3\\distributions\\distribution.py:353: in get_moment\r\n    return _get_moment(rv.owner.op, rv, size, *rv.owner.inputs[3:])\r\n..\\..\\appdata\\local\\continuum\\miniconda3\\envs\\pm3v4\\lib\\functools.py:875: in wrapper\r\n    return dispatch(args[0].__class__)(*args, **kw)\r\npymc3\\distributions\\distribution.py:117: in get_moment\r\n    return class_initval(rv, size, *rv_inputs)\r\npymc3\\distributions\\continuous.py:370: in get_moment\r\n    return at.zeros(size, dtype=aesara.config.floatX)\r\n..\\..\\appdata\\local\\continuum\\miniconda3\\envs\\pm3v4\\lib\\site-packages\\aesara\\tensor\\basic.py:1027: in zeros\r\n    return alloc(np.array(0, dtype=dtype), *shape)\r\n..\\..\\appdata\\local\\continuum\\miniconda3\\envs\\pm3v4\\lib\\site-packages\\aesara\\graph\\op.py:271: in __call__\r\n    node = self.make_node(*inputs, **kwargs)\r\n..\\..\\appdata\\local\\continuum\\miniconda3\\envs\\pm3v4\\lib\\site-packages\\aesara\\tensor\\basic.py:1424: in make_node\r\n    sh, bcast = alloc_validate_shape(shape)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nshape = (TensorConstant{[]},)\r\n\r\n    def alloc_validate_shape(shape):\r\n        sh = [as_tensor_variable(s) for s in shape]\r\n        bcast = []\r\n        for i, s in enumerate(sh):\r\n\r\n            def err_str():\r\n                if config.exception_verbosity == \"high\":\r\n                    return \"\\n\" + min_informative_str(s)\r\n                else:\r\n                    return str(s)\r\n\r\n            if s.type.dtype not in integer_dtypes:\r\n                s_as_str = err_str()\r\n                raise TypeError(\r\n                    \"Shape arguments to Alloc must be integers, \"\r\n                    f\"but argument {i} is not for apply node: {s_as_str}\"\r\n                )\r\n            if s.ndim != 0:\r\n                s_as_str = err_str()\r\n>               raise TypeError(\r\n                    \"Each shape dimension to Alloc must be a scalar, \",\r\n                    f\"but dimension {i} have {int(s.ndim)} dimensions for apply node: {s_as_str}\",\r\n                )\r\nE               TypeError: ('Each shape dimension to Alloc must be a scalar, ', 'but dimension 0 have 1 dimensions for apply node: \\nA. TensorConstant{[]}')\r\n\r\n..\\..\\appdata\\local\\continuum\\miniconda3\\envs\\pm3v4\\lib\\site-packages\\aesara\\tensor\\basic.py:1382: TypeError\r\n```\r\n\r\n</details>\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: `main`\r\n* Aesara/Theano Version: `2.1.1`\r\n* Python Version: `3.8.10`\r\n* Operating system: Windows 10", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4995/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4993", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4993/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4993/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4993/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4993", "id": 996783165, "node_id": "I_kwDOAALxiM47abQ9", "number": 4993, "title": "HalfFlat initval dimensionality is broken", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-09-15T08:09:03Z", "updated_at": "2021-10-14T20:13:28Z", "closed_at": "2021-10-14T20:13:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nInitial values for non-scalar HalfFlat (and probably Flat too) have a shape problem.\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nwith pm.Model(coords={\r\n    \"city\": np.array([\"Paris\", \"Berlin\", \"Venice\"], dtype=str),\r\n}) as pmodel:\r\n    pm.HalfFlat(\"hf_scalar\")\r\n    pm.HalfFlat(\"hf_shape\", shape=(2,))\r\n    pm.HalfFlat(\"hf_dims\", dims=(\"city\",))\r\n```\r\n\r\n**Please provide the full traceback.**\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-19-21fc589ae251> in <module>\r\n      3 }) as pmodel:\r\n      4     pm.HalfFlat(\"hf_scalar\")\r\n----> 5     pm.HalfFlat(\"hf_shape\", shape=(2,))\r\n      6     pm.HalfFlat(\"hf_dims\", dims=(\"city\",))\r\n\r\nc:\\users\\osthege\\repos\\pymc3-v4\\pymc3\\distributions\\distribution.py in __new__(cls, name, rng, dims, initval, observed, total_size, transform, *args, **kwargs)\r\n    214         # Create the RV without dims information, because that's not something tracked at the Aesara level.\r\n    215         # If necessary we'll later replicate to a different size implied by already known dims.\r\n--> 216         rv_out = cls.dist(*args, rng=rng, **kwargs)\r\n    217         ndim_actual = rv_out.ndim\r\n    218         resize_shape = None\r\n\r\nc:\\users\\osthege\\repos\\pymc3-v4\\pymc3\\distributions\\continuous.py in dist(cls, size, **kwargs)\r\n    429     def dist(cls, *, size=None, **kwargs):\r\n    430         res = super().dist([], size=size, **kwargs)\r\n--> 431         res.tag.test_value = np.full(size, floatX(1.0))\r\n    432         return res\r\n    433 \r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\pm3v4\\lib\\site-packages\\aesara\\graph\\utils.py in __setattr__(self, attr, obj)\r\n    265 \r\n    266         if getattr(self, \"attr\", None) == attr:\r\n--> 267             obj = self.attr_filter(obj)\r\n    268 \r\n    269         return object.__setattr__(self, attr, obj)\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\pm3v4\\lib\\site-packages\\aesara\\tensor\\type.py in filter(self, data, strict, allow_downcast)\r\n    201 \r\n    202         if self.ndim != data.ndim:\r\n--> 203             raise TypeError(\r\n    204                 f\"Wrong number of dimensions: expected {self.ndim},\"\r\n    205                 f\" got {data.ndim} with shape {data.shape}.\"\r\n\r\nTypeError: Wrong number of dimensions: expected 1, got 0 with shape ().\r\n\r\n\r\n```\r\n\r\n</details>\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: `main`\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4993/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4992", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4992/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4992/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4992/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4992", "id": 996496571, "node_id": "I_kwDOAALxiM47ZVS7", "number": 4992, "title": "Attempting to call `Model.add_coords()` twice with same argument raises an error.", "user": {"login": "tomicapretto", "id": 25507629, "node_id": "MDQ6VXNlcjI1NTA3NjI5", "avatar_url": "https://avatars.githubusercontent.com/u/25507629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomicapretto", "html_url": "https://github.com/tomicapretto", "followers_url": "https://api.github.com/users/tomicapretto/followers", "following_url": "https://api.github.com/users/tomicapretto/following{/other_user}", "gists_url": "https://api.github.com/users/tomicapretto/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomicapretto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomicapretto/subscriptions", "organizations_url": "https://api.github.com/users/tomicapretto/orgs", "repos_url": "https://api.github.com/users/tomicapretto/repos", "events_url": "https://api.github.com/users/tomicapretto/events{/privacy}", "received_events_url": "https://api.github.com/users/tomicapretto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-09-14T22:40:58Z", "updated_at": "2022-05-29T11:15:50Z", "closed_at": "2022-05-29T11:15:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nIf you add a coordinate whose name already exists in the model, PyMC3 attempts to compare the values of the coordinates using a `.equal()` method, which is something that we don't have in lists.\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport pymc3 as pm\r\n\r\ncoords = {\"groups\": [\"a\", \"b\", \"c\"]}\r\n\r\nmodel = pm.Model()\r\nmodel.add_coords(coords)\r\nmodel.add_coords(coords)\r\n```\r\n\r\n**Please provide the full traceback.**\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\nAttributeError: 'list' object has no attribute 'equals'\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-11-d57219f0c33f> in <module>\r\n      5 model = pm.Model()\r\n      6 model.add_coords(coords)\r\n----> 7 model.add_coords(coords)\r\n\r\n~/anaconda3/envs/bmb/lib/python3.8/site-packages/pymc3/model.py in add_coords(self, coords)\r\n   1106                 )\r\n   1107             if name in self.coords:\r\n-> 1108                 if not coords[name].equals(self.coords[name]):\r\n   1109                     raise ValueError(\"Duplicate and incompatiple coordinate: %s.\" % name)\r\n   1110             else:\r\n\r\nAttributeError: 'list' object has no attribute 'equals'\r\n```\r\n\r\n</details>\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.11.2\r\n* Theano Version: 1.1.2\r\n* Python Version: 3.8.5\r\n* Operating system: Ubuntu 20.04.3 LTS\r\n* How did you install PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4992/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4969", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4969/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4969/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4969/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4969", "id": 981431959, "node_id": "MDU6SXNzdWU5ODE0MzE5NTk=", "number": 4969, "title": "`pm.model_to_graphviz` does not show dependencies created through `set_subtensor` operations", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-08-27T17:02:53Z", "updated_at": "2021-08-27T17:26:28Z", "closed_at": "2021-08-27T17:26:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nOften times it's more convenient to use `at.set_subtensor` instead of stacking lots of individual elements.\r\n(And I believe the resulting graph could be more efficient too, but I didn't check that.)\r\n\r\nHowever, the dependencies on upstream RVs are not shown when visualizing the model with `pm.model_to_graphviz`.\r\n\r\n```python\r\nimport pymc3\r\nimport aesara\r\nimport aesara.tensor as at\r\n\r\nwith pymc3.Model() as pmodel:\r\n    A = pymc3.Normal(\"A\", shape=(3,))\r\n    B = pymc3.Uniform(\"B\", shape=(2,))\r\n    \r\n    # By set_subtensor\r\n    C = at.empty(\r\n        shape=(5,),\r\n        dtype=aesara.config.floatX\r\n    )\r\n    at.set_subtensor(C[[1,2,3]], A, inplace=True)\r\n    at.set_subtensor(C[[0, 4]], B, inplace=True)\r\n    pymc3.Deterministic(\"by set_subtensor\", C)\r\n    \r\n    pymc3.Deterministic(\"by stack\", at.stack([B[0], A[0], A[1], A[2], B[1]]))\r\n    \r\npymc3.model_to_graphviz(pmodel)\r\n```\r\n\r\nOnly the deterministic RV created via stacking is shown with the correct upstream dependencies:\r\n\r\n![grafik](https://user-images.githubusercontent.com/5894642/131162638-ee191184-55ac-4917-b4c9-3f9a52d7aecd.png)\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: `main` (9cf800ba198f9f2fab2758eed4262733fca4d5bf)\r\n* Aesara/Theano Version: 2.1.2\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4969/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4961", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4961/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4961/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4961/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4961", "id": 976958302, "node_id": "MDU6SXNzdWU5NzY5NTgzMDI=", "number": 4961, "title": "Aesara 2.2.0 release broke tests on `main`", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-08-23T12:05:23Z", "updated_at": "2021-09-02T08:37:10Z", "closed_at": "2021-09-02T08:37:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nThe recent merge of #4955 broke lots of tests on `main`:\r\nhttps://github.com/pymc-devs/pymc3/actions/runs/1153556997\r\n\r\nThe authors & reviewers of #4955 are not to blame though, because over there the CI was green \u2714 on 2021-08-19T17-33Z.\r\n\r\nAt 2021-08-19T19-37Z (two hours later) however a new [Aesara version 2.2.0](https://github.com/aesara-devs/aesara/releases/tag/rel-2.2.0) was released.\r\n\r\nThe next CI run was on `main` after the merge and blew up.`\r\n\r\nThe automated PR #4960 has a red CI because of this.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: `main`\r\n* Aesara/Theano Version: `2.2.0`\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4961/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4959", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4959/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4959/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4959/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4959", "id": 976431781, "node_id": "MDU6SXNzdWU5NzY0MzE3ODE=", "number": 4959, "title": "`sample_prior_predictive` does not work with Aesara v.2.1.3", "user": {"login": "larryshamalama", "id": 24764859, "node_id": "MDQ6VXNlcjI0NzY0ODU5", "avatar_url": "https://avatars.githubusercontent.com/u/24764859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larryshamalama", "html_url": "https://github.com/larryshamalama", "followers_url": "https://api.github.com/users/larryshamalama/followers", "following_url": "https://api.github.com/users/larryshamalama/following{/other_user}", "gists_url": "https://api.github.com/users/larryshamalama/gists{/gist_id}", "starred_url": "https://api.github.com/users/larryshamalama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larryshamalama/subscriptions", "organizations_url": "https://api.github.com/users/larryshamalama/orgs", "repos_url": "https://api.github.com/users/larryshamalama/repos", "events_url": "https://api.github.com/users/larryshamalama/events{/privacy}", "received_events_url": "https://api.github.com/users/larryshamalama/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2107010938, "node_id": "MDU6TGFiZWwyMTA3MDEwOTM4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/help%20wanted", "name": "help wanted", "color": "b58f13", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-08-22T17:47:40Z", "updated_at": "2021-09-01T17:10:28Z", "closed_at": "2021-09-01T17:10:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Reopening this [issue](https://github.com/aesara-devs/aesara/issues/568); the text below is copy pasted from the latter link. As @ricardoV94 suggests, the problem may be caused by this [PR](https://github.com/aesara-devs/aesara/pull/556).\r\n\r\n`pm.sample_prior_predictive` doesn't seem to work when I upgrade Aesara to the latest version (2.1.3), but it works if I use Aesara v.2.0.12. Any ideas why this may be the case? See the example below and notebooks [here](https://github.com/larryshamalama/pymc3-playground/blob/master/notebooks/shortcomings/sample_prior_aesara_working.ipynb) and [here](https://github.com/larryshamalama/pymc3-playground/blob/master/notebooks/shortcomings/sample_prior_aesara_not_working.ipynb)\r\n\r\n```{python}\r\nwith pm.Model() as model:\r\n    norm = pm.Normal(\"normal-dist\", mu=0., sigma=5.)\r\n    \r\n    prior = pm.sample_prior_predictive()\r\n```\r\n\r\nyields\r\n\r\n```{python}\r\nTypeError: ('Constants not allowed in param list', TensorConstant{[]})\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4959/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4957", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4957/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4957/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4957/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4957", "id": 976135024, "node_id": "MDU6SXNzdWU5NzYxMzUwMjQ=", "number": 4957, "title": "Unable to plot sample trace or get a summary of posterior samples using Arviz with Pymc3 V4", "user": {"login": "sreedat", "id": 46219460, "node_id": "MDQ6VXNlcjQ2MjE5NDYw", "avatar_url": "https://avatars.githubusercontent.com/u/46219460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sreedat", "html_url": "https://github.com/sreedat", "followers_url": "https://api.github.com/users/sreedat/followers", "following_url": "https://api.github.com/users/sreedat/following{/other_user}", "gists_url": "https://api.github.com/users/sreedat/gists{/gist_id}", "starred_url": "https://api.github.com/users/sreedat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sreedat/subscriptions", "organizations_url": "https://api.github.com/users/sreedat/orgs", "repos_url": "https://api.github.com/users/sreedat/repos", "events_url": "https://api.github.com/users/sreedat/events{/privacy}", "received_events_url": "https://api.github.com/users/sreedat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-08-21T13:15:49Z", "updated_at": "2021-12-18T16:05:42Z", "closed_at": "2021-12-18T16:05:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "## pm.sample() runs correctly but the ```trace``` cannot be used to plot or summarize the posterior\r\n\r\nI get the following error: ```AttributeError: 'TensorVariable' object has no attribute 'logp_elemwise' ```\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport arviz as az\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\n\r\n%config InlineBackend.figure_format = 'retina'\r\n# Initialize random number generator\r\nRANDOM_SEED = 8927\r\nnp.random.seed(RANDOM_SEED)\r\naz.style.use(\"arviz-darkgrid\")\r\n\r\n# Case study for a simple linear regression\r\n# True parameter values\r\nalpha, sigma = 1, 1\r\nbeta = [1, 2.5]\r\n\r\n# Size of dataset\r\nsize = 100\r\n\r\n# Predictor variable\r\nX1 = np.random.randn(size)\r\nX2 = np.random.randn(size) * 0.2\r\n\r\n# Simulate outcome variable\r\nY = alpha + beta[0] * X1 + beta[1] * X2 + np.random.randn(size) * sigma\r\nimport pymc3 as pm\r\nprint(f\"Running on PyMC3 v{pm.__version__}\")\r\n\r\nbasic_model = pm.Model()\r\n\r\nwith basic_model:\r\n\r\n    # Priors for unknown model parameters\r\n    alpha = pm.Normal(\"alpha\", mu=0, sigma=10)\r\n    beta = pm.Normal(\"beta\", mu=0, sigma=10, shape=2)\r\n    sigma = pm.HalfNormal(\"sigma\", sigma=1)\r\n\r\n    # Expected value of outcome\r\n    mu = alpha + beta[0] * X1 + beta[1] * X2\r\n\r\n    # Likelihood (sampling distribution) of observations\r\n    Y_obs = pm.Normal(\"Y_obs\", mu=mu, sigma=sigma, observed=Y)\r\n\r\nwith basic_model:\r\n    # draw 500 posterior samples\r\n    trace = pm.sample(500, cores=1, chains=2, return_inferencedata=False)\r\n\r\nwith basic_model:\r\n    az.plot_trace(trace);\r\n```\r\n\r\n**Please provide the full traceback.**\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\nAttributeError                            Traceback (most recent call last)\r\nC:\\Users\\SREEDATTA\\AppData\\Local\\Temp/ipykernel_12636/3824430439.py in <module>\r\n      1 with basic_model:\r\n----> 2     az.plot_trace(trace);\r\n\r\nC:\\ProgramData\\Anaconda3\\envs\\pm3env\\lib\\site-packages\\arviz\\plots\\traceplot.py in plot_trace(data, var_names, filter_vars, transform, coords, divergences, kind, figsize, rug, lines, circ_var_names, circ_var_units, compact, compact_prop, combined, chain_prop, legend, plot_kwargs, fill_kwargs, rug_kwargs, hist_kwargs, trace_kwargs, rank_kwargs, axes, backend, backend_config, backend_kwargs, show)\r\n    177         divergence_data = False\r\n    178 \r\n--> 179     coords_data = get_coords(convert_to_dataset(data, group=\"posterior\"), coords)\r\n    180 \r\n    181     if transform is not None:\r\n\r\nC:\\ProgramData\\Anaconda3\\envs\\pm3env\\lib\\site-packages\\arviz\\data\\converters.py in convert_to_dataset(obj, group, coords, dims)\r\n    177     xarray.Dataset\r\n    178     \"\"\"\r\n--> 179     inference_data = convert_to_inference_data(obj, group=group, coords=coords, dims=dims)\r\n    180     dataset = getattr(inference_data, group, None)\r\n    181     if dataset is None:\r\n\r\nC:\\ProgramData\\Anaconda3\\envs\\pm3env\\lib\\site-packages\\arviz\\data\\converters.py in convert_to_inference_data(obj, group, coords, dims, **kwargs)\r\n     89             return from_pystan(**kwargs)\r\n     90     elif obj.__class__.__name__ == \"MultiTrace\":  # ugly, but doesn't make PyMC3 a requirement\r\n---> 91         return from_pymc3(trace=kwargs.pop(group), **kwargs)\r\n     92     elif obj.__class__.__name__ == \"EnsembleSampler\":  # ugly, but doesn't make emcee a requirement\r\n     93         return from_emcee(sampler=kwargs.pop(group), **kwargs)\r\n\r\nC:\\ProgramData\\Anaconda3\\envs\\pm3env\\lib\\site-packages\\arviz\\data\\io_pymc3.py in from_pymc3(trace, prior, posterior_predictive, log_likelihood, coords, dims, model, save_warmup, density_dist_obs)\r\n    561     InferenceData\r\n    562     \"\"\"\r\n--> 563     return PyMC3Converter(\r\n    564         trace=trace,\r\n    565         prior=prior,\r\n\r\nC:\\ProgramData\\Anaconda3\\envs\\pm3env\\lib\\site-packages\\arviz\\data\\io_pymc3.py in to_inference_data(self)\r\n    497             \"posterior\": self.posterior_to_xarray(),\r\n    498             \"sample_stats\": self.sample_stats_to_xarray(),\r\n--> 499             \"log_likelihood\": self.log_likelihood_to_xarray(),\r\n    500             \"posterior_predictive\": self.posterior_predictive_to_xarray(),\r\n    501             \"predictions\": self.predictions_to_xarray(),\r\n\r\nC:\\ProgramData\\Anaconda3\\envs\\pm3env\\lib\\site-packages\\arviz\\data\\base.py in wrapped(cls, *args, **kwargs)\r\n     44                 if all([getattr(cls, prop_i) is None for prop_i in prop]):\r\n     45                     return None\r\n---> 46             return func(cls, *args, **kwargs)\r\n     47 \r\n     48         return wrapped\r\n\r\nC:\\ProgramData\\Anaconda3\\envs\\pm3env\\lib\\site-packages\\arviz\\data\\base.py in wrapped(cls, *args, **kwargs)\r\n     44                 if all([getattr(cls, prop_i) is None for prop_i in prop]):\r\n     45                     return None\r\n---> 46             return func(cls, *args, **kwargs)\r\n     47 \r\n     48         return wrapped\r\n\r\nC:\\ProgramData\\Anaconda3\\envs\\pm3env\\lib\\site-packages\\arviz\\data\\io_pymc3.py in log_likelihood_to_xarray(self)\r\n    325         if self.posterior_trace:\r\n    326             try:\r\n--> 327                 data = self._extract_log_likelihood(self.posterior_trace)\r\n    328             except TypeError:\r\n    329                 warnings.warn(warn_msg)\r\n\r\nC:\\ProgramData\\Anaconda3\\envs\\pm3env\\lib\\site-packages\\arviz\\data\\base.py in wrapped(cls, *args, **kwargs)\r\n     44                 if all([getattr(cls, prop_i) is None for prop_i in prop]):\r\n     45                     return None\r\n---> 46             return func(cls, *args, **kwargs)\r\n     47 \r\n     48         return wrapped\r\n\r\nC:\\ProgramData\\Anaconda3\\envs\\pm3env\\lib\\site-packages\\arviz\\data\\base.py in wrapped(cls, *args, **kwargs)\r\n     44                 if all([getattr(cls, prop_i) is None for prop_i in prop]):\r\n     45                     return None\r\n---> 46             return func(cls, *args, **kwargs)\r\n     47 \r\n     48         return wrapped\r\n\r\nC:\\ProgramData\\Anaconda3\\envs\\pm3env\\lib\\site-packages\\arviz\\data\\io_pymc3.py in _extract_log_likelihood(self, trace)\r\n    222         # support extracting a log likelihood.\r\n    223         if self.log_likelihood is True:\r\n--> 224             cached = [(var, var.logp_elemwise) for var in self.model.observed_RVs]\r\n    225         else:\r\n    226             cached = [\r\n\r\nC:\\ProgramData\\Anaconda3\\envs\\pm3env\\lib\\site-packages\\arviz\\data\\io_pymc3.py in <listcomp>(.0)\r\n    222         # support extracting a log likelihood.\r\n    223         if self.log_likelihood is True:\r\n--> 224             cached = [(var, var.logp_elemwise) for var in self.model.observed_RVs]\r\n    225         else:\r\n    226             cached = [\r\n\r\nAttributeError: 'TensorVariable' object has no attribute 'logp_elemwise'\r\n\r\n```\r\n\r\n</details>\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: V4.0 \r\n* Aesara/Theano Version: 2.2.0\r\n* Python Version: 3.8.10\r\n* Operating system: Windows 10-1904\r\n* How did you install PyMC3: (conda/pip)  ```pip install git+https://github.com/pymc-devs/pymc3```\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4957/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4952", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4952/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4952/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4952/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4952", "id": 974285581, "node_id": "MDExOlB1bGxSZXF1ZXN0NzE1NjEyNzQ0", "number": 4952, "title": "Fix bug in NUTS variable assignment", "user": {"login": "aloctavodia", "id": 1338958, "node_id": "MDQ6VXNlcjEzMzg5NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1338958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aloctavodia", "html_url": "https://github.com/aloctavodia", "followers_url": "https://api.github.com/users/aloctavodia/followers", "following_url": "https://api.github.com/users/aloctavodia/following{/other_user}", "gists_url": "https://api.github.com/users/aloctavodia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aloctavodia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aloctavodia/subscriptions", "organizations_url": "https://api.github.com/users/aloctavodia/orgs", "repos_url": "https://api.github.com/users/aloctavodia/repos", "events_url": "https://api.github.com/users/aloctavodia/events{/privacy}", "received_events_url": "https://api.github.com/users/aloctavodia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 16, "created_at": "2021-08-19T05:28:32Z", "updated_at": "2021-08-19T11:53:12Z", "closed_at": "2021-08-19T11:52:31Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4952", "html_url": "https://github.com/pymc-devs/pymc/pull/4952", "diff_url": "https://github.com/pymc-devs/pymc/pull/4952.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4952.patch", "merged_at": "2021-08-19T11:52:31Z"}, "body": "This is a bug I found while working on bringing BART to V4 #4914. NUTS should use the variables passed to the sampler and not get them from the model. @ricardoV94 recommend having this fix in its own PR and separated from the BART PR. ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4952/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4952/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4904", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4904/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4904/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4904/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4904", "id": 961640459, "node_id": "MDU6SXNzdWU5NjE2NDA0NTk=", "number": 4904, "title": "Scalar ODEs on Windows failing because of a casting & broadcastability issue that was fixed only for Linux", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1008939096, "node_id": "MDU6TGFiZWwxMDA4OTM5MDk2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/winOS", "name": "winOS", "color": "f9d0c4", "default": false, "description": "windows OS related"}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-08-05T09:43:06Z", "updated_at": "2021-12-08T20:11:50Z", "closed_at": "2021-12-08T20:11:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nThree ODE tests - all testing with a scalar ODE - still run into broadcastability problems.\r\nThe related Aesara ticket https://github.com/aesara-devs/aesara/issues/390 was closed with a fix that did fix the aforementioned tests for non-Windows OSes.\r\n\r\nBut the tests kept failing for Windows, so apparently the issue still persists under some rare circumstances.\r\n\r\nAlso see https://github.com/pymc-devs/pymc3/pull/4902 which edited the `@pytest.mark.xfail` conditions accordingly.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: `main`\r\n* Aesara Version: `2.1.3`\r\n* Operating system: Windows\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4904/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4869", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4869/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4869/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4869/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4869", "id": 947168821, "node_id": "MDExOlB1bGxSZXF1ZXN0NjkyMTg5NDA3", "number": 4869, "title": "Update `test_extract_obs_data` to test for `AdvancedIncSubtensor`", "user": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2021-07-19T01:22:16Z", "updated_at": "2021-07-19T07:44:59Z", "closed_at": "2021-07-19T07:44:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4869", "html_url": "https://github.com/pymc-devs/pymc/pull/4869", "diff_url": "https://github.com/pymc-devs/pymc/pull/4869.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4869.patch", "merged_at": "2021-07-19T07:44:59Z"}, "body": "This PR updates a test that expects `AdvancedIncSubtensor1`.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4869/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4868", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4868/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4868/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4868/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4868", "id": 947058636, "node_id": "MDExOlB1bGxSZXF1ZXN0NjkyMTA2MDI0", "number": 4868, "title": "Temporarily pin aesara to 2.1.0 to fix CI", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-07-18T15:22:53Z", "updated_at": "2021-08-07T11:21:09Z", "closed_at": "2021-07-19T01:28:27Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4868", "html_url": "https://github.com/pymc-devs/pymc/pull/4868", "diff_url": "https://github.com/pymc-devs/pymc/pull/4868.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4868.patch", "merged_at": null}, "body": "The latest Aesara release caused a test to break.\r\n\r\nThe latest CI run on `main` was with Aesara 2.1.0, but I ran into this problem while working on #4867.\r\n\r\nSince I don't have the leisure to diagnose/fix, this PR pins the Aesara version.\r\nIf someone wants to fix it, feel free to push this branch!\r\nOtherwise I think we should merge ASAP to prevent other PRs from stalling on unrelated CI failures.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4868/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4865", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4865/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4865/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4865/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4865", "id": 944323538, "node_id": "MDU6SXNzdWU5NDQzMjM1Mzg=", "number": 4865, "title": "JAX tests in CI fail for v3", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2381812947, "node_id": "MDU6TGFiZWwyMzgxODEyOTQ3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/jax", "name": "jax", "color": "f241a5", "default": false, "description": ""}, {"id": 2809192918, "node_id": "MDU6TGFiZWwyODA5MTkyOTE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v3", "name": "v3", "color": "F92E0C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-07-14T11:22:57Z", "updated_at": "2021-07-17T00:01:28Z", "closed_at": "2021-07-17T00:01:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It's because of the omnistaging thing..\r\n\r\nhttps://github.com/pymc-devs/pymc3/runs/3066108503#step:8:25\r\n\r\n@twiecki it looks like it was fixed on `main`?\r\nCan't we just remove JAX support on `v3`? I don't see how experimental JAX support is sustainable on both `v3` and `main`  branches.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4865/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4865/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4861", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4861/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4861/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4861/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4861", "id": 943294705, "node_id": "MDU6SXNzdWU5NDMyOTQ3MDU=", "number": 4861, "title": "Binder link is broken", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}, {"id": 2107010938, "node_id": "MDU6TGFiZWwyMTA3MDEwOTM4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/help%20wanted", "name": "help wanted", "color": "b58f13", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-07-13T12:26:05Z", "updated_at": "2021-08-14T19:09:11Z", "closed_at": "2021-08-14T19:09:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<img width=\"1168\" alt=\"image\" src=\"https://user-images.githubusercontent.com/674200/125451212-ecf21d1c-4b20-4583-b1e1-7efbaf1548b2.png\">\r\n\r\nI think we also need to link to the pymc-examples repo instead.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4861/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4836", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4836/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4836/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4836/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4836", "id": 936165618, "node_id": "MDExOlB1bGxSZXF1ZXN0NjgyOTYyMzU3", "number": 4836, "title": "Fix for multinomial random test", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}, {"id": 2809192918, "node_id": "MDU6TGFiZWwyODA5MTkyOTE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v3", "name": "v3", "color": "F92E0C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/23", "html_url": "https://github.com/pymc-devs/pymc/milestone/23", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/23/labels", "id": 6552014, "node_id": "MDk6TWlsZXN0b25lNjU1MjAxNA==", "number": 23, "title": "vNext (3.11.3)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 25, "state": "closed", "created_at": "2021-03-16T14:26:51Z", "updated_at": "2021-08-20T16:50:10Z", "due_on": null, "closed_at": "2021-08-20T16:50:10Z"}, "comments": 11, "created_at": "2021-07-03T04:10:11Z", "updated_at": "2021-07-04T16:12:27Z", "closed_at": "2021-07-04T16:12:27Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4836", "html_url": "https://github.com/pymc-devs/pymc/pull/4836", "diff_url": "https://github.com/pymc-devs/pymc/pull/4836.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4836.patch", "merged_at": null}, "body": "Fixes failure that was triggered by addition of `st.chisquare` denominator test in scipy. I assume we want this merged to v3.11.3.\r\n\r\nCloses #4810 ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4836/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4819", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4819/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4819/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4819/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4819", "id": 932082748, "node_id": "MDU6SXNzdWU5MzIwODI3NDg=", "number": 4819, "title": "Iterating a `MultiTrace` only yields samples from chain 0", "user": {"login": "helmutsimon", "id": 14212177, "node_id": "MDQ6VXNlcjE0MjEyMTc3", "avatar_url": "https://avatars.githubusercontent.com/u/14212177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/helmutsimon", "html_url": "https://github.com/helmutsimon", "followers_url": "https://api.github.com/users/helmutsimon/followers", "following_url": "https://api.github.com/users/helmutsimon/following{/other_user}", "gists_url": "https://api.github.com/users/helmutsimon/gists{/gist_id}", "starred_url": "https://api.github.com/users/helmutsimon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/helmutsimon/subscriptions", "organizations_url": "https://api.github.com/users/helmutsimon/orgs", "repos_url": "https://api.github.com/users/helmutsimon/repos", "events_url": "https://api.github.com/users/helmutsimon/events{/privacy}", "received_events_url": "https://api.github.com/users/helmutsimon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "helmutsimon", "id": 14212177, "node_id": "MDQ6VXNlcjE0MjEyMTc3", "avatar_url": "https://avatars.githubusercontent.com/u/14212177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/helmutsimon", "html_url": "https://github.com/helmutsimon", "followers_url": "https://api.github.com/users/helmutsimon/followers", "following_url": "https://api.github.com/users/helmutsimon/following{/other_user}", "gists_url": "https://api.github.com/users/helmutsimon/gists{/gist_id}", "starred_url": "https://api.github.com/users/helmutsimon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/helmutsimon/subscriptions", "organizations_url": "https://api.github.com/users/helmutsimon/orgs", "repos_url": "https://api.github.com/users/helmutsimon/repos", "events_url": "https://api.github.com/users/helmutsimon/events{/privacy}", "received_events_url": "https://api.github.com/users/helmutsimon/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "helmutsimon", "id": 14212177, "node_id": "MDQ6VXNlcjE0MjEyMTc3", "avatar_url": "https://avatars.githubusercontent.com/u/14212177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/helmutsimon", "html_url": "https://github.com/helmutsimon", "followers_url": "https://api.github.com/users/helmutsimon/followers", "following_url": "https://api.github.com/users/helmutsimon/following{/other_user}", "gists_url": "https://api.github.com/users/helmutsimon/gists{/gist_id}", "starred_url": "https://api.github.com/users/helmutsimon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/helmutsimon/subscriptions", "organizations_url": "https://api.github.com/users/helmutsimon/orgs", "repos_url": "https://api.github.com/users/helmutsimon/repos", "events_url": "https://api.github.com/users/helmutsimon/events{/privacy}", "received_events_url": "https://api.github.com/users/helmutsimon/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2021-06-28T23:52:49Z", "updated_at": "2021-09-13T05:52:15Z", "closed_at": "2021-09-13T05:52:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the code below, I run a simple example model (the details of the model don't seem relevant to the problem). There should be 2000 draws, so why does the array `xvars`  have only 1000? In contrast, tracetab.trace_to_dataframe results in a dataframe with 2000 rows, as I would expect. My system details are:\r\nNumpy  1.16.3\r\nPyMC3  3.11.0\r\nTheano  1.1.0\r\nsys.version_info(major=3, minor=7, micro=3, releaselevel='final', serial=0)\r\n\r\n```\r\nimport sys\r\nimport numpy as np\r\nimport pymc3\r\nfrom pymc3.distributions.discrete import Poisson, Categorical\r\nfrom pymc3.sampling import sample\r\nfrom pymc3 import Model\r\nfrom pymc3.backends import tracetab\r\nimport theano\r\n\r\n\r\ndef run_MCMC(n, obs, draws):\r\n    obs = np.array(obs)\r\n    with Model() as model: \r\n        \r\n        pn = np.ones(n) / n\r\n        x = Categorical('x', pn, testval=0)\r\n        sfs_obs = Poisson('sfs_obs', mu=x + 1, observed=obs) \r\n\r\n    with model:\r\n        trace = sample(draws, tune=0, return_inferencedata=False) \r\n    return trace\r\n\r\nprint('Numpy ', np.__version__)\r\nprint('PyMC3 ', pymc3.__version__)\r\nprint('Theano ', theano.__version__)\r\nprint(sys.version_info)\r\nobs = 3\r\ndraws = 1000\r\nn = 10\r\ntrace = run_MCMC(n, obs, draws)\r\nxvars = [t['x'] for t in trace]\r\nprint(len(xvars))\r\nprint(xvars[:10])\r\ntrace_df = tracetab.trace_to_dataframe(trace)\r\nprint(trace_df.shape)\r\n```\r\n\r\nOutput is:\r\nNumpy  1.16.3\r\nPyMC3  3.11.0\r\nTheano  1.1.0\r\nsys.version_info(major=3, minor=7, micro=3, releaselevel='final', serial=0)\r\nMultiprocess sampling (2 chains in 2 jobs)\r\nCategoricalGibbsMetropolis: [x]\r\n\r\n 100.00% [2000/2000 00:02<00:00 Sampling 2 chains, 0 divergences]\r\nSampling 2 chains for 0 tune and 1_000 draw iterations (0 + 2_000 draws total) took 11 seconds.\r\n1000\r\n[3, 6, 7, 0, 7, 4, 1, 1, 1, 1]\r\n(2000, 1)", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4819/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4804", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4804/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4804/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4804/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4804", "id": 929480081, "node_id": "MDU6SXNzdWU5Mjk0ODAwODE=", "number": 4804, "title": "SMC fails with multiple observations of unequal size", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3120230247, "node_id": "MDU6TGFiZWwzMTIwMjMwMjQ3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/SMC", "name": "SMC", "color": "238E83", "default": false, "description": "Sequential Monte Carlo"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-06-24T18:00:38Z", "updated_at": "2021-08-13T13:55:52Z", "closed_at": "2021-08-13T13:55:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nwith pm.Model() as m:\r\n    x = pm.Normal('x', 0, 1)\r\n    y = pm.Normal('y', x, 1, observed=[1])\r\n    z = pm.Normal('z', x, 1, observed=[2, 2])\r\n    trace = pm.sample_smc()\r\n```\r\n\r\n**Please provide the full traceback.**\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\n\r\nValueError                                Traceback (most recent call last)\r\n\r\n~/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/compile/function/types.py in __call__(self, *args, **kwargs)\r\n    975             outputs = (\r\n--> 976                 self.fn()\r\n    977                 if output_subset is None\r\n\r\nValueError: all the input array dimensions for the concatenation axis must match exactly, but along dimension 1, the array at index 0 has size 1 and the array at index 1 has size 2\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n\r\n<ipython-input-197-1e510f191ad3> in <module>\r\n      3     y = pm.Normal('y', x, 1, observed=[1])\r\n      4     z = pm.Normal('z', x, 1, observed=[2, 2])\r\n----> 5     trace = pm.sample_smc()\r\n\r\n~/Documents/Projects/pymc3/pymc3/smc/sample_smc.py in sample_smc(draws, kernel, n_steps, start, tune_steps, p_acc_rate, threshold, save_sim_data, save_log_pseudolikelihood, model, random_seed, parallel, chains, cores)\r\n    203         results = []\r\n    204         for i in range(chains):\r\n--> 205             results.append(sample_smc_int(*params, random_seed[i], i, _log))\r\n    206 \r\n    207     (\r\n\r\n~/Documents/Projects/pymc3/pymc3/smc/sample_smc.py in sample_smc_int(draws, kernel, n_steps, start, tune_steps, p_acc_rate, threshold, save_sim_data, save_log_pseudolikelihood, model, random_seed, chain, _log)\r\n    266     smc.initialize_population()\r\n    267     smc.setup_kernel()\r\n--> 268     smc.initialize_logp()\r\n    269 \r\n    270     while smc.beta < 1:\r\n\r\n~/Documents/Projects/pymc3/pymc3/smc/smc.py in initialize_logp(self)\r\n    149         priors = [self.prior_logp_func(sample) for sample in self.posterior]\r\n    150         likelihoods = [self.likelihood_logp_func(sample) for sample in self.posterior]\r\n--> 151 \r\n    152         self.prior_logp = np.array(priors).squeeze()\r\n    153         self.likelihood_logp = np.array(likelihoods).squeeze()\r\n\r\n~/Documents/Projects/pymc3/pymc3/smc/smc.py in <listcomp>(.0)\r\n    149         priors = [self.prior_logp_func(sample) for sample in self.posterior]\r\n    150         likelihoods = [self.likelihood_logp_func(sample) for sample in self.posterior]\r\n--> 151 \r\n    152         self.prior_logp = np.array(priors).squeeze()\r\n    153         self.likelihood_logp = np.array(likelihoods).squeeze()\r\n\r\n~/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/compile/function/types.py in __call__(self, *args, **kwargs)\r\n    987                 if hasattr(self.fn, \"thunks\"):\r\n    988                     thunk = self.fn.thunks[self.fn.position_of_error]\r\n--> 989                 raise_with_op(\r\n    990                     self.maker.fgraph,\r\n    991                     node=self.fn.nodes[self.fn.position_of_error],\r\n\r\n~/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/link/utils.py in raise_with_op(fgraph, node, thunk, exc_info, storage_map)\r\n    520         # Some exception need extra parameter in inputs. So forget the\r\n    521         # extra long error message in that case.\r\n--> 522     raise exc_value.with_traceback(exc_trace)\r\n    523 \r\n    524 \r\n\r\n~/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/compile/function/types.py in __call__(self, *args, **kwargs)\r\n    974         try:\r\n    975             outputs = (\r\n--> 976                 self.fn()\r\n    977                 if output_subset is None\r\n    978                 else self.fn(output_subset=output_subset)\r\n\r\nValueError: all the input array dimensions for the concatenation axis must match exactly, but along dimension 1, the array at index 0 has size 1 and the array at index 1 has size 2\r\nApply node that caused the error: Join(TensorConstant{0}, Elemwise{Composite{(i0 * (i1 + (-sqr((i2 - i3)))))}}.0, Elemwise{Composite{(i0 * (i1 + (-sqr((i2 - i3)))))}}.0)\r\nToposort index: 3\r\nInputs types: [TensorType(int8, scalar), TensorType(float64, (True, True)), TensorType(float64, row)]\r\nInputs shapes: [(), (1, 1), (1, 2)]\r\nInputs strides: [(), (8, 8), (16, 8)]\r\nInputs values: [array(0, dtype=int8), array([[-0.94674229]]), array([[-1.21092983, -1.21092983]])]\r\nOutputs clients: [[Sum{acc_dtype=float64}(Join.0)]]\r\n\r\nBacktrace when the node is created (use Aesara flag traceback__limit=N to make it longer):\r\n  File \"/home/ricardo/Documents/Projects/pymc3/pymc3/smc/sample_smc.py\", line 267, in sample_smc_int\r\n    smc.setup_kernel()\r\n  File \"/home/ricardo/Documents/Projects/pymc3/pymc3/smc/smc.py\", line 145, in setup_kernel\r\n    )\r\n  File \"/home/ricardo/Documents/Projects/pymc3/pymc3/model.py\", line 811, in datalogpt\r\n    return at.sum(factors)\r\n  File \"/home/ricardo/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/tensor/math.py\", line 2471, in sum\r\n    out = Sum(axis=axis, dtype=dtype, acc_dtype=acc_dtype)(input)\r\n  File \"/home/ricardo/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/graph/op.py\", line 271, in __call__\r\n    node = self.make_node(*inputs, **kwargs)\r\n  File \"/home/ricardo/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/tensor/elemwise.py\", line 1761, in make_node\r\n    input = aesara.tensor.basic.as_tensor_variable(input)\r\n  File \"/home/ricardo/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/tensor/__init__.py\", line 41, in as_tensor_variable\r\n    return _as_tensor_variable(x, name, ndim, **kwargs)\r\n  File \"/usr/lib/python3.8/functools.py\", line 875, in wrapper\r\n    return dispatch(args[0].__class__)(*args, **kw)\r\n\r\nHINT: Use the Aesara flag `exception_verbosity=high` for a debug print-out and storage map footprint of this Apply node.\r\n```\r\n\r\n</details>\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version:\r\n* Aesara/Theano Version:\r\n* Python Version:\r\n* Operating system:\r\n* How did you install PyMC3: (conda/pip)\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4804/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4803", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4803/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4803/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4803/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4803", "id": 929477598, "node_id": "MDU6SXNzdWU5Mjk0Nzc1OTg=", "number": 4803, "title": "SMC fails with `pm.Potential` terms", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3120230247, "node_id": "MDU6TGFiZWwzMTIwMjMwMjQ3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/SMC", "name": "SMC", "color": "238E83", "default": false, "description": "Sequential Monte Carlo"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-06-24T17:58:05Z", "updated_at": "2021-07-16T07:15:31Z", "closed_at": "2021-07-16T07:15:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nwith pm.Model() as m:\r\n    x = pm.Normal('x', 0, 1)\r\n    y = pm.Normal('y', x, 1, observed=[1])\r\n    z = pm.Potential('z', x)\r\n    trace = pm.sample_smc()\r\n```\r\n\r\n**Please provide the full traceback.**\r\n\r\n<details><summary>Complete error traceback</summary>\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n\r\n~/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/tensor/basic.py in _as_tensor_Sequence(x, name, ndim, dtype, **kwargs)\r\n    158     try:\r\n--> 159         x = type(x)(extract_constants(i) for i in x)\r\n    160     except TypeError:\r\n\r\n~/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/tensor/basic.py in <genexpr>(.0)\r\n    158     try:\r\n--> 159         x = type(x)(extract_constants(i) for i in x)\r\n    160     except TypeError:\r\n\r\n~/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/tensor/basic.py in extract_constants(i)\r\n    153             else:\r\n--> 154                 raise TypeError\r\n    155         else:\r\n\r\nTypeError: \r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n\r\n<ipython-input-191-2a0c62da4e6c> in <module>\r\n      3     y = pm.Normal('y', x, 1, observed=[1])\r\n      4     z = pm.Potential('z', x)\r\n----> 5     trace = pm.sample_smc()\r\n\r\n~/Documents/Projects/pymc3/pymc3/smc/sample_smc.py in sample_smc(draws, kernel, n_steps, start, tune_steps, p_acc_rate, threshold, save_sim_data, save_log_pseudolikelihood, model, random_seed, parallel, chains, cores)\r\n    203         results = []\r\n    204         for i in range(chains):\r\n--> 205             results.append(sample_smc_int(*params, random_seed[i], i, _log))\r\n    206 \r\n    207     (\r\n\r\n~/Documents/Projects/pymc3/pymc3/smc/sample_smc.py in sample_smc_int(draws, kernel, n_steps, start, tune_steps, p_acc_rate, threshold, save_sim_data, save_log_pseudolikelihood, model, random_seed, chain, _log)\r\n    265     nsteps = []\r\n    266     smc.initialize_population()\r\n--> 267     smc.setup_kernel()\r\n    268     smc.initialize_logp()\r\n    269 \r\n\r\n~/Documents/Projects/pymc3/pymc3/smc/smc.py in setup_kernel(self)\r\n    143         self.likelihood_logp_func = logp_forw(\r\n    144             initial_values, [self.model.datalogpt], self.variables, shared\r\n--> 145         )\r\n    146 \r\n    147     def initialize_logp(self):\r\n\r\n~/Documents/Projects/pymc3/pymc3/model.py in datalogpt(self)\r\n    809 \r\n    810             factors += [at.sum(factor) for factor in potentials]\r\n--> 811             return at.sum(factors)\r\n    812 \r\n    813     @property\r\n\r\n~/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/tensor/math.py in sum(input, axis, dtype, keepdims, acc_dtype)\r\n   2469     \"\"\"\r\n   2470 \r\n-> 2471     out = Sum(axis=axis, dtype=dtype, acc_dtype=acc_dtype)(input)\r\n   2472 \r\n   2473     if keepdims:\r\n\r\n~/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/graph/op.py in __call__(self, *inputs, **kwargs)\r\n    269         \"\"\"\r\n    270         return_list = kwargs.pop(\"return_list\", False)\r\n--> 271         node = self.make_node(*inputs, **kwargs)\r\n    272 \r\n    273         if config.compute_test_value != \"off\":\r\n\r\n~/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/tensor/elemwise.py in make_node(self, input)\r\n   1759         # we can infer what dtype should be, and create a node from an Op\r\n   1760         # of the appropriate dtype.\r\n-> 1761         input = aesara.tensor.basic.as_tensor_variable(input)\r\n   1762         dtype = self._output_dtype(input.dtype)\r\n   1763         acc_dtype = self._acc_dtype(input.dtype)\r\n\r\n~/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/tensor/__init__.py in as_tensor_variable(x, name, ndim, **kwargs)\r\n     39 \r\n     40     \"\"\"\r\n---> 41     return _as_tensor_variable(x, name, ndim, **kwargs)\r\n     42 \r\n     43 \r\n\r\n/usr/lib/python3.8/functools.py in wrapper(*args, **kw)\r\n    873                             '1 positional argument')\r\n    874 \r\n--> 875         return dispatch(args[0].__class__)(*args, **kw)\r\n    876 \r\n    877     funcname = getattr(func, '__name__', 'singledispatch function')\r\n\r\n~/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/tensor/basic.py in _as_tensor_Sequence(x, name, ndim, dtype, **kwargs)\r\n    171         # couldn't get an underlying non-symbolic sequence of objects and we to\r\n    172         # symbolically join terms.\r\n--> 173         return stack(x)\r\n    174 \r\n    175     return constant(x, name=name, ndim=ndim, dtype=dtype)\r\n\r\n~/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/tensor/basic.py in stack(*tensors, **kwargs)\r\n   2715         dtype = aes.upcast(*[i.dtype for i in tensors])\r\n   2716         return aesara.tensor.basic_opt.MakeVector(dtype)(*tensors)\r\n-> 2717     return join(axis, *[shape_padaxis(t, axis) for t in tensors])\r\n   2718 \r\n   2719 \r\n\r\n~/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/tensor/basic.py in join(axis, *tensors_list)\r\n   2561         return tensors_list[0]\r\n   2562     else:\r\n-> 2563         return join_(axis, *tensors_list)\r\n   2564 \r\n   2565 \r\n\r\n~/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/graph/op.py in __call__(self, *inputs, **kwargs)\r\n    269         \"\"\"\r\n    270         return_list = kwargs.pop(\"return_list\", False)\r\n--> 271         node = self.make_node(*inputs, **kwargs)\r\n    272 \r\n    273         if config.compute_test_value != \"off\":\r\n\r\n~/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/tensor/basic.py in make_node(self, *axis_and_tensors)\r\n   2282             return tensor(dtype=out_dtype, broadcastable=bcastable)\r\n   2283 \r\n-> 2284         return self._make_node_internal(\r\n   2285             axis, tens, as_tensor_variable_args, output_maker\r\n   2286         )\r\n\r\n~/Documents/Projects/pymc3-venv/lib/python3.8/site-packages/aesara/tensor/basic.py in _make_node_internal(self, axis, tens, as_tensor_variable_args, output_maker)\r\n   2352             [x.ndim == len(bcastable) for x in as_tensor_variable_args[1:]]\r\n   2353         ):\r\n-> 2354             raise TypeError(\r\n   2355                 \"Join() can only join tensors with the same \" \"number of dimensions.\"\r\n   2356             )\r\n\r\nTypeError: Join() can only join tensors with the same number of dimensions.\r\n```\r\n\r\n</details>\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version:\r\n* Aesara/Theano Version:\r\n* Python Version:\r\n* Operating system:\r\n* How did you install PyMC3: (conda/pip)\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4803/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4799", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4799/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4799/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4799/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4799", "id": 926281670, "node_id": "MDU6SXNzdWU5MjYyODE2NzA=", "number": 4799, "title": "AttributeError: Can't pickle local object 'BoundedContinuous.default_transform.<locals>.transform_params'", "user": {"login": "mjhajharia", "id": 55153708, "node_id": "MDQ6VXNlcjU1MTUzNzA4", "avatar_url": "https://avatars.githubusercontent.com/u/55153708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjhajharia", "html_url": "https://github.com/mjhajharia", "followers_url": "https://api.github.com/users/mjhajharia/followers", "following_url": "https://api.github.com/users/mjhajharia/following{/other_user}", "gists_url": "https://api.github.com/users/mjhajharia/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjhajharia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjhajharia/subscriptions", "organizations_url": "https://api.github.com/users/mjhajharia/orgs", "repos_url": "https://api.github.com/users/mjhajharia/repos", "events_url": "https://api.github.com/users/mjhajharia/events{/privacy}", "received_events_url": "https://api.github.com/users/mjhajharia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19", "html_url": "https://github.com/pymc-devs/pymc/milestone/19", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19/labels", "id": 6130583, "node_id": "MDk6TWlsZXN0b25lNjEzMDU4Mw==", "number": 19, "title": "v4.0.0b1 (vNext)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 65, "state": "closed", "created_at": "2020-11-20T09:32:38Z", "updated_at": "2021-12-16T14:23:33Z", "due_on": null, "closed_at": "2021-12-16T14:23:33Z"}, "comments": 2, "created_at": "2021-06-21T14:32:47Z", "updated_at": "2021-07-16T11:52:20Z", "closed_at": "2021-07-16T11:52:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Sampling time error: \r\n\r\n`AttributeError: Can't pickle local object 'BoundedContinuous.default_transform.<locals>.transform_params'`\r\n\r\nTo reproduce:\r\n```\r\n%matplotlib inline\r\nimport aesara\r\nimport pymc3 as pm\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nimport statsmodels.api as sm\r\nimport pandas as pd\r\nfrom pandas_datareader.data import DataReader\r\nfrom pandas.plotting import register_matplotlib_converters\r\nfrom aesara.graph.op import Op\r\nplt.style.use('seaborn')\r\nregister_matplotlib_converters()\r\ncpi = DataReader('CPIAUCNS', 'fred', start='1971-01', end='2018-12')\r\ncpi.index = pd.DatetimeIndex(cpi.index, freq='MS')\r\n\r\n# Define the inflation series that we'll use in analysis\r\ninf = np.log(cpi).resample('QS').mean().diff()[1:] * 400\r\nprint(inf.head())\r\nclass Loglike(Op):\r\n\r\n    itypes = [aesara.tensor.dvector] # expects a vector of parameter values when called\r\n    otypes = [aesara.tensor.dscalar] # outputs a single scalar value (the log likelihood)\r\n\r\n    def __init__(self, model):\r\n        self.model = model\r\n        self.score = Score(self.model)\r\n\r\n    def perform(self, node, inputs, outputs):\r\n        theta, = inputs  # contains the vector of parameters\r\n        llf = self.model.loglike(theta)\r\n        outputs[0][0] = np.array(llf) # output the log-likelihood\r\n\r\n    def grad(self, inputs, g):\r\n        # the method that calculates the gradients - it actually returns the\r\n        # vector-Jacobian product - g[0] is a vector of parameter values\r\n        theta, = inputs  # our parameters\r\n        out = [g[0] * self.score(theta)]\r\n        return out\r\n\r\n\r\nclass Score(Op):\r\n    itypes = [aesara.tensor.dvector]\r\n    otypes = [aesara.tensor.dvector]\r\n\r\n    def __init__(self, model):\r\n        self.model = model\r\n\r\n    def perform(self, node, inputs, outputs):\r\n        theta, = inputs\r\n        outputs[0][0] = self.model.score(theta)\r\n        \r\nndraws = 3000  \r\nnburn = 600  \r\n\r\nmod = sm.tsa.statespace.SARIMAX(inf, order=(1, 0, 1))\r\n\r\nloglike = Loglike(mod)\r\n\r\nwith pm.Model():\r\n    # Priors\r\n    arL1 = pm.Uniform('ar.L1', -0.99, 0.99)\r\n    maL1 = pm.Uniform('ma.L1', -0.99, 0.99)\r\n    sigma2 = pm.InverseGamma('sigma2', 2, 4)\r\n\r\n    # convert variables to aesara vectors\r\n    theta = aesara.tensor.as_tensor_variable([arL1, maL1, sigma2])\r\n    \r\n\r\n    # use a DensityDist (use a lamdba function to \"call\" the Op)\r\n    pm.Potential('likelihood',loglike(theta))\r\n\r\n    # Draw samples\r\n    trace = pm.sample(ndraws, tune=nburn, discard_tuned_samples=False,return_inferencedata=True,cores=4)\r\n```\r\n\r\n\r\nVersions:\r\n```\r\nPython implementation: CPython\r\nPython version       : 3.9.5\r\nIPython version      : 7.24.1\r\n\r\npymc3      : 4.0\r\njson       : 2.0.9\r\npandas     : 1.2.4\r\nmatplotlib : 3.4.2\r\nnumpy      : 1.20.3\r\naesara     : 2.0.11\r\nstatsmodels: 0.12.2\r\n\r\nWatermark: 2.2.0\r\n\r\n```\r\n\r\n\r\nMore information: I don't know but maybe it's because of v4 or aesara or pickle backend. It works when cores=1 during sampling, so its only an error during multiprocessing. Also, a similar error happened a while back (I used pm.DensityDist insted of pm.Potential and got \"runtime error: chain 0 failed\" which was fixed with pickle backend = dill. Perhaps we need a better fix, any help is appreciated!!!!\r\n\r\nCC: @brandonwillard ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4799/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4780", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4780/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4780/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4780/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4780", "id": 924352109, "node_id": "MDExOlB1bGxSZXF1ZXN0NjczMDA0ODgz", "number": 4780, "title": "Fix LKJCorr.random", "user": {"login": "Sayam753", "id": 43073325, "node_id": "MDQ6VXNlcjQzMDczMzI1", "avatar_url": "https://avatars.githubusercontent.com/u/43073325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sayam753", "html_url": "https://github.com/Sayam753", "followers_url": "https://api.github.com/users/Sayam753/followers", "following_url": "https://api.github.com/users/Sayam753/following{/other_user}", "gists_url": "https://api.github.com/users/Sayam753/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sayam753/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sayam753/subscriptions", "organizations_url": "https://api.github.com/users/Sayam753/orgs", "repos_url": "https://api.github.com/users/Sayam753/repos", "events_url": "https://api.github.com/users/Sayam753/events{/privacy}", "received_events_url": "https://api.github.com/users/Sayam753/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2809192918, "node_id": "MDU6TGFiZWwyODA5MTkyOTE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v3", "name": "v3", "color": "F92E0C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/23", "html_url": "https://github.com/pymc-devs/pymc/milestone/23", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/23/labels", "id": 6552014, "node_id": "MDk6TWlsZXN0b25lNjU1MjAxNA==", "number": 23, "title": "vNext (3.11.3)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 25, "state": "closed", "created_at": "2021-03-16T14:26:51Z", "updated_at": "2021-08-20T16:50:10Z", "due_on": null, "closed_at": "2021-08-20T16:50:10Z"}, "comments": 2, "created_at": "2021-06-17T21:31:01Z", "updated_at": "2021-08-16T13:25:20Z", "closed_at": "2021-06-19T18:38:59Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4780", "html_url": "https://github.com/pymc-devs/pymc/pull/4780", "diff_url": "https://github.com/pymc-devs/pymc/pull/4780.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4780.patch", "merged_at": "2021-06-19T18:38:59Z"}, "body": "**Thank your for opening a PR!**\r\n\r\nDepending on what your PR does, here are a few things you might want to address in the description:\r\n+ [X] what are the (breaking) changes that this PR makes?\r\nFixes https://github.com/pymc-devs/pymc3/issues/4778\r\n+ [X] important background, or details about the implementation\r\nLet `to_tuple` function handle edge cases for us.\r\n+ [X] are the changes\u2014especially new features\u2014covered by tests and docstrings?\r\nyes\r\n+ [X] [linting/style checks have been run](https://github.com/pymc-devs/pymc3/wiki/PyMC3-Python-Code-Style)\r\n+ [X] right before it's ready to merge, mention the PR in the RELEASE-NOTES.md\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4780/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4779", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4779/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4779/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4779/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4779", "id": 924195068, "node_id": "MDExOlB1bGxSZXF1ZXN0NjcyODY4MTc0", "number": 4779, "title": "Create dedicated environment YML for Windows", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1008939096, "node_id": "MDU6TGFiZWwxMDA4OTM5MDk2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/winOS", "name": "winOS", "color": "f9d0c4", "default": false, "description": "windows OS related"}, {"id": 2809192918, "node_id": "MDU6TGFiZWwyODA5MTkyOTE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v3", "name": "v3", "color": "F92E0C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/23", "html_url": "https://github.com/pymc-devs/pymc/milestone/23", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/23/labels", "id": 6552014, "node_id": "MDk6TWlsZXN0b25lNjU1MjAxNA==", "number": 23, "title": "vNext (3.11.3)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 25, "state": "closed", "created_at": "2021-03-16T14:26:51Z", "updated_at": "2021-08-20T16:50:10Z", "due_on": null, "closed_at": "2021-08-20T16:50:10Z"}, "comments": 2, "created_at": "2021-06-17T17:58:55Z", "updated_at": "2021-06-19T17:30:30Z", "closed_at": "2021-06-19T17:30:25Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4779", "html_url": "https://github.com/pymc-devs/pymc/pull/4779", "diff_url": "https://github.com/pymc-devs/pymc/pull/4779.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4779.patch", "merged_at": "2021-06-19T17:30:25Z"}, "body": "The install installation guide for Windows was recently updated after it was discovered that the combination of numba+scipy dependencies leads to the correct installation of BLAS dependencies.\r\n\r\nThis PR creates a conda `environment.yml` specifically for Windows. That's because the `m2w64-toolchain` dependency is Windows-only and conda does not yet support flags to make dependencies OS-specific.\r\n\r\nThe GitHub Action for Windows was changed to use the new environment file.\r\nMaybe this fixes the CI issues for the `v3` branch.\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4779/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4771", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4771/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4771/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4771/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4771", "id": 920539198, "node_id": "MDU6SXNzdWU5MjA1MzkxOTg=", "number": 4771, "title": "`find_MAP` is failing in `V4`", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/28", "html_url": "https://github.com/pymc-devs/pymc/milestone/28", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/28/labels", "id": 7551761, "node_id": "MI_kwDOAALxiM4AczsR", "number": 28, "title": "v4.0.0b3", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 17, "state": "closed", "created_at": "2022-01-07T15:42:51Z", "updated_at": "2022-03-17T09:44:35Z", "due_on": null, "closed_at": "2022-03-17T09:44:35Z"}, "comments": 7, "created_at": "2021-06-14T15:39:45Z", "updated_at": "2022-02-04T08:28:42Z", "closed_at": "2022-02-04T08:28:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "While working on #4770 I found that `find_MAP` is failing quite often after the `V4` refactoring.\r\n\r\nMost issues seem related to gradients of discrete vars and/or models with both discrete and continuous unobserved variables. The failing tests in [here](https://github.com/pymc-devs/pymc3/blob/722341f0f7bda1f96671fe2d532e79b768b0db1c/pymc3/tests/test_starting.py#L49-L100) are marked with an `xfail` for the time being.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4771/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4766", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4766/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4766/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4766/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4766", "id": 919689835, "node_id": "MDU6SXNzdWU5MTk2ODk4MzU=", "number": 4766, "title": "Seg fault in sampling", "user": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-06-13T00:58:07Z", "updated_at": "2021-06-15T18:36:07Z", "closed_at": "2021-06-15T18:36:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Running a large model for Latent Dirichlet Allocation, got a segmentation fault using pymc3 on Linux.\r\n\r\n## Description of your problem\r\n\r\nThe following is a snippet of the model and the invocation of the sampler.\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nnum_words = df.shape[0]\r\n\r\nwith pm.Model() as model:\r\n    #alpha = pm.Data(\"\u03b1\", np.ones((1, K)))\r\n    alpha = np.ones((1, K))\r\n    # beta_prior = pm.Data(\"\u03b2\", np.ones((1, V)))\r\n    beta_prior = np.ones((1, V))\r\n    doc_num = pm.Data('i', df['Document'])\r\n    theta = pm.Dirichlet(\"\u03b8\", a=alpha, shape=(D, K)) # topic probabilities\r\n\r\n    # z = pm.Categorical(\"z_i\", p=theta[doc_num], shape=df.shape[0]) # topic for word\r\n    beta = pm.Dirichlet(\"beta\", a=beta_prior, shape=(K, V)) # word probabilities\r\n    #ws = pm.Deterministic(\"z * w\", t.dot(theta[doc_num], beta))\r\n    w = pm.Categorical(\"w\",\r\n                       p=t.dot(theta[doc_num], beta),\r\n                       # p=ws,\r\n                       shape=df.shape[0],\r\n                       observed=df['Word']\r\n                      )\r\n\r\nwith model:\r\n    tr = pm.sample(100, tune=100, return_inferencedata=True)\r\n\r\n```\r\n\r\nThe full script (with requisite input data) is in [a GitHub gist](https://gist.github.com/rpgoldman/2aca5e6db0822a9063bfb434071923b5).\r\n\r\n**Please provide the full traceback.**\r\n\r\nThere was no python traceback, but I have a gdb full backtrace (all threads), and it is also in [the GitHub gist](https://gist.github.com/rpgoldman/2aca5e6db0822a9063bfb434071923b5).\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.11.2\r\n* Aesara/Theano Version: 1.1.2\r\n* Python Version: 3.9.4\r\n* Operating system: Linux 4.15.0-144-generic #148-Ubuntu SMP Sat May 8 02:33:43 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\r\n* How did you install PyMC3: conda from conda-forge\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4766/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4749", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4749/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4749/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4749/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4749", "id": 913487681, "node_id": "MDU6SXNzdWU5MTM0ODc2ODE=", "number": 4749, "title": "Windows installation guide produces failed compilation Error: invalid register for .seh_savexmm\\r. '", "user": {"login": "davidsteinar", "id": 13967819, "node_id": "MDQ6VXNlcjEzOTY3ODE5", "avatar_url": "https://avatars.githubusercontent.com/u/13967819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidsteinar", "html_url": "https://github.com/davidsteinar", "followers_url": "https://api.github.com/users/davidsteinar/followers", "following_url": "https://api.github.com/users/davidsteinar/following{/other_user}", "gists_url": "https://api.github.com/users/davidsteinar/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidsteinar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidsteinar/subscriptions", "organizations_url": "https://api.github.com/users/davidsteinar/orgs", "repos_url": "https://api.github.com/users/davidsteinar/repos", "events_url": "https://api.github.com/users/davidsteinar/events{/privacy}", "received_events_url": "https://api.github.com/users/davidsteinar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1008939096, "node_id": "MDU6TGFiZWwxMDA4OTM5MDk2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/winOS", "name": "winOS", "color": "f9d0c4", "default": false, "description": "windows OS related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 34, "created_at": "2021-06-07T12:19:41Z", "updated_at": "2021-08-16T19:59:19Z", "closed_at": "2021-06-10T12:43:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n## Description of your problem\r\n\r\nBy following the [Windows installation guide](https://github.com/pymc-devs/pymc3/wiki/Installation-Guide-(Windows))  and the [getting started notebook](https://docs.pymc.io/notebooks/getting_started.html) I get the following error when calling `map_estimate = pm.find_MAP(model=basic_model)`\r\n\r\n\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nconda create -c msys2 -c conda-forge -n mypm3env python=3.8 mkl-service libpython m2w64-toolchain scipy matplotlib pandas -y\r\nconda activate mypm3env\r\nconda install -c conda-forge pymc3 -y\r\n\r\npython\r\n\r\n>>> import numpy as np\r\n>>> import pymc3 as pm\r\n>>> \r\n>>> RANDOM_SEED = 8927\r\n>>> np.random.seed(RANDOM_SEED)\r\n>>> \r\n>>> # True parameter values\r\n>>> alpha, sigma = 1, 1\r\n>>> beta = [1, 2.5]\r\n>>> \r\n>>> # Size of dataset\r\n>>> size = 100\r\n>>> \r\n>>> # Predictor variable\r\n>>> X1 = np.random.randn(size)\r\n>>> X2 = np.random.randn(size) * 0.2\r\n>>> \r\n>>> # Simulate outcome variable\r\n>>> Y = alpha + beta[0] * X1 + beta[1] * X2 + np.random.randn(size) * sigma\r\n>>> \r\n>>> print(f\"Running on PyMC3 v{pm.__version__}\")\r\n>>> \r\n>>> basic_model = pm.Model()\r\n>>> with basic_model:\r\n>>> \r\n>>>     # Priors for unknown model parameters\r\n>>>     alpha = pm.Normal(\"alpha\", mu=0, sigma=10)\r\n>>>     beta = pm.Normal(\"beta\", mu=0, sigma=10, shape=2)\r\n>>>     sigma = pm.HalfNormal(\"sigma\", sigma=1)\r\n>>> \r\n>>>     # Expected value of outcome\r\n>>>     mu = alpha + beta[0] * X1 + beta[1] * X2\r\n>>> \r\n>>>     # Likelihood (sampling distribution) of observations\r\n>>>     Y_obs = pm.Normal(\"Y_obs\", mu=mu, sigma=sigma, observed=Y)\r\n>>> \r\n>>> map_estimate = pm.find_MAP(model=basic_model)\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\nTraceback (most recent call last):\r\n  File \".\\pipelines\\mc3.py\", line 37, in <module>\r\n    map_estimate = pm.find_MAP(model=basic_model)\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\pymc3\\tuning\\starting.py\", line 114, in find_MAP\r\n    dlogp_func = bij.mapf(model.fastdlogp_nojac(vars))\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\pymc3\\model.py\", line 462, in fastdlogp_nojac\r\n    return self.model.fastfn(gradient(self.logp_nojact, vars))\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\pymc3\\theanof.py\", line 131, in gradient\r\n    return tt.concatenate([gradient1(f, v) for v in vars], axis=0)\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\pymc3\\theanof.py\", line 131, in <listcomp>\r\n    return tt.concatenate([gradient1(f, v) for v in vars], axis=0)\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\pymc3\\theanof.py\", line 120, in gradient1\r\n    return tt.flatten(tt.grad(f, v, disconnected_inputs=\"warn\"))\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\gradient.py\", line 639, in grad\r\n    rval = _populate_grad_dict(var_to_app_to_idx, grad_dict, wrt, cost_name)\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\gradient.py\", line 1440, in _populate_grad_dict\r\n    rval = [access_grad_cache(elem) for elem in wrt]\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\gradient.py\", line 1440, in <listcomp>\r\n    rval = [access_grad_cache(elem) for elem in wrt]\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\gradient.py\", line 1393, in access_grad_cache\r\n    term = access_term_cache(node)[idx]\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\gradient.py\", line 1061, in access_term_cache\r\n    output_grads = [access_grad_cache(var) for var in node.outputs]\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\gradient.py\", line 1061, in <listcomp>\r\n    output_grads = [access_grad_cache(var) for var in node.outputs]\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\gradient.py\", line 1393, in access_grad_cache\r\n    term = access_term_cache(node)[idx]\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\gradient.py\", line 1220, in access_term_cache\r\n    input_grads = node.op.L_op(inputs, node.outputs, new_output_grads)\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\tensor\\elemwise.py\", line 564, in L_op\r\n    rval = self._bgrad(inputs, outs, ograds)\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\tensor\\elemwise.py\", line 668, in _bgrad\r\n    ret.append(transform(scalar_igrad))\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\tensor\\elemwise.py\", line 659, in transform\r\n    new_r = Elemwise(node.op, {})(*[transform(ipt) for ipt in node.inputs])\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\tensor\\elemwise.py\", line 659, in <listcomp>\r\n    new_r = Elemwise(node.op, {})(*[transform(ipt) for ipt in node.inputs])\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\tensor\\elemwise.py\", line 659, in transform\r\n    new_r = Elemwise(node.op, {})(*[transform(ipt) for ipt in node.inputs])\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\graph\\op.py\", line 253, in __call__\r\n    compute_test_value(node)\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\graph\\op.py\", line 126, in compute_test_value\r\n    thunk = node.op.make_thunk(node, storage_map, compute_map, no_recycling=[])\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\graph\\op.py\", line 634, in make_thunk\r\n    return self.make_c_thunk(node, storage_map, compute_map, no_recycling)\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\graph\\op.py\", line 600, in make_c_thunk\r\n    outputs = cl.make_thunk(\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\link\\c\\basic.py\", line 1203, in make_thunk\r\n    cthunk, module, in_storage, out_storage, error_storage = self.__compile__(\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\link\\c\\basic.py\", line 1138, in __compile__\r\n    thunk, module = self.cthunk_factory(\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\link\\c\\basic.py\", line 1634, in cthunk_factory\r\n    module = get_module_cache().module_from_key(key=key, lnk=self)\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\link\\c\\cmodule.py\", line 1191, in module_from_key\r\n    module = lnk.compile_cmodule(location)\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\link\\c\\basic.py\", line 1543, in compile_cmodule\r\n    module = c_compiler.compile_str(\r\n  File \"C:\\Users\\dsa\\Anaconda3\\envs\\mypm3env\\lib\\site-packages\\theano\\link\\c\\cmodule.py\", line 2546, in compile_str\r\n    raise Exception(\r\nException: ('Compilation failed (return status=1): C:\\\\Users\\\\dsa\\\\AppData\\\\Local\\\\Temp\\\\ccABu3X0.s: Assembler messages:\\r. C:\\\\Users\\\\dsa\\\\AppData\\\\Local\\\\Temp\\\\ccABu3X0.s:101: Error: invalid register for .seh_savexmm\\r. ', 'FunctionGraph(Elemwise{EQ}(<TensorType(float64, vector)>, <TensorType(int8, (True,))>))')\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\nAre there any other requirements that are missing in the windows installation guide that are missing?\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version:  v3.11.2\r\n* Aesara Version: - \r\n* Python Version: 3.8.10\r\n* Operating system: Windows 10\r\n* How did you install PyMC3: conda\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4749/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4738", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4738/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4738/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4738/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4738", "id": 911982304, "node_id": "MDExOlB1bGxSZXF1ZXN0NjYyMTg5OTQx", "number": 4738, "title": "Use correct `givens` in `Model.set_initval`", "user": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2021-06-04T23:28:41Z", "updated_at": "2021-06-05T06:06:04Z", "closed_at": "2021-06-05T06:06:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4738", "html_url": "https://github.com/pymc-devs/pymc/pull/4738", "diff_url": "https://github.com/pymc-devs/pymc/pull/4738.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4738.patch", "merged_at": "2021-06-05T06:06:01Z"}, "body": "Closes #4737", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4738/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4737", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4737/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4737/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4737/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4737", "id": 911681250, "node_id": "MDU6SXNzdWU5MTE2ODEyNTA=", "number": 4737, "title": "Issue with recent `initval` changes", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2021-06-04T16:46:34Z", "updated_at": "2021-06-05T09:46:19Z", "closed_at": "2021-06-05T09:46:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I found some issues with the recent `initval` changes in https://github.com/pymc-devs/pymc3/pull/4729, as it doesn't respect the parents initvals.\r\n\r\nThis snippet often leads to a `ValueError`:\r\n\r\n```python\r\nwith pm.Model() as model:\r\n    mu = pm.Normal('mu', initval=100)\r\n    alpha = pm.HalfNormal('alpha', initval=100, transform=None)\r\n    value = pm.NegativeBinomial('value', mu=mu, alpha=alpha)\r\n\r\nmodel.initial_values\r\n# {mu: array(100., dtype=float32),\r\n#  alpha: array(100., dtype=float32),\r\n#  value: array(1)}\r\n```\r\n\r\nWhen it doesn't fail, initval is still far from the expected ~ 100:\r\n```python\r\npm.NegativeBinomial.dist(mu=100, alpha=100).eval()\r\n# array(98)\r\n```\r\n\r\n_Originally posted by @ricardoV94 in https://github.com/pymc-devs/pymc3/issues/4734#issuecomment-854495715_", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4737/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4729", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4729/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4729/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4729/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4729", "id": 904502992, "node_id": "MDExOlB1bGxSZXF1ZXN0NjU1NjUyMTIx", "number": 4729, "title": "Use an incrementally updated RNG state in `Model`", "user": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 18, "created_at": "2021-05-28T01:31:33Z", "updated_at": "2021-06-02T15:35:41Z", "closed_at": "2021-06-02T15:35:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4729", "html_url": "https://github.com/pymc-devs/pymc/pull/4729", "diff_url": "https://github.com/pymc-devs/pymc/pull/4729.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4729.patch", "merged_at": "2021-06-02T15:35:38Z"}, "body": "This PR updates the role of `Model.default_rng` by adding a `Model.next_rng` that is incrementally updated when variables are registered.\r\n\r\nUnder this change, `Model.default_rng` still serves as a mutable starting point for RNG seeding, while also (softly) guaranteeing that newly added/registered random variables&mdash;that don't specify their own `rng` parameters&mdash;will be unique.\r\n\r\nThis PR also updates how initial values are specified, stored, and generated.  Since computing initial values may require sampling, these updates were needed in order to prevent initial values from unnecessarily affecting the RNG states in confusing ways.\r\n\r\nCloses #4728", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4729/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4728", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4728/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4728/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4728/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4728", "id": 904397606, "node_id": "MDU6SXNzdWU5MDQzOTc2MDY=", "number": 4728, "title": "Make sure `Model` RVs are distinct via their RNGs", "user": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-05-27T23:49:19Z", "updated_at": "2021-06-04T17:18:19Z", "closed_at": "2021-06-04T17:18:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, all the Aesara `RandomVariable` `Op`s are being converted into in-place `Op`s (i.e. when a graph containing one of them is compiled and evaluated, the underlying shared variable RNG state is updated in place).  This can be a mild convenience&mdash;and a potential efficiency gain&mdash;but it's not a good use of the `RandomVariable` API, because it can lead to confusion.\r\n\r\nFor example,\r\n```python\r\nimport numpy as np\r\n\r\nimport aesara\r\nimport aesara.tensor as at\r\n\r\nimport pymc3 as pm\r\n\r\n\r\nwith pm.Model() as test_model:\r\n    X_rv = pm.Normal(\"x\")\r\n    Y_rv = pm.Normal(\"y\")\r\n\r\n\r\ntest_fn = test_model.fn(Y_rv + 2 * X_rv)\r\n\r\naesara.dprint(test_fn.f)\r\n# Elemwise{Composite{(i0 + (i1 * i0))}}[(0, 0)] [id A] ''   1\r\n#  |normal_rv.1 [id B] 'y'   0\r\n#  | |RandomStateSharedVariable(<RandomState(MT19937) at 0x7F1A343DE160>) [id C]\r\n#  | |TensorConstant{[]} [id D]\r\n#  | |TensorConstant{11} [id E]\r\n#  | |TensorConstant{0} [id F]\r\n#  | |TensorConstant{1.0} [id G]\r\n#  |TensorConstant{2.0} [id H]\r\n# RandomStateSharedVariable(<RandomState(MT19937) at 0x7F1A343DE160>) [id C]\r\n```\r\nThe compiled graph contains only **one** `RandomVariable`.\r\n\r\nThe merge optimizations removed the second `RandomVariable` because it was identical to the first, and we need only produce the same samples once.\r\n\r\nIf we want to make sure that Aesara knows these two `RandomVariable`s are distinct terms, we can provide a distinct RNG state for each:\r\n```python\r\nwith pm.Model() as test_model:\r\n    X_rv = pm.Normal(\"x\")\r\n\r\n    rng = aesara.shared(np.random.RandomState(2023532), borrow=True)\r\n    # or\r\n    # rng = X_rv.owner.outputs[0]\r\n\r\n    Y_rv = pm.Normal(\"y\", rng=rng)\r\n\r\ntest_fn = test_model.fn(Y_rv + 2 * X_rv)\r\n\r\naesara.dprint(test_fn.f)\r\n# Elemwise{Composite{(i0 + (i1 * i2))}}[(0, 0)] [id A] ''   2\r\n#  |normal_rv.1 [id B] 'y'   1\r\n#  | |RandomStateSharedVariable(<RandomState(MT19937) at 0x7F1A343DE490>) [id C]\r\n#  | |TensorConstant{[]} [id D]\r\n#  | |TensorConstant{11} [id E]\r\n#  | |TensorConstant{0} [id F]\r\n#  | |TensorConstant{1.0} [id G]\r\n#  |TensorConstant{2.0} [id H]\r\n#  |normal_rv.1 [id I] 'x'   0\r\n#    |RandomStateSharedVariable(<RandomState(MT19937) at 0x7F1A343DE5A0>) [id J]\r\n#    |TensorConstant{[]} [id D]\r\n#    |TensorConstant{11} [id E]\r\n#    |TensorConstant{0} [id F]\r\n#    |TensorConstant{1.0} [id G]\r\n# RandomStateSharedVariable(<RandomState(MT19937) at 0x7F1A343DE5A0>) [id J]\r\n```\r\n\r\nIn other words, we shouldn't rely on in-place `RandonVariable` `Op`s, and we should use explicitly updated `RandomState`s.  This doesn't prevent us from using in-place updates for efficiency, especially since there's already an optimization that converts non-in-place `RandomVariable`s to in-place ones.\r\n\r\nFinally, we can automatically make sure that each `RandomVariable` created within a `Model` context is distinct by simply updating `Model.default_rng` after each `RandomVariable` is created in `Distribution.__new__` (i.e. after [this step](https://github.com/pymc-devs/pymc3/blob/v4/pymc3/distributions/distribution.py#L156)).", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4728/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4719", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4719/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4719/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4719/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4719", "id": 901374072, "node_id": "MDU6SXNzdWU5MDEzNzQwNzI=", "number": 4719, "title": "Bounded Variables appears to be broken on `v4` branch", "user": {"login": "hectormz", "id": 23343812, "node_id": "MDQ6VXNlcjIzMzQzODEy", "avatar_url": "https://avatars.githubusercontent.com/u/23343812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hectormz", "html_url": "https://github.com/hectormz", "followers_url": "https://api.github.com/users/hectormz/followers", "following_url": "https://api.github.com/users/hectormz/following{/other_user}", "gists_url": "https://api.github.com/users/hectormz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hectormz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hectormz/subscriptions", "organizations_url": "https://api.github.com/users/hectormz/orgs", "repos_url": "https://api.github.com/users/hectormz/repos", "events_url": "https://api.github.com/users/hectormz/events{/privacy}", "received_events_url": "https://api.github.com/users/hectormz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19", "html_url": "https://github.com/pymc-devs/pymc/milestone/19", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19/labels", "id": 6130583, "node_id": "MDk6TWlsZXN0b25lNjEzMDU4Mw==", "number": 19, "title": "v4.0.0b1 (vNext)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 65, "state": "closed", "created_at": "2020-11-20T09:32:38Z", "updated_at": "2021-12-16T14:23:33Z", "due_on": null, "closed_at": "2021-12-16T14:23:33Z"}, "comments": 4, "created_at": "2021-05-25T21:12:24Z", "updated_at": "2021-06-27T05:23:15Z", "closed_at": "2021-06-27T05:23:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nUse of `pm.Bound()` does not seem to work on the `v4` branch. This has been tested on PyPI version (`3.10.0`) which still works. Due to the evolving changes on the `v4` branch and `aesara` version changes, I haven't pinpointed when this stopped working. I'm using Python 3.6 as comparison so I can run properly on PyPI version (On Windows). \r\n\r\nI've also verified the same error on Ubuntu w/ python 3.7 & 3.8.\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport numpy as np\r\nimport pymc3 as pm\r\n\r\nxx = np.array([4.0, 4.0, 4.0, 5.0, 5.0, 5.0, 6.0, 3.0])\r\n\r\n\r\nmodel_gamma = pm.Model()\r\n\r\nwith model_gamma:\r\n    BoundedHalfNormal = pm.Bound(pm.HalfNormal, lower=0.0)\r\n\r\n    mu = BoundedHalfNormal(\"\u03bc\", sigma=10)\r\n    sigma= BoundedHalfNormal(\"\u03c3\", sigma=10)\r\n\r\n    obs = pm.Gamma(\"obs\", mu=mu, sigma=sigma, observed=xx)\r\n    idata_gamma = pm.sample(\r\n        draws=2_000, tune=2_000, cores=1, chains=1, return_inferencedata=True\r\n    )\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\nWARNING (aesara.tensor.blas): Using NumPy C-API based implementation for BLAS functions.\r\nTraceback (most recent call last):\r\n  File \"bounded_test.py\", line 12, in <module>\r\n    mu = BoundedHalfNormal(\"\u03bc\", sigma=10)                                         tions.\r\n  File \"c:\\users\\hectormz\\projects\\tools\\pymc3\\pymc3\\distributions\\bound.py\", line 290, in __call__\r\n    return _ContinuousBounded(\r\n  File \"c:\\users\\hectormz\\projects\\tools\\pymc3\\pymc3\\distributions\\distribution.py\",90, in __call__ line 247, in __new__\r\n    rv_out = cls.dist(*args, rng=rng, testval=None, **kwargs)                      line 247, in __new__\r\nTypeError: dist() takes 2 positional arguments but 5 positional arguments (and 1 keyword-only argument) were given  \r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Working versions and main components\r\n\r\n* PyMC3 Version: `pymc3==3.10.0`\r\n* Aesara Version: `Theano-PyMC==1.0.11`\r\n* Python Version: `3.6`\r\n* Operating system: `Windows 10`\r\n* How did you install PyMC3: `pip`\r\n\r\n## Broken versions and main components\r\n\r\n* PyMC3 Version: [0970af0](https://github.com/pymc-devs/pymc3/tree/0970af027cf0a71e76aaa30bcd04e629abb77c52)\r\n* Aesara Version: `aesara==2.0.10`\r\n* Python Version: `3.6`\r\n* Operating system: `Windows 10`\r\n* How did you install PyMC3: local `pip` install from repo\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4719/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4718", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4718/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4718/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4718/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4718", "id": 900241277, "node_id": "MDExOlB1bGxSZXF1ZXN0NjUxODI3MzQx", "number": 4718, "title": "Fix `change_rv_size` bug", "user": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2021-05-25T04:07:51Z", "updated_at": "2021-05-25T13:17:03Z", "closed_at": "2021-05-25T06:25:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4718", "html_url": "https://github.com/pymc-devs/pymc/pull/4718", "diff_url": "https://github.com/pymc-devs/pymc/pull/4718.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4718.patch", "merged_at": "2021-05-25T06:25:09Z"}, "body": "This PR updates Aesara to 2.0.9 and fixes a potential `change_rv_size` bug.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4718/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4712", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4712/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4712/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4712/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4712", "id": 899090018, "node_id": "MDU6SXNzdWU4OTkwOTAwMTg=", "number": 4712, "title": "`kmeans_inducing_points` is non-reproducibly random", "user": {"login": "JohnGoertz", "id": 9869969, "node_id": "MDQ6VXNlcjk4Njk5Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/9869969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnGoertz", "html_url": "https://github.com/JohnGoertz", "followers_url": "https://api.github.com/users/JohnGoertz/followers", "following_url": "https://api.github.com/users/JohnGoertz/following{/other_user}", "gists_url": "https://api.github.com/users/JohnGoertz/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnGoertz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnGoertz/subscriptions", "organizations_url": "https://api.github.com/users/JohnGoertz/orgs", "repos_url": "https://api.github.com/users/JohnGoertz/repos", "events_url": "https://api.github.com/users/JohnGoertz/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnGoertz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2021-05-23T19:24:53Z", "updated_at": "2022-01-16T02:10:36Z", "closed_at": "2022-01-16T02:10:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Calling `kmeans_inducing_points` from gp.utils results in different values every time, with no way to specify a random seed. \r\n\r\nIt appears that function wraps [Scipy's kmeans](https://docs.scipy.org/doc/scipy/reference/generated/scipy.cluster.vq.kmeans.html), which takes its random seed from `np.random.seed()`, so it should be a quick fix to add a `random_seed` kwarg that just gets passed to `np.random.seed()` before calling scipy. I'm not sure if that would have broader unintended consequences, such as if the user had subsequent calls to `np.random`. However, if the user is calling kmeans with a specified random seed, they likely want their whole workflow to be reproducibly random, so maybe it wouldn't be an issue? Additionally, new code should use the more recent numpy random Generator, which `np.random.seed()` shouldn't affect.\r\n\r\n* PyMC3 Version: 3.11.2\r\n* Theano Version: 1.0.5\r\n* Python Version: 3.8.5", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4712/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4700", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4700/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4700/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4700/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4700", "id": 892321354, "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ1MDUzNjY2", "number": 4700, "title": "Fix obs broadcast mismatch", "user": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1008939096, "node_id": "MDU6TGFiZWwxMDA4OTM5MDk2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/winOS", "name": "winOS", "color": "f9d0c4", "default": false, "description": "windows OS related"}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2021-05-15T00:51:42Z", "updated_at": "2021-05-15T18:00:51Z", "closed_at": "2021-05-15T14:20:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4700", "html_url": "https://github.com/pymc-devs/pymc/pull/4700", "diff_url": "https://github.com/pymc-devs/pymc/pull/4700.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4700.patch", "merged_at": "2021-05-15T14:20:28Z"}, "body": "This PR casts `new_shape` values in `pymc3.aesaraf.change_rv_size` before calling `RandomVariable.make_node`, which prevents unnecessary `Cast`s in the resulting `RandomVariable`'s `size` parameter when `new_shape` is a constant.\r\n\r\nAs a follow-up and/or alternative, `RandomVariable.make_node` can be updated in Aesara and accomplish the same thing.\r\n\r\nCloses #4652.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4700/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4693", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4693/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4693/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4693/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4693", "id": 891366722, "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ0MjQ2MzEx", "number": 4693, "title": "Revert breaking `size` changes", "user": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2021-05-13T20:54:31Z", "updated_at": "2021-05-14T19:38:46Z", "closed_at": "2021-05-14T18:34:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4693", "html_url": "https://github.com/pymc-devs/pymc/pull/4693", "diff_url": "https://github.com/pymc-devs/pymc/pull/4693.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4693.patch", "merged_at": "2021-05-14T18:34:05Z"}, "body": "This PR reverts the `size`-related breaking changes and `Model`/`Distribution` design issues introduced by #4625.\r\n\r\n\r\nCloses #4662.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4693/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4667", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4667/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4667/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4667/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4667", "id": 866814636, "node_id": "MDExOlB1bGxSZXF1ZXN0NjIyNjMyNzI3", "number": 4667, "title": "Revert `size` kwarg behaviour and make it work with `Ellipsis`", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76152, "node_id": "MDU6TGFiZWw3NjE1Mg==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/enhancements", "name": "enhancements", "color": "02e10c", "default": false, "description": null}, {"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/24", "html_url": "https://github.com/pymc-devs/pymc/milestone/24", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/24/labels", "id": 6672788, "node_id": "MDk6TWlsZXN0b25lNjY3Mjc4OA==", "number": 24, "title": "Merge v4 into master", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2021-04-18T21:37:16Z", "updated_at": "2021-06-05T15:00:08Z", "due_on": null, "closed_at": "2021-06-05T15:00:08Z"}, "comments": 3, "created_at": "2021-04-24T18:58:02Z", "updated_at": "2021-08-07T11:21:21Z", "closed_at": "2021-05-14T20:25:53Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": true, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4667", "html_url": "https://github.com/pymc-devs/pymc/pull/4667", "diff_url": "https://github.com/pymc-devs/pymc/pull/4667.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4667.patch", "merged_at": null}, "body": "See #4662 for more information.\r\n\r\nI will comment key changes in the diff.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4667/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4662", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4662/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4662/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4662/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4662", "id": 866712278, "node_id": "MDU6SXNzdWU4NjY3MTIyNzg=", "number": 4662, "title": "Restore pre-4625 way how the `size` kwarg works", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/24", "html_url": "https://github.com/pymc-devs/pymc/milestone/24", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/24/labels", "id": 6672788, "node_id": "MDk6TWlsZXN0b25lNjY3Mjc4OA==", "number": 24, "title": "Merge v4 into master", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2021-04-18T21:37:16Z", "updated_at": "2021-06-05T15:00:08Z", "due_on": null, "closed_at": "2021-06-05T15:00:08Z"}, "comments": 3, "created_at": "2021-04-24T10:17:26Z", "updated_at": "2021-06-03T12:28:41Z", "closed_at": "2021-06-03T12:28:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Due to a (big) misunderstanding, my #4625 PR broke the way how `size` parametrization works in `v4`.\r\n\r\nThe misunderstanding was specifically about the notion of implied dimensions and what it means for univariate vs. multivariate RVs:\r\n\r\n\r\n\u26a0 The pre-#4625 notion was that `size` is in addition to the _support dimensions_.\r\n\r\n\u26a0 The post-#4625 notion was that `size` is in addition to what's implied by parameters other than `size`/`shape`/`dims`.\r\n\r\n\r\nThe difference is subtle and maybe best explained with the following example:\r\n\r\n```python\r\n# v4 pre-4625 (45cb4ebf36500e502481bdced6980dd9e630acca)\r\nMvNormal.dist(\r\n    cov=eye(7), mu=ones(7), size=(2,3)    # MvNormal is multivariate with ndim_support=1,\r\n).eval().shape == (2, 3, 7)               # therefore (7,) is implied/required and does not count into `size`.\r\nNormal.dist(\r\n    mu=[1,2,3], size=(2,3)\r\n).eval().shape == (2,3)                   # Normal is univariate, so `mu` does not count as a support dim\r\n\r\n# v4 post-4625 (e9f2e9616394275ccf7587a4818fe21251d51328)\r\nMvNormal.dist(\r\n    cov=eye(7), mu=ones(7), size=(2,3)\r\n).eval().shape == (2, 3, 7)\r\nNormal.dist(\r\n    mu=[1,2,3], size=(2,3)\r\n).eval().shape == (2, 3, 3)         # the last dimension of length 3 was implied by mu and does not count into `size`\r\n```\r\n\r\nWith the changes from #4625 the outcome from specifying `shape=(1,2,3, ...)` and `size=(1,2,3)` is identical.\r\n\r\nAfter some discussion about the advantages/disadvantages of either API flavor, we decided to go back to the pre-4625 flavor where `size` is essentially `shape` but without support dimensions.\r\nThis is also the way how numpy handles dimensionality of multivariate distributions:\r\n```\r\nnp.random.mvnormal(\r\n    cov=np.eye(7), mean=np.ones(7), size=(2, 3)\r\n).shape == (2, 3, 7)\r\n```\r\n\r\nThe flexibility added by #4625, namely the ability to _not_ specify dimensions that are implied from RV support or parameters, will continue to work through the `shape` with Ellipsis API:\r\n```python\r\nmu = aesara.shared([1, 2, 3])\r\n\r\nrv = Normal.dist(\r\n    mu=mu, shape=(7, 5, ...)   # only the additional dimensions are specified explicitly\r\n)\r\nassert rv.eval().shape == (7, 5, 3)\r\n\r\n# Now change the parameter-implied dimensions:\r\nmu.set_value([1, 2, 3, 4])\r\nassert rv.eval().shape == (7, 5, 4)\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4662/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4652", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4652/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4652/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4652/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4652", "id": 862862906, "node_id": "MDU6SXNzdWU4NjI4NjI5MDY=", "number": 4652, "title": "Column vector breaks `observed`", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1008939096, "node_id": "MDU6TGFiZWwxMDA4OTM5MDk2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/winOS", "name": "winOS", "color": "f9d0c4", "default": false, "description": "windows OS related"}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19", "html_url": "https://github.com/pymc-devs/pymc/milestone/19", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/19/labels", "id": 6130583, "node_id": "MDk6TWlsZXN0b25lNjEzMDU4Mw==", "number": 19, "title": "v4.0.0b1 (vNext)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 65, "state": "closed", "created_at": "2020-11-20T09:32:38Z", "updated_at": "2021-12-16T14:23:33Z", "due_on": null, "closed_at": "2021-12-16T14:23:33Z"}, "comments": 14, "created_at": "2021-04-20T14:12:53Z", "updated_at": "2021-05-15T14:22:58Z", "closed_at": "2021-05-15T14:22:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "While working on #4625 I ran into a failure that is demoed by the following example:\r\n\r\n```python\r\nwith pm.Model() as model:\r\n    pm.Normal(\"x1\", mu=0, sd=1, observed=np.random.normal(size=(3, 4)))\r\n    model.logp()\r\n    pm.Normal(\"x2\", mu=0, sd=1, observed=np.random.normal(size=(3, 1)))\r\n    model.logp()\r\n```\r\n\r\nEssentially passing a column vector breaks the model, whereas a matrix is fine.\r\n\r\n<details><summary>Traceback</summary>\r\n\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-4-428a24d8e8bb> in <module>\r\n----> 1 test_observed_with_column_vector()\r\n\r\n<ipython-input-3-7765b483c18e> in test_observed_with_column_vector()\r\n      4         model.logp()\r\n      5         pm.Normal(\"x2\", mu=0, sd=1, observed=np.random.normal(size=(3, 1)))\r\n----> 6         model.logp()\r\n\r\ne:\\source\\repos\\pymc3\\pymc3\\model.py in logp(self)\r\n    264     def logp(self):\r\n    265         \"\"\"Compiled log probability density function\"\"\"\r\n--> 266         return self.model.fn(self.logpt)\r\n    267 \r\n    268     @property\r\n\r\ne:\\source\\repos\\pymc3\\pymc3\\model.py in logpt(self)\r\n    712         with self:\r\n    713             factors = [logpt_sum(var, self.rvs_to_values.get(var, None)) for var in self.free_RVs]\r\n--> 714             factors += [logpt_sum(obs, obs.tag.observations) for obs in self.observed_RVs]\r\n    715 \r\n    716             # Convert random variables into their log-likelihood inputs and\r\n\r\ne:\\source\\repos\\pymc3\\pymc3\\model.py in <listcomp>(.0)\r\n    712         with self:\r\n    713             factors = [logpt_sum(var, self.rvs_to_values.get(var, None)) for var in self.free_RVs]\r\n--> 714             factors += [logpt_sum(obs, obs.tag.observations) for obs in self.observed_RVs]\r\n    715 \r\n    716             # Convert random variables into their log-likelihood inputs and\r\n\r\ne:\\source\\repos\\pymc3\\pymc3\\distributions\\logp.py in logpt_sum(*args, **kwargs)\r\n    366     if only the sum of the logp values is needed.\r\n    367     \"\"\"\r\n--> 368     return logpt(*args, sum=True, **kwargs)\r\n\r\ne:\\source\\repos\\pymc3\\pymc3\\distributions\\logp.py in logpt(var, rv_values, jacobian, scaling, transformed, cdf, sum, **kwargs)\r\n    216     replacements.update({rv_var: rv_value, rv_value_var: rv_value})\r\n    217 \r\n--> 218     (logp_var,), _ = rvs_to_value_vars(\r\n    219         (logp_var,),\r\n    220         apply_transforms=transformed and not cdf,\r\n\r\ne:\\source\\repos\\pymc3\\pymc3\\aesaraf.py in rvs_to_value_vars(graphs, apply_transforms, initial_replacements, **kwargs)\r\n    352         return [trans_rv_value]\r\n    353 \r\n--> 354     return replace_rvs_in_graphs(graphs, transform_replacements, initial_replacements, **kwargs)\r\n    355 \r\n    356 \r\n\r\ne:\\source\\repos\\pymc3\\pymc3\\aesaraf.py in replace_rvs_in_graphs(graphs, replacement_fn, initial_replacements, **kwargs)\r\n    300         )\r\n    301 \r\n--> 302         fg.replace_all(replacements.items(), import_missing=True)\r\n    303 \r\n    304         graphs = list(fg.outputs)\r\n\r\n~\\miniconda3\\envs\\pm3-dev\\lib\\site-packages\\aesara\\graph\\fg.py in replace_all(self, pairs, **kwargs)\r\n    555         \"\"\"Replace variables in the `FunctionGraph` according to `(var, new_var)` pairs in a list.\"\"\"\r\n    556         for var, new_var in pairs:\r\n--> 557             self.replace(var, new_var, **kwargs)\r\n    558 \r\n    559     def attach_feature(self, feature: Feature) -> NoReturn:\r\n\r\n~\\miniconda3\\envs\\pm3-dev\\lib\\site-packages\\aesara\\graph\\fg.py in replace(self, var, new_var, reason, verbose, import_missing)\r\n    513             print(reason, var, new_var)\r\n    514 \r\n--> 515         new_var = var.type.filter_variable(new_var, allow_convert=True)\r\n    516 \r\n    517         if var not in self.variables:\r\n\r\n~\\miniconda3\\envs\\pm3-dev\\lib\\site-packages\\aesara\\tensor\\type.py in filter_variable(self, other, allow_convert)\r\n    256                 return other2\r\n    257 \r\n--> 258         raise TypeError(\r\n    259             f\"Cannot convert Type {other.type} \"\r\n    260             f\"(of Variable {other}) into Type {self}. \"\r\n\r\nTypeError: Cannot convert Type TensorType(float64, matrix) (of Variable Rebroadcast{?,0}.0) into Type TensorType(float64, col). You can try to manually convert Rebroadcast{?,0}.0 into a TensorType(float64, col).\r\n</details>\r\n\r\n# Versions\r\n+ \u2714\ufe0f `v3.11.1`\r\n+ \u2714\ufe0f `v3.11.2`\r\n+ \u2714\ufe0f `master` (d7172c0a)\r\n+ :x: `v4` (45cb4eb)", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4652/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4643", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4643/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4643/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4643/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4643", "id": 858819204, "node_id": "MDU6SXNzdWU4NTg4MTkyMDQ=", "number": 4643, "title": "Prior predictive sampling with pm.Bound gives wrong results", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2021-04-15T12:12:52Z", "updated_at": "2021-08-17T05:11:02Z", "closed_at": "2021-08-17T05:11:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Using `pm.Bound` for distributions whose arguments include other model parameters (instead of constants) will lead to a model that is wrongly sampled in `sample_prior_predictive()`\r\n\r\n```python\r\nwith pm.Model() as m:\r\n    pop = pm.Normal('pop', 2, 1)\r\n    ind = pm.Bound(pm.Normal, lower=-2, upper=2)('ind', mu=pop, sigma=.5)\r\n    \r\n    prior = pm.sample_prior_predictive()\r\n    trace = pm.sample()\r\n```\r\n\r\nThe samples for the bounded distribution are fine (i.e., one obtains the same results if doing prior_predictive or sampling without data):\r\n\r\n```python\r\nsns.kdeplot(prior['ind'])\r\nsns.kdeplot(trace['ind'])\r\n```\r\n![image](https://user-images.githubusercontent.com/28983449/114866404-cbfe8180-9df3-11eb-9c12-c4fd5d88e9ae.png)\r\n\r\nBut the samples for the hyper-parameters do not match:\r\n```python\r\nsns.kdeplot(prior['pop'])\r\nsns.kdeplot(trace['pop'])\r\n``` \r\n![image](https://user-images.githubusercontent.com/28983449/114866371-c143ec80-9df3-11eb-88fe-280fe7f2b729.png)\r\n\r\nWhat is going on? I think the way `pm.Bound` is implemented, it corresponds to adding an arbitrary factor to the model logp of the kind:\r\n\r\n```python\r\npm.Potential('err', pm.math.switch((ind >= -2) & (ind <= 2), 0, -np.inf))\r\n```\r\nWhich obviously is not (and cannot) be accounted for in predictive sampling.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4643/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4598", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4598/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4598/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4598/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4598", "id": 847954380, "node_id": "MDU6SXNzdWU4NDc5NTQzODA=", "number": 4598, "title": "Give NoDistribution a random method so that `sample_prior_predictive` can work", "user": {"login": "jonsedar", "id": 708325, "node_id": "MDQ6VXNlcjcwODMyNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/708325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonsedar", "html_url": "https://github.com/jonsedar", "followers_url": "https://api.github.com/users/jonsedar/followers", "following_url": "https://api.github.com/users/jonsedar/following{/other_user}", "gists_url": "https://api.github.com/users/jonsedar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonsedar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonsedar/subscriptions", "organizations_url": "https://api.github.com/users/jonsedar/orgs", "repos_url": "https://api.github.com/users/jonsedar/repos", "events_url": "https://api.github.com/users/jonsedar/events{/privacy}", "received_events_url": "https://api.github.com/users/jonsedar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}, {"id": 2548173976, "node_id": "MDU6TGFiZWwyNTQ4MTczOTc2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/needs%20info", "name": "needs info", "color": "fbca04", "default": false, "description": "Additional information required"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-04-01T05:20:17Z", "updated_at": "2022-10-10T19:38:22Z", "closed_at": "2022-10-10T19:38:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Issue\r\n\r\nNOTE: issue as experienced and described in my gist for full reproducible MRE in pymc3.9.3: https://gist.github.com/jonsedar/070319334bcf033773cc3e9495c79ea0. See also my post on Discourse https://discourse.pymc.io/t/cant-seem-to-sample-prior-predictive-on-model-with-missing-value-imputation/7130\r\n\r\nI've specified a model using automatic imputation of missing values (see gist) with the critical specification as:\r\n\r\n```python\r\n...\r\nx1ma = np.ma.masked_array(x1, mask = np.isnan(x1))\r\n...\r\nwith pm.Model() as mdl:   \r\n    x_mu = pm.Normal('x_mu', 0, 2, dims='names')\r\n    x_pred = pm.Normal('x_pred', mu=x_mu, sigma=1., observed=x1ma, dims=['obs', 'names'])\r\n...\r\n```\r\n\r\nIn this case, the model build sees the observed value is a masked array and creates a new RV `x_pred_missing` which uses a `NoDistribution`. By design, the `NoDistribution` has a `logp()` and so it's possible to `sample()` the model and estimate the missing values. This works great.\r\n\r\n**However**, I want to also `sample_prior_predictive()` for my model, and this currently fails with a shape error due to something related to `x_pred_missing` (see gist)\r\n\r\n## Possible solution\r\n\r\nI've dug through the code and it appears that `NoDistribution` does not have a `random()` function and I suspect this is the root cause of the problem.\r\n\r\nSo we could add a `random()` function to `NoDistribution`, where the returned value is influenced by the testval of the parent distribution testval (here `x_pred`)\r\n\r\nIn fact, at build time, the testval is passed: https://github.com/pymc-devs/pymc3/blob/2dee9dafb3541043ae23b66fe9262e70fbd2769a/pymc3/model.py#L1763, but seemingly ignored https://github.com/pymc-devs/pymc3/blob/2dee9dafb3541043ae23b66fe9262e70fbd2769a/pymc3/distributions/distribution.py#L287\r\n\r\nSo I propose:\r\n1. Un-ignoring this value at init `self.testval = testval`\r\n2. Creating a new `random()` function\r\n\r\n## Quick demo implementation\r\n\r\nI've implemented a dirty hack with the following code entered at line https://github.com/pymc-devs/pymc3/blob/2dee9dafb3541043ae23b66fe9262e70fbd2769a/pymc3/distributions/distribution.py#L305\r\n\r\nNotes:\r\n1. This uses the same signature as `random()` as used in other other distributions, \r\n2. It uses `generate_samples` because I want to use the shape handling there for consistency\r\n3. This means I need to pass a generator, elsewhere in the package this is a `scipy.distribution.rvs`, so in a vain attempt of least surprise I've used `np.random.default_rng(); rng.choice` with `a=1` to guarantee an array of ones, and it seems to work. Possibly this isn't the best way to do it though...\r\n4. I multiply that array of ones by the array of testvals (which are actually all the same value, but it seems least surprising to use all of them)\r\n\r\n```\r\ndef random(self, size=None, **kwargs):\r\n        \"\"\"\r\n        Draw static values from testval. \r\n        Parameters\r\n        ----------\r\n        size: int, optional\r\n            Desired size of random sample (returns one sample if not\r\n            specified).\r\n        Returns\r\n        -------\r\n        array\r\n        \"\"\"\r\n        rng = np.random.default_rng()\r\n        return generate_samples(rng.choice, a=np.ones(1), \r\n                            dist_shape=self.shape, size=size) * self.testval\r\n\r\n```\r\n\r\nIn testing this seems to allow `sample_prior_predictive` to run without issue, and the generated samples have the correct shape and testval of the parent\r\n\r\n<img width=\"806\" alt=\"Screenshot 2021-04-01 at 14 05 32\" src=\"https://user-images.githubusercontent.com/708325/113246233-90dc5880-92f3-11eb-9ff2-d9db7029a5ce.png\">\r\n\r\n\r\n## Should I PR this?\r\n\r\nI'm aware there's lots of aesara work in v4 that probably negates the need for this solution above. Is it worth a PR?\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4598/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4568", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4568/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4568/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4568/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4568", "id": 841534004, "node_id": "MDU6SXNzdWU4NDE1MzQwMDQ=", "number": 4568, "title": "Using `trace=NDArray()` in `sample` leads to identical chain number error ", "user": {"login": "ckrapu", "id": 10506722, "node_id": "MDQ6VXNlcjEwNTA2NzIy", "avatar_url": "https://avatars.githubusercontent.com/u/10506722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ckrapu", "html_url": "https://github.com/ckrapu", "followers_url": "https://api.github.com/users/ckrapu/followers", "following_url": "https://api.github.com/users/ckrapu/following{/other_user}", "gists_url": "https://api.github.com/users/ckrapu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ckrapu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ckrapu/subscriptions", "organizations_url": "https://api.github.com/users/ckrapu/orgs", "repos_url": "https://api.github.com/users/ckrapu/repos", "events_url": "https://api.github.com/users/ckrapu/events{/privacy}", "received_events_url": "https://api.github.com/users/ckrapu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-03-26T02:32:06Z", "updated_at": "2021-06-05T14:16:50Z", "closed_at": "2021-06-05T14:16:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, the following code presents an error regarding non-uniqueness of the chain numbers. In this example, each of the individual traces in the MultiTrace would have `chain = 4`.\r\n\r\n```\r\nimport pymc3 as pm\r\n\r\nwith pm.Model() as model:\r\n    x = pm.Normal('x')\r\n    backend = pm.backends.ndarray.NDArray()\r\n    trace   = pm.sample(trace=backend, cores=1, chains=4)\r\n```\r\nWhile this is a fairly contrived example and is easily worked around, this exact issue also presents challenges in the development of a satisfactory solution for the issue raised in #4562. The precise cause of this error is that the same `NDArray` object is used multiple times and the repeated application of `_sample` only increments its chain index rather than creating a new object altogether. Since `_sample` ends up returning multiple references to the same object, the creation of a [MultiTrace from several single traces at ](https://github.com/pymc-devs/pymc3/blob/97b54f0da10074b0f3f62ff7040de2dc7c79a7ad/pymc3/sampling.py#L733) is done with references to the same object, obviously sharing the same chain number.\r\n\r\nA simple solution that appears to work fine is by [applying `copy` to the incoming `trace` variable](https://github.com/pymc-devs/pymc3/blob/97b54f0da10074b0f3f62ff7040de2dc7c79a7ad/pymc3/sampling.py#L846) at the beginning of `_sample`.\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4568/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4525", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4525/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4525/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4525/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4525", "id": 827718384, "node_id": "MDExOlB1bGxSZXF1ZXN0NTg5NjAwNjU2", "number": 4525, "title": "Backport memoize bugfix to v3", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2809192918, "node_id": "MDU6TGFiZWwyODA5MTkyOTE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v3", "name": "v3", "color": "F92E0C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/22", "html_url": "https://github.com/pymc-devs/pymc/milestone/22", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/22/labels", "id": 6530762, "node_id": "MDk6TWlsZXN0b25lNjUzMDc2Mg==", "number": 22, "title": "vNext (3.11.2)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 6, "state": "closed", "created_at": "2021-03-10T13:12:12Z", "updated_at": "2021-03-15T13:21:09Z", "due_on": null, "closed_at": "2021-03-15T13:21:09Z"}, "comments": 0, "created_at": "2021-03-10T13:12:29Z", "updated_at": "2021-03-10T14:48:28Z", "closed_at": "2021-03-10T14:48:24Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4525", "html_url": "https://github.com/pymc-devs/pymc/pull/4525", "diff_url": "https://github.com/pymc-devs/pymc/pull/4525.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4525.patch", "merged_at": "2021-03-10T14:48:24Z"}, "body": "This is a backport of the #4509 PR fixing #4506.\r\n\r\nThe original fix was merged into `master` after the Aesara rename and this PR cherry-picks it onto the `v3` branch.\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4525/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4525/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4513", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4513/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4513/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4513/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4513", "id": 825082512, "node_id": "MDU6SXNzdWU4MjUwODI1MTI=", "number": 4513, "title": "Float type 'float128' causes issues and is unnecessary", "user": {"login": "anentropic", "id": 147840, "node_id": "MDQ6VXNlcjE0Nzg0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/147840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anentropic", "html_url": "https://github.com/anentropic", "followers_url": "https://api.github.com/users/anentropic/followers", "following_url": "https://api.github.com/users/anentropic/following{/other_user}", "gists_url": "https://api.github.com/users/anentropic/gists{/gist_id}", "starred_url": "https://api.github.com/users/anentropic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anentropic/subscriptions", "organizations_url": "https://api.github.com/users/anentropic/orgs", "repos_url": "https://api.github.com/users/anentropic/repos", "events_url": "https://api.github.com/users/anentropic/events{/privacy}", "received_events_url": "https://api.github.com/users/anentropic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2543051866, "node_id": "MDU6TGFiZWwyNTQzMDUxODY2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/macOS", "name": "macOS", "color": "f9d0c4", "default": false, "description": "macOS related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-03-09T00:03:06Z", "updated_at": "2021-03-09T10:21:42Z", "closed_at": "2021-03-09T10:21:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I spent a while getting all the prerequisites in place via homebrew and pip, but was able to apparently install pymc3 successfully:\r\n```\r\nSuccessfully installed arviz-0.11.2 cftime-1.4.1 cycler-0.10.0 dill-0.3.3 fastprogress-1.0.0 filelock-3.0.12 matplotlib-3.3.4 netcdf4-1.5.6 pandas-1.2.3 patsy-0.5.1 pillow-8.1.2 pymc3-3.11.1 python-dateutil-2.8.1 pytz-2021.1 six-1.15.0 theano-pymc-1.1.2 typing-extensions-3.7.4.3 xarray-0.17.0\r\n```\r\nHowever I get an error on import:\r\n```\r\nIn [1]: import pymc3 as pm\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-1-2e5c536b7c65> in <module>\r\n----> 1 import pymc3 as pm\r\n\r\n~/Documents/Dev/myproject/.venv/lib/python3.9/site-packages/pymc3/__init__.py in <module>\r\n     39 __set_compiler_flags()\r\n     40 \r\n---> 41 from pymc3 import gp, ode, sampling\r\n     42 from pymc3.backends import load_trace, save_trace\r\n     43 from pymc3.backends.tracetab import *\r\n\r\n~/Documents/Dev/myproject/.venv/lib/python3.9/site-packages/pymc3/gp/__init__.py in <module>\r\n     14 \r\n     15 from pymc3.gp import cov, mean, util\r\n---> 16 from pymc3.gp.gp import TP, Latent, LatentKron, Marginal, MarginalKron, MarginalSparse\r\n\r\n~/Documents/Dev/myproject/.venv/lib/python3.9/site-packages/pymc3/gp/gp.py in <module>\r\n     23 import pymc3 as pm\r\n     24 \r\n---> 25 from pymc3.distributions import draw_values\r\n     26 from pymc3.gp.cov import Constant, Covariance\r\n     27 from pymc3.gp.mean import Zero\r\n\r\n~/Documents/Dev/myproject/.venv/lib/python3.9/site-packages/pymc3/distributions/__init__.py in <module>\r\n     13 #   limitations under the License.\r\n     14 \r\n---> 15 from pymc3.distributions import shape_utils, timeseries, transforms\r\n     16 from pymc3.distributions.bart import BART\r\n     17 from pymc3.distributions.bound import Bound\r\n\r\n~/Documents/Dev/myproject/.venv/lib/python3.9/site-packages/pymc3/distributions/timeseries.py in <module>\r\n     19 from theano import scan\r\n     20 \r\n---> 21 from pymc3.distributions import distribution, multivariate\r\n     22 from pymc3.distributions.continuous import Flat, Normal, get_tau_sigma\r\n     23 from pymc3.distributions.shape_utils import to_tuple\r\n\r\n~/Documents/Dev/myproject/.venv/lib/python3.9/site-packages/pymc3/distributions/multivariate.py in <module>\r\n     33 \r\n     34 from pymc3.distributions import transforms\r\n---> 35 from pymc3.distributions.continuous import ChiSquared, Normal\r\n     36 from pymc3.distributions.dist_math import bound, factln, logpow\r\n     37 from pymc3.distributions.distribution import (\r\n\r\n~/Documents/Dev/myproject/.venv/lib/python3.9/site-packages/pymc3/distributions/continuous.py in <module>\r\n     28 \r\n     29 from pymc3.distributions import transforms\r\n---> 30 from pymc3.distributions.dist_math import (\r\n     31     SplineWrapper,\r\n     32     betaln,\r\n\r\n~/Documents/Dev/myproject/.venv/lib/python3.9/site-packages/pymc3/distributions/dist_math.py in <module>\r\n     47 if platform.system() in [\"Linux\", \"Darwin\"]:\r\n     48     _beta_clip_values[\"float128\"] = (\r\n---> 49         np.nextafter(0, 1, dtype=\"float128\"),\r\n     50         np.nextafter(1, 0, dtype=\"float128\"),\r\n     51     )\r\n\r\nTypeError: data type 'float128' not understood\r\n```\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.11.1 \r\n* Aesara Version: ???\r\n* Python Version: 3.9.1\r\n* Operating system: macOS 11.2.2\r\n* How did you install PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4513/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4511", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4511/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4511/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4511/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4511", "id": 824566738, "node_id": "MDU6SXNzdWU4MjQ1NjY3Mzg=", "number": 4511, "title": "Mixture should not allow mixing of discrete and continuous distributions", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2719139018, "node_id": "MDU6TGFiZWwyNzE5MTM5MDE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v4", "name": "v4", "color": "6A9CF4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2021-03-08T13:38:43Z", "updated_at": "2022-04-04T19:12:35Z", "closed_at": "2022-04-04T19:12:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Right now the Mixture class allows to mix distributions of any kind, leading to improper logp evaluations where probability densities are mixed with probability masses.\r\n\r\n```python\r\nnorm = pm.Normal.dist(0, 1)\r\npois = pm.Poisson.dist(1)\r\nmix = pm.Mixture.dist([0.5, 0.5], comp_dists=[norm, pois], shape=1)\r\n\r\n# Observed integer could only have come from Poisson component, so logp should be:\r\nnp.log(0.5 * np.exp(pois.logp(0))).eval()  # -1.69\r\n\r\n# But it's higher:\r\nmix.logp(0).eval()  # -0.958\r\n\r\n# Observed float could only have come from Normal component, so logp should be:\r\nnp.log(0.5 * np.exp(norm.logp(1/3))).eval() # -1.66\r\n\r\n# But it's higher:\r\nmix.logp(1/3).eval()  # -0.93\r\n\r\n# This is not a problem when evaluating points where the domains do not overlap:\r\nmix.logp(-1).eval()  # -2.11\r\nnp.log(0.5 * np.exp(norm.logp(-1))).eval()  # -2.11\r\n```\r\n\r\nQuestions related to the mixture of continuous and discrete distributions crop up now and then on the Discourse:\r\n* https://discourse.pymc.io/t/sampling-from-a-learned-mixture-of-zeros-and-lognormal/3671\r\n* https://discourse.pymc.io/t/zero-inflated-student-t/6170\r\n* https://discourse.pymc.io/t/zero-inflated-normal/6857\r\n* https://discourse.pymc.io/t/mixture-of-continuous-and-discrete-logp/2392\r\n\r\nThe STAN forum has an informative discussion on this:\r\n* https://discourse.mc-stan.org/t/zero-inflated-models-in-stan/19496\r\n\r\n***\r\n\r\nIt seems to me like this is an area where we could easily nudge users in the right direction, by raising an informative value error. ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4511/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4509", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4509/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4509/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4509/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4509", "id": 824009443, "node_id": "MDExOlB1bGxSZXF1ZXN0NTg2MzIwMjYx", "number": 4509, "title": "Replace custom memoize module with cachetools", "user": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2021-03-07T20:22:11Z", "updated_at": "2021-03-08T08:18:51Z", "closed_at": "2021-03-08T00:43:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4509", "html_url": "https://github.com/pymc-devs/pymc/pull/4509", "diff_url": "https://github.com/pymc-devs/pymc/pull/4509.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4509.patch", "merged_at": "2021-03-08T00:43:50Z"}, "body": "This PR replaces our custom `pymc3.memoize` module with `cachetools`.\r\n\r\nCloses #4506.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4509/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4506", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4506/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4506/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4506/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4506", "id": 823763322, "node_id": "MDU6SXNzdWU4MjM3NjMzMjI=", "number": 4506, "title": "Hash collisions in memoization result in invalid values", "user": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2021-03-06T22:26:56Z", "updated_at": "2021-03-08T00:43:50Z", "closed_at": "2021-03-08T00:43:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Our custom `memoize` function is mapping inputs to their hashes, then those hashes are mapped to cached values, and, because the inputs and the hashes' original values aren't compared, a simple hash collision will cause `memoize` to return the wrong values.\r\n\r\nHere's a simple example:\r\n\r\n```python\r\nimport pymc3 as pm\r\n\r\n\r\nclass Bad1:\r\n    def __hash__(self):\r\n        return 329\r\n\r\n\r\nclass Bad2:\r\n    def __hash__(self):\r\n        return 329\r\n\r\n\r\nb1 = Bad1()\r\nb2 = Bad2()\r\n\r\n\r\n# Here's what we expect:\r\nd = {}\r\n\r\nd[b1] = 1\r\nd[b2] = 2\r\n\r\nassert hash(b1) == hash(b2)\r\nassert d[b1] != d[b2]\r\n\r\n# Because `memoize` doesn't use the inputs as keys in the `dict`-based\r\n# cache, we don't get the expected post-hash-lookup equality checks that\r\n# prevent errors when faced with hash collisions\r\n\r\n@pm.memoize.memoize\r\ndef test_func(x):\r\n    return x\r\n\r\n\r\nassert b1 != b2\r\nassert test_func(b1) != test_func(b2)\r\n```\r\n\r\nThe last `assert` will currently fail, although it should be equivalent to the `assert` preceding it.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4506/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4492", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4492/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4492/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4492/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4492", "id": 817936908, "node_id": "MDExOlB1bGxSZXF1ZXN0NTgxMzQwNTg1", "number": 4492, "title": "Keep broadcasting information in make_shared_replacements", "user": {"login": "ExpectationMax", "id": 1303655, "node_id": "MDQ6VXNlcjEzMDM2NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1303655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExpectationMax", "html_url": "https://github.com/ExpectationMax", "followers_url": "https://api.github.com/users/ExpectationMax/followers", "following_url": "https://api.github.com/users/ExpectationMax/following{/other_user}", "gists_url": "https://api.github.com/users/ExpectationMax/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExpectationMax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExpectationMax/subscriptions", "organizations_url": "https://api.github.com/users/ExpectationMax/orgs", "repos_url": "https://api.github.com/users/ExpectationMax/repos", "events_url": "https://api.github.com/users/ExpectationMax/events{/privacy}", "received_events_url": "https://api.github.com/users/ExpectationMax/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-02-27T14:44:28Z", "updated_at": "2021-03-10T15:52:15Z", "closed_at": "2021-03-10T15:47:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4492", "html_url": "https://github.com/pymc-devs/pymc/pull/4492", "diff_url": "https://github.com/pymc-devs/pymc/pull/4492.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4492.patch", "merged_at": "2021-03-10T15:47:05Z"}, "body": "It seems like broadcasting information gets lost when applying\r\n`pm.make_shared_replacements`, leading to problems with the metropolis\r\nsampler. Potentially related issues below:\r\n - https://github.com/pymc-devs/pymc3/issues/1083\r\n - https://github.com/pymc-devs/pymc3/issues/1304\r\n - https://github.com/pymc-devs/pymc3/issues/1983\r\n\r\nThis fix was previously suggested in the following issue:\r\n - https://github.com/pymc-devs/pymc3/issues/3337\r\n\r\nIt could be that further adaptations are necessary as indicated in the\r\nissue. Strangely, this does not seem to lead to problems when using\r\nNUTS.\r\n\r\nThis fixes issue #4491 and #3337\r\n\r\n\r\nTODOs:\r\n- [X] are the changes\u2014especially new features\u2014covered by tests and docstrings? (should add test)\r\n- [X] [linting/style checks have been run](https://github.com/pymc-devs/pymc3/wiki/PyMC3-Python-Code-Style)\r\n- [X] right before it's ready to merge, mention the PR in the RELEASE-NOTES.md\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4492/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4490", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4490/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4490/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4490/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4490", "id": 817903237, "node_id": "MDU6SXNzdWU4MTc5MDMyMzc=", "number": 4490, "title": "Non-reproducible random draws with `sample_prior_predictive` and set random seed", "user": {"login": "alcrene", "id": 4419684, "node_id": "MDQ6VXNlcjQ0MTk2ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4419684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alcrene", "html_url": "https://github.com/alcrene", "followers_url": "https://api.github.com/users/alcrene/followers", "following_url": "https://api.github.com/users/alcrene/following{/other_user}", "gists_url": "https://api.github.com/users/alcrene/gists{/gist_id}", "starred_url": "https://api.github.com/users/alcrene/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alcrene/subscriptions", "organizations_url": "https://api.github.com/users/alcrene/orgs", "repos_url": "https://api.github.com/users/alcrene/repos", "events_url": "https://api.github.com/users/alcrene/events{/privacy}", "received_events_url": "https://api.github.com/users/alcrene/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-02-27T11:39:09Z", "updated_at": "2021-06-16T20:15:16Z", "closed_at": "2021-06-16T20:15:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If I have a code file with the following:\r\n\r\n```python\r\n# non_reproducible.py\r\nimport pymc3 as pm\r\nimport theano.tensor as tt\r\n\r\nwith pm.Model() as model:\r\n    pm.Normal('a')\r\n    pm.Normal('b')\r\n    pm.Normal('c')\r\n    pm.Normal('d')\r\n\r\npp = pm.sample_prior_predictive(samples=1, model=model,\r\n                                random_seed=100)\r\nprint({k:pp[k] for k in sorted(pp)})\r\n```\r\nand run it multiple times, I get different results. (In the example below, values for `a` and `c` are swapped.)\r\n```bash\r\npython non_reproducible.py\r\n# {'c': array([-1.74976547]), 'b': array([0.3426804]), 'a': array([1.1530358]), 'd': array([-0.25243604])}\r\npython non_reproducible.py\r\n# {'a': array([-1.74976547]), 'b': array([0.3426804]), 'c': array([1.1530358]), 'd': array([-0.25243604])}\r\n```\r\nIn my opinion this defeats the whole purpose of being able to set the random seed.\r\n(Note: it is essential to run the code in different sessions python sessions to see the effect.)\r\n\r\nThe reason is that the function [uses `set` to get a unique set of variable names](https://github.com/pymc-devs/pymc3/blob/47b36586676a0af6505f376afff2193ab5a5ed84/pymc3/sampling.py#L1935), and the random draws depend on the  (undefined) ordering of the returned set.\r\n\r\nA simple fix might be to sort the variables names before sampling, as I've done [here](https://github.com/alcrene/pymc3/commit/c0753dbb0a7de6d0af0711be0223c80ecd7a5432). This has the side-effect of making the result independent of the order in which variables are specified, which I think is nice.\r\n\r\nI'm not proposing my fix as a PR because figuring out and testing consistency with other functions goes beyond my current needs. For example, `sample_posterior_predictive` is (I think) reproducible given a random seed, because it just takes the list of variable names. But it likely _does_ depend on the order in which variables are specified.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: master ([27 Feb 2021](https://github.com/pymc-devs/pymc3/tree/47b36586676a0af6505f376afff2193ab5a5ed84))\r\n* Theano Version: Theano-PyMC 1.1.2\r\n* Python Version: 3.8.6\r\n* Operating system: OpenSUSE LEAP 15.2\r\n* How did you install PyMC3: pip  (dependencies with conda)\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4490/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4488", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4488/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4488/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4488/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4488", "id": 817606638, "node_id": "MDU6SXNzdWU4MTc2MDY2Mzg=", "number": 4488, "title": "Imputed variables are not auto-transformed", "user": {"login": "npschafer", "id": 6892031, "node_id": "MDQ6VXNlcjY4OTIwMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/6892031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/npschafer", "html_url": "https://github.com/npschafer", "followers_url": "https://api.github.com/users/npschafer/followers", "following_url": "https://api.github.com/users/npschafer/following{/other_user}", "gists_url": "https://api.github.com/users/npschafer/gists{/gist_id}", "starred_url": "https://api.github.com/users/npschafer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/npschafer/subscriptions", "organizations_url": "https://api.github.com/users/npschafer/orgs", "repos_url": "https://api.github.com/users/npschafer/repos", "events_url": "https://api.github.com/users/npschafer/events{/privacy}", "received_events_url": "https://api.github.com/users/npschafer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2021-02-26T19:28:02Z", "updated_at": "2021-04-17T15:32:07Z", "closed_at": "2021-04-17T15:32:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I\u2019m looking to do imputation of partially observed random variables with positive support. Attempting to do so results in sampling values outside the support of the distribution and causes various downstream steps to fail, e.g., finding the MAP and variational inference.\r\n```python\r\nimport pymc3 as pm\r\nfrom numpy.ma import masked_values\r\n\r\nMASK_VALUE = -999.\r\nobserved_values = np.array([1., MASK_VALUE], dtype=float)\r\nwith pm.Model() as model:\r\n    pm.Gamma(\"partially_observed\", alpha=3., beta=1/0.1, observed=masked_values(observed_values, value=MASK_VALUE))\r\n    map_estimate = pm.find_MAP()\r\nprint(map_estimate)\r\nprint(model.test_point)\r\n```\r\n\r\n```python\r\n{'partially_observed_missing': array([-0.7])}\r\n{'partially_observed_missing': array([0.3])}\r\n```\r\n\r\nI originally raised this on the PyMC3 Discourse (https://discourse.pymc.io/t/imputation-for-partially-observed-random-variables-with-positive-support/6844) and @ckrapu suggested that I create an issue.\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: '3.9.3'\r\n* Theano Version: '1.0.5' (not sure if this is the correct version as things are somewhat confusing with having Theano, Theano-PyMC, and Aesara all co-existing)\r\n* Python Version: 3.6.12\r\n* Operating system: Linux\r\n* How did you install PyMC3: pip\r\n\r\nThanks for all the great work and for your help with resolving the issue!\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4488/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4484", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4484/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4484/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4484/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4484", "id": 814663872, "node_id": "MDU6SXNzdWU4MTQ2NjM4NzI=", "number": 4484, "title": "Invalid logic in sample prior predictive for transformed variables", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-02-23T17:16:39Z", "updated_at": "2021-10-14T17:10:54Z", "closed_at": "2021-10-14T17:10:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Prior predictive sampling draws values from the untransformed variables and then attempts to recreate the transformed values via `transformation.forward_val(untransformed_values)`\r\n\r\nHowever, this logic is not sufficient to recover the correct values when there are stochastic bounds (e.g., `pm.Uniform('x', lower=0, upper=y)`, because we also need to know what the values of the stochastic bounds were in each sample (i.e., the `y`).\r\n\r\nPeople don't usually care about transformed variables, but this is critical for example in `sample_smc()` as it creates it's particles from an initial prior_predictive call.\r\n\r\nHopefully this will be gone in V4.0, but I thought best to document it just in case (and in the meanwhile).\r\n\r\nMinimal reproducible example:\r\n```python\r\nnp.random.seed(1)\r\nwith pm.Model() as m:\r\n    y = pm.Uniform('y', 0, 1)\r\n    x = pm.Uniform('x', 0, y)\r\n    prior = pm.sample_prior_predictive()\r\n\r\nprint(np.mean(np.isnan(prior['x_interval__'])))\r\n```\r\n```\r\n/home/ricardo/Documents/Projects/pymc3/pymc3/distributions/transforms.py:294: RuntimeWarning: invalid value encountered in log\r\n  return floatX(np.log(x - a) - np.log(b - x))\r\n\r\n0.314\r\n```\r\nThe 31.4% `NANs` correspond to cases where `a` and `b` were either above or below x due to random sampling in the block below. The `NANs` are the most obvious symptom, but all values are in fact incorrect:\r\n\r\nhttps://github.com/pymc-devs/pymc3/blob/32b5c941c8f43b485afd3da1ae5544c3c50b9e77/pymc3/distributions/transforms.py#L289-L294\r\n\r\nWhich is called at the end of `prior_predictive_sampling`, without providing a `point` or any other contextual info:\r\n\r\nhttps://github.com/pymc-devs/pymc3/blob/37ca5ea9b25aa00ed4d460f0fb417712d125d248/pymc3/sampling.py#L1941-L1957\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4484/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4484/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4469", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4469/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4469/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4469/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4469", "id": 805163614, "node_id": "MDU6SXNzdWU4MDUxNjM2MTQ=", "number": 4469, "title": "chain_idx parameter in sample cannot take values other than zero", "user": {"login": "helmutsimon", "id": 14212177, "node_id": "MDQ6VXNlcjE0MjEyMTc3", "avatar_url": "https://avatars.githubusercontent.com/u/14212177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/helmutsimon", "html_url": "https://github.com/helmutsimon", "followers_url": "https://api.github.com/users/helmutsimon/followers", "following_url": "https://api.github.com/users/helmutsimon/following{/other_user}", "gists_url": "https://api.github.com/users/helmutsimon/gists{/gist_id}", "starred_url": "https://api.github.com/users/helmutsimon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/helmutsimon/subscriptions", "organizations_url": "https://api.github.com/users/helmutsimon/orgs", "repos_url": "https://api.github.com/users/helmutsimon/repos", "events_url": "https://api.github.com/users/helmutsimon/events{/privacy}", "received_events_url": "https://api.github.com/users/helmutsimon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "Spaak", "id": 3042751, "node_id": "MDQ6VXNlcjMwNDI3NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3042751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Spaak", "html_url": "https://github.com/Spaak", "followers_url": "https://api.github.com/users/Spaak/followers", "following_url": "https://api.github.com/users/Spaak/following{/other_user}", "gists_url": "https://api.github.com/users/Spaak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Spaak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Spaak/subscriptions", "organizations_url": "https://api.github.com/users/Spaak/orgs", "repos_url": "https://api.github.com/users/Spaak/repos", "events_url": "https://api.github.com/users/Spaak/events{/privacy}", "received_events_url": "https://api.github.com/users/Spaak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Spaak", "id": 3042751, "node_id": "MDQ6VXNlcjMwNDI3NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3042751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Spaak", "html_url": "https://github.com/Spaak", "followers_url": "https://api.github.com/users/Spaak/followers", "following_url": "https://api.github.com/users/Spaak/following{/other_user}", "gists_url": "https://api.github.com/users/Spaak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Spaak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Spaak/subscriptions", "organizations_url": "https://api.github.com/users/Spaak/orgs", "repos_url": "https://api.github.com/users/Spaak/repos", "events_url": "https://api.github.com/users/Spaak/events{/privacy}", "received_events_url": "https://api.github.com/users/Spaak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2021-02-10T04:44:52Z", "updated_at": "2021-03-03T15:08:50Z", "closed_at": "2021-03-03T15:08:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Sample works correctly when chain_idx is not set or set to chain_idx=0, but not if it is set to another value, eg chain_idx=1 as in the example. The model is a simple one and not relevant in itself.\r\n\r\n```import sys\r\nimport numpy as np\r\nimport pymc3\r\nfrom pymc3.distributions.discrete import Poisson, Categorical\r\nfrom pymc3.sampling import sample\r\nfrom pymc3 import Model\r\nimport theano\r\n\r\n\r\ndef run_MCMC(n, obs, draws):\r\n    obs = np.array(obs)\r\n    with Model() as model: \r\n        \r\n        pn = np.ones(n) / n\r\n        x = Categorical('x', pn, testval=0)\r\n        sfs_obs = Poisson('sfs_obs', mu=x + 1, observed=obs) \r\n\r\n    with model:\r\n        trace = sample(draws, tune=0, chain_idx=1) \r\n    return trace\r\n\r\nprint(np.__version__)\r\nprint(pymc3.__version__)\r\nprint(theano.__version__)\r\nprint(sys.version_info)\r\nobs = 3\r\ndraws = 1000\r\nn = 10\r\ntrace = run_MCMC(n, obs, draws)\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```1.16.3\r\n3.11.0\r\n1.1.0\r\nsys.version_info(major=3, minor=7, micro=3, releaselevel='final', serial=0)\r\nMultiprocess sampling (2 chains in 2 jobs)\r\nCategoricalGibbsMetropolis: [x]\r\n\r\n 100.00% [2000/2000 00:05<00:00 Sampling 2 chains, 0 divergences]\r\nSampling 2 chains for 0 tune and 1_000 draw iterations (0 + 2_000 draws total) took 17 seconds.\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-8-e947156ecbf6> in <module>\r\n     27 draws = 1000\r\n     28 n = 10\r\n---> 29 trace = run_MCMC(n, obs, draws)\r\n\r\n<ipython-input-8-e947156ecbf6> in run_MCMC(n, obs, draws)\r\n     17 \r\n     18     with model:\r\n---> 19         trace = sample(draws, tune=0, chain_idx=1)\r\n     20     return trace\r\n     21 \r\n\r\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/sampling.py in sample(draws, step, init, n_init, start, trace, chain_idx, chains, cores, tune, progressbar, model, random_seed, discard_tuned_samples, compute_convergence_checks, callback, jitter_max_retries, return_inferencedata, idata_kwargs, mp_ctx, pickle_backend, **kwargs)\r\n    635         if idata_kwargs:\r\n    636             ikwargs.update(idata_kwargs)\r\n--> 637         idata = arviz.from_pymc3(trace, **ikwargs)\r\n    638 \r\n    639     if compute_convergence_checks:\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/arviz/data/io_pymc3.py in from_pymc3(trace, prior, posterior_predictive, log_likelihood, coords, dims, model, save_warmup, density_dist_obs)\r\n    557         model=model,\r\n    558         save_warmup=save_warmup,\r\n--> 559         density_dist_obs=density_dist_obs,\r\n    560     ).to_inference_data()\r\n    561 \r\n\r\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/arviz/data/io_pymc3.py in to_inference_data(self)\r\n    484             \"posterior\": self.posterior_to_xarray(),\r\n    485             \"sample_stats\": self.sample_stats_to_xarray(),\r\n--> 486             \"log_likelihood\": self.log_likelihood_to_xarray(),\r\n    487             \"posterior_predictive\": self.posterior_predictive_to_xarray(),\r\n    488             \"predictions\": self.predictions_to_xarray(),\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/arviz/data/base.py in wrapped(cls, *args, **kwargs)\r\n     44                 if all([getattr(cls, prop_i) is None for prop_i in prop]):\r\n     45                     return None\r\n---> 46             return func(cls, *args, **kwargs)\r\n     47 \r\n     48         return wrapped\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/arviz/data/base.py in wrapped(cls, *args, **kwargs)\r\n     44                 if all([getattr(cls, prop_i) is None for prop_i in prop]):\r\n     45                     return None\r\n---> 46             return func(cls, *args, **kwargs)\r\n     47 \r\n     48         return wrapped\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/arviz/data/io_pymc3.py in log_likelihood_to_xarray(self)\r\n    312         if self.posterior_trace:\r\n    313             try:\r\n--> 314                 data = self._extract_log_likelihood(self.posterior_trace)\r\n    315             except TypeError:\r\n    316                 warnings.warn(warn_msg)\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/arviz/data/base.py in wrapped(cls, *args, **kwargs)\r\n     44                 if all([getattr(cls, prop_i) is None for prop_i in prop]):\r\n     45                     return None\r\n---> 46             return func(cls, *args, **kwargs)\r\n     47 \r\n     48         return wrapped\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/arviz/data/base.py in wrapped(cls, *args, **kwargs)\r\n     44                 if all([getattr(cls, prop_i) is None for prop_i in prop]):\r\n     45                     return None\r\n---> 46             return func(cls, *args, **kwargs)\r\n     47 \r\n     48         return wrapped\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/arviz/data/io_pymc3.py in _extract_log_likelihood(self, trace)\r\n    238                     for point in trace.points([chain])\r\n    239                 ]\r\n--> 240                 log_likelihood_dict.insert(var.name, np.stack(log_like_chain), chain)\r\n    241         return log_likelihood_dict.trace_dict\r\n    242 \r\n\r\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/sampling.py in insert(self, k, v, idx)\r\n   1594             self.trace_dict[k][idx] = v\r\n   1595         else:\r\n-> 1596             self.trace_dict[k][idx, :] = v\r\n   1597 \r\n   1598 \r\n\r\nIndexError: index 2 is out of bounds for axis 0 with size 2\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.11.0\r\n* Theano Version: 1.1.0\r\n* Python Version: 3.7\r\n* Operating system: macOS Mojave 10.14.6\r\n* How did you install PyMC3: (pip)\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4469/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4431", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4431/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4431/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4431/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4431", "id": 792141966, "node_id": "MDU6SXNzdWU3OTIxNDE5NjY=", "number": 4431, "title": "AdvanceSubtensor Error with JAX sampler", "user": {"login": "muunetheus", "id": 67254455, "node_id": "MDQ6VXNlcjY3MjU0NDU1", "avatar_url": "https://avatars.githubusercontent.com/u/67254455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/muunetheus", "html_url": "https://github.com/muunetheus", "followers_url": "https://api.github.com/users/muunetheus/followers", "following_url": "https://api.github.com/users/muunetheus/following{/other_user}", "gists_url": "https://api.github.com/users/muunetheus/gists{/gist_id}", "starred_url": "https://api.github.com/users/muunetheus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/muunetheus/subscriptions", "organizations_url": "https://api.github.com/users/muunetheus/orgs", "repos_url": "https://api.github.com/users/muunetheus/repos", "events_url": "https://api.github.com/users/muunetheus/events{/privacy}", "received_events_url": "https://api.github.com/users/muunetheus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2381812947, "node_id": "MDU6TGFiZWwyMzgxODEyOTQ3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/jax", "name": "jax", "color": "f241a5", "default": false, "description": ""}, {"id": 2548173976, "node_id": "MDU6TGFiZWwyNTQ4MTczOTc2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/needs%20info", "name": "needs info", "color": "fbca04", "default": false, "description": "Additional information required"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2021-01-22T16:31:13Z", "updated_at": "2021-03-04T02:20:47Z", "closed_at": "2021-03-04T02:20:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using JAX num_pyro NUTS sampler the following error is produced:\r\n\r\nMissingInputError: Input 1 of the graph (indices start from 0), used to compute AdvancedSubtensor1(beta_mat ~ Deterministic, <TensorType(int32, vector)>), was not provided and not given a value. Use the Theano flag exception_verbosity='high', for more information on this error.\r\n\r\nThis error does not occur when using the standard sampler.\r\n\r\nTested with PYMC3 3.10.0 and 3.11.0.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4431/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4417", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4417/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4417/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4417/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4417", "id": 786017543, "node_id": "MDU6SXNzdWU3ODYwMTc1NDM=", "number": 4417, "title": "pm.Bound and TruncatedNormal generate wrong gradients", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76152, "node_id": "MDU6TGFiZWw3NjE1Mg==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/enhancements", "name": "enhancements", "color": "02e10c", "default": false, "description": null}, {"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2021-01-14T14:07:27Z", "updated_at": "2021-01-29T16:23:28Z", "closed_at": "2021-01-29T16:23:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Edit**: I came across issues in the model.dlogp (and sampling) of models using `pm.Bound` and `TruncatedNormal` while trying to sketch a generic `pm.Truncated` class. These problems are described in the messages at the end of the thread.\r\n\r\n***\r\n\r\nI was playing around to see if I could implement a generic `Truncated` class similar to the `Bound` but taking into consideration the extra normalization term. Everything is almost the same as the `Bound` except for the `logp` method and that it allows for observed values:\r\n\r\n```python\r\nclass _Truncated(Distribution):\r\n    ...\r\n\r\n    def _normalization(self):\r\n        if self.lower is not None and self.upper is not None:\r\n            lcdf_upper = self._wrapped.logcdf(self.upper)\r\n            lcdf_lower = self._wrapped.logcdf(self.lower)\r\n            return logdiffexp(lcdf_upper, lcdf_lower)\r\n\r\n        if self.lower is not None:\r\n            return log1mexp(-self._wrapped.logcdf(self.lower))\r\n\r\n        if self.upper is not None:\r\n            return self._wrapped.logcdf(self.upper)\r\n\r\n        return 0\r\n\r\n    def logp(self, value):\r\n        logp = self._wrapped.logp(value) - self._normalization()\r\n        bounds = []\r\n        if self.lower is not None:\r\n            bounds.append(value >= self.lower)\r\n        if self.upper is not None:\r\n            bounds.append(value <= self.upper)\r\n        if len(bounds) > 0:\r\n            return bound(logp, *bounds)\r\n        else:\r\n            return logp\r\n```\r\n\r\nYou can check all the changes in my fork: https://github.com/pymc-devs/pymc3/compare/master...ricardoV94:truncated\r\n\r\nEverything seems to work fine, but when I actually try to sample something is definitely off. You can find my Notebook here: https://gist.github.com/ricardoV94/269f07b016a5136f52a1e0238d0ec4e6\r\n\r\nFirst is a manual implementation using Potential:\r\n```python\r\n\r\n# create data\r\nnp.random.seed(451)\r\nx = np.random.exponential(3, size=5000)\r\nminx=1\r\nmaxx=20\r\n\r\nobs = x[np.where(~((x<minx) | (x>maxx)))] # remove values outside range\r\n\r\nwith pm.Model() as manual_model:\r\n    \u03bb = pm.Exponential(\"\u03bb\", lam=1/5)  # prior exponential with mean of 5\r\n    x = pm.Exponential('x', lam=1/\u03bb, observed=obs) # obs exponential with mean of $\\lambda$.\r\n\r\n    exp_dist = pm.Exponential.dist(lam=1/\u03bb) # this is not part of the model, just used to get the logcdf\r\n    norm_term = pm.Potential(\"norm_term\", -pm.math.logdiffexp(exp_dist.logcdf(maxx), exp_dist.logcdf(minx)) * x.size)\r\n\r\n    trace_manual= pm.sample(2000, tune=1000, return_inferencedata=True)\r\n\r\naz.summary(trace_manual)\r\n```\r\n![image](https://user-images.githubusercontent.com/28983449/104596748-adfa7700-5674-11eb-9027-a09ff875fe1a.png)\r\n\r\n\r\nAnd now with `Truncated`\r\n```python\r\nwith pm.Model() as trunc_model:\r\n    \u03bb = pm.Exponential(\"\u03bb\", lam=1/5)\r\n    x = pm.Truncated(pm.Exponential, lower=minx, upper=maxx)('x', lam=1/\u03bb, observed=obs)\r\n\r\n    trace_trunc = pm.sample(2000, tune=1000, return_inferencedata=True)\r\naz.summary(trace_trunc)\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/28983449/104596782-ba7ecf80-5674-11eb-9ae6-63534a111e9d.png)\r\n\r\nA lot of divergences and non convergence!\r\n\r\nEverything seems to be working well when looking at the `check_test_point`:\r\n```python\r\nin[5]\r\ntrunc_point = trunc_model.check_test_point(\r\n    test_point={'\u03bb_log__': np.log(5)}\r\n)\r\ntrunc_point\r\nout[5]\r\n\u03bb_log__      -1.00\r\nx         -7936.43\r\nName: Log-probability of test_point, dtype: float64\r\n\r\nin[6]\r\nmanual_point = manual_model.check_test_point(\r\n    test_point={'\u03bb_log__': np.log(5)}\r\n)\r\nmanual_point\r\nout[6]\r\n\u03bb_log__      -1.00\r\nx         -8749.23\r\nName: Log-probability of test_point, dtype: float64\r\n```\r\nThe difference between the manual and the trunc models is exactly the correction term (I assume the potential term is ignored in `check_test_point`)\r\n\r\n```python\r\nin[7]\r\nmodel_diff = manual_point - trunc_point\r\nmodel_diff\r\nout[7]\r\n\u03bb_log__      0.0\r\nx         -812.8\r\nName: Log-probability of test_point, dtype: float64\r\n\r\nin[8]\r\nexp_dist = pm.Exponential.dist(1/5)\r\nnorm_term = (-pm.math.logdiffexp(exp_dist.logcdf(maxx), exp_dist.logcdf(minx)) * x.size).eval()\r\nnorm_term\r\nout[8]\r\narray(812.80311981)\r\n\r\nin[9]\r\ntrunc_dist = pm.Truncated(pm.Exponential, lower=minx, upper=maxx).dist(lam=1/5)\r\n\r\nin[10]\r\ntrunc_dist.logp(obs).eval().sum()\r\nout[10]\r\n-7936.430976274112\r\n\r\nin[11]\r\ntrunc_dist._normalization().eval() * len(obs)\r\nout[11]\r\n-812.8031198123141\r\n```\r\n\r\nI think I must be missing something obvious that happens during the sampling. Why would the model evaluate correctly but fail to sample?", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4417/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4416", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4416/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4416/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4416/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4416", "id": 785716037, "node_id": "MDExOlB1bGxSZXF1ZXN0NTU0NzAwMTQz", "number": 4416, "title": "Fixed Dirichlet.random returning output of wrong shapes ", "user": {"login": "kc611", "id": 55352418, "node_id": "MDQ6VXNlcjU1MzUyNDE4", "avatar_url": "https://avatars.githubusercontent.com/u/55352418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kc611", "html_url": "https://github.com/kc611", "followers_url": "https://api.github.com/users/kc611/followers", "following_url": "https://api.github.com/users/kc611/following{/other_user}", "gists_url": "https://api.github.com/users/kc611/gists{/gist_id}", "starred_url": "https://api.github.com/users/kc611/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kc611/subscriptions", "organizations_url": "https://api.github.com/users/kc611/orgs", "repos_url": "https://api.github.com/users/kc611/repos", "events_url": "https://api.github.com/users/kc611/events{/privacy}", "received_events_url": "https://api.github.com/users/kc611/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/20", "html_url": "https://github.com/pymc-devs/pymc/milestone/20", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/20/labels", "id": 6211045, "node_id": "MDk6TWlsZXN0b25lNjIxMTA0NQ==", "number": 20, "title": "3.11.0", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 25, "state": "closed", "created_at": "2020-12-14T15:20:06Z", "updated_at": "2021-01-22T12:04:10Z", "due_on": "2021-01-21T08:00:00Z", "closed_at": "2021-01-22T12:04:10Z"}, "comments": 20, "created_at": "2021-01-14T07:01:53Z", "updated_at": "2021-01-18T12:04:52Z", "closed_at": "2021-01-18T12:00:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4416", "html_url": "https://github.com/pymc-devs/pymc/pull/4416", "diff_url": "https://github.com/pymc-devs/pymc/pull/4416.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4416.patch", "merged_at": "2021-01-18T12:00:42Z"}, "body": "\r\nLink to Issue: #4060 \r\n\r\nA simple fix to the shape broadcasting logic in `generate_samples()` . The issue was mostly fixed in #4061 , leaving out a particular case when the shape tuple equals the size tuple. The issue in this case was here :\r\n\r\nhttps://github.com/pymc-devs/pymc3/blob/1769258e459e8f40aa8a56e0ac911aa99e7f67de/pymc3/distributions/distribution.py#L1058-L1066\r\n\r\nSince both the tuples were equal this particular piece of logic thought that the shape is prepended to the size tuple. Adding a simple check which necessitates that length of `dist_shape` should be greater than `size_tup` fixes the issue.\r\n\r\nI think this fix along with #4061 completely resolves #4060 ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4416/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4394", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4394/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4394/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4394/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4394", "id": 776012260, "node_id": "MDExOlB1bGxSZXF1ZXN0NTQ2NTc2MTA0", "number": 4394, "title": "Update `log1mexp` and remove redundant local reimplementations in the library", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76152, "node_id": "MDU6TGFiZWw3NjE1Mg==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/enhancements", "name": "enhancements", "color": "02e10c", "default": false, "description": null}, {"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/20", "html_url": "https://github.com/pymc-devs/pymc/milestone/20", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/20/labels", "id": 6211045, "node_id": "MDk6TWlsZXN0b25lNjIxMTA0NQ==", "number": 20, "title": "3.11.0", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 25, "state": "closed", "created_at": "2020-12-14T15:20:06Z", "updated_at": "2021-01-22T12:04:10Z", "due_on": "2021-01-21T08:00:00Z", "closed_at": "2021-01-22T12:04:10Z"}, "comments": 13, "created_at": "2020-12-29T17:40:45Z", "updated_at": "2021-01-05T09:11:09Z", "closed_at": "2021-01-02T20:55:50Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4394", "html_url": "https://github.com/pymc-devs/pymc/pull/4394", "diff_url": "https://github.com/pymc-devs/pymc/pull/4394.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4394.patch", "merged_at": "2021-01-02T20:55:50Z"}, "body": "The cutoff in `log1mexp` (and its numpy counterpart) is supposed to be `log(2) = 0.693`. There was probably a small typo when writing the function as the cutoff was set to `0.683`. Pinging @aseyboldt \r\n\r\nOriginal source of this algorithm: https://cran.r-project.org/web/packages/Rmpfr/vignettes/log1mexp-note.pdf\r\nExample R implementation: https://github.com/cran/Rmpfr/blob/7f15be8d124a7517719012107c132b5d828284f9/inst/doc/log1mexp-note.R#L96\r\nTensorFlow implementation: https://github.com/tensorflow/probability/blob/v0.11.1/tensorflow_probability/python/math/generic.py#L495-L519\r\nHaskell implementation: https://gitlab.haskell.org/ghc/ghc/-/blob/master/libraries/base/GHC/Float.hs#L159-161\r\n\r\nI also removed a redundant re-implementation of this function in the `logcdf` method of the `Exponential` and `Weibull` distribution.\r\n\r\n***\r\n\r\nI would further suggest that the `log1mexp` method be changed to expect negative values (such as logarithms of probabilities) instead of positive values. This is what the Haskell implementation does directly and what the TensorFlow does less directly by first taking the absolute of the input and then negating it. The function would change from `log(1 - exp(-x))` to `log(1 - exp(x))` (as in Haskell). This is equivalent to `log(1 - exp(-|x|))` (as in TFP), but I like the formula with the absolute less because it seems to just hide mistakes such as asking `log(1 - exp(log(1.1))`. I don't see why one would ever want values larger than 1 after exponentiation to be negated before exponentiation.\r\n\r\nI have actually implemented this change and it did not seem to have large ramifications. There seem to be only 2 places (3 after #4387) in the library where the function is used directly, and the only thing needed is to negate the input (e.g., the function `logdiffexp` needs to be changed from `a + log1mexp(a - b)` to `a + log1mexp(b - a)`). I also checked that current unittests would detect all the spotted sections if they were not corrected.\r\n\r\nThe least nice part is that it would probably require a `UserWarning` about the change when the function is called directly by the user. What do you think?\r\n\r\n**Update: This change was rejected to avoid backwards incompatibility**", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4394/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4393", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4393/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4393/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4393/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4393", "id": 775968912, "node_id": "MDExOlB1bGxSZXF1ZXN0NTQ2NTQ0ODUz", "number": 4393, "title": "Increase unittest `check_logcdf` coverage and fix issues with some distribution methods", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76152, "node_id": "MDU6TGFiZWw3NjE1Mg==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/enhancements", "name": "enhancements", "color": "02e10c", "default": false, "description": null}, {"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "AlexAndorra", "id": 30447180, "node_id": "MDQ6VXNlcjMwNDQ3MTgw", "avatar_url": "https://avatars.githubusercontent.com/u/30447180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexAndorra", "html_url": "https://github.com/AlexAndorra", "followers_url": "https://api.github.com/users/AlexAndorra/followers", "following_url": "https://api.github.com/users/AlexAndorra/following{/other_user}", "gists_url": "https://api.github.com/users/AlexAndorra/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexAndorra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexAndorra/subscriptions", "organizations_url": "https://api.github.com/users/AlexAndorra/orgs", "repos_url": "https://api.github.com/users/AlexAndorra/repos", "events_url": "https://api.github.com/users/AlexAndorra/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexAndorra/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "AlexAndorra", "id": 30447180, "node_id": "MDQ6VXNlcjMwNDQ3MTgw", "avatar_url": "https://avatars.githubusercontent.com/u/30447180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexAndorra", "html_url": "https://github.com/AlexAndorra", "followers_url": "https://api.github.com/users/AlexAndorra/followers", "following_url": "https://api.github.com/users/AlexAndorra/following{/other_user}", "gists_url": "https://api.github.com/users/AlexAndorra/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexAndorra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexAndorra/subscriptions", "organizations_url": "https://api.github.com/users/AlexAndorra/orgs", "repos_url": "https://api.github.com/users/AlexAndorra/repos", "events_url": "https://api.github.com/users/AlexAndorra/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexAndorra/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/20", "html_url": "https://github.com/pymc-devs/pymc/milestone/20", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/20/labels", "id": 6211045, "node_id": "MDk6TWlsZXN0b25lNjIxMTA0NQ==", "number": 20, "title": "3.11.0", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 25, "state": "closed", "created_at": "2020-12-14T15:20:06Z", "updated_at": "2021-01-22T12:04:10Z", "due_on": "2021-01-21T08:00:00Z", "closed_at": "2021-01-22T12:04:10Z"}, "comments": 5, "created_at": "2020-12-29T16:07:36Z", "updated_at": "2021-01-16T09:11:40Z", "closed_at": "2021-01-02T22:50:39Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4393", "html_url": "https://github.com/pymc-devs/pymc/pull/4393", "diff_url": "https://github.com/pymc-devs/pymc/pull/4393.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4393.patch", "merged_at": "2021-01-02T22:50:39Z"}, "body": "Changes:\r\nThis PR proposes two changes to `check_logcdf` to:\r\n1. Test that values below or above finite domain edges are properly evaluated to `-inf` and `0`. \r\n2. Test that multiple values can be computed in one call, or if not, that a standard informative `TypeError` is returned.\r\n\r\nThis extended test revealed some issues with current implementations of the `logcdf` method, which are also fixed by this PR:\r\n1. `Uniform`: Would incorrectly evaluate values above `upper` to `-inf`\r\n2. `HalfNormal`: Would return `nan` for negative values. It was also unclear to me what the previous `logcdf` logic was doing, as it seems to me that `tt.lt(z, -1.0)` could never evaluate to `True` given valid positive values and `sigma`. As such, I simplified the code as well as correcting the invalid logcdf evaluation for negative values. Am I missing something? (pinging @domenzain)\r\n3. `Gamma`, and `InverseGamma` were currently failing with invalid parameters due to #4340 and https://github.com/pymc-devs/Theano-PyMC/issues/224. I added a dirty hack to hide the issue for now. It can be simplified once those issues are solved.\r\n4. `Beta` and `StudentT` logcdf now raises informative `TypeError` when asked to evaluate multiple values (#4342)\r\n\r\nAs suggested by @AlexAndorra in https://github.com/pymc-devs/pymc3/pull/4387#discussion_r549825529, the docstrings of the logcdf methods were updated to better reflect when multiple values can or cannot be evaluated.\r\n\r\nIt was necessary to change the test domains of the `Flat` and `HalfFlat` distributions to their actual domains.\r\n\r\nThis test is also relevant for the current PR #4387, were these same changes were helpful in debugging issues with the implementations of the `logcdf` methods. I thought it was best to have this as a separate PR as that one is quite large already. \r\n\r\nFinally, I think this does meaningfully increase the overhead of the unit tests since, at most, only three extra logp evaluations are being done for each distribution (one for each finite edge of a domain plus a (2,) array for multiple values). ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4393/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4393/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4383", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4383/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4383/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4383/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4383", "id": 774773531, "node_id": "MDU6SXNzdWU3NzQ3NzM1MzE=", "number": 4383, "title": "JAX sampler fails when chains=1", "user": {"login": "kyleabeauchamp", "id": 1900459, "node_id": "MDQ6VXNlcjE5MDA0NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1900459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleabeauchamp", "html_url": "https://github.com/kyleabeauchamp", "followers_url": "https://api.github.com/users/kyleabeauchamp/followers", "following_url": "https://api.github.com/users/kyleabeauchamp/following{/other_user}", "gists_url": "https://api.github.com/users/kyleabeauchamp/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleabeauchamp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleabeauchamp/subscriptions", "organizations_url": "https://api.github.com/users/kyleabeauchamp/orgs", "repos_url": "https://api.github.com/users/kyleabeauchamp/repos", "events_url": "https://api.github.com/users/kyleabeauchamp/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleabeauchamp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2381812947, "node_id": "MDU6TGFiZWwyMzgxODEyOTQ3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/jax", "name": "jax", "color": "f241a5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-12-25T19:03:05Z", "updated_at": "2021-11-18T17:30:37Z", "closed_at": "2021-11-18T17:30:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've found a bug where the jax numpyro sampler fails in the case of a single chain.  The failure is that the sampling proceeds but hangs at the end of sampling, requiring a keyboard interrupt to exit.  A simple reproducing example is below:\r\n\r\n```\r\nimport numpy as np\r\nimport pymc3 as pm\r\nimport pymc3.sampling_jax\r\n\r\nuse_jax = True\r\nsample = pm.sampling_jax.sample_numpyro_nuts if use_jax else pm.sample\r\n\r\nn_steps = 25\r\nchains = 1\r\nn_samples, n_features = 100, 500\r\n\r\nx = np.random.normal(size=(n_samples, n_features))\r\ny = np.random.normal(size=n_samples)\r\n\r\nwith pm.Model() as model:\r\n    weights = pm.Normal(\"weights\", 0.0, sigma=10.0, shape=n_features)\r\n    bias = pm.Normal(\"bias\", 0.0, sigma=10.0)\r\n\r\n    mu = pm.math.dot(x, weights) + bias\r\n    observed = pm.Normal(\"observed\", mu, 1.0, observed=y)\r\n\r\n    tr = sample(n_steps, chains=chains)\r\n```\r\n\r\nIn particular, the test fails for (jax+chains=1) but passes for (jax+chains=2), (pymc+chains=1), and (pymc+chains=2).  \r\n\r\nThis was tested on my own branches of pymc and theano-pymc, which roughly correspond to the latest master.  ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4383/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4370", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4370/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4370/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4370/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4370", "id": 773111326, "node_id": "MDExOlB1bGxSZXF1ZXN0NTQ0MjU1MjY2", "number": 4370, "title": "make sure weights always sum up to 1, fix #4369", "user": {"login": "basnijholt", "id": 6897215, "node_id": "MDQ6VXNlcjY4OTcyMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6897215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basnijholt", "html_url": "https://github.com/basnijholt", "followers_url": "https://api.github.com/users/basnijholt/followers", "following_url": "https://api.github.com/users/basnijholt/following{/other_user}", "gists_url": "https://api.github.com/users/basnijholt/gists{/gist_id}", "starred_url": "https://api.github.com/users/basnijholt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basnijholt/subscriptions", "organizations_url": "https://api.github.com/users/basnijholt/orgs", "repos_url": "https://api.github.com/users/basnijholt/repos", "events_url": "https://api.github.com/users/basnijholt/events{/privacy}", "received_events_url": "https://api.github.com/users/basnijholt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/20", "html_url": "https://github.com/pymc-devs/pymc/milestone/20", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/20/labels", "id": 6211045, "node_id": "MDk6TWlsZXN0b25lNjIxMTA0NQ==", "number": 20, "title": "3.11.0", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 25, "state": "closed", "created_at": "2020-12-14T15:20:06Z", "updated_at": "2021-01-22T12:04:10Z", "due_on": "2021-01-21T08:00:00Z", "closed_at": "2021-01-22T12:04:10Z"}, "comments": 4, "created_at": "2020-12-22T17:15:18Z", "updated_at": "2021-01-19T15:04:00Z", "closed_at": "2021-01-19T15:03:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4370", "html_url": "https://github.com/pymc-devs/pymc/pull/4370", "diff_url": "https://github.com/pymc-devs/pymc/pull/4370.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4370.patch", "merged_at": "2021-01-19T15:03:59Z"}, "body": "**Thank your for opening a PR!**\r\n\r\nDepending on what your PR does, here are a few things you might want to address in the description:\r\n+ [ ] what are the (breaking) changes that this PR makes?\r\n+ [ ] important background, or details about the implementation\r\n+ [ ] are the changes\u2014especially new features\u2014covered by tests and docstrings?\r\n+ [ ] consider adding/updating relevant example notebooks\r\n+ [ ] right before it's ready to merge, mention the PR in the RELEASE-NOTES.md\r\n\r\n\r\nThis should fix #4369. However, this problem might require a different solution where we never need to do a correction at all.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4370/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4365", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4365/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4365/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4365/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4365", "id": 772317387, "node_id": "MDExOlB1bGxSZXF1ZXN0NTQzNjAzODIy", "number": 4365, "title": "Pass a string to NDArray(name=...) and raise NotImplemented on named models in SMC", "user": {"login": "basnijholt", "id": 6897215, "node_id": "MDQ6VXNlcjY4OTcyMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6897215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basnijholt", "html_url": "https://github.com/basnijholt", "followers_url": "https://api.github.com/users/basnijholt/followers", "following_url": "https://api.github.com/users/basnijholt/following{/other_user}", "gists_url": "https://api.github.com/users/basnijholt/gists{/gist_id}", "starred_url": "https://api.github.com/users/basnijholt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basnijholt/subscriptions", "organizations_url": "https://api.github.com/users/basnijholt/orgs", "repos_url": "https://api.github.com/users/basnijholt/repos", "events_url": "https://api.github.com/users/basnijholt/events{/privacy}", "received_events_url": "https://api.github.com/users/basnijholt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/20", "html_url": "https://github.com/pymc-devs/pymc/milestone/20", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/20/labels", "id": 6211045, "node_id": "MDk6TWlsZXN0b25lNjIxMTA0NQ==", "number": 20, "title": "3.11.0", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 25, "state": "closed", "created_at": "2020-12-14T15:20:06Z", "updated_at": "2021-01-22T12:04:10Z", "due_on": "2021-01-21T08:00:00Z", "closed_at": "2021-01-22T12:04:10Z"}, "comments": 7, "created_at": "2020-12-21T16:57:18Z", "updated_at": "2021-01-19T12:11:18Z", "closed_at": "2021-01-19T12:11:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4365", "html_url": "https://github.com/pymc-devs/pymc/pull/4365", "diff_url": "https://github.com/pymc-devs/pymc/pull/4365.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4365.patch", "merged_at": "2021-01-19T12:11:17Z"}, "body": "Currently, `name` is a `Model`.\r\n\r\n\r\n**Thank your for opening a PR!**\r\n\r\nDepending on what your PR does, here are a few things you might want to address in the description:\r\n+ [x] what are the (breaking) changes that this PR makes? \u2192 see thread & release notes\r\n+ [x] important background, or details about the implementation \u2192 see thread\r\n+ [x] are the changes\u2014especially new features\u2014covered by tests and docstrings?\r\n+ [ ] <s>consider adding/updating relevant example notebooks</s>\r\n+ [x] right before it's ready to merge, mention the PR in the RELEASE-NOTES.md\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4365/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4346", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4346/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4346/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4346/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4346", "id": 768670231, "node_id": "MDU6SXNzdWU3Njg2NzAyMzE=", "number": 4346, "title": "Flaky test: test_distributions_random.py::TestNestedRandom::test_TruncatedNormal", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}, {"id": 1715881852, "node_id": "MDU6TGFiZWwxNzE1ODgxODUy", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/wontfix", "name": "wontfix", "color": "efefff", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-12-16T10:10:14Z", "updated_at": "2022-01-26T09:53:43Z", "closed_at": "2022-01-26T09:53:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "A wild, flaky test has appeared.\r\n\r\nOn `master` it's currently failing here: https://github.com/pymc-devs/pymc3/runs/1562295314#step:8:1434\r\n\r\nI already observed the flaky tests in a recent PR but it went away after re-running the CI.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4346/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4324", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4324/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4324/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4324/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4324", "id": 761802195, "node_id": "MDU6SXNzdWU3NjE4MDIxOTU=", "number": 4324, "title": "Parallel sampling for smc causes attribute error", "user": {"login": "jjruby09", "id": 28899973, "node_id": "MDQ6VXNlcjI4ODk5OTcz", "avatar_url": "https://avatars.githubusercontent.com/u/28899973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjruby09", "html_url": "https://github.com/jjruby09", "followers_url": "https://api.github.com/users/jjruby09/followers", "following_url": "https://api.github.com/users/jjruby09/following{/other_user}", "gists_url": "https://api.github.com/users/jjruby09/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjruby09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjruby09/subscriptions", "organizations_url": "https://api.github.com/users/jjruby09/orgs", "repos_url": "https://api.github.com/users/jjruby09/repos", "events_url": "https://api.github.com/users/jjruby09/events{/privacy}", "received_events_url": "https://api.github.com/users/jjruby09/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3120230247, "node_id": "MDU6TGFiZWwzMTIwMjMwMjQ3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/SMC", "name": "SMC", "color": "238E83", "default": false, "description": "Sequential Monte Carlo"}], "state": "closed", "locked": false, "assignee": {"login": "aloctavodia", "id": 1338958, "node_id": "MDQ6VXNlcjEzMzg5NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1338958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aloctavodia", "html_url": "https://github.com/aloctavodia", "followers_url": "https://api.github.com/users/aloctavodia/followers", "following_url": "https://api.github.com/users/aloctavodia/following{/other_user}", "gists_url": "https://api.github.com/users/aloctavodia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aloctavodia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aloctavodia/subscriptions", "organizations_url": "https://api.github.com/users/aloctavodia/orgs", "repos_url": "https://api.github.com/users/aloctavodia/repos", "events_url": "https://api.github.com/users/aloctavodia/events{/privacy}", "received_events_url": "https://api.github.com/users/aloctavodia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aloctavodia", "id": 1338958, "node_id": "MDQ6VXNlcjEzMzg5NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1338958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aloctavodia", "html_url": "https://github.com/aloctavodia", "followers_url": "https://api.github.com/users/aloctavodia/followers", "following_url": "https://api.github.com/users/aloctavodia/following{/other_user}", "gists_url": "https://api.github.com/users/aloctavodia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aloctavodia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aloctavodia/subscriptions", "organizations_url": "https://api.github.com/users/aloctavodia/orgs", "repos_url": "https://api.github.com/users/aloctavodia/repos", "events_url": "https://api.github.com/users/aloctavodia/events{/privacy}", "received_events_url": "https://api.github.com/users/aloctavodia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-12-11T02:21:48Z", "updated_at": "2021-10-04T07:06:07Z", "closed_at": "2021-10-04T07:06:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running sample_smc(parellel=True) on any models `AttributeError: 'ValidatingScratchpad' object has no attribute 'test_value' `is thrown\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport pymc3 as pm\r\nimport numpy as np\r\n\r\ndata = np.random.randn(500)\r\nwith pm.Model() as model:\r\n    mu = pm.Normal(\"mu\", mu=0, sigma=1)\r\n    sd = pm.HalfNormal(\"sd\", sigma=1)\r\n    obs = pm.Normal(\"obs\", mu=mu, sigma=sd, observed=data)\r\n\r\n    trace= pm.sample_smc(parallel=True)\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\n---------------------------------------------------------------------------\r\nRemoteTraceback                           Traceback (most recent call last)\r\nRemoteTraceback: \r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"/Users/jruby/anaconda3/envs/pymc3_10_test/lib/python3.8/multiprocessing/pool.py\", line 125, in worker\r\n    result = (True, func(*args, **kwds))\r\n  File \"/Users/jruby/anaconda3/envs/pymc3_10_test/lib/python3.8/multiprocessing/pool.py\", line 51, in starmapstar\r\n    return list(itertools.starmap(args[0], args[1]))\r\n  File \"/Users/jruby/anaconda3/envs/pymc3_10_test/lib/python3.8/site-packages/pymc3/smc/sample_smc.py\", line 262, in sample_smc_int\r\n    smc.setup_kernel()\r\n  File \"/Users/jruby/anaconda3/envs/pymc3_10_test/lib/python3.8/site-packages/pymc3/smc/smc.py\", line 129, in setup_kernel\r\n    self.prior_logp_func = logp_forw([self.model.varlogpt], self.variables, shared)\r\n  File \"/Users/jruby/anaconda3/envs/pymc3_10_test/lib/python3.8/site-packages/pymc3/smc/smc.py\", line 278, in logp_forw\r\n    out_list, inarray0 = join_nonshared_inputs(out_vars, vars, shared)\r\n  File \"/Users/jruby/anaconda3/envs/pymc3_10_test/lib/python3.8/site-packages/pymc3/theanof.py\", line 269, in join_nonshared_inputs\r\n    inarray.tag.test_value = joined.tag.test_value\r\nAttributeError: 'ValidatingScratchpad' object has no attribute 'test_value'\r\n\"\"\"\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-51-d9c09c21d627> in <module>\r\n      8     obs = pm.Normal(\"obs\", mu=mu, sigma=sd, observed=data)\r\n      9 \r\n---> 10     trace= pm.sample_smc(parallel=True)\r\n\r\n~/anaconda3/envs/pymc3_10_test/lib/python3.8/site-packages/pymc3/smc/sample_smc.py in sample_smc(draws, kernel, n_steps, start, tune_steps, p_acc_rate, threshold, save_sim_data, save_log_pseudolikelihood, model, random_seed, parallel, chains, cores)\r\n    189         loggers = [_log] + [None] * (chains - 1)\r\n    190         pool = mp.Pool(cores)\r\n--> 191         results = pool.starmap(\r\n    192             sample_smc_int, [(*params, random_seed[i], i, loggers[i]) for i in range(chains)]\r\n    193         )\r\n\r\n~/anaconda3/envs/pymc3_10_test/lib/python3.8/multiprocessing/pool.py in starmap(self, func, iterable, chunksize)\r\n    370         `func` and (a, b) becomes func(a, b).\r\n    371         '''\r\n--> 372         return self._map_async(func, iterable, starmapstar, chunksize).get()\r\n    373 \r\n    374     def starmap_async(self, func, iterable, chunksize=None, callback=None,\r\n\r\n~/anaconda3/envs/pymc3_10_test/lib/python3.8/multiprocessing/pool.py in get(self, timeout)\r\n    769             return self._value\r\n    770         else:\r\n--> 771             raise self._value\r\n    772 \r\n    773     def _set(self, i, obj):\r\n\r\nAttributeError: 'ValidatingScratchpad' object has no attribute 'test_value'\r\n```\r\n\r\nsample() and sample_smc(parallel=False) successfully execute with proper results. I have tried to messing with `theano.config.compute_test_value = X` according to [#562](https://github.com/pymc-devs/pymc3/issues/562) but have not found a workable solution. All other functionality I have tried has been succesful thus far including saving and loading Arviz inference objects and testing a number of Arviz plots (using the other sampling techniques). \r\n\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.10.0\r\n* Theano Version: (Theano-PYMC) 1.0.11\r\n* Python Version: 3.8\r\n* Operating system: OSX 10.14.6\r\n* How did you install PyMC3: pip within anaconda (conda installs were unsuccessful) \r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4324/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4324/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4299", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4299/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4299/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4299/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4299", "id": 757705435, "node_id": "MDU6SXNzdWU3NTc3MDU0MzU=", "number": 4299, "title": "test_beta_binomial fails on Windows", "user": {"login": "MarcoGorelli", "id": 33491632, "node_id": "MDQ6VXNlcjMzNDkxNjMy", "avatar_url": "https://avatars.githubusercontent.com/u/33491632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarcoGorelli", "html_url": "https://github.com/MarcoGorelli", "followers_url": "https://api.github.com/users/MarcoGorelli/followers", "following_url": "https://api.github.com/users/MarcoGorelli/following{/other_user}", "gists_url": "https://api.github.com/users/MarcoGorelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarcoGorelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarcoGorelli/subscriptions", "organizations_url": "https://api.github.com/users/MarcoGorelli/orgs", "repos_url": "https://api.github.com/users/MarcoGorelli/repos", "events_url": "https://api.github.com/users/MarcoGorelli/events{/privacy}", "received_events_url": "https://api.github.com/users/MarcoGorelli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-12-05T15:36:05Z", "updated_at": "2022-03-17T10:32:44Z", "closed_at": "2022-03-17T10:32:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Noticed in #4269\r\n\r\n```\r\n________________ TestScalarParameterSamples.test_beta_binomial ________________\r\n\r\nself = <pymc3.tests.test_distributions_random.TestScalarParameterSamples object at 0x00000148EA6B0FC8>\r\n\r\n    def test_beta_binomial(self):\r\n        pymc3_random_discrete(\r\n>           pm.BetaBinomial, {\"n\": Nat, \"alpha\": Rplus, \"beta\": Rplus}, ref_rand=self._beta_bin\r\n        )\r\n\r\npymc3\\tests\\test_distributions_random.py:718: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\npymc3\\tests\\test_distributions_random.py:100: in pymc3_random_discrete\r\n    e = ref_rand(size=size, **pt)\r\npymc3\\tests\\test_distributions_random.py:722: in _beta_bin\r\n    return st.binom.rvs(n, st.beta.rvs(a=alpha, b=beta, size=size))\r\nC:\\Miniconda\\envs\\pymc3-dev-py37\\lib\\site-packages\\scipy\\stats\\_distn_infrastructure.py:2997: in rvs\r\n    return super(rv_discrete, self).rvs(*args, **kwargs)\r\nC:\\Miniconda\\envs\\pymc3-dev-py37\\lib\\site-packages\\scipy\\stats\\_distn_infrastructure.py:1004: in rvs\r\n    vals = self._rvs(*args, size=size, random_state=random_state)\r\nC:\\Miniconda\\envs\\pymc3-dev-py37\\lib\\site-packages\\scipy\\stats\\_discrete_distns.py:41: in _rvs\r\n    return random_state.binomial(n, p, size)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n>   ???\r\nE   TypeError: Cannot cast array data from dtype('int64') to dtype('int32') according to the rule 'safe'\r\n\r\nmtrand.pyx:3360: TypeError\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4299/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4295", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4295/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4295/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4295/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4295", "id": 757499314, "node_id": "MDU6SXNzdWU3NTc0OTkzMTQ=", "number": 4295, "title": "NaNs in logcdf of ExGaussian.", "user": {"login": "yarlett", "id": 519606, "node_id": "MDQ6VXNlcjUxOTYwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/519606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarlett", "html_url": "https://github.com/yarlett", "followers_url": "https://api.github.com/users/yarlett/followers", "following_url": "https://api.github.com/users/yarlett/following{/other_user}", "gists_url": "https://api.github.com/users/yarlett/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarlett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarlett/subscriptions", "organizations_url": "https://api.github.com/users/yarlett/orgs", "repos_url": "https://api.github.com/users/yarlett/repos", "events_url": "https://api.github.com/users/yarlett/events{/privacy}", "received_events_url": "https://api.github.com/users/yarlett/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-12-05T01:04:03Z", "updated_at": "2021-01-05T17:33:41Z", "closed_at": "2021-01-05T17:33:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nI'm getting NaNs when I call ExGaussian.logcdf. I don't think this is arising as a result of invalid values of mu / nu / sigma and interestingly the values of x that cause the NaNs in logcdf appear to be clustered around a specific value suggesting some kind of boundary condition. See reproducible example below:\r\n```python\r\nimport numpy as np\r\nimport pymc3 as pm\r\nimport theano as th\r\n\r\nth.config.floatX = \"float32\"\r\n\r\nx = np.random.randn(10000).astype(th.config.floatX)\r\ny = pm.ExGaussian.dist(mu=0, nu=.1, sigma=.1).logcdf(x).eval()\r\nx[np.isnan(y)]\r\n\r\narray([-0.4472333 , -0.4515727 , -0.4532674 , -0.43305278, -0.4459583 ,\r\n       -0.4472994 , -0.4505409 , -0.4488517 , -0.43436724, -0.43309352,\r\n       -0.44969806, -0.453023  , -0.44659823, -0.4462295 , -0.44922173,\r\n       -0.43413943, -0.4502953 , -0.4507278 , -0.45263064, -0.4473039 ,\r\n       -0.4496712 , -0.45111936, -0.4341618 , -0.44784546, -0.4528737 ,\r\n       -0.4503683 , -0.4510499 , -0.45030335, -0.44865718, -0.4483132 ,\r\n       -0.45047495, -0.45401436, -0.4479592 , -0.44907624, -0.44798186,\r\n       -0.45309132, -0.45274436, -0.45385256, -0.4506684 , -0.44866312],\r\n      dtype=float32)\r\n```\r\nI'm not sure if this is my error in calling, is a result of the mathematical definition of logcdf implemented in PyMC3, or is an arithmetic precision error to do with numpy / theano.\r\n\r\nAlso, if I set theano.config.floatX = \"float64\" the values of x that cause NaNs all cluster around approx. -0.72 instead of approx. -0.44.\r\n\r\nAny help would be greatly appreciated. Thanks!\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.9.3\r\n* Theano Version: 1.0.5\r\n* Python Version: 3.7.9\r\n* Operating system: MacOS\r\n* How did you install PyMC3: pip", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4295/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4285", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4285/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4285/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4285/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4285", "id": 755503928, "node_id": "MDExOlB1bGxSZXF1ZXN0NTMxMjAyMDk4", "number": 4285, "title": "- Fix regression caused by #4211", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18", "html_url": "https://github.com/pymc-devs/pymc/milestone/18", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18/labels", "id": 6050207, "node_id": "MDk6TWlsZXN0b25lNjA1MDIwNw==", "number": 18, "title": "3.10", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 23, "state": "closed", "created_at": "2020-10-30T09:12:39Z", "updated_at": "2021-01-22T12:04:41Z", "due_on": null, "closed_at": "2021-01-22T12:04:41Z"}, "comments": 12, "created_at": "2020-12-02T18:19:42Z", "updated_at": "2020-12-05T15:17:32Z", "closed_at": "2020-12-05T08:27:49Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4285", "html_url": "https://github.com/pymc-devs/pymc/pull/4285", "diff_url": "https://github.com/pymc-devs/pymc/pull/4285.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4285.patch", "merged_at": "2020-12-05T08:27:49Z"}, "body": "PR #4211 caused a subtle regression. Default sampling no longer applies the `jitter+adapt_diag` because `start` is set to `model.test_point` by default, in order to test if the model likelihood is finite with `pm.util.check_start_vals`.\r\n\r\nhttps://github.com/pymc-devs/pymc3/blob/988ab9dd54e83dbd336fb4463aa16c8c8ce7ccfd/pymc3/sampling.py#L417\r\n\r\nThis conflicts with this line further down the road, where the undefined `start` values would be given those from the auto-assigned NUTS sampler\r\nhttps://github.com/pymc-devs/pymc3/blob/988ab9dd54e83dbd336fb4463aa16c8c8ce7ccfd/pymc3/sampling.py#L494\r\n\r\nI altered the code so that the `model.test_point` is still tested, without overriding the sample `start` variable.\r\n\r\nI found this issue when working in #4107 ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4285/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4276", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4276/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4276/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4276/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4276", "id": 752953813, "node_id": "MDU6SXNzdWU3NTI5NTM4MTM=", "number": 4276, "title": "Errors building PyMC3 documentation", "user": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 86794, "node_id": "MDU6TGFiZWw4Njc5NA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/docs", "name": "docs", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "MarcoGorelli", "id": 33491632, "node_id": "MDQ6VXNlcjMzNDkxNjMy", "avatar_url": "https://avatars.githubusercontent.com/u/33491632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarcoGorelli", "html_url": "https://github.com/MarcoGorelli", "followers_url": "https://api.github.com/users/MarcoGorelli/followers", "following_url": "https://api.github.com/users/MarcoGorelli/following{/other_user}", "gists_url": "https://api.github.com/users/MarcoGorelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarcoGorelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarcoGorelli/subscriptions", "organizations_url": "https://api.github.com/users/MarcoGorelli/orgs", "repos_url": "https://api.github.com/users/MarcoGorelli/repos", "events_url": "https://api.github.com/users/MarcoGorelli/events{/privacy}", "received_events_url": "https://api.github.com/users/MarcoGorelli/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "MarcoGorelli", "id": 33491632, "node_id": "MDQ6VXNlcjMzNDkxNjMy", "avatar_url": "https://avatars.githubusercontent.com/u/33491632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarcoGorelli", "html_url": "https://github.com/MarcoGorelli", "followers_url": "https://api.github.com/users/MarcoGorelli/followers", "following_url": "https://api.github.com/users/MarcoGorelli/following{/other_user}", "gists_url": "https://api.github.com/users/MarcoGorelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarcoGorelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarcoGorelli/subscriptions", "organizations_url": "https://api.github.com/users/MarcoGorelli/orgs", "repos_url": "https://api.github.com/users/MarcoGorelli/repos", "events_url": "https://api.github.com/users/MarcoGorelli/events{/privacy}", "received_events_url": "https://api.github.com/users/MarcoGorelli/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18", "html_url": "https://github.com/pymc-devs/pymc/milestone/18", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18/labels", "id": 6050207, "node_id": "MDk6TWlsZXN0b25lNjA1MDIwNw==", "number": 18, "title": "3.10", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 23, "state": "closed", "created_at": "2020-10-30T09:12:39Z", "updated_at": "2021-01-22T12:04:41Z", "due_on": null, "closed_at": "2021-01-22T12:04:41Z"}, "comments": 6, "created_at": "2020-11-29T16:31:38Z", "updated_at": "2020-12-06T13:43:08Z", "closed_at": "2020-12-06T13:43:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n``` bash\r\ncd docs/source\r\nmake clean\r\nmake html\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```\r\nWARNING: autodoc: failed to import function 't_stick_breaking' from module 'pymc3.distributions.transforms'; the following exception was raised:\r\nTraceback (most recent call last):\r\n  File \"/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/sphinx/util/inspect.py\", line 334, in safe_getattr\r\n    return getattr(obj, name, *defargs)\r\nAttributeError: module 'pymc3.distributions.transforms' has no attribute 't_stick_breaking'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/sphinx/ext/autodoc/importer.py\", line 106, in import_object\r\n    obj = attrgetter(obj, mangled_name)\r\n  File \"/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/sphinx/ext/autodoc/__init__.py\", line 292, in get_attr\r\n    return autodoc_attrgetter(self.env.app, obj, name, *defargs)\r\n  File \"/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/sphinx/ext/autodoc/__init__.py\", line 2242, in autodoc_attrgetter\r\n    return safe_getattr(obj, name, *defargs)\r\n  File \"/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/sphinx/util/inspect.py\", line 350, in safe_getattr\r\n    raise AttributeError(name) from exc\r\nAttributeError: t_stick_breaking\r\n\r\n/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/pymc3/distributions/transforms.py:docstring of pymc3.distributions.transforms.StickBreaking:4: WARNING: Unexpected indentation.\r\n/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/pymc3/sampling.py:docstring of pymc3.sampling.init_nuts:31: WARNING: Inline literal start-string without end-string.\r\n/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/pymc3/sampling.py:docstring of pymc3.sampling.sample:127: WARNING: Inline literal start-string without end-string.\r\n/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/pymc3/sampling.py:docstring of pymc3.sampling.sample:155: WARNING: Inline literal start-string without end-string.\r\n/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/pymc3/sampling.py:docstring of pymc3.sampling.sample:149: WARNING: Unexpected indentation.\r\n/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/pymc3/sampling.py:docstring of pymc3.sampling.sample:161: WARNING: Unexpected indentation.\r\n/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/pymc3/backends/base.py:docstring of pymc3.backends.base.MultiTrace:56: WARNING: Block quote ends without a blank line; unexpected unindent.\r\n\r\nExtension error:\r\nHandler <function mangle_signature at 0x13d3d4200> for event 'autodoc-process-signature' threw an exception (exception: The section Notes appears twice in the docstring of Elemwise{clip,no_inplace} in None.)\r\n```\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 2669afdce7c1b6aa52e8a7e66ff41ed865ef644d (`update-theano-doc-pointer`)\r\n* Theano Version: Theano-PyMC==1.0.11\r\n* Python Version: 3.7.7\r\n* Operating system: MacOS 10.15.7\r\n* How did you install PyMC3: `pip install -e .`\r\n* Sphinx version: sphinx-build 3.3.1\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4276/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4274", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4274/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4274/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4274/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4274", "id": 752946577, "node_id": "MDU6SXNzdWU3NTI5NDY1Nzc=", "number": 4274, "title": "Type errors in float32 tests on MacOS", "user": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}, {"id": 2543051866, "node_id": "MDU6TGFiZWwyNTQzMDUxODY2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/macOS", "name": "macOS", "color": "f9d0c4", "default": false, "description": "macOS related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-11-29T15:56:45Z", "updated_at": "2023-04-18T12:40:16Z", "closed_at": "2023-04-18T12:40:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nTest failures on MacOS on `float32` type tests.  These may be issues in Theano compilation.\r\n\r\nOriginally reported in #3811\r\n\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n``` bash\r\npytest pymc3/tests/test_types.py::TestType::test_float32\r\n```\r\n\r\nand \r\n\r\n``` bash\r\npytest pymc3/tests/test_types.py::TestType::test_float32_MLDA\r\n```\r\n\r\n## Full backtraces\r\n\r\n`test_float32`:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/theano/compile/function/types.py\", line 974, in __call__\r\n    if output_subset is None\r\nTypeError: expected type_num 11 (NPY_FLOAT32) got 12\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/rpg/src/pymc3/pymc3/parallel_sampling.py\", line 135, in run\r\n    self._start_loop()\r\n  File \"/Users/rpg/src/pymc3/pymc3/parallel_sampling.py\", line 189, in _start_loop\r\n    point, stats = self._compute_point()\r\n  File \"/Users/rpg/src/pymc3/pymc3/parallel_sampling.py\", line 214, in _compute_point\r\n    point, stats = self._step_method.step(self._point)\r\n  File \"/Users/rpg/src/pymc3/pymc3/step_methods/arraystep.py\", line 190, in step\r\n    apoint, stats = self.astep(self.bij.map(point))\r\n  File \"/Users/rpg/src/pymc3/pymc3/step_methods/metropolis.py\", line 216, in astep\r\n    accept = self.delta_logp(q, q0)\r\n  File \"/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/theano/compile/function/types.py\", line 989, in __call__\r\n    storage_map=getattr(self.fn, \"storage_map\", None),\r\n  File \"/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/theano/gof/link.py\", line 343, in raise_with_op\r\n    raise exc_value.with_traceback(exc_trace)\r\n  File \"/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/theano/compile/function/types.py\", line 974, in __call__\r\n    if output_subset is None\r\nTypeError: expected type_num 11 (NPY_FLOAT32) got 12\r\nApply node that caused the error: Elemwise{Composite{(i0 * (i1 + (-sqr(i2))))}}(TensorConstant{0.5}, TensorConstant{-1.8378772}, InplaceDimShuffle{}.0)\r\nToposort index: 11\r\nInputs types: [TensorType(float32, scalar), TensorType(float32, scalar), TensorType(float32, scalar)]\r\nInputs shapes: [(), (), ()]\r\nInputs strides: [(), (), ()]\r\nInputs values: [array(0.5, dtype=float32), array(-1.8378772, dtype=float32), array(2.11641728)]\r\nOutputs clients: [[MakeVector{dtype='float32'}(__logp_x, __logp_obs)]]\r\n\r\nHINT: Re-running with most Theano optimization disabled could give you a back-trace of when this node was created. This can be done with by setting the Theano flag 'optimizer=fast_compile'. If that does not work, Theano optimizations can be disabled with 'optimizer=None'.\r\nHINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.\r\n\"\"\"\r\n\r\nThe above exception was the direct cause of the following exception:\r\npymc3.parallel_sampling.RemoteTraceback:\r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/theano/compile/function/types.py\", line 974, in __call__\r\n    if output_subset is None\r\nTypeError: expected type_num 11 (NPY_FLOAT32) got 12\r\n```\r\n\r\n`test_float32_MLDA`:\r\n\r\n```\r\npymc3.parallel_sampling.RemoteTraceback:\r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/theano/compile/function/types.py\", line 974, in __call__\r\n    if output_subset is None\r\nTypeError: expected type_num 11 (NPY_FLOAT32) got 12\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/rpg/src/pymc3/pymc3/parallel_sampling.py\", line 135, in run\r\n    self._start_loop()\r\n  File \"/Users/rpg/src/pymc3/pymc3/parallel_sampling.py\", line 189, in _start_loop\r\n    point, stats = self._compute_point()\r\n  File \"/Users/rpg/src/pymc3/pymc3/parallel_sampling.py\", line 214, in _compute_point\r\n    point, stats = self._step_method.step(self._point)\r\n  File \"/Users/rpg/src/pymc3/pymc3/step_methods/arraystep.py\", line 190, in step\r\n    apoint, stats = self.astep(self.bij.map(point))\r\n  File \"/Users/rpg/src/pymc3/pymc3/step_methods/mlda.py\", line 733, in astep\r\n    q = self.bij.map(self.proposal_dist(q0_dict))\r\n  File \"/Users/rpg/src/pymc3/pymc3/step_methods/mlda.py\", line 1104, in __call__\r\n    tune=self.subsampling_rate,\r\n  File \"/Users/rpg/src/pymc3/pymc3/step_methods/mlda.py\", line 1043, in subsample\r\n    for it, (trace, _) in enumerate(sampling):\r\n  File \"/Users/rpg/src/pymc3/pymc3/sampling.py\", line 1007, in _iter_sample\r\n    point, stats = step.step(point)\r\n  File \"/Users/rpg/src/pymc3/pymc3/step_methods/arraystep.py\", line 190, in step\r\n    apoint, stats = self.astep(self.bij.map(point))\r\n  File \"/Users/rpg/src/pymc3/pymc3/step_methods/mlda.py\", line 153, in astep\r\n    q_new, stats = super().astep(q0)\r\n  File \"/Users/rpg/src/pymc3/pymc3/step_methods/metropolis.py\", line 836, in astep\r\n    accept = self.delta_logp(q, q0)\r\n  File \"/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/theano/compile/function/types.py\", line 989, in __call__\r\n    storage_map=getattr(self.fn, \"storage_map\", None),\r\n  File \"/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/theano/gof/link.py\", line 343, in raise_with_op\r\n    raise exc_value.with_traceback(exc_trace)\r\n  File \"/Users/rpg/.virtualenvs/pymc3/lib/python3.7/site-packages/theano/compile/function/types.py\", line 974, in __call__\r\n    if output_subset is None\r\nTypeError: expected type_num 11 (NPY_FLOAT32) got 12\r\nApply node that caused the error: Elemwise{Composite{(i0 * (i1 + (-sqr(i2))))}}(TensorConstant{0.5}, TensorConstant{-1.8378772}, InplaceDimShuffle{}.0)\r\nToposort index: 11\r\nInputs types: [TensorType(float32, scalar), TensorType(float32, scalar), TensorType(float32, scalar)]\r\nInputs shapes: [(), (), ()]\r\nInputs strides: [(), (), ()]\r\nInputs values: [array(0.5, dtype=float32), array(-1.8378772, dtype=float32), array(0.99960138)]\r\nOutputs clients: [[MakeVector{dtype='float32'}(__logp_x, __logp_obs)]]\r\n```\r\n\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: edbafaad72edfb04901417e8dd477471c516182d\r\n* Theano Version: theano-pymc==1.0.11 on  and python 3.7.7\r\n* Python Version: 3.7.7\r\n* Operating system: MacOS 10.15.7\r\n* How did you install PyMC3: `pip install -e .`\r\n\r\nMore information to follow...\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4274/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4273", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4273/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4273/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4273/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4273", "id": 752944541, "node_id": "MDU6SXNzdWU3NTI5NDQ1NDE=", "number": 4273, "title": "Recursion error pickling step functions", "user": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1008939096, "node_id": "MDU6TGFiZWwxMDA4OTM5MDk2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/winOS", "name": "winOS", "color": "f9d0c4", "default": false, "description": "windows OS related"}], "state": "closed", "locked": false, "assignee": {"login": "Spaak", "id": 3042751, "node_id": "MDQ6VXNlcjMwNDI3NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3042751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Spaak", "html_url": "https://github.com/Spaak", "followers_url": "https://api.github.com/users/Spaak/followers", "following_url": "https://api.github.com/users/Spaak/following{/other_user}", "gists_url": "https://api.github.com/users/Spaak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Spaak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Spaak/subscriptions", "organizations_url": "https://api.github.com/users/Spaak/orgs", "repos_url": "https://api.github.com/users/Spaak/repos", "events_url": "https://api.github.com/users/Spaak/events{/privacy}", "received_events_url": "https://api.github.com/users/Spaak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Spaak", "id": 3042751, "node_id": "MDQ6VXNlcjMwNDI3NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3042751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Spaak", "html_url": "https://github.com/Spaak", "followers_url": "https://api.github.com/users/Spaak/followers", "following_url": "https://api.github.com/users/Spaak/following{/other_user}", "gists_url": "https://api.github.com/users/Spaak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Spaak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Spaak/subscriptions", "organizations_url": "https://api.github.com/users/Spaak/orgs", "repos_url": "https://api.github.com/users/Spaak/repos", "events_url": "https://api.github.com/users/Spaak/events{/privacy}", "received_events_url": "https://api.github.com/users/Spaak/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18", "html_url": "https://github.com/pymc-devs/pymc/milestone/18", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18/labels", "id": 6050207, "node_id": "MDk6TWlsZXN0b25lNjA1MDIwNw==", "number": 18, "title": "3.10", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 23, "state": "closed", "created_at": "2020-10-30T09:12:39Z", "updated_at": "2021-01-22T12:04:41Z", "due_on": null, "closed_at": "2021-01-22T12:04:41Z"}, "comments": 7, "created_at": "2020-11-29T15:46:19Z", "updated_at": "2020-12-05T11:35:37Z", "closed_at": "2020-12-05T11:35:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#  Description of your problem\r\n\r\nFirst reported on #3811 \r\n\r\nWhen testing on Mac (#3811) or Windows (#4269), `RecursionError: maximum recursion depth exceeded in comparison` errors in `TestDensityDist` in `parallel_sampling.py` when pickling `step_method`:\r\n\r\n``` python\r\npymc3/parallel_sampling.py:421: in __init__\r\n    step_method_pickled = pickle.dumps(step_method, protocol=-1)\r\n```\r\n\r\nChecking with pdb, we try to save the `logp` of a `DensityDist`. This leads to needing to pickle `Normal.logp` which leads to needing to pickle `pymc3.distributions.continuous.Normal` and I fear to trying to pickle all of pymc3.\r\n\r\nIt is odd that this shows up on Mac and Windows, but not on our Linux tests.\r\n\r\n\r\n**Please provide the full traceback.**\r\n\r\nFrom @MarcoGorelli :\r\n```\r\n2020-11-29T10:28:07.9704940Z =================================== FAILURES ===================================\r\n2020-11-29T10:28:07.9705530Z _________ TestDensityDist.test_density_dist_with_random_sampleable[()] _________\r\n2020-11-29T10:28:07.9705980Z \r\n2020-11-29T10:28:07.9706630Z self = <pymc3.tests.test_distributions_random.TestDensityDist object at 0x7fe5ab3d6358>\r\n2020-11-29T10:28:07.9707300Z shape = ()\r\n2020-11-29T10:28:07.9708190Z \r\n2020-11-29T10:28:07.9708650Z     @pytest.mark.parametrize(\"shape\", [(), (3,), (3, 2)], ids=str)\r\n2020-11-29T10:28:07.9709320Z     def test_density_dist_with_random_sampleable(self, shape):\r\n2020-11-29T10:28:07.9709830Z         with pm.Model() as model:\r\n2020-11-29T10:28:07.9710220Z             mu = pm.Normal(\"mu\", 0, 1)\r\n2020-11-29T10:28:07.9710690Z             normal_dist = pm.Normal.dist(mu, 1, shape=shape)\r\n2020-11-29T10:28:07.9711190Z             obs = pm.DensityDist(\r\n2020-11-29T10:28:07.9711580Z                 \"density_dist\",\r\n2020-11-29T10:28:07.9711960Z                 normal_dist.logp,\r\n2020-11-29T10:28:07.9712420Z                 observed=np.random.randn(100, *shape),\r\n2020-11-29T10:28:07.9712860Z                 shape=shape,\r\n2020-11-29T10:28:07.9713260Z                 random=normal_dist.random,\r\n2020-11-29T10:28:07.9713610Z             )\r\n2020-11-29T10:28:07.9714330Z >           trace = pm.sample(100)\r\n2020-11-29T10:28:07.9714630Z \r\n2020-11-29T10:28:07.9722330Z pymc3/tests/test_distributions_random.py:1151: \r\n2020-11-29T10:28:07.9722810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n2020-11-29T10:28:07.9723220Z pymc3/sampling.py:553: in sample\r\n2020-11-29T10:28:07.9723730Z     trace = _mp_sample(**sample_args, **parallel_args)\r\n2020-11-29T10:28:07.9724240Z pymc3/sampling.py:1469: in _mp_sample\r\n2020-11-29T10:28:07.9724710Z     pickle_backend=pickle_backend,\r\n2020-11-29T10:28:07.9725200Z pymc3/parallel_sampling.py:421: in __init__\r\n2020-11-29T10:28:07.9726340Z     step_method_pickled = pickle.dumps(step_method, protocol=-1)\r\n2020-11-29T10:28:07.9727030Z pymc3/distributions/distribution.py:516: in __getstate__\r\n2020-11-29T10:28:07.9727600Z     logp = dill.dumps(self.logp)\r\n2020-11-29T10:28:07.9728630Z /usr/local/miniconda/envs/testenv/lib/python3.6/site-packages/dill/_dill.py:273: in dumps\r\n2020-11-29T10:28:07.9729410Z     dump(obj, file, protocol, byref, fmode, recurse, **kwds)#, strictio)\r\n2020-11-29T10:28:07.9730540Z /usr/local/miniconda/envs/testenv/lib/python3.6/site-packages/dill/_dill.py:267: in dump\r\n2020-11-29T10:28:07.9731240Z     Pickler(file, protocol, **_kwds).dump(obj)\r\n2020-11-29T10:28:07.9732280Z /usr/local/miniconda/envs/testenv/lib/python3.6/site-packages/dill/_dill.py:454: in dump\r\n2020-11-29T10:28:07.9732970Z     StockPickler.dump(self, obj)\r\n2020-11-29T10:28:07.9733580Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:409: in dump\r\n2020-11-29T10:28:07.9734090Z     self.save(obj)\r\n2020-11-29T10:28:07.9734610Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:476: in save\r\n2020-11-29T10:28:07.9735240Z     f(self, obj) # Call unbound method with explicit self\r\n2020-11-29T10:28:07.9736430Z /usr/local/miniconda/envs/testenv/lib/python3.6/site-packages/dill/_dill.py:1127: in save_instancemethod0\r\n2020-11-29T10:28:07.9737270Z     pickler.save_reduce(MethodType, (obj.__func__, obj.__self__), obj=obj)\r\n2020-11-29T10:28:07.9738000Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:610: in save_reduce\r\n2020-11-29T10:28:07.9738520Z     save(args)\r\n2020-11-29T10:28:07.9739030Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:476: in save\r\n2020-11-29T10:28:07.9739660Z     f(self, obj) # Call unbound method with explicit self\r\n2020-11-29T10:28:07.9740310Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:736: in save_tuple\r\n2020-11-29T10:28:07.9740850Z     save(element)\r\n2020-11-29T10:28:07.9741370Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:521: in save\r\n2020-11-29T10:28:07.9741930Z     self.save_reduce(obj=obj, *rv)\r\n2020-11-29T10:28:07.9742520Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:634: in save_reduce\r\n2020-11-29T10:28:07.9743050Z     save(state)\r\n2020-11-29T10:28:07.9743550Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:476: in save\r\n2020-11-29T10:28:07.9744170Z     f(self, obj) # Call unbound method with explicit self\r\n2020-11-29T10:28:07.9745320Z /usr/local/miniconda/envs/testenv/lib/python3.6/site-packages/dill/_dill.py:941: in save_module_dict\r\n2020-11-29T10:28:07.9746070Z     StockPickler.save_dict(pickler, obj)\r\n2020-11-29T10:28:07.9747000Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:821: in save_dict\r\n2020-11-29T10:28:07.9747600Z     self._batch_setitems(obj.items())\r\n2020-11-29T10:28:07.9748210Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:847: in _batch_setitems\r\n2020-11-29T10:28:07.9748730Z     save(v)\r\n2020-11-29T10:28:07.9749230Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:521: in save\r\n2020-11-29T10:28:07.9749780Z     self.save_reduce(obj=obj, *rv)\r\n2020-11-29T10:28:07.9750500Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:634: in save_reduce\r\n2020-11-29T10:28:07.9751030Z     save(state)\r\n2020-11-29T10:28:07.9751540Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:476: in save\r\n2020-11-29T10:28:07.9752160Z     f(self, obj) # Call unbound method with explicit self\r\n2020-11-29T10:28:07.9753540Z /usr/local/miniconda/envs/testenv/lib/python3.6/site-packages/dill/_dill.py:941: in save_module_dict\r\n2020-11-29T10:28:07.9754320Z     StockPickler.save_dict(pickler, obj)\r\n2020-11-29T10:28:07.9754980Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:821: in save_dict\r\n2020-11-29T10:28:07.9755560Z     self._batch_setitems(obj.items())\r\n2020-11-29T10:28:07.9756180Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:847: in _batch_setitems\r\n2020-11-29T10:28:07.9756700Z     save(v)\r\n2020-11-29T10:28:07.9757190Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:521: in save\r\n2020-11-29T10:28:07.9757750Z     self.save_reduce(obj=obj, *rv)\r\n2020-11-29T10:28:07.9758340Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:634: in save_reduce\r\n2020-11-29T10:28:07.9758860Z     save(state)\r\n2020-11-29T10:28:07.9759370Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:476: in save\r\n2020-11-29T10:28:07.9759990Z     f(self, obj) # Call unbound method with explicit self\r\n2020-11-29T10:28:07.9761160Z /usr/local/miniconda/envs/testenv/lib/python3.6/site-packages/dill/_dill.py:941: in save_module_dict\r\n2020-11-29T10:28:07.9761910Z     StockPickler.save_dict(pickler, obj)\r\n2020-11-29T10:28:07.9762560Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:821: in save_dict\r\n2020-11-29T10:28:07.9763150Z     self._batch_setitems(obj.items())\r\n2020-11-29T10:28:07.9763760Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:847: in _batch_setitems\r\n2020-11-29T10:28:07.9764290Z     save(v)\r\n2020-11-29T10:28:07.9764770Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:521: in save\r\n2020-11-29T10:28:07.9765340Z     self.save_reduce(obj=obj, *rv)\r\n2020-11-29T10:28:07.9765920Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:631: in save_reduce\r\n2020-11-29T10:28:07.9766520Z     self._batch_setitems(dictitems)\r\n2020-11-29T10:28:07.9767140Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:847: in _batch_setitems\r\n2020-11-29T10:28:07.9767660Z     save(v)\r\n2020-11-29T10:28:07.9768160Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:521: in save\r\n2020-11-29T10:28:07.9768720Z     self.save_reduce(obj=obj, *rv)\r\n2020-11-29T10:28:07.9769310Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:634: in save_reduce\r\n2020-11-29T10:28:07.9769830Z     save(state)\r\n2020-11-29T10:28:07.9770340Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:476: in save\r\n2020-11-29T10:28:07.9771060Z     f(self, obj) # Call unbound method with explicit self\r\n2020-11-29T10:28:07.9772240Z /usr/local/miniconda/envs/testenv/lib/python3.6/site-packages/dill/_dill.py:941: in save_module_dict\r\n2020-11-29T10:28:07.9772980Z     StockPickler.save_dict(pickler, obj)\r\n2020-11-29T10:28:07.9773620Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:821: in save_dict\r\n2020-11-29T10:28:07.9774210Z     self._batch_setitems(obj.items())\r\n2020-11-29T10:28:07.9774830Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:847: in _batch_setitems\r\n2020-11-29T10:28:07.9775350Z     save(v)\r\n2020-11-29T10:28:07.9775850Z /usr/local/miniconda/envs/testenv/lib/python3.6/pickle.py:496: in save\r\n2020-11-29T10:28:07.9776400Z     rv = reduce(self.proto)\r\n2020-11-29T10:28:07.9776930Z pymc3/distributions/distribution.py:516: in __getstate__\r\n2020-11-29T10:28:07.9777740Z     logp = dill.dumps(self.logp)\r\n2020-11-29T10:28:07.9778290Z E   RecursionError: maximum recursion depth exceeded\r\n2020-11-29T10:28:07.9778900Z !!! Recursion detected (same locals & position)\r\n2020-11-29T10:28:07.9779950Z ----------------------------- Captured stderr call -----------------------------\r\n2020-11-29T10:28:07.9780510Z Only 100 samples in chain.\r\n2020-11-29T10:28:07.9781280Z Auto-assigning NUTS sampler...\r\n2020-11-29T10:28:07.9781840Z Initializing NUTS using jitter+adapt_diag...\r\n2020-11-29T10:28:07.9782470Z Multiprocess sampling (2 chains in 2 jobs)\r\n2020-11-29T10:28:07.9782880Z NUTS: [mu]\r\n2020-11-29T10:28:07.9783760Z ------------------------------ Captured log call -------------------------------\r\n2020-11-29T10:28:07.9784430Z WARNING  pymc3:sampling.py:480 Only 100 samples in chain.\r\n2020-11-29T10:28:07.9785800Z INFO     pymc3:sampling.py:490 Auto-assigning NUTS sampler...\r\n2020-11-29T10:28:07.9786590Z INFO     pymc3:sampling.py:2034 Initializing NUTS using jitter+adapt_diag...\r\n2020-11-29T10:28:07.9787330Z INFO     pymc3:sampling.py:550 Multiprocess sampling (2 chains in 2 jobs)\r\n2020-11-29T10:28:07.9787920Z INFO     pymc3:sampling.py:236 NUTS: [mu]\r\n\r\n```\r\n\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: edbafaad72edfb04901417e8dd477471c516182d\r\n* Theano Version: theano-pymc==1.0.11\r\n* Python Version: 3.7.7\r\n* Operating system: MacOS 10.15.7\r\n* How did you install PyMC3:  pip\r\n\r\n\r\n/cc @michaelosthege @MarcoGorelli ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4273/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4269", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4269/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4269/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4269/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4269", "id": 752671653, "node_id": "MDExOlB1bGxSZXF1ZXN0NTI4OTQ0NzUz", "number": 4269, "title": "test on windows and mac", "user": {"login": "MarcoGorelli", "id": 33491632, "node_id": "MDQ6VXNlcjMzNDkxNjMy", "avatar_url": "https://avatars.githubusercontent.com/u/33491632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarcoGorelli", "html_url": "https://github.com/MarcoGorelli", "followers_url": "https://api.github.com/users/MarcoGorelli/followers", "following_url": "https://api.github.com/users/MarcoGorelli/following{/other_user}", "gists_url": "https://api.github.com/users/MarcoGorelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarcoGorelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarcoGorelli/subscriptions", "organizations_url": "https://api.github.com/users/MarcoGorelli/orgs", "repos_url": "https://api.github.com/users/MarcoGorelli/repos", "events_url": "https://api.github.com/users/MarcoGorelli/events{/privacy}", "received_events_url": "https://api.github.com/users/MarcoGorelli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}, {"id": 1008939096, "node_id": "MDU6TGFiZWwxMDA4OTM5MDk2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/winOS", "name": "winOS", "color": "f9d0c4", "default": false, "description": "windows OS related"}, {"id": 2543051866, "node_id": "MDU6TGFiZWwyNTQzMDUxODY2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/macOS", "name": "macOS", "color": "f9d0c4", "default": false, "description": "macOS related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18", "html_url": "https://github.com/pymc-devs/pymc/milestone/18", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18/labels", "id": 6050207, "node_id": "MDk6TWlsZXN0b25lNjA1MDIwNw==", "number": 18, "title": "3.10", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 23, "state": "closed", "created_at": "2020-10-30T09:12:39Z", "updated_at": "2021-01-22T12:04:41Z", "due_on": null, "closed_at": "2021-01-22T12:04:41Z"}, "comments": 6, "created_at": "2020-11-28T12:57:25Z", "updated_at": "2020-12-06T14:49:31Z", "closed_at": "2020-12-06T13:41:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4269", "html_url": "https://github.com/pymc-devs/pymc/pull/4269", "diff_url": "https://github.com/pymc-devs/pymc/pull/4269.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4269.patch", "merged_at": "2020-12-06T13:41:46Z"}, "body": "Let's see what happens\r\n\r\nStackoverflow error on Windows :thinking: ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4269/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4267", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4267/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4267/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4267/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4267", "id": 752280319, "node_id": "MDU6SXNzdWU3NTIyODAzMTk=", "number": 4267, "title": "pymc3/tests/test_step.py::TestMLDA::test_acceptance_rate_against_coarseness fails for unknown reason", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}, {"id": 2107010938, "node_id": "MDU6TGFiZWwyMTA3MDEwOTM4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/help%20wanted", "name": "help wanted", "color": "b58f13", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-11-27T14:11:01Z", "updated_at": "2022-07-24T16:01:48Z", "closed_at": "2022-07-24T16:01:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nThe CI of #4261 failed because of a test failure ([see the log](pymc3/tests/test_step.py::TestMLDA::test_acceptance_rate_against_coarseness)) that is probably unrelated to the changes from that PR.\r\n\r\nThe PR was already merged, but the test remains suspicious. Is it maybe not deterministic?\r\n\r\n@gmingas can you take a look or delegate with someone else familiar with the MLDA test suite?\r\n\r\n## Versions and main components\r\n* PyMC3 Version: master\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4267/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4266", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4266/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4266/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4266/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4266", "id": 752095214, "node_id": "MDU6SXNzdWU3NTIwOTUyMTQ=", "number": 4266, "title": "pymc3/tests/test_examples.py::TestDisasterModel::test_disaster_model is flaky", "user": {"login": "MarcoGorelli", "id": 33491632, "node_id": "MDQ6VXNlcjMzNDkxNjMy", "avatar_url": "https://avatars.githubusercontent.com/u/33491632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarcoGorelli", "html_url": "https://github.com/MarcoGorelli", "followers_url": "https://api.github.com/users/MarcoGorelli/followers", "following_url": "https://api.github.com/users/MarcoGorelli/following{/other_user}", "gists_url": "https://api.github.com/users/MarcoGorelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarcoGorelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarcoGorelli/subscriptions", "organizations_url": "https://api.github.com/users/MarcoGorelli/orgs", "repos_url": "https://api.github.com/users/MarcoGorelli/repos", "events_url": "https://api.github.com/users/MarcoGorelli/events{/privacy}", "received_events_url": "https://api.github.com/users/MarcoGorelli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}, {"id": 2107010938, "node_id": "MDU6TGFiZWwyMTA3MDEwOTM4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/help%20wanted", "name": "help wanted", "color": "b58f13", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-11-27T09:06:31Z", "updated_at": "2020-11-30T18:02:26Z", "closed_at": "2020-11-30T18:02:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Have seen this fail sporadically in a couple of PRs", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4266/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4260", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4260/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4260/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4260/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4260", "id": 751625318, "node_id": "MDExOlB1bGxSZXF1ZXN0NTI4MTA0Mzky", "number": 4260, "title": "Add str/repr formatting options and change defaults accordingly", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 818212053, "node_id": "MDU6TGFiZWw4MTgyMTIwNTM=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/request%20discussion", "name": "request discussion", "color": "dbef5b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18", "html_url": "https://github.com/pymc-devs/pymc/milestone/18", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18/labels", "id": 6050207, "node_id": "MDk6TWlsZXN0b25lNjA1MDIwNw==", "number": 18, "title": "3.10", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 23, "state": "closed", "created_at": "2020-10-30T09:12:39Z", "updated_at": "2021-01-22T12:04:41Z", "due_on": null, "closed_at": "2021-01-22T12:04:41Z"}, "comments": 6, "created_at": "2020-11-26T14:16:19Z", "updated_at": "2020-11-27T10:24:47Z", "closed_at": "2020-11-27T08:51:40Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4260", "html_url": "https://github.com/pymc-devs/pymc/pull/4260", "diff_url": "https://github.com/pymc-devs/pymc/pull/4260.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4260.patch", "merged_at": "2020-11-27T08:51:40Z"}, "body": "+ new options \"latex_with_params\" and \"plain_with_params\" replace the current default behavior of including input parameters (going back to default behaviour of the 3.9.3 release)\r\n+ `__latex__` and `_repr_latex` default to \"latex_with_params\"\r\n+ `__str__` and `_str_repr` default to \"plain\"\r\n+ `__latex__` repr __of a model__ defaults to \"latex\" (without params)\r\n+ new formatting kwarg for `model_to_graphviz` enables switching between \"plain\" (default) and \"plain_with_params\"\r\n\r\nDepending on what your PR does, here are a few things you might want to address in the description:\r\n+ [x] ~~what are the (breaking) changes that this PR makes?~~ - None\r\n+ [x] important background, or details about the implementation\r\n+ [x] are the changes\u2014especially new features\u2014covered by tests and docstrings?\r\n+ [x] ~~consider adding/updating relevant example notebooks~~\r\n+ [x] ~~right before it's ready to merge, mention the PR in the RELEASE-NOTES.md~~\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4260/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4259", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4259/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4259/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4259/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4259", "id": 751609138, "node_id": "MDU6SXNzdWU3NTE2MDkxMzg=", "number": 4259, "title": "Nodes in model graph are massive because of RV inputs", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18", "html_url": "https://github.com/pymc-devs/pymc/milestone/18", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18/labels", "id": 6050207, "node_id": "MDk6TWlsZXN0b25lNjA1MDIwNw==", "number": 18, "title": "3.10", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 23, "state": "closed", "created_at": "2020-10-30T09:12:39Z", "updated_at": "2021-01-22T12:04:41Z", "due_on": null, "closed_at": "2021-01-22T12:04:41Z"}, "comments": 1, "created_at": "2020-11-26T13:53:30Z", "updated_at": "2020-11-27T10:30:33Z", "closed_at": "2020-11-27T10:30:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nRecent changes to default `_str_repr` changed the default behaviour such that distribution/RV inputs (parameters) are rendered by default. This causes nodes in the `model_to_graphviz` graph to become so big that the graph becomes massively wide.\r\n\r\n![grafik](https://user-images.githubusercontent.com/5894642/100358902-1d4dd600-2ff7-11eb-913f-e20d6463de1a.png)\r\n\r\n## Versions and main components\r\n* PyMC3 Version: latest\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4259/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4253", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4253/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4253/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4253/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4253", "id": 750207995, "node_id": "MDU6SXNzdWU3NTAyMDc5OTU=", "number": 4253, "title": "Unable to draw prior samples from model", "user": {"login": "mschmidt87", "id": 6512628, "node_id": "MDQ6VXNlcjY1MTI2Mjg=", "avatar_url": "https://avatars.githubusercontent.com/u/6512628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mschmidt87", "html_url": "https://github.com/mschmidt87", "followers_url": "https://api.github.com/users/mschmidt87/followers", "following_url": "https://api.github.com/users/mschmidt87/following{/other_user}", "gists_url": "https://api.github.com/users/mschmidt87/gists{/gist_id}", "starred_url": "https://api.github.com/users/mschmidt87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mschmidt87/subscriptions", "organizations_url": "https://api.github.com/users/mschmidt87/orgs", "repos_url": "https://api.github.com/users/mschmidt87/repos", "events_url": "https://api.github.com/users/mschmidt87/events{/privacy}", "received_events_url": "https://api.github.com/users/mschmidt87/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/20", "html_url": "https://github.com/pymc-devs/pymc/milestone/20", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/20/labels", "id": 6211045, "node_id": "MDk6TWlsZXN0b25lNjIxMTA0NQ==", "number": 20, "title": "3.11.0", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 25, "state": "closed", "created_at": "2020-12-14T15:20:06Z", "updated_at": "2021-01-22T12:04:10Z", "due_on": "2021-01-21T08:00:00Z", "closed_at": "2021-01-22T12:04:10Z"}, "comments": 5, "created_at": "2020-11-25T00:50:18Z", "updated_at": "2021-01-08T15:52:46Z", "closed_at": "2021-01-08T15:52:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you have questions about a specific use case, or you are not sure whether this is a bug or not, please post it to our discourse channel: https://discourse.pymc.io  \r\n\r\n## Description of your problem\r\nI have problems with drawing prior samples from my model. The model I am using is the linear trend component of a time series model (Facebook\u2019s prophet model). I am using the implementation in PyMC3 of the [timeseers](https://github.com/MBrouns/timeseers) package authored by @MBrouns. I\u2019d like to draw prior sample from the model, but I keep running into some Theano error that I can\u2019t figure out.\r\n\r\n\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\nHere is a minimal reproducer of the model (I basically stripped down the timeseers implementation to a minimal version so that it\u2019s easier to understand here):\r\n\r\n```python\r\ndef linear_trend_model(X, y):\r\n    t = X[\"t\"].values\r\n    n_changepoints = 1\r\n    s = np.linspace(0, np.max(t), n_changepoints + 2)[1:-1]\r\n\r\n    with pm.Model() as model:\r\n        A = (t[:, None] > s) * 1.0\r\n\r\n        delta = pm.Laplace(\"delta\", 0, 0.05, shape=(n_changepoints,))\r\n        k = pm.Normal(\"k\", 0, 1.0)\r\n        m = pm.Normal(\"m\", 0, 5)\r\n        gamma = -s * delta\r\n\r\n        mu = (k + pm.math.sum(A * delta, axis=1)) * t + (m + pm.math.sum(A * gamma, axis=1))\r\n        sigma = pm.HalfCauchy(\"sigma\", 0.5)\r\n        pm.Normal(\"obs\", mu=mu, sd=sigma, observed=y)\r\n    return model\r\n```\r\nTo draw prior samples, I am creating some dummy data that I can feed into the model and then call pm.draw_sample_prior_predictive:\r\n\r\n```python\r\nimport pandas as pd\r\nimport numpy as np\r\nimport pymc3 as pm\r\n\r\nt = np.linspace(0, 1, 24)\r\ny = np.random.rand(len(t))\r\ndf = pd.DataFrame({'t': t, 'y': y})\r\n\r\nwith linear_trend_model(df, df.y):\r\n    prior_trace = pm.sample_prior_predictive(10)\r\n```\r\n\r\n**Please provide the full traceback.**\r\nThis yields this error:\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n~//path/to/lib/python3.7/site-packages/pymc3/distributions/distribution.py in _draw_value(param, point, givens, size)\r\n    834                 try:\r\n--> 835                     return dist_tmp.random(point=point, size=size)\r\n    836                 except (ValueError, TypeError):\r\n\r\n~//path/to/lib/python3.7/site-packages/pymc3/distributions/continuous.py in random(self, point, size)\r\n    513         mu, tau, _ = draw_values([self.mu, self.tau, self.sigma],\r\n--> 514                                  point=point, size=size)\r\n    515         return generate_samples(stats.norm.rvs, loc=mu, scale=tau**-0.5,\r\n\r\n~//path/to/lib/python3.7/site-packages/pymc3/distributions/distribution.py in draw_values(params, point, size)\r\n    697                                             givens=givens.values(),\r\n--> 698                                             size=size)\r\n    699                         evaluated[param_idx] = drawn[(param, size)] = value\r\n\r\n~//path/to/lib/python3.7/site-packages/pymc3/distributions/distribution.py in _draw_value(param, point, givens, size)\r\n    875             func = _compile_theano_function(param, input_vars)\r\n--> 876             output = func(*input_vals)\r\n    877             return output\r\n\r\n~//path/to/lib/python3.7/site-packages/numpy/lib/function_base.py in __call__(self, *args, **kwargs)\r\n   2107 \r\n-> 2108         return self._vectorize_call(func=func, args=vargs)\r\n   2109 \r\n\r\n~//path/to/lib/python3.7/site-packages/numpy/lib/function_base.py in _vectorize_call(self, func, args)\r\n   2181         if self.signature is not None:\r\n-> 2182             res = self._vectorize_call_with_signature(func, args)\r\n   2183         elif not args:\r\n\r\n~//path/to/lib/python3.7/site-packages/numpy/lib/function_base.py in _vectorize_call_with_signature(self, func, args)\r\n   2222         for index in np.ndindex(*broadcast_shape):\r\n-> 2223             results = func(*(arg[index] for arg in args))\r\n   2224 \r\n\r\n~//path/to/lib/python3.7/site-packages/theano/compile/function_module.py in __call__(self, *args, **kwargs)\r\n    812                             arg, strict=s.strict,\r\n--> 813                             allow_downcast=s.allow_downcast)\r\n    814 \r\n\r\n~//path/to/lib/python3.7/site-packages/theano/tensor/type.py in filter(self, data, strict, allow_downcast)\r\n    194                 raise TypeError(\"Non-unit value on shape on a broadcastable\"\r\n--> 195                                 \" dimension.\", data.shape, self.broadcastable)\r\n    196             i += 1\r\n\r\nTypeError: ('Bad input argument to theano function with name \"/Users/maximilianschmidt2//path/to/lib/python3.7/site-packages/pymc3/distributions/distribution.py:732\" at index 0 (0-based). ', 'Non-unit value on shape on a broadcastable dimension.', (10,), (True,))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-11-4a0c0bbadcf5> in <module>\r\n      1 with linear_trend_model(df, df.y):\r\n----> 2     prior_trace = pm.sample_prior_predictive(10)\r\n\r\n~//path/to/lib/python3.7/site-packages/pymc3/sampling.py in sample_prior_predictive(samples, model, vars, var_names, random_seed)\r\n   1955     names = get_default_varnames(vars_, include_transformed=False)\r\n   1956     # draw_values fails with auto-transformed variables. transform them later!\r\n-> 1957     values = draw_values([model[name] for name in names], size=samples)\r\n   1958 \r\n   1959     data = {k: v for k, v in zip(names, values)}\r\n\r\n~//path/to/lib/python3.7/site-packages/pymc3/distributions/distribution.py in draw_values(params, point, size)\r\n    652                                         point=point,\r\n    653                                         givens=temp_givens,\r\n--> 654                                         size=size)\r\n    655                     givens[next_.name] = (next_, value)\r\n    656                     drawn[(next_, size)] = value\r\n\r\n~//path/to/lib/python3.7/site-packages/pymc3/distributions/distribution.py in _draw_value(param, point, givens, size)\r\n    842                     with _DrawValuesContextBlocker():\r\n    843                         val = np.atleast_1d(dist_tmp.random(point=point,\r\n--> 844                                                             size=None))\r\n    845                     # Sometimes point may change the size of val but not the\r\n    846                     # distribution's shape\r\n\r\n~//path/to/lib/python3.7/site-packages/pymc3/distributions/continuous.py in random(self, point, size)\r\n    512         \"\"\"\r\n    513         mu, tau, _ = draw_values([self.mu, self.tau, self.sigma],\r\n--> 514                                  point=point, size=size)\r\n    515         return generate_samples(stats.norm.rvs, loc=mu, scale=tau**-0.5,\r\n    516                                 dist_shape=self.shape,\r\n\r\n~//path/to/lib/python3.7/site-packages/pymc3/distributions/distribution.py in draw_values(params, point, size)\r\n    696                                             point=point,\r\n    697                                             givens=givens.values(),\r\n--> 698                                             size=size)\r\n    699                         evaluated[param_idx] = drawn[(param, size)] = value\r\n    700                         givens[param.name] = (param, value)\r\n\r\n~//path/to/lib/python3.7/site-packages/pymc3/distributions/distribution.py in _draw_value(param, point, givens, size)\r\n    874                 input_vals = []\r\n    875             func = _compile_theano_function(param, input_vars)\r\n--> 876             output = func(*input_vals)\r\n    877             return output\r\n    878     raise ValueError('Unexpected type in draw_value: %s' % type(param))\r\n\r\n~//path/to/lib/python3.7/site-packages/numpy/lib/function_base.py in __call__(self, *args, **kwargs)\r\n   2106             vargs.extend([kwargs[_n] for _n in names])\r\n   2107 \r\n-> 2108         return self._vectorize_call(func=func, args=vargs)\r\n   2109 \r\n   2110     def _get_ufunc_and_otypes(self, func, args):\r\n\r\n~//path/to/lib/python3.7/site-packages/numpy/lib/function_base.py in _vectorize_call(self, func, args)\r\n   2180         \"\"\"Vectorized call to `func` over positional `args`.\"\"\"\r\n   2181         if self.signature is not None:\r\n-> 2182             res = self._vectorize_call_with_signature(func, args)\r\n   2183         elif not args:\r\n   2184             res = func()\r\n\r\n~//path/to/lib/python3.7/site-packages/numpy/lib/function_base.py in _vectorize_call_with_signature(self, func, args)\r\n   2210 \r\n   2211         broadcast_shape, dim_sizes = _parse_input_dimensions(\r\n-> 2212             args, input_core_dims)\r\n   2213         input_shapes = _calculate_shapes(broadcast_shape, dim_sizes,\r\n   2214                                          input_core_dims)\r\n\r\n~//path/to/lib/python3.7/site-packages/numpy/lib/function_base.py in _parse_input_dimensions(args, input_core_dims)\r\n   1871     dim_sizes = {}\r\n   1872     for arg, core_dims in zip(args, input_core_dims):\r\n-> 1873         _update_dim_sizes(dim_sizes, arg, core_dims)\r\n   1874         ndim = arg.ndim - len(core_dims)\r\n   1875         dummy_array = np.lib.stride_tricks.as_strided(0, arg.shape[:ndim])\r\n\r\n~//path/to/lib/python3.7/site-packages/numpy/lib/function_base.py in _update_dim_sizes(dim_sizes, arg, core_dims)\r\n   1837             '%d-dimensional argument does not have enough '\r\n   1838             'dimensions for all core dimensions %r'\r\n-> 1839             % (arg.ndim, core_dims))\r\n   1840 \r\n   1841     core_shape = arg.shape[-num_core_dims:]\r\n\r\nValueError: 0-dimensional argument does not have enough dimensions for all core dimensions ('i_1_0',)\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.9.3\r\n* Theano Version: 1.0.5\r\n* Python Version: 3.7.7\r\n* Operating system: Mac OS\r\n* How did you install PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4253/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4243", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4243/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4243/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4243/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4243", "id": 748260038, "node_id": "MDExOlB1bGxSZXF1ZXN0NTI1Mjk1NzU4", "number": 4243, "title": "Fix str representations for KroneckerNormal and MatrixNormal", "user": {"login": "Spaak", "id": 3042751, "node_id": "MDQ6VXNlcjMwNDI3NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3042751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Spaak", "html_url": "https://github.com/Spaak", "followers_url": "https://api.github.com/users/Spaak/followers", "following_url": "https://api.github.com/users/Spaak/following{/other_user}", "gists_url": "https://api.github.com/users/Spaak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Spaak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Spaak/subscriptions", "organizations_url": "https://api.github.com/users/Spaak/orgs", "repos_url": "https://api.github.com/users/Spaak/repos", "events_url": "https://api.github.com/users/Spaak/events{/privacy}", "received_events_url": "https://api.github.com/users/Spaak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18", "html_url": "https://github.com/pymc-devs/pymc/milestone/18", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18/labels", "id": 6050207, "node_id": "MDk6TWlsZXN0b25lNjA1MDIwNw==", "number": 18, "title": "3.10", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 23, "state": "closed", "created_at": "2020-10-30T09:12:39Z", "updated_at": "2021-01-22T12:04:41Z", "due_on": null, "closed_at": "2021-01-22T12:04:41Z"}, "comments": 1, "created_at": "2020-11-22T14:55:33Z", "updated_at": "2020-11-25T12:04:23Z", "closed_at": "2020-11-25T12:04:23Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4243", "html_url": "https://github.com/pymc-devs/pymc/pull/4243", "diff_url": "https://github.com/pymc-devs/pymc/pull/4243.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4243.patch", "merged_at": "2020-11-25T12:04:22Z"}, "body": "Fixes #4240. Additionally, updates `Distribution.__str__` and `PyMC3Variable.__str__` such that they fallback to the old `super().__str__` in case `_str_repr_` raises an error (which might happen in e.g. custom distribution subclasses without `_distr_params_for_repr` defined).", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4243/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4240", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4240/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4240/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4240/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4240", "id": 747993682, "node_id": "MDU6SXNzdWU3NDc5OTM2ODI=", "number": 4240, "title": "Broken str representation for Kronecker Normal distribution", "user": {"login": "Sayam753", "id": 43073325, "node_id": "MDQ6VXNlcjQzMDczMzI1", "avatar_url": "https://avatars.githubusercontent.com/u/43073325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sayam753", "html_url": "https://github.com/Sayam753", "followers_url": "https://api.github.com/users/Sayam753/followers", "following_url": "https://api.github.com/users/Sayam753/following{/other_user}", "gists_url": "https://api.github.com/users/Sayam753/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sayam753/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sayam753/subscriptions", "organizations_url": "https://api.github.com/users/Sayam753/orgs", "repos_url": "https://api.github.com/users/Sayam753/repos", "events_url": "https://api.github.com/users/Sayam753/events{/privacy}", "received_events_url": "https://api.github.com/users/Sayam753/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "Spaak", "id": 3042751, "node_id": "MDQ6VXNlcjMwNDI3NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3042751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Spaak", "html_url": "https://github.com/Spaak", "followers_url": "https://api.github.com/users/Spaak/followers", "following_url": "https://api.github.com/users/Spaak/following{/other_user}", "gists_url": "https://api.github.com/users/Spaak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Spaak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Spaak/subscriptions", "organizations_url": "https://api.github.com/users/Spaak/orgs", "repos_url": "https://api.github.com/users/Spaak/repos", "events_url": "https://api.github.com/users/Spaak/events{/privacy}", "received_events_url": "https://api.github.com/users/Spaak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Spaak", "id": 3042751, "node_id": "MDQ6VXNlcjMwNDI3NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3042751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Spaak", "html_url": "https://github.com/Spaak", "followers_url": "https://api.github.com/users/Spaak/followers", "following_url": "https://api.github.com/users/Spaak/following{/other_user}", "gists_url": "https://api.github.com/users/Spaak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Spaak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Spaak/subscriptions", "organizations_url": "https://api.github.com/users/Spaak/orgs", "repos_url": "https://api.github.com/users/Spaak/repos", "events_url": "https://api.github.com/users/Spaak/events{/privacy}", "received_events_url": "https://api.github.com/users/Spaak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-11-21T10:37:29Z", "updated_at": "2020-11-25T12:04:22Z", "closed_at": "2020-11-25T12:04:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If you have questions about a specific use case, or you are not sure whether this is a bug or not, please post it to our discourse channel: https://discourse.pymc.io  \r\n\r\n## Description of your problem\r\nThis issue popped out while I was in pdb debugger, figuring out the reason of failing test cases in #4207 \r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\n>>> import numpy as np\r\n>>> import pymc3 as pm\r\n>>> K1 = np.array([[1., 0.5], [0.5, 2]])\r\n>>> K2 = np.array([[1., 0.4, 0.2], [0.4, 2, 0.3], [0.2, 0.3, 1]])\r\n>>> covs = [K1, K2]\r\n>>> N = 6\r\n>>> mu = np.zeros(N)\r\n>>> with pm.Model() as model:\r\n...     vals = pm.KroneckerNormal('vals', mu=mu, covs=covs, shape=N)\r\n... \r\n>>> vals\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\n>>> vals\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/sayam/.local/lib/python3.8/site-packages/theano/gof/graph.py\", line 449, in __repr__\r\n    to_print = [str(self)]\r\n  File \"/home/sayam/Desktop/pymc/pymc3/pymc3/model.py\", line 83, in __str__\r\n    return self._str_repr(formatting=\"plain\", **kwargs)\r\n  File \"/home/sayam/Desktop/pymc/pymc3/pymc3/model.py\", line 77, in _str_repr\r\n    return self.distribution._str_repr(name=name, dist=dist, formatting=formatting)\r\n  File \"/home/sayam/Desktop/pymc/pymc3/pymc3/distributions/distribution.py\", line 176, in _str_repr\r\n    param_values = [\r\n  File \"/home/sayam/Desktop/pymc/pymc3/pymc3/distributions/distribution.py\", line 177, in <listcomp>\r\n    get_repr_for_variable(getattr(dist, x), formatting=formatting) for x in param_names\r\n  File \"/home/sayam/Desktop/pymc/pymc3/pymc3/util.py\", line 131, in get_repr_for_variable\r\n    name = variable.name if variable is not None else None\r\nAttributeError: 'list' object has no attribute 'name'\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\nhttps://github.com/pymc-devs/pymc3/blob/ad63b94342260ca21d385f2539e243aaf62d26aa/pymc3/util.py#L130-L131\r\n\r\nI imagine to use `getattr` for `variable`. Pinging @Spaak, @AlexAndorra  to help here. \r\n \r\n## Versions and main components\r\n\r\n* PyMC3 Version: master\r\n* Theano Version: 1.0.11\r\n* Python Version: 3.8.6\r\n* Operating system: Ubuntu 18.04 LTS\r\n* How did you install PyMC3: (conda/pip) pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4240/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4221", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4221/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4221/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4221/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4221", "id": 740851750, "node_id": "MDExOlB1bGxSZXF1ZXN0NTE5MjY5Njk3", "number": 4221, "title": "Cast test values to the correct dtype before assignment", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-11-11T15:23:41Z", "updated_at": "2020-11-11T19:20:23Z", "closed_at": "2020-11-11T19:20:18Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4221", "html_url": "https://github.com/pymc-devs/pymc/pull/4221", "diff_url": "https://github.com/pymc-devs/pymc/pull/4221.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4221.patch", "merged_at": "2020-11-11T19:20:18Z"}, "body": "closes #4219\r\n\r\nIt's a one-liner fix of a bug that was silently present for years, without attracting any attention.\r\nOnly surfaced by recent improvements in Theano-PyMC..", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4221/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4219", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4219/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4219/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4219/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4219", "id": 740684998, "node_id": "MDU6SXNzdWU3NDA2ODQ5OTg=", "number": 4219, "title": "Invalid test value type by Bernoulli distribution", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-11-11T11:15:21Z", "updated_at": "2020-11-11T19:20:18Z", "closed_at": "2020-11-11T19:20:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nWhile locally running tests, a bug was surfaced by a recently added validity check (see https://github.com/pymc-devs/pymc3/pull/4214#issuecomment-724930766) from Theano-PyMC:\r\n\r\n```python\r\n________________________________________________________________ TestSamplePPC.test_model_shared_variable _________________________________________________________________\r\n\r\nself = <pymc3.tests.test_sampling.TestSamplePPC object at 0x000001EF2100D748>\r\n\r\n    def test_model_shared_variable(self):\r\n        x = np.random.randn(100)\r\n        y = x > 0\r\n        x_shared = theano.shared(x)\r\n        y_shared = theano.shared(y)\r\n        with pm.Model() as model:\r\n            coeff = pm.Normal(\"x\", mu=0, sd=1)\r\n            logistic = pm.Deterministic(\"p\", pm.math.sigmoid(coeff * x_shared))\r\n\r\n>           obs = pm.Bernoulli(\"obs\", p=logistic, observed=y_shared)\r\n\r\npymc3\\tests\\test_sampling.py:572:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\npymc3\\distributions\\distribution.py:98: in __new__\r\n    return model.Var(name, dist, data, total_size, dims=dims)\r\npymc3\\model.py:1166: in Var\r\n    model=self,\r\npymc3\\model.py:1800: in __init__\r\n    self.tag.test_value = theano.compile.view_op(data).tag.test_value\r\n..\\theano-pymc\\theano\\gof\\utils.py:277: in __setattr__\r\n    obj = self.attr_filter(obj)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = TensorType(bool, vector)\r\ndata = array([1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0,\r\n       1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1,...0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1,\r\n       1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], dtype=int64)\r\nstrict = False, allow_downcast = None\r\n\r\n    def filter(self, data, strict=False, allow_downcast=None):\r\n        \"\"\"\r\n        Convert `data` to something which can be associated to a\r\n        `TensorVariable`.\r\n\r\n        This function is not meant to be called in user code. It is for\r\n        `Linker` instances to use when running a compiled graph.\r\n\r\n        \"\"\"\r\n        # Explicit error message when one accidentally uses a Variable as\r\n        # input (typical mistake, especially with shared variables).\r\n        if isinstance(data, Variable):\r\n            raise TypeError(\r\n                \"Expected an array-like object, but found a Variable: \"\r\n                \"maybe you are trying to call a function on a (possibly \"\r\n                \"shared) variable instead of a numeric array?\"\r\n            )\r\n\r\n        if (type(data) is np.ndarray) and (data.dtype == self.numpy_dtype):\r\n            if data.dtype.num != self.numpy_dtype.num:\r\n                data = theano._asarray(data, dtype=self.dtype)\r\n            # -- now fall through to ndim check\r\n        elif (type(data) is np.memmap) and (data.dtype == self.numpy_dtype):\r\n            # numpy.memmap is a \"safe\" subclass of ndarray,\r\n            # so we can use it wherever we expect a base ndarray.\r\n            # however, casting it would defeat the purpose of not\r\n            # loading the whole data into memory\r\n            pass\r\n        elif strict:\r\n            # If any of the two conditions above was not met,\r\n            # we raise a meaningful TypeError.\r\n            if not (type(data) is np.ndarray):\r\n                raise TypeError(\r\n                    \"%s expected a ndarray object.\" % self, data, type(data)\r\n                )\r\n            if data.dtype != self.numpy_dtype:\r\n                raise TypeError(\r\n                    (\"%s expected a ndarray object with \" \"dtype = %s (got %s).\")\r\n                    % (self, self.numpy_dtype, data.dtype)\r\n                )\r\n            raise AssertionError(\"This point should never be reached.\")\r\n        else:\r\n            if allow_downcast:\r\n                # Convert to self.dtype, regardless of the type of data\r\n                data = theano._asarray(data, dtype=self.dtype)\r\n                # TODO: consider to pad shape with ones to make it consistent\r\n                # with self.broadcastable... like vector->row type thing\r\n            else:\r\n                if isinstance(data, np.ndarray):\r\n                    # Check if self.dtype can accurately represent data\r\n                    # (do not try to convert the data)\r\n                    up_dtype = scal.upcast(self.dtype, data.dtype)\r\n                    if up_dtype == self.dtype:\r\n                        # Bug in the following line when data is a\r\n                        # scalar array, see\r\n                        # http://projects.scipy.org/numpy/ticket/1611\r\n                        # data = data.astype(self.dtype)\r\n                        data = theano._asarray(data, dtype=self.dtype)\r\n                    if up_dtype != self.dtype:\r\n                        err_msg = (\r\n                            \"%s cannot store a value of dtype %s without \"\r\n                            \"risking loss of precision. If you do not mind \"\r\n                            \"this loss, you can: \"\r\n                            \"1) explicitly cast your data to %s, or \"\r\n                            '2) set \"allow_input_downcast=True\" when calling '\r\n                            '\"function\". Value: \"%s\"'\r\n                            % (self, data.dtype, self.dtype, repr(data))\r\n                        )\r\n>                       raise TypeError(err_msg)\r\nE                       TypeError: TensorType(bool, vector) cannot store a value of dtype int64 without risking loss of precision. If you do not mind this loss, you can: 1) explicitly cast your data to bool, or 2) set \"allow_input_downcast=True\" when calling \"function\". Value: \"array([1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0,\r\nE                              1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0,\r\nE                              0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0,\r\nE                              1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1,\r\nE                              1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], dtype=int64)\"\r\n\r\n..\\theano-pymc\\theano\\tensor\\type.py:145: TypeError\r\n```\r\n\r\nThe problem does not surface in CI pipelines, because they don't test against latest Theano-PyMC !\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: recent master\r\n* Theano Version: recent Theano-PyMC master\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4219/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4217", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4217/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4217/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4217/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4217", "id": 739863687, "node_id": "MDExOlB1bGxSZXF1ZXN0NTE4NDUwOTc1", "number": 4217, "title": "fix #4216: str and latex representations for Bound variables", "user": {"login": "Spaak", "id": 3042751, "node_id": "MDQ6VXNlcjMwNDI3NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3042751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Spaak", "html_url": "https://github.com/Spaak", "followers_url": "https://api.github.com/users/Spaak/followers", "following_url": "https://api.github.com/users/Spaak/following{/other_user}", "gists_url": "https://api.github.com/users/Spaak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Spaak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Spaak/subscriptions", "organizations_url": "https://api.github.com/users/Spaak/orgs", "repos_url": "https://api.github.com/users/Spaak/repos", "events_url": "https://api.github.com/users/Spaak/events{/privacy}", "received_events_url": "https://api.github.com/users/Spaak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18", "html_url": "https://github.com/pymc-devs/pymc/milestone/18", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18/labels", "id": 6050207, "node_id": "MDk6TWlsZXN0b25lNjA1MDIwNw==", "number": 18, "title": "3.10", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 23, "state": "closed", "created_at": "2020-10-30T09:12:39Z", "updated_at": "2021-01-22T12:04:41Z", "due_on": null, "closed_at": "2021-01-22T12:04:41Z"}, "comments": 3, "created_at": "2020-11-10T12:22:10Z", "updated_at": "2020-11-15T17:00:25Z", "closed_at": "2020-11-15T09:52:11Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4217", "html_url": "https://github.com/pymc-devs/pymc/pull/4217", "diff_url": "https://github.com/pymc-devs/pymc/pull/4217.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4217.patch", "merged_at": "2020-11-15T09:52:11Z"}, "body": "Fixes #4216.\r\n\r\nThis:\r\n\r\n```python\r\nimport pymc3 as pm\r\n\r\nwith pm.Model() as model:\r\n  bound_var = pm.Bound(pm.Normal, lower=1.0)('bound_var', mu=0, sigma=10)\r\n  print(str(bound_var))\r\n```\r\n\r\nwill now give this:\r\n\r\n`bound_var ~ Bound(lower=1.0, upper=None)-Normal(mu=0.0, sigma=10.0)`", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4217/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4214", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4214/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4214/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4214/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4214", "id": 739204920, "node_id": "MDExOlB1bGxSZXF1ZXN0NTE3OTA4ODQw", "number": 4214, "title": "Fixing scalar shape handling: treat (1,) as vectors", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76152, "node_id": "MDU6TGFiZWw3NjE1Mg==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/enhancements", "name": "enhancements", "color": "02e10c", "default": false, "description": null}, {"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 818212053, "node_id": "MDU6TGFiZWw4MTgyMTIwNTM=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/request%20discussion", "name": "request discussion", "color": "dbef5b", "default": false, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/20", "html_url": "https://github.com/pymc-devs/pymc/milestone/20", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/20/labels", "id": 6211045, "node_id": "MDk6TWlsZXN0b25lNjIxMTA0NQ==", "number": 20, "title": "3.11.0", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 25, "state": "closed", "created_at": "2020-12-14T15:20:06Z", "updated_at": "2021-01-22T12:04:10Z", "due_on": "2021-01-21T08:00:00Z", "closed_at": "2021-01-22T12:04:10Z"}, "comments": 11, "created_at": "2020-11-09T17:06:17Z", "updated_at": "2021-03-17T14:46:54Z", "closed_at": "2020-12-20T16:41:06Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4214", "html_url": "https://github.com/pymc-devs/pymc/pull/4214", "diff_url": "https://github.com/pymc-devs/pymc/pull/4214.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4214.patch", "merged_at": "2020-12-20T16:41:06Z"}, "body": "# Breaking Changes\r\n+ From now on `()` is the only *scalar* shape. `(1,)` will become *vector of length 1*\r\n\r\n# New Shape Examples\r\n+ `Normal(\"n\", shape=None)` is the same as the default `Normal(\"n\")`. Here it is up to the distribution (most will default to `()`)\r\n+ `shape=()` explicitly specifies *scalar* shape\r\n+ `shape=0` or `shape=(0,)` is up for discussion (see below)\r\n+ `shape=1` is the same as `shape=(1,)` is a *length 1 vector*\r\n\r\n# Open ToDos\r\n+ [x] This blows up ~hundreds of~ a few tests. They must be fixed.\r\n+ [x] Make sure to raise a `VelueError` when a user passes `shape=(0,)` / `shape=0` to a distribution\r\n+ [x] `size=(0,)`/`size=0` to `.random()` remains allowed - because numpy also allows it on the random number generator\r\n+ [x] Check out the `RandomWalk` distributions. While the tests cover shapes, they don't necessarily catch problems like #3962 (they look fine, but most don't have a `.random()` implementation. See #4337 )\r\n+ [x] release notes\r\n+ [x] ~re-running relevant notebooks (oh dear!)~ Let's do this on a separate PR\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4214/reactions", "total_count": 5, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 5, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4214/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4213", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4213/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4213/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4213/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4213", "id": 739192106, "node_id": "MDU6SXNzdWU3MzkxOTIxMDY=", "number": 4213, "title": "transforms.ordered doesn't apply to samples found with .random()", "user": {"login": "EdAyers", "id": 5064353, "node_id": "MDQ6VXNlcjUwNjQzNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5064353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdAyers", "html_url": "https://github.com/EdAyers", "followers_url": "https://api.github.com/users/EdAyers/followers", "following_url": "https://api.github.com/users/EdAyers/following{/other_user}", "gists_url": "https://api.github.com/users/EdAyers/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdAyers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdAyers/subscriptions", "organizations_url": "https://api.github.com/users/EdAyers/orgs", "repos_url": "https://api.github.com/users/EdAyers/repos", "events_url": "https://api.github.com/users/EdAyers/events{/privacy}", "received_events_url": "https://api.github.com/users/EdAyers/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76152, "node_id": "MDU6TGFiZWw3NjE1Mg==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/enhancements", "name": "enhancements", "color": "02e10c", "default": false, "description": null}, {"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-11-09T16:49:48Z", "updated_at": "2022-01-10T10:47:25Z", "closed_at": "2022-01-10T10:47:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Please provide a minimal, self-contained, and reproducible example.**\r\n\r\nModified version of example given at https://docs.pymc.io/api/distributions/discrete.html?highlight=ordered#pymc3.distributions.discrete.OrderedLogistic\r\n\r\n```python\r\nimport pymc3 as pm\r\nimport numpy as np\r\nwith pm.Model() as model:\r\n    cutpoints = pm.Normal(\"cutpoints\", mu=[-1,1], sigma=10, shape=2,\r\n                          transform=pm.distributions.transforms.ordered, testval=np.asarray([.5, .9]))\r\n    for i in range(10):\r\n        c = cutpoints.random()\r\n        print(c, c[0] < c[1])\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\n[-1.78978722  2.24029602] True\r\n[ 7.27625258 -9.98526886] False\r\n[-2.3456616   6.17737276] True\r\n[-12.42092868  -2.94677656] True\r\n[0.8365788  9.45209727] True\r\n[-12.07594385  13.38498445] True\r\n[ 4.94704378 17.77777978] True\r\n[7.0118523  7.82261754] True\r\n[ -3.387632   -10.23571222] False\r\n[ 8.48851098 -3.25975408] False\r\n```\r\n\r\nExpected result: c[0] is always < c[1]\r\n\r\nHowever the full demo given at the URL works fine. So I guess that one of the members of the `Transform` subclass has a bug in it?\r\nOr maybe I misunderstood the API and when you call `X.random()` you are supposed to see the sample before the transform?\r\nIt seems quite likely this is a bug but apologies if this is actually correct behaviour.\r\n\r\nHere is another one where someone is sampling an ordered pair but no output.\r\nhttps://github.com/pymc-devs/pymc3/issues/3680\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.9.3\r\n* Theano Version: 1.0.5\r\n* Python Version: 3.8.6\r\n* Operating system: Arch Linux\r\n* How did you install PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4213/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4212", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4212/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4212/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4212/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4212", "id": 739160964, "node_id": "MDExOlB1bGxSZXF1ZXN0NTE3ODcyNzYz", "number": 4212, "title": "Posterior predictive sampling was using only the first chain of InferenceData", "user": {"login": "aloctavodia", "id": 1338958, "node_id": "MDQ6VXNlcjEzMzg5NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1338958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aloctavodia", "html_url": "https://github.com/aloctavodia", "followers_url": "https://api.github.com/users/aloctavodia/followers", "following_url": "https://api.github.com/users/aloctavodia/following{/other_user}", "gists_url": "https://api.github.com/users/aloctavodia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aloctavodia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aloctavodia/subscriptions", "organizations_url": "https://api.github.com/users/aloctavodia/orgs", "repos_url": "https://api.github.com/users/aloctavodia/repos", "events_url": "https://api.github.com/users/aloctavodia/events{/privacy}", "received_events_url": "https://api.github.com/users/aloctavodia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-11-09T16:11:31Z", "updated_at": "2020-11-09T21:28:59Z", "closed_at": "2020-11-09T21:28:59Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4212", "html_url": "https://github.com/pymc-devs/pymc/pull/4212", "diff_url": "https://github.com/pymc-devs/pymc/pull/4212.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4212.patch", "merged_at": "2020-11-09T21:28:59Z"}, "body": "This fix half of #4209. Now  Inf Data versus Trace will be the same. The speed difference is related to InfereceData not storing transformed variables.\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4212/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4207", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4207/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4207/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4207/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4207", "id": 734690842, "node_id": "MDExOlB1bGxSZXF1ZXN0NTE0MjEyNzIx", "number": 4207, "title": "Fix MvNormal.random", "user": {"login": "Sayam753", "id": 43073325, "node_id": "MDQ6VXNlcjQzMDczMzI1", "avatar_url": "https://avatars.githubusercontent.com/u/43073325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sayam753", "html_url": "https://github.com/Sayam753", "followers_url": "https://api.github.com/users/Sayam753/followers", "following_url": "https://api.github.com/users/Sayam753/following{/other_user}", "gists_url": "https://api.github.com/users/Sayam753/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sayam753/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sayam753/subscriptions", "organizations_url": "https://api.github.com/users/Sayam753/orgs", "repos_url": "https://api.github.com/users/Sayam753/repos", "events_url": "https://api.github.com/users/Sayam753/events{/privacy}", "received_events_url": "https://api.github.com/users/Sayam753/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18", "html_url": "https://github.com/pymc-devs/pymc/milestone/18", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18/labels", "id": 6050207, "node_id": "MDk6TWlsZXN0b25lNjA1MDIwNw==", "number": 18, "title": "3.10", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 23, "state": "closed", "created_at": "2020-10-30T09:12:39Z", "updated_at": "2021-01-22T12:04:41Z", "due_on": null, "closed_at": "2021-01-22T12:04:41Z"}, "comments": 22, "created_at": "2020-11-02T17:29:27Z", "updated_at": "2020-12-23T08:11:29Z", "closed_at": "2020-11-29T14:06:56Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4207", "html_url": "https://github.com/pymc-devs/pymc/pull/4207", "diff_url": "https://github.com/pymc-devs/pymc/pull/4207.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4207.patch", "merged_at": "2020-11-29T14:06:56Z"}, "body": "**Thank your for opening a PR!**\r\n\r\nDepending on what your PR does, here are a few things you might want to address in the description:\r\n+ [X] what are the (breaking) changes that this PR makes?\r\nThis PR is a potential fix to related issues #4185 , #3706 , #2848 , #3829 , #3758\r\n+ [X] important background, or details about the implementation\r\nTo achieve deterministic nature with random method, the best I could think of -\r\n    - Based on distribution shape, broadcast `mu` and `parametrizations` to respective shapes.\r\n    - Compute samples with correct parameterisation based on cov/chol/tau\r\n+ [X] are the changes\u2014especially new features\u2014covered by tests and docstrings?\r\nYes, tests are written\r\n+ [X] Given a mention in release notes\r\n[Related notebook](https://colab.research.google.com/drive/1GED14QNckSQzNhAe4AVIuGpDOh54EMzg?usp=sharing)", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4207/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4185", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4185/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4185/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4185/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4185", "id": 729102824, "node_id": "MDU6SXNzdWU3MjkxMDI4MjQ=", "number": 4185, "title": "Shape issues with MvNormal.random method", "user": {"login": "Sayam753", "id": 43073325, "node_id": "MDQ6VXNlcjQzMDczMzI1", "avatar_url": "https://avatars.githubusercontent.com/u/43073325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sayam753", "html_url": "https://github.com/Sayam753", "followers_url": "https://api.github.com/users/Sayam753/followers", "following_url": "https://api.github.com/users/Sayam753/following{/other_user}", "gists_url": "https://api.github.com/users/Sayam753/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sayam753/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sayam753/subscriptions", "organizations_url": "https://api.github.com/users/Sayam753/orgs", "repos_url": "https://api.github.com/users/Sayam753/repos", "events_url": "https://api.github.com/users/Sayam753/events{/privacy}", "received_events_url": "https://api.github.com/users/Sayam753/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-10-25T20:10:02Z", "updated_at": "2020-11-29T14:42:30Z", "closed_at": "2020-11-29T14:42:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This issue popped out in #4180 while writing tests for `MixtureSameFamily` distribution with MvNormal distribution. MvNormal.random method does not broadcast when `sample_shape` is equal to `batch_shape` and produces inconsistent shapes with different parametrizations.\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\n>>> import numpy as np\r\n>>> import pymc3 as pm\r\nWARNING (theano.tensor.blas): Using NumPy C-API based implementation for BLAS functions.\r\n>>> mu = np.random.randn(10, 3)\r\n>>> mat = np.random.randn(3, 3)\r\n>>> cov = mat @ mat.T\r\n>>> tau = np.linalg.inv(cov)\r\n>>> chol = np.linalg.cholesky(cov)\r\n>>> \r\n>>> comp_dists = pm.MvNormal.dist(mu=mu, chol=chol, shape=(10, 3))\r\n>>> comp_dists.random(size=(10)).shape\r\n(10, 3)\r\n>>> comp_dists.random(size=(20)).shape\r\n(20, 10, 3)\r\n>>> comp_dists = pm.MvNormal.dist(mu=mu, cov=cov, shape=(10, 3))\r\n>>> comp_dists.random(size=(10)).shape\r\n(10, 3)\r\n>>> comp_dists.random(size=(20)).shape\r\n(20, 3)\r\n>>> comp_dists = pm.MvNormal.dist(mu=mu, tau=tau, shape=(10, 3))\r\n>>> comp_dists.random(size=(10)).shape\r\n(10, 3)\r\n>>> comp_dists.random(size=(20)).shape\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/sayam/.local/lib/python3.8/site-packages/pymc3/distributions/multivariate.py\", line 303, in random\r\n    return mu + transformed.T\r\nValueError: operands could not be broadcast together with shapes (10,3) (20,3) \r\n```\r\n\r\n**Please provide any additional information below.**\r\nOn exploring, it turns out that there are known related issues #4075, #3706, #2848, #3829, #3758 . I think there needs to be major refactoring of MvNormal.random method. \r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.9.3 (GitHub master)\r\n* Theano Version: 1.0.9\r\n* Python Version: 3.8.6\r\n* Operating system: Ubuntu 18.04 LTS\r\n* How did you install PyMC3: (conda/pip) pip \r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4185/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4185/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4167", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4167/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4167/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4167/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4167", "id": 720337300, "node_id": "MDU6SXNzdWU3MjAzMzczMDA=", "number": 4167, "title": "Problem sampling with cores >1", "user": {"login": "fccoelho", "id": 140123, "node_id": "MDQ6VXNlcjE0MDEyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/140123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fccoelho", "html_url": "https://github.com/fccoelho", "followers_url": "https://api.github.com/users/fccoelho/followers", "following_url": "https://api.github.com/users/fccoelho/following{/other_user}", "gists_url": "https://api.github.com/users/fccoelho/gists{/gist_id}", "starred_url": "https://api.github.com/users/fccoelho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fccoelho/subscriptions", "organizations_url": "https://api.github.com/users/fccoelho/orgs", "repos_url": "https://api.github.com/users/fccoelho/repos", "events_url": "https://api.github.com/users/fccoelho/events{/privacy}", "received_events_url": "https://api.github.com/users/fccoelho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2737550149, "node_id": "MDU6TGFiZWwyNzM3NTUwMTQ5", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/pytensor-related", "name": "pytensor-related", "color": "AB46D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-10-13T14:28:52Z", "updated_at": "2022-11-05T04:44:02Z", "closed_at": "2022-11-05T04:44:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n## Description of your problem\r\n\r\nI am getting this exception whenever I try to sample with more than one core.\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\nI am trying to run the code from [this example](https://docs.pymc.io/notebooks/ODE_API_introduction.html).\r\n\r\n**Please provide the full traceback.**\r\n```python\r\nConnectionResetError                      Traceback (most recent call last)\r\n<ipython-input-4-b9d2bf1ba15b> in <module>()\r\n     11     Y = pm.Lognormal('Y', mu=pm.math.log(sir_curves), sigma=sigma, observed=yobs)\r\n     12 \r\n---> 13     trace = pm.sample(2000, tune=1000, target_accept=0.9, cores=8)\r\n     14     data = az.from_pymc3(trace=trace)\r\n\r\n/home/fccoelho/Downloads/SageMath/local/lib/python3.7/site-packages/pymc3/sampling.py in sample(draws, step, init, n_init, start, trace, chain_idx, chains, cores, tune, progressbar, model, random_seed, discard_tuned_samples, compute_convergence_checks, callback, return_inferencedata, idata_kwargs, mp_ctx, pickle_backend, **kwargs)\r\n    543         _print_step_hierarchy(step)\r\n    544         try:\r\n--> 545             trace = _mp_sample(**sample_args, **parallel_args)\r\n    546         except pickle.PickleError:\r\n    547             _log.warning(\"Could not pickle model, sampling singlethreaded.\")\r\n\r\n/home/fccoelho/Downloads/SageMath/local/lib/python3.7/site-packages/pymc3/sampling.py in _mp_sample(draws, tune, step, chains, cores, chain, random_seed, start, progressbar, trace, model, callback, discard_tuned_samples, mp_ctx, pickle_backend, **kwargs)\r\n   1484         try:\r\n   1485             with sampler:\r\n-> 1486                 for draw in sampler:\r\n   1487                     trace = traces[draw.chain - chain]\r\n   1488                     if trace.supports_sampler_stats and draw.stats is not None:\r\n\r\n/home/fccoelho/Downloads/SageMath/local/lib/python3.7/site-packages/pymc3/parallel_sampling.py in __iter__(self)\r\n    490 \r\n    491         while self._active:\r\n--> 492             draw = ProcessAdapter.recv_draw(self._active)\r\n    493             proc, is_last, draw, tuning, stats, warns = draw\r\n    494             self._total_draws += 1\r\n\r\n/home/fccoelho/Downloads/SageMath/local/lib/python3.7/site-packages/pymc3/parallel_sampling.py in recv_draw(processes, timeout)\r\n    355         idxs = {id(proc._msg_pipe): proc for proc in processes}\r\n    356         proc = idxs[id(ready[0])]\r\n--> 357         msg = ready[0].recv()\r\n    358 \r\n    359         if msg[0] == \"error\":\r\n\r\n/home/fccoelho/Downloads/SageMath/local/lib/python3.7/multiprocessing/connection.py in recv(self)\r\n    248         self._check_closed()\r\n    249         self._check_readable()\r\n--> 250         buf = self._recv_bytes()\r\n    251         return _ForkingPickler.loads(buf.getbuffer())\r\n    252 \r\n\r\n/home/fccoelho/Downloads/SageMath/local/lib/python3.7/multiprocessing/connection.py in _recv_bytes(self, maxsize)\r\n    405 \r\n    406     def _recv_bytes(self, maxsize=None):\r\n--> 407         buf = self._recv(4)\r\n    408         size, = struct.unpack(\"!i\", buf.getvalue())\r\n    409         if maxsize is not None and size > maxsize:\r\n\r\n/home/fccoelho/Downloads/SageMath/local/lib/python3.7/multiprocessing/connection.py in _recv(self, size, read)\r\n    377         remaining = size\r\n    378         while remaining > 0:\r\n--> 379             chunk = read(handle, remaining)\r\n    380             n = len(chunk)\r\n    381             if n == 0:\r\n\r\nConnectionResetError: [Errno 104] Connection reset by peer\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.9.3\r\n* Theano Version: 1.0.5\r\n* Python Version: 3.7\r\n* Operating system: Ubuntu \r\n* How did you install PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4167/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4142", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4142/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4142/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4142/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4142", "id": 709955522, "node_id": "MDU6SXNzdWU3MDk5NTU1MjI=", "number": 4142, "title": "Shared variable issues when using NumPyro JAX sampler", "user": {"login": "mschmidt87", "id": 6512628, "node_id": "MDQ6VXNlcjY1MTI2Mjg=", "avatar_url": "https://avatars.githubusercontent.com/u/6512628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mschmidt87", "html_url": "https://github.com/mschmidt87", "followers_url": "https://api.github.com/users/mschmidt87/followers", "following_url": "https://api.github.com/users/mschmidt87/following{/other_user}", "gists_url": "https://api.github.com/users/mschmidt87/gists{/gist_id}", "starred_url": "https://api.github.com/users/mschmidt87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mschmidt87/subscriptions", "organizations_url": "https://api.github.com/users/mschmidt87/orgs", "repos_url": "https://api.github.com/users/mschmidt87/repos", "events_url": "https://api.github.com/users/mschmidt87/events{/privacy}", "received_events_url": "https://api.github.com/users/mschmidt87/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2381812947, "node_id": "MDU6TGFiZWwyMzgxODEyOTQ3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/jax", "name": "jax", "color": "f241a5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-09-28T05:50:30Z", "updated_at": "2021-06-27T08:59:27Z", "closed_at": "2021-06-27T08:59:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you have questions about a specific use case, or you are not sure whether this is a bug or not, please post it to our discourse channel: https://discourse.pymc.io  \r\n\r\n## Description of your problem\r\n\r\nI am trying to the new JAX-based sampler in the `pymc3jax` branch, presented in this notebook: https://gist.github.com/twiecki/f0a28dd06620aa86142931c1f10b5434\r\nI can run the notebook as it is just fine, but if I register the data of the model using the `pm.Data` constructor, I am getting an. `MissingInputError`.\r\n\r\nEssentially, I am replacing Cell 6 in the notebook with this code:\r\n\r\n```python\r\nwith pm.Model() as hierarchical_model:\r\n    county_idx = pm.Data('county_idx', data.county_code.values.astype('int32'))\r\n    floor = pm.Data('floor', data.floor.values)\r\n    log_radon = pm.Data('log_radon', data.log_radon)\r\n    \r\n    # Hyperpriors for group nodes\r\n    mu_a = pm.Normal('mu_a', mu=0., sigma=100.)\r\n    sigma_a = pm.HalfNormal('sigma_a', 5.)\r\n    mu_b = pm.Normal('mu_b', mu=0., sigma=100.)\r\n    sigma_b = pm.HalfNormal('sigma_b', 5.)\r\n\r\n    # Intercept for each county, distributed around group mean mu_a\r\n    # Above we just set mu and sd to a fixed value while here we\r\n    # plug in a common group distribution for all a and b (which are\r\n    # vectors of length n_counties).\r\n    a = pm.Normal('a', mu=mu_a, sigma=sigma_a, shape=n_counties)\r\n    # Intercept for each county, distributed around group mean mu_a\r\n    b = pm.Normal('b', mu=mu_b, sigma=sigma_b, shape=n_counties)\r\n\r\n    # Model error\r\n    eps = pm.HalfCauchy('eps', 5.)\r\n\r\n    radon_est = a[county_idx] + b[county_idx]*floor\r\n\r\n    # Data likelihood\r\n    radon_like = pm.Normal('radon_like', mu=radon_est,\r\n                           sigma=eps, observed=log_radon)\r\n```\r\nSo, I am registering the two input variables and the output variables as `pm.Data` objects and replaced their calls in the code below.\r\n\r\nI can then run the standard samples without problems but the JAX sampler (Cell 10) fails.\r\n\r\n**Please provide the full traceback.**\r\n```python\r\n---------------------------------------------------------------------------\r\nMissingInputError                         Traceback (most recent call last)\r\n<timed exec> in <module>\r\n\r\n/path/to/pymc3/pymc3/sampling_jax.py in sample_numpyro_nuts(draws, tune, chains, target_accept, random_seed, model, progress_bar)\r\n    114     seed = jax.random.PRNGKey(random_seed)\r\n    115 \r\n--> 116     fgraph = theano.gof.FunctionGraph(model.free_RVs, [model.logpt])\r\n    117     fns = theano.sandbox.jaxify.jax_funcify(fgraph)\r\n    118     logp_fn_jax = fns[0]\r\n\r\n/path/to/Theano-PyMC/theano/gof/fg.py in __init__(self, inputs, outputs, features, clone, update_mapping)\r\n    174 \r\n    175         for output in outputs:\r\n--> 176             self.__import_r__(output, reason=\"init\")\r\n    177         for i, output in enumerate(outputs):\r\n    178             output.clients.append((\"output\", i))\r\n\r\n/path/to/Theano-PyMC/theano/gof/fg.py in __import_r__(self, variable, reason)\r\n    347         # Imports the owners of the variables\r\n    348         if variable.owner and variable.owner not in self.apply_nodes:\r\n--> 349             self.__import__(variable.owner, reason=reason)\r\n    350         elif (\r\n    351             variable.owner is None\r\n\r\n/path/to/Theano-PyMC/theano/gof/fg.py in __import__(self, apply_node, check, reason)\r\n    399                             % (node.inputs.index(r), str(node))\r\n    400                         )\r\n--> 401                         raise MissingInputError(error_msg, variable=r)\r\n    402 \r\n    403         for node in new_nodes:\r\n\r\nMissingInputError: Input 1 of the graph (indices start from 0), used to compute AdvancedSubtensor1(b, county_idx), was not provided and not given a value. Use the Theano flag exception_verbosity='high', for more information on this error.\r\n \r\nBacktrace when that variable is created:\r\n\r\n  File \"/path/to/conda/env//lib/python3.8/site-packages/IPython/core/interactiveshell.py\", line 2866, in run_cell\r\n    result = self._run_cell(\r\n  File \"/path/to/conda/env//lib/python3.8/site-packages/IPython/core/interactiveshell.py\", line 2895, in _run_cell\r\n    return runner(coro)\r\n  File \"/path/to/conda/env//lib/python3.8/site-packages/IPython/core/async_helpers.py\", line 68, in _pseudo_sync_runner\r\n    coro.send(None)\r\n  File \"/path/to/conda/env//lib/python3.8/site-packages/IPython/core/interactiveshell.py\", line 3071, in run_cell_async\r\n    has_raised = await self.run_ast_nodes(code_ast.body, cell_name,\r\n  File \"/path/to/conda/env//lib/python3.8/site-packages/IPython/core/interactiveshell.py\", line 3263, in run_ast_nodes\r\n    if (await self.run_code(code, result,  async_=asy)):\r\n  File \"/path/to/conda/env//lib/python3.8/site-packages/IPython/core/interactiveshell.py\", line 3343, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-17-2577b767217d>\", line 2, in <module>\r\n    county_idx = pm.Data('county_idx', data.county_code.values.astype('int32'))\r\n  File \"/path/to/pymc3/pymc3/data.py\", line 516, in __new__\r\n    shared_object = theano.shared(pm.model.pandas_to_array(value), name)\r\n\r\n```\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: checkout of `pymc3jax` branch\r\n* Theano Version: checkout of `Theano-Pymc` master branch\r\n* Python Version: 3.8\r\n* Operating system: Mac OS\r\n* How did you install PyMC3: manual installation of the branch\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4142/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4093", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4093/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4093/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4093/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4093", "id": 697082045, "node_id": "MDU6SXNzdWU2OTcwODIwNDU=", "number": 4093, "title": "`sample_prior_predictive` doesn't work if there is a dot product in the model", "user": {"login": "sammosummo", "id": 9464950, "node_id": "MDQ6VXNlcjk0NjQ5NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/9464950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sammosummo", "html_url": "https://github.com/sammosummo", "followers_url": "https://api.github.com/users/sammosummo/followers", "following_url": "https://api.github.com/users/sammosummo/following{/other_user}", "gists_url": "https://api.github.com/users/sammosummo/gists{/gist_id}", "starred_url": "https://api.github.com/users/sammosummo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sammosummo/subscriptions", "organizations_url": "https://api.github.com/users/sammosummo/orgs", "repos_url": "https://api.github.com/users/sammosummo/repos", "events_url": "https://api.github.com/users/sammosummo/events{/privacy}", "received_events_url": "https://api.github.com/users/sammosummo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18", "html_url": "https://github.com/pymc-devs/pymc/milestone/18", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/18/labels", "id": 6050207, "node_id": "MDk6TWlsZXN0b25lNjA1MDIwNw==", "number": 18, "title": "3.10", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 23, "state": "closed", "created_at": "2020-10-30T09:12:39Z", "updated_at": "2021-01-22T12:04:41Z", "due_on": null, "closed_at": "2021-01-22T12:04:41Z"}, "comments": 6, "created_at": "2020-09-09T19:13:59Z", "updated_at": "2020-12-02T13:55:35Z", "closed_at": "2020-12-02T13:55:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is a simple example of a model containing a dot product within a deterministic variable.\r\n\r\n```\r\nimport pymc3 as pm\r\nimport theano.tensor as tt\r\n\r\n\r\nwith pm.Model() as model:\r\n\r\n    x = 8\r\n    y = 6\r\n    z = 5\r\n\r\n    A = pm.MvNormal(\"A\", mu=tt.zeros(y), cov=tt.eye(y), shape=(x, y))\r\n    B = tt.zeros((z, x))\r\n    C = tt.dot(B, A)  # this works fine\r\n    C = pm.Deterministic(\"C\", tt.dot(B, A))  # produces an error\r\n\r\n    pm.sample_prior_predictive()\r\n```\r\n\r\nThe model samples fine, but `sample_prior_predictive` produces an error.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/samuelrobertmathias/miniconda3/envs/ForgettingPitchPublic/lib/python3.8/site-packages/theano/compile/function_module.py\", line 903, in __call__\r\n    self.fn() if output_subset is None else\\\r\nAssertionError: Theano Assert failed!\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/samuelrobertmathias/PycharmProjects/ForgettingPitchPublic/_test.py\", line 16, in <module>\r\n    pm.sample_prior_predictive()\r\n  File \"/Users/samuelrobertmathias/miniconda3/envs/ForgettingPitchPublic/lib/python3.8/site-packages/pymc3/sampling.py\", line 1957, in sample_prior_predictive\r\n    values = draw_values([model[name] for name in names], size=samples)\r\n  File \"/Users/samuelrobertmathias/miniconda3/envs/ForgettingPitchPublic/lib/python3.8/site-packages/pymc3/distributions/distribution.py\", line 695, in draw_values\r\n    value = _draw_value(param,\r\n  File \"/Users/samuelrobertmathias/miniconda3/envs/ForgettingPitchPublic/lib/python3.8/site-packages/pymc3/distributions/distribution.py\", line 876, in _draw_value\r\n    output = func(*input_vals)\r\n  File \"/Users/samuelrobertmathias/miniconda3/envs/ForgettingPitchPublic/lib/python3.8/site-packages/numpy/lib/function_base.py\", line 2108, in __call__\r\n    return self._vectorize_call(func=func, args=vargs)\r\n  File \"/Users/samuelrobertmathias/miniconda3/envs/ForgettingPitchPublic/lib/python3.8/site-packages/numpy/lib/function_base.py\", line 2182, in _vectorize_call\r\n    res = self._vectorize_call_with_signature(func, args)\r\n  File \"/Users/samuelrobertmathias/miniconda3/envs/ForgettingPitchPublic/lib/python3.8/site-packages/numpy/lib/function_base.py\", line 2223, in _vectorize_call_with_signature\r\n    results = func(*(arg[index] for arg in args))\r\n  File \"/Users/samuelrobertmathias/miniconda3/envs/ForgettingPitchPublic/lib/python3.8/site-packages/theano/compile/function_module.py\", line 914, in __call__\r\n    gof.link.raise_with_op(\r\n  File \"/Users/samuelrobertmathias/miniconda3/envs/ForgettingPitchPublic/lib/python3.8/site-packages/theano/gof/link.py\", line 325, in raise_with_op\r\n    reraise(exc_type, exc_value, exc_trace)\r\n  File \"/Users/samuelrobertmathias/miniconda3/envs/ForgettingPitchPublic/lib/python3.8/site-packages/six.py\", line 702, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/Users/samuelrobertmathias/miniconda3/envs/ForgettingPitchPublic/lib/python3.8/site-packages/theano/compile/function_module.py\", line 903, in __call__\r\n    self.fn() if output_subset is None else\\\r\nAssertionError: Theano Assert failed!\r\nApply node that caused the error: Assert{msg='Theano Assert failed!'}(TensorConstant{0.0}, Elemwise{eq,no_inplace}.0)\r\nToposort index: 3\r\nInputs types: [TensorType(float64, scalar), TensorType(bool, scalar)]\r\nInputs shapes: [(), ()]\r\nInputs strides: [(), ()]\r\nInputs values: [array(0.), array(False)]\r\nOutputs clients: [[Alloc(Assert{msg='Theano Assert failed!'}.0, TensorConstant{5}, Shape_i{1}.0)]]\r\n\r\nHINT: Re-running with most Theano optimization disabled could give you a back-trace of when this node was created. This can be done with by setting the Theano flag 'optimizer=fast_compile'. If that does not work, Theano optimizations can be disabled with 'optimizer=None'.\r\nHINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.\r\n```\r\n\r\nWhat is really irritating about this bug is that it appears if there are any deterministics or observed stochastics that are connected to the variable using a dot product.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4093/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4057", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4057/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4057/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4057/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4057", "id": 680547613, "node_id": "MDU6SXNzdWU2ODA1NDc2MTM=", "number": 4057, "title": "Custom Likelihood Op Fails v3.8 and v3.9", "user": {"login": "tvwenger", "id": 5921304, "node_id": "MDQ6VXNlcjU5MjEzMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5921304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tvwenger", "html_url": "https://github.com/tvwenger", "followers_url": "https://api.github.com/users/tvwenger/followers", "following_url": "https://api.github.com/users/tvwenger/following{/other_user}", "gists_url": "https://api.github.com/users/tvwenger/gists{/gist_id}", "starred_url": "https://api.github.com/users/tvwenger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tvwenger/subscriptions", "organizations_url": "https://api.github.com/users/tvwenger/orgs", "repos_url": "https://api.github.com/users/tvwenger/repos", "events_url": "https://api.github.com/users/tvwenger/events{/privacy}", "received_events_url": "https://api.github.com/users/tvwenger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "OriolAbril", "id": 23738400, "node_id": "MDQ6VXNlcjIzNzM4NDAw", "avatar_url": "https://avatars.githubusercontent.com/u/23738400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OriolAbril", "html_url": "https://github.com/OriolAbril", "followers_url": "https://api.github.com/users/OriolAbril/followers", "following_url": "https://api.github.com/users/OriolAbril/following{/other_user}", "gists_url": "https://api.github.com/users/OriolAbril/gists{/gist_id}", "starred_url": "https://api.github.com/users/OriolAbril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OriolAbril/subscriptions", "organizations_url": "https://api.github.com/users/OriolAbril/orgs", "repos_url": "https://api.github.com/users/OriolAbril/repos", "events_url": "https://api.github.com/users/OriolAbril/events{/privacy}", "received_events_url": "https://api.github.com/users/OriolAbril/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "OriolAbril", "id": 23738400, "node_id": "MDQ6VXNlcjIzNzM4NDAw", "avatar_url": "https://avatars.githubusercontent.com/u/23738400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OriolAbril", "html_url": "https://github.com/OriolAbril", "followers_url": "https://api.github.com/users/OriolAbril/followers", "following_url": "https://api.github.com/users/OriolAbril/following{/other_user}", "gists_url": "https://api.github.com/users/OriolAbril/gists{/gist_id}", "starred_url": "https://api.github.com/users/OriolAbril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OriolAbril/subscriptions", "organizations_url": "https://api.github.com/users/OriolAbril/orgs", "repos_url": "https://api.github.com/users/OriolAbril/repos", "events_url": "https://api.github.com/users/OriolAbril/events{/privacy}", "received_events_url": "https://api.github.com/users/OriolAbril/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2020-08-17T21:52:19Z", "updated_at": "2021-03-19T19:17:12Z", "closed_at": "2021-03-19T19:17:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "##  Description of your problem\r\n\r\nImplementing a custom likelihood theano.tensor.Op fails in v3.8 with chains > 1 and always in v3.9. See the following example:\r\n\r\n```python\r\nimport numpy as np\r\nimport pymc3 as pm\r\nimport theano.tensor as tt\r\nimport theano.tests.unittest_tools as utt\r\n\r\nclass Loglike(tt.Op):\r\n    itypes = [tt.dvector]\r\n    otypes = [tt.dscalar]\r\n\r\n    def __init__(self, data):\r\n        self.data = data\r\n        self.loglike_grad = LoglikeGrad(self.data)\r\n\r\n    def perform(self, node, inputs, outputs):\r\n        theta, = inputs\r\n        mu, sigma = theta\r\n        logp = -np.log(np.sqrt(2.0*np.pi)*sigma)\r\n        logp += -np.sum((self.data - mu)**2.0)/(2.0*sigma**2.0)\r\n        outputs[0][0] = np.array(logp)\r\n\r\n    def grad(self, inputs, grad_outputs):\r\n        theta, = inputs\r\n        grads = self.loglike_grad(theta)\r\n        return [grad_outputs[0]*grads]\r\n\r\nclass LoglikeGrad(tt.Op):\r\n    itypes = [tt.dvector]\r\n    otypes = [tt.dvector]\r\n\r\n    def __init__(self, data):\r\n        self.data = data\r\n\r\n    def perform(self, node, inputs, outputs):\r\n        theta, = inputs\r\n        mu, sigma = theta\r\n        dmu = np.sum(self.data - mu)/sigma**2.0\r\n        dsigma = np.sum((self.data - mu)**2.0)/sigma**3.0 - 1.0/sigma\r\n        outputs[0][0] = np.array([dmu, dsigma])\r\n\r\ndef main():\r\n    mu_true = 5.0\r\n    sigma_true = 1.0\r\n    data = np.random.normal(loc=mu_true, scale=sigma_true, size=1000)\r\n    loglike = Loglike(data)\r\n    utt.verify_grad(loglike, [np.array([3.0, 2.0])])\r\n    # verify_grad passes with no errors\r\n    with pm.Model() as model:\r\n        mu = pm.Normal('mu', mu=4.0, sigma=2.0, testval=4.0)\r\n        sigma = pm.HalfNormal('sigma', sigma=5.0, testval=5.0)\r\n        theta = tt.as_tensor_variable([mu, sigma])\r\n        like = pm.DensityDist('like', lambda v: loglike(v), observed={'v': theta})\r\n    with model:\r\n        trace = pm.sample(cores=2, chains=2)\r\n\r\nif __name__ == \"__main__\":\r\n    print(\"pymc3 version: \", pm.__version__)\r\n    main()\r\n```\r\n\r\nThis runs fine with pymc v3.8 **as long as I run with only 1 chain**. If I run on v3.8 with chains > 1, or with any number of chains on v3.9.3, I get the following error after sampling finishes:\r\n```python\r\nMissingInputError: Input 0 of the graph (indices start from 0), used to compute Elemwise{exp,no_inplace}(sigma_log__), was not provided and not given a value. Use the Theano flag exception_verbosity='high', for more information on this error.\r\n```\r\n\r\nHere is the output on v3.8 with chains=1\r\n```python\r\npymc3 version:  3.8\r\nAuto-assigning NUTS sampler...\r\nInitializing NUTS using jitter+adapt_diag...\r\nSequential sampling (1 chains in 1 job)\r\nNUTS: [sigma, mu]\r\nSampling chain 0, 0 divergences: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1000/1000 [00:01<00:00, 869.02it/s]\r\nOnly one chain was sampled, this makes it impossible to run some convergence checks\r\n```\r\n\r\nHere is the full 3.8 traceback with chains = 2:\r\n```python\r\npymc3 version:  3.8\r\nAuto-assigning NUTS sampler...\r\nInitializing NUTS using jitter+adapt_diag...\r\nMultiprocess sampling (2 chains in 2 jobs)\r\nNUTS: [sigma, mu]\r\nSampling 2 chains, 0 divergences: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2000/2000 [00:00<00:00, 2108.88draws/s]\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 57, in <module>\r\n    main()\r\n  File \"test.py\", line 53, in main\r\n    trace = pm.sample(cores=2, chains=2)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/pymc3/sampling.py\", line 498, in sample\r\n    trace.report._run_convergence_checks(trace, model)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/pymc3/backends/report.py\", line 84, in _run_convergence_checks\r\n    self._ess = ess = ess(trace, var_names=varnames)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/pymc3/stats/__init__.py\", line 24, in wrapped\r\n    return func(*args, **kwargs)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/arviz/stats/diagnostics.py\", line 191, in ess\r\n    dataset = convert_to_dataset(data, group=\"posterior\")\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/arviz/data/converters.py\", line 177, in convert_to_dataset\r\n    inference_data = convert_to_inference_data(obj, group=group, coords=coords, dims=dims)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/arviz/data/converters.py\", line 91, in convert_to_inference_data\r\n    return from_pymc3(trace=kwargs.pop(group), **kwargs)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/arviz/data/io_pymc3.py\", line 531, in from_pymc3\r\n    save_warmup=save_warmup,\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/arviz/data/io_pymc3.py\", line 159, in __init__\r\n    self.observations, self.multi_observations = self.find_observations()\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/arviz/data/io_pymc3.py\", line 172, in find_observations\r\n    multi_observations[key] = val.eval() if hasattr(val, \"eval\") else val\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/theano/gof/graph.py\", line 522, in eval\r\n    self._fn_cache[inputs] = theano.function(inputs, self)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/theano/compile/function.py\", line 317, in function\r\n    output_keys=output_keys)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/theano/compile/pfunc.py\", line 486, in pfunc\r\n    output_keys=output_keys)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/theano/compile/function_module.py\", line 1839, in orig_function\r\n    name=name)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/theano/compile/function_module.py\", line 1487, in __init__\r\n    accept_inplace)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/theano/compile/function_module.py\", line 181, in std_fgraph\r\n    update_mapping=update_mapping)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/theano/gof/fg.py\", line 175, in __init__\r\n    self.__import_r__(output, reason=\"init\")\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/theano/gof/fg.py\", line 346, in __import_r__\r\n    self.__import__(variable.owner, reason=reason)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/theano/gof/fg.py\", line 391, in __import__\r\n    raise MissingInputError(error_msg, variable=r)\r\ntheano.gof.fg.MissingInputError: Input 0 of the graph (indices start from 0), used to compute Elemwise{exp,no_inplace}(sigma_log__), was not provided and not given a value. Use the Theano flag exception_verbosity='high', for more information on this error.\r\n```\r\n\r\nAnd here is the full v3.9.3 traceback with chains=anything:\r\n```python\r\npymc3 version:  3.9.3\r\nAuto-assigning NUTS sampler...\r\nInitializing NUTS using jitter+adapt_diag...\r\nMultiprocess sampling (2 chains in 2 jobs)\r\nNUTS: [sigma, mu]\r\nSampling 2 chains for 1_000 tune and 1_000 draw iterations (2_000 + 2_000 draws total) took 2 seconds.00:01<00:00 Sampling 2 chains, 0 divergences]\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 57, in <module>\r\n    main()\r\n  File \"test.py\", line 53, in main\r\n    trace = pm.sample(cores=2, chains=2)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/pymc3/sampling.py\", line 624, in sample\r\n    idata = arviz.from_pymc3(trace, **ikwargs)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/arviz/data/io_pymc3.py\", line 531, in from_pymc3\r\n    save_warmup=save_warmup,\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/arviz/data/io_pymc3.py\", line 159, in __init__\r\n    self.observations, self.multi_observations = self.find_observations()\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/arviz/data/io_pymc3.py\", line 172, in find_observations\r\n    multi_observations[key] = val.eval() if hasattr(val, \"eval\") else val\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/theano/gof/graph.py\", line 522, in eval\r\n    self._fn_cache[inputs] = theano.function(inputs, self)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/theano/compile/function.py\", line 317, in function\r\n    output_keys=output_keys)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/theano/compile/pfunc.py\", line 486, in pfunc\r\n    output_keys=output_keys)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/theano/compile/function_module.py\", line 1839, in orig_function\r\n    name=name)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/theano/compile/function_module.py\", line 1487, in __init__\r\n    accept_inplace)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/theano/compile/function_module.py\", line 181, in std_fgraph\r\n    update_mapping=update_mapping)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/theano/gof/fg.py\", line 175, in __init__\r\n    self.__import_r__(output, reason=\"init\")\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/theano/gof/fg.py\", line 346, in __import_r__\r\n    self.__import__(variable.owner, reason=reason)\r\n  File \"/home/twenger/anaconda3/lib/python3.7/site-packages/theano/gof/fg.py\", line 391, in __import__\r\n    raise MissingInputError(error_msg, variable=r)\r\ntheano.gof.fg.MissingInputError: Input 0 of the graph (indices start from 0), used to compute Elemwise{exp,no_inplace}(sigma_log__), was not provided and not given a value. Use the Theano flag exception_verbosity='high', for more information on this error.\r\n```\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8 or 3.9.3\r\n* Theano Version: 1.0.5\r\n* Python Version: 3.7.6\r\n* Operating system: Ubuntu 20.04 on Windows Subsystem for Linux 2\r\n* How did you install PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4057/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4057/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4050", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4050/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4050/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4050/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4050", "id": 679183479, "node_id": "MDExOlB1bGxSZXF1ZXN0NDY4MDA1ODk3", "number": 4050, "title": "Fix ExGaussian logp", "user": {"login": "AlexAndorra", "id": 30447180, "node_id": "MDQ6VXNlcjMwNDQ3MTgw", "avatar_url": "https://avatars.githubusercontent.com/u/30447180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexAndorra", "html_url": "https://github.com/AlexAndorra", "followers_url": "https://api.github.com/users/AlexAndorra/followers", "following_url": "https://api.github.com/users/AlexAndorra/following{/other_user}", "gists_url": "https://api.github.com/users/AlexAndorra/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexAndorra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexAndorra/subscriptions", "organizations_url": "https://api.github.com/users/AlexAndorra/orgs", "repos_url": "https://api.github.com/users/AlexAndorra/repos", "events_url": "https://api.github.com/users/AlexAndorra/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexAndorra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-14T14:10:15Z", "updated_at": "2020-08-14T15:48:47Z", "closed_at": "2020-08-14T15:28:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4050", "html_url": "https://github.com/pymc-devs/pymc/pull/4050", "diff_url": "https://github.com/pymc-devs/pymc/pull/4050.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4050.patch", "merged_at": "2020-08-14T15:28:38Z"}, "body": "This is a proper version of #4049, with all the changes related to the ExGaussian's logp.\r\nAs suggested by @junpenglao in #4045, this PR adds a `tt.switch` statement in the `ExGaussian` logp to replace 0 with epsilon. That way, `std_cdf` never returns 0, and `logpow` never returns `-inf`.\r\n\r\nThe changes seem to work: `pm.ExGaussian.dist(0., .25, 1./6).logp(y).eval()` doesn't contain `-inf` anymore, and the model in Discourse doesn't raise a `BadInitialEnergy` error.\r\n\r\nThanks for the reviews \ud83d\udd96", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4050/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4049", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4049/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4049/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4049/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4049", "id": 676993735, "node_id": "MDExOlB1bGxSZXF1ZXN0NDY2MTk3MDA4", "number": 4049, "title": "Fix ExGaussian logp", "user": {"login": "AlexAndorra", "id": 30447180, "node_id": "MDQ6VXNlcjMwNDQ3MTgw", "avatar_url": "https://avatars.githubusercontent.com/u/30447180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexAndorra", "html_url": "https://github.com/AlexAndorra", "followers_url": "https://api.github.com/users/AlexAndorra/followers", "following_url": "https://api.github.com/users/AlexAndorra/following{/other_user}", "gists_url": "https://api.github.com/users/AlexAndorra/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexAndorra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexAndorra/subscriptions", "organizations_url": "https://api.github.com/users/AlexAndorra/orgs", "repos_url": "https://api.github.com/users/AlexAndorra/repos", "events_url": "https://api.github.com/users/AlexAndorra/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexAndorra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2020-08-11T15:53:51Z", "updated_at": "2020-08-14T09:09:28Z", "closed_at": "2020-08-14T09:09:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4049", "html_url": "https://github.com/pymc-devs/pymc/pull/4049", "diff_url": "https://github.com/pymc-devs/pymc/pull/4049.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4049.patch", "merged_at": null}, "body": "As suggested by @junpenglao in #4045, this PR adds a `tt.switch` statement in the `ExGaussian` logp to replace 0 with epsilon. That way, `std_cdf` never returns 0, and `logpow` never returns -inf.\r\n\r\nI'm not sure what I did is very pythonic/theanoesque, so feel free to comment and suggest improvements! It does seem to work though: `pm.ExGaussian.dist(0., .25, 1./6).logp(y).eval()` doesn't contain -inf anymore, and the model in Discourse doesn't raise a `BadInitialEnergy` error.\r\n\r\nOnce these changes are validated, I'll blackify the file for better readibility and update the release notes.\r\nThanks for the reviews \ud83d\udd96 \r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4049/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4049/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4045", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4045/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4045/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4045/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4045", "id": 676621925, "node_id": "MDU6SXNzdWU2NzY2MjE5MjU=", "number": 4045, "title": "ExGaussian logp is numerical unstable", "user": {"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-11T06:34:36Z", "updated_at": "2020-08-14T15:28:38Z", "closed_at": "2020-08-14T15:28:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Reported by user on discourse: https://discourse.pymc.io/t/bad-initial-energy-when-trying-to-build-a-multivariate-exgaussian-model/5591/3\r\n\r\nThere is some numerical problem of the ExGaussian log_prob. Specifically, the `std_cdf` in the line below returns 0., which resulting in `logpow` returns `-inf`\r\n\r\nhttps://github.com/pymc-devs/pymc3/blob/63eba59fe2c42c936136b24babf6ca1e3a777d74/pymc3/distributions/continuous.py#L3274\r\n\r\nminimal reproducible example:\r\n```python\r\nimport numpy as np\r\nimport scipy.stats as st\r\nimport pymc3 as pm\r\n\r\nbeta = 0.5\r\nsigma = 1.0\r\nnu = 1.2\r\n\r\nx = np.linspace(-2, 4, 200)\r\nmu = beta*x\r\ny = st.exponnorm.rvs(nu, loc=mu, scale=sigma)\r\n\r\npm.ExGaussian.dist(0., .25, 1./6).logp(y).tag.test_value  # <== contains -inf\r\n```\r\n\r\nA tt.switch in ExGaussian logp to replace 0 with epsilon should be sufficient to fix this.\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4045/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4037", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4037/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4037/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4037/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4037", "id": 668542395, "node_id": "MDExOlB1bGxSZXF1ZXN0NDU5MDE1NDE5", "number": 4037, "title": "Fix ArviZ version on test environment", "user": {"login": "AlexAndorra", "id": 30447180, "node_id": "MDQ6VXNlcjMwNDQ3MTgw", "avatar_url": "https://avatars.githubusercontent.com/u/30447180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexAndorra", "html_url": "https://github.com/AlexAndorra", "followers_url": "https://api.github.com/users/AlexAndorra/followers", "following_url": "https://api.github.com/users/AlexAndorra/following{/other_user}", "gists_url": "https://api.github.com/users/AlexAndorra/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexAndorra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexAndorra/subscriptions", "organizations_url": "https://api.github.com/users/AlexAndorra/orgs", "repos_url": "https://api.github.com/users/AlexAndorra/repos", "events_url": "https://api.github.com/users/AlexAndorra/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexAndorra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 36, "created_at": "2020-07-30T09:31:24Z", "updated_at": "2020-10-29T20:09:41Z", "closed_at": "2020-08-09T14:34:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4037", "html_url": "https://github.com/pymc-devs/pymc/pull/4037", "diff_url": "https://github.com/pymc-devs/pymc/pull/4037.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4037.patch", "merged_at": "2020-08-09T14:34:19Z"}, "body": "Related to #4034 \r\n- Removed main conda channel from environment-dev.yml\r\n- Added `dill` as pip dependency in environment-dev.yml\r\n- Added kwarg to pytest fixture", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4037/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4009", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4009/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4009/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4009/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4009", "id": 655283240, "node_id": "MDU6SXNzdWU2NTUyODMyNDA=", "number": 4009, "title": "Computation times are very different between two different versions of pymc3", "user": {"login": "tomicapretto", "id": 25507629, "node_id": "MDQ6VXNlcjI1NTA3NjI5", "avatar_url": "https://avatars.githubusercontent.com/u/25507629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomicapretto", "html_url": "https://github.com/tomicapretto", "followers_url": "https://api.github.com/users/tomicapretto/followers", "following_url": "https://api.github.com/users/tomicapretto/following{/other_user}", "gists_url": "https://api.github.com/users/tomicapretto/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomicapretto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomicapretto/subscriptions", "organizations_url": "https://api.github.com/users/tomicapretto/orgs", "repos_url": "https://api.github.com/users/tomicapretto/repos", "events_url": "https://api.github.com/users/tomicapretto/events{/privacy}", "received_events_url": "https://api.github.com/users/tomicapretto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1008939096, "node_id": "MDU6TGFiZWwxMDA4OTM5MDk2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/winOS", "name": "winOS", "color": "f9d0c4", "default": false, "description": "windows OS related"}, {"id": 2107010938, "node_id": "MDU6TGFiZWwyMTA3MDEwOTM4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/help%20wanted", "name": "help wanted", "color": "b58f13", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2020-07-11T21:34:34Z", "updated_at": "2021-06-05T12:06:24Z", "closed_at": "2020-11-12T16:25:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n## Description of your problem\r\n\r\nI want to fit a simple logistic regression in PyMC3 and I have tried with two different versions, 3.8 and 3.9.2. \r\nWhen I use the version 3.8, the sampling takes around 20 minutes, but when I use the latest version the sampling is below 10% of the objective after 20 minutes and the expected waiting time is around 4 hours.\r\n\r\nI am using anaconda and I have uninstalled and installed everything from 0, but nothing changed. In both scenarios I used a different environment that only contains the packages required by the example.\r\n\r\n```python\r\n\r\nimport numpy as np\r\nimport pandas as pd\r\nimport pymc3 as pm\r\nfrom pandas.api.types import CategoricalDtype\r\n\r\n# The original data handling process\r\ndata = pd.read_table(\r\n    \"https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data\",\r\n    header=None, sep = \",\", skipinitialspace=True,\r\n    names=['age', 'workclass', 'fnlwgt', 'education', 'education_num',\r\n                  'marital_status', 'occupation', 'relationship', 'race', 'gender',\r\n                  'captial_gain', 'capital_loss', 'hs_week', 'native_country','income']\r\n)\r\n\r\ncategorical_cols = data.columns[data.dtypes == object].tolist()\r\nfor col in categorical_cols:\r\n    data[col] = data[col].astype('category')\r\n    \r\ndata = data[[\"age\", \"gender\", \"race\", \"education\", \"hs_week\", \"income\"]]\r\n\r\neducation_mapping = {\r\n    \"1st-4th\": \"Primary\", \r\n    \"5th-6th\": \"Primary\", \r\n    \"7th-8th\": \"Primary\", \r\n    \"9th\": \"HS\", \r\n    \"10th\": \"HS\", \r\n    \"11th\": \"HS\", \r\n    \"12th\": \"HS\",\r\n    \"HS-grad\": \"HS grad\", \r\n    \"Some-college\": \"Some college\", \r\n    \"Assoc-acdm\": \"Associate\", \r\n    \"Assoc-voc\": \"Associate\", \r\n    \"Bachelors\": \"Bachelors\", \r\n    \"Masters\": \"Masters\", \r\n    \"Doctorate\": \"Doctorate\",\r\n    \"Professional school\": \"Prof. school\" \r\n}\r\n\r\ndata[\"education_grouped\"] = data[\"education\"].map(education_mapping)\r\n\r\neducation_category_type = CategoricalDtype(\r\n    categories = [\"Primary\", \"HS\", \"HS grad\", \"Some college\",\r\n                  \"Associate\", \"Bachelors\", \"Masters\", \"Prof. school\", \"Doctorate\"], \r\n    ordered=True)\r\n\r\ndata[\"education_grouped\"] = data[\"education_grouped\"].astype(education_category_type)\r\n\r\ndata[\"gender\"] = np.where(data[\"gender\"] == \"Female\", 1, 0)\r\ndata[\"race\"] = np.where(data[\"race\"] == \"White\", 1, 0)\r\ndata[\"age\"] = data[\"age\"] / 10\r\ndata[\"age2\"] = data[\"age\"] ** 2\r\ndata[\"hs_week\"] = data[\"hs_week\"] / 10\r\ndata[\"hs_week2\"] = data[\"hs_week\"] ** 2\r\ndata[\"income\"] = np.where(data[\"income\"] == \">50K\", 1, 0)\r\n\r\nhs = [\"HS grad\", \"Some college\"]\r\nundergrad = [\"Associate\", \"Bachelors\"]\r\ngrad = [\"Masters\", \"Doctorate\", \"Prof. school\"]\r\n\r\ndata[\"education_hs\"] = np.where(data[\"education_grouped\"].isin(hs), 1, 0)\r\ndata[\"education_undergrad\"] = np.where(data[\"education_grouped\"].isin(undergrad), 1, 0)\r\ndata[\"education_grad\"] = np.where(data[\"education_grouped\"].isin(grad), 1, 0)\r\n\r\n# And the model\r\nmodel_str = \" + \".join((\r\n    \"income ~ age\",\r\n    \"age2\",\r\n    \"hs_week\",\r\n    \"hs_week2\",\r\n    \"gender\",\r\n    \"race\"\r\n))\r\n\r\nwith pm.Model() as model:\r\n    pm.glm.GLM.from_formula(\r\n        formula = model_str,\r\n        data = data,\r\n        family = pm.glm.families.Binomial())\r\n    trace = pm.sample(1000, tune=1000, init=\"adapt_diag\")\r\n\r\n# Finally, the session information.\r\nfrom sinfo import sinfo\r\nsinfo()\r\n```\r\nOutput when PyMC3 version is 3.8   \r\n\r\n```python\r\n-----\r\nnumpy       1.18.5\r\npandas      1.0.5\r\npymc3       3.8\r\nsinfo       0.3.1\r\n-----\r\nIPython             7.16.1\r\njupyter_client      6.1.5\r\njupyter_core        4.6.3\r\nnotebook            6.0.3\r\n-----\r\nPython 3.8.3 (default, Jul  2 2020, 17:30:36) [MSC v.1916 64 bit (AMD64)]\r\nWindows-10-10.0.18362-SP0\r\n4 logical CPU cores, AMD64 Family 23 Model 24 Stepping 1, AuthenticAMD\r\n-----\r\nSession information updated at 2020-07-11 17:55\r\n```\r\n![1](https://user-images.githubusercontent.com/25507629/87234169-c8d9ef00-c3a4-11ea-9e17-52250bc59ced.JPG)\r\n\r\n\r\nOutput when PyMC3 version is 3.9.2\r\n\r\n```python\r\n-----\r\nnumpy       1.18.5\r\npandas      1.0.5\r\npymc3       3.9.2\r\nsinfo       0.3.1\r\n-----\r\nIPython             7.16.1\r\njupyter_client      6.1.5\r\njupyter_core        4.6.3\r\nnotebook            6.0.3\r\n-----\r\nPython 3.8.3 (default, Jul  2 2020, 17:30:36) [MSC v.1916 64 bit (AMD64)]\r\nWindows-10-10.0.18362-SP0\r\n4 logical CPU cores, AMD64 Family 23 Model 24 Stepping 1, AuthenticAMD\r\n-----\r\nSession information updated at 2020-07-11 18:25\r\n```\r\nI just terminated the execution before finishing before it was clear it was taking much longer.\r\n\r\n![2](https://user-images.githubusercontent.com/25507629/87234170-cbd4df80-c3a4-11ea-9982-0db6bcadd6ff.JPG)\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8 and 3.9.2\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.8.3\r\n* Operating system: Windows 10\r\n* How did you install PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4009/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4006", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4006/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4006/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4006/events", "html_url": "https://github.com/pymc-devs/pymc/pull/4006", "id": 654228696, "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2OTk2MzEy", "number": 4006, "title": "Fix keep_size for arviz structures.", "user": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 818212053, "node_id": "MDU6TGFiZWw4MTgyMTIwNTM=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/request%20discussion", "name": "request discussion", "color": "dbef5b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/17", "html_url": "https://github.com/pymc-devs/pymc/milestone/17", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/17/labels", "id": 5698577, "node_id": "MDk6TWlsZXN0b25lNTY5ODU3Nw==", "number": 17, "title": "3.9.3", "description": null, "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 23, "state": "closed", "created_at": "2020-07-25T12:49:46Z", "updated_at": "2021-01-22T12:04:38Z", "due_on": null, "closed_at": "2021-01-22T12:04:38Z"}, "comments": 11, "created_at": "2020-07-09T17:28:22Z", "updated_at": "2020-07-28T00:07:46Z", "closed_at": "2020-07-12T22:12:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/4006", "html_url": "https://github.com/pymc-devs/pymc/pull/4006", "diff_url": "https://github.com/pymc-devs/pymc/pull/4006.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/4006.patch", "merged_at": "2020-07-12T22:12:00Z"}, "body": "The `keep_size` kwarg for `sample_posterior_predictive` and `fast_sample_posterior_predictive` didn't handle `arviz.InferenceData` or `xarray.Dataset` arguments correctly when the `keep_size` option is chosen.\n\nAddresses !4004", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4006/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 1, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4006/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4001", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4001/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4001/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4001/events", "html_url": "https://github.com/pymc-devs/pymc/issues/4001", "id": 651161071, "node_id": "MDU6SXNzdWU2NTExNjEwNzE=", "number": 4001, "title": "Systematized Distribution testing overlooks Theano arguments", "user": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}, {"id": 818212053, "node_id": "MDU6TGFiZWw4MTgyMTIwNTM=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/request%20discussion", "name": "request discussion", "color": "dbef5b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-05T22:50:16Z", "updated_at": "2022-01-10T10:42:43Z", "closed_at": "2022-01-10T10:42:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed that our testing framework doesn't perform tests using Theano arguments (not within our systematized tests&mdash;like `TestMatchesScipy`&mdash;at least).  \r\n\r\nThis seems like a pretty big oversight, and appears to have let #3999 go unchecked.\r\n\r\nIn general, I would say that Theano arguments make a much better default than NumPy, so perhaps we should consider changing our test framework to use them.\r\n\r\n_Originally posted by @brandonwillard in https://github.com/pymc-devs/pymc3/pull/4000#issuecomment-653925924_", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/4001/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/4001/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3999", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3999/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3999/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3999/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3999", "id": 651118816, "node_id": "MDU6SXNzdWU2NTExMTg4MTY=", "number": 3999, "title": "Dirichlet doesn't allow basic Theano types", "user": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-05T18:15:17Z", "updated_at": "2020-07-21T20:03:46Z", "closed_at": "2020-07-21T20:03:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `Dirichlet` distribution doesn't allow basic Theano types (e.g. `TensorVariable` and `TensorConstant`) for its parameter.\r\n\r\nThe following raises a `TypeError`:\r\n```python\r\nimport numpy as np\r\nimport pymc3 as pm\r\n\r\nimport theano.tensor as tt\r\n\r\n\r\npm.Dirichlet.dist(tt.as_tensor_variable(np.r_[1, 1]))\r\n```\r\nthe relevant output is\r\n```python\r\nTypeError: The vector of concentration parameters (a) must be a python list or numpy array.\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3999/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3994", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3994/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3994/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3994/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3994", "id": 650522212, "node_id": "MDU6SXNzdWU2NTA1MjIyMTI=", "number": 3994, "title": "Mixture of mixtures works, but not Mixture of Mixture and Single distribution", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-03T11:00:45Z", "updated_at": "2020-07-04T21:05:06Z", "closed_at": "2020-07-04T21:05:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I am trying to model a Mixture between a Mixture and another distribution, but I am getting an error:\r\n\r\n**Minimal Example:**\r\n\r\n```python\r\nwith pm.Model() as m:\r\n    a1 = pm.Normal.dist(mu=0, sigma=1)\r\n    a2 = pm.Normal.dist(mu=0, sigma=1)\r\n    a3 = pm.Normal.dist(mu=0, sigma=1)\r\n    \r\n    w1 = pm.Dirichlet('w1', np.array([1, 1]))    \r\n    mix = pm.Mixture.dist(w=w1, comp_dists=[a1, a2])\r\n    \r\n    w2 = pm.Dirichlet('w2', np.array([1, 1]))\r\n    like = pm.Mixture = pm.Mixture('like', w=w2, comp_dists=[mix, a3], observed=np.random.randn(20))\r\n```\r\n\r\n**Traceback:**\r\n```python\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n~/.local/lib/python3.8/site-packages/pymc3/distributions/mixture.py in _comp_modes(self)\r\n    289         try:\r\n--> 290             return tt.as_tensor_variable(self.comp_dists.mode)\r\n    291         except AttributeError:\r\n\r\nAttributeError: 'list' object has no attribute 'mode'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-8-dedf5c958f15> in <module>\r\n      8 \r\n      9     w2 = pm.Dirichlet('w2', np.array([1, 1]))\r\n---> 10     like = pm.Mixture = pm.Mixture('like', w=w2, comp_dists=[mix, a3], observed=np.random.randn(20))\r\n\r\n~/.local/lib/python3.8/site-packages/pymc3/distributions/distribution.py in __new__(cls, name, *args, **kwargs)\r\n     44                 raise TypeError(\"observed needs to be data but got: {}\".format(type(data)))\r\n     45             total_size = kwargs.pop('total_size', None)\r\n---> 46             dist = cls.dist(*args, **kwargs)\r\n     47             return model.Var(name, dist, data, total_size)\r\n     48         else:\r\n\r\n~/.local/lib/python3.8/site-packages/pymc3/distributions/distribution.py in dist(cls, *args, **kwargs)\r\n     55     def dist(cls, *args, **kwargs):\r\n     56         dist = object.__new__(cls)\r\n---> 57         dist.__init__(*args, **kwargs)\r\n     58         return dist\r\n     59 \r\n\r\n~/.local/lib/python3.8/site-packages/pymc3/distributions/mixture.py in __init__(self, w, comp_dists, *args, **kwargs)\r\n    139 \r\n    140         try:\r\n--> 141             comp_modes = self._comp_modes()\r\n    142             comp_mode_logps = self.logp(comp_modes)\r\n    143             self.mode = comp_modes[tt.argmax(w * comp_mode_logps, axis=-1)]\r\n\r\n~/.local/lib/python3.8/site-packages/pymc3/distributions/mixture.py in _comp_modes(self)\r\n    290             return tt.as_tensor_variable(self.comp_dists.mode)\r\n    291         except AttributeError:\r\n--> 292             return tt.squeeze(tt.stack([comp_dist.mode\r\n    293                                         for comp_dist in self.comp_dists],\r\n    294                                        axis=-1))\r\n\r\n~/.local/lib/python3.8/site-packages/theano/tensor/basic.py in stack(*tensors, **kwargs)\r\n   4726         dtype = scal.upcast(*[i.dtype for i in tensors])\r\n   4727         return theano.tensor.opt.MakeVector(dtype)(*tensors)\r\n-> 4728     return join(axis, *[shape_padaxis(t, axis) for t in tensors])\r\n   4729 \r\n   4730 \r\n\r\n~/.local/lib/python3.8/site-packages/theano/tensor/basic.py in join(axis, *tensors_list)\r\n   4500         return tensors_list[0]\r\n   4501     else:\r\n-> 4502         return join_(axis, *tensors_list)\r\n   4503 \r\n   4504 \r\n\r\n~/.local/lib/python3.8/site-packages/theano/gof/op.py in __call__(self, *inputs, **kwargs)\r\n    613         \"\"\"\r\n    614         return_list = kwargs.pop('return_list', False)\r\n--> 615         node = self.make_node(*inputs, **kwargs)\r\n    616 \r\n    617         if config.compute_test_value != 'off':\r\n\r\n~/.local/lib/python3.8/site-packages/theano/tensor/basic.py in make_node(self, *axis_and_tensors)\r\n   4232             return tensor(dtype=out_dtype, broadcastable=bcastable)\r\n   4233 \r\n-> 4234         return self._make_node_internal(\r\n   4235             axis, tensors, as_tensor_variable_args, output_maker)\r\n   4236 \r\n\r\n~/.local/lib/python3.8/site-packages/theano/tensor/basic.py in _make_node_internal(self, axis, tensors, as_tensor_variable_args, output_maker)\r\n   4299         if not python_all([x.ndim == len(bcastable)\r\n   4300                            for x in as_tensor_variable_args[1:]]):\r\n-> 4301             raise TypeError(\"Join() can only join tensors with the same \"\r\n   4302                             \"number of dimensions.\")\r\n   4303 \r\n\r\nTypeError: Join() can only join tensors with the same number of dimensions.\r\n```\r\n\r\nHowever, if I create a fake Mixture dist for the third distribution, it seems to work:\r\n\r\n```python\r\nwith pm.Model() as m:\r\n    a1 = pm.Normal.dist(mu=0, sigma=1)\r\n    a2 = pm.Normal.dist(mu=0, sigma=1)\r\n    a3 = pm.Normal.dist(mu=0, sigma=1)\r\n    \r\n    w1 = pm.Dirichlet('w1', np.array([1, 1]))    \r\n    mix = pm.Mixture.dist(w=w1, comp_dists=[a1, a2])\r\n    \r\n    fake_mix = pm.Mixture.dist(w=[1, 0], comp_dists=[a3, a3])\r\n    \r\n    w2 = pm.Dirichlet('w2', np.array([1, 1]))\r\n    like = pm.Mixture('like', w=w2, comp_dists=[mix, fake_mix], observed=np.random.randn(20))\r\n```\r\n\r\nI understand that this might not be optimal in the first place, and can certainly be coded as a custom distribution, but is this a design choice or a bug? It could also be just a question of shape handling, but I have no good intuition on how to check for that.\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.8.2\r\n* Operating system: Linux Ubuntu\r\n* How did you install PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3994/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3988", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3988/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3988/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3988/events", "html_url": "https://github.com/pymc-devs/pymc/pull/3988", "id": 648898407, "node_id": "MDExOlB1bGxSZXF1ZXN0NDQyNjI5NDM2", "number": 3988, "title": "Close main process copy of pipe when sampling in parallel", "user": {"login": "aseyboldt", "id": 1882397, "node_id": "MDQ6VXNlcjE4ODIzOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1882397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aseyboldt", "html_url": "https://github.com/aseyboldt", "followers_url": "https://api.github.com/users/aseyboldt/followers", "following_url": "https://api.github.com/users/aseyboldt/following{/other_user}", "gists_url": "https://api.github.com/users/aseyboldt/gists{/gist_id}", "starred_url": "https://api.github.com/users/aseyboldt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aseyboldt/subscriptions", "organizations_url": "https://api.github.com/users/aseyboldt/orgs", "repos_url": "https://api.github.com/users/aseyboldt/repos", "events_url": "https://api.github.com/users/aseyboldt/events{/privacy}", "received_events_url": "https://api.github.com/users/aseyboldt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-07-01T11:15:37Z", "updated_at": "2020-07-03T07:34:51Z", "closed_at": "2020-07-03T07:34:51Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/3988", "html_url": "https://github.com/pymc-devs/pymc/pull/3988", "diff_url": "https://github.com/pymc-devs/pymc/pull/3988.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/3988.patch", "merged_at": null}, "body": "When starting parallel sampling, we first create a pipe for communication. We pass one end to the new worker thread, but we should still close our own local copy, so that the pipe breaks when the remote process dies for some reason.\r\nIf we don't, then when a worker dies the main process will wait for new samples, but since there is still an open end of the queue it will not exit with a `ConnectionResetError`, but wait indefinitely.\r\nClosing the connection will prevent this. So when a worker dies, sampling stops and errors out.\r\nWe can test this behaviour by producing a segfault on purpose:\r\n```python\r\nimport pymc3 as pm\r\nimport theano\r\nimport theano.tensor as tt\r\nimport random\r\nimport ctypes\r\nimport numpy as np\r\n\r\n@theano.as_op([tt.dvector], [tt.dvector])\r\ndef somefunc(a):\r\n    if random.random() < 0.01:\r\n        # Segfault\r\n        ctypes.string_at(0)\r\n    return 2 * np.array(a)\r\n\r\nwith pm.Model() as model:\r\n    x = pm.Normal('x', shape=2)\r\n    pm.Normal('y', mu=somefunc(x), shape=2)\r\n    \r\n    step = pm.Metropolis()\r\n    trace = pm.sample(step=step)\r\n```\r\n\r\nUnfortunately there is a small probability that this will also segfault the main process, so I don't really know how to create a proper test out of this.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3988/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3987", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3987/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3987/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3987/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3987", "id": 648855286, "node_id": "MDU6SXNzdWU2NDg4NTUyODY=", "number": 3987, "title": "GP Periodic Kernel uses uncommon formula", "user": {"login": "AlexAndorra", "id": 30447180, "node_id": "MDQ6VXNlcjMwNDQ3MTgw", "avatar_url": "https://avatars.githubusercontent.com/u/30447180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexAndorra", "html_url": "https://github.com/AlexAndorra", "followers_url": "https://api.github.com/users/AlexAndorra/followers", "following_url": "https://api.github.com/users/AlexAndorra/following{/other_user}", "gists_url": "https://api.github.com/users/AlexAndorra/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexAndorra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexAndorra/subscriptions", "organizations_url": "https://api.github.com/users/AlexAndorra/orgs", "repos_url": "https://api.github.com/users/AlexAndorra/repos", "events_url": "https://api.github.com/users/AlexAndorra/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexAndorra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-01T10:08:13Z", "updated_at": "2020-07-17T08:19:34Z", "closed_at": "2020-07-17T08:19:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As discussed [on the Discourse](https://discourse.pymc.io/t/gp-periodic-kernel-is-pymc3-different-from-other-sources/5348/2), PyMC3's `Periodic` kernel is [implemented as](https://docs.pymc.io/api/gp/cov.html#pymc3.gp.cov.Periodic):\r\n\r\n![equation](https://latex.codecogs.com/svg.latex?k%28x%2C%20x%27%29%20%3D%20%5Cmathrm%7Bexp%7D%5Cleft%28%20-%5Cfrac%7B%5Cmathrm%7Bsin%7D%5E2%28%5Cpi%20%7Cx-x%27%7C%20%5Cfrac%7B1%7D%7BT%7D%29%7D%7B2%20%5Cell%5E2%7D%20%5Cright%29)\r\n\r\nBut, in other sources such as David Duvenaud\u2019s [Kernel Cookbook](https://www.cs.toronto.edu/~duvenaud/cookbook/), as well as the [NB for mean and cov functions](https://docs.pymc.io/notebooks/GP-MeansAndCovs.html?highlight=periodic#Constructing-Periodic-using-WarpedInput), the formula is given by:\r\n![equation](https://latex.codecogs.com/svg.latex?k%28x%2C%20x%27%29%20%3D%20%5Cmathrm%7Bexp%7D%5Cleft%28%20-%5Cfrac%7B2%20%5Cmathrm%7Bsin%7D%5E2%28%5Cpi%20%7Cx-x%27%7C%20%5Cfrac%7B1%7D%7BT%7D%29%7D%7B%5Cell%5E2%7D%20%5Cright%29)\r\n\r\nAccording to @bwengals, this changes the interpretation of the lengthscale: a constant factor changes how you think of the lengthscale and what priors you\u2019d set on it. \r\nSo, **ideally, PyMC3's implementation should be changed to the second equation above** -- note that this would not be backwards-compatible then, so it should be accompanied by a warning. _Does anybody disagree?_\r\n\r\nA final note: it seems like we\u2019re using another slightly different implementation in PyMC**4**:\r\n\r\n![equation](https://latex.codecogs.com/svg.latex?k%28x%2C%20x%27%29%20%3D%20%5Csigma%5E2%20%5Cmathrm%7Bexp%7D%5Cleft%28%20-%5Cfrac%7B2%5Cmathrm%7Bsin%7D%5E2%28%5Cpi%20%7C%7Cx-x%27%7C%7C%5E2%20%5Cfrac%7B1%7D%7BT%7D%29%7D%7B%5Cell%5E2%7D%20%5Cright%29)\r\n@tirthasheshpatel do you confirm it is equivalent to the standard formula? I notice there is a new `sigma ** 2` parameter and the distance between `x` and `x'` is squared \ud83e\udd14 ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3987/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3985", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3985/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3985/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3985/events", "html_url": "https://github.com/pymc-devs/pymc/pull/3985", "id": 647990929, "node_id": "MDExOlB1bGxSZXF1ZXN0NDQxODc4ODc2", "number": 3985, "title": "Fix `axis` handling of `random`method in GRW", "user": {"login": "Rish001", "id": 21169674, "node_id": "MDQ6VXNlcjIxMTY5Njc0", "avatar_url": "https://avatars.githubusercontent.com/u/21169674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rish001", "html_url": "https://github.com/Rish001", "followers_url": "https://api.github.com/users/Rish001/followers", "following_url": "https://api.github.com/users/Rish001/following{/other_user}", "gists_url": "https://api.github.com/users/Rish001/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rish001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rish001/subscriptions", "organizations_url": "https://api.github.com/users/Rish001/orgs", "repos_url": "https://api.github.com/users/Rish001/repos", "events_url": "https://api.github.com/users/Rish001/events{/privacy}", "received_events_url": "https://api.github.com/users/Rish001/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/17", "html_url": "https://github.com/pymc-devs/pymc/milestone/17", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/17/labels", "id": 5698577, "node_id": "MDk6TWlsZXN0b25lNTY5ODU3Nw==", "number": 17, "title": "3.9.3", "description": null, "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 23, "state": "closed", "created_at": "2020-07-25T12:49:46Z", "updated_at": "2021-01-22T12:04:38Z", "due_on": null, "closed_at": "2021-01-22T12:04:38Z"}, "comments": 13, "created_at": "2020-06-30T08:48:38Z", "updated_at": "2020-07-28T00:08:18Z", "closed_at": "2020-07-24T16:25:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/3985", "html_url": "https://github.com/pymc-devs/pymc/pull/3985", "diff_url": "https://github.com/pymc-devs/pymc/pull/3985.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/3985.patch", "merged_at": "2020-07-24T16:25:56Z"}, "body": "This PR made a change in the `_random()` method of `GaussianRandomWalk class` of `pymc3/distributions/timeseries.py` so as to generate a matrix where individual rows are instances of Guassian Random walk starting from 0.\r\n\r\nAs discussed in #3962 there is an issue in `.rvs(size)` method in the scipy library when size is a tuple consisting of two items like (500,10). Due to this issue, I had to construct a loop that calls the said method for 1d array and fill up the aforementioned matrix.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3985/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3979", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3979/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3979/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3979/events", "html_url": "https://github.com/pymc-devs/pymc/pull/3979", "id": 644020154, "node_id": "MDExOlB1bGxSZXF1ZXN0NDM4NzE2Mjk5", "number": 3979, "title": "add regression test for issue 3965", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/16", "html_url": "https://github.com/pymc-devs/pymc/milestone/16", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/16/labels", "id": 5575418, "node_id": "MDk6TWlsZXN0b25lNTU3NTQxOA==", "number": 16, "title": "3.9.2", "description": null, "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2020-06-23T17:33:02Z", "updated_at": "2021-01-22T12:04:35Z", "due_on": null, "closed_at": "2021-01-22T12:04:35Z"}, "comments": 0, "created_at": "2020-06-23T17:32:44Z", "updated_at": "2020-06-24T08:52:03Z", "closed_at": "2020-06-24T08:51:58Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/3979", "html_url": "https://github.com/pymc-devs/pymc/pull/3979", "diff_url": "https://github.com/pymc-devs/pymc/pull/3979.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/3979.patch", "merged_at": "2020-06-24T08:51:57Z"}, "body": "This PR is supposed to fix #3965.\r\n\r\nDepending on what your PR does, here are a few things you might want to address in the description:\r\n+ [x] no breaking changes, just bugfix\r\n+ [x] in `quadpotential.py`, the `tune` argument wasn't passed to the `update(point, grad, tune)` method\r\n+ [x] added a regression test (supposed to fail the first CI run)\r\n+ [x] <s>right before it's ready to merge, mention the PR in the RELEASE-NOTES.md</s> will mention in follow-up PR\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3979/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3970", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3970/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3970/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3970/events", "html_url": "https://github.com/pymc-devs/pymc/pull/3970", "id": 639864800, "node_id": "MDExOlB1bGxSZXF1ZXN0NDM1Mzc3NDcx", "number": 3970, "title": "Fix tarball generation as 3.9.1 release", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 34672788, "node_id": "MDU6TGFiZWwzNDY3Mjc4OA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/release", "name": "release", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-16T17:58:44Z", "updated_at": "2020-06-16T18:45:48Z", "closed_at": "2020-06-16T18:45:20Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/3970", "html_url": "https://github.com/pymc-devs/pymc/pull/3970", "diff_url": "https://github.com/pymc-devs/pymc/pull/3970.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/3970.patch", "merged_at": "2020-06-16T18:45:20Z"}, "body": "The 3.9.0 release did not include a tarball, because it was bigger than the 60 MB upload limit by PyPI.\r\n\r\nPyPI unfortunately did accept the Wheel and published it as a release.\r\nAs a result `pip install --no-binary pymc3 pymc3` still installs 3.8.\r\n\r\nWith these changes, the tarball reduces to <2 MB and the version is bumped to `3.9.1` so we can release the \"complete\" package right away.\r\n+ removes docs/* from the tarball to fix PyPI size limits (setup.py and MANIFEST.in)\r\n+ updates the release notes with 3.9.0/3.9.1 sections\r\n+ black applied to setup.py\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3970/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3962", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3962/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3962/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3962/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3962", "id": 638237422, "node_id": "MDU6SXNzdWU2MzgyMzc0MjI=", "number": 3962, "title": "GaussianRandomWalk prior predictive is broken", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-06-13T21:36:13Z", "updated_at": "2020-07-24T16:25:56Z", "closed_at": "2020-07-24T16:25:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nWhen running a `sample_prior_predictive` for a `GaussianRandomWalk`, the result looks not even close to what one would expect:\r\n\r\n```\r\nx = numpy.arange(0, 10)\r\nwith pymc3.Model() as pmodel:\r\n    grw = pymc3.GaussianRandomWalk('grw', mu=0, sd=1, shape=len(x))\r\n    pp = pymc3.sample_prior_predictive()\r\nfig, (left, right) = pyplot.subplots(ncols=2, figsize=(10,5))\r\nfor i in numpy.random.randint(0, 500, size=40):\r\n    left.plot(x, pp['grw'][i,:])\r\nleft.set_title('sample_prior_predictive')    \r\nfor _ in range(50):\r\n    right.plot(x, grw.random())\r\nright.set_title('.random()')\r\npyplot.show()\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/5894642/84579474-54745600-adce-11ea-8fc8-5f7bfde107da.png)\r\n\r\n## Versions and main components\r\n* PyMC3 Version: latest master\r\n* Theano Version: the one and only\r\n* Python Version: 3.6.8\r\n* Operating system: Windows\r\n* How did you install PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3962/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3917", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3917/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3917/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3917/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3917", "id": 615376605, "node_id": "MDU6SXNzdWU2MTUzNzY2MDU=", "number": 3917, "title": "plot_gp_dist fails to plot band on some inputs", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-10T11:58:51Z", "updated_at": "2020-05-10T16:38:50Z", "closed_at": "2020-05-10T16:38:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nThe `pymc3.gp.util.plot_dist` helper function is super useful, making really beautiful plots most of the time.\r\n\r\nOn some inputs however, it reproducibly fails to plot the band.\r\n\r\nHere are numpy arrays of GP samples, one of them works, the other doesn't:\r\n\r\n[x_dense.txt](https://github.com/pymc-devs/pymc3/files/4605589/x_dense.txt)\r\n[y_samples_bad.txt](https://github.com/pymc-devs/pymc3/files/4605590/y_samples_bad.txt)\r\n[y_samples_good.txt](https://github.com/pymc-devs/pymc3/files/4605591/y_samples_good.txt)\r\n\r\n```python\r\nfor cond in ['good', 'bad']:\r\n    print(f'With {cond} inputs:')\r\n    x_dense = numpy.loadtxt('x_dense.txt')\r\n    y_samples = numpy.loadtxt(f'y_samples_{cond}.txt')\r\n    print(f'y_samples.shape = {y_samples.shape}')\r\n\r\n    fig, axs = pyplot.subplots(ncols=2, figsize=(9, 3), dpi=140, sharey='row')\r\n\r\n    pymc3.gp.util.plot_gp_dist(axs[0], y_samples, x_dense)\r\n    axs[0].set_title('plot_gp_dist')\r\n\r\n    axs[1].set_title('pyplot.plot')\r\n    for line in y_samples:\r\n        axs[1].plot(x_dense, line, color='black', linewidth=0.2, alpha=0.1)\r\n\r\n    pyplot.show()\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/5894642/81498582-0dbea800-92c6-11ea-989b-2d9b422ced96.png)\r\n\r\nI've seen the problem before, but always assumed it was because of a bad trace or so, but it's clearly just a plotting issue.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: master\r\n* Python Version: 3.6\r\n* Operating system: Windows\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3917/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3899", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3899/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3899/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3899/events", "html_url": "https://github.com/pymc-devs/pymc/pull/3899", "id": 610491717, "node_id": "MDExOlB1bGxSZXF1ZXN0NDExOTIyNTY1", "number": 3899, "title": "changed ar1 logp to use ar1 precision instead of innovation precision", "user": {"login": "ljmartin", "id": 8262765, "node_id": "MDQ6VXNlcjgyNjI3NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/8262765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljmartin", "html_url": "https://github.com/ljmartin", "followers_url": "https://api.github.com/users/ljmartin/followers", "following_url": "https://api.github.com/users/ljmartin/following{/other_user}", "gists_url": "https://api.github.com/users/ljmartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljmartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljmartin/subscriptions", "organizations_url": "https://api.github.com/users/ljmartin/orgs", "repos_url": "https://api.github.com/users/ljmartin/repos", "events_url": "https://api.github.com/users/ljmartin/events{/privacy}", "received_events_url": "https://api.github.com/users/ljmartin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "AlexAndorra", "id": 30447180, "node_id": "MDQ6VXNlcjMwNDQ3MTgw", "avatar_url": "https://avatars.githubusercontent.com/u/30447180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexAndorra", "html_url": "https://github.com/AlexAndorra", "followers_url": "https://api.github.com/users/AlexAndorra/followers", "following_url": "https://api.github.com/users/AlexAndorra/following{/other_user}", "gists_url": "https://api.github.com/users/AlexAndorra/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexAndorra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexAndorra/subscriptions", "organizations_url": "https://api.github.com/users/AlexAndorra/orgs", "repos_url": "https://api.github.com/users/AlexAndorra/repos", "events_url": "https://api.github.com/users/AlexAndorra/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexAndorra/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "AlexAndorra", "id": 30447180, "node_id": "MDQ6VXNlcjMwNDQ3MTgw", "avatar_url": "https://avatars.githubusercontent.com/u/30447180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexAndorra", "html_url": "https://github.com/AlexAndorra", "followers_url": "https://api.github.com/users/AlexAndorra/followers", "following_url": "https://api.github.com/users/AlexAndorra/following{/other_user}", "gists_url": "https://api.github.com/users/AlexAndorra/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexAndorra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexAndorra/subscriptions", "organizations_url": "https://api.github.com/users/AlexAndorra/orgs", "repos_url": "https://api.github.com/users/AlexAndorra/repos", "events_url": "https://api.github.com/users/AlexAndorra/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexAndorra/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/15", "html_url": "https://github.com/pymc-devs/pymc/milestone/15", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/15/labels", "id": 5410544, "node_id": "MDk6TWlsZXN0b25lNTQxMDU0NA==", "number": 15, "title": "3.9.0", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 15, "state": "closed", "created_at": "2020-05-12T12:29:04Z", "updated_at": "2021-01-22T12:04:32Z", "due_on": null, "closed_at": "2021-01-22T12:04:32Z"}, "comments": 22, "created_at": "2020-05-01T01:08:42Z", "updated_at": "2020-06-11T19:20:58Z", "closed_at": "2020-06-11T19:20:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/3899", "html_url": "https://github.com/pymc-devs/pymc/pull/3899", "diff_url": "https://github.com/pymc-devs/pymc/pull/3899.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/3899.patch", "merged_at": "2020-06-11T19:20:58Z"}, "body": "Addresses https://github.com/pymc-devs/pymc3/issues/3892\r\n\r\nThe previous `logp` method for the AR1 model used the precision of the innovation term as the precision for the first observation. Assuming the AR(1) process was initiated in the infinite past, the first observation should be modelled as coming from anywhere in the dispersion of the whole AR(1) process. \r\n\r\nI made a previous PR (https://github.com/pymc-devs/pymc3/pull/3897) which I have now closed. It had duplicated code since I now realise that `tau_e` (the innovation precision) and `tau` (the AR(1) precision) had already been defined, and the fix just needed a switch from `tau_e` to `tau` for the likelihood of the first observation.\r\ncheers ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3899/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3847", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3847/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3847/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3847/events", "html_url": "https://github.com/pymc-devs/pymc/pull/3847", "id": 585300353, "node_id": "MDExOlB1bGxSZXF1ZXN0MzkxNzE5MDU1", "number": 3847, "title": "WIP: Address issue 3762", "user": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-20T20:06:15Z", "updated_at": "2020-11-30T07:52:47Z", "closed_at": "2020-11-30T07:52:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/3847", "html_url": "https://github.com/pymc-devs/pymc/pull/3847", "diff_url": "https://github.com/pymc-devs/pymc/pull/3847.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/3847.patch", "merged_at": null}, "body": "Address issue #3762.\n\nSo far have only replicated it.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3847/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3836", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3836/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3836/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3836/events", "html_url": "https://github.com/pymc-devs/pymc/pull/3836", "id": 583970825, "node_id": "MDExOlB1bGxSZXF1ZXN0MzkwNjM3NTAz", "number": 3836, "title": "Closes #3051 - logp numpy array input fixed", "user": {"login": "Ahanmr", "id": 26196002, "node_id": "MDQ6VXNlcjI2MTk2MDAy", "avatar_url": "https://avatars.githubusercontent.com/u/26196002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ahanmr", "html_url": "https://github.com/Ahanmr", "followers_url": "https://api.github.com/users/Ahanmr/followers", "following_url": "https://api.github.com/users/Ahanmr/following{/other_user}", "gists_url": "https://api.github.com/users/Ahanmr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ahanmr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ahanmr/subscriptions", "organizations_url": "https://api.github.com/users/Ahanmr/orgs", "repos_url": "https://api.github.com/users/Ahanmr/repos", "events_url": "https://api.github.com/users/Ahanmr/events{/privacy}", "received_events_url": "https://api.github.com/users/Ahanmr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 818212053, "node_id": "MDU6TGFiZWw4MTgyMTIwNTM=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/request%20discussion", "name": "request discussion", "color": "dbef5b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-03-18T20:02:10Z", "updated_at": "2020-05-05T11:54:05Z", "closed_at": "2020-05-05T11:53:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/3836", "html_url": "https://github.com/pymc-devs/pymc/pull/3836", "diff_url": "https://github.com/pymc-devs/pymc/pull/3836.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/3836.patch", "merged_at": "2020-05-05T11:53:53Z"}, "body": "Converts `int` type to `array(2, dtype=int32)` to parse value to `astype` and allows arguments to `logp(self,value)` when called with numpy array in `master/pymc3/distributions/multivariate.py`", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3836/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3821", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3821/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3821/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3821/events", "html_url": "https://github.com/pymc-devs/pymc/pull/3821", "id": 573518588, "node_id": "MDExOlB1bGxSZXF1ZXN0MzgyMDIzMjkx", "number": 3821, "title": "Fix number of tune steps with cores>1", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 818212053, "node_id": "MDU6TGFiZWw4MTgyMTIwNTM=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/request%20discussion", "name": "request discussion", "color": "dbef5b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-01T10:02:36Z", "updated_at": "2020-03-01T12:56:00Z", "closed_at": "2020-03-01T12:53:55Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/3821", "html_url": "https://github.com/pymc-devs/pymc/pull/3821", "diff_url": "https://github.com/pymc-devs/pymc/pull/3821.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/3821.patch", "merged_at": "2020-03-01T12:53:55Z"}, "body": "The main iterator in multiprocess sampling took draws before checking the `draw == self._tune` condition. As a result, `sample(cores>1)` always took one tune draw more than it should have.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3821/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3811", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3811/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3811/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3811/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3811", "id": 567147855, "node_id": "MDU6SXNzdWU1NjcxNDc4NTU=", "number": 3811, "title": "Cannot successfully run tests locally", "user": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2543051866, "node_id": "MDU6TGFiZWwyNTQzMDUxODY2", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/macOS", "name": "macOS", "color": "f9d0c4", "default": false, "description": "macOS related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2020-02-18T20:46:20Z", "updated_at": "2020-11-29T16:53:55Z", "closed_at": "2020-11-29T15:58:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I get chain failure errors on two of the tests:\r\n\r\n`pymc3/tests/test_sampling.py::TestSamplePPC.test_deterministic_of_observed `and `pymc3/tests/test_sampling.py::TestSamplePPC.test_deterministic_of_observed_modified_interface` \r\n\r\nI have destroyed my `pymc3` virtual environment twice, and reinstalled first with 3.7.1 and second with 3.6.8, and I still get the problem.\r\n\r\n## Description of your problem\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```\r\npytest pymc3/tests/test_sampling.py::TestSamplePPC::test_deterministic_of_observed\r\n```\r\n\r\n(alas, this is obviously *not* reproducible)\r\n\r\n**Please provide the full traceback.**\r\n```python\r\npymc3.parallel_sampling.RemoteTraceback: \r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"/Users/rpg/src/pymc3/pymc3/parallel_sampling.py\", line 128, in run\r\n    self._start_loop()\r\n  File \"/Users/rpg/src/pymc3/pymc3/parallel_sampling.py\", line 178, in _start_loop\r\n    point, stats = self._compute_point()\r\n  File \"/Users/rpg/src/pymc3/pymc3/parallel_sampling.py\", line 209, in _compute_point\r\n    point, stats = self._step_method.step(self._point)\r\n  File \"/Users/rpg/src/pymc3/pymc3/step_methods/arraystep.py\", line 263, in step\r\n    apoint, stats = self.astep(array)\r\n  File \"/Users/rpg/src/pymc3/pymc3/step_methods/hmc/base_hmc.py\", line 144, in astep\r\n    self.potential.raise_ok(self._logp_dlogp_func._ordering.vmap)\r\n  File \"/Users/rpg/src/pymc3/pymc3/step_methods/hmc/quadpotential.py\", line 255, in raise_ok\r\n    raise ValueError('\\n'.join(errmsg))\r\nValueError: Mass matrix contains zeros on the diagonal. \r\nThe derivative of RV `sd__in_2_log__`.ravel()[0] is zero.\r\nThe derivative of RV `mu_in_2`.ravel()[0] is zero.\r\nThe derivative of RV `sd_in_1_log__`.ravel()[0] is zero.\r\nThe derivative of RV `mu_in_1`.ravel()[0] is zero.\r\n\"\"\"\r\n\r\nThe above exception was the direct cause of the following exception:\r\npymc3.parallel_sampling.RemoteTraceback: \r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"/Users/rpg/src/pymc3/pymc3/parallel_sampling.py\", line 128, in run\r\n    self._start_loop()\r\n  File \"/Users/rpg/src/pymc3/pymc3/parallel_sampling.py\", line 178, in _start_loop\r\n    point, stats = self._compute_point()\r\n  File \"/Users/rpg/src/pymc3/pymc3/parallel_sampling.py\", line 209, in _compute_point\r\n    point, stats = self._step_method.step(self._point)\r\n  File \"/Users/rpg/src/pymc3/pymc3/step_methods/arraystep.py\", line 263, in step\r\n    apoint, stats = self.astep(array)\r\n  File \"/Users/rpg/src/pymc3/pymc3/step_methods/hmc/base_hmc.py\", line 144, in astep\r\n    self.potential.raise_ok(self._logp_dlogp_func._ordering.vmap)\r\n  File \"/Users/rpg/src/pymc3/pymc3/step_methods/hmc/quadpotential.py\", line 255, in raise_ok\r\n    raise ValueError('\\n'.join(errmsg))\r\nValueError: Mass matrix contains zeros on the diagonal. \r\nThe derivative of RV `sd__in_2_log__`.ravel()[0] is zero.\r\nThe derivative of RV `mu_in_2`.ravel()[0] is zero.\r\nThe derivative of RV `sd_in_1_log__`.ravel()[0] is zero.\r\nThe derivative of RV `mu_in_1`.ravel()[0] is zero.\r\n\"\"\"\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nValueError: Mass matrix contains zeros on the diagonal. \r\nThe derivative of RV `sd__in_2_log__`.ravel()[0] is zero.\r\nThe derivative of RV `mu_in_2`.ravel()[0] is zero.\r\nThe derivative of RV `sd_in_1_log__`.ravel()[0] is zero.\r\nThe derivative of RV `mu_in_1`.ravel()[0] is zero.\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nself = <pymc3.tests.test_sampling.TestSamplePPC object at 0x136a67cf8>\r\n\r\n    def test_deterministic_of_observed(self):\r\n        meas_in_1 = pm.theanof.floatX(2 + 4 * np.random.randn(100))\r\n        meas_in_2 = pm.theanof.floatX(5 + 4 * np.random.randn(100))\r\n        with pm.Model() as model:\r\n            mu_in_1 = pm.Normal(\"mu_in_1\", 0, 1)\r\n            sigma_in_1 = pm.HalfNormal(\"sd_in_1\", 1)\r\n            mu_in_2 = pm.Normal(\"mu_in_2\", 0, 1)\r\n            sigma_in_2 = pm.HalfNormal(\"sd__in_2\", 1)\r\n    \r\n            in_1 = pm.Normal(\"in_1\", mu_in_1, sigma_in_1, observed=meas_in_1)\r\n            in_2 = pm.Normal(\"in_2\", mu_in_2, sigma_in_2, observed=meas_in_2)\r\n            out_diff = in_1 + in_2\r\n            pm.Deterministic(\"out\", out_diff)\r\n    \r\n>           trace = pm.sample(100)\r\n\r\npymc3/tests/test_sampling.py:424: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\npymc3/sampling.py:493: in sample\r\n    trace = _mp_sample(**sample_args)\r\npymc3/sampling.py:1351: in _mp_sample\r\n    for draw in sampler:\r\npymc3/parallel_sampling.py:412: in __iter__\r\n    draw = ProcessAdapter.recv_draw(self._active)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nprocesses = [<pymc3.parallel_sampling.ProcessAdapter object at 0x1038060b8>], timeout = 3600\r\n\r\n    @staticmethod\r\n    def recv_draw(processes, timeout=3600):\r\n        if not processes:\r\n            raise ValueError(\"No processes.\")\r\n        pipes = [proc._msg_pipe for proc in processes]\r\n        ready = multiprocessing.connection.wait(pipes)\r\n        if not ready:\r\n            raise multiprocessing.TimeoutError(\"No message from samplers.\")\r\n        idxs = {id(proc._msg_pipe): proc for proc in processes}\r\n        proc = idxs[id(ready[0])]\r\n        msg = ready[0].recv()\r\n    \r\n        if msg[0] == \"error\":\r\n            warns, old_error = msg[1:]\r\n            if warns is not None:\r\n                error = ParallelSamplingError(str(old_error), proc.chain, warns)\r\n            else:\r\n                error = RuntimeError(\"Chain %s failed.\" % proc.chain)\r\n>           raise error from old_error\r\nE           RuntimeError: Chain 2 failed.\r\n\r\npymc3/parallel_sampling.py:314: RuntimeError\r\n---------------------------------------------------------------- Captured stdout call -----------------------------------------------------------------\r\n\u2588\r\n---------------------------------------------------------------- Captured stderr call -----------------------------------------------------------------\r\nOnly 100 samples in chain.\r\nAuto-assigning NUTS sampler...\r\nInitializing NUTS using jitter+adapt_diag...\r\nMultiprocess sampling (4 chains in 4 jobs)\r\nNUTS: [sd__in_2, mu_in_2, sd_in_1, mu_in_1]\r\n------------------------------------------------------------------ Captured log call ------------------------------------------------------------------\r\nWARNING  pymc3:sampling.py:427 Only 100 samples in chain.\r\nINFO     pymc3:sampling.py:437 Auto-assigning NUTS sampler...\r\nINFO     pymc3:sampling.py:1860 Initializing NUTS using jitter+adapt_diag...\r\nINFO     pymc3:sampling.py:490 Multiprocess sampling (4 chains in 4 jobs)\r\nINFO     pymc3:sampling.py:222 NUTS: [sd__in_2, mu_in_2, sd_in_1, mu_in_1]\r\n============================================================ 1 failed in 61.19s (0:01:01) =============================================================\r\n\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\nAttaching output of `pip freeze` from Python 3.6.8 virtual environment.\r\n[pip_freeze_.txt](https://github.com/pymc-devs/pymc3/files/4221596/pip_freeze_.txt)\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 48b8749b3662c72c9d8fa1e690641a4a2613c395\r\n* Theano Version: 1.0.4\r\n* Python Version:  3.6.8\r\n* Operating system: MacOS 10.15.3\r\n* How did you install PyMC3:  `pip install -e`\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3811/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3796", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3796/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3796/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3796/events", "html_url": "https://github.com/pymc-devs/pymc/pull/3796", "id": 560369095, "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxMzcxMTAz", "number": 3796, "title": "Reset tuned Metropolis parameters in sequential sampling of chains", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 818212053, "node_id": "MDU6TGFiZWw4MTgyMTIwNTM=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/request%20discussion", "name": "request discussion", "color": "dbef5b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-05T13:23:01Z", "updated_at": "2020-02-06T16:08:52Z", "closed_at": "2020-02-06T12:54:39Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/3796", "html_url": "https://github.com/pymc-devs/pymc/pull/3796", "diff_url": "https://github.com/pymc-devs/pymc/pull/3796.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/3796.patch", "merged_at": "2020-02-06T12:54:39Z"}, "body": "+ [x] add a regression test that detects the issue\r\n+ [x] implement the fix for #3733 \r\n+ [x] update release notes", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3796/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3794", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3794/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3794/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3794/events", "html_url": "https://github.com/pymc-devs/pymc/pull/3794", "id": 558567310, "node_id": "MDExOlB1bGxSZXF1ZXN0MzY5OTE3Njc2", "number": 3794, "title": "Pandas 1.0 compatibility: to_numpy() instead of as_matrix()", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 818212053, "node_id": "MDU6TGFiZWw4MTgyMTIwNTM=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/request%20discussion", "name": "request discussion", "color": "dbef5b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-01T17:03:45Z", "updated_at": "2021-08-07T11:22:37Z", "closed_at": "2020-02-01T20:06:09Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/3794", "html_url": "https://github.com/pymc-devs/pymc/pull/3794", "diff_url": "https://github.com/pymc-devs/pymc/pull/3794.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/3794.patch", "merged_at": "2020-02-01T20:06:08Z"}, "body": "Over in #3784 my pipeline broke because of the pandas 1.0 release.\r\n\r\nThis PR fixes the incompatibilities that caused the tests to fail.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3794/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3792", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3792/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3792/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3792/events", "html_url": "https://github.com/pymc-devs/pymc/pull/3792", "id": 556109295, "node_id": "MDExOlB1bGxSZXF1ZXN0MzY3OTI5ODEw", "number": 3792, "title": "Always add values from drawn dict to givens", "user": {"login": "lucianopaz", "id": 5230109, "node_id": "MDQ6VXNlcjUyMzAxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5230109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucianopaz", "html_url": "https://github.com/lucianopaz", "followers_url": "https://api.github.com/users/lucianopaz/followers", "following_url": "https://api.github.com/users/lucianopaz/following{/other_user}", "gists_url": "https://api.github.com/users/lucianopaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucianopaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucianopaz/subscriptions", "organizations_url": "https://api.github.com/users/lucianopaz/orgs", "repos_url": "https://api.github.com/users/lucianopaz/repos", "events_url": "https://api.github.com/users/lucianopaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lucianopaz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 2809192918, "node_id": "MDU6TGFiZWwyODA5MTkyOTE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v3", "name": "v3", "color": "F92E0C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/23", "html_url": "https://github.com/pymc-devs/pymc/milestone/23", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/23/labels", "id": 6552014, "node_id": "MDk6TWlsZXN0b25lNjU1MjAxNA==", "number": 23, "title": "vNext (3.11.3)", "description": "", "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 25, "state": "closed", "created_at": "2021-03-16T14:26:51Z", "updated_at": "2021-08-20T16:50:10Z", "due_on": null, "closed_at": "2021-08-20T16:50:10Z"}, "comments": 21, "created_at": "2020-01-28T10:17:55Z", "updated_at": "2021-08-20T16:47:11Z", "closed_at": "2021-08-20T16:47:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/3792", "html_url": "https://github.com/pymc-devs/pymc/pull/3792", "diff_url": "https://github.com/pymc-devs/pymc/pull/3792.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/3792.patch", "merged_at": null}, "body": "This closes #3789 \r\n\r\nThe problem was related to an old patch ([b9f960a](https://github.com/pymc-devs/pymc3/pull/3470/commits/b9f960ac3d228f839a1ed161cbd02fe060406c1b)) that didn't really add all the drawn values from nested `_DrawValuesContext` into the `givens` dictionary in `draw_values`. This PR makes sure to always add the necesary values from `drawn` into `givens`.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3792/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3789", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3789/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3789/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3789/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3789", "id": 555335282, "node_id": "MDU6SXNzdWU1NTUzMzUyODI=", "number": 3789, "title": "Prior predictive sampling does not work with Dirichlet Process example", "user": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1715881852, "node_id": "MDU6TGFiZWwxNzE1ODgxODUy", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/wontfix", "name": "wontfix", "color": "efefff", "default": true, "description": ""}, {"id": 2809192918, "node_id": "MDU6TGFiZWwyODA5MTkyOTE4", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/v3", "name": "v3", "color": "F92E0C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-27T03:04:34Z", "updated_at": "2022-11-03T13:52:11Z", "closed_at": "2022-11-03T13:52:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of the problem\r\nI copied the `dp_mix.ipynb` notebook (Austin Rochford's Dirichlet Process example) to a working directory.  Then I started it up, and built his model as follows:\r\n\r\n```python\r\nwith pm.Model() as model:\r\n    alpha = pm.Gamma('alpha', 1., 1.)\r\n    beta = pm.Beta('beta', 1., alpha, shape=K)\r\n    w = pm.Deterministic('w', stick_breaking(beta))\r\n\r\n    tau = pm.Gamma('tau', 1., 1., shape=K)\r\n    lambda_ = pm.Gamma('lambda_', 10., 1., shape=K)\r\n    mu = pm.Normal('mu', 0, tau=lambda_ * tau, shape=K)\r\n    obs = pm.NormalMixture('obs', w, mu, tau=lambda_ * tau,\r\n                           observed=old_faithful_df.std_waiting.values)\r\n```\r\n\r\nWhen I try to use `pm.sample_prior_predictive()` on this model, I get the following error:\r\n\r\n\r\n\r\n**Please provide the full traceback.**\r\n```\r\nValueError                                Traceback (most recent call last)\r\n~/src/pymc3/pymc3/distributions/distribution.py in _draw_value(param, point, givens, size)\r\n    812                 try:\r\n--> 813                     return dist_tmp.random(point=point, size=size)\r\n    814                 except (ValueError, TypeError):\r\n\r\n~/src/pymc3/pymc3/distributions/mixture.py in random(self, point, size)\r\n    442             comp_dist_shapes, broadcast_shape = (\r\n--> 443                 self.infer_comp_dist_shapes(point=point)\r\n    444             )\r\n\r\n~/src/pymc3/pymc3/distributions/mixture.py in infer_comp_dist_shapes(self, point)\r\n    365                     test_sample = self._comp_dists.random(point=point,\r\n--> 366                                                           size=None)\r\n    367                     comp_dist_shapes = test_sample.shape\r\n\r\n~/src/pymc3/pymc3/distributions/continuous.py in random(self, point, size)\r\n    494         mu, tau, _ = draw_values([self.mu, self.tau, self.sigma],\r\n--> 495                                  point=point, size=size)\r\n    496         return generate_samples(stats.norm.rvs, loc=mu, scale=tau**-0.5,\r\n\r\n~/src/pymc3/pymc3/distributions/distribution.py in draw_values(params, point, size)\r\n    649             if to_eval == missing_inputs:\r\n--> 650                 raise ValueError('Cannot resolve inputs for {}'.format([str(params[j]) for j in to_eval]))\r\n    651             to_eval = set(missing_inputs)\r\n\r\nValueError: Cannot resolve inputs for ['Elemwise{mul,no_inplace}.0', 'Elemwise{mul,no_inplace}.0']\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-22-1660b0c992d3> in <module>\r\n      1 with model:\r\n----> 2     samples = pm.sample_prior_predictive()\r\n\r\n~/src/pymc3/pymc3/sampling.py in sample_prior_predictive(samples, model, vars, var_names, random_seed)\r\n   1733     names = get_default_varnames(vars_, include_transformed=False)\r\n   1734     # draw_values fails with auto-transformed variables. transform them later!\r\n-> 1735     values = draw_values([model[name] for name in names], size=samples)\r\n   1736 \r\n   1737     data = {k: v for k, v in zip(names, values)}\r\n\r\n~/src/pymc3/pymc3/distributions/distribution.py in draw_values(params, point, size)\r\n    630                                         point=point,\r\n    631                                         givens=temp_givens,\r\n--> 632                                         size=size)\r\n    633                     givens[next_.name] = (next_, value)\r\n    634                     drawn[(next_, size)] = value\r\n\r\n~/src/pymc3/pymc3/distributions/distribution.py in _draw_value(param, point, givens, size)\r\n    820                     with _DrawValuesContextBlocker():\r\n    821                         val = np.atleast_1d(dist_tmp.random(point=point,\r\n--> 822                                                             size=None))\r\n    823                     # Sometimes point may change the size of val but not the\r\n    824                     # distribution's shape\r\n\r\n~/src/pymc3/pymc3/distributions/mixture.py in random(self, point, size)\r\n    441             w = draw_values([self.w], point=point, size=size)[0]\r\n    442             comp_dist_shapes, broadcast_shape = (\r\n--> 443                 self.infer_comp_dist_shapes(point=point)\r\n    444             )\r\n    445 \r\n\r\n~/src/pymc3/pymc3/distributions/mixture.py in infer_comp_dist_shapes(self, point)\r\n    364                 with _DrawValuesContextBlocker():\r\n    365                     test_sample = self._comp_dists.random(point=point,\r\n--> 366                                                           size=None)\r\n    367                     comp_dist_shapes = test_sample.shape\r\n    368             broadcast_shape = comp_dist_shapes\r\n\r\n~/src/pymc3/pymc3/distributions/continuous.py in random(self, point, size)\r\n    493         \"\"\"\r\n    494         mu, tau, _ = draw_values([self.mu, self.tau, self.sigma],\r\n--> 495                                  point=point, size=size)\r\n    496         return generate_samples(stats.norm.rvs, loc=mu, scale=tau**-0.5,\r\n    497                                 dist_shape=self.shape,\r\n\r\n~/src/pymc3/pymc3/distributions/distribution.py in draw_values(params, point, size)\r\n    648         while to_eval or missing_inputs:\r\n    649             if to_eval == missing_inputs:\r\n--> 650                 raise ValueError('Cannot resolve inputs for {}'.format([str(params[j]) for j in to_eval]))\r\n    651             to_eval = set(missing_inputs)\r\n    652             missing_inputs = set()\r\n\r\nValueError: Cannot resolve inputs for ['Elemwise{mul,no_inplace}.0', 'Elemwise{mul,no_inplace}.0']\r\n\r\n```\r\n\r\nI am able to successfully sample all the other variables in the model, including the parents of the `obs` random variable, but if I try to sample `obs`, I get that error.\r\n\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: Head\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.6.8\r\n* Operating system: Mac OS\r\n* How did you install PyMC3: `pip -e` from my git repo\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3789/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3785", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3785/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3785/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3785/events", "html_url": "https://github.com/pymc-devs/pymc/pull/3785", "id": 554050253, "node_id": "MDExOlB1bGxSZXF1ZXN0MzY2MjczMjM3", "number": 3785, "title": "Honor discard_tuned_samples during KeyboardInterrupt", "user": {"login": "aseyboldt", "id": 1882397, "node_id": "MDQ6VXNlcjE4ODIzOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1882397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aseyboldt", "html_url": "https://github.com/aseyboldt", "followers_url": "https://api.github.com/users/aseyboldt/followers", "following_url": "https://api.github.com/users/aseyboldt/following{/other_user}", "gists_url": "https://api.github.com/users/aseyboldt/gists{/gist_id}", "starred_url": "https://api.github.com/users/aseyboldt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aseyboldt/subscriptions", "organizations_url": "https://api.github.com/users/aseyboldt/orgs", "repos_url": "https://api.github.com/users/aseyboldt/repos", "events_url": "https://api.github.com/users/aseyboldt/events{/privacy}", "received_events_url": "https://api.github.com/users/aseyboldt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/17", "html_url": "https://github.com/pymc-devs/pymc/milestone/17", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/17/labels", "id": 5698577, "node_id": "MDk6TWlsZXN0b25lNTY5ODU3Nw==", "number": 17, "title": "3.9.3", "description": null, "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 23, "state": "closed", "created_at": "2020-07-25T12:49:46Z", "updated_at": "2021-01-22T12:04:38Z", "due_on": null, "closed_at": "2021-01-22T12:04:38Z"}, "comments": 1, "created_at": "2020-01-23T09:54:15Z", "updated_at": "2020-07-28T00:07:04Z", "closed_at": "2020-07-01T13:06:02Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/3785", "html_url": "https://github.com/pymc-devs/pymc/pull/3785", "diff_url": "https://github.com/pymc-devs/pymc/pull/3785.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/3785.patch", "merged_at": "2020-07-01T13:06:02Z"}, "body": "We used to ignore the `discard_tuned_samples` setting when deciding which samples to keep when we interrupt sampling with Ctrl-C, so that pymc3 would not give us any trace if there were no non-tuning samples yet.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3785/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3775", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3775/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3775/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3775/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3775", "id": 551954777, "node_id": "MDU6SXNzdWU1NTE5NTQ3Nzc=", "number": 3775, "title": "test_fit_oo[ADVI-full] test is broken", "user": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-01-19T17:28:27Z", "updated_at": "2020-01-29T19:11:22Z", "closed_at": "2020-01-29T19:11:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This _may_ be just a breakage in pytest.  The error is in fixture initialization:\r\n\r\n```\r\nfixturedef = <FixtureDef argname='simple_model' scope='module' baseid='pymc3/tests/test_variational_inference.py'>\r\nrequest = <SubRequest 'simple_model' for <Function test_fit_oo[ADVI-full]>>\r\n    def pytest_fixture_setup(fixturedef, request):\r\n        \"\"\" Execution of fixture setup. \"\"\"\r\n        kwargs = {}\r\n        for argname in fixturedef.argnames:\r\n            fixdef = request._get_active_fixturedef(argname)\r\n>           result, arg_cache_key, exc = fixdef.cached_result\r\nE           AttributeError: 'FixtureDef' object has no attribute 'cached_result'\r\n```\r\n\r\nI don't know if this is related to #3395 or #2943 (but I think *not* the latter, which seems to be a different issue).", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3775/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3733", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3733/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3733/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3733/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3733", "id": 538097589, "node_id": "MDU6SXNzdWU1MzgwOTc1ODk=", "number": 3733, "title": "Metropolis chain tuning is differs between single- and multiprocessing", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 818212053, "node_id": "MDU6TGFiZWw4MTgyMTIwNTM=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/request%20discussion", "name": "request discussion", "color": "dbef5b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-15T19:56:18Z", "updated_at": "2020-02-06T12:54:43Z", "closed_at": "2020-02-06T12:54:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(split from #3731)\r\n\r\n### Observations\r\nWhen `Metropolis` is used with `cores > 1 and chains > 1`, all chains are independently tuned.\r\n\r\nWith `cores=1` however, `Metropolis` initializes the 2nd chain with the `scaling` from the first. It is still tuned, but in the end it's a different between sequential single-process and parallelized multiprocess sampling.\r\n\r\n### Cause\r\nFor `Metropolis`, the stepper is re-used and re-tuned, but no reset happens.\r\n\r\nhttps://github.com/pymc-devs/pymc3/blob/dc9fd7251b34e9851308e91d622513ebe648f49e/pymc3/sampling.py#L711-L716\r\n\r\n### Possible Solutions\r\n+ re-setting the tuning parameter before continuing with the next chain\r\n+ ...other ideas?", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3733/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3733/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3731", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3731/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3731/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3731/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3731", "id": 538037400, "node_id": "MDU6SXNzdWU1MzgwMzc0MDA=", "number": 3731, "title": "DEMetropolis chains share tuned hyperparameter (with cores=1)", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-15T11:23:51Z", "updated_at": "2019-12-16T13:50:23Z", "closed_at": "2019-12-16T13:50:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Observations\r\nWhen `DEMetropolis` is used with `cores > 1 and chains > 1`, all chains are independently tuned.\r\n\r\nWith `cores=1` however, chains share the tuned `scaling` parameter and when it's updated during tuning, the adjustments by all chains are superimposed.\r\n\r\n### Cause\r\nFor `DEMetropolis`, the steppers are shallow-copied. This shallow-copy somehow keeps their tuned hyperparameter shared.\r\n\r\nhttps://github.com/pymc-devs/pymc3/blob/dc9fd7251b34e9851308e91d622513ebe648f49e/pymc3/sampling.py#L933-L939\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3731/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3727", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3727/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3727/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3727/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3727", "id": 537714141, "node_id": "MDU6SXNzdWU1Mzc3MTQxNDE=", "number": 3727, "title": "Subclassing pm.Model doesn't work on PyMC3 3.8", "user": {"login": "fbartolic", "id": 18243408, "node_id": "MDQ6VXNlcjE4MjQzNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/18243408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fbartolic", "html_url": "https://github.com/fbartolic", "followers_url": "https://api.github.com/users/fbartolic/followers", "following_url": "https://api.github.com/users/fbartolic/following{/other_user}", "gists_url": "https://api.github.com/users/fbartolic/gists{/gist_id}", "starred_url": "https://api.github.com/users/fbartolic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fbartolic/subscriptions", "organizations_url": "https://api.github.com/users/fbartolic/orgs", "repos_url": "https://api.github.com/users/fbartolic/repos", "events_url": "https://api.github.com/users/fbartolic/events{/privacy}", "received_events_url": "https://api.github.com/users/fbartolic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 818212053, "node_id": "MDU6TGFiZWw4MTgyMTIwNTM=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/request%20discussion", "name": "request discussion", "color": "dbef5b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2019-12-13T18:54:02Z", "updated_at": "2020-04-22T14:28:17Z", "closed_at": "2020-04-22T14:28:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since I upgraded to  PyMC3 3.8 I'm getting the `AttributeError: module '__main__' has no attribute 'Model'` error when subclassing `pm.Model()`. \r\n\r\nHere's a minimal example which reproduces the issue:\r\n\r\n```python\r\nimport pymc3 as pm\r\n\r\n\r\nclass CustomModel(pm.Model):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.x = pm.Normal(\"x\", 0.0, 1.0)\r\n\r\n\r\nmodel = CustomModel()\r\n\r\n```\r\nError:\r\n```python\r\nTraceback (most recent call last):\r\n  File \"test_bug.py\", line 10, in <module>\r\n    model = CustomModel()\r\n  File \"/Users/fb90/anaconda3/envs/pymc3/lib/python3.7/site-packages/pymc3/model.py\", line 274, in __call__\r\n    instance = cls.__new__(cls, *args, **kwargs)\r\n  File \"/Users/fb90/anaconda3/envs/pymc3/lib/python3.7/site-packages/pymc3/model.py\", line 739, in __new__\r\n    instance._parent = cls.get_context(error_if_none=False)\r\n  File \"/Users/fb90/anaconda3/envs/pymc3/lib/python3.7/site-packages/pymc3/model.py\", line 213, in get_context\r\n    candidate = cls.get_contexts()[idx] # type: Optional[T]\r\n  File \"/Users/fb90/anaconda3/envs/pymc3/lib/python3.7/site-packages/pymc3/model.py\", line 234, in get_contexts\r\n    context_class = cls.context_class\r\n  File \"/Users/fb90/anaconda3/envs/pymc3/lib/python3.7/site-packages/pymc3/model.py\", line 260, in context_class\r\n    cls._context_class = resolve_type(cls._context_class)\r\n  File \"/Users/fb90/anaconda3/envs/pymc3/lib/python3.7/site-packages/pymc3/model.py\", line 254, in resolve_type\r\n    c = getattr(modules[cls.__module__], c)\r\nAttributeError: module '__main__' has no attribute 'Model'\r\n```\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7\r\n* Operating system: MacOS\r\n* How did you install PyMC3: conda\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3727/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3684", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3684/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3684/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3684/events", "html_url": "https://github.com/pymc-devs/pymc/pull/3684", "id": 524537669, "node_id": "MDExOlB1bGxSZXF1ZXN0MzQyMjkzOTg4", "number": 3684, "title": "Repair ode API after refactor broke it", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 818212053, "node_id": "MDU6TGFiZWw4MTgyMTIwNTM=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/request%20discussion", "name": "request discussion", "color": "dbef5b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-18T18:23:21Z", "updated_at": "2021-08-07T11:22:17Z", "closed_at": "2019-11-19T19:00:30Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/3684", "html_url": "https://github.com/pymc-devs/pymc/pull/3684", "diff_url": "https://github.com/pymc-devs/pymc/pull/3684.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/3684.patch", "merged_at": "2019-11-19T19:00:30Z"}, "body": "### Problem\r\nFix #3634, which broke the ODE API. It became apparent because NUTS went nuts.\r\n\r\n### Cause\r\nWhen I refactored, I changed the order of inputs to the `DifferentialEquation` such that `y0` comes before `theta`. But because I neglected to account for this change also in the forward sensitivities, the resulting gradient was broken.\r\n\r\n### Solution & Changes\r\nIn this PR, I fixed the problem by:\r\n+ [x] re-arranging the forward sensitivities such that `y0` comes before `theta`\r\n+ [x] making sure that `y0` before `theta` is done everywhere\r\n\r\nA few more improvements:\r\n+ [x] explicitly set `dtype=floatX` wherever possible\r\n+ [x] use `float64` in the forward integration (augment_system), because `odeint` can't be set to `float32`\r\n+ [x] in `utils.py` line 51, only the `theta` part of the parameters is passed to the user-defined ODE function. In the original implementation it was `stack(theta, y0)` so, the function actually had access to `y0` which was unintended (I suppose, @Dpananos ?)\r\n+ [x] introduce and use `DtypeError` where applicable\r\n+ [x]  re-run ODE example notebooks\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3684/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3684/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3676", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3676/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3676/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3676/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3676", "id": 517799810, "node_id": "MDU6SXNzdWU1MTc3OTk4MTA=", "number": 3676, "title": "Terrible performance of NUTS with refactored ODE API", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-11-05T14:16:11Z", "updated_at": "2019-11-19T19:00:33Z", "closed_at": "2019-11-19T19:00:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nMy last-minute PR #3634 refactored the ODE API towards more explicit shapes. Unfortunately (and not detected by my benchmark) it also slowed down NUTS by about 50x compared to the original implementation by Demetri.\r\n\r\nFor reference, the approximate **seconds/it/chain**:\r\n\r\n|     | original | refactor |\r\n|--------------|----------|----------|\r\n| NUTS         | 0.1      | 5        |\r\n| DEMetropolis | 0.05     | 0.05     |\r\n\r\nAlso see the discussion over at #3634.\r\n\r\n\r\n## Versions and main components\r\n* [before](https://github.com/pymc-devs/pymc3/commit/cc5527988f72bbd2d62c7248226f62dcfbd7403d) vs. [after](https://github.com/pymc-devs/pymc3/commit/225ae82fa59eebcb13d322a4f7642afdbc534fd5) the refactor-PR", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3676/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3643", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3643/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3643/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3643/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3643", "id": 503274933, "node_id": "MDU6SXNzdWU1MDMyNzQ5MzM=", "number": 3643, "title": "Shared vars dirty values in Deterministic RVs", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "lucianopaz", "id": 5230109, "node_id": "MDQ6VXNlcjUyMzAxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5230109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucianopaz", "html_url": "https://github.com/lucianopaz", "followers_url": "https://api.github.com/users/lucianopaz/followers", "following_url": "https://api.github.com/users/lucianopaz/following{/other_user}", "gists_url": "https://api.github.com/users/lucianopaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucianopaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucianopaz/subscriptions", "organizations_url": "https://api.github.com/users/lucianopaz/orgs", "repos_url": "https://api.github.com/users/lucianopaz/repos", "events_url": "https://api.github.com/users/lucianopaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lucianopaz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lucianopaz", "id": 5230109, "node_id": "MDQ6VXNlcjUyMzAxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5230109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucianopaz", "html_url": "https://github.com/lucianopaz", "followers_url": "https://api.github.com/users/lucianopaz/followers", "following_url": "https://api.github.com/users/lucianopaz/following{/other_user}", "gists_url": "https://api.github.com/users/lucianopaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucianopaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucianopaz/subscriptions", "organizations_url": "https://api.github.com/users/lucianopaz/orgs", "repos_url": "https://api.github.com/users/lucianopaz/repos", "events_url": "https://api.github.com/users/lucianopaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lucianopaz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-10-07T07:21:26Z", "updated_at": "2020-02-03T15:31:15Z", "closed_at": "2020-02-03T15:31:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "sample_posterior_predictive is susceptible to \"bad\" ordering of var_names.\r\nThe problem arises only when using theano.shared vars for observed RVs. \r\nIt seems that when sample_posterior_predictive is given var_names in an order in which a Deterministic RV is placed before the RV(s) it is based on, the samples will contain wrong values for that deterministic variable.\r\nNamely - the values for the deterministic rv in the ppc trace will be values based on the \"original\" theano.shared values.\r\n\r\nOne possible fix is reordering var_names inside sample_posterior_predictive to be consistent with\r\n```python\r\nfree_RVs + observed_RVs + deterministics\r\n```\r\nAs far as I tested this ordering works, but this might be just a workaround hiding a deeper problem. Not sure.\r\n\r\nIf the reordering solution is the right way to go, better to topologically order the rvs, though I didn't find a way in the API to retrieve their dependencies.\r\n\r\nSee reproduction below.\r\n\r\n```python\r\nnp.random.seed(123)\r\n        obs_a = theano.shared(np.array([10., 20., 30.]))\r\n\r\n        with pm.Model() as m:\r\n            pm.Normal('mu', 3, 5)\r\n            a = pm.Normal('a', 20, 10, observed=obs_a)\r\n            pm.Deterministic('b', a * 2)\r\n\r\n            trace = pm.sample(10)\r\n\r\n        # var_names = ['a', 'b'] # GOOD ORDERING\r\n        var_names = ['b', 'a'] # BAD ORDERING\r\n        ppc = pm.sample_posterior_predictive(trace, model=m, var_names=var_names)\r\n        sa = ppc['a'][0, 0]\r\n        sb = ppc['b'][0, 0]\r\n        if sa*2 != sb:\r\n            print(f'a = {sa}')\r\n            print(f'b = {sb}')\r\n            raise ValueError('wrong')\r\n        \r\n        print('OK')\r\n```\r\n\r\n\r\n* PyMC3 Version: 3.7\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7.3\r\n* Operating system: macOS High Sierra\r\n* How did you install PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3643/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3588", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3588/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3588/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3588/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3588", "id": 480749657, "node_id": "MDU6SXNzdWU0ODA3NDk2NTc=", "number": 3588, "title": "sample_prior_predictive returns pm.Data variables too", "user": {"login": "OriolAbril", "id": 23738400, "node_id": "MDQ6VXNlcjIzNzM4NDAw", "avatar_url": "https://avatars.githubusercontent.com/u/23738400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OriolAbril", "html_url": "https://github.com/OriolAbril", "followers_url": "https://api.github.com/users/OriolAbril/followers", "following_url": "https://api.github.com/users/OriolAbril/following{/other_user}", "gists_url": "https://api.github.com/users/OriolAbril/gists{/gist_id}", "starred_url": "https://api.github.com/users/OriolAbril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OriolAbril/subscriptions", "organizations_url": "https://api.github.com/users/OriolAbril/orgs", "repos_url": "https://api.github.com/users/OriolAbril/repos", "events_url": "https://api.github.com/users/OriolAbril/events{/privacy}", "received_events_url": "https://api.github.com/users/OriolAbril/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-14T15:36:25Z", "updated_at": "2019-08-16T14:40:27Z", "closed_at": "2019-08-16T14:40:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`sample_prior_predictive` returns values of data variables defined as `pm.Data`. I would expect it to contain only prior samples (mu, tau, theta) and prior predictive samples (obs) but not sigma. Example using 8-schools model below:\r\n\r\n```python\r\nimport pymc3 as pm\r\ndraws = 500\r\nchains = 2\r\n\r\neight_school_data = {\r\n    'J': 8,\r\n    'y': np.array([28., 8., -3., 7., -1., 1., 18., 12.]),\r\n    'sigma': np.array([15., 10., 16., 11., 9., 11., 10., 18.])\r\n}\r\n\r\nwith pm.Model() as model:\r\n    sigma = pm.Data(\"sigma\", eight_school_data[\"sigma\"])\r\n    mu = pm.Normal('mu', mu=0, sd=5)\r\n    tau = pm.HalfCauchy('tau', beta=5)\r\n    theta = pm.Normal('theta', mu=mu, sd=tau, shape=eight_school_data['J'])\r\n    pm.Normal('obs', mu=theta, sd=sigma, observed=eight_school_data['y'])\r\n    \r\n    trace = pm.sample(draws, chains=chains)\r\n    prior = pm.sample_prior_predictive()\r\nprint(prior.keys())\r\n# dict_keys(['obs', 'mu', 'sigma', 'tau', 'tau_log__', 'theta'])\r\n```\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: dev\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.6\r\n* Operating system: Ubuntu 18 LTS\r\n* How did you install PyMC3: (conda/pip) pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3588/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3576", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3576/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3576/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3576/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3576", "id": 475332895, "node_id": "MDU6SXNzdWU0NzUzMzI4OTU=", "number": 3576, "title": "Empty mask produces ValueError on running with several traces", "user": {"login": "nokados", "id": 5142577, "node_id": "MDQ6VXNlcjUxNDI1Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5142577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nokados", "html_url": "https://github.com/nokados", "followers_url": "https://api.github.com/users/nokados/followers", "following_url": "https://api.github.com/users/nokados/following{/other_user}", "gists_url": "https://api.github.com/users/nokados/gists{/gist_id}", "starred_url": "https://api.github.com/users/nokados/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nokados/subscriptions", "organizations_url": "https://api.github.com/users/nokados/orgs", "repos_url": "https://api.github.com/users/nokados/repos", "events_url": "https://api.github.com/users/nokados/events{/privacy}", "received_events_url": "https://api.github.com/users/nokados/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-31T20:06:52Z", "updated_at": "2019-08-05T05:20:06Z", "closed_at": "2019-08-05T05:20:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Description of your problem\r\n\r\nI am going to build a model that handles NaN values. It works correctly if there are nan values in the dataset, but it raises the next error, if not.\r\n> ValueError: zero-size array to reduction operation maximum which has no identity\r\n\r\nIt is thrown only when chains > 1. \r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport numpy as np\r\nimport pymc3 as pm\r\n\r\nx = np.random.uniform(0,1, 2000)\r\ny = np.array(x > 0.5, dtype=int)\r\n# x[::10] = np.nan # <-- uncomment this and the error will be gone.\r\nx  = np.ma.masked_array(x, mask=np.isnan(x))\r\n\r\nwith pm.Model() as model:\r\n    Xmu = pm.Normal('Xmu_t', mu=0, sd=10)\r\n    X_modeled = pm.Normal('X_t', mu=Xmu, sd=1., observed=x)\r\n\r\n    intercept = pm.Normal('Intercept_t')\r\n    coef = pm.Normal('coef')\r\n\r\n    y_prob = pm.math.sigmoid(intercept + coef * X_modeled)\r\n    y_t = pm.Bernoulli('y', y_prob, observed=y)\r\n    trace = pm.sample(1000, tune=500, chains=2, cores=2, init='adapt_diag')\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\n/usr/local/lib/python3.6/dist-packages/pymc3/model.py:1331: UserWarning: Data in X_t contains missing values and will be automatically imputed from the sampling distribution.\r\n  warnings.warn(impute_message, UserWarning)\r\nAuto-assigning NUTS sampler...\r\nInitializing NUTS using adapt_diag...\r\nMultiprocess sampling (2 chains in 2 jobs)\r\nNUTS: [coef, Intercept_t, X_t_missing, Xmu_t]\r\nSampling 2 chains: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 3000/3000 [00:15<00:00, 195.87draws/s]\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-44-457eee33d21f> in <module>()\r\n      9     y_prob = pm.math.sigmoid(intercept + coef * X_modeled)\r\n     10     y_t = pm.Bernoulli('y', y_prob, observed=y)\r\n---> 11     trace = pm.sample(1000, tune=500, chains=2, cores=2, init='adapt_diag')\r\n\r\n3 frames\r\n/usr/local/lib/python3.6/dist-packages/pymc3/sampling.py in sample(draws, step, init, n_init, start, trace, chain_idx, chains, cores, tune, progressbar, model, random_seed, discard_tuned_samples, compute_convergence_checks, **kwargs)\r\n    464                 warnings.warn(\"The number of samples is too small to check convergence reliably.\")\r\n    465             else:\r\n--> 466                 trace.report._run_convergence_checks(trace, model)\r\n    467 \r\n    468         trace.report._log_summary()\r\n\r\n/usr/local/lib/python3.6/dist-packages/pymc3/backends/report.py in _run_convergence_checks(self, trace, model)\r\n     86 \r\n     87         warnings = []\r\n---> 88         rhat_max = max(val.max() for val in gelman_rubin.values())\r\n     89         if rhat_max > 1.4:\r\n     90             msg = (\"The gelman-rubin statistic is larger than 1.4 for some \"\r\n\r\n/usr/local/lib/python3.6/dist-packages/pymc3/backends/report.py in <genexpr>(.0)\r\n     86 \r\n     87         warnings = []\r\n---> 88         rhat_max = max(val.max() for val in gelman_rubin.values())\r\n     89         if rhat_max > 1.4:\r\n     90             msg = (\"The gelman-rubin statistic is larger than 1.4 for some \"\r\n\r\n/usr/local/lib/python3.6/dist-packages/numpy/core/_methods.py in _amax(a, axis, out, keepdims, initial)\r\n     26 def _amax(a, axis=None, out=None, keepdims=False,\r\n     27           initial=_NoValue):\r\n---> 28     return umr_maximum(a, axis, None, out, keepdims, initial)\r\n     29 \r\n     30 def _amin(a, axis=None, out=None, keepdims=False,\r\n\r\nValueError: zero-size array to reduction operation maximum which has no identity\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.7\r\n* Theano Version: 1.0.4\r\n* Python Version: Python 3.6.8\r\n* Operating system: Linux Debian buster/sid\r\n* How did you install PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3576/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3571", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3571/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3571/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3571/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3571", "id": 474342343, "node_id": "MDU6SXNzdWU0NzQzNDIzNDM=", "number": 3571, "title": "Broken documentation links", "user": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 86794, "node_id": "MDU6TGFiZWw4Njc5NA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/docs", "name": "docs", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-30T02:43:15Z", "updated_at": "2019-08-15T21:51:09Z", "closed_at": "2019-08-15T21:51:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you have questions about a specific use case, or you are not sure whether this is a bug or not, please post it to our discourse channel: https://discourse.pymc.io  https://github.com/pymc-devs/pymc3/issues/874\r\n\r\n## Description of your problem\r\n\r\nThe following entries in the `getting_started.rst` file are nowhere I can find them:\r\n\r\n```\r\n   gp.rst\r\n   theano.rst\r\n   advanced_theano.rst\r\n```\r\n\r\nShould I just take them out, or does someone have these? @ColCarroll do you know anything about this (you're just my go-to person about the docs).\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3571/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3500", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3500/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3500/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3500/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3500", "id": 450351990, "node_id": "MDU6SXNzdWU0NTAzNTE5OTA=", "number": 3500, "title": "Data container not compatible with GP models", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3517167559, "node_id": "LA_kwDOAALxiM7Ro7fH", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/GP", "name": "GP", "color": "CF1A41", "default": false, "description": "Gaussian Process"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-30T15:01:17Z", "updated_at": "2022-05-27T07:56:51Z", "closed_at": "2022-05-27T07:56:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Using `Data` containers for input values in GP models fails because functions like `len` and `np.int` are called on the data by various GP operations. For example:\r\n\r\n```\r\nTypeError                                 Traceback (most recent call last)\r\n~/repositories/pymc3/pymc3/gp/util.py in infer_shape(X, n_points)\r\n     13         try:\r\n---> 14             n_points = np.int(X.shape[0])\r\n     15         except TypeError:\r\n\r\nTypeError: int() argument must be a string, a bytes-like object or a number, not 'TensorVariable'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n```\r\n\r\nIt appears to happen  on shape checking, so we should be able to fix this. ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3500/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3482", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3482/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3482/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3482/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3482", "id": 445857507, "node_id": "MDU6SXNzdWU0NDU4NTc1MDc=", "number": 3482, "title": "GP's: either \u201ctoo many indices for array\u201d or \u201carray must not contain infs or NaNs\u201d error ", "user": {"login": "michael-ziedalski", "id": 43689829, "node_id": "MDQ6VXNlcjQzNjg5ODI5", "avatar_url": "https://avatars.githubusercontent.com/u/43689829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michael-ziedalski", "html_url": "https://github.com/michael-ziedalski", "followers_url": "https://api.github.com/users/michael-ziedalski/followers", "following_url": "https://api.github.com/users/michael-ziedalski/following{/other_user}", "gists_url": "https://api.github.com/users/michael-ziedalski/gists{/gist_id}", "starred_url": "https://api.github.com/users/michael-ziedalski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michael-ziedalski/subscriptions", "organizations_url": "https://api.github.com/users/michael-ziedalski/orgs", "repos_url": "https://api.github.com/users/michael-ziedalski/repos", "events_url": "https://api.github.com/users/michael-ziedalski/events{/privacy}", "received_events_url": "https://api.github.com/users/michael-ziedalski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 3517167559, "node_id": "LA_kwDOAALxiM7Ro7fH", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/GP", "name": "GP", "color": "CF1A41", "default": false, "description": "Gaussian Process"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-19T19:53:56Z", "updated_at": "2022-08-27T18:36:24Z", "closed_at": "2022-08-27T18:36:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "(previously, a post was made on discourse to ascertain the problem [here](https://discourse.pymc.io/t/either-too-many-indices-for-array-or-array-must-not-contain-infs-or-nans-error-with-a-gp/3277/4))\r\n\r\n## Description of your problem\r\n\r\nEssentially, when fitting a basic Gaussian Process on sine data with a bit of noise on it, `gp.marginal_likelihood` causes one of two errors to occur:\r\n1. If `x` and `y` both have shape `(n, )`, --> `too many indices for array`,\r\n2. If `x` is set to `x[:, None]`, to give it shape `(n, 1)` --> `array must not contain infs or NaNs`\r\n\r\nA MWE of the problem, courtesy of Hamster_on_wheels:\r\n\r\n```\r\nimport numpy as np\r\nimport pymc3 as pm\r\n\r\nx = np.linspace(0, 40, num=150)\r\ny = np.sin(x)\r\n# x = x[:, None]\r\n# y = y[:, None]\r\n\r\nwith pm.Model():\r\n    p = pm.Normal(\"p\", mu=0, sd=10)\r\n    l = pm.Gamma(\"l\", alpha=4, beta=3)\r\n    a = pm.gp.cov.Periodic(1, p, l)\r\n    b = pm.gp.Marginal(cov_func=a)\r\n    s = pm.HalfNormal(\"s\", sd=10, testval=5)\r\n    b.marginal_likelihood(\r\n        \"y\", X=x, y=y, noise=s, shape=1)\r\n```\r\n\r\nKeeping the two lines commented, the following error arises:\r\n\r\n```\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-15-5673118ede17> in <module>\r\n     14     s = pm.HalfNormal(\"s\", sd=10, testval=5)\r\n     15     b.marginal_likelihood(\r\n---> 16         \"y\", X=x, y=y, noise=s, shape=1)\r\n\r\n~/anaconda3/lib/python3.7/site-packages/pymc3/gp/gp.py in marginal_likelihood(self, name, X, y, noise, is_observed, **kwargs)\r\n    417         if not isinstance(noise, Covariance):\r\n    418             noise = pm.gp.cov.WhiteNoise(noise)\r\n--> 419         mu, cov = self._build_marginal_likelihood(X, noise)\r\n    420         self.X = X\r\n    421         self.y = y\r\n\r\n~/anaconda3/lib/python3.7/site-packages/pymc3/gp/gp.py in _build_marginal_likelihood(self, X, noise)\r\n    378     def _build_marginal_likelihood(self, X, noise):\r\n    379         mu = self.mean_func(X)\r\n--> 380         Kxx = self.cov_func(X)\r\n    381         Knx = noise(X)\r\n    382         cov = Kxx + Knx\r\n\r\n~/anaconda3/lib/python3.7/site-packages/pymc3/gp/cov.py in __call__(self, X, Xs, diag)\r\n     59             return self.diag(X)\r\n     60         else:\r\n---> 61             return self.full(X, Xs)\r\n     62 \r\n     63     def diag(self, X):\r\n\r\n~/anaconda3/lib/python3.7/site-packages/pymc3/gp/cov.py in full(self, X, Xs)\r\n    289         self.period = period\r\n    290     def full(self, X, Xs=None):\r\n--> 291         X, Xs = self._slice(X, Xs)\r\n    292         if Xs is None:\r\n    293             Xs = X\r\n\r\n~/anaconda3/lib/python3.7/site-packages/pymc3/gp/cov.py in _slice(self, X, Xs)\r\n     68 \r\n     69     def _slice(self, X, Xs):\r\n---> 70         X = tt.as_tensor_variable(X[:, self.active_dims])\r\n     71         if Xs is not None:\r\n     72             Xs = tt.as_tensor_variable(Xs[:, self.active_dims])\r\n\r\nIndexError: too many indices for array\r\n```\r\n\r\nUncommenting the two lines, the following error arises:\r\n\r\n```\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-16-73201f92570d> in <module>\r\n     14     s = pm.HalfNormal(\"s\", sd=10, testval=5)\r\n     15     b.marginal_likelihood(\r\n---> 16         \"y\", X=x, y=y, noise=s, shape=1)\r\n\r\n~/anaconda3/lib/python3.7/site-packages/pymc3/gp/gp.py in marginal_likelihood(self, name, X, y, noise, is_observed, **kwargs)\r\n    422         self.noise = noise\r\n    423         if is_observed:\r\n--> 424             return pm.MvNormal(name, mu=mu, cov=cov, observed=y, **kwargs)\r\n    425         else:\r\n    426             shape = infer_shape(X, kwargs.pop(\"shape\", None))\r\n\r\n~/anaconda3/lib/python3.7/site-packages/pymc3/distributions/distribution.py in __new__(cls, name, *args, **kwargs)\r\n     39                 raise TypeError(\"observed needs to be data but got: {}\".format(type(data)))\r\n     40             total_size = kwargs.pop('total_size', None)\r\n---> 41             dist = cls.dist(*args, **kwargs)\r\n     42             return model.Var(name, dist, data, total_size)\r\n     43         else:\r\n\r\n~/anaconda3/lib/python3.7/site-packages/pymc3/distributions/distribution.py in dist(cls, *args, **kwargs)\r\n     50     def dist(cls, *args, **kwargs):\r\n     51         dist = object.__new__(cls)\r\n---> 52         dist.__init__(*args, **kwargs)\r\n     53         return dist\r\n     54 \r\n\r\n~/anaconda3/lib/python3.7/site-packages/pymc3/distributions/multivariate.py in __init__(self, mu, cov, tau, chol, lower, *args, **kwargs)\r\n    223                  *args, **kwargs):\r\n    224         super(MvNormal, self).__init__(mu=mu, cov=cov, tau=tau, chol=chol,\r\n--> 225                                        lower=lower, *args, **kwargs)\r\n    226         self.mean = self.median = self.mode = self.mu = self.mu\r\n    227 \r\n\r\n~/anaconda3/lib/python3.7/site-packages/pymc3/distributions/multivariate.py in __init__(self, mu, cov, chol, tau, lower, *args, **kwargs)\r\n     59             if cov.ndim != 2:\r\n     60                 raise ValueError('cov must be two dimensional.')\r\n---> 61             self.chol_cov = cholesky(cov)\r\n     62             self.cov = cov\r\n     63             self._n = self.cov.shape[-1]\r\n\r\n~/anaconda3/lib/python3.7/site-packages/theano/gof/op.py in __call__(self, *inputs, **kwargs)\r\n    672                 thunk.outputs = [storage_map[v] for v in node.outputs]\r\n    673 \r\n--> 674                 required = thunk()\r\n    675                 assert not required  # We provided all inputs\r\n    676 \r\n\r\n~/anaconda3/lib/python3.7/site-packages/theano/gof/op.py in rval(p, i, o, n)\r\n    890             # default arguments are stored in the closure of `rval`\r\n    891             def rval(p=p, i=node_input_storage, o=node_output_storage, n=node):\r\n--> 892                 r = p(n, [x[0] for x in i], o)\r\n    893                 for o in node.outputs:\r\n    894                     compute_map[o][0] = True\r\n\r\n~/anaconda3/lib/python3.7/site-packages/theano/tensor/slinalg.py in perform(self, node, inputs, outputs)\r\n     74         z = outputs[0]\r\n     75         try:\r\n---> 76             z[0] = scipy.linalg.cholesky(x, lower=self.lower).astype(x.dtype)\r\n     77         except scipy.linalg.LinAlgError:\r\n     78             if self.on_error == 'raise':\r\n\r\n~/anaconda3/lib/python3.7/site-packages/scipy/linalg/decomp_cholesky.py in cholesky(a, lower, overwrite_a, check_finite)\r\n     89     \"\"\"\r\n     90     c, lower = _cholesky(a, lower=lower, overwrite_a=overwrite_a, clean=True,\r\n---> 91                          check_finite=check_finite)\r\n     92     return c\r\n     93 \r\n\r\n~/anaconda3/lib/python3.7/site-packages/scipy/linalg/decomp_cholesky.py in _cholesky(a, lower, overwrite_a, clean, check_finite)\r\n     17     \"\"\"Common code for cholesky() and cho_factor().\"\"\"\r\n     18 \r\n---> 19     a1 = asarray_chkfinite(a) if check_finite else asarray(a)\r\n     20     a1 = atleast_2d(a1)\r\n     21 \r\n\r\n~/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py in asarray_chkfinite(a, dtype, order)\r\n    496     if a.dtype.char in typecodes['AllFloat'] and not np.isfinite(a).all():\r\n    497         raise ValueError(\r\n--> 498             \"array must not contain infs or NaNs\")\r\n    499     return a\r\n    500 \r\n\r\nValueError: array must not contain infs or NaNs\r\n```\r\n\r\nThis model came from attempting to follow the [Mauna Lua](https://docs.pymc.io/notebooks/GP-MaunaLoa2.html) example, if that helps.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.6\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7.3\r\n* Operating system: Ubuntu 16.04.6 LTS \r\n* How did you install PyMC3: conda", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3482/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3481", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3481/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3481/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3481/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3481", "id": 445195506, "node_id": "MDU6SXNzdWU0NDUxOTU1MDY=", "number": 3481, "title": "Shape broadcast error in sample_prior_predictive ", "user": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-05-16T23:06:57Z", "updated_at": "2019-06-07T08:51:28Z", "closed_at": "2019-06-07T08:51:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nWhen trying to sample the prior predictive -- for a model which can be successfully sampled using NUTS, and whose resulting trace can be successfully used with `sample_posterior_predictive()` -- I get an error broadcasting with different shapes (see below).\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport pickle\r\nimport pymc3 as pm\r\n\r\nwith open('model.pickle', 'rb') as file:\r\n    model = pickle.load(file)\r\n\r\nwith model:\r\n    pre_trace = pm.sample_prior_predictive()\r\n```\r\n\r\nPickled model may be found [here](https://drive.google.com/file/d/1EguSomj8duXN_SJ9FNEcSJPBtmMVkISl/view?usp=sharing). \r\n\r\n**Please provide the full traceback.**\r\n```\r\nValueError                                Traceback (most recent call last)\r\n~/projects/xplan/xplan-experiment-analysis/sample_prior_predictive_error.py in <module>\r\n      8 \r\n      9 with model:\r\n---> 10     pre_trace = pm.sample_prior_predictive()\r\n\r\n/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/sampling.py in sample_prior_predictive(samples, model, vars, var_names, random_seed)\r\n   1320     names = get_default_varnames(model.named_vars, include_transformed=False)\r\n   1321     # draw_values fails with auto-transformed variables. transform them later!\r\n-> 1322     values = draw_values([model[name] for name in names], size=samples)\r\n   1323 \r\n   1324     data = {k: v for k, v in zip(names, values)}\r\n\r\n/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/distributions/distribution.py in draw_values(params, point, size)\r\n    393                                         point=point,\r\n    394                                         givens=temp_givens,\r\n--> 395                                         size=size)\r\n    396                     givens[next_.name] = (next_, value)\r\n    397                     drawn[(next_, size)] = value\r\n\r\n/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/distributions/distribution.py in _draw_value(param, point, givens, size)\r\n    579                         else:\r\n    580                             dist_tmp.shape = val.shape\r\n--> 581                 return dist_tmp.random(point=point, size=size)\r\n    582             else:\r\n    583                 return param.distribution.random(point=point, size=size)\r\n\r\n/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/distributions/continuous.py in random(self, point, size)\r\n    668             [self.mu, self.sigma, self.lower, self.upper], point=point, size=size)\r\n    669         return generate_samples(stats.truncnorm.rvs,\r\n--> 670                                 a=(a_v - mu_v)/std_v,\r\n    671                                 b=(b_v - mu_v) / std_v,\r\n    672                                 loc=mu_v,\r\n\r\nValueError: operands could not be broadcast together with shapes (500,1031) (500,) \r\n```\r\n\r\n## Additional Information\r\n\r\nIf it helps, the observed variable is a `TruncatedNormal`, which has failed before, but I'm running with `master` as of today, and this is supposed to be fixed, AFAICT.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.6 from source\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7.3\r\n* Operating system: MacOS Mojave\r\n* How did you install PyMC3: pip from Github source\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3481/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3458", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3458/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3458/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3458/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3458", "id": 439029496, "node_id": "MDU6SXNzdWU0MzkwMjk0OTY=", "number": 3458, "title": "pm.model_graph.model_to_graphviz hangs (powerset computation)", "user": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-01T00:17:59Z", "updated_at": "2019-05-05T19:05:27Z", "closed_at": "2019-05-05T19:05:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of the problem\r\n\r\nTrying to generate a graphviz graph of a model containing a normal mixture variable with a lot of parents, `ModelGraph._get_ancestors()` hangs exploring the powerset of upstream.\r\n\r\nHere's the big upstream from my mixture model (from `pdb` break in `powerset`):\r\n```\r\n(Pdb) p iterable\r\n{OR Output_interval__, temperature influences, OR Output, err_sd, OR DO_interval__, modality, od vector, devp, od influences, ideal out, OR IO_interval__, unimodal out, fixed influences, deviation out, medium vector, err_sd_log__, Unimodal or bimodal, OR DO, Unimodal or bimodal_logodds__, medium influences, p(unimodal), p(unimodal)_logodds__, OR IO, temp vector}\r\n```\r\n\r\nIs there a way to do this graphing without searching the powerset?  It seems like this won't scale.  I don't fully understand what's going on here, but I *think* the code is trying to calculate a Markov blanket and minimize the size of the graph of the parents of a deterministic variable, but in my case the mixture has three components, each of which is computed by a fairly complex deterministic function.\r\n\r\nIf there is any interest in addressing this, I will assemble the bits of my model in an executable form, but I believe the issue can be seen by examining the code, without the need for such a case.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.6\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7\r\n* Operating system: MacOS 10.13.6\r\n* How did you install PyMC3: (conda/pip) pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3458/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3450", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3450/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3450/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3450/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3450", "id": 434186206, "node_id": "MDU6SXNzdWU0MzQxODYyMDY=", "number": 3450, "title": "MvNormal create using chol could not be shown in notedook", "user": {"login": "Shimuuar", "id": 100394, "node_id": "MDQ6VXNlcjEwMDM5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/100394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shimuuar", "html_url": "https://github.com/Shimuuar", "followers_url": "https://api.github.com/users/Shimuuar/followers", "following_url": "https://api.github.com/users/Shimuuar/following{/other_user}", "gists_url": "https://api.github.com/users/Shimuuar/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shimuuar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shimuuar/subscriptions", "organizations_url": "https://api.github.com/users/Shimuuar/orgs", "repos_url": "https://api.github.com/users/Shimuuar/repos", "events_url": "https://api.github.com/users/Shimuuar/events{/privacy}", "received_events_url": "https://api.github.com/users/Shimuuar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-04-17T09:37:23Z", "updated_at": "2019-05-12T12:52:20Z", "closed_at": "2019-05-12T12:52:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nIf one creates MvNormal distribution using chol for describing covariance it could be shown in notebook. Other methods work fine. Here is example\r\n\r\n```python\r\nimport pymc3 as pm\r\nimport numpy as np\r\n\r\nwith pm.Model() as model:\r\n    d = pm.MvNormal('x', mu=np.zeros(2), chol=np.eye(2), shape=2)\r\n    print(d.distribution._repr_latex_())\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\nTraceback (most recent call last):\r\n  File \"fail.py\", line 9, in <module>\r\n    print(d.distribution._repr_latex_())\r\n  File \"/nix/store/4c6ihiawh232fszikcyxhdk32rzk4l28-python3-3.7.2-env/lib/python3.7/site-packages/pymc3/distributions/multivariate.py\", line 286, in _repr_latex_\r\n    .format(name, name_mu, self._repr_cov_params(dist)))\r\n  File \"/nix/store/4c6ihiawh232fszikcyxhdk32rzk4l28-python3-3.7.2-env/lib/python3.7/site-packages/pymc3/distributions/multivariate.py\", line 145, in _repr_cov_params\r\n    chol = get_variable_name(self.chol)\r\nAttributeError: 'MvNormal' object has no attribute 'chol'\r\n```\r\n\r\nIt looks like `__init__` does not set `chol` field which function `_repr_cov_params` expects. By looking at source code problem persists in master\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.6\r\n* Theano Version:\r\n* Python Version: 3.7\r\n* Operating system: linux\r\n* How did you install PyMC3: (conda/pip) nix\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3450/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3413", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3413/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3413/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3413/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3413", "id": 422720912, "node_id": "MDU6SXNzdWU0MjI3MjA5MTI=", "number": 3413, "title": "model_to_graphviz does not draw edges to interaction nodes", "user": {"login": "jvparidon", "id": 25482713, "node_id": "MDQ6VXNlcjI1NDgyNzEz", "avatar_url": "https://avatars.githubusercontent.com/u/25482713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvparidon", "html_url": "https://github.com/jvparidon", "followers_url": "https://api.github.com/users/jvparidon/followers", "following_url": "https://api.github.com/users/jvparidon/following{/other_user}", "gists_url": "https://api.github.com/users/jvparidon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvparidon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvparidon/subscriptions", "organizations_url": "https://api.github.com/users/jvparidon/orgs", "repos_url": "https://api.github.com/users/jvparidon/repos", "events_url": "https://api.github.com/users/jvparidon/events{/privacy}", "received_events_url": "https://api.github.com/users/jvparidon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-19T13:06:02Z", "updated_at": "2019-03-21T09:49:02Z", "closed_at": "2019-03-21T09:49:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Problem description\r\n`model_to_graphviz` is a great visualization tool, but it currently does not draw edges to interaction terms. Nodes with names that contain a colon are not connected to the model graph because graphviz does not understand how to draw the edges.\r\n\r\nCalls to graphviz from PyMC3 are translated into DOT and that language standard treats colons as a special character. When the graph is drawn and the instructions for drawing the edges are parsed, having a colon in one of the node names causes graphviz to look for a non-existent node to connect the edge to. This leads to missing edges in the graph and graphviz will issue a warning, but neither graphviz nor PyMC3 throws an exception.\r\n\r\n## Minimal working example\r\n```python\r\nimport numpy as np\r\nimport pandas as pd\r\nimport pymc3 as pm\r\n\r\n# toy data\r\ndf = pd.DataFrame({\r\n    'y': np.random.random(10),\r\n    'x1': np.random.random(10),\r\n    'x2': np.random.random(10)\r\n})\r\n\r\nwith pm.Model() as linear_model:\r\n    pm.glm.GLM.from_formula('y ~ x1 * x2', data=df)\r\n    pm.model_to_graphviz(linear_model).view()\r\n```\r\n\r\n## Versions and main components\r\n* PyMC3 Version: 3.6\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7.1\r\n* Operating system: macOS 10.14.1\r\n* How did you install PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3413/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3392", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3392/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3392/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3392/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3392", "id": 417639507, "node_id": "MDU6SXNzdWU0MTc2Mzk1MDc=", "number": 3392, "title": "Categorical FreeRV can fail because of testval choice.", "user": {"login": "helmutsimon", "id": 14212177, "node_id": "MDQ6VXNlcjE0MjEyMTc3", "avatar_url": "https://avatars.githubusercontent.com/u/14212177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/helmutsimon", "html_url": "https://github.com/helmutsimon", "followers_url": "https://api.github.com/users/helmutsimon/followers", "following_url": "https://api.github.com/users/helmutsimon/following{/other_user}", "gists_url": "https://api.github.com/users/helmutsimon/gists{/gist_id}", "starred_url": "https://api.github.com/users/helmutsimon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/helmutsimon/subscriptions", "organizations_url": "https://api.github.com/users/helmutsimon/orgs", "repos_url": "https://api.github.com/users/helmutsimon/repos", "events_url": "https://api.github.com/users/helmutsimon/events{/privacy}", "received_events_url": "https://api.github.com/users/helmutsimon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-06T06:11:08Z", "updated_at": "2021-01-10T18:13:48Z", "closed_at": "2021-01-10T18:13:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The model below uses a categorical distribution as a prior. It does not converge correctly (in this case MCMC should have mode around 3) if testval=0 or 10 or default. If testval is set to a non-edge value of the support the sample converges correctly (e.g. change testval to 2, 9 etc).\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport numpy as np\r\nfrom pymc3 import *\r\nfrom pymc3.distributions.discrete import Poisson, Categorical\r\nimport theano\r\nimport theano.tensor as tt\r\n%matplotlib inline\r\nimport matplotlib\r\nimport matplotlib.pyplot as plt\r\n\r\n\r\ndef run_true_MCMC(n, obs, draws):\r\n    obs = np.array(obs)\r\n    with Model() as model: \r\n        \r\n        pn = np.ones(n) / n\r\n        x = Categorical('x', pn, testval=0)\r\n        sfs_obs = Poisson('sfs_obs', mu=x, observed=obs) \r\n\r\n    with model:\r\n        trace = sample(draws, tune=0) \r\n    plt.show(forestplot(trace, varnames=['x']))\r\n    traceplot(trace, varnames=['x'])\r\n    print(summary(trace, varnames=['x']))\r\n    return trace\r\n\r\nobs = 3\r\ndraws = 10000\r\nn = 10\r\ntrace = run_true_MCMC(n, obs, draws)\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\nMultiprocess sampling (2 chains in 2 jobs)\r\nCategoricalGibbsMetropolis: [x]\r\nSampling 2 chains: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 20000/20000 [00:04<00:00, 4131.15draws/s]\r\n/Users/helmutsimon/miniconda3/lib/python3.5/site-packages/matplotlib/axes/_base.py:2961: UserWarning: Attempting to set identical left==right results\r\nin singular transformations; automatically expanding.\r\nleft=0.0, right=0.0\r\n  'left=%s, right=%s') % (left, right))\r\n\r\n   mean   sd  mc_error  hpd_2.5  hpd_97.5  n_eff  Rhat\r\nx   0.0  0.0       0.0      0.0       0.0    NaN   NaN\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.4.1\r\n* Theano Version: 1.0.0\r\n* Python: 3.5.4 |Continuum Analytics, Inc.| (default, Aug 14 2017, 12:43:10) \r\n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)]\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3392/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3328", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3328/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3328/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3328/events", "html_url": "https://github.com/pymc-devs/pymc/pull/3328", "id": 394509216, "node_id": "MDExOlB1bGxSZXF1ZXN0MjQxMjM4Nzcw", "number": 3328, "title": "Variable assigned to itself in data.py", "user": {"login": "springcoil", "id": 983944, "node_id": "MDQ6VXNlcjk4Mzk0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/983944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/springcoil", "html_url": "https://github.com/springcoil", "followers_url": "https://api.github.com/users/springcoil/followers", "following_url": "https://api.github.com/users/springcoil/following{/other_user}", "gists_url": "https://api.github.com/users/springcoil/gists{/gist_id}", "starred_url": "https://api.github.com/users/springcoil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/springcoil/subscriptions", "organizations_url": "https://api.github.com/users/springcoil/orgs", "repos_url": "https://api.github.com/users/springcoil/repos", "events_url": "https://api.github.com/users/springcoil/events{/privacy}", "received_events_url": "https://api.github.com/users/springcoil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-27T23:26:30Z", "updated_at": "2018-12-31T16:04:25Z", "closed_at": "2018-12-31T16:04:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/3328", "html_url": "https://github.com/pymc-devs/pymc/pull/3328", "diff_url": "https://github.com/pymc-devs/pymc/pull/3328.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/3328.patch", "merged_at": "2018-12-31T16:04:22Z"}, "body": "Minor update. ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3328/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3302", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3302/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3302/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3302/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3302", "id": 391210508, "node_id": "MDU6SXNzdWUzOTEyMTA1MDg=", "number": 3302, "title": "ADVI gets stuck some times when approaching end.", "user": {"login": "YukunXia", "id": 37142664, "node_id": "MDQ6VXNlcjM3MTQyNjY0", "avatar_url": "https://avatars.githubusercontent.com/u/37142664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YukunXia", "html_url": "https://github.com/YukunXia", "followers_url": "https://api.github.com/users/YukunXia/followers", "following_url": "https://api.github.com/users/YukunXia/following{/other_user}", "gists_url": "https://api.github.com/users/YukunXia/gists{/gist_id}", "starred_url": "https://api.github.com/users/YukunXia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YukunXia/subscriptions", "organizations_url": "https://api.github.com/users/YukunXia/orgs", "repos_url": "https://api.github.com/users/YukunXia/repos", "events_url": "https://api.github.com/users/YukunXia/events{/privacy}", "received_events_url": "https://api.github.com/users/YukunXia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-12-14T18:02:49Z", "updated_at": "2022-01-26T09:31:26Z", "closed_at": "2022-01-26T09:31:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you have questions about a specific use case, or you are not sure whether this is a bug or not, please post it to our discourse channel: https://discourse.pymc.io  \r\n\r\n## Description of your problem\r\n\r\nADVI inference just can't stop itself sometimes.\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nwith some_model:\r\n    inference = pm.ADVI()\r\n    approx = pm.fit(n=50000,method=inference,obj_optimizer=pm.adam(learning_rate=0.05))\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\nNo error output, since the program hasn't stop yet.\r\n```\r\n\r\n**Please provide any additional information below.**\r\n<img width=\"686\" alt=\"wx20181214-130119 2x\" src=\"https://user-images.githubusercontent.com/37142664/50019523-fe3c1200-ffa0-11e8-9f67-5713861eea95.png\">\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version:3.5\r\n* Theano Version:1.0.3\r\n* Python Version:3.5.6\r\n* Operating system: Mac OS 10.14.2\r\n* How did you install PyMC3: (conda/pip) pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3302/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3271", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3271/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3271/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3271/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3271", "id": 383981142, "node_id": "MDU6SXNzdWUzODM5ODExNDI=", "number": 3271, "title": "pm.sample_prior_predictive fails with multinomial data", "user": {"login": "AlexAndorra", "id": 30447180, "node_id": "MDQ6VXNlcjMwNDQ3MTgw", "avatar_url": "https://avatars.githubusercontent.com/u/30447180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexAndorra", "html_url": "https://github.com/AlexAndorra", "followers_url": "https://api.github.com/users/AlexAndorra/followers", "following_url": "https://api.github.com/users/AlexAndorra/following{/other_user}", "gists_url": "https://api.github.com/users/AlexAndorra/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexAndorra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexAndorra/subscriptions", "organizations_url": "https://api.github.com/users/AlexAndorra/orgs", "repos_url": "https://api.github.com/users/AlexAndorra/repos", "events_url": "https://api.github.com/users/AlexAndorra/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexAndorra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-11-24T11:22:45Z", "updated_at": "2018-12-05T16:11:12Z", "closed_at": "2018-12-05T16:11:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As discussed with @AustinRochford on Twitter, pm.sample_prior_predictive seems to fail when working with multinomial likelihood : \"TypeError: 'NoneType' object is not subscriptable\"\r\nI suspect it comes from a shape issue. Maybe it comes from my data, but it would be weird as sample_ppc is working (on a side note, the sample_posterior_predictive method seems to be missing from the current PyMC conda distribution)\r\n\r\n**Here is a minimal and reproducible example:**\r\n```python\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\nimport pymc3 as pm\r\nimport seaborn as sns\r\nimport warnings\r\n\r\nRANDOM_SEED = 904\r\nnp.random.seed(90)\r\n\r\n%matplotlib inline\r\nsns.set()\r\nwarnings.simplefilter(action='ignore', category=FutureWarning)\r\nprint('Running on PyMC3 v{}'.format(pm.__version__))\r\n\r\nmn_data = np.random.multinomial(n=100, pvals=[1/6.]*6, size=10)\r\n\r\nwith pm.Model() as dm_model:\r\n    \r\n    probs = pm.Dirichlet('probs', a=np.ones(6), shape=6)\r\n    obs = pm.Multinomial('obs', n=mn_data.sum(axis=1), p=probs, observed=mn_data)\r\n    \r\n    burned_trace = pm.sample(1000, tune=500, cores=4, random_seed=RANDOM_SEED)\r\n\r\npm.traceplot(burned_trace); # no sampling problem\r\n\r\nsim_priors = pm.sample_prior_predictive(samples=1000, model=dm_model, random_seed=RANDOM_SEED) # TypeError: 'NoneType' object is not subscriptable\r\n\r\npm.sample_posterior_predictive(burned_trace, samples=1000, model=dm_model, random_seed=RANDOM_SEED) # AttributeError: module 'pymc3' has no attribute 'sample_posterior_predictive'\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-10-06599b7f288c> in <module>()\r\n----> 1 sim_priors = pm.sample_prior_predictive(samples=1000, model=dm_model, random_seed=RANDOM_SEED)\r\n\r\n/anaconda/envs/cdf/lib/python3.6/site-packages/pymc3/sampling.py in sample_prior_predictive(samples, model, vars, random_seed)\r\n   1314     names = get_default_varnames(model.named_vars, include_transformed=False)\r\n   1315     # draw_values fails with auto-transformed variables. transform them later!\r\n-> 1316     values = draw_values([model[name] for name in names], size=samples)\r\n   1317 \r\n   1318     data = {k: v for k, v in zip(names, values)}\r\n\r\n/anaconda/envs/cdf/lib/python3.6/site-packages/pymc3/distributions/distribution.py in draw_values(params, point, size)\r\n    319             else:\r\n    320                 try:  # might evaluate in a bad order,\r\n--> 321                     evaluated[param_idx] = _draw_value(param, point=point, givens=givens.values(), size=size)\r\n    322                     if isinstance(param, collections.Hashable) and named_nodes_parents.get(param):\r\n    323                         givens[param.name] = (param, evaluated[param_idx])\r\n\r\n/anaconda/envs/cdf/lib/python3.6/site-packages/pymc3/distributions/distribution.py in _draw_value(param, point, givens, size)\r\n    403                     val = dist_tmp.random(point=point, size=None)\r\n    404                     dist_tmp.shape = val.shape\r\n--> 405                 return dist_tmp.random(point=point, size=size)\r\n    406             else:\r\n    407                 return param.distribution.random(point=point, size=size)\r\n\r\n/anaconda/envs/cdf/lib/python3.6/site-packages/pymc3/distributions/multivariate.py in random(self, point, size)\r\n    571         samples = generate_samples(self._random, n, p,\r\n    572                                    dist_shape=self.shape,\r\n--> 573                                    size=size)\r\n    574         return samples\r\n    575 \r\n\r\n/anaconda/envs/cdf/lib/python3.6/site-packages/pymc3/distributions/distribution.py in generate_samples(generator, *args, **kwargs)\r\n    512     elif broadcast_shape[:len(size_tup)] == size_tup:\r\n    513         suffix = broadcast_shape[len(size_tup):] + dist_shape\r\n--> 514         samples = [generator(*args, **kwargs).reshape(size_tup + (1,)) for _ in range(np.prod(suffix, dtype=int))]\r\n    515         samples = np.hstack(samples).reshape(size_tup + suffix)\r\n    516     else:\r\n\r\n/anaconda/envs/cdf/lib/python3.6/site-packages/pymc3/distributions/distribution.py in <listcomp>(.0)\r\n    512     elif broadcast_shape[:len(size_tup)] == size_tup:\r\n    513         suffix = broadcast_shape[len(size_tup):] + dist_shape\r\n--> 514         samples = [generator(*args, **kwargs).reshape(size_tup + (1,)) for _ in range(np.prod(suffix, dtype=int))]\r\n    515         samples = np.hstack(samples).reshape(size_tup + suffix)\r\n    516     else:\r\n\r\n/anaconda/envs/cdf/lib/python3.6/site-packages/pymc3/distributions/multivariate.py in _random(self, n, p, size)\r\n    536         if size == p.shape:\r\n    537             size = None\r\n--> 538         elif size[-len(p.shape):] == p.shape:\r\n    539             size = size[:len(size) - len(p.shape)]\r\n    540 \r\n\r\nTypeError: 'NoneType' object is not subscriptable\r\n```\r\n\r\n**Please provide any additional information below.**\r\nMy data and model are a lot more complex than the simple example here, but it does not seem to work in that simple case study.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: v3.5\r\n* Theano Version: v1.0.3\r\n* Python Version: 3.6.7\r\n* Operating system: Mac OS X\r\n* How did you install PyMC3: conda\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3271/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3270", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3270/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3270/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3270/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3270", "id": 383974624, "node_id": "MDU6SXNzdWUzODM5NzQ2MjQ=", "number": 3270, "title": "multivariate mixture random method is broken", "user": {"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-11-24T09:40:29Z", "updated_at": "2019-01-03T12:46:56Z", "closed_at": "2019-01-03T12:46:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://discourse.pymc.io/t/shape-mismatch-error-in-sample-ppc/2270\r\n\r\nThe problem is the weight random is incorrect:\r\nhttps://github.com/pymc-devs/pymc3/blob/6d07591962a6c135640a3c31903eba66b34e71d8/pymc3/distributions/mixture.py#L160-L164\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3270/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3256", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3256/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3256/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3256/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3256", "id": 381353011, "node_id": "MDU6SXNzdWUzODEzNTMwMTE=", "number": 3256, "title": "Bug with SQLite as backend when vars specified in backend", "user": {"login": "roblem", "id": 1871086, "node_id": "MDQ6VXNlcjE4NzEwODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1871086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roblem", "html_url": "https://github.com/roblem", "followers_url": "https://api.github.com/users/roblem/followers", "following_url": "https://api.github.com/users/roblem/following{/other_user}", "gists_url": "https://api.github.com/users/roblem/gists{/gist_id}", "starred_url": "https://api.github.com/users/roblem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roblem/subscriptions", "organizations_url": "https://api.github.com/users/roblem/orgs", "repos_url": "https://api.github.com/users/roblem/repos", "events_url": "https://api.github.com/users/roblem/events{/privacy}", "received_events_url": "https://api.github.com/users/roblem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-15T21:46:34Z", "updated_at": "2019-08-16T14:57:35Z", "closed_at": "2019-08-16T14:57:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Related to #3146 .  This error continues to occur when `vars` is specified.  This works\r\n```python\r\nwith model:\r\n    backend = pm3.backends.SQLite('/path/to/database.sqlite')\r\n    # step method\r\n    step = pm3.NUTS([x, y, z])\r\n    trace = pm3.sample(5000, step, trace=backend)\r\n```\r\nbut this doesn't\r\n```python\r\nwith model:\r\n    # note vars specified for not storing all variables in backend\r\n    backend = pm3.backends.SQLite('/path/to/database.sqlite',\r\n                    vars=[x, y])\r\n    # step method\r\n    step = pm3.NUTS([x, y, z])\r\n    trace = pm3.sample(5000, step, trace=backend)\r\n```\r\nwith this error\r\n```\r\nMultiprocess sampling (4 chains in 4 jobs)\r\nNUTS: [x, y, z]\r\nSampling 4 chains:  Traceback (most recent call last):\r\n  File \"~/anaconda/envs/pymc3_master/lib/python3.6/site-packages/pymc3/backends/sqlite.py\", line 164, in _execute_queue\r\n    self._queue[varname])\r\nsqlite3.ProgrammingError: Cannot operate on a closed cursor.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"~/anaconda/envs/pymc3_master/lib/python3.6/site-packages/pymc3/sampling.py\", line 999, in _mp_sample\r\n    trace.close()\r\n  File \"~/anaconda/envs/pymc3_master/lib/python3.6/site-packages/pymc3/backends/sqlite.py\", line 170, in close\r\n    self._execute_queue()\r\n  File \"~/anaconda/envs/pymc3_master/lib/python3.6/site-packages/pymc3/backends/sqlite.py\", line 165, in _execute_queue\r\n    self._queue[varname] = []\r\nsqlite3.ProgrammingError: Cannot operate on a closed database.\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3256/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3248", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3248/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3248/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3248/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3248", "id": 379336092, "node_id": "MDU6SXNzdWUzNzkzMzYwOTI=", "number": 3248, "title": "Error for default params of NoneType in pm.distributions.distribution._draw_value()", "user": {"login": "gilliss", "id": 7737986, "node_id": "MDQ6VXNlcjc3Mzc5ODY=", "avatar_url": "https://avatars.githubusercontent.com/u/7737986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilliss", "html_url": "https://github.com/gilliss", "followers_url": "https://api.github.com/users/gilliss/followers", "following_url": "https://api.github.com/users/gilliss/following{/other_user}", "gists_url": "https://api.github.com/users/gilliss/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilliss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilliss/subscriptions", "organizations_url": "https://api.github.com/users/gilliss/orgs", "repos_url": "https://api.github.com/users/gilliss/repos", "events_url": "https://api.github.com/users/gilliss/events{/privacy}", "received_events_url": "https://api.github.com/users/gilliss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-11-09T21:57:41Z", "updated_at": "2019-04-02T19:24:15Z", "closed_at": "2019-04-02T14:56:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm raising this issue following discussion at\r\nhttps://discourse.pymc.io/t/error-for-default-params-of-nonetype-in-pm-distributions-distribution-draw-value/2183\r\n\r\nI came across the following error when using `pm.distributions.continuous.TruncatedNormal.dist().random()`.\r\n```\r\nValueError: Unexpected type in draw_value: <class 'NoneType'>\r\n```\r\nThe error seems to be caused by the default values of `None` for the `upper` and `lower` parameters of the `BoundedContinuous` distribution object. That is,\r\n```\r\n>>> dist = pm.TruncatedNormal.dist()\r\n>>> type(dist.mu), dist.mu\r\n(<class 'theano.tensor.var.TensorConstant'>, TensorConstant{0})\r\n>>> type(dist.sd), dist.sd\r\n(<class 'theano.tensor.var.TensorConstant'>, TensorConstant{1.0})\r\n>>> type(dist.upper), dist.upper\r\n(<class 'NoneType'>, None)\r\n>>> type(dist.lower), dist.lower\r\n(<class 'NoneType'>, None)\r\n>>> dist.random()\r\nValueError: ...\r\n```\r\nIf I give a value to just one of 'upper' or 'lower', the error persists. If I give values to _both_ `upper` and `lower`, the error is avoided.\r\n```\r\n>>> dist.lower, dist.upper = 0, np.inf\r\n>>> dist.random()\r\narray(1.15514827)\r\n```\r\nAm I using the `random()` method in an unintended way? Perhaps it's just required that the user supply upper and lower bounds to the respective kwargs in `TruncatedNormal`-- in that case, it may be desirable to make those into positional arguments (matching `scipy.stats.truncnorm`).\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport pymc3 as pm\r\npm.TruncatedNormal.dist(lower = 0., upper = 100.).random() # no error\r\ntry: pm.TruncatedNormal.dist(lower = 0.).random() # error\r\nexcept ValueError: print('ValueError')\r\ntry: pm.TruncatedNormal.dist(upper = 100.).random() # error\r\nexcept ValueError: print('ValueError')\r\ntry: pm.TruncatedNormal.dist().random() # error\r\nexcept ValueError: print('ValueError')\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Applications/anaconda3/envs/Fit2/lib/python3.6/site-packages/pymc3/distributions/continuous.py\", line 578, in random\r\n    [self.mu, self.sd, self.lower, self.upper], point=point, size=size)\r\n  File \"/Applications/anaconda3/envs/Fit2/lib/python3.6/site-packages/pymc3/distributions/distribution.py\", line 321, in draw_values\r\n    evaluated[param_idx] = _draw_value(param, point=point, givens=givens.values(), size=size)\r\n  File \"/Applications/anaconda3/envs/Fit2/lib/python3.6/site-packages/pymc3/distributions/distribution.py\", line 418, in _draw_value\r\n    raise ValueError('Unexpected type in draw_value: %s' % type(param))\r\nValueError: Unexpected type in draw_value: <class 'NoneType'>\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.5\r\n* Theano Version: 1.0.2\r\n* Python Version: 3.6.6\r\n* Operating system: macOS 10.13.2\r\n* How did you install PyMC3: conda\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3248/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3246", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3246/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3246/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3246/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3246", "id": 378886563, "node_id": "MDU6SXNzdWUzNzg4ODY1NjM=", "number": 3246, "title": "sample_prior_predictive does not work for simple model with LKJ distribution", "user": {"login": "FedericoV", "id": 630134, "node_id": "MDQ6VXNlcjYzMDEzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/630134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FedericoV", "html_url": "https://github.com/FedericoV", "followers_url": "https://api.github.com/users/FedericoV/followers", "following_url": "https://api.github.com/users/FedericoV/following{/other_user}", "gists_url": "https://api.github.com/users/FedericoV/gists{/gist_id}", "starred_url": "https://api.github.com/users/FedericoV/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FedericoV/subscriptions", "organizations_url": "https://api.github.com/users/FedericoV/orgs", "repos_url": "https://api.github.com/users/FedericoV/repos", "events_url": "https://api.github.com/users/FedericoV/events{/privacy}", "received_events_url": "https://api.github.com/users/FedericoV/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-08T19:40:30Z", "updated_at": "2019-01-03T12:46:55Z", "closed_at": "2019-01-03T12:46:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you have questions about a specific use case, or you are not sure whether this is a bug or not, please post it to our discourse channel: https://discourse.pymc.io  \r\n\r\n## Description of your problem\r\n\r\nSampling the prior predictive distribution of an LKJ distribution gives an error\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport pymc3 as pm\r\n\r\nwith pm.Model() as model:\r\n    sd_dist = pm.HalfCauchy.dist(beta=1, shape=10)\r\n    chol_packed = pm.LKJCholeskyCov(name='chol_packed', n=20,\r\n                                    eta=1.0, sd_dist=sd_dist)\r\n    chol = pm.expand_packed_triangular(20, chol_packed)\r\n\r\nwith model:\r\n    pm.sample_prior_predictive(50)\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-5-7300cc3c60ce> in <module>()\r\n      8\r\n      9 with model:\r\n---> 10     pm.sample_prior_predictive(50)\r\n     11\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pymc3-3.5-py3.6.egg/pymc3/sampling.py in sample_prior_predictive(samples, model, vars, random_seed)\r\n   1332     names = get_default_varnames(model.named_vars, include_transformed=False)\r\n   1333     # draw_values fails with auto-transformed variables. transform them later!\r\n-> 1334     values = draw_values([model[name] for name in names], size=samples)\r\n   1335\r\n   1336     data = {k: v for k, v in zip(names, values)}\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pymc3-3.5-py3.6.egg/pymc3/distributions/distribution.py in draw_values(params, point, size)\r\n    310     while to_eval or missing_inputs:\r\n    311         if to_eval == missing_inputs:\r\n--> 312             raise ValueError('Cannot resolve inputs for {}'.format([str(params[j]) for j in to_eval]))\r\n    313         to_eval = set(missing_inputs)\r\n    314         missing_inputs = set()\r\n\r\nValueError: Cannot resolve inputs for ['chol_packed']\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: git commit: cd453bca9ac1af7afbb6c3bd5fe321040bf02a02 (master branch, bleeding edge)\r\n* Theano Version: 1.03\r\n* Python Version: 3.06\r\n* Operating system: osX\r\n* How did you install PyMC3: (conda/pip) git clone\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3246/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3156", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3156/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3156/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3156/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3156", "id": 350723172, "node_id": "MDU6SXNzdWUzNTA3MjMxNzI=", "number": 3156, "title": "Wrong test values in Categorical distribution", "user": {"login": "plison", "id": 11574012, "node_id": "MDQ6VXNlcjExNTc0MDEy", "avatar_url": "https://avatars.githubusercontent.com/u/11574012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plison", "html_url": "https://github.com/plison", "followers_url": "https://api.github.com/users/plison/followers", "following_url": "https://api.github.com/users/plison/following{/other_user}", "gists_url": "https://api.github.com/users/plison/gists{/gist_id}", "starred_url": "https://api.github.com/users/plison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plison/subscriptions", "organizations_url": "https://api.github.com/users/plison/orgs", "repos_url": "https://api.github.com/users/plison/repos", "events_url": "https://api.github.com/users/plison/events{/privacy}", "received_events_url": "https://api.github.com/users/plison/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-15T08:13:10Z", "updated_at": "2019-02-28T10:24:00Z", "closed_at": "2019-02-28T10:23:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "The test values for the Categorical distribution are incorrect:\r\n\r\n```python\r\nimport pymc3 as pm\r\nimport theano\r\n\r\nprobs_X = theano.shared(np.array([0.5, 0.5]))\r\nprobs_Y = theano.shared(np.array([[0.33, 0.33,0.34], [0.25, 0.25, 0.5]]))\r\n\r\nvalues_X = np.array([0, 0, 1])\r\nwith pm.Model() as model:\r\n    X = pm.Categorical(\"X\", p=probs_X, observed=values_X) \r\n    Y = pm.Categorical(\"Y\", p=probs_Y[X])\r\n    print(\"Default value:\", Y.distribution.default())\r\n````\r\n\r\ngives for some strange reason the value:\r\n```python\r\nDefault value: 8\r\n````\r\n\r\nThis incorrect value breaks the model, giving an infinite log-probability for the Y variable:\r\n\r\n```python\r\nmodel.check_test_point()\r\n```\r\n```\r\nY        -inf\r\nX   -2.080000\r\n```\r\n\r\nI'm using the latest development version of PyMC3, on Github.\r\n\r\nI checked the code by I don't quite understand what is going on. The default value seems to be derived from the mode, which is in the case of the Categorical is the argmax of the probability vector.  But this argmax is not actually computed, what is retrieved is the ``tag.test_value`` attribute of the ``mode`` tensor variable.  I have absolutely no clue as to why this test value gives 8 in this case...", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3156/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3149", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3149/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3149/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3149/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3149", "id": 349774683, "node_id": "MDU6SXNzdWUzNDk3NzQ2ODM=", "number": 3149, "title": "Cannot apply bound to Poisson distribution", "user": {"login": "lstmemery", "id": 9874586, "node_id": "MDQ6VXNlcjk4NzQ1ODY=", "avatar_url": "https://avatars.githubusercontent.com/u/9874586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lstmemery", "html_url": "https://github.com/lstmemery", "followers_url": "https://api.github.com/users/lstmemery/followers", "following_url": "https://api.github.com/users/lstmemery/following{/other_user}", "gists_url": "https://api.github.com/users/lstmemery/gists{/gist_id}", "starred_url": "https://api.github.com/users/lstmemery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lstmemery/subscriptions", "organizations_url": "https://api.github.com/users/lstmemery/orgs", "repos_url": "https://api.github.com/users/lstmemery/repos", "events_url": "https://api.github.com/users/lstmemery/events{/privacy}", "received_events_url": "https://api.github.com/users/lstmemery/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-08-12T00:52:13Z", "updated_at": "2018-08-13T23:51:17Z", "closed_at": "2018-08-13T06:26:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you have questions about a specific use case, or you are not sure whether this is a bug or not, please post it to our discourse channel: https://discourse.pymc.io  \r\n\r\nWhen I apply Bound to the Poisson I get the following error:\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport pymc3 as pm\r\n\r\nexample = pm.Model()\r\n\r\nwith example:\r\n    BoundPoisson = pm.Bound(pm.Poisson, upper = 6)\r\n    y = BoundPoisson(name = \"y\", mu = 1)\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-18-c9645cb7d458> in <module>()\r\n      3 with example:\r\n      4     BoundPoisson = pm.Bound(pm.Poisson, upper = 6)\r\n----> 5     y = BoundPoisson(name = \"y\", mu = 1)\r\n\r\n~/miniconda3/lib/python3.6/site-packages/pymc3/distributions/bound.py in __call__(self, *args, **kwargs)\r\n    209                              'with the cumulative probability function. See '\r\n    210                              'pymc3/examples/censored_data.py for an example.')\r\n--> 211         first, args = args[0], args[1:]\r\n    212 \r\n    213         if issubclass(self.distribution, Continuous):\r\n\r\nIndexError: tuple index out of range\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\nThis does not occur when I apply Bound to Normal, which makes me believe that this issue only applies to Poisson, or possibly other discrete distributions.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.5\r\n* Theano Version: 1.0.2\r\n* Python Version: 3.6.2\r\n* Operating system: Ubuntu 16.04\r\n* How did you install PyMC3: (conda/pip) pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3149/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3146", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3146/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3146/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3146/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3146", "id": 349521734, "node_id": "MDU6SXNzdWUzNDk1MjE3MzQ=", "number": 3146, "title": "Bug with SQLite as backend", "user": {"login": "springcoil", "id": 983944, "node_id": "MDQ6VXNlcjk4Mzk0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/983944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/springcoil", "html_url": "https://github.com/springcoil", "followers_url": "https://api.github.com/users/springcoil/followers", "following_url": "https://api.github.com/users/springcoil/following{/other_user}", "gists_url": "https://api.github.com/users/springcoil/gists{/gist_id}", "starred_url": "https://api.github.com/users/springcoil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/springcoil/subscriptions", "organizations_url": "https://api.github.com/users/springcoil/orgs", "repos_url": "https://api.github.com/users/springcoil/repos", "events_url": "https://api.github.com/users/springcoil/events{/privacy}", "received_events_url": "https://api.github.com/users/springcoil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, {"login": "aseyboldt", "id": 1882397, "node_id": "MDQ6VXNlcjE4ODIzOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1882397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aseyboldt", "html_url": "https://github.com/aseyboldt", "followers_url": "https://api.github.com/users/aseyboldt/followers", "following_url": "https://api.github.com/users/aseyboldt/following{/other_user}", "gists_url": "https://api.github.com/users/aseyboldt/gists{/gist_id}", "starred_url": "https://api.github.com/users/aseyboldt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aseyboldt/subscriptions", "organizations_url": "https://api.github.com/users/aseyboldt/orgs", "repos_url": "https://api.github.com/users/aseyboldt/repos", "events_url": "https://api.github.com/users/aseyboldt/events{/privacy}", "received_events_url": "https://api.github.com/users/aseyboldt/received_events", "type": "User", "site_admin": false}, {"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-08-10T13:46:02Z", "updated_at": "2018-08-12T09:29:29Z", "closed_at": "2018-08-12T09:29:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've come across this bug. I'm trying to reproduce the bioassay_model - and pass that to the backend. \r\n\r\nHas something changed with backend trace?\r\n\r\n```---------------------------------------------------------------------------\r\nProgrammingError                          Traceback (most recent call last)\r\n<ipython-input-32-9f8ba87a6c6a> in <module>()\r\n      1 with bioassay_model:\r\n----> 2     db_trace = pm.sample(100, trace='sqlite')\r\n\r\n~/miniconda3/envs/stat-rethink-pymc3/lib/python3.6/site-packages/pymc3/sampling.py in sample(draws, step, init, n_init, start, trace, chain_idx, chains, cores, tune, nuts_kwargs, step_kwargs, progressbar, model, random_seed, live_plot, discard_tuned_samples, live_plot_kwargs, compute_convergence_checks, use_mmap, **kwargs)\r\n    447             _print_step_hierarchy(step)\r\n    448             try:\r\n--> 449                 trace = _mp_sample(**sample_args)\r\n    450             except pickle.PickleError:\r\n    451                 _log.warning(\"Could not pickle model, sampling singlethreaded.\")\r\n\r\n~/miniconda3/envs/stat-rethink-pymc3/lib/python3.6/site-packages/pymc3/sampling.py in _mp_sample(draws, tune, step, chains, cores, chain, random_seed, start, progressbar, trace, model, use_mmap, **kwargs)\r\n   1013         finally:\r\n   1014             for trace in traces:\r\n-> 1015                 trace.close()\r\n   1016 \r\n   1017     else:\r\n\r\n~/miniconda3/envs/stat-rethink-pymc3/lib/python3.6/site-packages/pymc3/backends/sqlite.py in close(self)\r\n    165 \r\n    166     def close(self):\r\n--> 167         self._execute_queue()\r\n    168         self.db.close()\r\n    169 \r\n\r\n~/miniconda3/envs/stat-rethink-pymc3/lib/python3.6/site-packages/pymc3/backends/sqlite.py in _execute_queue(self)\r\n    162                 self.db.cursor.executemany(self.var_inserts[varname],\r\n    163                                            self._queue[varname])\r\n--> 164                 self._queue[varname] = []\r\n    165 \r\n    166     def close(self):\r\n\r\nProgrammingError: Cannot operate on a closed database.```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3146/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3144", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3144/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3144/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3144/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3144", "id": 349093460, "node_id": "MDU6SXNzdWUzNDkwOTM0NjA=", "number": 3144, "title": "Bug with pm.Forestplot", "user": {"login": "springcoil", "id": 983944, "node_id": "MDQ6VXNlcjk4Mzk0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/983944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/springcoil", "html_url": "https://github.com/springcoil", "followers_url": "https://api.github.com/users/springcoil/followers", "following_url": "https://api.github.com/users/springcoil/following{/other_user}", "gists_url": "https://api.github.com/users/springcoil/gists{/gist_id}", "starred_url": "https://api.github.com/users/springcoil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/springcoil/subscriptions", "organizations_url": "https://api.github.com/users/springcoil/orgs", "repos_url": "https://api.github.com/users/springcoil/repos", "events_url": "https://api.github.com/users/springcoil/events{/privacy}", "received_events_url": "https://api.github.com/users/springcoil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-09T11:48:17Z", "updated_at": "2018-09-12T15:51:24Z", "closed_at": "2018-09-12T15:51:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you have questions about a specific use case, or you are not sure whether this is a bug or not, please post it to our discourse channel: https://discourse.pymc.io  \r\n\r\n## Description of your problem\r\nWhile working on https://discourse.pymc.io/t/problems-with-hierachical-bayesian-model-advertising/1320/6 I came across a problem with forestplot. \r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\npm.forest_plot(trace, varnames=['theta'])\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\n---------------------------------------------------------------------\r\nValueError                          Traceback (most recent call last)\r\n<ipython-input-26-f6d543fc9676> in <module>()\r\n----> 1 pm.forestplot(trace, varnames='thetas')\r\n\r\n~/miniconda3/envs/stat-rethink-pymc3/lib/python3.6/site-packages/pymc3/plots/forestplot.py in forestplot(trace, models, varnames, transform, alpha, quartiles, rhat, main, xtitle, xlim, ylabels, colors, chain_spacing, vline, gs, plot_transformed, plot_kwargs)\r\n    285         gr_plot.set_ylim(- var + 0.5, 0.5)\r\n    286 \r\n--> 287     plotrange = [np.min(all_quants), np.max(all_quants)]\r\n    288     datarange = plotrange[1] - plotrange[0]\r\n    289     interval_plot.set_xlim(plotrange[0] - 0.05 * datarange,\r\n\r\n~/miniconda3/envs/stat-rethink-pymc3/lib/python3.6/site-packages/numpy/core/fromnumeric.py in amin(a, axis, out, keepdims)\r\n   2418 \r\n   2419     return _methods._amin(a, axis=axis,\r\n-> 2420                           out=out, **kwargs)\r\n   2421 \r\n   2422 \r\n\r\n~/miniconda3/envs/stat-rethink-pymc3/lib/python3.6/site-packages/numpy/core/_methods.py in _amin(a, axis, out, keepdims)\r\n     27 \r\n     28 def _amin(a, axis=None, out=None, keepdims=False):\r\n---> 29     return umr_minimum(a, axis, None, out, keepdims)\r\n     30 \r\n     31 def _sum(a, axis=None, dtype=None, out=None, keepdims=False):\r\n\r\nValueError: zero-size array to reduction operation minimum which has no identity\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\nI think everything is up to date. Latest version of PyMC3, however I saw the same bug with various versions of PyMC3. \r\n\r\nI think there's some error in my model but perhaps we need better error handling for the forestplot. \r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3144/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3139", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3139/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3139/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3139/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3139", "id": 348170048, "node_id": "MDU6SXNzdWUzNDgxNzAwNDg=", "number": 3139, "title": "Bug: Normal distribution throws errors when using shared variables", "user": {"login": "benyi1981", "id": 7785906, "node_id": "MDQ6VXNlcjc3ODU5MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/7785906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benyi1981", "html_url": "https://github.com/benyi1981", "followers_url": "https://api.github.com/users/benyi1981/followers", "following_url": "https://api.github.com/users/benyi1981/following{/other_user}", "gists_url": "https://api.github.com/users/benyi1981/gists{/gist_id}", "starred_url": "https://api.github.com/users/benyi1981/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benyi1981/subscriptions", "organizations_url": "https://api.github.com/users/benyi1981/orgs", "repos_url": "https://api.github.com/users/benyi1981/repos", "events_url": "https://api.github.com/users/benyi1981/events{/privacy}", "received_events_url": "https://api.github.com/users/benyi1981/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 818212053, "node_id": "MDU6TGFiZWw4MTgyMTIwNTM=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/request%20discussion", "name": "request discussion", "color": "dbef5b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-07T05:15:16Z", "updated_at": "2021-01-31T10:29:31Z", "closed_at": "2021-01-31T10:29:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am having trouble implementing Normal distribution with mu that is a shared variable. See below example code:\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nproduct_mu_shared = shared(0.0)\r\nproduct_sd = 0.1\r\ntotal_quantity_shared = shared(np.array([0.0, 0.1, 0.2]))\r\n\r\nwith pm.Model() as quantity_model:    \r\n    \r\n    # Priors\r\n    a = pm.Lognormal('a',mu=product_mu_shared, sd=product_sd)\r\n    b = pm.Normal('b',mu=0.0, sd=product_sd)\r\n    d = pm.Normal('d', mu=product_mu_shared, sd=product_sd)\r\n\r\n\r\n    # Data likelihood\r\n    vol = pm.Normal('vol',mu= a+b+d, observed=total_quantity_shared)\r\n        \r\n    # Inference\r\n    trace = pm.sample(10,tune=10)\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-6-6131815c61f7> in <module>()\r\n      4     a = pm.Lognormal('a',mu=product_mu_shared, sd=product_sd)\r\n      5     b = pm.Normal('b',mu=0.0, sd=product_sd)\r\n----> 6     d = pm.Normal('d', mu=product_mu_shared, sd=product_sd)\r\n      7 \r\n      8 \r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pymc3\\distributions\\distribution.py in __new__(cls, name, *args, **kwargs)\r\n     40             total_size = kwargs.pop('total_size', None)\r\n     41             dist = cls.dist(*args, **kwargs)\r\n---> 42             return model.Var(name, dist, data, total_size)\r\n     43         else:\r\n     44             raise TypeError(\"Name needs to be a string but got: {}\".format(name))\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pymc3\\model.py in Var(self, name, dist, data, total_size)\r\n    806                 with self:\r\n    807                     var = FreeRV(name=name, distribution=dist,\r\n--> 808                                  total_size=total_size, model=self)\r\n    809                 self.free_RVs.append(var)\r\n    810             else:\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pymc3\\model.py in __init__(self, type, owner, index, name, distribution, total_size, model)\r\n   1205             self.distribution = distribution\r\n   1206             self.tag.test_value = np.ones(\r\n-> 1207                 distribution.shape, distribution.dtype) * distribution.default()\r\n   1208             self.logp_elemwiset = distribution.logp(self)\r\n   1209             # The logp might need scaling in minibatches.\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pymc3\\distributions\\distribution.py in default(self)\r\n     65 \r\n     66     def default(self):\r\n---> 67         return np.asarray(self.get_test_val(self.testval, self.defaults), self.dtype)\r\n     68 \r\n     69     def get_test_val(self, val, defaults):\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pymc3\\distributions\\distribution.py in get_test_val(self, val, defaults)\r\n     70         if val is None:\r\n     71             for v in defaults:\r\n---> 72                 if hasattr(self, v) and np.all(np.isfinite(self.getattr_value(v))):\r\n     73                     return self.getattr_value(v)\r\n     74         else:\r\n\r\nTypeError: ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''```\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.5\r\n* Theano Version: 1.0.2\r\n* Python Version: 3.6\r\n* Operating system: Windows 10\r\n* How did you install PyMC3: (conda/pip) conda-forge\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3139/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3122", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3122/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3122/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3122/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3122", "id": 345447838, "node_id": "MDU6SXNzdWUzNDU0NDc4Mzg=", "number": 3122, "title": "Theano error when only 1 value is masked", "user": {"login": "JackCaster", "id": 18400141, "node_id": "MDQ6VXNlcjE4NDAwMTQx", "avatar_url": "https://avatars.githubusercontent.com/u/18400141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JackCaster", "html_url": "https://github.com/JackCaster", "followers_url": "https://api.github.com/users/JackCaster/followers", "following_url": "https://api.github.com/users/JackCaster/following{/other_user}", "gists_url": "https://api.github.com/users/JackCaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/JackCaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JackCaster/subscriptions", "organizations_url": "https://api.github.com/users/JackCaster/orgs", "repos_url": "https://api.github.com/users/JackCaster/repos", "events_url": "https://api.github.com/users/JackCaster/events{/privacy}", "received_events_url": "https://api.github.com/users/JackCaster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-07-28T13:19:01Z", "updated_at": "2019-01-15T20:30:09Z", "closed_at": "2019-01-15T20:30:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This issues follows the discussion on [discourse](https://discourse.pymc.io/t/dealing-with-1-missing-observation/1595). I encountered an error when I have a numpy masked array with only 1 observation missing. In this case, Theano raises the error:\r\n```\r\nTypeError: Cannot convert Type TensorType(int64, vector) (of Variable obs_t_minus_1_missing_missing_shared__) into Type TensorType(int64, (True,)). You can try to manually convert obs_t_minus_1_missing_missing_shared__ into a TensorType(int64, (True,)).\r\n```\r\nInstead, if I have 2 obervations missing, everything works fine. I have attached a Jupyter notebook to recreate the problem ([link](https://gist.github.com/JackCaster/0a082e07a98bc8cfbbd865037da01c63)). In the notebook change the variable `NUM_MISSING_DATAPOINTS` to 1 or 2 to investigate the issue. \r\n\r\nPyMC3 version 3.5\r\nTheano version 1.0.2", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3122/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3051", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3051/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3051/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3051/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3051", "id": 335083466, "node_id": "MDU6SXNzdWUzMzUwODM0NjY=", "number": 3051, "title": "Type problem in MvNormal.logp when called with numpy array", "user": {"login": "katosh", "id": 4857068, "node_id": "MDQ6VXNlcjQ4NTcwNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/4857068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/katosh", "html_url": "https://github.com/katosh", "followers_url": "https://api.github.com/users/katosh/followers", "following_url": "https://api.github.com/users/katosh/following{/other_user}", "gists_url": "https://api.github.com/users/katosh/gists{/gist_id}", "starred_url": "https://api.github.com/users/katosh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/katosh/subscriptions", "organizations_url": "https://api.github.com/users/katosh/orgs", "repos_url": "https://api.github.com/users/katosh/repos", "events_url": "https://api.github.com/users/katosh/events{/privacy}", "received_events_url": "https://api.github.com/users/katosh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-06-23T09:05:18Z", "updated_at": "2020-05-05T11:53:57Z", "closed_at": "2020-05-05T11:53:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of the problem\r\n\r\nThe multivariate distribution fails here:\r\n```\r\nimport numpy as np\r\nimport pymc3 as pm\r\npm.MvNormal.dist(mu = np.array([0, 0]), cov = np.diag([1, 1])).logp(np.array([1, 1])).eval()\r\n```\r\nwith the error\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-17-f2b19e774b86> in <module>()\r\n      1 mvdist = pm.MvNormal.dist(mu = np.array([0, 0]), cov = np.diag([1, 1]))\r\n      2 testData = np.array([1, 1])\r\n----> 3 r = mvdist.logp(testData).eval()\r\n\r\n~/Envs/noteEnv2/lib/python3.5/site-packages/pymc3/distributions/multivariate.py in logp(self, value)\r\n    272     def logp(self, value):\r\n    273         quaddist, logdet, ok = self._quaddist(value)\r\n--> 274         k = value.shape[-1].astype(theano.config.floatX)\r\n    275         norm = - 0.5 * k * pm.floatX(np.log(2 * np.pi))\r\n    276         return bound(norm - 0.5 * quaddist - logdet, ok)\r\n\r\nAttributeError: 'int' object has no attribute 'astype'\r\n```\r\nIt seems `value.shape` is aspected to have the `astype` callable, like a numpy array but is only a python base tuple:\r\n```\r\ntype(np.array([1, 1]).shape)\r\n> tuple\r\n```\r\nOverwriting the shape by a numpy array did **not** do the trick:\r\n```\r\ntestData = np.array([1, 1])\r\ntestData.shape = np.array(testData.shape)\r\ntype(testData.shape)\r\n> tuple\r\n```\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.4.1\r\n* Theano Version: 1.0.5\r\n* Python Version: 3.5.2\r\n* Operating system: Ubuntu 16.04.4 LTS\r\n* How did you install PyMC3: pip install git+https://github.com/pymc-devs/pymc3\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3051/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3003", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3003/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3003/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3003/events", "html_url": "https://github.com/pymc-devs/pymc/issues/3003", "id": 329095081, "node_id": "MDU6SXNzdWUzMjkwOTUwODE=", "number": 3003, "title": "libav-tools no longer available in the Ubuntu repos that the Docker image uses", "user": {"login": "AustinRochford", "id": 3465592, "node_id": "MDQ6VXNlcjM0NjU1OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3465592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AustinRochford", "html_url": "https://github.com/AustinRochford", "followers_url": "https://api.github.com/users/AustinRochford/followers", "following_url": "https://api.github.com/users/AustinRochford/following{/other_user}", "gists_url": "https://api.github.com/users/AustinRochford/gists{/gist_id}", "starred_url": "https://api.github.com/users/AustinRochford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AustinRochford/subscriptions", "organizations_url": "https://api.github.com/users/AustinRochford/orgs", "repos_url": "https://api.github.com/users/AustinRochford/repos", "events_url": "https://api.github.com/users/AustinRochford/events{/privacy}", "received_events_url": "https://api.github.com/users/AustinRochford/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "AustinRochford", "id": 3465592, "node_id": "MDQ6VXNlcjM0NjU1OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3465592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AustinRochford", "html_url": "https://github.com/AustinRochford", "followers_url": "https://api.github.com/users/AustinRochford/followers", "following_url": "https://api.github.com/users/AustinRochford/following{/other_user}", "gists_url": "https://api.github.com/users/AustinRochford/gists{/gist_id}", "starred_url": "https://api.github.com/users/AustinRochford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AustinRochford/subscriptions", "organizations_url": "https://api.github.com/users/AustinRochford/orgs", "repos_url": "https://api.github.com/users/AustinRochford/repos", "events_url": "https://api.github.com/users/AustinRochford/events{/privacy}", "received_events_url": "https://api.github.com/users/AustinRochford/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "AustinRochford", "id": 3465592, "node_id": "MDQ6VXNlcjM0NjU1OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3465592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AustinRochford", "html_url": "https://github.com/AustinRochford", "followers_url": "https://api.github.com/users/AustinRochford/followers", "following_url": "https://api.github.com/users/AustinRochford/following{/other_user}", "gists_url": "https://api.github.com/users/AustinRochford/gists{/gist_id}", "starred_url": "https://api.github.com/users/AustinRochford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AustinRochford/subscriptions", "organizations_url": "https://api.github.com/users/AustinRochford/orgs", "repos_url": "https://api.github.com/users/AustinRochford/repos", "events_url": "https://api.github.com/users/AustinRochford/events{/privacy}", "received_events_url": "https://api.github.com/users/AustinRochford/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-06-04T15:04:03Z", "updated_at": "2018-06-19T12:51:32Z", "closed_at": "2018-06-19T12:51:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`libav-tools` no longer available in the Ubuntu repos that the Docker image uses", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/3003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/3003/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2979", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2979/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2979/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2979/events", "html_url": "https://github.com/pymc-devs/pymc/pull/2979", "id": 324150836, "node_id": "MDExOlB1bGxSZXF1ZXN0MTg4ODM0Nzg1", "number": 2979, "title": "Bug Fix for 2909", "user": {"login": "springcoil", "id": 983944, "node_id": "MDQ6VXNlcjk4Mzk0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/983944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/springcoil", "html_url": "https://github.com/springcoil", "followers_url": "https://api.github.com/users/springcoil/followers", "following_url": "https://api.github.com/users/springcoil/following{/other_user}", "gists_url": "https://api.github.com/users/springcoil/gists{/gist_id}", "starred_url": "https://api.github.com/users/springcoil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/springcoil/subscriptions", "organizations_url": "https://api.github.com/users/springcoil/orgs", "repos_url": "https://api.github.com/users/springcoil/repos", "events_url": "https://api.github.com/users/springcoil/events{/privacy}", "received_events_url": "https://api.github.com/users/springcoil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ColCarroll", "id": 2295568, "node_id": "MDQ6VXNlcjIyOTU1Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/2295568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColCarroll", "html_url": "https://github.com/ColCarroll", "followers_url": "https://api.github.com/users/ColCarroll/followers", "following_url": "https://api.github.com/users/ColCarroll/following{/other_user}", "gists_url": "https://api.github.com/users/ColCarroll/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColCarroll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColCarroll/subscriptions", "organizations_url": "https://api.github.com/users/ColCarroll/orgs", "repos_url": "https://api.github.com/users/ColCarroll/repos", "events_url": "https://api.github.com/users/ColCarroll/events{/privacy}", "received_events_url": "https://api.github.com/users/ColCarroll/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ColCarroll", "id": 2295568, "node_id": "MDQ6VXNlcjIyOTU1Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/2295568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColCarroll", "html_url": "https://github.com/ColCarroll", "followers_url": "https://api.github.com/users/ColCarroll/followers", "following_url": "https://api.github.com/users/ColCarroll/following{/other_user}", "gists_url": "https://api.github.com/users/ColCarroll/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColCarroll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColCarroll/subscriptions", "organizations_url": "https://api.github.com/users/ColCarroll/orgs", "repos_url": "https://api.github.com/users/ColCarroll/repos", "events_url": "https://api.github.com/users/ColCarroll/events{/privacy}", "received_events_url": "https://api.github.com/users/ColCarroll/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/14", "html_url": "https://github.com/pymc-devs/pymc/milestone/14", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/14/labels", "id": 3249389, "node_id": "MDk6TWlsZXN0b25lMzI0OTM4OQ==", "number": 14, "title": "3.5", "description": null, "creator": {"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2018-04-07T06:27:21Z", "updated_at": "2021-01-22T12:04:26Z", "due_on": null, "closed_at": "2021-01-22T12:04:26Z"}, "comments": 10, "created_at": "2018-05-17T19:15:00Z", "updated_at": "2018-05-18T20:52:39Z", "closed_at": "2018-05-18T11:40:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/2979", "html_url": "https://github.com/pymc-devs/pymc/pull/2979", "diff_url": "https://github.com/pymc-devs/pymc/pull/2979.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/2979.patch", "merged_at": "2018-05-18T11:40:24Z"}, "body": "I tried to have a go at extending https://github.com/pymc-devs/pymc3/pull/2946 and adding in a test. \r\n\r\nI think there's a chance these tests will be flaky, and I discovered some flakiness locally. \r\n\r\nThis is an attempt to fix #2909\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2979/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2973", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2973/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2973/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2973/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2973", "id": 322595151, "node_id": "MDU6SXNzdWUzMjI1OTUxNTE=", "number": 2973, "title": "Error documentation distributions.multivariate.LKJCholeskyCov", "user": {"login": "JackCaster", "id": 18400141, "node_id": "MDQ6VXNlcjE4NDAwMTQx", "avatar_url": "https://avatars.githubusercontent.com/u/18400141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JackCaster", "html_url": "https://github.com/JackCaster", "followers_url": "https://api.github.com/users/JackCaster/followers", "following_url": "https://api.github.com/users/JackCaster/following{/other_user}", "gists_url": "https://api.github.com/users/JackCaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/JackCaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JackCaster/subscriptions", "organizations_url": "https://api.github.com/users/JackCaster/orgs", "repos_url": "https://api.github.com/users/JackCaster/repos", "events_url": "https://api.github.com/users/JackCaster/events{/privacy}", "received_events_url": "https://api.github.com/users/JackCaster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-13T13:43:51Z", "updated_at": "2018-05-18T09:59:35Z", "closed_at": "2018-05-18T09:59:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In example of LKJCholeskyCov, [at line 863](https://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/multivariate.py#L863) it reads:\r\n\r\n```\r\nvals_raw = pm.Normal('vals_raw', mu=np.zeros(10), sd=1)\r\n```\r\nbut it should be:\r\n```\r\nvals_raw = pm.Normal('vals_raw', mu=0, sd=1, shape=10)\r\n```\r\notherwise an error is raised\r\n```\r\nTypeError: For compute_test_value, one input test value does not have the requested type.\r\n\r\nThe error when converting the test value to that variable type:\r\nWrong number of dimensions: expected 0, got 1 with shape (10,).\r\n```\r\nIf it is an error, I could create a PR.\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2973/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2966", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2966/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2966/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2966/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2966", "id": 320239276, "node_id": "MDU6SXNzdWUzMjAyMzkyNzY=", "number": 2966, "title": "Distributions not being tested over their whole domain", "user": {"login": "gBokiau", "id": 108301, "node_id": "MDQ6VXNlcjEwODMwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/108301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gBokiau", "html_url": "https://github.com/gBokiau", "followers_url": "https://api.github.com/users/gBokiau/followers", "following_url": "https://api.github.com/users/gBokiau/following{/other_user}", "gists_url": "https://api.github.com/users/gBokiau/gists{/gist_id}", "starred_url": "https://api.github.com/users/gBokiau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gBokiau/subscriptions", "organizations_url": "https://api.github.com/users/gBokiau/orgs", "repos_url": "https://api.github.com/users/gBokiau/repos", "events_url": "https://api.github.com/users/gBokiau/events{/privacy}", "received_events_url": "https://api.github.com/users/gBokiau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-04T11:22:52Z", "updated_at": "2021-11-03T16:34:25Z", "closed_at": "2021-11-03T16:34:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Following up on https://github.com/pymc-devs/pymc3/pull/2961 and https://github.com/pymc-devs/pymc3/pull/2961#issuecomment-385251136, it looks like the tests for distribution functions are not systematically covering the whole domain. Possibly more errors such as the one found there are looming and affecting the precision of inferences.\r\n\r\nThe test code gives the impression that they do cover the whole space and parameter domain, but in truth\u2014 it seems\u2014they don't, which is ever more pernicious.\r\n\r\nIt would be nice to make sure that they do so, and in a systematic way.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2966/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2966/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2954", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2954/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2954/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2954/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2954", "id": 318207387, "node_id": "MDU6SXNzdWUzMTgyMDczODc=", "number": 2954, "title": "sample_ppc does not respect the size of Mixture likelihoods", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2018-04-26T21:43:21Z", "updated_at": "2018-06-14T07:48:11Z", "closed_at": "2018-06-14T07:48:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When running `sample_ppc` on models with a `Mixture` likelihood, the resulting posterior sample is always comprised of scalar values. That is, a likelihood of size N that is sampled with `sample_ppc` for M iterations returns a trace of length (M,) rather than (M, N) as expected.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2954/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2954/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2948", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2948/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2948/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2948/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2948", "id": 316869117, "node_id": "MDU6SXNzdWUzMTY4NjkxMTc=", "number": 2948, "title": "Theano does not sample from HalfCauchy and Lognormal together", "user": {"login": "philastrophist", "id": 14169057, "node_id": "MDQ6VXNlcjE0MTY5MDU3", "avatar_url": "https://avatars.githubusercontent.com/u/14169057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philastrophist", "html_url": "https://github.com/philastrophist", "followers_url": "https://api.github.com/users/philastrophist/followers", "following_url": "https://api.github.com/users/philastrophist/following{/other_user}", "gists_url": "https://api.github.com/users/philastrophist/gists{/gist_id}", "starred_url": "https://api.github.com/users/philastrophist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philastrophist/subscriptions", "organizations_url": "https://api.github.com/users/philastrophist/orgs", "repos_url": "https://api.github.com/users/philastrophist/repos", "events_url": "https://api.github.com/users/philastrophist/events{/privacy}", "received_events_url": "https://api.github.com/users/philastrophist/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-04-23T15:40:44Z", "updated_at": "2018-05-03T20:10:05Z", "closed_at": "2018-04-24T21:12:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Theano does not sample from a very simple model.\r\n\r\nI have purged the theano cache, reinstalled theano/pymc3 to no avail.\r\nI always get an error relating to dimension mis-match. I don't understand.\r\n\r\nThe model runs fine if I leave out `nu` or `sigma`. Both together just results in the error message below.\r\n\r\n    import theano\r\n    theano.compile.DebugMode = True\r\n    print(theano.__version__)\r\n    print(pm.__version__)\r\n\r\n    ndim = 3\r\n    with pm.Model() as model:\r\n        sigma = pm.Lognormal('sigma', np.zeros(ndim), np.ones(ndim), shape=ndim)  # variance for the correlation matrix\r\n        nu = pm.HalfCauchy('nu', beta=10) \r\n        pm.sample(10)\r\n\r\nAnswer:\r\n\r\n    1.0.1\r\n    3.4.1\r\n\r\n    ValueError: Input dimension mis-match. (input[0].shape[0] = 3, input[1].shape[0] = 1)\r\n    Apply node that caused the error: Elemwise{Composite{((-i0) + i1 + i2)}}(Elemwise{Composite{log(exp(i0))}}.0, TensorConstant{(1,) of -1.0}, TensorConstant{(1,) of 1.0})\r\n    Toposort index: 8\r\n    Inputs types: [TensorType(float64, vector), TensorType(float64, vector), TensorType(float64, (True,))]\r\n    Inputs shapes: [(3,), (1,), (1,)]\r\n    Inputs strides: [(8,), (8,), (8,)]\r\n    Inputs values: [array([-0.0915752 ,  0.1090227 , -0.38337466]), array([-1.]), array([ 1.])]\r\n    Outputs clients: [[IncSubtensor{InplaceInc;int64:int64:}(Alloc.0, (d__logp/dsigma_log__), Constant{1}, Constant{4})]]\r\n    \r\n    HINT: Re-running with most Theano optimization disabled could give you a back-trace of when this node was created. This can be done with by setting the Theano flag 'optimizer=fast_compile'. If that does not work, Theano optimizations can be disabled with 'optimizer=None'.\r\n    HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.4.1\r\n* Theano Version: 1.0.1\r\n* Python Version: 3.6.5\r\n* Operating system: Scientific Linux  3.10.0-514.el7.x86_64\r\n* How did you install PyMC3: (conda/pip):\r\n`pip install git+https://github.com/pymc-devs/pymc3.git`\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2948/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2938", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2938/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2938/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2938/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2938", "id": 316253044, "node_id": "MDU6SXNzdWUzMTYyNTMwNDQ=", "number": 2938, "title": "Test for GARCH11", "user": {"login": "springcoil", "id": 983944, "node_id": "MDQ6VXNlcjk4Mzk0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/983944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/springcoil", "html_url": "https://github.com/springcoil", "followers_url": "https://api.github.com/users/springcoil/followers", "following_url": "https://api.github.com/users/springcoil/following{/other_user}", "gists_url": "https://api.github.com/users/springcoil/gists{/gist_id}", "starred_url": "https://api.github.com/users/springcoil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/springcoil/subscriptions", "organizations_url": "https://api.github.com/users/springcoil/orgs", "repos_url": "https://api.github.com/users/springcoil/repos", "events_url": "https://api.github.com/users/springcoil/events{/privacy}", "received_events_url": "https://api.github.com/users/springcoil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-20T12:44:39Z", "updated_at": "2018-04-20T16:00:38Z", "closed_at": "2018-04-20T16:00:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Based on what we discovered in the review off #2937 we need a test for GARCH11. \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2938/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2933", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2933/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2933/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2933/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2933", "id": 315583825, "node_id": "MDU6SXNzdWUzMTU1ODM4MjU=", "number": 2933, "title": "KeyError when variables are excluded from trace", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-18T18:01:38Z", "updated_at": "2018-04-20T03:25:16Z", "closed_at": "2018-04-20T03:25:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The docstring for `sample` allows for \"a list of variables to track\" as a valid `trace` argument, for cases when only a subset of variables are desired for posterior inference. However, this breaks sampling, as a `KeyError` is raised when sampling completes:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-7-45e332f1b8ef> in <module>()\r\n      1 with model:\r\n----> 2     trace = sample(1000, trace=[dL0])\r\n\r\n~/Repos/pymc3/pymc3/sampling.py in sample(draws, step, init, n_init, start, trace, chain_idx, chains, cores, tune, nuts_kwargs, step_kwargs, progressbar, model, random_seed, live_plot, discard_tuned_samples, live_plot_kwargs, compute_convergence_checks, use_mmap, **kwargs)\r\n    471                 \"convergence reliably.\")\r\n    472         else:\r\n--> 473             trace.report._run_convergence_checks(trace, model)\r\n    474 \r\n    475     trace.report._log_summary()\r\n\r\n~/Repos/pymc3/pymc3/backends/report.py in _run_convergence_checks(self, trace, model)\r\n     80             varnames.append(rv_name)\r\n     81 \r\n---> 82         self._effective_n = effective_n = diagnostics.effective_n(trace, varnames)\r\n     83         self._gelman_rubin = gelman_rubin = diagnostics.gelman_rubin(trace, varnames)\r\n     84 \r\n\r\n~/Repos/pymc3/pymc3/diagnostics.py in effective_n(mtrace, varnames, include_transformed)\r\n    298 \r\n    299     for var in varnames:\r\n--> 300         n_eff[var] = generate_neff(mtrace.get_values(var, combine=False))\r\n    301 \r\n    302     return n_eff\r\n\r\n~/Repos/pymc3/pymc3/backends/base.py in get_values(self, varname, burn, thin, combine, chains, squeeze)\r\n    426         try:\r\n    427             results = [self._straces[chain].get_values(varname, burn, thin)\r\n--> 428                        for chain in chains]\r\n    429         except TypeError:  # Single chain passed.\r\n    430             results = [self._straces[chains].get_values(varname, burn, thin)]\r\n\r\n~/Repos/pymc3/pymc3/backends/base.py in <listcomp>(.0)\r\n    426         try:\r\n    427             results = [self._straces[chain].get_values(varname, burn, thin)\r\n--> 428                        for chain in chains]\r\n    429         except TypeError:  # Single chain passed.\r\n    430             results = [self._straces[chains].get_values(varname, burn, thin)]\r\n\r\n~/Repos/pymc3/pymc3/backends/ndarray.py in get_values(self, varname, burn, thin)\r\n    141         A NumPy array\r\n    142         \"\"\"\r\n--> 143         return self.samples[varname][burn::thin]\r\n    144 \r\n    145     def _slice(self, idx):\r\n\r\nKeyError: 'beta0'\r\n```\r\n\r\nwhere here `beta0` is an excluded variable. The call here was:\r\n\r\n```python\r\nwith model:\r\n    trace = sample(1000, trace=[dL0])\r\n```\r\n\r\nIt looks like this arises when `effective_n` is calculated. I guess we have two choices: \r\n\r\n1. Drop this option for the `trace` argument\r\n2. Only calculate effective N for the specified variables\r\n\r\nThere are instances when users want to exclude large numbers of intermediate variables from the trace, so I am currently in favor of (2).", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2933/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2916", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2916/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2916/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2916/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2916", "id": 310738630, "node_id": "MDU6SXNzdWUzMTA3Mzg2MzA=", "number": 2916, "title": "Metropolis working with discrete and continuous variables", "user": {"login": "charlotteburki", "id": 22500357, "node_id": "MDQ6VXNlcjIyNTAwMzU3", "avatar_url": "https://avatars.githubusercontent.com/u/22500357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charlotteburki", "html_url": "https://github.com/charlotteburki", "followers_url": "https://api.github.com/users/charlotteburki/followers", "following_url": "https://api.github.com/users/charlotteburki/following{/other_user}", "gists_url": "https://api.github.com/users/charlotteburki/gists{/gist_id}", "starred_url": "https://api.github.com/users/charlotteburki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charlotteburki/subscriptions", "organizations_url": "https://api.github.com/users/charlotteburki/orgs", "repos_url": "https://api.github.com/users/charlotteburki/repos", "events_url": "https://api.github.com/users/charlotteburki/events{/privacy}", "received_events_url": "https://api.github.com/users/charlotteburki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-03T08:21:30Z", "updated_at": "2018-04-04T11:52:06Z", "closed_at": "2018-04-04T11:52:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For the metropolis step when working with both continuous and discrete variables and when blocked='True' (so updating all parameters together) there is an error that the continous variables are of integer type. This is because in the metropolis script:\r\n\r\n```python\r\n        if self.any_discrete:\r\n            if self.all_discrete:\r\n                delta = np.round(delta, 0).astype('int64')\r\n                q0 = q0.astype('int64')\r\n                q = (q0 + delta).astype('int64')\r\n            else:\r\n                delta[self.discrete] = np.round(\r\n                    delta[self.discrete], 0).astype('int64')\r\n                q = (q0 + delta).astype('int64')\r\n        else:\r\n            q = floatX(q0 + delta)\r\n```\r\n     \r\nq = (q0 + delta).astype('int64') transform the numpy vector containing all the variables into a vector that can contain only int. As you can not have different types of variables in a numpy vector \r\n\r\nI fixed my local version of the code with:\r\n```python\r\n        if self.any_discrete:\r\n            if self.all_discrete:\r\n                delta = np.round(delta, 0).astype('int64')\r\n                q0 = q0.astype('int64')\r\n                q = (q0 + delta).astype('int64')\r\n            else:\r\n                delta[self.discrete] = np.round(\r\n                    delta[self.discrete], 0)\r\n                q = (q0 + delta)\r\n        else:\r\n            q = floatX(q0 + delta)`\r\n```\r\nThis should maybe be a pull request but I'm not that confident that my solution is the most efficient/elegant one.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2916/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2912", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2912/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2912/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2912/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2912", "id": 310249937, "node_id": "MDU6SXNzdWUzMTAyNDk5Mzc=", "number": 2912, "title": "Incorrect names for multiple identical deterministics", "user": {"login": "lpsinger", "id": 728407, "node_id": "MDQ6VXNlcjcyODQwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/728407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lpsinger", "html_url": "https://github.com/lpsinger", "followers_url": "https://api.github.com/users/lpsinger/followers", "following_url": "https://api.github.com/users/lpsinger/following{/other_user}", "gists_url": "https://api.github.com/users/lpsinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/lpsinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lpsinger/subscriptions", "organizations_url": "https://api.github.com/users/lpsinger/orgs", "repos_url": "https://api.github.com/users/lpsinger/repos", "events_url": "https://api.github.com/users/lpsinger/events{/privacy}", "received_events_url": "https://api.github.com/users/lpsinger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-03-31T15:45:21Z", "updated_at": "2018-08-28T07:26:15Z", "closed_at": "2018-08-28T07:26:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you have multiple deterministics with the same values, then all of their names are incorrectly set to the name of the last deterministic. Here's an example:\r\n\r\n```python\r\n>>> import pymc3 as pm\r\n>>> from theano import tensor as tt\r\n>>> with pm.Model() as model:\r\n...     pm.Deterministic('foo', tt.as_tensor_variable(0.0))\r\n...     pm.Deterministic('bar', tt.as_tensor_variable(0.0))\r\n... \r\nTensorConstant{0.0}\r\nTensorConstant{0.0}\r\n>>> model.foo.name\r\n'bar'\r\n>>> model.bar.name\r\n'bar'\r\n```\r\n\r\nNotice that both deterministics are named `bar`, whereas the first one should be named `foo` and the second one named `bar`.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.3\r\n* Theano Version: 1.0.1\r\n* Python Version: 3.6.5\r\n* Operating system: macOS 10.13.4\r\n* How did you install PyMC3: MacPorts", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2912/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2890", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2890/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2890/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2890/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2890", "id": 302270449, "node_id": "MDU6SXNzdWUzMDIyNzA0NDk=", "number": 2890, "title": "PyMC3 variable is not replaced if provided in more_replacements (VI)", "user": {"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-03-05T11:48:42Z", "updated_at": "2018-03-10T08:28:44Z", "closed_at": "2018-03-10T08:28:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nPyMC3 variable is not replaced if provided in more_replacements (VI)\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport numpy as np\r\nimport pymc3 as pm\r\n\r\ndef test_var_replacement():\r\n    X_mean = np.linspace(0, 10, 10, dtype='float32')\r\n    y = (np.random.randn(*X_mean.shape) * .05 + X_mean) * 4.\r\n    with pm.Model() as model:\r\n        inp = pm.Normal('X', X_mean, shape=X_mean.shape)\r\n        coef = pm.Normal('b', 4.)\r\n        mean = inp * coef\r\n        pm.Normal('y', mean, .1, observed=y)\r\n        advi = pm.fit(100)\r\n        assert advi.sample_node(mean).eval().shape == (10, )\r\n        x_new = np.linspace(0, 10, 11, dtype='float32')\r\n        assert advi.sample_node(mean, more_replacements={inp: x_new}).eval().shape == (11, )\r\n```\r\n**Please provide the full traceback.**\r\n```\r\n=================================== FAILURES ===================================\r\n_____________________________ test_var_replacement _____________________________\r\n\r\n    def test_var_replacement():\r\n        X_mean = np.linspace(0, 10, 10, dtype='float32')\r\n        y = (np.random.randn(*X_mean.shape) * .05 + X_mean) * 4.\r\n        with pm.Model() as model:\r\n            inp = pm.Normal('X', X_mean, shape=X_mean.shape)\r\n            coef = pm.Normal('b', 4.)\r\n            mean = inp * coef\r\n            pm.Normal('y', mean, .1, observed=y)\r\n            advi = pm.fit(100)\r\n            assert advi.sample_node(mean).eval().shape == (10, )\r\n            x_new = np.linspace(0, 10, 11, dtype='float32')\r\n>           assert advi.sample_node(mean, more_replacements={inp: x_new}).eval().shape == (11, )\r\nE           assert (10,) == (11,)\r\nE             At index 0 diff: 10 != 11\r\nE             Use -v to get the full diff\r\n\r\ntests/test_variational_inference.py:849: AssertionError\r\n----------------------------- Captured stderr call -----------------------------\r\nAverage Loss = 11,613: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 100/100 [00:00<00:00, 2959.34it/s]\r\nFinished [100%]: Average Loss = 11,134\r\n------------------------------ Captured log call -------------------------------\r\ninference.py               211 INFO     Finished [100%]: Average Loss = 11,134\r\n========================== 1 failed in 13.22 seconds ===========================\r\nProcess finished with exit code 0\r\n```\r\n**Please provide any additional information below.**\r\nsee https://github.com/pymc-devs/pymc3/issues/2496#issuecomment-370296052\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.3\r\n* Theano Version: 1.0.1\r\n* Python Version: 3.6\r\n* Operating system: MacOS\r\n* How did you install PyMC3: git, master branch\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2890/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2868", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2868/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2868/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2868/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2868", "id": 299455783, "node_id": "MDU6SXNzdWUyOTk0NTU3ODM=", "number": 2868, "title": "pm.compare doesnt work with pm.Mixture", "user": {"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-22T18:15:29Z", "updated_at": "2018-02-23T16:56:04Z", "closed_at": "2018-02-23T16:56:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`pm.Mixture` logp does not return element-wise logp, which breaks `pm.compare` when you try to compare mixture model with other models.\r\nAs far as I can tell, removing the `.sum` in below should work:\r\nhttps://github.com/pymc-devs/pymc3/blob/801accb5f236ab9daa89a8fcd9d09a3ba4ed0a39/pymc3/distributions/mixture.py#L141\r\n\r\nAny objection/concern? \r\ncc @aloctavodia ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2868/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2866", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2866/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2866/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2866/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2866", "id": 298971932, "node_id": "MDU6SXNzdWUyOTg5NzE5MzI=", "number": 2866, "title": "Discrete variables not sampling independently", "user": {"login": "ColCarroll", "id": 2295568, "node_id": "MDQ6VXNlcjIyOTU1Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/2295568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColCarroll", "html_url": "https://github.com/ColCarroll", "followers_url": "https://api.github.com/users/ColCarroll/followers", "following_url": "https://api.github.com/users/ColCarroll/following{/other_user}", "gists_url": "https://api.github.com/users/ColCarroll/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColCarroll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColCarroll/subscriptions", "organizations_url": "https://api.github.com/users/ColCarroll/orgs", "repos_url": "https://api.github.com/users/ColCarroll/repos", "events_url": "https://api.github.com/users/ColCarroll/events{/privacy}", "received_events_url": "https://api.github.com/users/ColCarroll/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-21T13:35:09Z", "updated_at": "2018-02-25T19:41:23Z", "closed_at": "2018-02-25T19:41:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Spurred on by this on [StackOverflow](https://stackoverflow.com/questions/48834717/coin-tosses-arithmetic-of-random-variables-and-pymc3), I can confirm that this is reproducible on `pymc3-3.3`:\r\n\r\n    with pm.Model():\r\n        x = pm.Bernoulli('x', 0.5)\r\n        y = pm.Bernoulli('y', 0.5)\r\n        z = pm.Deterministic('z', x + y)\r\n        trace = pm.sample(40)\r\n\r\n    # trace[z] is array([2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0,\r\n       2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0,\r\n       2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0,\r\n       2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0,\r\n       2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0,\r\n       2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0,\r\n       2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0,\r\n       2, 0, 2, 0, 2, 0])\r\n\r\nOne commenter did some debugging and suspects `BinaryGibbsMetropolis` being in the wrong.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2866/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2859", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2859/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2859/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2859/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2859", "id": 297304725, "node_id": "MDU6SXNzdWUyOTczMDQ3MjU=", "number": 2859, "title": "Log Likelihood of MvGaussianRandomWalk Returns Array Rather Than Scalar", "user": {"login": "a3huang", "id": 19698351, "node_id": "MDQ6VXNlcjE5Njk4MzUx", "avatar_url": "https://avatars.githubusercontent.com/u/19698351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a3huang", "html_url": "https://github.com/a3huang", "followers_url": "https://api.github.com/users/a3huang/followers", "following_url": "https://api.github.com/users/a3huang/following{/other_user}", "gists_url": "https://api.github.com/users/a3huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/a3huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a3huang/subscriptions", "organizations_url": "https://api.github.com/users/a3huang/orgs", "repos_url": "https://api.github.com/users/a3huang/repos", "events_url": "https://api.github.com/users/a3huang/events{/privacy}", "received_events_url": "https://api.github.com/users/a3huang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-15T01:36:15Z", "updated_at": "2018-06-11T08:38:52Z", "closed_at": "2018-06-11T08:38:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed another small quirk with `MvGaussianRandomWalk`. When I run:\r\n```\r\npm.MvGaussianRandomWalk.dist(mu=tt.constant([1,1]), tau=tt.constant(np.eye(2)))\\\r\n    .logp(tt.constant([[1,2], [3,4]])).eval()\r\n```\r\nI get:\r\n```\r\narray([-2.83787707, -2.83787707])\r\n```\r\nThis output seems strange to me as I was expecting to see a single number representing the log likelihood of the single sequence of vectors I input. The log likelihood itself seems correct, but is repeated twice in this case.\r\n\r\nLooking into this, I found the problem to be the line:\r\n```\r\nreturn self.init.logp(x[0]) + tt.sum(innov_like)\r\n```\r\n\r\nBy default, `self.init = Flat.dist()` and since this is actually a univariate distribution, calling `self.init.logp(x[0])` actually returns an array of shape (2,) since `x[0]` is an array of shape (2,). Therefore, this results in `tt.sum(innov_like)` being broadcasted into an array rather than a scalar.\r\n\r\nI was thinking that we could probably replace this with:\r\n```\r\nreturn tt.sum(self.init.logp(x[0])) + tt.sum(innov_like)\r\n```\r\nThis way, we will correctly return a scalar value when the initial distribution provided is univariate (i.e. the components of the initial vector are iid). Please let me know if I'm mistaken and this was actually the intended behavior.\r\n\r\n## Versions and main components\r\nPyMC3 Version: 3.3\r\nTheano Version: 1.0.1\r\nPython Version: 2.7.12\r\nOperating system: MacOS 10.13.3\r\nHow did you install PyMC3: pip", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2859/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2858", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2858/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2858/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2858/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2858", "id": 297226832, "node_id": "MDU6SXNzdWUyOTcyMjY4MzI=", "number": 2858, "title": "Error When Evaluating Log Likelihood for MvGaussianRandomWalk", "user": {"login": "a3huang", "id": 19698351, "node_id": "MDQ6VXNlcjE5Njk4MzUx", "avatar_url": "https://avatars.githubusercontent.com/u/19698351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a3huang", "html_url": "https://github.com/a3huang", "followers_url": "https://api.github.com/users/a3huang/followers", "following_url": "https://api.github.com/users/a3huang/following{/other_user}", "gists_url": "https://api.github.com/users/a3huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/a3huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a3huang/subscriptions", "organizations_url": "https://api.github.com/users/a3huang/orgs", "repos_url": "https://api.github.com/users/a3huang/repos", "events_url": "https://api.github.com/users/a3huang/events{/privacy}", "received_events_url": "https://api.github.com/users/a3huang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-02-14T20:01:58Z", "updated_at": "2021-09-16T18:27:29Z", "closed_at": "2021-09-16T18:27:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I initialize a `MvGaussianRandomWalk` distribution using the `cov` keyword and try to evaluate the log likelihood as follows:\r\n```\r\npm.MvGaussianRandomWalk.dist(mu=tt.constant([1,1]), cov=tt.constant(np.eye(2))).logp(tt.constant([[1,2]])).eval()\r\n```\r\n\r\nI get the following error:\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-308-59dbcd30652a> in <module>()\r\n----> 1 pm.MvGaussianRandomWalk.dist(mu=tt.constant([1,1]), cov=tt.constant(np.eye(2))).logp(tt.constant([[1,2]])).eval()\r\n\r\n/Users/alexhuang/Library/Python/2.7/lib/python/site-packages/pymc3/distributions/timeseries.pyc in logp(self, x)\r\n    357 \r\n    358         innov_like = multivariate.MvNormal.dist(mu=x_im1 + self.mu, cov=self.cov,\r\n--> 359                                                 tau=self.tau, chol=self.chol_cov).logp(x_i)\r\n    360         return self.init.logp(x[0]) + tt.sum(innov_like)\r\n    361 \r\n\r\n/Users/alexhuang/Library/Python/2.7/lib/python/site-packages/pymc3/distributions/distribution.pyc in dist(cls, *args, **kwargs)\r\n     45     def dist(cls, *args, **kwargs):\r\n     46         dist = object.__new__(cls)\r\n---> 47         dist.__init__(*args, **kwargs)\r\n     48         return dist\r\n     49 \r\n\r\n/Users/alexhuang/Library/Python/2.7/lib/python/site-packages/pymc3/distributions/multivariate.pyc in __init__(self, mu, cov, tau, chol, lower, *args, **kwargs)\r\n    220                  *args, **kwargs):\r\n    221         super(MvNormal, self).__init__(mu=mu, cov=cov, tau=tau, chol=chol,\r\n--> 222                                        lower=lower, *args, **kwargs)\r\n    223         self.mean = self.median = self.mode = self.mu = self.mu\r\n    224 \r\n\r\n/Users/alexhuang/Library/Python/2.7/lib/python/site-packages/pymc3/distributions/multivariate.pyc in __init__(self, mu, cov, chol, tau, lower, *args, **kwargs)\r\n     39             chol = chol.T\r\n     40         if len([i for i in [tau, cov, chol] if i is not None]) != 1:\r\n---> 41             raise ValueError('Incompatible parameterization. '\r\n     42                              'Specify exactly one of tau, cov, '\r\n     43                              'or chol.')\r\n\r\nValueError: Incompatible parameterization. Specify exactly one of tau, cov, or chol.\r\n```\r\n\r\nHowever, if I instead use the `tau` or `chol` keywords, it runs fine.\r\n\r\nDigging into it, it looks like the `__initCov__` function of `_CovSet` sets values for variables `self.cov` and `self.chol_cov` when we provide a covariance matrix via `cov`. However, this causes an error when we initialize the `MvNormal` in the `logp` function of `MvGaussianRandomWalk` because both `cov` and `chol` end up being passed into the initializer for `MvNormal` and then to `_QuadFormBase` which expects that only one of `cov`, `tau`, or `chol` is provided.\r\n\r\nIs this the expected behavior?\r\n\r\n* PyMC3 Version: 3.3\r\n* Theano Version: 1.0.1\r\n* Python Version: 2.7.12\r\n* Operating system: MacOS 10.13.3\r\n* How did you install PyMC3: pip", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2858/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2856", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2856/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2856/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2856/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2856", "id": 296765176, "node_id": "MDU6SXNzdWUyOTY3NjUxNzY=", "number": 2856, "title": "Backends other than NDArray don't work with sequential sampling", "user": {"login": "delwaterman", "id": 70605, "node_id": "MDQ6VXNlcjcwNjA1", "avatar_url": "https://avatars.githubusercontent.com/u/70605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/delwaterman", "html_url": "https://github.com/delwaterman", "followers_url": "https://api.github.com/users/delwaterman/followers", "following_url": "https://api.github.com/users/delwaterman/following{/other_user}", "gists_url": "https://api.github.com/users/delwaterman/gists{/gist_id}", "starred_url": "https://api.github.com/users/delwaterman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/delwaterman/subscriptions", "organizations_url": "https://api.github.com/users/delwaterman/orgs", "repos_url": "https://api.github.com/users/delwaterman/repos", "events_url": "https://api.github.com/users/delwaterman/events{/privacy}", "received_events_url": "https://api.github.com/users/delwaterman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-02-13T14:54:30Z", "updated_at": "2019-08-26T21:18:43Z", "closed_at": "2019-08-16T14:59:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Toy example of Backends does not work with default chains\r\nWhile trying to use a toy example to test out Backends for PyMC3 3.3, I found that none of the backends (except the default in memory one) work with multiple chains:\r\n\r\nNormal works:\r\n```\r\n17:20 $ python\r\nPython 3.6.1 (default, Nov  8 2017, 14:29:33)\r\n[GCC 4.2.1 Compatible Apple LLVM 7.0.2 (clang-700.1.81)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pymc3 as pm\r\n>>> model = pm.Model()\r\n>>> with model:\r\n...     a = pm.Normal('a', mu=0, sd=1)\r\n...     trace = pm.sample(1000, n_init=1000, cores=1, njobs=1)\r\n...\r\nAuto-assigning NUTS sampler...\r\nInitializing NUTS using jitter+adapt_diag...\r\nSequential sampling (2 chains in 1 job)\r\nNUTS: [a]\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1500/1500 [00:01<00:00, 1445.02it/s]\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1500/1500 [00:00<00:00, 2644.67it/s]\r\n```\r\n\r\nText Backend Fails:\r\n\r\n```\r\n17:11 $ python\r\nPython 3.6.1 (default, Nov  8 2017, 14:29:33)\r\n[GCC 4.2.1 Compatible Apple LLVM 7.0.2 (clang-700.1.81)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pymc3 as pm\r\n>>> model = pm.Model()\r\n>>> with model:\r\n...     a = pm.Normal('a', mu=0, sd=1)\r\n...     db_text = pm.backends.Text(\"text-test-42\")\r\n...     trace = pm.sample(1000, n_init=1000, trace=db_text, cores=1, njobs=1)\r\n...\r\nAuto-assigning NUTS sampler...\r\nInitializing NUTS using jitter+adapt_diag...\r\nSequential sampling (2 chains in 1 job)\r\nNUTS: [a]\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1500/1500 [00:00<00:00, 2404.39it/s]\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1500/1500 [00:00<00:00, 2485.21it/s]\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 3, in <module>\r\n  File \"/Users/orion.delwaterman/.pyenv/versions/3.6.1/envs/hiring-horizons/lib/python3.6/site-packages/pymc3/sampling.py\", line 439, in sample\r\n    trace = _sample_many(**sample_args)\r\n  File \"/Users/orion.delwaterman/.pyenv/versions/3.6.1/envs/hiring-horizons/lib/python3.6/site-packages/pymc3/sampling.py\", line 494, in _sample_many\r\n    return MultiTrace(traces)\r\n  File \"/Users/orion.delwaterman/.pyenv/versions/3.6.1/envs/hiring-horizons/lib/python3.6/site-packages/pymc3/backends/base.py\", line 265, in __init__\r\n    raise ValueError(\"Chains are not unique.\")\r\nValueError: Chains are not unique.\r\n```\r\n\r\nSQLite Fails:\r\n```\r\n17:16 $ python\r\nPython 3.6.1 (default, Nov  8 2017, 14:29:33)\r\n[GCC 4.2.1 Compatible Apple LLVM 7.0.2 (clang-700.1.81)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pymc3 as pm\r\n>>> model = pm.Model()\r\n>>> with model:\r\n...     a = pm.Normal('a', mu=0, sd=1)\r\n...     db_sqllite = pm.backends.SQLite(\"test-sqllite\")\r\n...     trace = pm.sample(1000, n_init=1000, trace=db_sqllite, cores=1, njobs=1)\r\n...\r\nAuto-assigning NUTS sampler...\r\nInitializing NUTS using jitter+adapt_diag...\r\nSequential sampling (2 chains in 1 job)\r\nNUTS: [a]\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1500/1500 [00:00<00:00, 2328.49it/s]\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1500/1500 [00:00<00:00, 2453.27it/s]\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 4, in <module>\r\n  File \"/Users/orion.delwaterman/.pyenv/versions/3.6.1/envs/hiring-horizons/lib/python3.6/site-packages/pymc3/sampling.py\", line 439, in sample\r\n    trace = _sample_many(**sample_args)\r\n  File \"/Users/orion.delwaterman/.pyenv/versions/3.6.1/envs/hiring-horizons/lib/python3.6/site-packages/pymc3/sampling.py\", line 494, in _sample_many\r\n    return MultiTrace(traces)\r\n  File \"/Users/orion.delwaterman/.pyenv/versions/3.6.1/envs/hiring-horizons/lib/python3.6/site-packages/pymc3/backends/base.py\", line 265, in __init__\r\n    raise ValueError(\"Chains are not unique.\")\r\nValueError: Chains are not unique.\r\n```\r\nHDF5 Fails:\r\n```\r\n16:55 $ python\r\nPython 3.6.1 (default, Nov  8 2017, 14:29:33)\r\n[GCC 4.2.1 Compatible Apple LLVM 7.0.2 (clang-700.1.81)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pymc3 as pm\r\n>>> model = pm.Model()\r\n>>> with model:\r\n...     a = pm.Normal('a', mu=0, sd=1)\r\n...     db = pm.backends.HDF5('test-hdf5-3')\r\n...     trace = pm.sample(1000, n_init=1000, trace=db, cores=1, njobs=1)\r\n...\r\nAuto-assigning NUTS sampler...\r\nInitializing NUTS using jitter+adapt_diag...\r\nSequential sampling (2 chains in 1 job)\r\nNUTS: [a]\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1500/1500 [00:07<00:00, 193.66it/s]\r\n  0%|                                                                                                                                                     | 0/1500 [00:00<?, ?it/s]\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 4, in <module>\r\n  File \"/Users/orion.delwaterman/.pyenv/versions/3.6.1/envs/hiring-horizons/lib/python3.6/site-packages/pymc3/sampling.py\", line 439, in sample\r\n    trace = _sample_many(**sample_args)\r\n  File \"/Users/orion.delwaterman/.pyenv/versions/3.6.1/envs/hiring-horizons/lib/python3.6/site-packages/pymc3/sampling.py\", line 482, in _sample_many\r\n    step=step, random_seed=random_seed[i], **kwargs)\r\n  File \"/Users/orion.delwaterman/.pyenv/versions/3.6.1/envs/hiring-horizons/lib/python3.6/site-packages/pymc3/sampling.py\", line 526, in _sample\r\n    for it, strace in enumerate(sampling):\r\n  File \"/Users/orion.delwaterman/.pyenv/versions/3.6.1/envs/hiring-horizons/lib/python3.6/site-packages/tqdm/_tqdm.py\", line 862, in __iter__\r\n    for obj in iterable:\r\n  File \"/Users/orion.delwaterman/.pyenv/versions/3.6.1/envs/hiring-horizons/lib/python3.6/site-packages/pymc3/sampling.py\", line 614, in _iter_sample\r\n    strace.setup(draws, chain, step.stats_dtypes)\r\n  File \"/Users/orion.delwaterman/.pyenv/versions/3.6.1/envs/hiring-horizons/lib/python3.6/site-packages/pymc3/backends/hdf5.py\", line 154, in setup\r\n    self._set_sampler_vars(sampler_vars)\r\n  File \"/Users/orion.delwaterman/.pyenv/versions/3.6.1/envs/hiring-horizons/lib/python3.6/site-packages/pymc3/backends/base.py\", line 80, in _set_sampler_vars\r\n    raise ValueError(\"Can't change sampler_vars\")\r\nValueError: Can't change sampler_vars\r\n>>> model.unobserved_RVs\r\n[a]\r\n```\r\n\r\nWhen I tried using a single chain it worked correctly for all three.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.3\r\n* Theano Version: 1.0.1\r\n* Python Version: 3.6.1\r\n* Operating system: OS X\r\n* How did you install PyMC3: (conda/pip) pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2856/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2849", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2849/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2849/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2849/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2849", "id": 296091386, "node_id": "MDU6SXNzdWUyOTYwOTEzODY=", "number": 2849, "title": "Incorrect get_untransformed_name output for CholeskyCovPacked transform", "user": {"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-02-10T10:40:19Z", "updated_at": "2018-02-12T08:42:12Z", "closed_at": "2018-02-12T08:42:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2849/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2838", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2838/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2838/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2838/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2838", "id": 294190955, "node_id": "MDU6SXNzdWUyOTQxOTA5NTU=", "number": 2838, "title": "\"Tuning was enabled throughout the whole trace\" warning from NUTS in CompoundStep", "user": {"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-04T11:45:18Z", "updated_at": "2018-02-04T18:48:39Z", "closed_at": "2018-02-04T18:30:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "\"Tuning was enabled throughout the whole trace\" was checking incorrectly in `CompoundStep`:\r\n```python\r\nwith pm.Model() as m_prior:\r\n    theta = pm.Beta('theta', alpha=1, beta=1)\r\n    x = pm.Binomial('x', n=10, p=theta)\r\n    trace_prior = pm.sample(1000)\r\n```\r\noutput:\r\n```\r\nMultiprocess sampling (2 chains in 2 jobs)\r\nCompoundStep\r\n>Metropolis: [x]\r\n>NUTS: [theta_logodds__]\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1500/1500 [00:01<00:00, 888.70it/s]\r\nTuning was enabled throughout the whole trace.\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2838/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2826", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2826/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2826/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2826/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2826", "id": 292831100, "node_id": "MDU6SXNzdWUyOTI4MzExMDA=", "number": 2826, "title": "Weird DiscreteUniform behaviour", "user": {"login": "rpetit", "id": 23080067, "node_id": "MDQ6VXNlcjIzMDgwMDY3", "avatar_url": "https://avatars.githubusercontent.com/u/23080067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpetit", "html_url": "https://github.com/rpetit", "followers_url": "https://api.github.com/users/rpetit/followers", "following_url": "https://api.github.com/users/rpetit/following{/other_user}", "gists_url": "https://api.github.com/users/rpetit/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpetit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpetit/subscriptions", "organizations_url": "https://api.github.com/users/rpetit/orgs", "repos_url": "https://api.github.com/users/rpetit/repos", "events_url": "https://api.github.com/users/rpetit/events{/privacy}", "received_events_url": "https://api.github.com/users/rpetit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-30T15:44:46Z", "updated_at": "2022-03-22T13:57:17Z", "closed_at": "2020-09-18T14:34:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI just noticed a weird behaviour using DiscreteUniform distribution. I opened a [topic](https://discourse.pymc.io/t/issue-with-discreteuniform-distribution/800) on PyMC DIscourse and was answered that this was probably a bug.\r\n\r\nHere is the minimal example that produces the error : \r\n\r\n```\r\nimport pymc3 as pm\r\nimport theano\r\nimport theano.tensor as T\r\n\r\nmodel = pm.Model()\r\n\r\nwith model:\r\n    X = pm.DiscreteUniform('X', lower=0, upper=1)\r\n    t = T.as_tensor_variable([1, 2])\r\n\r\n    mu = t[X]\r\n\r\n    Y = pm.Normal('Y', mu=mu, sd=0.01, observed=2)\r\n\r\nwith model:\r\n    trace = pm.sample()\r\n```\r\n\r\nHere is the full traceback : \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/theano/compile/function_module.py\", line 903, in __call__\r\n    self.fn() if output_subset is None else\\\r\nIndexError: index out of bounds\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/petit/Documents/python/error.py\", line 16, in <module>\r\n    trace1 = pm.sample()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/pymc3/sampling.py\", line 285, in sample\r\n    return sample_func(**sample_args)[discard:]\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/pymc3/sampling.py\", line 332, in _sample\r\n    for it, strace in enumerate(sampling):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tqdm/_tqdm.py\", line 955, in __iter__\r\n    for obj in iterable:\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/pymc3/sampling.py\", line 430, in _iter_sample\r\n    point, states = step.step(point)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/pymc3/step_methods/arraystep.py\", line 153, in step\r\n    apoint, stats = self.astep(bij.map(point))\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/pymc3/step_methods/metropolis.py\", line 156, in astep\r\n    accept = self.delta_logp(q, q0)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/theano/compile/function_module.py\", line 917, in __call__\r\n    storage_map=getattr(self.fn, 'storage_map', None))\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/theano/gof/link.py\", line 325, in raise_with_op\r\n    reraise(exc_type, exc_value, exc_trace)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/six.py\", line 692, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/theano/compile/function_module.py\", line 903, in __call__\r\n    self.fn() if output_subset is None else\\\r\nIndexError: index out of bounds\r\nApply node that caused the error: Subtensor{int64}(TensorConstant{[1 2]}, ScalarFromTensor.0)\r\nToposort index: 9\r\nInputs types: [TensorType(int64, vector), Scalar(int64)]\r\nInputs shapes: [(2,), ()]\r\nInputs strides: [(8,), ()]\r\nInputs values: [array([1, 2]), 2]\r\nOutputs clients: [[Elemwise{Composite{(i0 * (i1 + (i2 * sqr((i3 - i4)))))}}(TensorConstant{0.5}, TensorConstant{7.372463305566837}, TensorConstant{-10000.0}, TensorConstant{2.0}, Subtensor{int64}.0)]]\r\n\r\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\r\n  File \"/Users/petit/Documents/python/error.py\", line 11, in <module>\r\n    mu = t[X]\r\n\r\nHINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.\r\n```\r\n\r\nI am using PyMC3 (v3.2) and Theano (v1.0.1) with Python 3.6.4 on Mac OS X (PyMC3 was installed via pip3).\r\n\r\nThanks in advance !", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2826/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2822", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2822/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2822/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2822/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2822", "id": 292420420, "node_id": "MDU6SXNzdWUyOTI0MjA0MjA=", "number": 2822, "title": "Bugs related to the new warning system", "user": {"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-29T14:11:20Z", "updated_at": "2018-01-29T19:26:22Z", "closed_at": "2018-01-29T19:26:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Some of the issue raise from the new warning system (after helpful discussion with @drbenvincent via https://discourse.pymc.io/t/model-comparison-issue-with-loo/794/):\r\n\r\n- [x] effective sample size warning should be computed on the Free_RVs only. Sometimes in the model, there are Deterministic nodes that shows high autocorrelation but they are not helpful for sampler diagnostic. (fixed in #2823)\r\n\r\n- [x] `pm.compare` is catching all warnings, which generate unhelpful warning label in the output dataframe (fixed in #2824)", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2822/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2800", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2800/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2800/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2800/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2800", "id": 288641534, "node_id": "MDU6SXNzdWUyODg2NDE1MzQ=", "number": 2800, "title": "Bug in the new NUTS warning", "user": {"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-15T15:57:47Z", "updated_at": "2018-01-24T21:22:00Z", "closed_at": "2018-01-24T21:22:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Getting a lot of `The chain reached the maximum tree depth. Increase max_treedepth, increase target_accept or reparameterize.` and found the bug below: \r\n\r\nhttps://github.com/pymc-devs/pymc3/blob/5eefc14b524378b1773d374004452b512523485a/pymc3/step_methods/hmc/nuts.py#L189\r\n\r\nSince `self._reached_max_treedepth` is a non-negative integer this line will be true with 1 max_treedepth.\r\nChanging it to something like `if self._reached_max_treedepth/nsample > 0.05: ` should work, but I think the nsample information is not available? cc @aseyboldt \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2800/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2740", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2740/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2740/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2740/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2740", "id": 278702022, "node_id": "MDU6SXNzdWUyNzg3MDIwMjI=", "number": 2740, "title": "`dist` cannot draw multiple `random` samples from vector-valued variable", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-02T17:42:05Z", "updated_at": "2018-12-22T12:24:02Z", "closed_at": "2018-12-22T12:24:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If you specify a vector-valued variable, such as:\r\n\r\n    pm.Normal.dist(tt.zeros(2), tt.ones(2))\r\n\r\nsamples using `random` need to be drawn one by one. If you specify a `size` argument, it fails:\r\n\r\n```python\r\n>>> pm.Normal.dist(tt.zeros(2), tt.ones(2)).random(size=3)\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-18-8bb971597a03> in <module>()\r\n----> 1 pm.Normal.dist(tt.zeros(2), tt.ones(2)).random(size=3)\r\n\r\n~/Repos/pymc3/pymc3/distributions/continuous.py in random(self, point, size, repeat)\r\n    292         return generate_samples(stats.norm.rvs, loc=mu, scale=tau**-0.5,\r\n    293                                 dist_shape=self.shape,\r\n--> 294                                 size=size)\r\n    295 \r\n    296     def logp(self, value):\r\n\r\n~/Repos/pymc3/pymc3/distributions/distribution.py in generate_samples(generator, *args, **kwargs)\r\n    413                                         prefix_shape,\r\n    414                                         *args, **kwargs)\r\n--> 415     return reshape_sampled(samples, size, dist_shape)\r\n\r\n~/Repos/pymc3/pymc3/distributions/distribution.py in reshape_sampled(sampled, size, dist_shape)\r\n    329 \r\n    330     if np.size(sampled) == 1 or repeat_shape or dist_shape:\r\n--> 331         return np.reshape(sampled, repeat_shape + dist_shape)\r\n    332     else:\r\n    333         return sampled\r\n\r\n~/anaconda3/envs/dev/lib/python3.6/site-packages/numpy/core/fromnumeric.py in reshape(a, newshape, order)\r\n    230            [5, 6]])\r\n    231     \"\"\"\r\n--> 232     return _wrapfunc(a, 'reshape', newshape, order=order)\r\n    233 \r\n    234 \r\n\r\n~/anaconda3/envs/dev/lib/python3.6/site-packages/numpy/core/fromnumeric.py in _wrapfunc(obj, method, *args, **kwds)\r\n     55 def _wrapfunc(obj, method, *args, **kwds):\r\n     56     try:\r\n---> 57         return getattr(obj, method)(*args, **kwds)\r\n     58 \r\n     59     # An AttributeError occurs if the object does not have\r\n\r\nValueError: cannot reshape array of size 6 into shape (3,)\r\n```\r\n\r\nIf you include the shape of the variable in `size` (which you should not have to do), it similarly fails\r\n\r\n```python\r\n>>> pm.Normal.dist(tt.zeros(2), tt.ones(2)).random(size=(3,2))\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-21-31f2482062b2> in <module>()\r\n----> 1 pm.Normal.dist(tt.zeros(2), tt.ones(2)).random(size=(3,2))\r\n\r\n~/Repos/pymc3/pymc3/distributions/continuous.py in random(self, point, size, repeat)\r\n    292         return generate_samples(stats.norm.rvs, loc=mu, scale=tau**-0.5,\r\n    293                                 dist_shape=self.shape,\r\n--> 294                                 size=size)\r\n    295 \r\n    296     def logp(self, value):\r\n\r\n~/Repos/pymc3/pymc3/distributions/distribution.py in generate_samples(generator, *args, **kwargs)\r\n    413                                         prefix_shape,\r\n    414                                         *args, **kwargs)\r\n--> 415     return reshape_sampled(samples, size, dist_shape)\r\n\r\n~/Repos/pymc3/pymc3/distributions/distribution.py in reshape_sampled(sampled, size, dist_shape)\r\n    329 \r\n    330     if np.size(sampled) == 1 or repeat_shape or dist_shape:\r\n--> 331         return np.reshape(sampled, repeat_shape + dist_shape)\r\n    332     else:\r\n    333         return sampled\r\n\r\n~/anaconda3/envs/dev/lib/python3.6/site-packages/numpy/core/fromnumeric.py in reshape(a, newshape, order)\r\n    230            [5, 6]])\r\n    231     \"\"\"\r\n--> 232     return _wrapfunc(a, 'reshape', newshape, order=order)\r\n    233 \r\n    234 \r\n\r\n~/anaconda3/envs/dev/lib/python3.6/site-packages/numpy/core/fromnumeric.py in _wrapfunc(obj, method, *args, **kwds)\r\n     55 def _wrapfunc(obj, method, *args, **kwds):\r\n     56     try:\r\n---> 57         return getattr(obj, method)(*args, **kwds)\r\n     58 \r\n     59     # An AttributeError occurs if the object does not have\r\n\r\nValueError: cannot reshape array of size 12 into shape (3,2)\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2740/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2718", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2718/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2718/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2718/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2718", "id": 274192162, "node_id": "MDU6SXNzdWUyNzQxOTIxNjI=", "number": 2718, "title": "find_hessian returns dense matrix with wrong variable order by default", "user": {"login": "bfredl", "id": 1363104, "node_id": "MDQ6VXNlcjEzNjMxMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bfredl", "html_url": "https://github.com/bfredl", "followers_url": "https://api.github.com/users/bfredl/followers", "following_url": "https://api.github.com/users/bfredl/following{/other_user}", "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}", "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions", "organizations_url": "https://api.github.com/users/bfredl/orgs", "repos_url": "https://api.github.com/users/bfredl/repos", "events_url": "https://api.github.com/users/bfredl/events{/privacy}", "received_events_url": "https://api.github.com/users/bfredl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-15T15:15:17Z", "updated_at": "2018-12-22T12:24:02Z", "closed_at": "2018-12-22T12:24:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n## Description of your problem\r\nI want to sample from quadradic MAP approximation of a model and thus do:\r\n\r\n```\r\nwith model:\r\n    mean = pm.find_MAP(True)\r\n    hess = pm.find_hessian(mean)\r\n    cov = np.linalg.inv(hess)\r\n\r\nm = model.bijection.map(mean)\r\nsamp = np.random.multivariate_normal(m,cov,n)\r\n\r\n# later on ...\r\nfor s in samp:\r\n    point = model.bijection.rmap(s)\r\n    # do something with point\r\n```\r\n\r\nBut it turns out hessian does not use the canonical variable order as defined by model.bijection. After quite some time I managed to hack it to work like such\r\n```\r\nvorder = [model[v.var] for v in norm_model.bijection.ordering.vmap]\r\nhess = pm.find_hessian(mean, vars=vorder)\r\n```\r\n\r\nIs this intentional? Seems unnecessary to use more than one variable order. I would at least expect clear warning in the docs that the order is different, instead of spending time wondering why MAP estimates was so different than sample estimates....\r\n## Versions and main components\r\n\r\n* PyMC3 Version: https://github.com/pymc-devs/pymc3/commit/2b9acb9c129d33d71815171b7173afaf2fa1127b\r\n* Theano Version:  0.10.0b3+142.g5307cf52b\r\n* Python Version: 3.6\r\n* Operating system: arch linux\r\n* How did you install PyMC3: (conda/pip) pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2718/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2681", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2681/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2681/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2681/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2681", "id": 270139681, "node_id": "MDU6SXNzdWUyNzAxMzk2ODE=", "number": 2681, "title": "effective sample size and Rhat not displayed correctly for vector-valued variables", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-31T22:31:49Z", "updated_at": "2017-11-01T14:59:19Z", "closed_at": "2017-11-01T14:59:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Running `summary` on a vector-valued parameter incorrectly displays the effective sample size and Rhat. In the example below, it appears to sum the samples over both elements, and the Rhat is incorrect (well below 1).\r\n\r\n```python\r\ntrace = sample(1000)\r\nsummary(trace)\r\n```\r\n![](http://d.pr/i/OAZZeK+)\r\n\r\n```python\r\n>>> gelman_rubin(trace)\r\n{'p': array([ 1.00023108,  0.99956697])}\r\n```\r\n\r\nThere should be a test to ensure the tabulated value corresponds to the value returned by `gelman_rubin`.\r\n\r\nRunning PyMC3 from master on Python 3.6", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2681/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2651", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2651/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2651/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2651/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2651", "id": 267737676, "node_id": "MDU6SXNzdWUyNjc3Mzc2NzY=", "number": 2651, "title": "Uniform testval not acting as expected for certain parameter ranges", "user": {"login": "mmargenot", "id": 15113371, "node_id": "MDQ6VXNlcjE1MTEzMzcx", "avatar_url": "https://avatars.githubusercontent.com/u/15113371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmargenot", "html_url": "https://github.com/mmargenot", "followers_url": "https://api.github.com/users/mmargenot/followers", "following_url": "https://api.github.com/users/mmargenot/following{/other_user}", "gists_url": "https://api.github.com/users/mmargenot/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmargenot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmargenot/subscriptions", "organizations_url": "https://api.github.com/users/mmargenot/orgs", "repos_url": "https://api.github.com/users/mmargenot/repos", "events_url": "https://api.github.com/users/mmargenot/events{/privacy}", "received_events_url": "https://api.github.com/users/mmargenot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-23T16:40:34Z", "updated_at": "2018-12-22T12:24:01Z", "closed_at": "2018-12-22T12:24:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Upon defining a `Uniform` random variable, certain values of `lower` and `upper` make setting `testval` not perform as expected. \r\n\r\nIf I define:\r\n```\r\nwith pm.Model as example:\r\n    a = pm.Uniform('alpha', lower=-64, upper=64, testval=0)\r\n```\r\n\r\nand subsequently examine `a.tag.test_value`, I get back `array([-128])` instead of `array([0.0])`. This leads to problems with sampler initialization further down the line if I reuse `a` as, for example, the mean of a `Normal` likelihood.\r\n\r\nSimilar issues occur with values of `lower` and `upper` up to +/-127.\r\n```\r\nwith pm.Model as example:\r\n    a = pm.Uniform('alpha', lower=-127, upper=127, testval=0)\r\n```\r\nOutside of the 64-127 range, there is no trouble with `testval` and setting it equal to `0` performs as expected.\r\n\r\n```\r\nwith pm.Model as example:\r\n    a = pm.Uniform('alpha', lower=-128, upper=128, testval=0)\r\n```\r\nand\r\n```\r\nwith pm.Model as example:\r\n    a = pm.Uniform('alpha', lower=-63, upper=63, testval=0)\r\n```\r\nboth yield `a.tag.test_value = array([0.0])`.\r\n\r\nI suspect some sort of issue with the underlying datatype. This seems to be similar to https://github.com/pymc-devs/pymc3/issues/2366#issuecomment-312364619, mentioned by @aseyboldt.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.2\r\n* Theano Version: 0.9.0\r\n* Python Version: 2.7.12\r\n* Operating system: Linux\r\n* How did you install PyMC3: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2651/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2633", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2633/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2633/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2633/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2633", "id": 265776252, "node_id": "MDU6SXNzdWUyNjU3NzYyNTI=", "number": 2633, "title": "sample_ppc uses a single chain only", "user": {"login": "aplavin", "id": 687995, "node_id": "MDQ6VXNlcjY4Nzk5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/687995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aplavin", "html_url": "https://github.com/aplavin", "followers_url": "https://api.github.com/users/aplavin/followers", "following_url": "https://api.github.com/users/aplavin/following{/other_user}", "gists_url": "https://api.github.com/users/aplavin/gists{/gist_id}", "starred_url": "https://api.github.com/users/aplavin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aplavin/subscriptions", "organizations_url": "https://api.github.com/users/aplavin/orgs", "repos_url": "https://api.github.com/users/aplavin/repos", "events_url": "https://api.github.com/users/aplavin/events{/privacy}", "received_events_url": "https://api.github.com/users/aplavin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-16T13:47:16Z", "updated_at": "2017-11-21T17:15:03Z", "closed_at": "2017-11-21T17:15:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Judging both by the behavior of `sample_ppc` and its implementation code I see that it samples from a single chain of a `MultiTrace`. I guess that's because indexing into such trace returns samples from a single chain only and its `len()` is equal to the number of samples per chain. Not sure if that's on purpose, but it's certainly unexpected.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.1\r\n* Theano Version: 0.9.0\r\n* Python Version: 3.6\r\n* Operating system: Linux\r\n* How did you install PyMC3: conda\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2633/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2614", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2614/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2614/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2614/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2614", "id": 263151024, "node_id": "MDU6SXNzdWUyNjMxNTEwMjQ=", "number": 2614, "title": "Mixture distribution does not play well with `size` parameter ", "user": {"login": "ColCarroll", "id": 2295568, "node_id": "MDQ6VXNlcjIyOTU1Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/2295568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColCarroll", "html_url": "https://github.com/ColCarroll", "followers_url": "https://api.github.com/users/ColCarroll/followers", "following_url": "https://api.github.com/users/ColCarroll/following{/other_user}", "gists_url": "https://api.github.com/users/ColCarroll/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColCarroll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColCarroll/subscriptions", "organizations_url": "https://api.github.com/users/ColCarroll/orgs", "repos_url": "https://api.github.com/users/ColCarroll/repos", "events_url": "https://api.github.com/users/ColCarroll/events{/privacy}", "received_events_url": "https://api.github.com/users/ColCarroll/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-05T14:40:57Z", "updated_at": "2018-12-22T12:24:00Z", "closed_at": "2018-12-22T12:24:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nFrom \r\nhttps://stackoverflow.com/questions/46581700/pymc3-sampling-multiple-numbers-from-normal-mixture-distribution-doesnt-work\r\n\r\nSee the example below\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n\r\n    import pymc3 as pm\r\n\r\n    pm.NormalMixture.dist(\r\n        w=0.5 * np.ones(2),\r\n        mu=np.ones(2),\r\n        sd=np.ones(2)).random(size=2)\r\n\r\n\r\n**Please provide the full traceback.**\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-25-bccf91a988a4> in <module>()\r\n      2     w=0.5 * np.ones(2),\r\n      3     mu=np.ones(2),\r\n----> 4     sd=np.ones(2)).random(size=2)\r\n\r\n~/.venv/sampled/lib/python3.6/site-packages/pymc3/distributions/mixture.py in random(self, point, size, repeat)\r\n    133                                      dist_shape=self.shape,\r\n    134                                      size=size).squeeze()\r\n--> 135         comp_samples = self._comp_samples(point=point, size=size, repeat=repeat)\r\n    136 \r\n    137         if comp_samples.ndim > 1:\r\n\r\n~/.venv/sampled/lib/python3.6/site-packages/pymc3/distributions/mixture.py in _comp_samples(self, point, size, repeat)\r\n    101     def _comp_samples(self, point=None, size=None, repeat=None):\r\n    102         try:\r\n--> 103             samples = self.comp_dists.random(point=point, size=size, repeat=repeat)\r\n    104         except AttributeError:\r\n    105             samples = np.column_stack([comp_dist.random(point=point, size=size, repeat=repeat)\r\n\r\n~/.venv/sampled/lib/python3.6/site-packages/pymc3/distributions/continuous.py in random(self, point, size, repeat)\r\n    260         return generate_samples(stats.norm.rvs, loc=mu, scale=tau**-0.5,\r\n    261                                 dist_shape=self.shape,\r\n--> 262                                 size=size)\r\n    263 \r\n    264     def logp(self, value):\r\n\r\n~/.venv/sampled/lib/python3.6/site-packages/pymc3/distributions/distribution.py in generate_samples(generator, *args, **kwargs)\r\n    389                                         prefix_shape,\r\n    390                                         *args, **kwargs)\r\n--> 391     return reshape_sampled(samples, size, dist_shape)\r\n\r\n~/.venv/sampled/lib/python3.6/site-packages/pymc3/distributions/distribution.py in reshape_sampled(sampled, size, dist_shape)\r\n    305 \r\n    306     if np.size(sampled) == 1 or repeat_shape or dist_shape:\r\n--> 307         return np.reshape(sampled, repeat_shape + dist_shape)\r\n    308     else:\r\n    309         return sampled\r\n\r\n~/.venv/sampled/lib/python3.6/site-packages/numpy/core/fromnumeric.py in reshape(a, newshape, order)\r\n    230            [5, 6]])\r\n    231     \"\"\"\r\n--> 232     return _wrapfunc(a, 'reshape', newshape, order=order)\r\n    233 \r\n    234 \r\n\r\n~/.venv/sampled/lib/python3.6/site-packages/numpy/core/fromnumeric.py in _wrapfunc(obj, method, *args, **kwds)\r\n     55 def _wrapfunc(obj, method, *args, **kwds):\r\n     56     try:\r\n---> 57         return getattr(obj, method)(*args, **kwds)\r\n     58 \r\n     59     # An AttributeError occurs if the object does not have\r\n\r\nValueError: cannot reshape array of size 4 into shape (2,)\r\n```\r\n\r\n**Please provide any additional information below.**\r\nIt looks like we are using the same `size` parameter in two places where they might mean different things [around here](https://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/mixture.py#L130):\r\n\r\n     w_samples = generate_samples(random_choice,                               \r\n                                  w=w,                                         \r\n                                  broadcast_shape=w.shape[:-1] or (1,),        \r\n                                  dist_shape=self.shape,\r\n                                  size=size).squeeze()\r\n     comp_samples = self._comp_samples(point=point, size=size, repeat=repeat)  \r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: `master`\r\n* Theano Version: 0.9.0\r\n* Python Version: 3.6\r\n* Operating system: osx\r\n* How did you install PyMC3: (conda/pip) `pip`\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2614/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2614/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2592", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2592/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2592/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2592/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2592", "id": 260232278, "node_id": "MDU6SXNzdWUyNjAyMzIyNzg=", "number": 2592, "title": "Inconsistent inclusive/exclusive upper bound with DiscreteUniform", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-25T10:50:13Z", "updated_at": "2017-10-04T15:38:53Z", "closed_at": "2017-10-04T15:38:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The `DiscreteUniform` distribution samples with exclusive upper bounds when used through the `Distribution.dist` API, but uses inclusive upper bound when sampling with theano:\r\n\r\n```python\r\nimport numpy\r\nimport theano\r\nimport pymc3\r\n\r\n# workaround for https://github.com/pymc-devs/pymc3/issues/562\r\ntheano.config.compute_test_value = 'warn'\r\n\r\nlower = 0\r\nupper = 5\r\nprint(\"specified   : {} to {}\".format(lower, upper))\r\n\r\nd = pymc3.DiscreteUniform.dist(lower, upper)\r\n\r\nsamples1 = d.random(size=10000)\r\n\r\nwith pymc3.Model() as pmodel:\r\n    pmodel.Var(\"d\", d)\r\n    mt = pymc3.sample(draws=10000)\r\nsamples2 = mt[\"d\"]\r\n\r\nprint(\"dist.random : {} to {}\".format(samples1.min(), samples1.max()))\r\nprint(\"multitrace  : {} to {}\".format(samples2.min(), samples2.max()))\r\n```\r\n\r\nOutput:\r\n\r\n ```bash\r\nspecified   : 0 to 5\r\nAssigned Metropolis to d\r\n100%|##########################################################################| 10500/10500 [00:01<00:00, 8503.27it/s]\r\ndist.random : 0 to 4\r\nmultitrace  : 0 to 5\r\nPress any key to continue . . .\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2592/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2589", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2589/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2589/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2589/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2589", "id": 259787511, "node_id": "MDU6SXNzdWUyNTk3ODc1MTE=", "number": 2589, "title": "Cannot compute test value because of floatX() in Uniform", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-22T11:37:49Z", "updated_at": "2018-12-22T12:24:00Z", "closed_at": "2018-12-22T12:24:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When `Uniform` RVs are instantiated through the `pmodel.Var(\"name\", Uniform.dist(...))`-API, they can break if the lower/upper bounds are some magic numbers (such as 0).\r\n\r\nThe following code demonstrates that this is because of the `floatx(.)` conversion which is only done in the `Uniform.__init__`:\r\n\r\n```python\r\nimport unittest\r\nimport theano\r\nimport theano.tensor as tt\r\nimport pymc3\r\nimport pymc3.distributions.continuous\r\n\r\n\r\nclass Uniform(pymc3.Continuous):\r\n    R\"\"\"...\"\"\"\r\n\r\n    def __init__(self, lower=0, upper=1, transform='interval',\r\n                 *args, **kwargs):\r\n        if transform == 'interval':\r\n            transform = pymc3.distributions.continuous.transforms.interval(lower, upper)\r\n        super(Uniform, self).__init__(transform=transform, *args, **kwargs)\r\n\r\n        #self.lower = lower = pymc3.distributions.continuous.floatX(tt.as_tensor_variable(lower))\r\n        #self.upper = upper = pymc3.distributions.continuous.floatX(tt.as_tensor_variable(upper))\r\n        self.lower = lower = tt.as_tensor_variable(lower)\r\n        self.upper = upper = tt.as_tensor_variable(upper)\r\n        self.mean = (upper + lower) / 2.\r\n        self.median = self.mean\r\n\r\n    def random(self, point=None, size=None, repeat=None):\r\n        return pymc3.distributions.continuous.Uniform.random(self, point, size, repeat)\r\n\r\n    def logp(self, value):\r\n        return pymc3.distributions.continuous.Uniform.logp(self, value)\r\n\r\n    def _repr_latex_(self, name=None, dist=None):\r\n        return pymc3.distributions.continuous.Uniform._repr_latex_(self, name, dist)\r\n\r\nUniform_type = Uniform         # this is all fine\r\n#Uniform_type = pymc3.Uniform    # this breaks\r\n\r\nclass TestDistAPI(unittest.TestCase):\r\n\r\n    def test_1(self):\r\n        print(\"test 1\")\r\n        u = Uniform_type.dist(lower=0.0, upper=1.4, testval=0.5)\r\n        with pymc3.Model() as pmodel:\r\n            pmodel.Var(\"u\", u)\r\n        return\r\n\r\n    def test_2(self):\r\n        print(\"test 2\")\r\n        u = Uniform_type.dist(lower=0.01, upper=1.4, testval=0.5)\r\n        with pymc3.Model() as pmodel:\r\n            pmodel.Var(\"u\", u)\r\n        return\r\n\r\n    def test_3(self):\r\n        print(\"test 3\")\r\n        with pymc3.Model() as pmodel:\r\n            Uniform_type(\"u\", lower=0, upper=1.4, testval=0.5)\r\n        return\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    print(theano.config.compute_test_value)\r\n    ## >>> 'off'\r\n    unittest.main(exit=False)\r\n```\r\n\r\nThe execution order of the three test methods is relevant! This is probably because if `test_3` runs first, theano caches the 0-constant and the other tests work fine, but if `test_1` runs first, it breaks.  `test_2` shows that some constants don't cause trouble.\r\n\r\nThe failures can NOT be prevented via `theano.config.compute_test_value` (it already is off in my case).\r\n\r\n**Why is there the `floatX(.)` conversion** in [`continuous.py#L158`](https://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/continuous.py#L158) ?\r\n**Can we remove it?** (It's also appears in [L109](https://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/continuous.py#L109) by the way.)", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2589/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2560", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2560/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2560/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2560/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2560", "id": 257143192, "node_id": "MDU6SXNzdWUyNTcxNDMxOTI=", "number": 2560, "title": "Text backend does not support tallying a subset of variables (raises KeyError)", "user": {"login": "chumsley", "id": 297521, "node_id": "MDQ6VXNlcjI5NzUyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/297521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chumsley", "html_url": "https://github.com/chumsley", "followers_url": "https://api.github.com/users/chumsley/followers", "following_url": "https://api.github.com/users/chumsley/following{/other_user}", "gists_url": "https://api.github.com/users/chumsley/gists{/gist_id}", "starred_url": "https://api.github.com/users/chumsley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chumsley/subscriptions", "organizations_url": "https://api.github.com/users/chumsley/orgs", "repos_url": "https://api.github.com/users/chumsley/repos", "events_url": "https://api.github.com/users/chumsley/events{/privacy}", "received_events_url": "https://api.github.com/users/chumsley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}, {"id": 1715881852, "node_id": "MDU6TGFiZWwxNzE1ODgxODUy", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/wontfix", "name": "wontfix", "color": "efefff", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-12T18:45:40Z", "updated_at": "2020-09-18T14:30:24Z", "closed_at": "2020-09-18T14:30:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Attempting to use a trace that was loaded from the text backend yields a KeyError, if the trace contains only a subset of the model's variables (e.g., if it was created using the `trace=` argument to `sample`).\r\n\r\nFailing example:\r\n```python\r\nwith pm.Model() as model:\r\n    a = pm.Gamma('a', mu=10.0, sd=2.0)\r\n    b = pm.Gamma('b', mu=10.0, sd=2.0)\r\n\r\n    trace = pm.sample(trace=[model.a, model.a_log__])\r\n    assert len(trace.varnames) == 2\r\n\r\n    pm.backends.text.dump('trace.text', trace)\r\n\r\n    loaded = pm.backends.text.load('trace.text')\r\n    x = loaded[0] #!!! Will throw a KeyError looking for 'b_log__'\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2560/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2550", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2550/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2550/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2550/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2550", "id": 256440689, "node_id": "MDU6SXNzdWUyNTY0NDA2ODk=", "number": 2550, "title": "Possible issue with sampling a vector of multinomials", "user": {"login": "ColinMcAuliffe", "id": 4662638, "node_id": "MDQ6VXNlcjQ2NjI2Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4662638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColinMcAuliffe", "html_url": "https://github.com/ColinMcAuliffe", "followers_url": "https://api.github.com/users/ColinMcAuliffe/followers", "following_url": "https://api.github.com/users/ColinMcAuliffe/following{/other_user}", "gists_url": "https://api.github.com/users/ColinMcAuliffe/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColinMcAuliffe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColinMcAuliffe/subscriptions", "organizations_url": "https://api.github.com/users/ColinMcAuliffe/orgs", "repos_url": "https://api.github.com/users/ColinMcAuliffe/repos", "events_url": "https://api.github.com/users/ColinMcAuliffe/events{/privacy}", "received_events_url": "https://api.github.com/users/ColinMcAuliffe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-09-09T13:59:11Z", "updated_at": "2017-09-18T06:11:13Z", "closed_at": "2017-09-18T06:11:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm making a model using softmax regression for choices among options A, B, and C. There are 6 groups, and I'm interested in how decisions differ among those groups, so I have a multinomial distribution for each group. Inference seems to work fine, but there is an error when sampling the posterior. I think it could have something to do with the fact that I have a vector of multinomials rather than a single one. The full error message and code to reproduce are below. Thanks!\r\n```python\r\nimport numpy as np\r\nimport pandas as pd\r\nimport pymc3 as pm\r\nimport matplotlib.pyplot as plt\r\nimport seaborn as sns\r\nsns.set(color_codes=True)\r\n\r\nimport theano\r\n\r\nfrom scipy.stats import norm\r\n\r\ndef hierarchical_normal(name, shape, mu=0.,cs=5.):\r\n    delta = pm.Normal('delta_{}'.format(name), 0., 1., shape=shape)\r\n    sigma = pm.HalfCauchy('sigma_{}'.format(name), cs)\r\n    \r\n    return pm.Deterministic(name, mu + delta * sigma)\r\n\r\nNUTS_KWARGS = {'target_accept': 0.99}\r\nSEED = 4260026 # from random.org, for reproducibility\r\n\r\nnp.random.seed(SEED)\r\n\r\nndraws = 1000\r\n\r\ncounts =[[19, 50, 37],\r\n         [21, 67, 55],\r\n         [11, 53, 38],\r\n         [17, 54, 45],\r\n         [24, 93, 66],\r\n         [27, 53, 70]]\r\n\r\ncounts = pd.DataFrame(counts,columns=[\"A\",\"B\",\"C\"])\r\n\r\ncounts[\"n\"]    = counts[[\"A\",\"B\",\"C\"]].sum(axis=1)\r\nprint counts\r\n\r\ngroup   = counts.index.values\r\nn_group = np.unique(group).size\r\n\r\nobs_n    = np.reshape(counts.n.values,(6,1))\r\n\r\nobs_n_ = theano.shared(obs_n)\r\n\r\nobs_ABC = counts[[\"A\",\"B\",\"C\"]].values\r\nwith pm.Model() as model:\r\n    #Zeros for coefficients for A\r\n    ref = pm.Flat(\"ref\",shape=n_group)\r\n\r\n    #For B\r\n    beta0      = pm.Normal('beta0', 0.,sd=5.)\r\n    beta_group = hierarchical_normal('beta_group', n_group)\r\n    \r\n\r\n    #For C\r\n    #alpha0      = pm.Normal('alpha0', 0.,sd=5.)\r\n    alpha_group = hierarchical_normal('alpha_group', n_group)\r\n\r\n    eta_B   = beta0  + beta_group [group]\r\n    #eta_C   = alpha0 + alpha_group[group]\r\n    eta_C   = alpha_group[group]\r\n    p = theano.tensor.nnet.softmax(theano.tensor.stack(ref,eta_B,eta_C).T)\r\n    like = pm.Multinomial('obs_ABC', obs_n, p, observed=obs_ABC)\r\n\r\n    trace  = pm.sample(draws=ndraws, random_seed=SEED,nuts_kwargs=NUTS_KWARGS)\r\n\r\nplt.figure()\r\naxs = pm.forestplot(trace,varnames=['beta0','beta_group','alpha_group'])\r\nplt.savefig(\"Forest.png\")\r\nplt.close()\r\n\r\nplt.figure()\r\naxs = pm.traceplot(trace,varnames=['beta0','beta_group','alpha_group'])\r\nplt.savefig(\"Trace.png\")\r\nplt.close()\r\n\r\nobs_n_.set_value(np.reshape(np.array([10000]*6),(6,1)))\r\npp_trace = pm.sample_ppc(trace, model=model)\r\n\r\nwith open('softmax_PP.pkl', 'wb') as buff:\r\n    pickle.dump(pp_trace, buff)\r\n\r\nwith open('softmax_PP.pkl', 'rb') as buff:\r\n    pp_trace = pickle.load(buff)  \r\n\r\nprint pp_trace[\"obs_ABC\"]\r\n\r\n\r\n\r\n_________________________________________________________________________________\r\n\r\n    A   B   C    n\r\n0  19  50  37  106\r\n1  21  67  55  143\r\n2  11  53  38  102\r\n3  17  54  45  116\r\n4  24  93  66  183\r\n5  27  53  70  150\r\nAuto-assigning NUTS sampler...\r\nInitializing NUTS using ADVI...\r\nAverage Loss = 49.994:  12%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                                                        | 23062/200000 [00:04<00:36, 4843.61it/s]\r\nConvergence archived at 23500\r\nInterrupted at 23,500 [11%]: Average Loss = 195\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1500/1500 [00:18<00:00, 81.01it/s]\r\n/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/matplotlib/tight_layout.py:222: UserWarning: tight_layout : falling back to Agg renderer\r\n  warnings.warn(\"tight_layout : falling back to Agg renderer\")\r\n  0%|                                                                                                                         | 0/1000 [00:00<?, ?it/s]\r\nTraceback (most recent call last):\r\n  File \"softmax.py\", line 77, in <module>\r\n    pp_trace = pm.sample_ppc(trace, model=model)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pymc3/sampling.py\", line 539, in sample_ppc\r\n    vals = var.distribution.random(point=param, size=size)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pymc3/distributions/multivariate.py\", line 506, in random\r\n    size=size)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pymc3/distributions/distribution.py\", line 397, in generate_samples\r\n    *args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pymc3/distributions/distribution.py\", line 322, in replicate_samples\r\n    samples = generator(size=size, *args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pymc3/distributions/multivariate.py\", line 500, in _random\r\n    return np.random.multinomial(n, p, size=size)\r\n  File \"mtrand.pyx\", line 4530, in mtrand.RandomState.multinomial (numpy/random/mtrand/mtrand.c:37665)\r\nTypeError: only length-1 arrays can be converted to Python scalars\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2550/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2548", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2548/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2548/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2548/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2548", "id": 256125980, "node_id": "MDU6SXNzdWUyNTYxMjU5ODA=", "number": 2548, "title": "Binomial GLM returns incorrect results with bool outcome variable", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-08T02:49:48Z", "updated_at": "2017-10-22T15:39:37Z", "closed_at": "2017-10-22T15:39:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If a GLM is specified using a response variable that has a `bool` dtype, it will yield incorrect inference. Specifically, estimates will have an incorrect sign, implying that `True` is interpreted as a zero rather than a one. For example, the following model:\r\n\r\n```python\r\nwith pm.Model() as logistic_model:\r\n    pm.glm.GLM.from_formula('dm ~ male + age + waist_hip + bps + bpd + bmi', \r\n                            diabetes.dropna(subset=['male', 'age', 'waist_hip', 'bps', 'bpd', 'bmi']), \r\n                            family=pm.glm.families.Binomial())\r\n    trace_logistic_model = pm.sample(2000)\r\n```\r\n\r\nreturns the following estimates with `dm` of dtype `bool`:\r\n\r\n![unknown-2](https://user-images.githubusercontent.com/81476/30194030-65a489c4-9416-11e7-92ba-c7effbc79be1.png)\r\n\r\nwhereas, casting `dm` to `int` type yields correct estimates:\r\n\r\n![unknown-1](https://user-images.githubusercontent.com/81476/30194037-7701ac10-9416-11e7-9a62-c4acd45ccdb3.png)\r\n\r\nRunning master on Python 3.6.1.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2548/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2529", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2529/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2529/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2529/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2529", "id": 253178642, "node_id": "MDU6SXNzdWUyNTMxNzg2NDI=", "number": 2529, "title": "enum34 is wrongly requested per the pymc3 wheel for python-3.6 on pypi ", "user": {"login": "stonebig", "id": 4312421, "node_id": "MDQ6VXNlcjQzMTI0MjE=", "avatar_url": "https://avatars.githubusercontent.com/u/4312421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stonebig", "html_url": "https://github.com/stonebig", "followers_url": "https://api.github.com/users/stonebig/followers", "following_url": "https://api.github.com/users/stonebig/following{/other_user}", "gists_url": "https://api.github.com/users/stonebig/gists{/gist_id}", "starred_url": "https://api.github.com/users/stonebig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stonebig/subscriptions", "organizations_url": "https://api.github.com/users/stonebig/orgs", "repos_url": "https://api.github.com/users/stonebig/repos", "events_url": "https://api.github.com/users/stonebig/events{/privacy}", "received_events_url": "https://api.github.com/users/stonebig/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2017-08-27T17:51:28Z", "updated_at": "2018-12-22T12:22:27Z", "closed_at": "2018-12-22T12:22:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I suppose this is because the wheel is made with a Python-3.3 ?\r\n````\r\nAuthor-email: thomas.wiecki@gmail.com\r\nLicense: Apache License, Version 2.0\r\nPlatform: UNKNOWN\r\nClassifier: Development Status :: 5 - Production/Stable\r\nClassifier: Programming Language :: Python\r\nClassifier: Programming Language :: Python :: 2\r\nClassifier: Programming Language :: Python :: 3\r\nClassifier: Programming Language :: Python :: 2.7\r\nClassifier: Programming Language :: Python :: 3.4\r\nClassifier: Programming Language :: Python :: 3.5\r\nClassifier: Programming Language :: Python :: 3.6\r\nClassifier: License :: OSI Approved :: Apache Software License\r\nClassifier: Intended Audience :: Science/Research\r\nClassifier: Topic :: Scientific/Engineering\r\nClassifier: Topic :: Scientific/Engineering :: Mathematics\r\nClassifier: Operating System :: OS Independent\r\nRequires-Dist: enum34 (>=1.1.6)\r\nRequires-Dist: h5py (>=2.7.0)\r\nRequires-Dist: joblib (>=0.9)\r\nRequires-Dist: matplotlib (>=1.5.0)\r\nRequires-Dist: pandas (>=0.18.0)\r\nRequires-Dist: patsy (>=0.4.0)\r\nRequires-Dist: six (>=1.10.0)\r\nRequires-Dist: theano (>=0.9.0)\r\nRequires-Dist: tqdm (>=4.8.4)\r\n````\r\n\r\nunfortunate side-effect : consequence : the auto-completion in the editor of Spyder-3.2.1 is broken, under python-3.6.2 (don't ask me why)", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2529/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2525", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2525/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2525/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2525/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2525", "id": 251883670, "node_id": "MDU6SXNzdWUyNTE4ODM2NzA=", "number": 2525, "title": "TypeError with blocked `Metropolis`", "user": {"login": "mcavallaro", "id": 9310760, "node_id": "MDQ6VXNlcjkzMTA3NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/9310760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcavallaro", "html_url": "https://github.com/mcavallaro", "followers_url": "https://api.github.com/users/mcavallaro/followers", "following_url": "https://api.github.com/users/mcavallaro/following{/other_user}", "gists_url": "https://api.github.com/users/mcavallaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcavallaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcavallaro/subscriptions", "organizations_url": "https://api.github.com/users/mcavallaro/orgs", "repos_url": "https://api.github.com/users/mcavallaro/repos", "events_url": "https://api.github.com/users/mcavallaro/events{/privacy}", "received_events_url": "https://api.github.com/users/mcavallaro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-22T08:52:00Z", "updated_at": "2018-12-22T12:22:27Z", "closed_at": "2018-12-22T12:22:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is an issue if one tries to sample a discrete random variable and a continous random variable using the `Metropolis` step method with option 'blocked=True'. In PyMC2 that was possible.\r\n\r\nAs an example, in the disaster_model case study, using\r\n```\r\nblocked_step = pm.Metropolis([switchpoint, early_mean], blocked=True)\r\ntr = pm.sample(1000, tune=500, step=[blocked_step])\r\n````\r\nyields this error:\r\n```\r\nAssigned NUTS to late_mean_log__\r\n  0%|          | 0/1500 [00:00<?, ?it/s]\r\nTraceback (most recent call last):\r\n  File \"/home/u1573864/.conda/envs/PyMC3_dev/lib/python3.6/site-packages/theano/compile/function_module.py\", line 884, in __call__\r\n   self.fn() if output_subset is None else\\\r\nTypeError: expected type_num 12 (NPY_FLOAT64) got 7\r\n```\r\nSee also https://discourse.pymc.io/t/typeerror-with-blocked-metropolis/272", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2525/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2505", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2505/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2505/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2505/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2505", "id": 250467271, "node_id": "MDU6SXNzdWUyNTA0NjcyNzE=", "number": 2505, "title": "Gaussian Process example is broken", "user": {"login": "gcgibson", "id": 6091009, "node_id": "MDQ6VXNlcjYwOTEwMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/6091009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gcgibson", "html_url": "https://github.com/gcgibson", "followers_url": "https://api.github.com/users/gcgibson/followers", "following_url": "https://api.github.com/users/gcgibson/following{/other_user}", "gists_url": "https://api.github.com/users/gcgibson/gists{/gist_id}", "starred_url": "https://api.github.com/users/gcgibson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gcgibson/subscriptions", "organizations_url": "https://api.github.com/users/gcgibson/orgs", "repos_url": "https://api.github.com/users/gcgibson/repos", "events_url": "https://api.github.com/users/gcgibson/events{/privacy}", "received_events_url": "https://api.github.com/users/gcgibson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-15T23:30:18Z", "updated_at": "2017-08-16T05:02:03Z", "closed_at": "2017-08-16T05:02:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://pymc-devs.github.io/pymc3/notebooks/GP-introduction.html\r\n\r\n/Users/fonnescj/Repos/pymc3/pymc3/distributions/multivariate.py in random(self, point, size)\r\n    154\r\n    155         if self._cov_type == 'cov':\r\n--> 156             mu, cov = draw_values([self.mu, self.cov], point=point)\r\n    157             if mu.shape != cov[0].shape:\r\n    158                 raise ValueError(\"Shapes for mu an cov don't match\")", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2505/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2471", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2471/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2471/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2471/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2471", "id": 247625841, "node_id": "MDU6SXNzdWUyNDc2MjU4NDE=", "number": 2471, "title": "Incorrect test_value for Multinomial distribution", "user": {"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-03T08:12:39Z", "updated_at": "2017-09-17T08:11:42Z", "closed_at": "2017-09-17T08:11:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Discovered during the discussion on [Discourse](https://discourse.pymc.io/t/dirichlet-multinomial-model-does-not-appear-to-be-sampling-at-all/209/4) \r\n\r\nMinimalistic example:\r\n```python\r\ndim = 4\r\nbeta = np.ones(dim, ) / dim #input for dirichlet\r\nwith pm.Model() as mod:\r\n    theta=pm.Dirichlet('theta', beta)\r\n    transition=pm.Multinomial('transition', 1, theta, shape=dim)\r\ntransition.tag.test_value\r\n```\r\n```python\r\nOut[1]: array([0, 0, 0, 0])\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2471/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2457", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2457/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2457/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2457/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2457", "id": 246753422, "node_id": "MDU6SXNzdWUyNDY3NTM0MjI=", "number": 2457, "title": "WAIC/LOO only consider last chain in a Multitrace", "user": {"login": "AustinRochford", "id": 3465592, "node_id": "MDQ6VXNlcjM0NjU1OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3465592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AustinRochford", "html_url": "https://github.com/AustinRochford", "followers_url": "https://api.github.com/users/AustinRochford/followers", "following_url": "https://api.github.com/users/AustinRochford/following{/other_user}", "gists_url": "https://api.github.com/users/AustinRochford/gists{/gist_id}", "starred_url": "https://api.github.com/users/AustinRochford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AustinRochford/subscriptions", "organizations_url": "https://api.github.com/users/AustinRochford/orgs", "repos_url": "https://api.github.com/users/AustinRochford/repos", "events_url": "https://api.github.com/users/AustinRochford/events{/privacy}", "received_events_url": "https://api.github.com/users/AustinRochford/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-31T13:20:29Z", "updated_at": "2017-09-15T12:59:26Z", "closed_at": "2017-09-15T12:59:26Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See [this gist](https://gist.github.com/AustinRochford/b2287e7e50544f60e8ac811d01dc2ce0) for a demonstration.  Of course, the WAIC values across difference chains should not be _too different_, if the sampling has been effective.  This may also affect other stat functions, I haven't checked yet.\r\n\r\n@aseyboldt thoughts on what the correct behavior should be here?", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2457/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2455", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2455/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2455/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2455/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2455", "id": 246596961, "node_id": "MDU6SXNzdWUyNDY1OTY5NjE=", "number": 2455, "title": "Container creation fails", "user": {"login": "AustinRochford", "id": 3465592, "node_id": "MDQ6VXNlcjM0NjU1OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3465592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AustinRochford", "html_url": "https://github.com/AustinRochford", "followers_url": "https://api.github.com/users/AustinRochford/followers", "following_url": "https://api.github.com/users/AustinRochford/following{/other_user}", "gists_url": "https://api.github.com/users/AustinRochford/gists{/gist_id}", "starred_url": "https://api.github.com/users/AustinRochford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AustinRochford/subscriptions", "organizations_url": "https://api.github.com/users/AustinRochford/orgs", "repos_url": "https://api.github.com/users/AustinRochford/repos", "events_url": "https://api.github.com/users/AustinRochford/events{/privacy}", "received_events_url": "https://api.github.com/users/AustinRochford/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "AustinRochford", "id": 3465592, "node_id": "MDQ6VXNlcjM0NjU1OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3465592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AustinRochford", "html_url": "https://github.com/AustinRochford", "followers_url": "https://api.github.com/users/AustinRochford/followers", "following_url": "https://api.github.com/users/AustinRochford/following{/other_user}", "gists_url": "https://api.github.com/users/AustinRochford/gists{/gist_id}", "starred_url": "https://api.github.com/users/AustinRochford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AustinRochford/subscriptions", "organizations_url": "https://api.github.com/users/AustinRochford/orgs", "repos_url": "https://api.github.com/users/AustinRochford/repos", "events_url": "https://api.github.com/users/AustinRochford/events{/privacy}", "received_events_url": "https://api.github.com/users/AustinRochford/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "AustinRochford", "id": 3465592, "node_id": "MDQ6VXNlcjM0NjU1OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3465592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AustinRochford", "html_url": "https://github.com/AustinRochford", "followers_url": "https://api.github.com/users/AustinRochford/followers", "following_url": "https://api.github.com/users/AustinRochford/following{/other_user}", "gists_url": "https://api.github.com/users/AustinRochford/gists{/gist_id}", "starred_url": "https://api.github.com/users/AustinRochford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AustinRochford/subscriptions", "organizations_url": "https://api.github.com/users/AustinRochford/orgs", "repos_url": "https://api.github.com/users/AustinRochford/repos", "events_url": "https://api.github.com/users/AustinRochford/events{/privacy}", "received_events_url": "https://api.github.com/users/AustinRochford/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-07-30T17:23:19Z", "updated_at": "2017-07-31T15:53:17Z", "closed_at": "2017-07-31T15:53:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```bash\r\n+ pip install --upgrade pip\r\nRequirement already up-to-date: pip in /opt/conda/lib/python3.6/site-packages\r\n+ pip install -e .\r\nDirectory '.' is not installable. File 'setup.py' not found.\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2455/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2453", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2453/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2453/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2453/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2453", "id": 246472566, "node_id": "MDU6SXNzdWUyNDY0NzI1NjY=", "number": 2453, "title": "Metropolis sampler does not update Multinomial chain values under certain conditions", "user": {"login": "dsweaver", "id": 4722975, "node_id": "MDQ6VXNlcjQ3MjI5NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4722975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsweaver", "html_url": "https://github.com/dsweaver", "followers_url": "https://api.github.com/users/dsweaver/followers", "following_url": "https://api.github.com/users/dsweaver/following{/other_user}", "gists_url": "https://api.github.com/users/dsweaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsweaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsweaver/subscriptions", "organizations_url": "https://api.github.com/users/dsweaver/orgs", "repos_url": "https://api.github.com/users/dsweaver/repos", "events_url": "https://api.github.com/users/dsweaver/events{/privacy}", "received_events_url": "https://api.github.com/users/dsweaver/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-28T22:21:54Z", "updated_at": "2017-09-18T06:18:14Z", "closed_at": "2017-09-18T06:18:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am running into problems with Metropolis sampling a Multinomial distribution under `pymc3` 3.1.\r\n\r\nFirst, I set up a 6-element Multinomial distribution.\r\n```\r\nimport pymc3 as pm\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nwidth = 5\r\ndraws = 1000\r\nprobs = np.array([1.0]*width + [1000.0])\r\nnormprobs = np.array(probs/np.sum(probs))\r\nprint normprobs\r\n\r\nwith pm.Model() as model:\r\n    \r\n    mn = pm.Multinomial('mn',\r\n                        n=draws,\r\n                        p=normprobs,\r\n                        shape=width+1)\r\n    trace = pm.sample(50000, njobs=6)\r\nprint trace.get_values('mn')[1000:1100,0]\r\nplt.plot(trace.get_values('mn')[:,0],'.',markersize=0.1)\r\nplt.title('6-mer multinomial')\r\n```\r\n\r\nResults:\r\n```\r\nAssigned Metropolis to mn\r\n[  9.95024876e-04   9.95024876e-04   9.95024876e-04   9.95024876e-04\r\n   9.95024876e-04   9.95024876e-01]\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 50500/50500 [00:18<00:00, 2753.36it/s]\r\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1\r\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\r\n```\r\n![6mer](https://user-images.githubusercontent.com/4722975/28738346-c74ea4e6-73a7-11e7-9181-7b05ccb51041.png)\r\n\r\nThis works as I expect. The value of the `mn` variable updates.\r\n\r\nNext, I set up a 26-element Multinomial distribution.\r\n```\r\nwidth = 25\r\ndraws = 1000\r\nprobs = np.array([1.0]*width + [1000.0])\r\nnormprobs = np.array(probs/np.sum(probs))\r\nprint normprobs\r\n\r\nwith pm.Model() as model2:\r\n    \r\n    mn = pm.Multinomial('mn',\r\n                        n=draws,\r\n                        p=normprobs,\r\n                        shape=width+1)\r\n    trace2 = pm.sample(50000, njobs=6)\r\nprint trace2.get_values('mn')[1000:1100,0]\r\nplt.plot(trace2.get_values('mn')[:,0],'.',markersize=0.1)\r\nplt.title('26-mer multinomial')\r\n```\r\n\r\nResults:\r\n```\r\nAssigned Metropolis to mn\r\n[ 0.00097561  0.00097561  0.00097561  0.00097561  0.00097561  0.00097561\r\n  0.00097561  0.00097561  0.00097561  0.00097561  0.00097561  0.00097561\r\n  0.00097561  0.00097561  0.00097561  0.00097561  0.00097561  0.00097561\r\n  0.00097561  0.00097561  0.00097561  0.00097561  0.00097561  0.00097561\r\n  0.00097561  0.97560976]\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 50500/50500 [00:33<00:00, 1528.93it/s]\r\n[1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\r\n```\r\n![26mer](https://user-images.githubusercontent.com/4722975/28738408-38bdf7ee-73a8-11e7-825f-a43fae54cea4.png)\r\n\r\nThe value of the `mn` variable never updates from its prior.\r\n\r\nAny suggestions on what I am doing wrong here?", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2453/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2451", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2451/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2451/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2451/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2451", "id": 246368223, "node_id": "MDU6SXNzdWUyNDYzNjgyMjM=", "number": 2451, "title": "Can't create a Constant with float dtype", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-28T14:43:26Z", "updated_at": "2017-08-11T15:15:33Z", "closed_at": "2017-08-11T15:15:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The pymc3.Constant distribution advertises itself as accepting both `int` and `float` values ([discrete.py#L553](https://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/discrete.py#L553)).\r\n\r\nHowever the `Discrete` distribution base class enforces integer dtypes ([distribution.py#L129](https://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/distribution.py#L129))\r\n\r\nThis code sample also shows that while `theano.tensor.as_tensor_variable` correctly creates a float type tensor, the `Constant` distribution does not:\r\n\r\n```python\r\nimport pymc3\r\nimport theano.tensor\r\n\r\nwith pymc3.Model() as pmodel:\r\n    d = pymc3.Constant(\"k1\", c=42.3)\r\n    print(d.dtype)\r\n    # >>> int64\r\n\r\nt = theano.tensor.as_tensor_variable(42.3)\r\nprint(t.dtype)\r\n# >>> float64\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2451/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2442", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2442/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2442/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2442/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2442", "id": 245061450, "node_id": "MDU6SXNzdWUyNDUwNjE0NTA=", "number": 2442, "title": "adapt_diag initialization does not work for transformed variable", "user": {"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "aseyboldt", "id": 1882397, "node_id": "MDQ6VXNlcjE4ODIzOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1882397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aseyboldt", "html_url": "https://github.com/aseyboldt", "followers_url": "https://api.github.com/users/aseyboldt/followers", "following_url": "https://api.github.com/users/aseyboldt/following{/other_user}", "gists_url": "https://api.github.com/users/aseyboldt/gists{/gist_id}", "starred_url": "https://api.github.com/users/aseyboldt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aseyboldt/subscriptions", "organizations_url": "https://api.github.com/users/aseyboldt/orgs", "repos_url": "https://api.github.com/users/aseyboldt/repos", "events_url": "https://api.github.com/users/aseyboldt/events{/privacy}", "received_events_url": "https://api.github.com/users/aseyboldt/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aseyboldt", "id": 1882397, "node_id": "MDQ6VXNlcjE4ODIzOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1882397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aseyboldt", "html_url": "https://github.com/aseyboldt", "followers_url": "https://api.github.com/users/aseyboldt/followers", "following_url": "https://api.github.com/users/aseyboldt/following{/other_user}", "gists_url": "https://api.github.com/users/aseyboldt/gists{/gist_id}", "starred_url": "https://api.github.com/users/aseyboldt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aseyboldt/subscriptions", "organizations_url": "https://api.github.com/users/aseyboldt/orgs", "repos_url": "https://api.github.com/users/aseyboldt/repos", "events_url": "https://api.github.com/users/aseyboldt/events{/privacy}", "received_events_url": "https://api.github.com/users/aseyboldt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-07-24T12:17:35Z", "updated_at": "2017-08-03T15:49:27Z", "closed_at": "2017-08-03T15:49:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Minimalistic code:\r\n```python\r\nwith pm.Model():\r\n    mu = pm.Uniform('mu', 0., 1.)\r\n    sd = pm.HalfCauchy('sd', beta=10.)\r\n    obs = pm.Normal('y', mu=mu, sd=sd, observed=np.random.randn(100,1))\r\n    pm.sample(init='adapt_diag')\r\n```\r\nraise:\r\n```python\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-10-aea93a5e8087>\", line 5, in <module>\r\n    pm.sample(init='adapt_diag')\r\n\r\n  File \"/home/laoj/Documents/Github/pymc3/pymc3/sampling.py\", line 247, in sample\r\n    progressbar=progressbar, **args)\r\n\r\n  File \"/home/laoj/Documents/Github/pymc3/pymc3/sampling.py\", line 729, in init_nuts\r\n    vals = distribution.draw_values(model.free_RVs)\r\n\r\n  File \"/home/laoj/Documents/Github/pymc3/pymc3/distributions/distribution.py\", line 194, in draw_values\r\n    values.append(_draw_value(param, point=point, givens=givens.values()))\r\n\r\n  File \"/home/laoj/Documents/Github/pymc3/pymc3/distributions/distribution.py\", line 258, in _draw_value\r\n    func = _compile_theano_function(param, variables)\r\n\r\n  File \"/home/laoj/Documents/Github/pymc3/pymc3/memoize.py\", line 16, in memoizer\r\n    cache[key] = obj(*args, **kwargs)\r\n\r\n  File \"/home/laoj/Documents/Github/pymc3/pymc3/distributions/distribution.py\", line 220, in _compile_theano_function\r\n    allow_input_downcast=True)\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/theano/compile/function.py\", line 326, in function\r\n    output_keys=output_keys)\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/theano/compile/pfunc.py\", line 486, in pfunc\r\n    output_keys=output_keys)\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/theano/compile/function_module.py\", line 1808, in orig_function\r\n    output_keys=output_keys)\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/theano/compile/function_module.py\", line 1446, in __init__\r\n    accept_inplace)\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/theano/compile/function_module.py\", line 177, in std_fgraph\r\n    update_mapping=update_mapping)\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/theano/gof/fg.py\", line 175, in __init__\r\n    self.__import_r__(output, reason=\"init\")\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/theano/gof/fg.py\", line 356, in __import_r__\r\n    raise MissingInputError(\"Undeclared input\", variable=variable)\r\n\r\nMissingInputError: Undeclared input\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2442/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2437", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2437/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2437/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2437/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2437", "id": 244487133, "node_id": "MDU6SXNzdWUyNDQ0ODcxMzM=", "number": 2437, "title": "Library import conflicts with PyMC3", "user": {"login": "Aorus42", "id": 24482121, "node_id": "MDQ6VXNlcjI0NDgyMTIx", "avatar_url": "https://avatars.githubusercontent.com/u/24482121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aorus42", "html_url": "https://github.com/Aorus42", "followers_url": "https://api.github.com/users/Aorus42/followers", "following_url": "https://api.github.com/users/Aorus42/following{/other_user}", "gists_url": "https://api.github.com/users/Aorus42/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aorus42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aorus42/subscriptions", "organizations_url": "https://api.github.com/users/Aorus42/orgs", "repos_url": "https://api.github.com/users/Aorus42/repos", "events_url": "https://api.github.com/users/Aorus42/events{/privacy}", "received_events_url": "https://api.github.com/users/Aorus42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-20T20:27:52Z", "updated_at": "2018-12-22T12:22:26Z", "closed_at": "2018-12-22T12:22:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've observed a conflict between PyMC3 and OpenTurns on Windows 7 and 10, 64-bit. If PyMC3 is imported first, OpenTurns fails to import with the following error\r\n```\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-3-704e69d30dff>\", line 1, in <module>\r\n    import openturns as ot\r\n\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\openturns\\__init__.py\", line 61, in <module>\r\n    from .common import *\r\n\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\openturns\\common.py\", line 20, in <module>\r\n    _common = swig_import_helper()\r\n\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\openturns\\common.py\", line 19, in swig_import_helper\r\n    return importlib.import_module('_common')\r\n\r\n  File \"C:\\Anaconda3\\lib\\importlib\\__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n\r\nModuleNotFoundError: No module named '_common'\r\n```\r\n\r\nIf I reverse the import order (i.e., OpenTurns first, then PyMC3), then PymC3 fails to import with\r\n```\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-2-e9f7838173a6>\", line 5, in <module>\r\n    import pymc3 as pm\r\n\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\pymc3\\__init__.py\", line 5, in <module>\r\n    from .distributions import *\r\n\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\pymc3\\distributions\\__init__.py\", line 1, in <module>\r\n    from . import timeseries\r\n\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\pymc3\\distributions\\timeseries.py\", line 1, in <module>\r\n    import theano.tensor as tt\r\n\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\theano\\__init__.py\", line 80, in <module>\r\n    from theano.scan_module import (scan, map, reduce, foldl, foldr, clone,\r\n\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\theano\\scan_module\\__init__.py\", line 41, in <module>\r\n    from theano.scan_module import scan_opt\r\n\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\theano\\scan_module\\scan_opt.py\", line 60, in <module>\r\n    from theano import tensor, scalar\r\n\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\theano\\tensor\\__init__.py\", line 9, in <module>\r\n    from theano.tensor.subtensor import *\r\n\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\theano\\tensor\\subtensor.py\", line 26, in <module>\r\n    import theano.gof.cutils  # needed to import cutils_ext\r\n\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\theano\\gof\\cutils.py\", line 320, in <module>\r\n    compile_cutils()\r\n\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\theano\\gof\\cutils.py\", line 285, in compile_cutils\r\n    preargs=args)\r\n\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\theano\\gof\\cmodule.py\", line 2325, in compile_str\r\n    return dlimport(lib_filename)\r\n\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\theano\\gof\\cmodule.py\", line 302, in dlimport\r\n    rval = __import__(module_name, {}, {}, [module_name])\r\n\r\nImportError: DLL load failed: The specified procedure could not be found.\r\n```\r\nBoth OpenTurns and PyMC3 work fine independently, but having these packages work together would be extremely useful. Any thoughts? Thank you!", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2437/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2430", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2430/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2430/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2430/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2430", "id": 243881635, "node_id": "MDU6SXNzdWUyNDM4ODE2MzU=", "number": 2430, "title": "Issue sampling PPC from multinomial likelihood", "user": {"login": "ericmjl", "id": 2631566, "node_id": "MDQ6VXNlcjI2MzE1NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2631566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericmjl", "html_url": "https://github.com/ericmjl", "followers_url": "https://api.github.com/users/ericmjl/followers", "following_url": "https://api.github.com/users/ericmjl/following{/other_user}", "gists_url": "https://api.github.com/users/ericmjl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericmjl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericmjl/subscriptions", "organizations_url": "https://api.github.com/users/ericmjl/orgs", "repos_url": "https://api.github.com/users/ericmjl/repos", "events_url": "https://api.github.com/users/ericmjl/events{/privacy}", "received_events_url": "https://api.github.com/users/ericmjl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-07-18T23:33:14Z", "updated_at": "2017-07-25T14:56:05Z", "closed_at": "2017-07-25T14:56:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi guys!\r\n\r\nI'm having an issue sampling PPC from a multinomial likelihood. Error returned is:\r\n\r\n```python\r\nValueError: object too deep for desired array\r\n```\r\n\r\nAn example notebook showing this error is here: https://github.com/ericmjl/bayesian-analysis-recipes/blob/master/cover-type.ipynb\r\n\r\nFor a bit of background, this is just a notebook in which I'm testing the use of PyMC3 for multi-class classification.\r\n\r\nI'm not sure if I've implemented the model correctly, so if it's a model issue, I'm happy for this issue to be closed.\r\n\r\nPlease let me know if more detail is needed - it's after work hours right now, so my brain is a bit fried, and I might have left stuff out.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2430/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2417", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2417/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2417/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2417/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2417", "id": 242954473, "node_id": "MDU6SXNzdWUyNDI5NTQ0NzM=", "number": 2417, "title": "Error running /examples/lasso_missing.py", "user": {"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-14T10:10:28Z", "updated_at": "2017-07-14T10:57:42Z", "closed_at": "2017-07-14T10:31:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```python\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-2-4c84dcf98240>\", line 20, in <module>\r\n    observed=masked_values(siblings, value=-999))\r\n\r\n  File \"/home/laoj/Documents/Github/pymc3/pymc3/distributions/distribution.py\", line 36, in __new__\r\n    return model.Var(name, dist, data, total_size)\r\n\r\n  File \"/home/laoj/Documents/Github/pymc3/pymc3/model.py\", line 545, in Var\r\n    total_size=total_size, model=self)\r\n\r\n  File \"/home/laoj/Documents/Github/pymc3/pymc3/model.py\", line 977, in __init__\r\n    data = as_tensor(data, name, model, distribution)\r\n\r\n  File \"/home/laoj/Documents/Github/pymc3/pymc3/model.py\", line 932, in as_tensor\r\n    model=model)\r\n\r\n  File \"/home/laoj/Documents/Github/pymc3/pymc3/model.py\", line 878, in __init__\r\n    distribution.shape, distribution.dtype) * distribution.default()\r\n\r\nValueError: operands could not be broadcast together with shapes (0,) (0,207) \r\n```\r\n\r\nIt was fine last time I check (#2254) so likely due to recently introduced changes.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2417/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2413", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2413/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2413/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2413/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2413", "id": 242532410, "node_id": "MDU6SXNzdWUyNDI1MzI0MTA=", "number": 2413, "title": "Error in variable count when assigning sample method", "user": {"login": "ctm22396", "id": 16002036, "node_id": "MDQ6VXNlcjE2MDAyMDM2", "avatar_url": "https://avatars.githubusercontent.com/u/16002036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctm22396", "html_url": "https://github.com/ctm22396", "followers_url": "https://api.github.com/users/ctm22396/followers", "following_url": "https://api.github.com/users/ctm22396/following{/other_user}", "gists_url": "https://api.github.com/users/ctm22396/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctm22396/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctm22396/subscriptions", "organizations_url": "https://api.github.com/users/ctm22396/orgs", "repos_url": "https://api.github.com/users/ctm22396/repos", "events_url": "https://api.github.com/users/ctm22396/events{/privacy}", "received_events_url": "https://api.github.com/users/ctm22396/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-12T22:18:13Z", "updated_at": "2017-07-16T19:16:08Z", "closed_at": "2017-07-16T19:16:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I came across this error after a fresh install of python 3.5 and the latest versions of theano and pymc3. When I assign a step method to a variable, the resulting call to NUTS() as the remaining variables get auto-assigned generates the following error :\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-7-8f98cb09c8eb> in <module>()\r\n      2     x = pm.Normal('x')\r\n      3     y = pm.Normal('y')\r\n----> 4     pm.sample(draws=10,tune=10, step=[pm.Metropolis(vars=[x])])\r\n      5\r\n~\\Anaconda3\\lib\\site-packages\\pymc3\\sampling.py in sample(draws, step, init, n_init, start, trace, chain, njobs, tune, nuts_kwargs, step_kwargs, progressbar, model, random_seed, live_plot, discard_tuned_samples, live_plot_kwargs, **kwargs)\r\n    247             start = start_\r\n    248     else:\r\n--> 249         step = assign_step_methods(model, step, step_kwargs=step_kwargs)\r\n    250\r\n    251     if njobs is None:\r\n\r\n~\\Anaconda3\\lib\\site-packages\\pymc3\\sampling.py in assign_step_methods(model, step, methods, step_kwargs)\r\n     90         args = step_kwargs.get(step_class.name, {})\r\n     91         used_keys.add(step_class.name)\r\n---> 92         step = step_class(vars=vars, **args)\r\n     93         steps.append(step)\r\n     94\r\n\r\n~\\Anaconda3\\lib\\site-packages\\pymc3\\step_methods\\hmc\\nuts.py in __init__(self, vars, Emax, target_accept, gamma, k, t0, adapt_step_size, max_treedepth, on_error, **kwargs)\r\n    147         `pm.sample` to the desired number of tuning steps.\r\n    148         \"\"\"\r\n--> 149         super(NUTS, self).__init__(vars, use_single_leapfrog=True, **kwargs)\r\n    150\r\n    151         self.Emax = Emax\r\n\r\n~\\Anaconda3\\lib\\site-packages\\pymc3\\step_methods\\hmc\\base_hmc.py in __init__(self, vars, scaling, step_scale, is_cov, model, blocked, use_single_leapfrog, potential, integrator, **theano_kwargs)\r\n     62\r\n     63         self.H, self.compute_energy, self.compute_velocity, self.leapfrog, self.dlogp = get_theano_hamiltonian_functions(\r\n---> 64             vars, shared, model.logpt, self.potential, use_single_leapfrog, integrator, **theano_kwargs)\r\n     65\r\n     66         super(BaseHMC, self).__init__(vars, shared, blocked=blocked)\r\n\r\n~\\Anaconda3\\lib\\site-packages\\pymc3\\step_methods\\hmc\\trajectory.py in get_theano_hamiltonian_functions(model_vars, shared, logpt, potential, use_single_leapfrog, integrator, **theano_kwargs)\r\n    122     \"\"\"\r\n    123     H, q, dlogp = _theano_hamiltonian(model_vars, shared, logpt, potential)\r\n--> 124     energy_function, p = _theano_energy_function(H, q, **theano_kwargs)\r\n    125     velocity_function = _theano_velocity_function(H, p, **theano_kwargs)\r\n    126     if use_single_leapfrog:\r\n\r\n~\\Anaconda3\\lib\\site-packages\\pymc3\\step_methods\\hmc\\trajectory.py in _theano_energy_function(H, q, **theano_kwargs)\r\n     51     p = tt.vector('p')\r\n     52     p.tag.test_value = q.tag.test_value\r\n---> 53     total_energy = H.pot.energy(p) - H.logp(q)\r\n     54     energy_function = theano.function(inputs=[q, p], outputs=total_energy, **theano_kwargs)\r\n     55     energy_function.trust_input = True\r\n\r\n~\\Anaconda3\\lib\\site-packages\\pymc3\\step_methods\\hmc\\quadpotential.py in energy(self, x)\r\n     96\r\n     97     def energy(self, x):\r\n---> 98         return .5 * x.dot(self.v * x)\r\n     99\r\n    100\r\n\r\n~\\Anaconda3\\lib\\site-packages\\theano\\tensor\\var.py in __rmul__(self, other)\r\n    231\r\n    232     def __rmul__(self, other):\r\n--> 233         return theano.tensor.basic.mul(other, self)\r\n\r\n...\r\n\r\nValueError: Input dimension mis-match. (input[0].shape[0] = 2, input[1].shape[0] = 1)\r\n```\r\n\r\nThe \"...\" stands in place of the traceback through theano, as I believe the issue here is in pymc3.\r\n\r\nThis occurs on the simplest of models that I created to reproduce the error. I initialized two variables and set one to Metropolis. You can see the code here:\r\n\r\n```\r\nimport pymc3 as pm\r\n\r\nwith pm.Model() as m:\r\n    x = pm.Normal('x')\r\n    y = pm.Normal('y')\r\n    pm.sample(step=[pm.Metropolis(vars=[x])])\r\n```\r\n\r\nIt appears that the energy function is expecting a value with the shape of the number of variables in the full model but only getting the number variables assigned to NUTS.\r\n\r\nIt runs fine when auto-assigning NUTS to the full model though.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2413/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2400", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2400/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2400/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2400/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2400", "id": 241410494, "node_id": "MDU6SXNzdWUyNDE0MTA0OTQ=", "number": 2400, "title": "Variable rename", "user": {"login": "kyleabeauchamp", "id": 1900459, "node_id": "MDQ6VXNlcjE5MDA0NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1900459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleabeauchamp", "html_url": "https://github.com/kyleabeauchamp", "followers_url": "https://api.github.com/users/kyleabeauchamp/followers", "following_url": "https://api.github.com/users/kyleabeauchamp/following{/other_user}", "gists_url": "https://api.github.com/users/kyleabeauchamp/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleabeauchamp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleabeauchamp/subscriptions", "organizations_url": "https://api.github.com/users/kyleabeauchamp/orgs", "repos_url": "https://api.github.com/users/kyleabeauchamp/repos", "events_url": "https://api.github.com/users/kyleabeauchamp/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleabeauchamp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-08T00:22:52Z", "updated_at": "2018-12-22T12:22:26Z", "closed_at": "2018-12-22T12:22:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It appears that the symbolic computation graph is ignoring the user-given names given to deterministic variables that happen to evaluate to the same constant.  \r\n\r\n```\r\nimport pymc3 as pm\r\n\r\nwith pm.Model():\r\n    a = pm.Uniform(\"a\", 0, 1)\r\n    x = pm.Deterministic(\"x\", pm.math.constant(0.0))\r\n    y = pm.Deterministic(\"y\", pm.math.constant(0.0))\r\n    tr = pm.sample(1000)\r\n\r\nprint(tr.varnames)\r\n\r\n['a_interval__', 'a', 'y', 'y']\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2400/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2383", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2383/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2383/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2383/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2383", "id": 240586295, "node_id": "MDU6SXNzdWUyNDA1ODYyOTU=", "number": 2383, "title": "Sampling in parallel bugs under Windows OS", "user": {"login": "HH-1", "id": 26247588, "node_id": "MDQ6VXNlcjI2MjQ3NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/26247588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HH-1", "html_url": "https://github.com/HH-1", "followers_url": "https://api.github.com/users/HH-1/followers", "following_url": "https://api.github.com/users/HH-1/following{/other_user}", "gists_url": "https://api.github.com/users/HH-1/gists{/gist_id}", "starred_url": "https://api.github.com/users/HH-1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HH-1/subscriptions", "organizations_url": "https://api.github.com/users/HH-1/orgs", "repos_url": "https://api.github.com/users/HH-1/repos", "events_url": "https://api.github.com/users/HH-1/events{/privacy}", "received_events_url": "https://api.github.com/users/HH-1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2017-07-05T09:11:28Z", "updated_at": "2018-06-13T09:22:35Z", "closed_at": "2017-07-18T13:26:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm trying to use the sample() method with the parameter `njobs` ( >1) but I have the following error :\r\n`TypeError: No context on context stack`\r\n\r\nAs a model, I used the Linear regression given in the documentation. It works fine without the njobs argument.\r\nI inserted all my code in a `if __name__=='__main__'` statement as usual on windows.\r\n\r\nI'm running this code with the following configuration:\r\n* windows 10, \r\n* python 3.5 (anaconda),\r\n* pymc3 3.1,\r\n* theano 0.9.0\r\n\r\nDoes anyone face the same problem or is able to reproduce it?\r\n\r\nThanks a lot\r\n\r\n# EDIT : \r\nThis is my code\r\n`\r\n\r\n    import numpy as np\r\n    \r\n    # Initialize random number generator\r\n    np.random.seed(123)\r\n    \r\n    # True parameter values\r\n    alpha, sigma = 1, 1\r\n    beta = [1, 2.5]\r\n    \r\n    # Size of dataset\r\n    size = 100\r\n    \r\n    # Predictor variable\r\n    X1 = np.random.randn(size)\r\n    X2 = np.random.randn(size) * 0.2\r\n    \r\n    # Simulate outcome variable\r\n    Y = alpha + beta[0] * X1 + beta[1] * X2 + np.random.randn(size) * sigma\r\n    \r\n    import pymc3 as pm\r\n    \r\n    basic_model = pm.Model()\r\n    \r\n    with basic_model:\r\n        # Priors for unknown model parameters\r\n        alpha = pm.Normal('alpha', mu=0, sd=10)\r\n        beta = pm.Normal('beta', mu=0, sd=10, shape=2)\r\n        sigma = pm.HalfNormal('sigma', sd=1)\r\n    \r\n        # Expected value of outcome\r\n        mu = alpha + beta[0] * X1 + beta[1] * X2\r\n    \r\n        # Likelihood (sampling distribution) of observations\r\n        Y_obs = pm.Normal('Y_obs', mu=mu, sd=sigma, observed=Y)\r\n    \r\n    # draw 500 posterior samples\r\n    if __name__ == '__main__':\r\n        trace = pm.sample(njobs=2, model=basic_model)\r\n\r\n`", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2383/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2380", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2380/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2380/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2380/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2380", "id": 240404131, "node_id": "MDU6SXNzdWUyNDA0MDQxMzE=", "number": 2380, "title": "Max recursion limit error", "user": {"login": "springcoil", "id": 983944, "node_id": "MDQ6VXNlcjk4Mzk0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/983944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/springcoil", "html_url": "https://github.com/springcoil", "followers_url": "https://api.github.com/users/springcoil/followers", "following_url": "https://api.github.com/users/springcoil/following{/other_user}", "gists_url": "https://api.github.com/users/springcoil/gists{/gist_id}", "starred_url": "https://api.github.com/users/springcoil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/springcoil/subscriptions", "organizations_url": "https://api.github.com/users/springcoil/orgs", "repos_url": "https://api.github.com/users/springcoil/repos", "events_url": "https://api.github.com/users/springcoil/events{/privacy}", "received_events_url": "https://api.github.com/users/springcoil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-07-04T12:19:32Z", "updated_at": "2019-01-27T11:46:11Z", "closed_at": "2019-01-27T11:46:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've been applying to my internal datasets at work the radon example \r\n\r\nGet this error. \r\n\r\n```---------------------------------------------------------------------------\r\nRecursionError                            Traceback (most recent call last)\r\n<ipython-input-29-381437761bf8> in <module>()\r\n     16 \r\n     17     # Linear regression\r\n---> 18     radon_est = a[source_idx]* data.applied.values\r\n     19 \r\n     20     # Data likelihood\r\n\r\n/home/springcoil/miniconda3/envs/py35/lib/python3.5/site-packages/theano/tensor/var.py in __getitem__(self, args)\r\n    477                     check_bool(el)\r\n    478 \r\n--> 479         check_bool(args)\r\n    480 \r\n    481         if (isinstance(args, list) and\r\n\r\n/home/springcoil/miniconda3/envs/py35/lib/python3.5/site-packages/theano/tensor/var.py in check_bool(args_el)\r\n    475                     isinstance(args_el, collections.Iterable)):\r\n    476                 for el in args_el:\r\n--> 477                     check_bool(el)\r\n    478 \r\n    479         check_bool(args)\r\n\r\n... last 1 frames repeated, from the frame below ...\r\n\r\n/home/springcoil/miniconda3/envs/py35/lib/python3.5/site-packages/theano/tensor/var.py in check_bool(args_el)\r\n    475                     isinstance(args_el, collections.Iterable)):\r\n    476                 for el in args_el:\r\n--> 477                     check_bool(el)\r\n    478 \r\n    479         check_bool(args)\r\n\r\nRecursionError: maximum recursion depth exceeded in comparison\r\n```\r\nCould be similar to https://github.com/pymc-devs/pymc3/issues/893 ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2380/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2375", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2375/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2375/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2375/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2375", "id": 239958165, "node_id": "MDU6SXNzdWUyMzk5NTgxNjU=", "number": 2375, "title": "Bug: Theano bug when running on Mac", "user": {"login": "springcoil", "id": 983944, "node_id": "MDQ6VXNlcjk4Mzk0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/983944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/springcoil", "html_url": "https://github.com/springcoil", "followers_url": "https://api.github.com/users/springcoil/followers", "following_url": "https://api.github.com/users/springcoil/following{/other_user}", "gists_url": "https://api.github.com/users/springcoil/gists{/gist_id}", "starred_url": "https://api.github.com/users/springcoil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/springcoil/subscriptions", "organizations_url": "https://api.github.com/users/springcoil/orgs", "repos_url": "https://api.github.com/users/springcoil/repos", "events_url": "https://api.github.com/users/springcoil/events{/privacy}", "received_events_url": "https://api.github.com/users/springcoil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-01T16:16:06Z", "updated_at": "2017-07-01T16:20:40Z", "closed_at": "2017-07-01T16:20:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was trying to run this https://opendatascience.com/blog/why-hierarchical-models-are-awesome-tricky-and-bayesian/ from Thomas. \r\n`INFO (theano.gof.compilelock):  ` is the error I get. \r\n```07/01/2017 \r\n\r\nCPython 3.5.2\r\nIPython 5.1.0\r\n\r\nnumpy 1.11.1\r\nscipy 0.18.1\r\npandas 0.18.1\r\nmatplotlib 1.5.1\r\nseaborn 0.7.0\r\npatsy 0.4.1\r\npymc3 3.1\r\ntheano 0.9.0\r\njoblib 0.10.2\r\n\r\ncompiler   : GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.54)\r\nsystem     : Darwin\r\nrelease    : 16.6.0\r\nmachine    : x86_64\r\nprocessor  : i386\r\nCPU cores  : 8\r\ninterpreter: 64bit\r\nGit hash   : ```\r\n\r\nHas anyone seen a bug like this before?", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2375/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2374", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2374/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2374/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2374/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2374", "id": 239949736, "node_id": "MDU6SXNzdWUyMzk5NDk3MzY=", "number": 2374, "title": "sample_smc: AttributeError: 'NoneType' object has no attribute 'n_steps'", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "hvasbath", "id": 11273616, "node_id": "MDQ6VXNlcjExMjczNjE2", "avatar_url": "https://avatars.githubusercontent.com/u/11273616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hvasbath", "html_url": "https://github.com/hvasbath", "followers_url": "https://api.github.com/users/hvasbath/followers", "following_url": "https://api.github.com/users/hvasbath/following{/other_user}", "gists_url": "https://api.github.com/users/hvasbath/gists{/gist_id}", "starred_url": "https://api.github.com/users/hvasbath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hvasbath/subscriptions", "organizations_url": "https://api.github.com/users/hvasbath/orgs", "repos_url": "https://api.github.com/users/hvasbath/repos", "events_url": "https://api.github.com/users/hvasbath/events{/privacy}", "received_events_url": "https://api.github.com/users/hvasbath/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hvasbath", "id": 11273616, "node_id": "MDQ6VXNlcjExMjczNjE2", "avatar_url": "https://avatars.githubusercontent.com/u/11273616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hvasbath", "html_url": "https://github.com/hvasbath", "followers_url": "https://api.github.com/users/hvasbath/followers", "following_url": "https://api.github.com/users/hvasbath/following{/other_user}", "gists_url": "https://api.github.com/users/hvasbath/gists{/gist_id}", "starred_url": "https://api.github.com/users/hvasbath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hvasbath/subscriptions", "organizations_url": "https://api.github.com/users/hvasbath/orgs", "repos_url": "https://api.github.com/users/hvasbath/repos", "events_url": "https://api.github.com/users/hvasbath/events{/privacy}", "received_events_url": "https://api.github.com/users/hvasbath/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 29, "created_at": "2017-07-01T13:35:53Z", "updated_at": "2017-07-09T17:23:12Z", "closed_at": "2017-07-09T17:23:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\nwith pm.Model():\r\n    pm.NormalMixture('m', \r\n                     mu=np.array([0., 1.]), \r\n                     w=np.array([.6, .4]), \r\n                     sd=np.array([.2, .2]))\r\n    step = pm.smc.SMC(n_chains=500)\r\n    trace = pm.smc.sample_smc(n_steps=1000, step=step, homepath='/tmp')\r\n```\r\n\r\n`traceplot(trace)` gives:\r\n![image](https://user-images.githubusercontent.com/674200/27769932-025816ac-5f36-11e7-9fca-a9499857b86d.png)\r\n\r\n`sns.distplot(trace.get_values('m'));` gives:\r\n![image](https://user-images.githubusercontent.com/674200/27769934-0bf06408-5f36-11e7-9fd9-875294f9cf1a.png)\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2374/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2358", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2358/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2358/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2358/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2358", "id": 238864308, "node_id": "MDU6SXNzdWUyMzg4NjQzMDg=", "number": 2358, "title": "logp for zero inflated Poisson", "user": {"login": "pwl", "id": 72500, "node_id": "MDQ6VXNlcjcyNTAw", "avatar_url": "https://avatars.githubusercontent.com/u/72500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pwl", "html_url": "https://github.com/pwl", "followers_url": "https://api.github.com/users/pwl/followers", "following_url": "https://api.github.com/users/pwl/following{/other_user}", "gists_url": "https://api.github.com/users/pwl/gists{/gist_id}", "starred_url": "https://api.github.com/users/pwl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pwl/subscriptions", "organizations_url": "https://api.github.com/users/pwl/orgs", "repos_url": "https://api.github.com/users/pwl/repos", "events_url": "https://api.github.com/users/pwl/events{/privacy}", "received_events_url": "https://api.github.com/users/pwl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-27T14:09:40Z", "updated_at": "2017-06-27T18:33:45Z", "closed_at": "2017-06-27T18:33:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running\r\n\r\n```\r\nwith pm.Model():\r\n    pm.ZeroInflatedPoisson.dist(1,1).logp(1)\r\n```\r\n\r\nI'm getting\r\n\r\n```\r\nAsTensorError: Cannot cast True or False as a tensor variable. Please use 1 or 0. This error might be caused by using the == operator on Variables. v == w does not do what you think it does, use theano.tensor.eq(v, w) instead.\r\n```\r\n\r\nHowever, the above code works for `Poisson.dist(1).logp(1)` and for \r\n```\r\nZeroInflatedPoisson.dist(1,1,shape=(1,)).logp(np.array([1]))\r\n```\r\nso only the scalar version of `ZeroInflatedPoisson.logp` seems to be affected.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2358/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2348", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2348/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2348/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2348/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2348", "id": 238183266, "node_id": "MDU6SXNzdWUyMzgxODMyNjY=", "number": 2348, "title": "Elliptical slice sampling error in GP notebook", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 34672788, "node_id": "MDU6TGFiZWwzNDY3Mjc4OA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/release", "name": "release", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-23T15:52:43Z", "updated_at": "2018-06-29T12:46:40Z", "closed_at": "2017-06-23T20:10:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Elliptical slice sampling generates an `AttributeError` in the GP notebook, related to a missing test value:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n/Users/fonnescj/anaconda3/envs/dev/lib/python3.6/site-packages/theano/gof/op.py in __call__(self, *inputs, **kwargs)\r\n    624                 try:\r\n--> 625                     storage_map[ins] = [self._get_test_value(ins)]\r\n    626                     compute_map[ins] = [True]\r\n\r\n/Users/fonnescj/anaconda3/envs/dev/lib/python3.6/site-packages/theano/gof/op.py in _get_test_value(cls, v)\r\n    580         detailed_err_msg = utils.get_variable_trace_string(v)\r\n--> 581         raise AttributeError('%s has no test value %s' % (v, detailed_err_msg))\r\n    582 \r\n\r\nAttributeError: Elemwise{add,no_inplace}.0 has no test value  \r\nBacktrace when that variable is created:\r\n\r\n  File \"/Users/fonnescj/anaconda3/envs/dev/lib/python3.6/site-packages/ipykernel/kernelbase.py\", line 235, in dispatch_shell\r\n    handler(stream, idents, msg)\r\n  File \"/Users/fonnescj/anaconda3/envs/dev/lib/python3.6/site-packages/ipykernel/kernelbase.py\", line 399, in execute_request\r\n    user_expressions, allow_stdin)\r\n  File \"/Users/fonnescj/anaconda3/envs/dev/lib/python3.6/site-packages/ipykernel/ipkernel.py\", line 196, in do_execute\r\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\r\n  File \"/Users/fonnescj/anaconda3/envs/dev/lib/python3.6/site-packages/ipykernel/zmqshell.py\", line 533, in run_cell\r\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\r\n  File \"/Users/fonnescj/anaconda3/envs/dev/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2683, in run_cell\r\n    interactivity=interactivity, compiler=compiler, result=result)\r\n  File \"/Users/fonnescj/anaconda3/envs/dev/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2787, in run_ast_nodes\r\n    if self.run_code(code, result):\r\n  File \"/Users/fonnescj/anaconda3/envs/dev/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2847, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-2-393c5bba237e>\", line 19, in <module>\r\n    K_noise = K + noise * np.eye(n)\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-4-59015ba86711> in <module>()\r\n      8 \r\n      9     # Interpolate function values using noisy covariance matrix\r\n---> 10     L = tt.slinalg.cholesky(K_noise)\r\n     11     f_pred = pm.Deterministic('f_pred', tt.dot(K_s.T, tt.slinalg.solve(L.T, tt.slinalg.solve(L, f_sample))))\r\n     12 \r\n\r\n/Users/fonnescj/anaconda3/envs/dev/lib/python3.6/site-packages/theano/gof/op.py in __call__(self, *inputs, **kwargs)\r\n    637                         raise ValueError(\r\n    638                             'Cannot compute test value: input %i (%s) of Op %s missing default value. %s' %\r\n--> 639                             (i, ins, node, detailed_err_msg))\r\n    640                     elif config.compute_test_value == 'ignore':\r\n    641                         # silently skip test\r\n\r\nValueError: Cannot compute test value: input 0 (Elemwise{add,no_inplace}.0) of Op Cholesky{lower=True, destructive=False}(Elemwise{add,no_inplace}.0) missing default value.  \r\nBacktrace when that variable is created:\r\n\r\n  File \"/Users/fonnescj/anaconda3/envs/dev/lib/python3.6/site-packages/ipykernel/kernelbase.py\", line 235, in dispatch_shell\r\n    handler(stream, idents, msg)\r\n  File \"/Users/fonnescj/anaconda3/envs/dev/lib/python3.6/site-packages/ipykernel/kernelbase.py\", line 399, in execute_request\r\n    user_expressions, allow_stdin)\r\n  File \"/Users/fonnescj/anaconda3/envs/dev/lib/python3.6/site-packages/ipykernel/ipkernel.py\", line 196, in do_execute\r\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\r\n  File \"/Users/fonnescj/anaconda3/envs/dev/lib/python3.6/site-packages/ipykernel/zmqshell.py\", line 533, in run_cell\r\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\r\n  File \"/Users/fonnescj/anaconda3/envs/dev/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2683, in run_cell\r\n    interactivity=interactivity, compiler=compiler, result=result)\r\n  File \"/Users/fonnescj/anaconda3/envs/dev/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2787, in run_ast_nodes\r\n    if self.run_code(code, result):\r\n  File \"/Users/fonnescj/anaconda3/envs/dev/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2847, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-2-393c5bba237e>\", line 19, in <module>\r\n    K_noise = K + noise * np.eye(n)\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2348/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2347", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2347/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2347/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2347/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2347", "id": 238177652, "node_id": "MDU6SXNzdWUyMzgxNzc2NTI=", "number": 2347, "title": "HDF5 backend failure in getting started notebook", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 34672788, "node_id": "MDU6TGFiZWwzNDY3Mjc4OA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/release", "name": "release", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-23T15:33:25Z", "updated_at": "2017-06-23T18:41:52Z", "closed_at": "2017-06-23T18:41:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The demo of the HDF5 backend fails with an OSError:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nOSError                                   Traceback (most recent call last)\r\n<ipython-input-30-b073ec0dd887> in <module>()\r\n      5 \r\n      6     backend = HDF5('trace.h5')\r\n----> 7     trace = pm.sample(trace=backend)\r\n      8     backend.close()\r\n\r\n/Users/fonnescj/Repos/pymc3/pymc3/sampling.py in sample(draws, step, init, n_init, start, trace, chain, njobs, tune, nuts_kwargs, step_kwargs, progressbar, model, random_seed, live_plot, discard_tuned_samples, live_plot_kwargs, **kwargs)\r\n    274     discard = tune if discard_tuned_samples else 0\r\n    275 \r\n--> 276     return sample_func(**sample_args)[discard:]\r\n    277 \r\n    278 \r\n\r\n/Users/fonnescj/Repos/pymc3/pymc3/sampling.py in _sample(draws, step, start, trace, chain, tune, progressbar, model, random_seed, live_plot, live_plot_kwargs, **kwargs)\r\n    289     try:\r\n    290         strace = None\r\n--> 291         for it, strace in enumerate(sampling):\r\n    292             if live_plot:\r\n    293                 if live_plot_kwargs is None:\r\n\r\n/Users/fonnescj/anaconda3/envs/dev/lib/python3.6/site-packages/tqdm/_tqdm.py in __iter__(self)\r\n    831 \"\"\", fp_write=getattr(self.fp, 'write', sys.stderr.write))\r\n    832 \r\n--> 833             for obj in iterable:\r\n    834                 yield obj\r\n    835                 # Update and print the progressbar.\r\n\r\n/Users/fonnescj/Repos/pymc3/pymc3/sampling.py in _iter_sample(draws, step, start, trace, chain, tune, model, random_seed)\r\n    389                 point, states = step.step(point)\r\n    390                 if strace.supports_sampler_stats:\r\n--> 391                     strace.record(point, states)\r\n    392                 else:\r\n    393                     strace.record(point)\r\n\r\n/Users/fonnescj/Repos/pymc3/pymc3/backends/hdf5.py in record(self, point, sampler_stats)\r\n    176                     data = self.stats[str(i)]\r\n    177                     for key, val in vars.items():\r\n--> 178                         data[key][self.draw_idx] = val\r\n    179 \r\n    180             self.draw_idx += 1\r\n\r\nh5py/_objects.pyx in h5py._objects.with_phil.wrapper (/private/var/folders/my/m6ynh3bn6tq06h7xr3js0z7r0000gn/T/pip-gkjbrkhs-build/h5py/_objects.c:2840)()\r\n\r\nh5py/_objects.pyx in h5py._objects.with_phil.wrapper (/private/var/folders/my/m6ynh3bn6tq06h7xr3js0z7r0000gn/T/pip-gkjbrkhs-build/h5py/_objects.c:2798)()\r\n\r\n/Users/fonnescj/anaconda3/envs/dev/lib/python3.6/site-packages/h5py/_hl/dataset.py in __setitem__(self, args, val)\r\n    628         mspace = h5s.create_simple(mshape_pad, (h5s.UNLIMITED,)*len(mshape_pad))\r\n    629         for fspace in selection.broadcast(mshape):\r\n--> 630             self.id.write(mspace, fspace, val, mtype, dxpl=self._dxpl)\r\n    631 \r\n    632     def read_direct(self, dest, source_sel=None, dest_sel=None):\r\n\r\nh5py/_objects.pyx in h5py._objects.with_phil.wrapper (/private/var/folders/my/m6ynh3bn6tq06h7xr3js0z7r0000gn/T/pip-gkjbrkhs-build/h5py/_objects.c:2840)()\r\n\r\nh5py/_objects.pyx in h5py._objects.with_phil.wrapper (/private/var/folders/my/m6ynh3bn6tq06h7xr3js0z7r0000gn/T/pip-gkjbrkhs-build/h5py/_objects.c:2798)()\r\n\r\nh5py/h5d.pyx in h5py.h5d.DatasetID.write (/private/var/folders/my/m6ynh3bn6tq06h7xr3js0z7r0000gn/T/pip-gkjbrkhs-build/h5py/h5d.c:3694)()\r\n\r\nh5py/_proxy.pyx in h5py._proxy.dset_rw (/private/var/folders/my/m6ynh3bn6tq06h7xr3js0z7r0000gn/T/pip-gkjbrkhs-build/h5py/_proxy.c:2022)()\r\n\r\nh5py/_proxy.pyx in h5py._proxy.H5PY_H5Dwrite (/private/var/folders/my/m6ynh3bn6tq06h7xr3js0z7r0000gn/T/pip-gkjbrkhs-build/h5py/_proxy.c:1732)()\r\n\r\nOSError: Can't prepare for writing data (No appropriate function for conversion path)\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2347/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2346", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2346/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2346/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2346/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2346", "id": 238148717, "node_id": "MDU6SXNzdWUyMzgxNDg3MTc=", "number": 2346, "title": "Mixture model failure during sample_ppc", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 34672788, "node_id": "MDU6TGFiZWwzNDY3Mjc4OA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/release", "name": "release", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-06-23T13:52:05Z", "updated_at": "2017-06-23T15:14:31Z", "closed_at": "2017-06-23T15:14:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In the dependent density regression notebook, the posterior predictive checks cell fails on the mixture model:\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-16-2fd0a2e33b32> in <module>()\r\n      5 \r\n      6 with model:\r\n----> 7     pp_trace = pm.sample_ppc(trace, PP_SAMPLES, random_seed=SEED)\r\n\r\n/Users/fonnescj/Repos/pymc3/pymc3/sampling.py in sample_ppc(trace, samples, model, vars, size, random_seed, progressbar)\r\n    537             param = trace[idx]\r\n    538             for var in vars:\r\n--> 539                 vals = var.distribution.random(point=param, size=size)\r\n    540                 ppc[var.name].append(vals)\r\n    541     finally:\r\n\r\n/Users/fonnescj/Repos/pymc3/pymc3/distributions/mixture.py in random(self, point, size, repeat)\r\n    130         w_samples = generate_samples(random_choice,\r\n    131                                      w=w,\r\n--> 132                                      broadcast_shape=w.shape[:-1] or (1,),\r\n    133                                      dist_shape=self.shape,\r\n    134                                      size=size).squeeze()\r\n\r\nAttributeError: 'list' object has no attribute 'shape'\r\n```\r\n\r\nNot sure how the weights end up in a list here.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2346/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2315", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2315/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2315/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2315/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2315", "id": 236175637, "node_id": "MDU6SXNzdWUyMzYxNzU2Mzc=", "number": 2315, "title": "start_container.sh fails because of absence of setup.py", "user": {"login": "AustinRochford", "id": 3465592, "node_id": "MDQ6VXNlcjM0NjU1OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3465592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AustinRochford", "html_url": "https://github.com/AustinRochford", "followers_url": "https://api.github.com/users/AustinRochford/followers", "following_url": "https://api.github.com/users/AustinRochford/following{/other_user}", "gists_url": "https://api.github.com/users/AustinRochford/gists{/gist_id}", "starred_url": "https://api.github.com/users/AustinRochford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AustinRochford/subscriptions", "organizations_url": "https://api.github.com/users/AustinRochford/orgs", "repos_url": "https://api.github.com/users/AustinRochford/repos", "events_url": "https://api.github.com/users/AustinRochford/events{/privacy}", "received_events_url": "https://api.github.com/users/AustinRochford/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-15T12:33:49Z", "updated_at": "2017-06-15T23:13:05Z", "closed_at": "2017-06-15T23:13:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Running `sh ./scripts/start_container.sh` now gives me the following error:\r\n\r\n```\r\n+ pip install -e .\r\nDirectory '.' is not installable. File 'setup.py' not found.\r\n```\r\n\r\nMy guess is that this problem dates to [this change](https://github.com/pymc-devs/pymc3/commit/da5401f242946ce79e37ab29170d40947a9274a6) where we began using `setup.py` to install test dependencies.  Since shared volumes are not created until after the image is built and `setup.py` lives outside of the build context, we cannot easily access `setup.py` during the Docker image build.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2315/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2307", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2307/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2307/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2307/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2307", "id": 235550502, "node_id": "MDU6SXNzdWUyMzU1NTA1MDI=", "number": 2307, "title": "sample_ppc() problem with pymc3.1", "user": {"login": "nkoudounas", "id": 10165750, "node_id": "MDQ6VXNlcjEwMTY1NzUw", "avatar_url": "https://avatars.githubusercontent.com/u/10165750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nkoudounas", "html_url": "https://github.com/nkoudounas", "followers_url": "https://api.github.com/users/nkoudounas/followers", "following_url": "https://api.github.com/users/nkoudounas/following{/other_user}", "gists_url": "https://api.github.com/users/nkoudounas/gists{/gist_id}", "starred_url": "https://api.github.com/users/nkoudounas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nkoudounas/subscriptions", "organizations_url": "https://api.github.com/users/nkoudounas/orgs", "repos_url": "https://api.github.com/users/nkoudounas/repos", "events_url": "https://api.github.com/users/nkoudounas/events{/privacy}", "received_events_url": "https://api.github.com/users/nkoudounas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "aseyboldt", "id": 1882397, "node_id": "MDQ6VXNlcjE4ODIzOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1882397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aseyboldt", "html_url": "https://github.com/aseyboldt", "followers_url": "https://api.github.com/users/aseyboldt/followers", "following_url": "https://api.github.com/users/aseyboldt/following{/other_user}", "gists_url": "https://api.github.com/users/aseyboldt/gists{/gist_id}", "starred_url": "https://api.github.com/users/aseyboldt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aseyboldt/subscriptions", "organizations_url": "https://api.github.com/users/aseyboldt/orgs", "repos_url": "https://api.github.com/users/aseyboldt/repos", "events_url": "https://api.github.com/users/aseyboldt/events{/privacy}", "received_events_url": "https://api.github.com/users/aseyboldt/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aseyboldt", "id": 1882397, "node_id": "MDQ6VXNlcjE4ODIzOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1882397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aseyboldt", "html_url": "https://github.com/aseyboldt", "followers_url": "https://api.github.com/users/aseyboldt/followers", "following_url": "https://api.github.com/users/aseyboldt/following{/other_user}", "gists_url": "https://api.github.com/users/aseyboldt/gists{/gist_id}", "starred_url": "https://api.github.com/users/aseyboldt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aseyboldt/subscriptions", "organizations_url": "https://api.github.com/users/aseyboldt/orgs", "repos_url": "https://api.github.com/users/aseyboldt/repos", "events_url": "https://api.github.com/users/aseyboldt/events{/privacy}", "received_events_url": "https://api.github.com/users/aseyboldt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-06-13T13:16:49Z", "updated_at": "2017-06-17T15:05:55Z", "closed_at": "2017-06-17T15:05:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "When i changed from pymc3 to pymc3.1 i have a problem with sample_ppc(). The error was not only with ADVI but with Metropolis and NUTS too. I am providing the same example as the original note book https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/bayesian_neural_network_opvi-advi.ipynb. The same error occurs when using sample with NUTS and Metropolis.\r\n\r\n```python\r\n%matplotlib inline\r\nimport theano\r\nfloatX = theano.config.floatX\r\nimport pymc3 as pm\r\nimport theano.tensor as T\r\nimport sklearn\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nimport seaborn as sns\r\nfrom warnings import filterwarnings\r\nfilterwarnings('ignore')\r\nsns.set_style('white')\r\nfrom sklearn import datasets\r\nfrom sklearn.preprocessing import scale\r\nfrom sklearn.cross_validation import train_test_split\r\nfrom sklearn.datasets import make_moons\r\n\r\nX, Y = make_moons(noise=0.2, random_state=0, n_samples=1000)\r\nX = scale(X)\r\nX = X.astype(floatX)\r\nY = Y.astype(floatX)\r\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=.5)\r\n\r\nfig, ax = plt.subplots()\r\nax.scatter(X[Y==0, 0], X[Y==0, 1], label='Class 0')\r\nax.scatter(X[Y==1, 0], X[Y==1, 1], color='r', label='Class 1')\r\nsns.despine(); ax.legend()\r\nax.set(xlabel='X', ylabel='Y', title='Toy binary classification data set');\r\n\r\ndef construct_nn(ann_input, ann_output):\r\nn_hidden = 5\r\n\r\n# Initialize random weights between each layer\r\ninit_1 = np.random.randn(X.shape[1], n_hidden).astype(floatX)\r\ninit_2 = np.random.randn(n_hidden, n_hidden).astype(floatX)\r\ninit_out = np.random.randn(n_hidden).astype(floatX)\r\n    \r\nwith pm.Model() as neural_network:\r\n    # Weights from input to hidden layer\r\n    weights_in_1 = pm.Normal('w_in_1', 0, sd=1, \r\n                             shape=(X.shape[1], n_hidden), \r\n                             testval=init_1)\r\n    \r\n    # Weights from 1st to 2nd layer\r\n    weights_1_2 = pm.Normal('w_1_2', 0, sd=1, \r\n                            shape=(n_hidden, n_hidden), \r\n                            testval=init_2)\r\n    \r\n    # Weights from hidden layer to output\r\n    weights_2_out = pm.Normal('w_2_out', 0, sd=1, \r\n                              shape=(n_hidden,), \r\n                              testval=init_out)\r\n    \r\n    # Build neural-network using tanh activation function\r\n    act_1 = pm.math.tanh(pm.math.dot(ann_input, \r\n                                     weights_in_1))\r\n    act_2 = pm.math.tanh(pm.math.dot(act_1, \r\n                                     weights_1_2))\r\n    act_out = pm.math.sigmoid(pm.math.dot(act_2, \r\n                                          weights_2_out))\r\n    \r\n    # Binary classification -> Bernoulli likelihood\r\n    out = pm.Bernoulli('out', \r\n                       act_out,\r\n                       observed=ann_output,\r\n                       total_size=Y_train.shape[0] # IMPORTANT for minibatches\r\n                      )\r\nreturn neural_network\r\nann_input = theano.shared(X_train)\r\nann_output = theano.shared(Y_train)\r\nneural_network = construct_nn(ann_input, ann_output)\r\n\r\n%%time\r\n\r\nwith neural_network:\r\ninference_no_s = pm.ADVI()\r\napprox_no_s = pm.fit(n=30000, method=inference_no_s)\r\n\r\ntrace = approx_no_s.sample(draws=5000)\r\n\r\n###NOTE: The original ipynb is using: trace = approx.sample_vp(draws=5000), but approx is 'MeanField' object that has no attribute 'sample_vp', so i change it to : trace = approx_no_s.sample(draws=5000)###\r\n\r\nann_input.set_value(X_test)\r\nann_output.set_value(Y_test)\r\nppc = pm.sample_ppc(trace, model=neural_network, samples=500, progressbar=False)\r\n\r\npred = ppc['out'].mean(axis=0) > 0.5\r\n```\r\n\r\nAnd the error i got was:\r\n\r\n```pytb\r\nTypeError Traceback (most recent call last)\r\nin ()\r\n1 ann_input.set_value(X_test)\r\n2 ann_output.set_value(Y_test)\r\n----> 3 ppc = pm.sample_ppc(trace, model=neural_network, samples=500, progressbar=False)\r\n4\r\n\r\nC:\\Users\\Nikos\\Documents\\Lasagne\\python-3.4.4.amd64\\lib\\site-packages\\pymc3\\sampling.py in sample_ppc(trace, samples, model, vars, size, random_seed, progressbar)\r\n526 for var in vars:\r\n527 ppc[var.name].append(var.distribution.random(point=param,\r\n--> 528 size=size))\r\n529\r\n530 return {k: np.asarray(v) for k, v in ppc.items()}\r\n\r\nC:\\Users\\Nikos\\Documents\\Lasagne\\python-3.4.4.amd64\\lib\\site-packages\\pymc3\\distributions\\discrete.py in random(self, point, size, repeat)\r\n152\r\n153 def random(self, point=None, size=None, repeat=None):\r\n--> 154 p = draw_values([self.p], point=point)\r\n155 return generate_samples(stats.bernoulli.rvs, p,\r\n156 dist_shape=self.shape,\r\n\r\nC:\\Users\\Nikos\\Documents\\Lasagne\\python-3.4.4.amd64\\lib\\site-packages\\pymc3\\distributions\\distribution.py in draw_values(params, point)\r\n183 if not isinstance(node, (tt.sharedvar.TensorSharedVariable,\r\n184 tt.TensorConstant)):\r\n--> 185 givens[name] = (node, draw_value(node, point=point))\r\n186 values = [None for _ in params]\r\n187 for i, param in enumerate(params):\r\n\r\nC:\\Users\\Nikos\\Documents\\Lasagne\\python-3.4.4.amd64\\lib\\site-packages\\pymc3\\distributions\\distribution.py in draw_value(param, point, givens)\r\n251 except:\r\n252 shape = param.shape\r\n--> 253 if len(shape) == 0 and len(value) == 1:\r\n254 value = value[0]\r\n255 return value\r\n\r\nTypeError: object of type 'TensorVariable' has no len()\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2307/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2302", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2302/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2302/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2302/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2302", "id": 235372274, "node_id": "MDU6SXNzdWUyMzUzNzIyNzQ=", "number": 2302, "title": "plot_posterior's text_size argument does not behave as advertised", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-12T21:33:12Z", "updated_at": "2017-07-04T13:51:27Z", "closed_at": "2017-07-04T13:51:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The `text_size` argument for `plot_posterior` is documented as:\r\n\r\n> Text size of the point_estimates and HPD (Default:16)\r\n\r\nHowever, only the point estimate font size is changed. Other text annotations are unchanged.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2302/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2301", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2301/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2301/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2301/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2301", "id": 235369545, "node_id": "MDU6SXNzdWUyMzUzNjk1NDU=", "number": 2301, "title": "plot_posterior creates poorly-sized bounding box", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-12T21:21:51Z", "updated_at": "2017-07-07T10:00:57Z", "closed_at": "2017-07-07T10:00:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When generating plots with `plot_posterior`, the resulting figure is placed in a bounding box that looks like it was designed for a multipanel plot, with the figure itself situated in the far left pane.\r\n\r\n![](https://www.dropbox.com/s/9mw0iu217jh88up/Screenshot%202017-06-12%2016.19.44.png?raw=1)\r\n\r\nThe bounding box should be approximately the same dimensions as the figure.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2301/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2300", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2300/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2300/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2300/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2300", "id": 235367554, "node_id": "MDU6SXNzdWUyMzUzNjc1NTQ=", "number": 2300, "title": "Auto-scale plot font sizes", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-12T21:13:43Z", "updated_at": "2018-01-17T11:52:33Z", "closed_at": "2018-01-17T11:52:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When different figure sizes are specified for our plots, the labels and other text annotations to not scale with them, and end up looking terrible:\r\n\r\n![](http://d.pr/i/KhSYje+)\r\n\r\nIt should be straightforward to scale fonts by default to some acceptable size.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2300/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2290", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2290/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2290/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2290/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2290", "id": 234948361, "node_id": "MDU6SXNzdWUyMzQ5NDgzNjE=", "number": 2290, "title": "TypeError on sample_ppc with binomial random variable", "user": {"login": "kzielnicki", "id": 6323667, "node_id": "MDQ6VXNlcjYzMjM2Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/6323667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kzielnicki", "html_url": "https://github.com/kzielnicki", "followers_url": "https://api.github.com/users/kzielnicki/followers", "following_url": "https://api.github.com/users/kzielnicki/following{/other_user}", "gists_url": "https://api.github.com/users/kzielnicki/gists{/gist_id}", "starred_url": "https://api.github.com/users/kzielnicki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kzielnicki/subscriptions", "organizations_url": "https://api.github.com/users/kzielnicki/orgs", "repos_url": "https://api.github.com/users/kzielnicki/repos", "events_url": "https://api.github.com/users/kzielnicki/events{/privacy}", "received_events_url": "https://api.github.com/users/kzielnicki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "aseyboldt", "id": 1882397, "node_id": "MDQ6VXNlcjE4ODIzOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1882397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aseyboldt", "html_url": "https://github.com/aseyboldt", "followers_url": "https://api.github.com/users/aseyboldt/followers", "following_url": "https://api.github.com/users/aseyboldt/following{/other_user}", "gists_url": "https://api.github.com/users/aseyboldt/gists{/gist_id}", "starred_url": "https://api.github.com/users/aseyboldt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aseyboldt/subscriptions", "organizations_url": "https://api.github.com/users/aseyboldt/orgs", "repos_url": "https://api.github.com/users/aseyboldt/repos", "events_url": "https://api.github.com/users/aseyboldt/events{/privacy}", "received_events_url": "https://api.github.com/users/aseyboldt/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aseyboldt", "id": 1882397, "node_id": "MDQ6VXNlcjE4ODIzOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1882397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aseyboldt", "html_url": "https://github.com/aseyboldt", "followers_url": "https://api.github.com/users/aseyboldt/followers", "following_url": "https://api.github.com/users/aseyboldt/following{/other_user}", "gists_url": "https://api.github.com/users/aseyboldt/gists{/gist_id}", "starred_url": "https://api.github.com/users/aseyboldt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aseyboldt/subscriptions", "organizations_url": "https://api.github.com/users/aseyboldt/orgs", "repos_url": "https://api.github.com/users/aseyboldt/repos", "events_url": "https://api.github.com/users/aseyboldt/events{/privacy}", "received_events_url": "https://api.github.com/users/aseyboldt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2017-06-09T21:58:07Z", "updated_at": "2018-12-22T12:20:51Z", "closed_at": "2018-12-22T12:20:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Minimal example, simple \"coin flip\" model:\r\n\r\n```python\r\nimport pymc3 as pm\r\nimport numpy as np\r\nimport scipy.stats as ss\r\n\r\ndata = ss.binom(1, 0.8).rvs(20)\r\n\r\nwith pm.Model() as model:\r\n    # prior for p\r\n    p = pm.Uniform('p', lower=0, upper=1)\r\n    \r\n    # model for x given p\r\n    x = pm.Binomial('x', n=np.ones(len(data)), p=p, observed=data)\r\n\r\nwith model:\r\n    trace = pm.sample(draws=1000, init='advi', n_init=20000)\r\n\r\nppc = pm.sample_ppc(trace, model=model, samples=500, size=100)\r\n```\r\n\r\nGives:\r\n```\r\nTypeError: Cannot cast array data from dtype('float64') to dtype('int64') according to the rule 'safe'\r\n```\r\n\r\nFull trace:\r\n<details>\r\n\r\n```pytb\r\n--------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-46-d7601fc9ec00> in <module>()\r\n----> 1 ppc = pm.sample_ppc(trace, model=model)\r\n\r\n/Users/kevinzielnicki/python/virtualenv/stitch/lib/python2.7/site-packages/pymc3/sampling.pyc in sample_ppc(trace, samples, model, vars, size, random_seed, progressbar)\r\n    389         for var in vars:\r\n    390             ppc[var.name].append(var.distribution.random(point=param,\r\n--> 391                                                          size=size))\r\n    392 \r\n    393     return {k: np.asarray(v) for k, v in ppc.items()}\r\n\r\n/Users/kevinzielnicki/python/virtualenv/stitch/lib/python2.7/site-packages/pymc3/distributions/discrete.pyc in random(self, point, size, repeat)\r\n     49         return generate_samples(stats.binom.rvs, n=n, p=p,\r\n     50                                 dist_shape=self.shape,\r\n---> 51                                 size=size)\r\n     52 \r\n     53     def logp(self, value):\r\n\r\n/Users/kevinzielnicki/python/virtualenv/stitch/lib/python2.7/site-packages/pymc3/distributions/distribution.pyc in generate_samples(generator, *args, **kwargs)\r\n    349                                         [int(x) for x in broadcast_shape],\r\n    350                                         [int(x) for x in prefix_shape],\r\n--> 351                                         *args, **kwargs)\r\n    352             if broadcast_shape == (1,):\r\n    353                 samples = np.reshape(samples, prefix_shape)\r\n\r\n/Users/kevinzielnicki/python/virtualenv/stitch/lib/python2.7/site-packages/pymc3/distributions/distribution.pyc in replicate_samples(generator, size, repeats, *args, **kwargs)\r\n    269     n = int(np.prod(repeats))\r\n    270     if n == 1:\r\n--> 271         samples = generator(size=size, *args, **kwargs)\r\n    272     else:\r\n    273         samples = np.array([generator(size=size, *args, **kwargs)\r\n\r\n/Users/kevinzielnicki/python/virtualenv/stitch/lib/python2.7/site-packages/scipy/stats/_distn_infrastructure.pyc in rvs(self, *args, **kwargs)\r\n   2808         \"\"\"\r\n   2809         kwargs['discrete'] = True\r\n-> 2810         return super(rv_discrete, self).rvs(*args, **kwargs)\r\n   2811 \r\n   2812     def pmf(self, k, *args, **kwds):\r\n\r\n/Users/kevinzielnicki/python/virtualenv/stitch/lib/python2.7/site-packages/scipy/stats/_distn_infrastructure.pyc in rvs(self, *args, **kwds)\r\n    952         # by _rvs().\r\n    953         self._size = size\r\n--> 954         vals = self._rvs(*args)\r\n    955 \r\n    956         vals = vals * scale + loc\r\n\r\n/Users/kevinzielnicki/python/virtualenv/stitch/lib/python2.7/site-packages/scipy/stats/_discrete_distns.pyc in _rvs(self, n, p)\r\n     38     \"\"\"\r\n     39     def _rvs(self, n, p):\r\n---> 40         return self._random_state.binomial(n, p, self._size)\r\n     41 \r\n     42     def _argcheck(self, n, p):\r\n\r\nmtrand.pyx in mtrand.RandomState.binomial (numpy/random/mtrand/mtrand.c:31765)()\r\n\r\nTypeError: Cannot cast array data from dtype('float64') to dtype('int64') according to the rule 'safe'\r\n```\r\n\r\n</details>", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2290/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2284", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2284/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2284/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2284/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2284", "id": 234387596, "node_id": "MDU6SXNzdWUyMzQzODc1OTY=", "number": 2284, "title": "AR1 log likelihood", "user": {"login": "eph", "id": 591667, "node_id": "MDQ6VXNlcjU5MTY2Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/591667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eph", "html_url": "https://github.com/eph", "followers_url": "https://api.github.com/users/eph/followers", "following_url": "https://api.github.com/users/eph/following{/other_user}", "gists_url": "https://api.github.com/users/eph/gists{/gist_id}", "starred_url": "https://api.github.com/users/eph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eph/subscriptions", "organizations_url": "https://api.github.com/users/eph/orgs", "repos_url": "https://api.github.com/users/eph/repos", "events_url": "https://api.github.com/users/eph/events{/privacy}", "received_events_url": "https://api.github.com/users/eph/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-08T01:36:09Z", "updated_at": "2017-08-10T11:27:05Z", "closed_at": "2017-08-10T11:27:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think the [log likelihood](https://github.com/pymc-devs/pymc3/blob/255e8fcfb875a498f76c3148ceea135e781f61f9/pymc3/distributions/timeseries.py#L47) calculation for the AR1 model is wrong. \r\n\r\n```python\r\nclass AR1(distribution.Continuous):\r\n\r\n    ...\r\n\r\n    def logp(self, x):\r\n        k = self.k\r\n        tau_e = self.tau_e\r\n\r\n        x_im1 = x[:-1]\r\n        x_i = x[1:]\r\n        boundary = Normal.dist(0., tau=tau_e).logp\r\n\r\n        innov_like = Normal.dist(k * x_im1, tau=tau_e).logp(x_i)\r\n        return boundary(x[0]) + tt.sum(innov_like) + boundary(x[-1])\r\n```\r\nThe last term in the log likelihood should not be there.  \r\n\r\n```python\r\nimport pymc3\r\nfrom scipy.stats import norm\r\n\r\nwith pymc3.Model() as t:\r\n    my_ar1 = pymc3.AR1('y',0,1,shape=2)\r\n\r\nprint('pymc3 log lik     :', t['y'].logp({'y':np.zeros(2,)}) )\r\nprint('scipy log lik(n=2):', norm.logpdf([0,0]).sum() )\r\nprint('scipy log lik(n=3):', norm.logpdf([0,0,0]).sum() )\r\n```\r\nyields\r\n```\r\npymc3 log lik     : -2.756815599614018\r\nscipy log lik(n=2): -1.83787706641\r\nscipy log lik(n=3): -2.75681559961\r\n``` \r\nI will try to write some tests following what's in test_distributions.py.  BTW, this is fantastic software -- thanks for all your efforts.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2284/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2258", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2258/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2258/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2258/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2258", "id": 233144903, "node_id": "MDU6SXNzdWUyMzMxNDQ5MDM=", "number": 2258, "title": "Error computing test_value for transformed dist", "user": {"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-02T10:43:04Z", "updated_at": "2017-06-19T16:00:22Z", "closed_at": "2017-06-19T16:00:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```python\r\nimport pymc3 as pm\r\nwith pm.Model() as model:\r\n    a1 = pm.Uniform('a1', lower=0., upper=1.)\r\n    b1 = pm.Uniform('b1', lower=0., upper=1. - a1)\r\n    pm.sample(1000)\r\n```\r\nraise:\r\n```python\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-1-e7f2b743f1a1>\", line 5, in <module>\r\n    pm.sample(1000)\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/pymc3/sampling.py\", line 273, in sample\r\n    return sample_func(**sample_args)[discard:]\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/pymc3/sampling.py\", line 288, in _sample\r\n    for it, strace in enumerate(sampling):\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/tqdm/_tqdm.py\", line 862, in __iter__\r\n    for obj in iterable:\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/pymc3/sampling.py\", line 367, in _iter_sample\r\n    _update_start_vals(start, model.test_point, model)\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/pymc3/sampling.py\", line 483, in _update_start_vals\r\n    b[tname] = transform_func[0].forward(a[name]).eval()\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/theano/gof/graph.py\", line 516, in eval\r\n    self._fn_cache[inputs] = theano.function(inputs, self)\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/theano/compile/function.py\", line 326, in function\r\n    output_keys=output_keys)\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/theano/compile/pfunc.py\", line 486, in pfunc\r\n    output_keys=output_keys)\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/theano/compile/function_module.py\", line 1807, in orig_function\r\n    output_keys=output_keys).create(\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/theano/compile/function_module.py\", line 1446, in __init__\r\n    accept_inplace)\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/theano/compile/function_module.py\", line 177, in std_fgraph\r\n    update_mapping=update_mapping)\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/theano/gof/fg.py\", line 174, in __init__\r\n    self.__import_r__(output, reason=\"init\")\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/theano/gof/fg.py\", line 345, in __import_r__\r\n    self.__import__(variable.owner, reason=reason)\r\n\r\n  File \"/usr/local/lib/python3.5/dist-packages/theano/gof/fg.py\", line 390, in __import__\r\n    raise MissingInputError(error_msg, variable=r)\r\n\r\nMissingInputError: Input 0 of the graph (indices start from 0), used to compute sigmoid(a1_interval__), was not provided and not given a value. Use the Theano flag exception_verbosity='high', for more information on this error.\r\n```\r\nDiagnostic:\r\nError is from the https://github.com/pymc-devs/pymc3/blob/master/pymc3/sampling.py#L483\r\n\r\nfor example:\r\n```python\r\nfrom pymc3.util import is_transformed_name, get_untransformed_name\r\ndef update_start_vals(a, b, model):\r\n    \"\"\"Update a with b, without overwriting existing keys. Values specified for\r\n    transformed variables on the original scale are also transformed and inserted.\r\n    \"\"\"\r\n    for name in a:\r\n        for tname in b:\r\n            if is_transformed_name(tname) and get_untransformed_name(tname) == name:\r\n                transform_func = [d.transformation for d in model.deterministics if d.name == name]\r\n                if transform_func:\r\n                    b[tname] = transform_func[0].forward(a[name]).eval()\r\n\r\n    a.update({k: v for k, v in b.items() if k not in a})\r\n\r\na = {'a1': .5, 'b1':.7}\r\nb = model.test_point\r\nupdate_start_vals(a, b, model)\r\n```\r\ngives the same error.\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2258/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2207", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2207/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2207/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2207/events", "html_url": "https://github.com/pymc-devs/pymc/pull/2207", "id": 230102370, "node_id": "MDExOlB1bGxSZXF1ZXN0MTIxNTkxODcy", "number": 2207, "title": "convert default to right dtype", "user": {"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-19T22:13:48Z", "updated_at": "2017-05-21T15:32:47Z", "closed_at": "2017-05-21T14:58:51Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/2207", "html_url": "https://github.com/pymc-devs/pymc/pull/2207", "diff_url": "https://github.com/pymc-devs/pymc/pull/2207.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/2207.patch", "merged_at": "2017-05-21T14:58:51Z"}, "body": "Having closer look here, I foud that my today's problems were caused by [this](https://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/distribution.py#L62) line. This method is not aware of distribution dtype. Then [here](https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L815) the returned unchecked value is muptiplied by numpy array. Not sure why it happened so but I got a random variable of float32 dtype with float64 test value. Next `compute_test_value` fails unexpectedly with non informative message. That forces to use float64 every time. It's so annoying, spent a day investigating that bug.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2207/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2200", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2200/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2200/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2200/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2200", "id": 229828587, "node_id": "MDU6SXNzdWUyMjk4Mjg1ODc=", "number": 2200, "title": "random method fails when calling creating dist without context", "user": {"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-18T23:06:06Z", "updated_at": "2018-12-22T12:20:50Z", "closed_at": "2018-12-22T12:20:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "minimal example that fails on master `pm.Exponential.dist(lam=4).random()`\r\nI think that is related to #2103 \r\n```\r\nwith pm.Model():  # good\r\n    pm.Exponential.dist(lam=4).random()\r\npm.Exponential.dist(lam=4).random()  # bad\r\n```\r\nCC @aseyboldt", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2200/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2195", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2195/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2195/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2195/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2195", "id": 229668720, "node_id": "MDU6SXNzdWUyMjk2Njg3MjA=", "number": 2195, "title": "Loading from a backend", "user": {"login": "Kieran108", "id": 28782603, "node_id": "MDQ6VXNlcjI4NzgyNjAz", "avatar_url": "https://avatars.githubusercontent.com/u/28782603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kieran108", "html_url": "https://github.com/Kieran108", "followers_url": "https://api.github.com/users/Kieran108/followers", "following_url": "https://api.github.com/users/Kieran108/following{/other_user}", "gists_url": "https://api.github.com/users/Kieran108/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kieran108/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kieran108/subscriptions", "organizations_url": "https://api.github.com/users/Kieran108/orgs", "repos_url": "https://api.github.com/users/Kieran108/repos", "events_url": "https://api.github.com/users/Kieran108/events{/privacy}", "received_events_url": "https://api.github.com/users/Kieran108/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-05-18T13:20:25Z", "updated_at": "2017-05-19T14:06:48Z", "closed_at": "2017-05-18T13:33:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am new to pymc3, and have an issue loading a saved trace. I have a simple model with two variables, of the form:\r\n\r\n```\r\ntheta = pm.Uniform('theta',0.0,1.0) \r\nsigma = pm.HalfNormal('sigma',sd=1)\r\n```\r\n\r\nI run the model, and save the trace using the Text backend:\r\n```\r\ndb = pm.backends.Text('trace')\r\ntrace = pm.sample(draws=numSamples, step=step, start=start, trace=db)\r\n```\r\n\r\nI then have a data file with 4 columns, theta_interval_, sigma_log_, theta, sigma. When I then try to load the trace, I get a MultiTrace object with 0 variables:\r\n```\r\nbasic_model = pm.Model()\r\nwith basic_model: \r\n     trace = pm.backends.text.load('trace')\r\n     print trace\r\n```\r\n\r\nResults in:\r\n`<MultiTrace: 1 chains, 1348 iterations, 0 variables>`\r\n\r\nI cannot use this MultiTrace object, if I simply try to plot the data, I get \r\n```\r\npm.forestplot(trace)\r\n```\r\n`ValueError: zero-size array to reduction operation maximum which has no identity`\r\n\r\nI also cannot extract the variables from the loaded trace, even though when I view the data, I see it has saved correctly. Is there an issue with loading a text backend, or is there a problem with how I am trying to load it? I have also tried using the SQL backend with similar results. \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2195/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2185", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2185/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2185/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2185/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2185", "id": 228710106, "node_id": "MDU6SXNzdWUyMjg3MTAxMDY=", "number": 2185, "title": "Default `test_point` for `DiscreteUniform` outside of support for negative lower", "user": {"login": "fbnrst", "id": 7300030, "node_id": "MDQ6VXNlcjczMDAwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/7300030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fbnrst", "html_url": "https://github.com/fbnrst", "followers_url": "https://api.github.com/users/fbnrst/followers", "following_url": "https://api.github.com/users/fbnrst/following{/other_user}", "gists_url": "https://api.github.com/users/fbnrst/gists{/gist_id}", "starred_url": "https://api.github.com/users/fbnrst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fbnrst/subscriptions", "organizations_url": "https://api.github.com/users/fbnrst/orgs", "repos_url": "https://api.github.com/users/fbnrst/repos", "events_url": "https://api.github.com/users/fbnrst/events{/privacy}", "received_events_url": "https://api.github.com/users/fbnrst/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-15T13:12:17Z", "updated_at": "2017-06-02T12:20:21Z", "closed_at": "2017-06-02T12:20:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "If the lower bound of a `DiscreteUniform` is negative, the default test_point is outside of the support:\r\n\r\nIn:\r\n```python\r\nimport pymc3 as pm\r\n\r\nmodel1 = pm.Model()\r\nwith model1:\r\n    a = pm.DiscreteUniform('a', lower = 0, upper = 10)\r\nprint('test_point model1: {}'.format(model1.test_point))\r\n\r\nmodel2 = pm.Model()\r\nwith model2:\r\n    b = pm.DiscreteUniform('a', lower = -10, upper = 0)\r\nprint('test_point model2: {}'.format(model2.test_point))\r\n```\r\n\r\nOut:\r\n```python\r\ntest_point model1: {'a': array(5)}\r\ntest_point model2: {'a': array(5)}\r\n```\r\n\r\nI would expect `-5` for `model2`. Occurs with `pymc3.__version == '3.1rc3'`.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2185/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2112", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2112/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2112/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2112/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2112", "id": 225844121, "node_id": "MDU6SXNzdWUyMjU4NDQxMjE=", "number": 2112, "title": "Theano BUG when setting cost_part_grad_scale to shared and n_obj_mc>1", "user": {"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-02T22:51:14Z", "updated_at": "2018-12-22T12:20:49Z", "closed_at": "2018-12-22T12:20:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I've found one more theano bug that is hard to reproduce\r\nsetting cost_part_grad_scale to shared and n_obj_mc>1 leads to strange error.\r\nI have no idea about why it happens. Shared variable with missing input\r\n\r\n```python\r\npymc3/tests/test_variational_inference.py:49 (TestMeanField.test_aevb)\r\nself = <pymc3.tests.test_variational_inference.TestMeanField object at 0x11679e470>\r\n\r\n    def _test_aevb(self):\r\n        # add to inference that supports aevb\r\n        with pm.Model() as model:\r\n            x = pm.Normal('x')\r\n            pm.Normal('y', x)\r\n        x = model.x\r\n        y = model.y\r\n        mu = theano.shared(x.init_value) * 2\r\n        rho = theano.shared(np.zeros_like(x.init_value))\r\n        with model:\r\n            inference = self.inference(local_rv={x: (mu, rho)})\r\n>           approx = inference.fit(3, obj_n_mc=2, obj_optimizer=self.optimizer)\r\n\r\npymc3/tests/test_variational_inference.py:61: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\npymc3/variational/inference.py:115: in fit\r\n    step_func = self.objective.step_function(score=score, **kwargs)\r\npymc3/memoize.py:16: in memoizer\r\n    cache[key] = obj(*args, **kwargs)\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/configparser.py:117: in res\r\n    return f(*args, **kwargs)\r\npymc3/variational/opvi.py:228: in step_function\r\n    more_replacements=more_replacements)\r\npymc3/variational/opvi.py:157: in updates\r\n    more_replacements=more_replacements\r\npymc3/variational/opvi.py:172: in add_obj_updates\r\n    updates.update(obj_optimizer(obj_target, self.obj_params + more_obj_params))\r\npymc3/variational/updates.py:620: in adam\r\n    all_grads = get_or_compute_grads(loss_or_grads, params)\r\npymc3/variational/updates.py:160: in get_or_compute_grads\r\n    return theano.grad(loss_or_grads, params)\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:555: in grad\r\n    grad_dict, wrt, cost_name)\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:1317: in _populate_grad_dict\r\n    rval = [access_grad_cache(elem) for elem in wrt]\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:1317: in <listcomp>\r\n    rval = [access_grad_cache(elem) for elem in wrt]\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:1272: in access_grad_cache\r\n    term = access_term_cache(node)[idx]\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:967: in access_term_cache\r\n    output_grads = [access_grad_cache(var) for var in node.outputs]\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:967: in <listcomp>\r\n    output_grads = [access_grad_cache(var) for var in node.outputs]\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:1272: in access_grad_cache\r\n    term = access_term_cache(node)[idx]\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:967: in access_term_cache\r\n    output_grads = [access_grad_cache(var) for var in node.outputs]\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:967: in <listcomp>\r\n    output_grads = [access_grad_cache(var) for var in node.outputs]\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:1272: in access_grad_cache\r\n    term = access_term_cache(node)[idx]\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:967: in access_term_cache\r\n    output_grads = [access_grad_cache(var) for var in node.outputs]\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:967: in <listcomp>\r\n    output_grads = [access_grad_cache(var) for var in node.outputs]\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:1272: in access_grad_cache\r\n    term = access_term_cache(node)[idx]\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:967: in access_term_cache\r\n    output_grads = [access_grad_cache(var) for var in node.outputs]\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:967: in <listcomp>\r\n    output_grads = [access_grad_cache(var) for var in node.outputs]\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:1272: in access_grad_cache\r\n    term = access_term_cache(node)[idx]\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:967: in access_term_cache\r\n    output_grads = [access_grad_cache(var) for var in node.outputs]\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:967: in <listcomp>\r\n    output_grads = [access_grad_cache(var) for var in node.outputs]\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:1272: in access_grad_cache\r\n    term = access_term_cache(node)[idx]\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gradient.py:1108: in access_term_cache\r\n    new_output_grads)\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/scan_module/scan_op.py:2554: in L_op\r\n    local_op = Scan(inner_gfn_ins, inner_gfn_outs, info)\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/scan_module/scan_op.py:213: in __init__\r\n    gof.FunctionGraph(tmp_in, tmp_out, clone=False)\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gof/fg.py:180: in __init__\r\n    self.__import_r__(output, reason=\"init\")\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gof/fg.py:351: in __import_r__\r\n    self.__import__(variable.owner, reason=reason)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = [Elemwise{add,no_inplace}(Elemwise{mul,no_inplace}(InplaceDimShuffle{x}(<TensorType(float64, scalar)>), Elemwise{mul}(...(float64, vector)>, InplaceDimShuffle{x}(TensorConstant{0.0})), Reshape{1}(*5, Shape(*14)), Constant{1}, Constant{2}))]\r\napply_node = Elemwise{add,no_inplace}(Elemwise{mul,no_inplace}.0, <TensorType(float64, vector)>)\r\ncheck = True, reason = 'init'\r\n\r\n    def __import__(self, apply_node, check=True, reason=None):\r\n        \"\"\"\r\n            Given an apply_node, recursively search from this node to know graph,\r\n            and then add all unknown variables and apply_nodes to this graph.\r\n            \"\"\"\r\n        node = apply_node\r\n    \r\n        # We import the nodes in topological order. We only are interested\r\n        # in new nodes, so we use all variables we know of as if they were the input set.\r\n        # (the functions in the graph module only use the input set to\r\n        # know where to stop going down)\r\n        new_nodes = graph.io_toposort(self.variables, apply_node.outputs)\r\n    \r\n        if check:\r\n            for node in new_nodes:\r\n                if hasattr(node, 'fgraph') and node.fgraph is not self:\r\n                    raise Exception(\"%s is already owned by another fgraph\" % node)\r\n                for r in node.inputs:\r\n                    if hasattr(r, 'fgraph') and r.fgraph is not self:\r\n                        raise Exception(\"%s is already owned by another fgraph\" % r)\r\n                    if (r.owner is None and\r\n                            not isinstance(r, graph.Constant) and\r\n                            r not in self.inputs):\r\n                        # Standard error message\r\n                        error_msg = (\"Input %d of the graph (indices start \"\r\n                                     \"from 0), used to compute %s, was not \"\r\n                                     \"provided and not given a value. Use the \"\r\n                                     \"Theano flag exception_verbosity='high', \"\r\n                                     \"for more information on this error.\"\r\n                                     % (node.inputs.index(r), str(node)))\r\n                        error_msg += get_variable_trace_string(r)\r\n>                       raise MissingInputError(error_msg, variable=r)\r\nE                       theano.gof.fg.MissingInputError: Input 0 of the graph (indices start from 0), used to compute InplaceDimShuffle{x}(<TensorType(float64, scalar)>), was not provided and not given a value. Use the Theano flag exception_verbosity='high', for more information on this error. \r\nE                       Backtrace when that variable is created:\r\nE                       \r\nE                         File \"/Users/ferres/Envs/pymc3-py35/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 248, in _wrapped_call\r\nE                           call_outcome = _CallOutcome(func)\r\nE                         File \"/Users/ferres/Envs/pymc3-py35/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 265, in __init__\r\nE                           self.result = func()\r\nE                         File \"/Users/ferres/Envs/pymc3-py35/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 614, in execute\r\nE                           res = hook_impl.function(*args)\r\nE                         File \"/Users/ferres/Envs/pymc3-py35/lib/python3.5/site-packages/_pytest/python.py\", line 154, in pytest_pyfunc_call\r\nE                           testfunction(**testargs)\r\nE                         File \"/Users/ferres/dev/pymc3/pymc3/tests/test_variational_inference.py\", line 60, in _test_aevb\r\nE                           inference = self.inference(local_rv={x: (mu, rho)})\r\nE                         File \"/Users/ferres/dev/pymc3/pymc3/variational/inference.py\", line 335, in __init__\r\nE                           seed=seed)\r\nE                         File \"/Users/ferres/dev/pymc3/pymc3/variational/inference.py\", line 51, in __init__\r\nE                           model=model, **kwargs)\r\nE                         File \"/Users/ferres/dev/pymc3/pymc3/variational/opvi.py\", line 532, in __init__\r\nE                           self.cost_part_grad_scale = theano.shared(pm.floatX(cost_part_grad_scale))\r\nE                       \r\nE                       \r\nE                       Backtrace when the variable is created:\r\nE                         File \"/Users/ferres/Envs/pymc3-py35/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 248, in _wrapped_call\r\nE                           call_outcome = _CallOutcome(func)\r\nE                         File \"/Users/ferres/Envs/pymc3-py35/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 265, in __init__\r\nE                           self.result = func()\r\nE                         File \"/Users/ferres/Envs/pymc3-py35/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 614, in execute\r\nE                           res = hook_impl.function(*args)\r\nE                         File \"/Users/ferres/Envs/pymc3-py35/lib/python3.5/site-packages/_pytest/python.py\", line 154, in pytest_pyfunc_call\r\nE                           testfunction(**testargs)\r\nE                         File \"/Users/ferres/dev/pymc3/pymc3/tests/test_variational_inference.py\", line 60, in _test_aevb\r\nE                           inference = self.inference(local_rv={x: (mu, rho)})\r\nE                         File \"/Users/ferres/dev/pymc3/pymc3/variational/inference.py\", line 335, in __init__\r\nE                           seed=seed)\r\nE                         File \"/Users/ferres/dev/pymc3/pymc3/variational/inference.py\", line 51, in __init__\r\nE                           model=model, **kwargs)\r\nE                         File \"/Users/ferres/dev/pymc3/pymc3/variational/opvi.py\", line 532, in __init__\r\nE                           self.cost_part_grad_scale = theano.shared(pm.floatX(cost_part_grad_scale))\r\n\r\n../../Envs/pymc3-py35/lib/python3.5/site-packages/theano/gof/fg.py:397: MissingInputError\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2112/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2095", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2095/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2095/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2095/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2095", "id": 225338936, "node_id": "MDU6SXNzdWUyMjUzMzg5MzY=", "number": 2095, "title": "AttributeError: module 'pymc3' has no attribute 'math'", "user": {"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-30T16:48:12Z", "updated_at": "2017-05-03T08:10:37Z", "closed_at": "2017-05-02T22:47:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I was porting `lda-advi-aevb` to  OPVI. and encountered the following issue\r\n\r\n```python\r\n>>> from pymc3 import math as pmmath\r\n>>> pmmath\r\n<module 'pymc3.math' from '/home/ferres/pymc3/pymc3/math.py'>\r\n>>> import pymc3 as pm\r\n>>> pm.math\r\nAttributeError: module 'pymc3' has no attribute 'math'\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2095/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2033", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2033/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2033/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2033/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2033", "id": 221812696, "node_id": "MDU6SXNzdWUyMjE4MTI2OTY=", "number": 2033, "title": "GPU support - examples", "user": {"login": "springcoil", "id": 983944, "node_id": "MDQ6VXNlcjk4Mzk0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/983944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/springcoil", "html_url": "https://github.com/springcoil", "followers_url": "https://api.github.com/users/springcoil/followers", "following_url": "https://api.github.com/users/springcoil/following{/other_user}", "gists_url": "https://api.github.com/users/springcoil/gists{/gist_id}", "starred_url": "https://api.github.com/users/springcoil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/springcoil/subscriptions", "organizations_url": "https://api.github.com/users/springcoil/orgs", "repos_url": "https://api.github.com/users/springcoil/repos", "events_url": "https://api.github.com/users/springcoil/events{/privacy}", "received_events_url": "https://api.github.com/users/springcoil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 25, "created_at": "2017-04-14T13:49:59Z", "updated_at": "2018-12-22T12:18:21Z", "closed_at": "2018-12-22T12:18:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I ran the latest master `Using gpu device 0: Tesla K80 (CNMeM is disabled, cuDNN 5110)`  (on AWS p2.xlarge).\r\n\r\nI used `ami-e904398f` (on a spot instance) and installed conda and then installed pymc3/ theano to latest master. \r\n\r\nI ran a few experiments after installing the latest master. I'll document here what I see.\r\n\r\nI've used the examples folder for these benchmarks. A tick confirms it runs properly\r\n\r\n- [x] arma_example\r\n- [x] baseball \r\n- [ ] lasso_missing\r\n- [ ] lightspeed_example\r\n- [x] censored_data\r\n- [x] gelman_schools\r\n- [x] GHME_2013 \r\n- [ ] custom_dists\r\n- [ ] disaster model arbitrary deterministic\r\n- [ ] edward_beta_bernoulli \r\n- [ ] factor_potential \r\n- [x] gelman_bioassay \r\n- [ ] LKJ Correlation\r\n- [ ] simple test", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2033/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2033/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2032", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2032/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2032/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2032/events", "html_url": "https://github.com/pymc-devs/pymc/issues/2032", "id": 221810520, "node_id": "MDU6SXNzdWUyMjE4MTA1MjA=", "number": 2032, "title": "Error log with Baseball example on GPU", "user": {"login": "springcoil", "id": 983944, "node_id": "MDQ6VXNlcjk4Mzk0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/983944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/springcoil", "html_url": "https://github.com/springcoil", "followers_url": "https://api.github.com/users/springcoil/followers", "following_url": "https://api.github.com/users/springcoil/following{/other_user}", "gists_url": "https://api.github.com/users/springcoil/gists{/gist_id}", "starred_url": "https://api.github.com/users/springcoil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/springcoil/subscriptions", "organizations_url": "https://api.github.com/users/springcoil/orgs", "repos_url": "https://api.github.com/users/springcoil/repos", "events_url": "https://api.github.com/users/springcoil/events{/privacy}", "received_events_url": "https://api.github.com/users/springcoil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-14T13:36:27Z", "updated_at": "2017-04-15T12:26:28Z", "closed_at": "2017-04-14T21:56:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think this is probably not surprising. \r\n\r\nBut I get \r\n```  File \"/home/ubuntu/miniconda3/envs/bunnies/lib/python3.5/site-packages/pymc3/model.py\", line 998, in __init__\r\n    transformed_name, transform.apply(distribution), total_size=total_size)\r\n  File \"/home/ubuntu/miniconda3/envs/bunnies/lib/python3.5/site-packages/pymc3/model.py\", line 508, in Var\r\n    total_size=total_size, model=self)\r\n  File \"/home/ubuntu/miniconda3/envs/bunnies/lib/python3.5/site-packages/pymc3/model.py\", line 800, in __init__\r\n    self.logp_elemwiset = distribution.logp(self)\r\n  File \"/home/ubuntu/miniconda3/envs/bunnies/lib/python3.5/site-packages/pymc3/distributions/transforms.py\", line 74, in logp\r\n    return (self.dist.logp(self.transform_used.backward(x)) +\r\n  File \"/home/ubuntu/miniconda3/envs/bunnies/lib/python3.5/site-packages/pymc3/distributions/transforms.py\", line 145, in backward\r\n    r = tt.exp(x) + a\r\n  File \"/home/ubuntu/miniconda3/envs/bunnies/lib/python3.5/site-packages/theano/gof/op.py\", line 625, in __call__\r\n    storage_map[ins] = [self._get_test_value(ins)]\r\n  File \"/home/ubuntu/miniconda3/envs/bunnies/lib/python3.5/site-packages/theano/gof/op.py\", line 562, in _get_test_value\r\n    ret = v.type.filter(v.tag.test_value)\r\n  File \"/home/ubuntu/miniconda3/envs/bunnies/lib/python3.5/site-packages/theano/tensor/type.py\", line 173, in filter\r\n    raise TypeError(err_msg, data)\r\nTypeError: For compute_test_value, one input test value does not have the requested type.\r\n\r\nThe error when converting the test value to that variable type:\r\nTensorType(float32, scalar) cannot store accurately value 0.693043224656, it would be represented as 0.6930432319641113. If you do not mind this precision loss, you can: 1) explicitly convert your data to a numpy array of dtype float32, or 2) set \"allow_input_downcast=True\" when calling \"function\".```\r\nWhen running the baseball example on a gpu. I'll run a few more in the examples folders just to see what they say. ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/2032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/2032/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1967", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1967/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1967/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1967/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1967", "id": 217910757, "node_id": "MDU6SXNzdWUyMTc5MTA3NTc=", "number": 1967, "title": "Trouble installing at 3.1rc3", "user": {"login": "skatenerd", "id": 880217, "node_id": "MDQ6VXNlcjg4MDIxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/880217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skatenerd", "html_url": "https://github.com/skatenerd", "followers_url": "https://api.github.com/users/skatenerd/followers", "following_url": "https://api.github.com/users/skatenerd/following{/other_user}", "gists_url": "https://api.github.com/users/skatenerd/gists{/gist_id}", "starred_url": "https://api.github.com/users/skatenerd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skatenerd/subscriptions", "organizations_url": "https://api.github.com/users/skatenerd/orgs", "repos_url": "https://api.github.com/users/skatenerd/repos", "events_url": "https://api.github.com/users/skatenerd/events{/privacy}", "received_events_url": "https://api.github.com/users/skatenerd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-03-29T15:15:00Z", "updated_at": "2017-04-17T14:28:32Z", "closed_at": "2017-04-15T13:10:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to `pip install` (on Linux) at `3.1rc3`, I see the following crash:\r\n\r\n```\r\n    copying pymc3/examples/data/srrs2.dat -> build/lib.linux-x86_64-2.7/pymc3/examples/data\r\n    error: can't copy 'pymc3/examples/data/pmf': doesn't exist or not a regular file\r\n\r\n    ----------------------------------------\r\n  Rolling back uninstall of pymc3\r\nCommand \"/usr/bin/python -u -c \"import setuptools, tokenize;__file__='/tmp/pip-o6ELnS-build/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-2ix0qe-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-o6ELnS-build/\r\n```\r\n\r\nI am guessing that this failure was introduced with [this change](https://github.com/pymc-devs/pymc3/commit/1210ed6ab3236c3caeed03a8023087501cccd7a6#diff-2eeaed663bd0d25b7e608891384b7298R52).  I think that `/pymc3/examples/data/pmf` is a directory, and `setuptools` expects all of the glob-matches to be flat files (rather than directories).  There is some discussion of the issue in [this SO post](http://stackoverflow.com/questions/3712033/python-distutils-error-directory-doesnt-exist-or-not-a-regular-file).", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1967/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1965", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1965/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1965/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1965/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1965", "id": 217852364, "node_id": "MDU6SXNzdWUyMTc4NTIzNjQ=", "number": 1965, "title": "Double cloning fails for generator", "user": {"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-29T11:58:30Z", "updated_at": "2018-12-22T12:18:21Z", "closed_at": "2018-12-22T12:18:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Recently I found a bug while using pm.generator\r\nIt appears that double stage cloning is not available for it\r\n```python\r\ndef test_gen_double_cloning_with_shape_change(self):\r\n    dim = 10\r\n    data = np.random.uniform(size=(1000, dim))\r\n    shared_1000 = theano.shared(data)\r\n    constant_50 = tt.constant(data[:50])\r\n    minibatches_50 = DataSampler(data, batchsize=50)\r\n    gen_50 = generator(minibatches_50)\r\n    stream = tt_rng().normal(size=(dim, ))\r\n    stream_in = tt.vector()\r\n    stream_in.tag.test_value = stream.eval()\r\n    const_modif = constant_50.dot(stream_in)\r\n    const_modif_1_50 = theano.clone(const_modif, {stream_in: stream})\r\n    const_modif_2_1000 = theano.clone(const_modif_1_50, {constant_50: shared_1000})\r\n    assert const_modif_1_50.eval().shape == (50,)\r\n    assert const_modif_2_1000.eval().shape == (1000,)\r\n    gen_modif = gen_50.dot(stream_in)\r\n    gen_modif_1_50 = theano.clone(gen_modif, {stream_in: stream})\r\n    gen_modif_2_1000 = theano.clone(gen_modif_1_50, {gen_50: shared_1000})\r\n    assert gen_modif_1_50.eval().shape == (50,)\r\n    assert gen_modif_2_1000.eval().shape == (1000,) # fails (50,)\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1965/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1946", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1946/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1946/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1946/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1946", "id": 216633199, "node_id": "MDU6SXNzdWUyMTY2MzMxOTk=", "number": 1946, "title": "figsize is not interpreted correctly by plot_posterior", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-03-24T03:15:10Z", "updated_at": "2017-08-24T09:12:54Z", "closed_at": "2017-08-24T09:12:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When passing a `figsize` keyword argument to `plot_posterior` the resulting plot is not of the passed dimensions. For example:\r\n\r\n     plot_posterior(samples, varnames=['\u03bc'], ref_val=1, figsize=(10,8));\r\n\r\nresults in:\r\n\r\n![unknown](https://cloud.githubusercontent.com/assets/81476/24279141/04afea48-1016-11e7-87da-28c4effaa207.png)\r\n\r\nThe figure is expected to be wider than tall. \r\n\r\nRunning on master with Anaconda Python 3.6 and matplotlib 2.0.0.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1946/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1906", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1906/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1906/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1906/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1906", "id": 214524749, "node_id": "MDU6SXNzdWUyMTQ1MjQ3NDk=", "number": 1906, "title": "Posterior predictive sampling broken for thinned traces", "user": {"login": "AustinRochford", "id": 3465592, "node_id": "MDQ6VXNlcjM0NjU1OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3465592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AustinRochford", "html_url": "https://github.com/AustinRochford", "followers_url": "https://api.github.com/users/AustinRochford/followers", "following_url": "https://api.github.com/users/AustinRochford/following{/other_user}", "gists_url": "https://api.github.com/users/AustinRochford/gists{/gist_id}", "starred_url": "https://api.github.com/users/AustinRochford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AustinRochford/subscriptions", "organizations_url": "https://api.github.com/users/AustinRochford/orgs", "repos_url": "https://api.github.com/users/AustinRochford/repos", "events_url": "https://api.github.com/users/AustinRochford/events{/privacy}", "received_events_url": "https://api.github.com/users/AustinRochford/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-15T21:03:04Z", "updated_at": "2017-03-17T19:30:02Z", "closed_at": "2017-03-17T19:30:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See [this notebook](https://gist.github.com/AustinRochford/463f640b3102e9da61d10132437df0fa) for a very simple example.  I believe the issue is [here](https://github.com/pymc-devs/pymc3/blob/master/pymc3/backends/ndarray.py#L127) as it appears elsewhere in that file that `draw_idx` is only updated when the trace is sliced with a start and stop, not a step size.\r\n\r\n@aseyboldt the last change to that line appears to have happened in #1687, do you have any thoughts on what the best fix is to support thinning here?", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1906/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1906/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1897", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1897/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1897/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1897/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1897", "id": 214020085, "node_id": "MDU6SXNzdWUyMTQwMjAwODU=", "number": 1897, "title": "Regression test fail: sample_ppc 'size' param seems to no longer work correctly", "user": {"login": "jonsedar", "id": 708325, "node_id": "MDQ6VXNlcjcwODMyNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/708325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonsedar", "html_url": "https://github.com/jonsedar", "followers_url": "https://api.github.com/users/jonsedar/followers", "following_url": "https://api.github.com/users/jonsedar/following{/other_user}", "gists_url": "https://api.github.com/users/jonsedar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonsedar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonsedar/subscriptions", "organizations_url": "https://api.github.com/users/jonsedar/orgs", "repos_url": "https://api.github.com/users/jonsedar/repos", "events_url": "https://api.github.com/users/jonsedar/events{/privacy}", "received_events_url": "https://api.github.com/users/jonsedar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-03-14T09:58:51Z", "updated_at": "2018-12-22T12:18:20Z", "closed_at": "2018-12-22T12:18:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using `sample_ppc` with `size = n` (i.e. not `None`) leads me to a broadcasting error. Possibly related to issue #1529\r\n\r\ne.g. with 466 datapoints, `sample_ppc(trained_model, samples=100, size=10)` leads to \r\n`ValueError: cannot reshape array of size 4660 into shape (10,)`\r\n\r\ni.e. each of the 466 datapoints has lead to a new PPC distribution, from which 10 draws are taken. I'll take a dig around, it seems to be incorrect expectation of the shapes in:\r\n\r\n```python\r\n# distributions/distribution.py\r\n\r\ndef reshape_sampled(sampled, size, dist_shape):\r\n    dist_shape = infer_shape(dist_shape)\r\n    repeat_shape = infer_shape(size)\r\n\r\n    if np.size(sampled) == 1 or repeat_shape or dist_shape:\r\n        return np.reshape(sampled, repeat_shape + dist_shape)    ## <- this line\r\n    else:\r\n        return sampled\r\n\r\n\r\n### this is having been reached via:\r\n\r\n# distributions/distribution.py\r\ndef generate_samples(generator, *args, **kwargs):\r\n...\r\nreturn reshape_sampled(samples, size, dist_shape)  ## <- this line\r\n\r\n```\r\n\r\nThere's a lot of reshaping gymnastics going on here, and I'm not sure why... I'll see if I can figure out the logic and make a fix", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1897/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1895", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1895/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1895/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1895/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1895", "id": 213918280, "node_id": "MDU6SXNzdWUyMTM5MTgyODA=", "number": 1895, "title": "Formatting - Notebook error - Diagnosing Biased Inference with Divergences", "user": {"login": "springcoil", "id": 983944, "node_id": "MDQ6VXNlcjk4Mzk0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/983944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/springcoil", "html_url": "https://github.com/springcoil", "followers_url": "https://api.github.com/users/springcoil/followers", "following_url": "https://api.github.com/users/springcoil/following{/other_user}", "gists_url": "https://api.github.com/users/springcoil/gists{/gist_id}", "starred_url": "https://api.github.com/users/springcoil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/springcoil/subscriptions", "organizations_url": "https://api.github.com/users/springcoil/orgs", "repos_url": "https://api.github.com/users/springcoil/repos", "events_url": "https://api.github.com/users/springcoil/events{/privacy}", "received_events_url": "https://api.github.com/users/springcoil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 86794, "node_id": "MDU6TGFiZWw4Njc5NA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/docs", "name": "docs", "color": "5319e7", "default": false, "description": null}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-13T22:40:00Z", "updated_at": "2017-03-16T08:57:27Z", "closed_at": "2017-03-16T08:57:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi I notice a bit of formatting error - http://pymc-devs.github.io/pymc3/notebooks/Diagnosing_biased_Inference_with_Divergences.html\r\n\r\nAt ```\ud835\udd3c\u03c0[f]\u2248f\u0302 N=1N+1\u2211n=0Nf(qn).Theseestimators,however,areguaranteedtobeaccurateonly```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1895/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1886", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1886/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1886/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1886/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1886", "id": 213099573, "node_id": "MDU6SXNzdWUyMTMwOTk1NzM=", "number": 1886, "title": "The GLM: Logistic Regression example has problems", "user": {"login": "MarkDunne", "id": 1024060, "node_id": "MDQ6VXNlcjEwMjQwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/1024060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkDunne", "html_url": "https://github.com/MarkDunne", "followers_url": "https://api.github.com/users/MarkDunne/followers", "following_url": "https://api.github.com/users/MarkDunne/following{/other_user}", "gists_url": "https://api.github.com/users/MarkDunne/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkDunne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkDunne/subscriptions", "organizations_url": "https://api.github.com/users/MarkDunne/orgs", "repos_url": "https://api.github.com/users/MarkDunne/repos", "events_url": "https://api.github.com/users/MarkDunne/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkDunne/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 86794, "node_id": "MDU6TGFiZWw4Njc5NA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/docs", "name": "docs", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-09T16:55:25Z", "updated_at": "2017-06-15T15:09:59Z", "closed_at": "2017-06-15T15:09:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "The example here https://pymc-devs.github.io/pymc3/notebooks/GLM-logistic.html has a couple of problems.\r\n\r\nIt starts off ok, but from the 'Some Results' section down, the graphics are all wrong. The beta_age/beta_education graph shows that both are estimated at exactly 0.The next 'Posterior Predictive' graph, and the one directly after it are also weird and probably incorrect.\r\n\r\nAlso looks like there is a bunch of issues with the code samples at the end of the example ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1886/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1886/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1882", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1882/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1882/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1882/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1882", "id": 212719807, "node_id": "MDU6SXNzdWUyMTI3MTk4MDc=", "number": 1882, "title": "Exponential mixture models gives theano index error", "user": {"login": "whitead", "id": 908389, "node_id": "MDQ6VXNlcjkwODM4OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/908389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whitead", "html_url": "https://github.com/whitead", "followers_url": "https://api.github.com/users/whitead/followers", "following_url": "https://api.github.com/users/whitead/following{/other_user}", "gists_url": "https://api.github.com/users/whitead/gists{/gist_id}", "starred_url": "https://api.github.com/users/whitead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whitead/subscriptions", "organizations_url": "https://api.github.com/users/whitead/orgs", "repos_url": "https://api.github.com/users/whitead/repos", "events_url": "https://api.github.com/users/whitead/events{/privacy}", "received_events_url": "https://api.github.com/users/whitead/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "AustinRochford", "id": 3465592, "node_id": "MDQ6VXNlcjM0NjU1OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3465592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AustinRochford", "html_url": "https://github.com/AustinRochford", "followers_url": "https://api.github.com/users/AustinRochford/followers", "following_url": "https://api.github.com/users/AustinRochford/following{/other_user}", "gists_url": "https://api.github.com/users/AustinRochford/gists{/gist_id}", "starred_url": "https://api.github.com/users/AustinRochford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AustinRochford/subscriptions", "organizations_url": "https://api.github.com/users/AustinRochford/orgs", "repos_url": "https://api.github.com/users/AustinRochford/repos", "events_url": "https://api.github.com/users/AustinRochford/events{/privacy}", "received_events_url": "https://api.github.com/users/AustinRochford/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "AustinRochford", "id": 3465592, "node_id": "MDQ6VXNlcjM0NjU1OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3465592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AustinRochford", "html_url": "https://github.com/AustinRochford", "followers_url": "https://api.github.com/users/AustinRochford/followers", "following_url": "https://api.github.com/users/AustinRochford/following{/other_user}", "gists_url": "https://api.github.com/users/AustinRochford/gists{/gist_id}", "starred_url": "https://api.github.com/users/AustinRochford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AustinRochford/subscriptions", "organizations_url": "https://api.github.com/users/AustinRochford/orgs", "repos_url": "https://api.github.com/users/AustinRochford/repos", "events_url": "https://api.github.com/users/AustinRochford/events{/privacy}", "received_events_url": "https://api.github.com/users/AustinRochford/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-03-08T12:23:04Z", "updated_at": "2017-03-08T13:44:28Z", "closed_at": "2017-03-08T13:44:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if it's reasonable to use an exponential mixture model, but I'm trying to cluster arrival time processes and thought it might be a good model. If I try a simple exponential model like this:\r\n\r\n```python\r\nimport pymc3 as pm\r\nimport numpy as np\r\n\r\ntime = np.array([4,5,6,7,4])\r\nwith pm.Model() as pprocess:\r\n    \r\n    #clusters\r\n    cluster_number = 2\r\n    w = pm.Dirichlet('w', np.ones(cluster_number))\r\n    \r\n    #arrival time model\r\n    t = pm.Lognormal('t', 100, 50, shape=cluster_number)\r\n    t_obs = pm.Mixture('t_obs', w, pm.Exponential.dist(t), observed=time)\r\n```\r\n\r\nI get the following error:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-2-1724aa75761e> in <module>()\r\n     11     #arrival time model\r\n     12     t = pm.Lognormal('t', 100, 50, shape=cluster_number)\r\n---> 13     t_obs = pm.Mixture('t_obs', w, pm.Exponential.dist(t), observed=time)\r\n     14 \r\n\r\n/opt/conda/lib/python3.5/site-packages/pymc3/distributions/distribution.py in __new__(cls, name, *args, **kwargs)\r\n     28         if isinstance(name, string_types):\r\n     29             data = kwargs.pop('observed', None)\r\n---> 30             dist = cls.dist(*args, **kwargs)\r\n     31             return model.Var(name, dist, data)\r\n     32         else:\r\n\r\n/opt/conda/lib/python3.5/site-packages/pymc3/distributions/distribution.py in dist(cls, *args, **kwargs)\r\n     39     def dist(cls, *args, **kwargs):\r\n     40         dist = object.__new__(cls)\r\n---> 41         dist.__init__(*args, **kwargs)\r\n     42         return dist\r\n     43 \r\n\r\n/opt/conda/lib/python3.5/site-packages/pymc3/distributions/mixture.py in __init__(self, w, comp_dists, *args, **kwargs)\r\n     63             comp_modes = self._comp_modes()\r\n     64             comp_mode_logps = self.logp(comp_modes)\r\n---> 65             self.mode = comp_modes[tt.argmax(w * comp_mode_logps, axis=-1)]\r\n     66 \r\n     67             if 'mode' not in defaults:\r\n\r\n/opt/conda/lib/python3.5/site-packages/theano/tensor/var.py in __getitem__(self, args)\r\n    530                     self, *theano.tensor.subtensor.Subtensor.collapse(\r\n    531                         args,\r\n--> 532                         lambda entry: isinstance(entry, Variable)))\r\n    533 \r\n    534     def take(self, indices, axis=None, mode='raise'):\r\n\r\n/opt/conda/lib/python3.5/site-packages/theano/gof/op.py in __call__(self, *inputs, **kwargs)\r\n    609         \"\"\"\r\n    610         return_list = kwargs.pop('return_list', False)\r\n--> 611         node = self.make_node(*inputs, **kwargs)\r\n    612 \r\n    613         if config.compute_test_value != 'off':\r\n\r\n/opt/conda/lib/python3.5/site-packages/theano/tensor/subtensor.py in make_node(self, x, *inputs)\r\n    482                 len(idx_list), x.type.ndim))\r\n    483             exception.subtensor_invalid = True\r\n--> 484             raise exception\r\n    485 \r\n    486         input_types = Subtensor.collapse(idx_list,\r\n\r\nValueError: The index list is longer (size 1) than the number of dimensions of the tensor(namely 0). You are asking for a dimension of the tensor that does not exist! You might need to use dimshuffle to add extra dimension to your tensor.\r\n```\r\n\r\nAny ideas on what could be wrong? If I use a Poisson or Normal, it works. Are exponentials not intended to be used in mixture models? I'm using latest master (34fdef3) of pymc3 and theano (ee9eae).", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1882/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1873", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1873/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1873/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1873/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1873", "id": 212219432, "node_id": "MDU6SXNzdWUyMTIyMTk0MzI=", "number": 1873, "title": "lasso_missing model fails", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-06T19:09:38Z", "updated_at": "2017-06-15T14:48:25Z", "closed_at": "2017-06-15T14:48:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The `lasso_missing.py` model does not produce expected output when run under current master:\r\n\r\n```\r\n$ python lasso_missing.py\r\nWarning: Desired error not necessarily achieved due to precision loss.\r\n         Current function value: 10000000000000000159028911097599180468360808563945281389781327557747838772170381060813469985856815104.000000\r\n         Iterations: 0\r\n         Function evaluations: 2\r\n         Gradient evaluations: 1\r\nTraceback (most recent call last):\r\n  File \"lasso_missing.py\", line 43, in <module>\r\n    start = pm.find_MAP()\r\n  File \"/Users/fonnescj/Repos/pymc3/pymc3/tuning/starting.py\", line 153, in find_MAP\r\n    specific_errors)\r\nValueError: Optimization error: max, logp or dlogp at max have non-finite values. Some values may be outside of distribution support. max: {'sib_mean_log_': array(-0.3665129244327545), 'siblings_imp_missing': array([], dtype=int64), 'p_disab_logodds_': array(0.0), 'disability_imp_missing': array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 'p_mother_logodds_': array(0.0), 'mother_imp_missing': array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n       0, 0, 0, 0]), 's_log_': array(1.6094379425048828), 'beta': array([ 0.1,  0.1,  0.1,  0.1,  0.1,  0.1,  0.1])} logp: array(nan) dlogp: array([  8.98253870e+01,  -5.85000000e+01,  -9.50000000e+00,\r\n         5.58700682e+04,   6.49721961e+02,   3.32593980e+02,\r\n         7.25313956e+02,   1.26741992e+02,   3.48175559e+04,\r\n         3.19725981e+02,   2.59157984e+02])Check that 1) you don't have hierarchical parameters, these will lead to points with infinite density. 2) your distribution logp's are properly specified. Specific issues: \r\nbeta.logp bad: nan\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1873/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1764", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1764/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1764/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1764/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1764", "id": 206379603, "node_id": "MDU6SXNzdWUyMDYzNzk2MDM=", "number": 1764, "title": "ADVI fails on random effects models where the random effects influence two observed quantitites", "user": {"login": "AustinRochford", "id": 3465592, "node_id": "MDQ6VXNlcjM0NjU1OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3465592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AustinRochford", "html_url": "https://github.com/AustinRochford", "followers_url": "https://api.github.com/users/AustinRochford/followers", "following_url": "https://api.github.com/users/AustinRochford/following{/other_user}", "gists_url": "https://api.github.com/users/AustinRochford/gists{/gist_id}", "starred_url": "https://api.github.com/users/AustinRochford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AustinRochford/subscriptions", "organizations_url": "https://api.github.com/users/AustinRochford/orgs", "repos_url": "https://api.github.com/users/AustinRochford/repos", "events_url": "https://api.github.com/users/AustinRochford/events{/privacy}", "received_events_url": "https://api.github.com/users/AustinRochford/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2017-02-09T01:41:01Z", "updated_at": "2018-12-22T12:16:49Z", "closed_at": "2018-12-22T12:16:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See this [notebook](https://gist.github.com/AustinRochford/256d044ae8cf9f67d1fc92897fafc48d) for a simulated example.  ADVI works with only one observed quantity and works intermittently (depending on the seed) with two observed quantities and no random effects.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1764/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1756", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1756/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1756/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1756/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1756", "id": 205597398, "node_id": "MDU6SXNzdWUyMDU1OTczOTg=", "number": 1756, "title": "Tests for the sqlite backend fail if floatX=float32", "user": {"login": "aseyboldt", "id": 1882397, "node_id": "MDQ6VXNlcjE4ODIzOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1882397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aseyboldt", "html_url": "https://github.com/aseyboldt", "followers_url": "https://api.github.com/users/aseyboldt/followers", "following_url": "https://api.github.com/users/aseyboldt/following{/other_user}", "gists_url": "https://api.github.com/users/aseyboldt/gists{/gist_id}", "starred_url": "https://api.github.com/users/aseyboldt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aseyboldt/subscriptions", "organizations_url": "https://api.github.com/users/aseyboldt/orgs", "repos_url": "https://api.github.com/users/aseyboldt/repos", "events_url": "https://api.github.com/users/aseyboldt/events{/privacy}", "received_events_url": "https://api.github.com/users/aseyboldt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-06T14:21:07Z", "updated_at": "2017-06-15T16:00:02Z", "closed_at": "2017-06-15T15:08:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The type conversion from numpy to sqlite seems to break for single precision floats:\r\n\r\nPut `floatX = float32` into .theanorc or THEANO_FLAGS and run the sqlite tests:\r\n\r\n`nosetests nosetests pymc3/tests/test_sqlite_backend.py`\r\n\r\n```\r\n======================================================================\r\nFAIL: test_standard_close (pymc3.tests.test_sqlite_backend.TestSQlite1dSampling)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/adr/git/pymc3/pymc3/tests/backend_fixtures.py\", line 237, in test_standard_close\r\n    np.zeros(self.strace.var_shapes[varname]))\r\n  File \"/usr/lib/python3.6/site-packages/numpy/testing/utils.py\", line 322, in assert_equal\r\n    return assert_array_equal(actual, desired, err_msg, verbose)\r\n  File \"/usr/lib/python3.6/site-packages/numpy/testing/utils.py\", line 813, in assert_array_equal\r\n    verbose=verbose, header='Arrays are not equal')\r\n  File \"/usr/lib/python3.6/site-packages/numpy/testing/utils.py\", line 739, in assert_array_compare\r\n    raise AssertionError(msg)\r\nAssertionError: \r\nArrays are not equal\r\n\r\n(mismatch 100.0%)\r\n x: array([b'', b''], \r\n      dtype='|S4')\r\n y: array([ 0.,  0.]) \r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1756/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1695", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1695/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1695/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1695/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1695", "id": 202387707, "node_id": "MDU6SXNzdWUyMDIzODc3MDc=", "number": 1695, "title": "Posterior predictive sampling with shared variables broken", "user": {"login": "AustinRochford", "id": 3465592, "node_id": "MDQ6VXNlcjM0NjU1OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3465592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AustinRochford", "html_url": "https://github.com/AustinRochford", "followers_url": "https://api.github.com/users/AustinRochford/followers", "following_url": "https://api.github.com/users/AustinRochford/following{/other_user}", "gists_url": "https://api.github.com/users/AustinRochford/gists{/gist_id}", "starred_url": "https://api.github.com/users/AustinRochford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AustinRochford/subscriptions", "organizations_url": "https://api.github.com/users/AustinRochford/orgs", "repos_url": "https://api.github.com/users/AustinRochford/repos", "events_url": "https://api.github.com/users/AustinRochford/events{/privacy}", "received_events_url": "https://api.github.com/users/AustinRochford/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-01-22T14:55:47Z", "updated_at": "2017-01-23T12:27:15Z", "closed_at": "2017-01-23T12:27:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Posterior predictive sampling in models that use `theano.shared` variables appears to be broken; see https://gist.github.com/AustinRochford/b46835738b9f8c4a05d0d6f63ec631ad for a minimal example.\r\n\r\nThe problem appears to be that when the shape of the shared variable changes, the shape of the `pymc3` variable is not updated; see the final cell of the linked notebook.\r\n\r\nI have confirmed that the logistic regression example in the [PPC example notebook](http://pymc-devs.github.io/pymc3/notebooks/posterior_predictive.html) also fails similarly.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1695/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1691", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1691/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1691/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1691/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1691", "id": 202338414, "node_id": "MDU6SXNzdWUyMDIzMzg0MTQ=", "number": 1691, "title": "PyMC3 release on conda crashes: illegal hardware instruction", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-21T20:38:31Z", "updated_at": "2018-12-22T12:16:49Z", "closed_at": "2018-12-22T12:16:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Installing PyMC3 from conda into a clean virtualenv results in an unstable system that reliably crashes. Specifically, creating and specifying a model results in a `illegal hardware instruction` error that crashes the Python session. The only thing that seems to fix it is to install both theano and pymc3 with pip instead of conda.\r\n\r\nRunning Python 3.5 (Anaconda) on macOS 10.12.\r\n\r\nIf this is a replicable error, we need to get to the bottom of it and release a fix in 3.0.1 as soon as possible.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1691/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1581", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1581/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1581/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1581/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1581", "id": 194315279, "node_id": "MDU6SXNzdWUxOTQzMTUyNzk=", "number": 1581, "title": "NUTS scaling issue regression", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/8", "html_url": "https://github.com/pymc-devs/pymc/milestone/8", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/8/labels", "id": 1182403, "node_id": "MDk6TWlsZXN0b25lMTE4MjQwMw==", "number": 8, "title": "Version 3.0.stable", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 11, "state": "closed", "created_at": "2015-06-26T10:32:52Z", "updated_at": "2018-01-22T20:55:21Z", "due_on": null, "closed_at": "2018-01-22T20:55:21Z"}, "comments": 1, "created_at": "2016-12-08T11:44:33Z", "updated_at": "2016-12-08T16:59:53Z", "closed_at": "2016-12-08T16:59:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I have found an issue with one of my models that was sampling fast before but then kept stalling. I identified this commit to be the issue: https://github.com/pymc-devs/pymc3/commit/362c8eedd6e7622137203b2859f6f6ac518eae64\r\n\r\nCC @fonnesbeck \r\n\r\nI'm still investigating which part of the PR introduced the problem.", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1581/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1579", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1579/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1579/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1579/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1579", "id": 194046018, "node_id": "MDU6SXNzdWUxOTQwNDYwMTg=", "number": 1579, "title": "Error when using DiscreteUniform", "user": {"login": "springcoil", "id": 983944, "node_id": "MDQ6VXNlcjk4Mzk0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/983944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/springcoil", "html_url": "https://github.com/springcoil", "followers_url": "https://api.github.com/users/springcoil/followers", "following_url": "https://api.github.com/users/springcoil/following{/other_user}", "gists_url": "https://api.github.com/users/springcoil/gists{/gist_id}", "starred_url": "https://api.github.com/users/springcoil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/springcoil/subscriptions", "organizations_url": "https://api.github.com/users/springcoil/orgs", "repos_url": "https://api.github.com/users/springcoil/repos", "events_url": "https://api.github.com/users/springcoil/events{/privacy}", "received_events_url": "https://api.github.com/users/springcoil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/8", "html_url": "https://github.com/pymc-devs/pymc/milestone/8", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/8/labels", "id": 1182403, "node_id": "MDk6TWlsZXN0b25lMTE4MjQwMw==", "number": 8, "title": "Version 3.0.stable", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 11, "state": "closed", "created_at": "2015-06-26T10:32:52Z", "updated_at": "2018-01-22T20:55:21Z", "due_on": null, "closed_at": "2018-01-22T20:55:21Z"}, "comments": 41, "created_at": "2016-12-07T13:12:13Z", "updated_at": "2016-12-19T21:45:50Z", "closed_at": "2016-12-19T21:45:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When reproducing http://isaacslavitt.com/2015/12/19/german-tank-problem-with-pymc-and-pystan/\r\n\r\nWith the newest rc4 - I run into the following ridiculous results when running `pm.summary(trace)`\r\n\r\n```\r\n\r\nN:\r\n\r\n  Mean             SD               MC Error         95% HPD interval\r\n  -------------------------------------------------------------------\r\n  \r\n  2687.276         2570.593         25.819           [256.000, 8376.000]\r\n\r\n  Posterior quantiles:\r\n  2.5            25             50             75             97.5\r\n  |--------------|==============|==============|--------------|\r\n  \r\n  280.000        642.000        1643.000       4074.000       9145.000\r\n```\r\n\r\nThese are off by a factor of 10. \r\n\r\nAnyone any ideas? I used the same code. ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1579/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1536", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1536/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1536/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1536/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1536", "id": 190504952, "node_id": "MDU6SXNzdWUxOTA1MDQ5NTI=", "number": 1536, "title": "Travis broke", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-11-19T16:22:10Z", "updated_at": "2016-11-20T16:13:25Z", "closed_at": "2016-11-20T16:13:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\n======================================================================\r\nERROR: test_normal (pymc3.tests.test_examples.TestHierarchical)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/travis/build/pymc-devs/pymc3/pymc3/tests/test_examples.py\", line 242, in test_normal\r\n    start = pm.find_MAP()\r\n  File \"/home/travis/build/pymc-devs/pymc3/pymc3/tuning/starting.py\", line 77, in find_MAP\r\n    dlogp = bij.mapf(model.fastdlogp(vars))\r\n  File \"/home/travis/build/pymc-devs/pymc3/pymc3/model.py\", line 159, in fastdlogp\r\n    return self.model.fastfn(gradient(self.logpt, vars))\r\n  File \"/home/travis/build/pymc-devs/pymc3/pymc3/memoize.py\", line 15, in memoizer\r\n    cache[key] = obj(*args, **kwargs)\r\n  File \"/home/travis/build/pymc-devs/pymc3/pymc3/theanof.py\", line 60, in gradient\r\n    return tt.concatenate([gradient1(f, v) for v in vars], axis=0)\r\n  File \"/home/travis/build/pymc-devs/pymc3/pymc3/theanof.py\", line 60, in <listcomp>\r\n    return tt.concatenate([gradient1(f, v) for v in vars], axis=0)\r\n  File \"/home/travis/build/pymc-devs/pymc3/pymc3/theanof.py\", line 48, in gradient1\r\n    return tt.flatten(tt.grad(f, v, disconnected_inputs='warn'))\r\n  File \"/home/travis/minconda3/envs/testenv/lib/python3.5/site-packages/theano/gradient.py\", line 553, in grad\r\n    grad_dict, wrt, cost_name)\r\n  File \"/home/travis/minconda3/envs/testenv/lib/python3.5/site-packages/theano/gradient.py\", line 1317, in _populate_grad_dict\r\n    rval = [access_grad_cache(elem) for elem in wrt]\r\n  File \"/home/travis/minconda3/envs/testenv/lib/python3.5/site-packages/theano/gradient.py\", line 1317, in <listcomp>\r\n    rval = [access_grad_cache(elem) for elem in wrt]\r\n  File \"/home/travis/minconda3/envs/testenv/lib/python3.5/site-packages/theano/gradient.py\", line 1272, in access_grad_cache\r\n    term = access_term_cache(node)[idx]\r\n  File \"/home/travis/minconda3/envs/testenv/lib/python3.5/site-packages/theano/gradient.py\", line 1106, in access_term_cache\r\n    new_output_grads)\r\n  File \"/home/travis/minconda3/envs/testenv/lib/python3.5/site-packages/theano/gof/op.py\", line 700, in L_op\r\n    return self.grad(inputs, output_grads)\r\n  File \"/home/travis/minconda3/envs/testenv/lib/python3.5/site-packages/theano/tensor/elemwise.py\", line 717, in grad\r\n    sr = sr.dimshuffle(shuffle)\r\n  File \"/home/travis/minconda3/envs/testenv/lib/python3.5/site-packages/theano/tensor/var.py\", line 363, in dimshuffle\r\n    pattern)\r\n  File \"/home/travis/minconda3/envs/testenv/lib/python3.5/site-packages/theano/tensor/elemwise.py\", line 175, in __init__\r\n    (input_broadcastable, new_order))\r\nValueError: ('You cannot drop a non-broadcastable dimension.', ((True, False), ('x', 'x', 0)))\r\n-------------------- >> begin captured logging << --------------------\r\npymc3: DEBUG: Applied interval-transform to sg and added transformed sg_interval_ to model.\r\npymc3: DEBUG: Applied interval-transform to s and added transformed s_interval_ to model.\r\n--------------------- >> end captured logging << ---------------------\r\n```", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1536/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1503", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1503/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1503/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1503/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1503", "id": 187688555, "node_id": "MDU6SXNzdWUxODc2ODg1NTU=", "number": 1503, "title": "Getting errors on Convolutional VAE notebook", "user": {"login": "springcoil", "id": 983944, "node_id": "MDQ6VXNlcjk4Mzk0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/983944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/springcoil", "html_url": "https://github.com/springcoil", "followers_url": "https://api.github.com/users/springcoil/followers", "following_url": "https://api.github.com/users/springcoil/following{/other_user}", "gists_url": "https://api.github.com/users/springcoil/gists{/gist_id}", "starred_url": "https://api.github.com/users/springcoil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/springcoil/subscriptions", "organizations_url": "https://api.github.com/users/springcoil/orgs", "repos_url": "https://api.github.com/users/springcoil/repos", "events_url": "https://api.github.com/users/springcoil/events{/privacy}", "received_events_url": "https://api.github.com/users/springcoil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "taku-y", "id": 4969395, "node_id": "MDQ6VXNlcjQ5NjkzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4969395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taku-y", "html_url": "https://github.com/taku-y", "followers_url": "https://api.github.com/users/taku-y/followers", "following_url": "https://api.github.com/users/taku-y/following{/other_user}", "gists_url": "https://api.github.com/users/taku-y/gists{/gist_id}", "starred_url": "https://api.github.com/users/taku-y/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taku-y/subscriptions", "organizations_url": "https://api.github.com/users/taku-y/orgs", "repos_url": "https://api.github.com/users/taku-y/repos", "events_url": "https://api.github.com/users/taku-y/events{/privacy}", "received_events_url": "https://api.github.com/users/taku-y/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "taku-y", "id": 4969395, "node_id": "MDQ6VXNlcjQ5NjkzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4969395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taku-y", "html_url": "https://github.com/taku-y", "followers_url": "https://api.github.com/users/taku-y/followers", "following_url": "https://api.github.com/users/taku-y/following{/other_user}", "gists_url": "https://api.github.com/users/taku-y/gists{/gist_id}", "starred_url": "https://api.github.com/users/taku-y/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taku-y/subscriptions", "organizations_url": "https://api.github.com/users/taku-y/orgs", "repos_url": "https://api.github.com/users/taku-y/repos", "events_url": "https://api.github.com/users/taku-y/events{/privacy}", "received_events_url": "https://api.github.com/users/taku-y/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2016-11-07T11:31:17Z", "updated_at": "2017-01-28T13:41:25Z", "closed_at": "2017-01-28T13:41:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here is my gist https://gist.github.com/springcoil/ea1683d8063a067d1ba4ce1ddf3e66cf of my Conda .yml file. \r\n\r\nhttps://gist.github.com/springcoil/ad78bea36f022b1b08f757642acda387 is my output. I've got nans in this.\r\n\r\ncc @fonnesbeck @ColCarroll @taku-y ", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1503/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1501", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1501/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1501/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1501/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1501", "id": 187579952, "node_id": "MDU6SXNzdWUxODc1Nzk5NTI=", "number": 1501, "title": "Out-of-range value for uniform prior", "user": {"login": "sebp", "id": 74460, "node_id": "MDQ6VXNlcjc0NDYw", "avatar_url": "https://avatars.githubusercontent.com/u/74460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebp", "html_url": "https://github.com/sebp", "followers_url": "https://api.github.com/users/sebp/followers", "following_url": "https://api.github.com/users/sebp/following{/other_user}", "gists_url": "https://api.github.com/users/sebp/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebp/subscriptions", "organizations_url": "https://api.github.com/users/sebp/orgs", "repos_url": "https://api.github.com/users/sebp/repos", "events_url": "https://api.github.com/users/sebp/events{/privacy}", "received_events_url": "https://api.github.com/users/sebp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-11-06T18:43:10Z", "updated_at": "2018-12-22T12:16:47Z", "closed_at": "2018-12-22T12:16:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Problem Description\r\n\r\nWhile attempting to port code related to [Bayesian estimation of the correlation coefficient](http://www.philippsinger.info/?p=581) from PyMC2 and PyMC3, I noticed that `rho` (the correlation coefficient) can be out of range, which in turn causes NaN in the multivariate normal distribution when taking the log of a negative value ([line 117](https://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/multivariate.py#L117) of pymc3/distributions/multivariate.py).\r\n\r\nThe model is defined as below:\r\n```python\r\nfrom theano.printing import Print\r\nimport theano.tensor as T\r\nimport pymc3 as pm\r\nimport numpy as np\r\n\r\n\r\ndef covariance(sigma, rho):\r\n    C = T.fill_diagonal(T.alloc(rho, 2, 2), 1.)\r\n    S = T.diag(sigma)\r\n    M = S.dot(C).dot(S)\r\n    return M\r\n\r\n\r\ndef analyze_robust(data):\r\n    with pm.Model() as model:\r\n        # priors\r\n        sigma = pm.Uniform('sigma', lower=0, upper=1000, shape=2,\r\n                           testval=[0.133434, 5.9304],  # init with mad\r\n                           transform=None)\r\n        rho = pm.Uniform('r', lower=-1, upper=1,\r\n                         testval=-0.2144021,  # init with Spearman's correlation\r\n                         transform=None)\r\n\r\n        # print values for debugging\r\n        rho_p = Print('rho')(rho)\r\n        sigma_p = Print('sigma')(sigma)\r\n\r\n        cov = pm.Deterministic('cov', covariance(sigma_p, rho_p))\r\n        cov_p = Print('cov')(cov)\r\n\r\n        mult_norm = pm.MvNormal('mult_norm', mu=[10.1, 79.],  # set mu to median\r\n                                cov=cov_p, observed=data.T)\r\n\r\n    return model\r\n\r\n\r\ns = [9.92, 94, 9.94, 79, 9.97, 78, 9.93, 83, 9.90, 77, 9.93, 76, 10.00, 74, 9.97, 87, 10.00, 86, 10.01,\r\n     83, 10.08, 75, 10.09, 74, 10.15, 92, 10.15, 69, 10.17, 79, 10.17, 71, 10.19, 80, 10.30, 80, 10.31,\r\n     77, 10.34, 87]\r\nx = [float(a) for i, a in enumerate(s) if i % 2 == 0]\r\ny = [float(a) for i, a in enumerate(s) if i % 2 != 0]\r\ndata = np.array([x, y])\r\n\r\nx.append(9.5)\r\ny.append(115.)\r\n\r\nrobust_model = analyze_robust(data)\r\nwith robust_model:\r\n    robust_trace = pm.sample(500, tune=250, step=pm.Metropolis(),\r\n                             random_seed=21412, progressbar=False)\r\n```\r\n\r\nNotice that the prior on `rho` is uniform between -1 and 1.\r\n\r\n## Result\r\n\r\nRunning the code with Theano's [NanGuardMode](http://deeplearning.net/software/theano/library/compile/nanguardmode.html) enabled results in NaN after a couple of iterations:\r\n\r\n```\r\nrho __str__ = -0.2144021\r\nsigma __str__ = [ 0.133434  5.9304  ]\r\ncov __str__ = [[  1.78046324e-02  -1.69660025e-01]\r\n [ -1.69660025e-01   3.51696442e+01]]\r\nsigma __str__ = [ 0.133434  5.9304  ]\r\nrho __str__ = -0.2144021\r\nsigma __str__ = [ 0.133434  5.9304  ]\r\nrho __str__ = -0.2144021\r\nrho __str__ = -0.6753367200324893\r\ncov __str__ = [[  1.78046324e-02  -1.69660025e-01]\r\n [ -1.69660025e-01   3.51696442e+01]]\r\ncov __str__ = [[  1.78046324e-02  -5.34405423e-01]\r\n [ -5.34405423e-01   3.51696442e+01]]\r\nrho __str__ = -0.2144021\r\nsigma __str__ = [ 0.133434  5.9304  ]\r\nsigma __str__ = [-0.08992942  6.58322907]\r\ncov __str__ = [[  1.78046324e-02  -1.69660025e-01]\r\n [ -1.69660025e-01   3.51696442e+01]]\r\ncov __str__ = [[  8.08730093e-03   1.26931614e-01]\r\n [  1.26931614e-01   4.33389049e+01]]\r\nsigma __str__ = [ 0.133434  5.9304  ]\r\nrho __str__ = -0.2144021\r\nsigma __str__ = [ 0.133434  5.9304  ]\r\nrho __str__ = -0.2144021\r\nrho __str__ = -1.3866936871442477\r\ncov __str__ = [[  1.78046324e-02  -1.69660025e-01]\r\n [ -1.69660025e-01   3.51696442e+01]]\r\ncov __str__ = [[  1.78046324e-02  -1.09731428e+00]\r\n [ -1.09731428e+00   3.51696442e+01]]\r\nTraceback (most recent call last):\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/theano/gof/link.py\", line 1012, in f\r\n    wrapper(i, node, *thunks)\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/theano/compile/nanguardmode.py\", line 307, in nan_check\r\n    do_check_on(x[0], node, fn, False)\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/theano/compile/nanguardmode.py\", line 272, in do_check_on\r\n    raise AssertionError(msg)\r\nAssertionError: NaN detected\r\nNanGuardMode found an error in the output of a node in this variable:\r\nElemwise{log,no_inplace} [id A] ''   \r\n |Elemwise{true_div,no_inplace} [id B] ''   \r\n   |TensorConstant{1.0} [id C]\r\n   |Det [id D] ''   \r\n     |MatrixInverse [id E] ''   \r\n       |Print{message='cov', attrs=('__str__',), global_fn=<function _print_fn at 0x7fa10a171ea0>} [id F] ''   \r\n         |Dot22 [id G] 'cov'   \r\n           |Dot22 [id H] ''   \r\n           | |Diag [id I] ''   \r\n           | | |Print{message='sigma', attrs=('__str__',), global_fn=<function _print_fn at 0x7fa10a171ea0>} [id J] ''   \r\n           | |   |sigma_shared [id K]\r\n           | |FillDiagonal [id L] ''   \r\n           |   |Alloc [id M] ''   \r\n           |   | |Print{message='rho', attrs=('__str__',), global_fn=<function _print_fn at 0x7fa10a171ea0>} [id N] ''   \r\n           |   | | |Subtensor{int64} [id O] ''   \r\n           |   | |   |Subtensor{int64:int64:} [id P] ''   \r\n           |   | |   | |inarray1 [id Q]\r\n           |   | |   | |Constant{0} [id R]\r\n           |   | |   | |Constant{1} [id S]\r\n           |   | |   |Constant{0} [id R]\r\n           |   | |TensorConstant{2} [id T]\r\n           |   | |TensorConstant{2} [id T]\r\n           |   |TensorConstant{1.0} [id U]\r\n           |Diag [id I] ''   \r\n\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/sebp/Projekte/bayesian/robust_cor.py\", line 49, in <module>\r\n    robust_trace = pm.sample(500, tune=250, step=pm.Metropolis(), random_seed=21412, progressbar=False)\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/pymc3/sampling.py\", line 157, in sample\r\n    return sample_func(**sample_args)\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/pymc3/sampling.py\", line 167, in _sample\r\n    for strace in sampling:\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/pymc3/sampling.py\", line 249, in _iter_sample\r\n    point = step.step(point)\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/pymc3/step_methods/compound.py\", line 16, in step\r\n    point = method.step(point)\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/pymc3/step_methods/arraystep.py\", line 142, in step\r\n    apoint = self.astep(bij.map(point))\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/pymc3/step_methods/metropolis.py\", line 137, in astep\r\n    q_new = metrop_select(self.delta_logp(q, q0), q, q0)\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/theano/compile/function_module.py\", line 859, in __call__\r\n    outputs = self.fn()\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/theano/gof/link.py\", line 1014, in f\r\n    raise_with_op(node, *thunks)\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/theano/gof/link.py\", line 314, in raise_with_op\r\n    reraise(exc_type, exc_value, exc_trace)\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/six.py\", line 685, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/theano/gof/link.py\", line 1012, in f\r\n    wrapper(i, node, *thunks)\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/theano/compile/nanguardmode.py\", line 307, in nan_check\r\n    do_check_on(x[0], node, fn, False)\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/theano/compile/nanguardmode.py\", line 272, in do_check_on\r\n    raise AssertionError(msg)\r\nAssertionError: NaN detected\r\nNanGuardMode found an error in the output of a node in this variable:\r\nElemwise{log,no_inplace} [id A] ''   \r\n |Elemwise{true_div,no_inplace} [id B] ''   \r\n   |TensorConstant{1.0} [id C]\r\n   |Det [id D] ''   \r\n     |MatrixInverse [id E] ''   \r\n       |Print{message='cov', attrs=('__str__',), global_fn=<function _print_fn at 0x7fa10a171ea0>} [id F] ''   \r\n         |Dot22 [id G] 'cov'   \r\n           |Dot22 [id H] ''   \r\n           | |Diag [id I] ''   \r\n           | | |Print{message='sigma', attrs=('__str__',), global_fn=<function _print_fn at 0x7fa10a171ea0>} [id J] ''   \r\n           | |   |sigma_shared [id K]\r\n           | |FillDiagonal [id L] ''   \r\n           |   |Alloc [id M] ''   \r\n           |   | |Print{message='rho', attrs=('__str__',), global_fn=<function _print_fn at 0x7fa10a171ea0>} [id N] ''   \r\n           |   | | |Subtensor{int64} [id O] ''   \r\n           |   | |   |Subtensor{int64:int64:} [id P] ''   \r\n           |   | |   | |inarray1 [id Q]\r\n           |   | |   | |Constant{0} [id R]\r\n           |   | |   | |Constant{1} [id S]\r\n           |   | |   |Constant{0} [id R]\r\n           |   | |TensorConstant{2} [id T]\r\n           |   | |TensorConstant{2} [id T]\r\n           |   |TensorConstant{1.0} [id U]\r\n           |Diag [id I] ''   \r\n\r\n\r\nApply node that caused the error: Elemwise{log,no_inplace}(Elemwise{true_div,no_inplace}.0)\r\nToposort index: 58\r\nInputs types: [TensorType(float64, scalar)]\r\nInputs shapes: [()]\r\nInputs strides: [()]\r\nInputs values: [array(-0.5779160437553532)]\r\nOutputs clients: [[Elemwise{add,no_inplace}(Elemwise{mul,no_inplace}.0, Elemwise{log,no_inplace}.0)]]\r\n\r\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\r\n  File \"/home/sebp/Projekte/bayesian/robust_cor.py\", line 47, in <module>\r\n    robust_model = analyze_robust(data)\r\n  File \"/home/sebp/Projekte/bayesian/robust_cor.py\", line 32, in analyze_robust\r\n    cov=cov_p, observed=data.T)\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/pymc3/distributions/distribution.py\", line 27, in __new__\r\n    return model.Var(name, dist, data)\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/pymc3/model.py\", line 309, in Var\r\n    distribution=dist, model=self)\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/pymc3/model.py\", line 592, in __init__\r\n    self.logp_elemwiset = distribution.logp(data)\r\n  File \"/home/sebp/miniconda3/envs/pymc3/lib/python3.5/site-packages/pymc3/distributions/multivariate.py\", line 117, in logp\r\n    result = k * tt.log(2 * np.pi) + tt.log(1. / det(tau))\r\n\r\nDebugprint of the apply node: \r\nElemwise{log,no_inplace} [id A] <TensorType(float64, scalar)> ''   \r\n |Elemwise{true_div,no_inplace} [id B] <TensorType(float64, scalar)> ''   \r\n   |TensorConstant{1.0} [id C] <TensorType(float32, scalar)>\r\n   |Det [id D] <TensorType(float64, scalar)> ''   \r\n     |MatrixInverse [id E] <TensorType(float64, matrix)> ''   \r\n       |Print{message='cov', attrs=('__str__',), global_fn=<function _print_fn at 0x7fa10a171ea0>} [id F] <TensorType(float64, matrix)> ''   \r\n         |Dot22 [id G] <TensorType(float64, matrix)> 'cov'   \r\n```\r\n\r\nEventually, `rho` becomes less than -1 (**rho __str__ = -1.3866936871442477**) and the computed covariance matrix is not positive definite anymore, thus its determinate is negative, which causes log to produce NaN.\r\n\r\nGiven a uniform prior between -1 and 1, I would expect that a value smaller -1 would be impossible.\r\n\r\n## Enabling NanGuardMode\r\n\r\nYou need to modify the `theano.function` call in [pymc3.step_methods.metropolis.delta_logp](pymc3/step_methods/metropolis.py) to use Theano's `NanGuardMode` class:\r\n```python\r\nfrom theano.compile.nanguardmode import NanGuardMode\r\nf = theano.function([inarray1, inarray0], logp1 - logp0,\r\n                    mode=NanGuardMode(True, False, False))  # only raise error on NaN, not Inf or big value\r\n```\r\n\r\n\r\n## Setup\r\nAnaconda on Fedora 24 with\r\n\r\n- Python 3.5.2\r\n- pymc3 3.0.rc2\r\n- numpy: 1.11.2\r\n- scipy: 0.18.1\r\n- theano 0.8.2\r\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1501/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1491", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1491/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1491/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1491/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1491", "id": 186507246, "node_id": "MDU6SXNzdWUxODY1MDcyNDY=", "number": 1491, "title": "garch example fails", "user": {"login": "mikemac8888", "id": 19824294, "node_id": "MDQ6VXNlcjE5ODI0Mjk0", "avatar_url": "https://avatars.githubusercontent.com/u/19824294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikemac8888", "html_url": "https://github.com/mikemac8888", "followers_url": "https://api.github.com/users/mikemac8888/followers", "following_url": "https://api.github.com/users/mikemac8888/following{/other_user}", "gists_url": "https://api.github.com/users/mikemac8888/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikemac8888/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikemac8888/subscriptions", "organizations_url": "https://api.github.com/users/mikemac8888/orgs", "repos_url": "https://api.github.com/users/mikemac8888/repos", "events_url": "https://api.github.com/users/mikemac8888/events{/privacy}", "received_events_url": "https://api.github.com/users/mikemac8888/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 32, "created_at": "2016-11-01T10:56:40Z", "updated_at": "2018-01-25T08:01:05Z", "closed_at": "2018-01-25T08:01:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running examples/garch_example.py fails with error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"garch_example.py\", line 40, in <module>\r\n    beta1 = BoundedNormal('beta1', 0, sd=1e6)\r\n  File \"/Users/**/anaconda3/envs/py35/lib/python3.5/site-packages/pymc3/distributions/continuous.py\", line 1102, in __call__\r\n    *args, **kwargs)\r\n  File \"/Users/**/anaconda3/envs/py35/lib/python3.5/site-packages/pymc3/distributions/distribution.py\", line 27, in __new__\r\n    return model.Var(name, dist, data)\r\n  File \"/Users/**/anaconda3/envs/py35/lib/python3.5/site-packages/pymc3/model.py\", line 288, in Var\r\n    transform=dist.transform)\r\n  File \"/Users/**/anaconda3/envs/py35/lib/python3.5/site-packages/pymc3/model.py\", line 689, in __init__\r\n    transformed_name = \"{}_{}_\".format(name, transform.name)\r\nAttributeError: 'int' object has no attribute 'name'\r\n```\r\n\r\nPython 3.5.2\r\npymc3 (3.0rc2)", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1491/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1477", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1477/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1477/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1477/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1477", "id": 185002938, "node_id": "MDU6SXNzdWUxODUwMDI5Mzg=", "number": 1477, "title": "Multinomial likelihood bug with multiple observations", "user": {"login": "AustinRochford", "id": 3465592, "node_id": "MDQ6VXNlcjM0NjU1OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3465592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AustinRochford", "html_url": "https://github.com/AustinRochford", "followers_url": "https://api.github.com/users/AustinRochford/followers", "following_url": "https://api.github.com/users/AustinRochford/following{/other_user}", "gists_url": "https://api.github.com/users/AustinRochford/gists{/gist_id}", "starred_url": "https://api.github.com/users/AustinRochford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AustinRochford/subscriptions", "organizations_url": "https://api.github.com/users/AustinRochford/orgs", "repos_url": "https://api.github.com/users/AustinRochford/repos", "events_url": "https://api.github.com/users/AustinRochford/events{/privacy}", "received_events_url": "https://api.github.com/users/AustinRochford/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-25T02:26:26Z", "updated_at": "2016-10-25T17:49:43Z", "closed_at": "2016-10-25T17:49:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I think there is a bug in the `Multinomial` log likelihood when there are multiple observations.  Here is a simple illustration:\n\n``` python\nimport numpy as np\nimport pymc3 as pm\nimport scipy as sp\n```\n\n``` python\ndef multinomial_logp(x, n, p):\n    return sp.special.gammaln(n + 1) - sp.special.gammaln(x + 1).sum() + (x * np.log(p)).sum()\n```\n\n``` python\nN = 5\nP = np.array([0.3, 0.7])\n```\n\n``` python\nwith pm.Model() as model:\n    x = pm.Multinomial('x', N, P, shape=2)\n```\n\n``` python\nx_single = np.array([2, 3])\n```\n\n``` python\nmodel.logp({'x': x_single})\n```\n\n```\narray(-1.175385291855191)\n```\n\n``` python\nmultinomial_logp(x_single, N, P)\n```\n\n```\n-1.1753853474740241\n```\n\n``` python\nx_many = np.array([[2, 3],\n                   [1, 4]])\n```\n\n``` python\nwith pm.Model() as model_many:\n    x = pm.Multinomial('x', N, P, shape=(2, 2))\n```\n\n``` python\nmodel_many.logp({'x': x_many})\n```\n\n```\narray(-1.3211512777668837)\n```\n\n``` python\nsum(multinomial_logp(x, N, P) for x in x_many)\n```\n\n```\n-2.1966200151207897\n```\n\nThe problem appears to be [aggregating to `x_sum`](https://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/multivariate.py#L303-L309) _before_ calculating `factln`.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1477/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1449", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1449/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1449/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1449/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1449", "id": 182803439, "node_id": "MDU6SXNzdWUxODI4MDM0Mzk=", "number": 1449, "title": "Wrapping bounds in tt.all changes log likelihood", "user": {"login": "AustinRochford", "id": 3465592, "node_id": "MDQ6VXNlcjM0NjU1OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3465592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AustinRochford", "html_url": "https://github.com/AustinRochford", "followers_url": "https://api.github.com/users/AustinRochford/followers", "following_url": "https://api.github.com/users/AustinRochford/following{/other_user}", "gists_url": "https://api.github.com/users/AustinRochford/gists{/gist_id}", "starred_url": "https://api.github.com/users/AustinRochford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AustinRochford/subscriptions", "organizations_url": "https://api.github.com/users/AustinRochford/orgs", "repos_url": "https://api.github.com/users/AustinRochford/repos", "events_url": "https://api.github.com/users/AustinRochford/events{/privacy}", "received_events_url": "https://api.github.com/users/AustinRochford/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-10-13T14:21:29Z", "updated_at": "2016-10-14T13:53:51Z", "closed_at": "2016-10-14T13:53:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Here I have two implementations of a multinomial random variable, which differ only in the shape of the conditions passed to `bound`.  Models that only differ in this way produce different log likelihoods for reasons that are not clear to me.\n\n``` python\nimport numpy as np\nimport pymc3 as pm\nfrom pymc3.distributions import Discrete\nfrom pymc3.distributions.dist_math import bound, factln\nfrom theano import tensor as tt\n```\n\n``` python\nx = np.array([1, 5])\nn = x.sum()\n```\n\n``` python\nclass MultinomialA(Discrete):\n    def __init__(self, n, p, *args, **kwargs):\n        super(MultinomialA, self).__init__(*args, **kwargs)\n\n        self.n = n\n        self.p = p\n\n    def logp(self, value):\n        n = self.n\n        p = self.p\n\n        return bound(factln(n) - factln(value).sum() + (value * tt.log(p)).sum(),\n                     value >= 0,\n                     0 <= p, p <= 1,\n                     tt.isclose(p.sum(), 1))\n```\n\n``` python\nwith pm.Model() as modelA:\n    p = pm.Dirichlet('p', np.ones(2))\n    x_obs = MultinomialA('x', n, p, observed=x)\n```\n\n```\nApplied stickbreaking-transform to p and added transformed p_stickbreaking_ to model.\n```\n\n``` python\nmodelA.logp({'p_stickbreaking_': [0]})\n```\n\n```\narray(-6.120541589383123)\n```\n\n``` python\nclass MultinomialB(Discrete):\n    def __init__(self, n, p, *args, **kwargs):\n        super(MultinomialB, self).__init__(*args, **kwargs)\n\n        self.n = n\n        self.p = p\n\n    def logp(self, value):\n        n = self.n\n        p = self.p\n\n        return bound(factln(n) - factln(value).sum() + (value * tt.log(p)).sum(),\n                     tt.all(value >= 0),\n                     tt.all(0 <= p), tt.all(p <= 1),\n                     tt.isclose(p.sum(), 1))\n```\n\n``` python\nwith pm.Model() as modelB:\n    p = pm.Dirichlet('p', np.ones(2))\n    x_obs = MultinomialB('x', n, p, observed=x)\n```\n\n```\nApplied stickbreaking-transform to p and added transformed p_stickbreaking_ to model.\n```\n\n``` python\nmodelB.logp({'p_stickbreaking_': [0]})\n```\n\n```\narray(-3.753417975251507)\n```\n\nI think this may be a bug, but I may also be misunderstanding the expected behavior of `bound`.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1449/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1435", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1435/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1435/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1435/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1435", "id": 182083647, "node_id": "MDU6SXNzdWUxODIwODM2NDc=", "number": 1435, "title": "Multinomial dlogpt produces nan - 3.0.rc2 Regression", "user": {"login": "asford", "id": 282792, "node_id": "MDQ6VXNlcjI4Mjc5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/282792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asford", "html_url": "https://github.com/asford", "followers_url": "https://api.github.com/users/asford/followers", "following_url": "https://api.github.com/users/asford/following{/other_user}", "gists_url": "https://api.github.com/users/asford/gists{/gist_id}", "starred_url": "https://api.github.com/users/asford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asford/subscriptions", "organizations_url": "https://api.github.com/users/asford/orgs", "repos_url": "https://api.github.com/users/asford/repos", "events_url": "https://api.github.com/users/asford/events{/privacy}", "received_events_url": "https://api.github.com/users/asford/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-10-10T18:35:41Z", "updated_at": "2016-10-20T18:36:34Z", "closed_at": "2016-10-20T18:36:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "`Multinomial.dlogpt` results in `nan` for valid inputs in pymc3 version 3.0.rc2. This is a regression from version 3.0.rc1, and reproduces on both debian and osx. I've attached a minimal reproduction below.\n\nI don't have much experience with debugging pymc3 or theano, but would be happy to provide additional information or submit a reproduction test case if it would be useful.\n## Reproduction\n\n```\nfrom __future__ import print_function\nimport numpy\nimport theano\nimport pymc3\nfrom pymc3.theanof import gradient\n\nimport os\nprint(\"uname\", os.uname()[2:])\nprint(\"numpy\", numpy.__version__)\nprint(\"theano\", theano.__version__)\nprint(\"pymc3\", pymc3.__version__)\n\nwith pymc3.Model() as dbg_model:\n    numpy.random.seed(1663)\n    obs = numpy.floor(numpy.random.random(3) * 1000).astype(int)\n\n    infrac = pymc3.Normal(\"infrac\", sd=1, shape=3, testval=.1)\n    infrac = infrac / infrac.sum()\n\n    mn = pymc3.Multinomial(\n        name = \"mn\",\n        n=obs.sum(),\n        p=infrac,\n        observed=obs\n    )\n\n    dlogpt = dbg_model.fn(gradient(dbg_model.logpt, None))\n    logpt = dbg_model.fn(dbg_model.logpt)\n\n    print(\"logpt\", logpt( **dbg_model.test_point ))\n    print(\"dlogpt\", dlogpt(**dbg_model.test_point ))\n```\n## 3.0.rc2 Result\n\n```\nuname ('3.16.0-4-amd64', '#1 SMP Debian 3.16.7-ckt25-2 (2016-04-08)', 'x86_64')\nnumpy 1.11.0\ntheano 0.8.2\npymc3 3.0.rc2\nlogpt -25.0047103337\ndlogpt [ nan  nan  nan]\n```\n## 3.0.rc1 Expected Result\n\n```\nuname ('3.16.0-4-amd64', '#1 SMP Debian 3.16.7-ckt25-2 (2016-04-08)', 'x86_64')\nnumpy 1.11.0\ntheano 0.8.2\npymc3 3.0.rc1\nlogpt -25.0047103337\ndlogpt [ 1133.23333333   -96.76666667 -1036.76666667]\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1435/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1421", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1421/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1421/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1421/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1421", "id": 180515301, "node_id": "MDU6SXNzdWUxODA1MTUzMDE=", "number": 1421, "title": "NUTS sampler is broken", "user": {"login": "beckermr", "id": 5296416, "node_id": "MDQ6VXNlcjUyOTY0MTY=", "avatar_url": "https://avatars.githubusercontent.com/u/5296416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beckermr", "html_url": "https://github.com/beckermr", "followers_url": "https://api.github.com/users/beckermr/followers", "following_url": "https://api.github.com/users/beckermr/following{/other_user}", "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}", "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions", "organizations_url": "https://api.github.com/users/beckermr/orgs", "repos_url": "https://api.github.com/users/beckermr/repos", "events_url": "https://api.github.com/users/beckermr/events{/privacy}", "received_events_url": "https://api.github.com/users/beckermr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ColCarroll", "id": 2295568, "node_id": "MDQ6VXNlcjIyOTU1Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/2295568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColCarroll", "html_url": "https://github.com/ColCarroll", "followers_url": "https://api.github.com/users/ColCarroll/followers", "following_url": "https://api.github.com/users/ColCarroll/following{/other_user}", "gists_url": "https://api.github.com/users/ColCarroll/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColCarroll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColCarroll/subscriptions", "organizations_url": "https://api.github.com/users/ColCarroll/orgs", "repos_url": "https://api.github.com/users/ColCarroll/repos", "events_url": "https://api.github.com/users/ColCarroll/events{/privacy}", "received_events_url": "https://api.github.com/users/ColCarroll/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ColCarroll", "id": 2295568, "node_id": "MDQ6VXNlcjIyOTU1Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/2295568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColCarroll", "html_url": "https://github.com/ColCarroll", "followers_url": "https://api.github.com/users/ColCarroll/followers", "following_url": "https://api.github.com/users/ColCarroll/following{/other_user}", "gists_url": "https://api.github.com/users/ColCarroll/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColCarroll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColCarroll/subscriptions", "organizations_url": "https://api.github.com/users/ColCarroll/orgs", "repos_url": "https://api.github.com/users/ColCarroll/repos", "events_url": "https://api.github.com/users/ColCarroll/events{/privacy}", "received_events_url": "https://api.github.com/users/ColCarroll/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2016-10-02T14:37:20Z", "updated_at": "2016-10-03T15:07:46Z", "closed_at": "2016-10-03T11:32:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have been experimenting with pymc3 and am pretty sure the current version of the NUTS sampler is broken. I am using the simple example problem in the docs, but with one of the priors changed (for sigma from HalfNormal or whatever is it called to Uniform). \n\nIt appears that the posterior from current the pymc3 NUTS sampler is very different from both STAN, other samplers in pymc3 and emcee (another sampler which doesn't use derivs). There was a recent change to the pymc3 NUTS sampler (~1 week ago) in commit 30b0c5030311a7819a7227b3cdb0ad7b4eee5407. I pulled the NUTS sampler in pymc3 from before that commit (shown as old pymc3 NUTS below) and this one looks better.\n\nHere is a plot of the posteriors:\n![buggy](https://cloud.githubusercontent.com/assets/5296416/19021238/ec76c962-8882-11e6-8010-83b36c2483f8.png)\n\nHere is the code to make the plot (I grabbed the old pymc3 NUTS sampler and rolled it into a local module. I am happy to send along this code as well.):\n\n``` python\n#!/usr/bin/env python\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn\n\nimport pystan\nimport emcee\nimport pymc3\nfrom nuts import OldNUTS\n\ndef run_emcee(X1, X2, Y):\n\n    def loglike(x):\n        \"\"\"loglike in python\"\"\"\n        alpha = x[0]\n        beta1 = x[1]\n        beta2 = x[2]\n        sigma = x[3]\n\n        if sigma <= 0.0 or sigma > 1.0:\n            return -np.inf\n\n        loglike = 0.0\n        loglike += -0.5 * alpha * alpha / 100.0\n        loglike += -0.5 * beta1 * beta1 / 100.0\n        loglike += -0.5 * beta2 * beta2 / 100.0\n        mu = alpha + beta1 * X1 + beta2 * X2\n        loglike += np.sum(-0.5 * ((Y - mu)**2) / sigma / sigma - np.log(sigma))\n\n        return loglike\n\n    ndim = 4\n    nwalkers = 80\n\n    p0 = [np.random.rand(ndim) for i in range(nwalkers)]\n    sampler = emcee.EnsembleSampler(nwalkers, ndim, loglike)\n    sampler.run_mcmc(p0, 2000)\n\n    _chains = sampler.chain[0:4, 1000:, -1]\n    chains = []\n    for i in range(4):\n        chains.append(_chains[i, :])\n\n    return chains\n\ndef run_stan(X1, X2, Y):\n    stan_code = \"\"\"\ndata {\n    int<lower=0> num_obs;\n    vector[num_obs] y;\n    vector[num_obs] x1;\n    vector[num_obs] x2;\n}\n\nparameters {\n    real<lower=-10, upper=10> alpha;\n    vector[2] beta;\n    real<lower=0.0, upper=1.0> sigma;\n}\n\ntransformed parameters {\n    vector[num_obs] mu;\n    mu = alpha + beta[1] * x1 + beta[2] * x2;\n}\n\nmodel {\n    alpha ~ normal(0, 10);\n    beta ~ normal(0, 10);\n    y ~ normal(mu, sigma);\n}\n\"\"\"\n    model = pystan.StanModel(model_code=stan_code)\n\n    mcmc_data = {'num_obs': len(Y), 'y': Y, 'x1': X1, 'x2': X2}\n    base_init = {'alpha': 0.1, 'beta': [0.2, 0.5], 'sigma': 0.3}\n    init = [base_init] * 4\n\n    fitted = model.sampling(warmup=1000,\n                            verbose=True,\n                            thin=1,\n                            init=init,\n                            iter=2000,\n                            n_jobs=4,\n                            data=mcmc_data,\n                            chains=4,\n                            pars=['alpha', 'beta', 'sigma'],\n                            seed=46576)\n\n    return fitted\n\n# Initialize random number generator\nnp.random.seed(123)\n\n# True parameter values\nalpha, sigma = 1, 0.5\nbeta = [1, 2.5]\n\n# Size of dataset\nsize = 100\n\n# Predictor variable\nX1 = np.random.randn(size)\nX2 = np.random.randn(size) * 0.2\n\n# Simulate outcome variable\nY = alpha + beta[0] * X1 + beta[1] * X2 + np.random.randn(size) * sigma\n\n# run pymc3\nverbose = 2\nwith pymc3.Model(verbose=verbose) as basic_model:\n    # Priors for unknown model parameters\n    alpha = pymc3.Normal('alpha', mu=0, sd=10)\n    beta = pymc3.Normal('beta', mu=0, sd=10, shape=2)\n    sigma = pymc3.Uniform('sigma', lower=0.0, upper=1.0)\n\n    # Expected value of outcome\n    mu = alpha + beta[0]*X1 + beta[1]*X2\n\n    # Likelihood (sampling distribution) of observations\n    Y_obs = pymc3.Normal('Y_obs', mu=mu, sd=sigma, observed=Y)\n\n# now sample\nchains = []\nnames = []\nfor stepper, name in [(pymc3.NUTS, 'pymc3 NUTS'),\n                      (OldNUTS, 'old pymc3 NUTS'),\n                      (pymc3.Metropolis, 'pymc3 Metropolis'),\n                      (pymc3.HamiltonianMC, 'pymc3 HamiltonianMC')]:\n    with basic_model:\n        trace = pymc3.sample(2000, njobs=4, progressbar=bool(verbose),\n                             step=stepper(basic_model.cont_vars),\n                             random_seed=[89, 50, 51, 34])\n\n    chains.append(trace.get_values('sigma', combine=False, burn=1000))\n    names.append(name)\n\n# run STAN\nfitted = run_stan(X1, X2, Y)\nsigma_index = fitted.flatnames.index('sigma')\n_schains = fitted.extract('sigma', permuted=False)[:, :, sigma_index]\nschains = []\nfor i in range(4):\n    schains.append(_schains[:, i])\nchains.append(schains)\nnames.append('STAN NUTS')\n\n# run emcee\n_echains = run_emcee(X1, X2, Y)\nchains.append(_echains)\nnames.append('emcee')\n\n# make the plot\nfig, axs = plt.subplots(nrows=3, ncols=2, sharex=True, figsize=(10, 10))\n\naxs = axs.ravel()\n\nfor ax, chain, name in zip(axs, chains, names):\n    for c in chain:\n        seaborn.kdeplot(c, ax=ax, legend=False)\n    ax.set_title(name)\n\naxs[-2].set_xlabel('sigma')\naxs[-1].set_xlabel('sigma')\n\nfig.tight_layout()\nplt.show()\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1421/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1328", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1328/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1328/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1328/events", "html_url": "https://github.com/pymc-devs/pymc/pull/1328", "id": 175127207, "node_id": "MDExOlB1bGxSZXF1ZXN0ODQwMzkyNTc=", "number": 1328, "title": "PEP8: Optimizing imports and improving the PEP8 compliance of GHME", "user": {"login": "springcoil", "id": 983944, "node_id": "MDQ6VXNlcjk4Mzk0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/983944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/springcoil", "html_url": "https://github.com/springcoil", "followers_url": "https://api.github.com/users/springcoil/followers", "following_url": "https://api.github.com/users/springcoil/following{/other_user}", "gists_url": "https://api.github.com/users/springcoil/gists{/gist_id}", "starred_url": "https://api.github.com/users/springcoil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/springcoil/subscriptions", "organizations_url": "https://api.github.com/users/springcoil/orgs", "repos_url": "https://api.github.com/users/springcoil/repos", "events_url": "https://api.github.com/users/springcoil/events{/privacy}", "received_events_url": "https://api.github.com/users/springcoil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 34672788, "node_id": "MDU6TGFiZWwzNDY3Mjc4OA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/release", "name": "release", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-05T21:03:55Z", "updated_at": "2016-09-06T07:01:27Z", "closed_at": "2016-09-06T07:01:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/1328", "html_url": "https://github.com/pymc-devs/pymc/pull/1328", "diff_url": "https://github.com/pymc-devs/pymc/pull/1328.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/1328.patch", "merged_at": "2016-09-06T07:01:27Z"}, "body": "Fixed up the example and the imports too. \n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1328/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1320", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1320/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1320/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1320/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1320", "id": 175090788, "node_id": "MDU6SXNzdWUxNzUwOTA3ODg=", "number": 1320, "title": "Sporadic test failures", "user": {"login": "ColCarroll", "id": 2295568, "node_id": "MDQ6VXNlcjIyOTU1Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/2295568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColCarroll", "html_url": "https://github.com/ColCarroll", "followers_url": "https://api.github.com/users/ColCarroll/followers", "following_url": "https://api.github.com/users/ColCarroll/following{/other_user}", "gists_url": "https://api.github.com/users/ColCarroll/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColCarroll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColCarroll/subscriptions", "organizations_url": "https://api.github.com/users/ColCarroll/orgs", "repos_url": "https://api.github.com/users/ColCarroll/repos", "events_url": "https://api.github.com/users/ColCarroll/events{/privacy}", "received_events_url": "https://api.github.com/users/ColCarroll/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-05T15:12:58Z", "updated_at": "2016-09-06T09:52:09Z", "closed_at": "2016-09-06T09:52:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Noticed that `test_distributions_random.ScalarParameterSamples` failed on a pull request, but not on the forked branch.  I plan on investigating that, and maybe also trying to speed the tests up a bit.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1320/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1318", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1318/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1318/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1318/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1318", "id": 175089052, "node_id": "MDU6SXNzdWUxNzUwODkwNTI=", "number": 1318, "title": "Clean up code", "user": {"login": "ColCarroll", "id": 2295568, "node_id": "MDQ6VXNlcjIyOTU1Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/2295568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColCarroll", "html_url": "https://github.com/ColCarroll", "followers_url": "https://api.github.com/users/ColCarroll/followers", "following_url": "https://api.github.com/users/ColCarroll/following{/other_user}", "gists_url": "https://api.github.com/users/ColCarroll/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColCarroll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColCarroll/subscriptions", "organizations_url": "https://api.github.com/users/ColCarroll/orgs", "repos_url": "https://api.github.com/users/ColCarroll/repos", "events_url": "https://api.github.com/users/ColCarroll/events{/privacy}", "received_events_url": "https://api.github.com/users/ColCarroll/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 34672788, "node_id": "MDU6TGFiZWwzNDY3Mjc4OA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/release", "name": "release", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-09-05T15:02:50Z", "updated_at": "2016-09-06T23:34:37Z", "closed_at": "2016-09-06T23:34:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In light of #1313, seems like there exist some existing style problems in the code base.  For example, running `flake8 --statistics pymc3` gives over 2000 style problems in 113 files.  Happy to help tackle this however you'd like -- a single diff with all the changes, or just encouraging new contributions to fix these problems along the way.  \n\nFor reference, here are the 10 files with the most warnings:\n\n```\n239 pymc3/tests/test_distributions.py\n151 pymc3/tests/test_distributions_random.py\n95  pymc3/examples/best.py\n73  pymc3/distributions/continuous.py\n61  pymc3/examples/GHME_2013.py\n57  pymc3/__init__.py\n57  pymc3/distributions/__init__.py\n54  pymc3/math.py\n52  pymc3/stats.py\n52  pymc3/distributions/dist_math.py\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1318/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1247", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1247/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1247/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1247/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1247", "id": 166221146, "node_id": "MDU6SXNzdWUxNjYyMjExNDY=", "number": 1247, "title": "Multiprocessing failure", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 49, "created_at": "2016-07-19T00:09:42Z", "updated_at": "2019-01-22T14:19:09Z", "closed_at": "2017-10-03T18:22:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When sampling with Metropolis with multiple cores, the CPUs will suddenly drop to zero and stop processing, causing the model to hang. Here is a screen shot of the behavior:\n\n![screenshot 2016-07-18 19 04 59](https://cloud.githubusercontent.com/assets/81476/16934318/b5f21b2e-4d1a-11e6-8e9a-a64af7d9254d.png)\n\nThis model can be found [here](https://github.com/fonnesbeck/uterine_fibroids_MA/blob/master/UF%20Interventions%20Meta-analysis.ipynb). I have tried this both on my local machine and on a remote cloud computing service (Domino). Running current theano from master.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1247/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1219", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1219/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1219/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1219/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1219", "id": 163468164, "node_id": "MDU6SXNzdWUxNjM0NjgxNjQ=", "number": 1219, "title": "Missing values are assigned `NoDistribution`", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 34672788, "node_id": "MDU6TGFiZWwzNDY3Mjc4OA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/release", "name": "release", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-01T20:24:22Z", "updated_at": "2016-07-01T20:38:37Z", "closed_at": "2016-07-01T20:38:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The current approach to imputing missing values involves creating a stochastic variable with distribution `NoDistribution` and adding it to the list of variables. Unfortunately, this results in a `Metropolis` sampler being assigned to the missing variable, which is not always appropriate. This is the cause of #1218 \n\nThe missing values should be assigned the same distribution as its corresponding non-missing values.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1219/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1126", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1126/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1126/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1126/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1126", "id": 156346708, "node_id": "MDU6SXNzdWUxNTYzNDY3MDg=", "number": 1126, "title": "NUTS is slow", "user": {"login": "alxempirical", "id": 16612448, "node_id": "MDQ6VXNlcjE2NjEyNDQ4", "avatar_url": "https://avatars.githubusercontent.com/u/16612448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alxempirical", "html_url": "https://github.com/alxempirical", "followers_url": "https://api.github.com/users/alxempirical/followers", "following_url": "https://api.github.com/users/alxempirical/following{/other_user}", "gists_url": "https://api.github.com/users/alxempirical/gists{/gist_id}", "starred_url": "https://api.github.com/users/alxempirical/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alxempirical/subscriptions", "organizations_url": "https://api.github.com/users/alxempirical/orgs", "repos_url": "https://api.github.com/users/alxempirical/repos", "events_url": "https://api.github.com/users/alxempirical/events{/privacy}", "received_events_url": "https://api.github.com/users/alxempirical/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 45, "created_at": "2016-05-23T19:21:37Z", "updated_at": "2018-01-13T13:33:28Z", "closed_at": "2018-01-13T13:33:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running the script below with 2,000 samples.  It's surprisingly slow, a bit under 9s / sample under `Python 2.7.11 :: Anaconda custom (x86_64)` on a Mid-2015 MacBook Pro with 2.5GHz CPUs (four of them, but the sampler seems to be single-threaded.)  I'd be grateful for any suggestions about how to speed it up.\n\n``` python\nfrom pymc3 import Model, Normal, Gamma, Lognormal, Exponential, NUTS, sample, find_MAP, traceplot\n\nfrom load_table import walltime, numsims, numconstraints, numtargets\n\n\ndef LogNormalInvGamma(mu, alpha, beta, n, name):\n    tau = Gamma('tau_' + name, alpha=alpha, beta=beta)\n    mu = Normal('mu_' + name, mu=mu, tau=(n * tau))\n    return Lognormal(name, mu=mu, tau=tau)\n\n\nmodel = Model()\n\nwith model:\n\n    # Equation (3) in the doc string.  But remember, comments go stale!\n    C_1 = LogNormalInvGamma(mu=0, alpha=1, beta=1,\n                            n=Exponential('C_1_DOF', 1),\n                            name='constraints')\n\n    # Equation (4)\n    C_2 = LogNormalInvGamma(mu=0, alpha=1, beta=1,\n                            n=Exponential('C_2_DOF', 1),\n                            name='targets')\n\n    # Now we model C_0 as the Lognormal which varies around the rest of\n    # Equation (1) / Equation (5)\n    C_0_mu = (C_1 * numconstraints) + (C_2 * numsims * numtargets)\n    walltime_model = Lognormal('walltime',\n                               mu=C_0_mu,\n                               tau=Gamma('tau_const', 1, 1),  # \ud835\udfbd\u2080 in Equ (2)\n                               observed=walltime)\n\n    # The section below is run in a separate module, which imports the model constructed above.\n    # Probably not relevant, but I don't really know why it's taking so long.\n\n    # Rough computation of MAP for the model.\n    map_estimate = find_MAP(model=model.model, fmin=optimize.fmin_powell)\n\n    # Draw 2,000 posterior samples\n    trace = sample(2000, start=map_estimate)\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1126/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1105", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1105/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1105/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1105/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1105", "id": 154936397, "node_id": "MDU6SXNzdWUxNTQ5MzYzOTc=", "number": 1105, "title": "Still errors with Cox model", "user": {"login": "springcoil", "id": 983944, "node_id": "MDQ6VXNlcjk4Mzk0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/983944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/springcoil", "html_url": "https://github.com/springcoil", "followers_url": "https://api.github.com/users/springcoil/followers", "following_url": "https://api.github.com/users/springcoil/following{/other_user}", "gists_url": "https://api.github.com/users/springcoil/gists{/gist_id}", "starred_url": "https://api.github.com/users/springcoil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/springcoil/subscriptions", "organizations_url": "https://api.github.com/users/springcoil/orgs", "repos_url": "https://api.github.com/users/springcoil/repos", "events_url": "https://api.github.com/users/springcoil/events{/privacy}", "received_events_url": "https://api.github.com/users/springcoil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-15T23:04:00Z", "updated_at": "2016-05-16T18:11:55Z", "closed_at": "2016-05-16T16:58:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried to reproduce this http://nbviewer.jupyter.org/gist/fonnesbeck/1be22dba803645fcc949 and see if the recent changes in advi etc would work - it failed however. \nAny reason why this fails, is there anything we can fix?\ncc @fonnesbeck \n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1105/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1094", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1094/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1094/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1094/events", "html_url": "https://github.com/pymc-devs/pymc/issues/1094", "id": 154757907, "node_id": "MDU6SXNzdWUxNTQ3NTc5MDc=", "number": 1094, "title": "Shape argument passed to an observed variable is ignored", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-13T17:03:19Z", "updated_at": "2020-07-27T09:52:10Z", "closed_at": "2020-07-27T09:52:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If you specify a `shape` argument for an observed variable, this parameter is silently ignored in favor of the shape of the `observed` value. Specifying `shape` should return an error if specified and does not correspond to the passed data.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/1094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/1094/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/801", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/801/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/801/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/801/events", "html_url": "https://github.com/pymc-devs/pymc/issues/801", "id": 101589085, "node_id": "MDU6SXNzdWUxMDE1ODkwODU=", "number": 801, "title": "pymc3 import fails in ipython", "user": {"login": "fretchen", "id": 8323674, "node_id": "MDQ6VXNlcjgzMjM2NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8323674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fretchen", "html_url": "https://github.com/fretchen", "followers_url": "https://api.github.com/users/fretchen/followers", "following_url": "https://api.github.com/users/fretchen/following{/other_user}", "gists_url": "https://api.github.com/users/fretchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/fretchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fretchen/subscriptions", "organizations_url": "https://api.github.com/users/fretchen/orgs", "repos_url": "https://api.github.com/users/fretchen/repos", "events_url": "https://api.github.com/users/fretchen/events{/privacy}", "received_events_url": "https://api.github.com/users/fretchen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2015-08-18T07:22:56Z", "updated_at": "2016-02-11T20:37:17Z", "closed_at": "2015-08-31T08:03:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI tried to follow the tutorial and to run pymc3 in ipython 4.0. It then fails with the Attribute error 'DOMWidget' and the following warning message:\n\n```\nimport pymc3\n/Users/fnj/myPyEnv/lib/python3.4/site-packages/IPython/html.py:14: ShimWarning: The `IPython.html` package has been deprecated. You should import from `notebook` instead. `IPython.html.widgets` has moved to `ipywidgets`.\n  \"`IPython.html.widgets` has moved to `ipywidgets`.\", ShimWarning)\n/Users/fnj/myPyEnv/lib/python3.4/site-packages/IPython/utils/traitlets.py:5: UserWarning: IPython.utils.traitlets has moved to a top-level traitlets package.\n  warn(\"IPython.utils.traitlets has moved to a top-level traitlets package.\")\n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n/Users/fnj/myPyEnv/lib/python3.4/site-packages/IPython/utils/shimmodule.py in __getattr__(self, key)\n     89         try:\n---> 90             return import_item(name)\n     91         except ImportError:\n\n/Users/fnj/myPyEnv/lib/python3.4/site-packages/IPython/utils/importstring.py in import_item(name)\n     30         package, obj = parts\n---> 31         module = __import__(package, fromlist=[obj])\n     32         try:\n\nImportError: No module named 'ipywidgets'\n```\n\nDuring handling of the above exception, another exception occurred:\n\n```\nAttributeError                            Traceback (most recent call last)\n<ipython-input-1-37bf2a3357ff> in <module>()\n----> 1 import pymc3\n\n/Users/fnj/myPyEnv/lib/python3.4/site-packages/pymc3/__init__.py in <module>()\n      7 from .stats import summary\n      8 from .sampling import *\n----> 9 from .interactive_sampling import *\n     10 from .step_methods import *\n     11 from .tuning import *\n\n/Users/fnj/myPyEnv/lib/python3.4/site-packages/pymc3/interactive_sampling.py in <module>()\n     57     \"\"\"\n     58 \n---> 59     class ISampleWidget(widgets.DOMWidget):\n     60         _view_name = Unicode('ISampleWidget', sync=True)\n     61         current_samples = Integer(sync=True)\n\n/Users/fnj/myPyEnv/lib/python3.4/site-packages/IPython/utils/shimmodule.py in __getattr__(self, key)\n     90             return import_item(name)\n     91         except ImportError:\n---> 92             raise AttributeError(key)\n\nAttributeError: DOMWidget\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/801/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/798", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/798/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/798/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/798/events", "html_url": "https://github.com/pymc-devs/pymc/issues/798", "id": 101179977, "node_id": "MDU6SXNzdWUxMDExNzk5Nzc=", "number": 798, "title": "NUTS converging to wrong values in hierarchical model", "user": {"login": "kiudee", "id": 564473, "node_id": "MDQ6VXNlcjU2NDQ3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/564473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiudee", "html_url": "https://github.com/kiudee", "followers_url": "https://api.github.com/users/kiudee/followers", "following_url": "https://api.github.com/users/kiudee/following{/other_user}", "gists_url": "https://api.github.com/users/kiudee/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiudee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiudee/subscriptions", "organizations_url": "https://api.github.com/users/kiudee/orgs", "repos_url": "https://api.github.com/users/kiudee/repos", "events_url": "https://api.github.com/users/kiudee/events{/privacy}", "received_events_url": "https://api.github.com/users/kiudee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-08-15T14:11:13Z", "updated_at": "2015-08-18T18:27:12Z", "closed_at": "2015-08-18T08:46:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the following hierarchical Binomial model the observations have widely different sample sizes (3, 5, 10 ...). The expected behavior is that the parameter of observations with low sample size are shrunk to the shared prior distribution. The synthetic data is generated as follows:\n\n``` python\nimport numpy as np\nimport scipy.stats as st\nthetas = st.beta(8,2).rvs(15)\ntotal = np.array([3, 5, 10, 15, 20, 100, 200, 300, 500, 1000, 1200, 1300, 1500, 2000, 3000])\ndata = np.random.binomial(n=total, p=thetas)\n```\n\nAnd here is a simple pymc3 model:\n\n``` python\nimport pymc3 as pm\nimport scipy.optimize as opt\nwith pm.Model() as model:\n    mu = pm.Beta('mu', alpha=1, beta=1)\n    sd = pm.HalfCauchy('sd', 1)\n    p = pm.Beta('p', mu=mu, sd=sd, shape=15)\n    like = pm.Binomial('like', n=total, p=p, observed=data)\n\n    start = pm.find_MAP(fmin=opt.fmin_l_bfgs_b)\n    step = pm.NUTS(scaling=start)\n    tr = pm.sample(200000, step, start=start)\n```\n\nThe produced traceplot appears to have no kinks `pm.traceplot(tr[10000::100])`:\n![mcmcplot](https://cloud.githubusercontent.com/assets/564473/9289213/4b2811ac-4368-11e5-88c3-d7134a031b22.png)\n\nBut the estimated parameters are far from the true parameters or the global mean, especially for the first observations where the sample size is low:\n\n```\nlist(zip(tr['p'].mean(axis=0), thetas, data, total)):\n[(0.59429747161228141, 0.91144133179704656, 3, 3),\n (0.61329283383894906, 0.85469577301002564, 5, 5),\n (0.61155977297969943, 0.77355772685980384, 8, 10),\n (0.62941342828273406, 0.71355927694781762, 12, 15),\n (0.64396010067724052, 0.63357481433692087, 16, 20),\n (0.78471490407218569, 0.90000639838927843, 87, 100),\n (0.84555262187593117, 0.90784650458678218, 180, 200),\n (0.82619263915705698, 0.8620033015809867, 258, 300),\n (0.83508048878154528, 0.84418494094635788, 428, 500),\n (0.86916210862206567, 0.8828212574343427, 881, 1000),\n (0.65214705145233953, 0.67905418666031125, 786, 1200),\n (0.84470708817840146, 0.87289612086578938, 1109, 1300),\n (0.72716686711391532, 0.72090949555705952, 1097, 1500),\n (0.90930837733972514, 0.92153727881685144, 1832, 2000),\n (0.592667699755555, 0.59795279082587249, 1779, 3000)]\n```\n\nI tried this model in an older version version of pymc3, where the logit transform was not implemented. Although NUTS had a lot of problems to find high density regions, in some cases it converged to the expected posterior distribution. Any ideas where this problem might come from?\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/798/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/798/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/794", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/794/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/794/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/794/events", "html_url": "https://github.com/pymc-devs/pymc/issues/794", "id": 97748740, "node_id": "MDU6SXNzdWU5Nzc0ODc0MA==", "number": 794, "title": "TypeError thrown when running Occupancy Estimation example in tutorial", "user": {"login": "rjchacko", "id": 188353, "node_id": "MDQ6VXNlcjE4ODM1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/188353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rjchacko", "html_url": "https://github.com/rjchacko", "followers_url": "https://api.github.com/users/rjchacko/followers", "following_url": "https://api.github.com/users/rjchacko/following{/other_user}", "gists_url": "https://api.github.com/users/rjchacko/gists{/gist_id}", "starred_url": "https://api.github.com/users/rjchacko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rjchacko/subscriptions", "organizations_url": "https://api.github.com/users/rjchacko/orgs", "repos_url": "https://api.github.com/users/rjchacko/repos", "events_url": "https://api.github.com/users/rjchacko/events{/privacy}", "received_events_url": "https://api.github.com/users/rjchacko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-07-28T16:32:09Z", "updated_at": "2018-12-22T12:08:46Z", "closed_at": "2018-12-22T12:08:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got the following error while trying to follow along with the Occupancy Estimation section of the tutorial. I was using the latest master as of yesterday.:\n\n```\nTypeError: expected type_num 7 (NPY_INT64) got 0\nApply node that caused the error: Elemwise{ge,no_inplace}(z_shared, TensorConstant{(1,) of 0})\nInputs types: [TensorType(int64, vector), TensorType(int8, (True,))]\nInputs shapes: [(100,), (1,)]\nInputs strides: [(1,), (1,)]\nInputs values: ['not shown', array([0], dtype=int8)]\n\nBacktrace when the node is created:\nFile \"/usr/local/lib/python2.7/site-packages/pymc3/distributions/discrete.py\", line 122, in logp\nvalue >= 0, value <= 1,\n\nHINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of  this apply node.\n```\n\nHere's the code from the tutorial. The error gets thrown on the sample step.:\n\n```\nfrom pymc3 import Beta, Bernoulli, ZeroInflatedPoisson, Uniform, Poisson\nfrom pymc3 import Metropolis, BinaryMetropolis, sample\n\ny = np.array([0, 2, 1, 0, 4, 2, 0, 0, 4, 0, 0, 0, 0, 0, 3, 0, 0, 6, 0, 0, 0, 2, 1,\n   2, 0, 0, 0, 1, 0, 0, 0, 4, 2, 0, 0, 0, 1, 0, 2, 4, 0, 0, 1, 0, 0, 0,\n   0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0,\n   0, 0, 3, 0, 2, 0, 1, 2, 2, 2, 2, 3, 0, 0, 0, 0, 1, 0, 3, 1, 0, 0, 0,\n   0, 0, 2, 0, 0, 1, 0, 0])\n\nwith Model() as zip_model:\n    p = Beta('p', 1, 1)\n    z = Bernoulli('z', p, shape=y.shape)\n    theta = Uniform('theta', 0, 100)\n    yd = ZeroInflatedPoisson('y', theta, z, observed=y)\n\nwith zip_model:\n    start = {'p': 0.5, 'z': (y > 0), 'theta': 5, 'yd_missing': np.array([1, 1])}\n    step1 = Metropolis([theta, p])\n    step2 = BinaryMetropolis([z])\n    trace = sample(10000, [step1, step2], start)\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/794/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/658", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/658/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/658/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/658/events", "html_url": "https://github.com/pymc-devs/pymc/issues/658", "id": 51723960, "node_id": "MDU6SXNzdWU1MTcyMzk2MA==", "number": 658, "title": "Binomial variable initialized to negative values", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2014-12-11T18:58:57Z", "updated_at": "2015-06-10T21:55:44Z", "closed_at": "2015-06-10T21:55:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For a relatively simple model, PyMC initializes a binary node to negative values, and hence the sampler gets stuck there. See `n_amman` below; its parameter values (constants) are shown at the top.\n\n![bad binomial](http://d.pr/i/frvj+)\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/658/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/656", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/656/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/656/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/656/events", "html_url": "https://github.com/pymc-devs/pymc/issues/656", "id": 51459492, "node_id": "MDU6SXNzdWU1MTQ1OTQ5Mg==", "number": 656, "title": "Poisson family in glm ", "user": {"login": "mattiabs", "id": 9039386, "node_id": "MDQ6VXNlcjkwMzkzODY=", "avatar_url": "https://avatars.githubusercontent.com/u/9039386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattiabs", "html_url": "https://github.com/mattiabs", "followers_url": "https://api.github.com/users/mattiabs/followers", "following_url": "https://api.github.com/users/mattiabs/following{/other_user}", "gists_url": "https://api.github.com/users/mattiabs/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattiabs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattiabs/subscriptions", "organizations_url": "https://api.github.com/users/mattiabs/orgs", "repos_url": "https://api.github.com/users/mattiabs/repos", "events_url": "https://api.github.com/users/mattiabs/events{/privacy}", "received_events_url": "https://api.github.com/users/mattiabs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2014-12-09T17:51:53Z", "updated_at": "2015-04-28T09:31:52Z", "closed_at": "2015-04-28T06:30:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I\u2019m trying to create a model using glm using the Poisson family. For that, I write:\n\n``` python\nglm.glm('x ~ y', my_data, family=glm.families.Poisson())\n```\n\nbut I got the following error:\n\n``` python\n/Users/mattia/anaconda/envs/pymc_env/lib/python2.7/site-packages/pymc/glm/glm.pyc in glm(*args, **kwargs)\n    149 \n    150     # Create GLM\n--> 151     kwargs['family'] = family.create_statsmodel_family()\n    152 \n    153     y_est, coeffs = linear_component(*args, **kwargs)\n\n/Users/mattia/anaconda/envs/pymc_env/lib/python2.7/site-packages/pymc/glm/families.pyc in create_statsmodel_family(self)\n     71             return None\n     72         else:\n---> 73             return self.sm_family(self.link.sm)\n     74 \n     75     def __repr__(self):\n\n/Users/mattia/anaconda/envs/pymc_env/lib/python2.7/site-packages/pymc/distributions/distribution.pyc in __new__(cls, name, *args, **kwargs)\n     21             return object.__new__(cls) #for pickle\n     22         else:\n---> 23             raise TypeError(\"needed name or None but got: \" + name)\n     24 \n     25     def __getnewargs__(self):\n\nTypeError: cannot concatenate 'str' and 'type' objects\n```\n\nFrom what I found out, the main problem I think is connected to the constructor of a `Distribution` object (called by `sm_family(self.link.sm)` - see above). \n\nI also found that the class `Poisson` is imported twice - one from `statsmodels` and one from pymc/distributions. Which one is used in the case that the statsmodels one doesn\u2019t raise any exception?\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/656/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/655", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/655/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/655/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/655/events", "html_url": "https://github.com/pymc-devs/pymc/issues/655", "id": 51031743, "node_id": "MDU6SXNzdWU1MTAzMTc0Mw==", "number": 655, "title": "Discrete vars in Metropolis sampler", "user": {"login": "hgbrian", "id": 2780402, "node_id": "MDQ6VXNlcjI3ODA0MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2780402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hgbrian", "html_url": "https://github.com/hgbrian", "followers_url": "https://api.github.com/users/hgbrian/followers", "following_url": "https://api.github.com/users/hgbrian/following{/other_user}", "gists_url": "https://api.github.com/users/hgbrian/gists{/gist_id}", "starred_url": "https://api.github.com/users/hgbrian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hgbrian/subscriptions", "organizations_url": "https://api.github.com/users/hgbrian/orgs", "repos_url": "https://api.github.com/users/hgbrian/repos", "events_url": "https://api.github.com/users/hgbrian/events{/privacy}", "received_events_url": "https://api.github.com/users/hgbrian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2014-12-04T21:31:32Z", "updated_at": "2016-09-05T18:34:30Z", "closed_at": "2016-09-05T18:34:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think there is an issue with discrete vars in the Metropolis sampler.\n\nThe following code describes whether or not each of the vars being sampled is discrete\n`self.discrete = np.array([v.dtype in discrete_types for v in vars])`\nSo the expectation is that you will have an array of Trues and Falses representing each var being sampled.\n\nHowever, arraystep submits each var one at a time: i.e. it calls Metropolis([var])\nThen for a discrete var, self.discrete looks like this:\n`np.array([True])`\n\nIn the astep method of Metropolis, the following code is used:\n`delta = np.atleast_1d(self.proposal_dist() * self.scaling)`\nHere I\u2019ll assume self.proposal_dist() returns a 1D array of size 3: e.g., a multinomial, [1,2,3].\n\nThen the following code is called:\n`delta[self.discrete] = round(delta[self.discrete], 0).astype(int)`\nThe intent is to round each discrete var in the list of vars.\nHowever, if self.discrete is size 1 (one var), this does not work, and only the first element in the array is rounded.\n\nBasically, the problem is that numpy pads boolean indexes with Falses.\nI saw a comment suggesting this was undocumented behavior in numpy, but now I can't find it.\n\nHere\u2019s an example of 1D vs 2D indexing.\n\n```\n>>> discrete = np.array([True])\n>>> x1d = np.array([1,2,3])\n>>> x1d[discrete]\narray([1])\n>>> x2d = np.array([[1,2,3]])\n>>> x2d[discrete]\narray([[1, 2, 3]])`\n```\n\nWhat you really want is for x1d[[True]] to just return x1d, as though it was broadcast to x1d[[True,True,True]]\u2026\n\nI am sure there must be a better way to fix this (for example using np.atleast_2d almost works), but this is how I ended up fixing it:\n\n```\nif self.discrete.size == 1: # there is only one var, boolean indexing fails\n    self.discrete = np.repeat(self.discrete, delta.shape[0])\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/655/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/639", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/639/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/639/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/639/events", "html_url": "https://github.com/pymc-devs/pymc/issues/639", "id": 47120284, "node_id": "MDU6SXNzdWU0NzEyMDI4NA==", "number": 639, "title": "find_MAP() tries to compute gradient even when it's not required", "user": {"login": "indiajoe", "id": 2526444, "node_id": "MDQ6VXNlcjI1MjY0NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2526444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/indiajoe", "html_url": "https://github.com/indiajoe", "followers_url": "https://api.github.com/users/indiajoe/followers", "following_url": "https://api.github.com/users/indiajoe/following{/other_user}", "gists_url": "https://api.github.com/users/indiajoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/indiajoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/indiajoe/subscriptions", "organizations_url": "https://api.github.com/users/indiajoe/orgs", "repos_url": "https://api.github.com/users/indiajoe/repos", "events_url": "https://api.github.com/users/indiajoe/events{/privacy}", "received_events_url": "https://api.github.com/users/indiajoe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/8", "html_url": "https://github.com/pymc-devs/pymc/milestone/8", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/8/labels", "id": 1182403, "node_id": "MDk6TWlsZXN0b25lMTE4MjQwMw==", "number": 8, "title": "Version 3.0.stable", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 11, "state": "closed", "created_at": "2015-06-26T10:32:52Z", "updated_at": "2018-01-22T20:55:21Z", "due_on": null, "closed_at": "2018-01-22T20:55:21Z"}, "comments": 22, "created_at": "2014-10-29T08:00:25Z", "updated_at": "2016-11-25T16:16:34Z", "closed_at": "2016-11-25T15:26:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "As per one documentation I read find_MAP() uses Nelder-Mead for minimisation. So I didn't understand why it requires grad()\n\nCode below can reproduce the error.\n\n``` python\nimport numpy as np\nimport scipy.interpolate\nimport pymc as pm\nimport theano.tensor as t\n\n#Predefineing values on two parameter Grid (x,w) for a set of i values.                                              \nidata = np.array([3,5,7,9,11,15])\nsize= 20  #Size of grid\ngridlength = size*size\nGrid = np.empty((gridlength,2+len(idata)))\nfor m in range(size):\n    for a in range(size):\n        Grid[m*size+a,:]= np.array([m,a]+[(m*i + a) for i in idata])  # Straight line model evaluated on grid\n# Create an interpolation for the 2 D data in grid\nDataInterpolator=dict()\nfor c,i in enumerate(idata):\n    DataInterpolator[i]= scipy.interpolate.LinearNDInterpolator(Grid[:,[0,1]],Grid[:,2+c])\n\n# A function to find the value by interpolation in Grid                       \n@pm.theano.compile.ops.as_op(itypes=[t.dscalar, t.dscalar],otypes=[t.dvector])\ndef FindFromGrid(x,w):\n    Yvalues=np.empty(len(idata))\n    for c,i in enumerate(idata):\n        Yvalues[c]= DataInterpolator[i](np.array([x,w]))\n    return Yvalues\n\n#Generate fake Y data with error                                                                                            \nyerror = np.random.normal(loc=0.0, scale=0.5, size=len(idata))\nydata = Grid[16*size+12,2:] + yerror  # ie. True m= 16 and a= 12                                                            \n\n\nwith pm.Model() as model:\n    #Priors                                                                                                                 \n    m = pm.Uniform('m',lower=0,upper= size)\n    a = pm.Uniform('a',lower=0,upper =size)\n\n    #Expected value                                                                                                         \n    y_hat = FindFromGrid(m,a)\n\n    #Data likelihood                                                                                                        \n    ysigmas = np.ones(len(idata))*0.5\n    y_like = pm.Normal('y_like',mu= y_hat, sd=ysigmas, observed=ydata)\n\n    # Inference...                                                                                                          \n    start = pm.find_MAP() # Find starting value by optimization                                                             \n#    start = {'m': 14., 'a': 11.}                                                                                           \n\n    step1 = pm.NUTS(state=start) # Instantiate MCMC sampling algorithm              \n    trace = pm.sample(10000, step1, start=start, progressbar=True)\n```\n## Error output\n\n```\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n/mnt/sda1/JoeFiles/Joe_Home/PythonWorkarea/pyMCMCworks/MyModel_3.py in <module>()\n     87 \n     88     # Inference...\n---> 89     start = pm.find_MAP() # Find starting value by optimization\n     90 #    start = {'m': 14., 'a': 11.}\n     91 \n\n/mnt/sda1/JoeFiles/Joe_Home64/Python4Astronomy/lib/python2.7/site-packages/pymc/tuning/starting.pyc in find_MAP(start, vars, fmin, return_raw, disp, model, *args, **kwargs)\n     67 \n     68     logp = bij.mapf(model.fastlogp)\n---> 69     dlogp = bij.mapf(model.fastdlogp(vars))\n     70 \n     71     def logp_o(point):\n\n/mnt/sda1/JoeFiles/Joe_Home64/Python4Astronomy/lib/python2.7/site-packages/pymc/model.pyc in fastdlogp(self, vars)\n     71     def fastdlogp(self, vars=None):\n     72         \"\"\"Compiled log probability density gradient function\"\"\"\n---> 73         return self.model.fastfn(gradient(self.logpt, vars))\n     74 \n     75     def fastd2logp(self, vars=None):\n\n/mnt/sda1/JoeFiles/Joe_Home64/Python4Astronomy/lib/python2.7/site-packages/pymc/memoize.pyc in memoizer(*args, **kwargs)\n     12 \n     13         if key not in cache:\n---> 14             cache[key] = obj(*args, **kwargs)\n     15 \n     16         return cache[key]\n\n/mnt/sda1/JoeFiles/Joe_Home64/Python4Astronomy/lib/python2.7/site-packages/pymc/theanof.pyc in gradient(f, vars)\n     49         vars = cont_inputs(f)\n     50 \n---> 51     return t.concatenate([gradient1(f, v) for v in vars], axis=0)\n     52 \n     53 \n\n/mnt/sda1/JoeFiles/Joe_Home64/Python4Astronomy/lib/python2.7/site-packages/pymc/theanof.pyc in gradient1(f, v)\n     41 def gradient1(f, v):\n     42     \"\"\"flat gradient of f wrt v\"\"\"\n---> 43     return t.flatten(t.grad(f, v, disconnected_inputs='warn'))\n     44 \n     45 \n\n/mnt/sda1/JoeFiles/Joe_Home64/Python4Astronomy/lib/python2.7/site-packages/theano/gradient.pyc in grad(cost, wrt, consider_constant, disconnected_inputs, add_names, known_grads, return_disconnected)\n    527 \n    528     rval = _populate_grad_dict(var_to_app_to_idx,\n--> 529             grad_dict, wrt, cost_name)\n    530 \n    531     for i in xrange(len(rval)):\n\n/mnt/sda1/JoeFiles/Joe_Home64/Python4Astronomy/lib/python2.7/site-packages/theano/gradient.pyc in _populate_grad_dict(var_to_app_to_idx, grad_dict, wrt, cost_name)\n   1211         return grad_dict[var]\n   1212 \n-> 1213     rval = [access_grad_cache(elem) for elem in wrt]\n   1214 \n   1215     return rval\n\n/mnt/sda1/JoeFiles/Joe_Home64/Python4Astronomy/lib/python2.7/site-packages/theano/gradient.pyc in access_grad_cache(var)\n   1171                     for idx in node_to_idx[node]:\n   1172 \n-> 1173                         term = access_term_cache(node)[idx]\n   1174 \n   1175                         if not isinstance(term, gof.Variable):\n\n/mnt/sda1/JoeFiles/Joe_Home64/Python4Astronomy/lib/python2.7/site-packages/theano/gradient.pyc in access_term_cache(node)\n   1032                                 str(g_shape))\n   1033 \n-> 1034                 input_grads = node.op.grad(inputs, new_output_grads)\n   1035 \n   1036                 if input_grads is None:\n\nAttributeError: 'FromFunctionOp' object has no attribute 'grad'\n```\n\nAlso, Is there any documentation on how to define the attribute grad for my function FindFromGrid so that I can use samplers like NUTS which needs a gradient. I can generate discrete gradients by interpolation in my N dimensional grid, if that is all what NUTS need.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/639/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/632", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/632/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/632/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/632/events", "html_url": "https://github.com/pymc-devs/pymc/issues/632", "id": 46524927, "node_id": "MDU6SXNzdWU0NjUyNDkyNw==", "number": 632, "title": "Using traceplot on trace returned by nbsample raises exception", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2014-10-22T15:40:34Z", "updated_at": "2014-10-29T07:37:56Z", "closed_at": "2014-10-29T03:45:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\n/home/wiecki/working/projects/pymc/pymc/plots.py in traceplot(trace, vars, figsize, lines, combined, grid)\n     46 \n     47     for i, v in enumerate(vars):\n---> 48         for d in trace.get_values(v, combine=combined, squeeze=False):\n     49             d = np.squeeze(d)\n     50             d = make_2d(d)\n\nTypeError: get_values() got an unexpected keyword argument 'combine'\n```\n\n@akloster Any idea? This does not occur if I just use `pm.sample()`.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/632/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/629", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/629/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/629/events", "html_url": "https://github.com/pymc-devs/pymc/issues/629", "id": 46206309, "node_id": "MDU6SXNzdWU0NjIwNjMwOQ==", "number": 629, "title": "Parameter draws (stochastically) out of prior range in Python 3", "user": {"login": "jakevdp", "id": 781659, "node_id": "MDQ6VXNlcjc4MTY1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/781659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakevdp", "html_url": "https://github.com/jakevdp", "followers_url": "https://api.github.com/users/jakevdp/followers", "following_url": "https://api.github.com/users/jakevdp/following{/other_user}", "gists_url": "https://api.github.com/users/jakevdp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakevdp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakevdp/subscriptions", "organizations_url": "https://api.github.com/users/jakevdp/orgs", "repos_url": "https://api.github.com/users/jakevdp/repos", "events_url": "https://api.github.com/users/jakevdp/events{/privacy}", "received_events_url": "https://api.github.com/users/jakevdp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-10-19T13:54:38Z", "updated_at": "2015-02-26T03:41:09Z", "closed_at": "2015-02-26T03:41:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a very strange issue that I can't figure out \u2013 I'm running PyMC 2.3 on Python 3.3. There are two things happening:\n1. Even though I explicitly set the random seed, I get different results each time I run the script\n2. About 50% of the time that I run the script, the draw for the hyperparameter `Pb`, which has a uniform prior between 0 and 1, falls outside the range. If I return zero within the likelihood computation, the computation time increases from ~10s to ~90min (i.e. nearly every draw is being flat-out rejected).\n\nAny idea what the source of the randomness is, and why this parameter is so often drawn outside its prior range? Whenever the draws are correct, I get the same result each time. Whenever the draws are incorrect, it fails essentially immediately.\n\nI haven't been able to reproduce this in Python 2.x.\n\nHere's a stripped-down version of the code:\n\n``` python\nimport numpy as np\nimport pymc\n\nprint(\"pymc version\", pymc.__version__)\n\nnp.random.seed(0)\n\nxi = np.random.random(10)\ndyi = np.random.random(10)\nyi = np.random.normal(2 * xi, dyi)\n\n# We're doing a linear fit with a background. Pb is the nuisance parameter\n# which specifies the probability that points are drawn from a normal\n# distribution N(Yb, sigmab^2).\n\n# uniform prior on Pb, the fraction of bad points\nPb = pymc.Uniform('Pb', 0, 1.0, value=0.1)\n\n# uniform prior on Yb, the centroid of the outlier distribution\nYb = pymc.Uniform('Yb', -10000, 10000, value=0)\n\n# uniform prior on log(sigmab), the spread of the outlier distribution\nlog_sigmab = pymc.Uniform('log_sigmab', -10, 10, value=5)\n\n# define priors on beta = (slope, intercept)\n@pymc.stochastic\ndef beta_M1(value=np.array([2., 100.])):\n    \"\"\"Slope and intercept parameters for a straight line.\n    The likelihood corresponds to the prior probability of the parameters.\"\"\"\n    slope, intercept = value\n    prob_intercept = 1 + 0 * intercept\n    # uniform prior on theta = arctan(slope)\n    # d[arctan(x)]/dx = 1 / (1 + x^2)\n    prob_slope = np.log(1. / (1. + slope ** 2))\n    return prob_intercept + prob_slope\n\n\n@pymc.deterministic\ndef model_M1(xi=xi, beta=beta_M1):\n    slope, intercept = beta\n    return slope * xi + intercept\n\n\n@pymc.deterministic\ndef sigmab(log_sigmab=log_sigmab):\n    return np.exp(log_sigmab)\n\n\n# set up the expression for likelihood\ndef mixture_likelihood(yi, model, dyi, Pb, Yb, sigmab):\n    if (Pb < 0) or (Pb > 1):\n        print(\"error: Pb =\", Pb)\n        raise ValueError(\"Pb out of range\")\n\n    Vi = dyi ** 2\n    Vb = sigmab ** 2\n\n    root2pi = np.sqrt(2 * np.pi)\n\n    L_in = (1. / root2pi / dyi\n            * np.exp(-0.5 * (yi - model) ** 2 / Vi))\n\n    L_out = (1. / root2pi / np.sqrt(Vi + Vb)\n             * np.exp(-0.5 * (yi - Yb) ** 2 / (Vi + Vb)))\n\n    return np.sum(np.log((1 - Pb) * L_in + Pb * L_out))\n\nMixtureNormal = pymc.stochastic_from_dist('mixturenormal',\n                                          logp=mixture_likelihood,\n                                          dtype=np.float,\n                                          mv=True)\n\ny_mixture = MixtureNormal('y_mixture', model=model_M1, dyi=dyi,\n                          Pb=Pb, Yb=Yb, sigmab=sigmab,\n                          observed=True, value=yi)\n\nM = dict(y_mixture=y_mixture, beta_M1=beta_M1, model_M1=model_M1,\n         Pb=Pb, Yb=Yb, log_sigmab=log_sigmab, sigmab=sigmab)\n\nS = pymc.MCMC(M)\nS.sample(iter=25000, burn=5000)\n```\n\nThe output when it works:\n\n```\npymc version 2.3.3\n[-----------------100%-----------------] 25000 of 25000 complete in 9.6 sec\n```\n\nThe output the rest of the time:\n\n```\npymc version 2.3.3\nerror: Pb = -0.8636627605010293\nTraceback (most recent call last):\n  File \"tmp.py\", line 87, in <module>\n    S.sample(iter=25000, burn=5000)\n  File \"/Users/jakevdp/anaconda/envs/py3k/lib/python3.3/site-packages/pymc/MCMC.py\", line 277, in sample\n    Sampler.sample(self, iter, length, verbose)\n  File \"/Users/jakevdp/anaconda/envs/py3k/lib/python3.3/site-packages/pymc/Model.py\", line 251, in sample\n    self._loop()\n  File \"/Users/jakevdp/anaconda/envs/py3k/lib/python3.3/site-packages/pymc/MCMC.py\", line 313, in _loop\n    step_method.step()\n  File \"/Users/jakevdp/anaconda/envs/py3k/lib/python3.3/site-packages/pymc/StepMethods.py\", line 1967, in step\n    while(J > 0 and logy < self.fll(L)):\n  File \"/Users/jakevdp/anaconda/envs/py3k/lib/python3.3/site-packages/pymc/StepMethods.py\", line 1998, in fll\n    ll = self.loglike\n  File \"/Users/jakevdp/anaconda/envs/py3k/lib/python3.3/site-packages/pymc/StepMethods.py\", line 302, in loglike\n    sum = logp_of_set(self.children)\n  File \"/Users/jakevdp/anaconda/envs/py3k/lib/python3.3/site-packages/pymc/Node.py\", line 39, in logp_of_set\n    six.reraise(*exc)\n  File \"/Users/jakevdp/anaconda/envs/py3k/lib/python3.3/site-packages/pymc/six.py\", line 619, in reraise\n    raise value\n  File \"/Users/jakevdp/anaconda/envs/py3k/lib/python3.3/site-packages/pymc/Node.py\", line 30, in logp_of_set\n    logp += obj.logp\n  File \"/Users/jakevdp/anaconda/envs/py3k/lib/python3.3/site-packages/pymc/PyMCObjects.py\", line 907, in get_logp\n    logp = self._logp.get()\n  File \"LazyFunction.pyx\", line 280, in pymc.LazyFunction.LazyFunction.get (pymc/LazyFunction.c:2568)\n  File \"/Users/jakevdp/anaconda/envs/py3k/lib/python3.3/site-packages/pymc/distributions.py\", line 2977, in wrapper\n    return f(value, **kwds)\n  File \"tmp.py\", line 59, in mixture_likelihood\n    raise ValueError(\"Pb out of range\")\nValueError: Pb out of range\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/629/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/627", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/627/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/627/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/627/events", "html_url": "https://github.com/pymc-devs/pymc/issues/627", "id": 46142462, "node_id": "MDU6SXNzdWU0NjE0MjQ2Mg==", "number": 627, "title": "Binary variable gets assigned poisson proposal distribution", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-10-17T20:46:27Z", "updated_at": "2015-02-26T12:36:03Z", "closed_at": "2015-02-26T12:36:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This was mentioned by Tom Minka here: http://stats.stackexchange.com/questions/120028/2-gaussian-mixture-model-inference-with-mcmc-and-pymc\n\n`For category, the default proposal_distribution = 'Poisson' which gives poor results (I don't know why this is, but it certainly doesn't sound like a sensible proposal for a binary variable).`\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/627/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/624", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/624/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/624/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/624/events", "html_url": "https://github.com/pymc-devs/pymc/issues/624", "id": 46006338, "node_id": "MDU6SXNzdWU0NjAwNjMzOA==", "number": 624, "title": "Compilation error for large number of categorical features", "user": {"login": "wcbeard", "id": 379413, "node_id": "MDQ6VXNlcjM3OTQxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/379413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wcbeard", "html_url": "https://github.com/wcbeard", "followers_url": "https://api.github.com/users/wcbeard/followers", "following_url": "https://api.github.com/users/wcbeard/following{/other_user}", "gists_url": "https://api.github.com/users/wcbeard/gists{/gist_id}", "starred_url": "https://api.github.com/users/wcbeard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wcbeard/subscriptions", "organizations_url": "https://api.github.com/users/wcbeard/orgs", "repos_url": "https://api.github.com/users/wcbeard/repos", "events_url": "https://api.github.com/users/wcbeard/events{/privacy}", "received_events_url": "https://api.github.com/users/wcbeard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2014-10-16T16:24:46Z", "updated_at": "2019-12-05T06:01:09Z", "closed_at": "2019-12-05T06:01:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if using a large number of categorical variables is an abuse of pymc, or if I'm just doing it wrong. I've reproduced the error with synthetic data with 500 possible string values for feature `X` (though the error appears with fewer values, like 250). I'm using the `glm` module with the following model, which I can get working in statsmodels: `glm('Y ~ C(X)'`:\n\n```\nimport itertools as it\nimport string\n\ndef f(st):\n    return ord(st[0]) + ord(st[1]) + np.random.randn()\n\nwds = map(''.join, it.islice(it.permutations(string.ascii_uppercase, 2), 500))\nwd_dat = np.random.choice(wds, 5000)\ny = map(f, wd_dat)\n\ndata = pd.DataFrame(dict(Y=y, X=wd_dat))\ndata[:4]\nOut[49]:\n    X           Y\n0  JA  139.636050\n1  GU  156.806869\n2  FZ  161.310029\n3  HU  157.979341\n```\n\nWhen I try to run the following model\n\n```\nwith mc.Model() as model:\n    mc.glm.glm('Y ~ C(X)', data)\n    trace = mc.sample(2000, mc.NUTS(), progressbar=True)\n```\n\nI get `Exception: ('Compilation failed (return status=1): /Users/me/.theano/compiledir_Darwin-13.3.0-x86_64-i386-64bit-i386-2.7.8-64/tmp_cmBr5/mod.cpp:28159:32: fatal error: bracket nesting level exceeded maximum of 256.`\n[full trace here](https://gist.github.com/d10genes/b970338c65aa60a9341c).\n\nIs this expected?\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/624/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/615", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/615/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/615/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/615/events", "html_url": "https://github.com/pymc-devs/pymc/issues/615", "id": 45443073, "node_id": "MDU6SXNzdWU0NTQ0MzA3Mw==", "number": 615, "title": "Theano module warning", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-10-10T03:30:42Z", "updated_at": "2014-12-02T23:55:40Z", "closed_at": "2014-12-02T23:55:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "From the current master branch of Theano, I am now getting the following warning when importing PyMC:\n\n```\n/Users/fonnescj/GitHub/pymc/pymc/distributions/multivariate.py:3: UserWarning: theano modules are     deprecated and will be removed in release 0.7\n  from theano.sandbox.linalg import det, solve, matrix_inverse, trace\n```\n\nIt looks like these functions are available in either `theano.tensor.slinalg` or `then.tensor.nlinalg`.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/615/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/613", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/613/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/613/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/613/events", "html_url": "https://github.com/pymc-devs/pymc/issues/613", "id": 45306053, "node_id": "MDU6SXNzdWU0NTMwNjA1Mw==", "number": 613, "title": "test() fails due to Theano as_op", "user": {"login": "esafak", "id": 3928300, "node_id": "MDQ6VXNlcjM5MjgzMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/3928300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esafak", "html_url": "https://github.com/esafak", "followers_url": "https://api.github.com/users/esafak/followers", "following_url": "https://api.github.com/users/esafak/following{/other_user}", "gists_url": "https://api.github.com/users/esafak/gists{/gist_id}", "starred_url": "https://api.github.com/users/esafak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esafak/subscriptions", "organizations_url": "https://api.github.com/users/esafak/orgs", "repos_url": "https://api.github.com/users/esafak/repos", "events_url": "https://api.github.com/users/esafak/events{/privacy}", "received_events_url": "https://api.github.com/users/esafak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "kyleam", "id": 1297788, "node_id": "MDQ6VXNlcjEyOTc3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleam", "html_url": "https://github.com/kyleam", "followers_url": "https://api.github.com/users/kyleam/followers", "following_url": "https://api.github.com/users/kyleam/following{/other_user}", "gists_url": "https://api.github.com/users/kyleam/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleam/subscriptions", "organizations_url": "https://api.github.com/users/kyleam/orgs", "repos_url": "https://api.github.com/users/kyleam/repos", "events_url": "https://api.github.com/users/kyleam/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleam/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kyleam", "id": 1297788, "node_id": "MDQ6VXNlcjEyOTc3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleam", "html_url": "https://github.com/kyleam", "followers_url": "https://api.github.com/users/kyleam/followers", "following_url": "https://api.github.com/users/kyleam/following{/other_user}", "gists_url": "https://api.github.com/users/kyleam/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleam/subscriptions", "organizations_url": "https://api.github.com/users/kyleam/orgs", "repos_url": "https://api.github.com/users/kyleam/repos", "events_url": "https://api.github.com/users/kyleam/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleam/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2014-10-08T22:35:03Z", "updated_at": "2014-10-09T16:18:36Z", "closed_at": "2014-10-09T16:15:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "The tail of my test() output is\n\n```\nERROR: pymc.tests.test_examples.test_examples1('pymc.examples.disaster_model_arbitrary_determinisitc',)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/emre/.local/lib/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/home/emre/.local/lib/python3.3/site-packages/pymc/tests/test_examples.py\", line 13, in check_example\n    example = __import__(example_name, fromlist='dummy')\n  File \"/home/emre/.local/lib/python3.3/site-packages/pymc/examples/disaster_model_arbitrary_determinisitc.py\", line 27, in <module>\n    @theano.compile.ops.as_op(itypes=[t.lscalar, t.dscalar, t.dscalar],otypes=[t.dvector])\nAttributeError: 'module' object has no attribute 'as_op'\n\n----------------------------------------------------------------------\nRan 280 tests in 1371.962s\n\nFAILED (SKIP=2, errors=1)\n<nose.result.TextTestResult run=280 errors=1 failures=0>\n```\n\nTheano 0.6 test() passes with only \"known errors\".\n\nP.S. The test name, \"pymc.examples.disaster_model_arbitrary_determinisitc\" contains a typo.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/613/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/604", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/604/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/604/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/604/events", "html_url": "https://github.com/pymc-devs/pymc/issues/604", "id": 42694431, "node_id": "MDU6SXNzdWU0MjY5NDQzMQ==", "number": 604, "title": "Categorical variable always zero", "user": {"login": "kiudee", "id": 564473, "node_id": "MDQ6VXNlcjU2NDQ3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/564473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiudee", "html_url": "https://github.com/kiudee", "followers_url": "https://api.github.com/users/kiudee/followers", "following_url": "https://api.github.com/users/kiudee/following{/other_user}", "gists_url": "https://api.github.com/users/kiudee/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiudee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiudee/subscriptions", "organizations_url": "https://api.github.com/users/kiudee/orgs", "repos_url": "https://api.github.com/users/kiudee/repos", "events_url": "https://api.github.com/users/kiudee/events{/privacy}", "received_events_url": "https://api.github.com/users/kiudee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-09-13T12:05:34Z", "updated_at": "2015-06-03T00:42:42Z", "closed_at": "2015-06-03T00:42:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I\u2019m currently implementing a Dirichlet process model in PyMC 3 and got the stick-breaking process to\nwork using the new theano decorator `as_op`:\n\n``` python\n    @theano.compile.ops.as_op(itypes=[t.dvector],otypes=[t.dvector])\n    def pFunc(v):\n        out = empty(n_dp)\n        out[:] = [u * np.prod(1 - v[:i]) for i, u in enumerate(v)]\n        out[-1] = 1 - np.sum(out[:-1])\n        return out\n\n    with pm.Model() as mod:\n        # DP:\n        conc = Uniform('concentration', lower=0.3, upper=10)\n        v = Beta('v', alpha=1, beta=conc, shape=n_dp)\n        p = pm.Deterministic('p', pFunc(v))\n        category = Categorical('category', p, shape=n_algs)\n\n        # Hyperpriors for Baseline distributions:\n        mean_mu = Normal('mean_mu', mu=45, sd=100)\n        mean_sigma = Uniform('mean_sigma', lower=0, upper=100)\n        baseline = Normal('baseline', mu=mean_mu, tau=mean_sigma**-2, shape=n_dp)\n\n        E_dp = pm.Deterministic('E_dp', t.dot(p, baseline))\n        eps = pm.Uniform('eps', lower=0, upper=100)\n        time_like = pm.Normal('time_like', mu=baseline[category][alg_idx], tau=eps**-2,\n                              observed=data.time)\n```\n\nFurthermore I sample the variables as follows:\n\n``` python\n    with mod:\n        step2 = pm.Metropolis([v, category])\n        step1 = pm.NUTS([conc, mean_mu, mean_sigma, baseline, eps])\n        trace = pm.sample(1000, step=[step1, step2])\n```\n\nThe theano operator works as intended and the trace for `p` shows probability mass on several components:\n![Trace for variable `p`](https://cloud.githubusercontent.com/assets/564473/4260442/18c2bcfa-3b3d-11e4-9787-b9ee8742af57.png)\n\nBut the `Categorical` variable always assumes the value zero.\nCould this be a problem because of using several step methods at once or is there some bug elsewhere?\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/604/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/602", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/602/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/602/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/602/events", "html_url": "https://github.com/pymc-devs/pymc/issues/602", "id": 41975573, "node_id": "MDU6SXNzdWU0MTk3NTU3Mw==", "number": 602, "title": "Instantiating variable using `Model.Var` generates exception from `numpy.prod`", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-09-04T19:28:10Z", "updated_at": "2014-09-05T20:16:40Z", "closed_at": "2014-09-05T20:16:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm interested in instantiating a series of variables using `Model.Var` because the variable names are in a long list. For example:\n\n```\nwith Model() as model:\n    for name in names:\n        model.Var(name, Normal(name, 0, 1))\n```\n\nHowever, this instantiation results in an odd error from NumPy:\n\nwith pm.Model() as model:\n\n```\nmodel.Var('beta', pm.Gamma('beta', 1, 0.1))\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-25-760338040906> in <module>()\n      6     # Calculate transmission rate\n      7     #beta = Gamma('beta', 1, 0.1)\n----> 8     model.Var('beta', pm.Gamma('beta', 1, 0.1))\n\n/Users/fonnescj/GitHub/pymc/pymc/model.pyc in Var(self, name, dist, data)\n    141         \"\"\"\n    142         if data is None:\n--> 143             var = FreeRV(name=name, distribution=dist, model=self)\n    144             self.free_RVs.append(var)\n    145         else:\n\n/Users/fonnescj/GitHub/pymc/pymc/model.pyc in __init__(self, type, owner, index, name, distribution, model)\n    316         if distribution is not None:\n    317             self.dshape = tuple(distribution.shape)\n--> 318             self.dsize = int(np.prod(distribution.shape))\n    319             self.distribution = distribution\n    320             self.tag.test_value = np.ones(\n\n/usr/local/lib/python2.7/site-packages/numpy/core/fromnumeric.pyc in prod(a, axis, dtype, out, keepdims)\n   2338             return _methods._prod(a, axis=axis, dtype=dtype,\n   2339                                 out=out, keepdims=keepdims)\n-> 2340         return prod(axis=axis, dtype=dtype, out=out)\n   2341     else:\n   2342         return _methods._prod(a, axis=axis, dtype=dtype,\n\nTypeError: prod() got an unexpected keyword argument 'out'\n```\n\nThis is odd since we appear to only be passing a single argument to `prod`.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/602/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/596", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/596/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/596/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/596/events", "html_url": "https://github.com/pymc-devs/pymc/issues/596", "id": 41312838, "node_id": "MDU6SXNzdWU0MTMxMjgzOA==", "number": 596, "title": "Mark Recapture Model not sampling correctly in PyMC3", "user": {"login": "bjedwards", "id": 726274, "node_id": "MDQ6VXNlcjcyNjI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/726274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjedwards", "html_url": "https://github.com/bjedwards", "followers_url": "https://api.github.com/users/bjedwards/followers", "following_url": "https://api.github.com/users/bjedwards/following{/other_user}", "gists_url": "https://api.github.com/users/bjedwards/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjedwards/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjedwards/subscriptions", "organizations_url": "https://api.github.com/users/bjedwards/orgs", "repos_url": "https://api.github.com/users/bjedwards/repos", "events_url": "https://api.github.com/users/bjedwards/events{/privacy}", "received_events_url": "https://api.github.com/users/bjedwards/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-27T18:09:49Z", "updated_at": "2015-06-05T22:29:17Z", "closed_at": "2015-06-05T22:29:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was trying to convert the [Mark Recapture](https://github.com/pymc-devs/pymc/wiki/Mt) model from pymc2 to pymc3, and don't think pymc3 is sampling the observation probabilities correctly (or I didn't convert the model correctly).\n\nThe [pymc2 version](http://nbviewer.ipython.org/gist/bjedwards/7c6b6961b9b33d3bc86d) seems to work correctly, and matches OpenBUGS well enough.\n\nI think there is a mistake in the original Link and Barker model (the observations are out of order, see `f`). \n\nWhen I converted [it to pymc3](http://nbviewer.ipython.org/gist/bjedwards/09609c23ec4d0c70f3b0), it doesn't seem like the samples converge and `p[1]` is never altered when sampling.\n\nMoreover, I seem to only be able to use the `Metropolis` sampler on `p`. I get weird errors:\n\n``` python\nAttributeError: 'ProdWithoutZeros' object has no attribute 'grad'\n```\n\nIs this a bug or did I specify the model incorrectly?\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/596/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/589", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/589/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/589/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/589/events", "html_url": "https://github.com/pymc-devs/pymc/issues/589", "id": 40695228, "node_id": "MDU6SXNzdWU0MDY5NTIyOA==", "number": 589, "title": "Regression in 2.3.3 - problems sampling two Bernoulli variables", "user": {"login": "iwd32900", "id": 1726701, "node_id": "MDQ6VXNlcjE3MjY3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1726701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iwd32900", "html_url": "https://github.com/iwd32900", "followers_url": "https://api.github.com/users/iwd32900/followers", "following_url": "https://api.github.com/users/iwd32900/following{/other_user}", "gists_url": "https://api.github.com/users/iwd32900/gists{/gist_id}", "starred_url": "https://api.github.com/users/iwd32900/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iwd32900/subscriptions", "organizations_url": "https://api.github.com/users/iwd32900/orgs", "repos_url": "https://api.github.com/users/iwd32900/repos", "events_url": "https://api.github.com/users/iwd32900/events{/privacy}", "received_events_url": "https://api.github.com/users/iwd32900/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-08-20T12:57:52Z", "updated_at": "2015-02-26T03:42:09Z", "closed_at": "2015-02-26T03:42:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a bug that affects 2.3.3 but not 2.3.2, at least as packaged by Anaconda 2.0.0 on 64-bit Linux Mint 17 (an Ubuntu derivative).  Posted on Stack Overflow as http://stackoverflow.com/questions/25392831/comparing-two-biased-coins-newbie-example-from-kruschke-book, but reproduced below for your reference.\n\nThere are really two bugs here:  first, 2.3.3 gives the wrong answer for some classes of model.  Second, there's a caching behavior across iPython notebooks that I don't understand, which may or may not be an actual bug, but is certainly unexpected.\n\n---\n\nI'm an absolute newbie to Bayesian stats and MCMC, so I'm working my way through \"Doing Bayesian Data Analysis: A Tutorial with R and BUGS\" by John Kruschke.  To test my understanding, I'm trying to translate his examples from BUGS to PyMC.\n\nIn Ch. 8, he observes a sequence of flips from each of two (potentially biased) coins, and tries to estimate the difference their biases.  Below the bias for each coin is `theta`, and the observed flips are `y`:\n\n```\nimport numpy as np\nimport pymc\npriorA = 3\npriorB = 3\ntheta1 = pymc.Beta('theta1', alpha=priorA, beta=priorB)\ntheta2 = pymc.Beta('theta2', alpha=priorA, beta=priorB)\ny1 = pymc.Bernoulli('y1', p=theta1, value=np.array([1,1,1,1,1,0,0]), observed=True)\ny2 = pymc.Bernoulli('y2', p=theta2, value=np.array([1,1,0,0,0,0,0]), observed=True)\n```\n\nThe two coins are independent, of course.  If I simulate them separately, then look at the difference in thetas, I get the same answer as the book.  (It also agrees with the analytical solution and integration over a grid.)\n\n```\nm1 = pymc.MCMC([y1, theta1])\nm1.sample(iter=10000, burn=1000, thin=2)\nm2 = pymc.MCMC([y2, theta2])\nm2.sample(iter=10000, burn=1000, thin=2)\ndt = m1.trace('theta1')[:] - m2.trace('theta2')[:]\nprint np.average(dt), pymc.utils.hpd(dt, alpha=0.05)\n#0.23098692189 [-0.15303663  0.55686801]\n```\n\nIf, on the other hand, I try to simulate the two coins at the same time, as part of the same model, I get a fairly different answer, in poor agreement with any other method.\n\n```\nmodel = pymc.MCMC([y1, theta1, y2, theta2])\nmodel.sample(iter=10000, burn=1000, thin=2)\ndt = model.trace('theta1')[:] - model.trace('theta2')[:]\nprint np.average(dt), pymc.utils.hpd(dt, alpha=0.05)\n#0.330061191424 [-0.09999254  0.7190196 ]\n```\n\nSo my first question is, why?  From what little I understand of the theory, my wild guess would be that MCMC is having a hard time exploring the two-parameter model adequately.  (However, BUGS seems to handle it just fine.)\n\nThe really weird thing is that I've been doing all this in an iPython notebook, and there appears to be a bug in PyMC.  If I run the independent coins model, restart my kernel (Kernel | Restart or File | Close and Halt), and then run the joint coins model, the joint coins will produce an answer similar (but not identical) to the independent coins (average dtheta ~ 0.23).  If I run the models in the opposite order (restarting the kernel in between), they both produce the (incorrect) answer from the joint coins model, average dtheta ~ 0.33.  I can only get the two models to produce different answers if I completely shut down my iPython notebook server in between.  Since this would also unload all shared libraries from memory, I expect it means that the Fortran/C part of PyMC is caching something from these models in a memory location that's shared across Python interpreter instances.  Versions are Numpy 1.8.2, PyMC 2.3.3, Python 2.7.8, iPython 2.1.0, Anaconda 2.0.0.\n\nI'd really appreciate any help in understanding what's going on here.  I realize these are silly, trivial models, but the odd behavior of PyMC is not inspiring confidence at the moment!\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/589/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/588", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/588/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/588/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/588/events", "html_url": "https://github.com/pymc-devs/pymc/issues/588", "id": 40628723, "node_id": "MDU6SXNzdWU0MDYyODcyMw==", "number": 588, "title": "Frequent ZeroProbability error using TruncatedNormal in pymc 2.3.3 but not 2.3.2 or 2.2", "user": {"login": "dmcnamee", "id": 1034011, "node_id": "MDQ6VXNlcjEwMzQwMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1034011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmcnamee", "html_url": "https://github.com/dmcnamee", "followers_url": "https://api.github.com/users/dmcnamee/followers", "following_url": "https://api.github.com/users/dmcnamee/following{/other_user}", "gists_url": "https://api.github.com/users/dmcnamee/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmcnamee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmcnamee/subscriptions", "organizations_url": "https://api.github.com/users/dmcnamee/orgs", "repos_url": "https://api.github.com/users/dmcnamee/repos", "events_url": "https://api.github.com/users/dmcnamee/events{/privacy}", "received_events_url": "https://api.github.com/users/dmcnamee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-08-19T19:41:51Z", "updated_at": "2014-08-21T05:21:16Z", "closed_at": "2014-08-21T02:20:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\nimport numpy as np\nimport pymc as pm\ninit = 0.5; minv = 0.; maxv = 1.\nA = pm.Uniform('A', value=init, lower=minv, upper=maxv)\nB = pm.TruncatedNormal('B', value=init, mu=A, tau=1., a=minv, b=maxv)\nC = pm.Normal('C', value=np.random.normal(init,1,10), mu=B, tau=1., observed=True)\nmodel = pm.MCMC(pm.Model([A, B, C]))\nmodel.sample(1000)\n```\n\nnearly always throws the following error:\n\n```\npymc.Node.ZeroProbability: Stochastic B's value is outside its support,\n or it forbids its parents' current values.\n```\n\nI believe this example is minimal since if I remove A or C it seems to work (at least, it works a lot more frequently). This only seems to occur in pymc v2.3.3.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/588/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/555", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/555/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/555/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/555/events", "html_url": "https://github.com/pymc-devs/pymc/issues/555", "id": 36633260, "node_id": "MDU6SXNzdWUzNjYzMzI2MA==", "number": 555, "title": "Stalling NUTS", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/8", "html_url": "https://github.com/pymc-devs/pymc/milestone/8", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/8/labels", "id": 1182403, "node_id": "MDk6TWlsZXN0b25lMTE4MjQwMw==", "number": 8, "title": "Version 3.0.stable", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 11, "state": "closed", "created_at": "2015-06-26T10:32:52Z", "updated_at": "2018-01-22T20:55:21Z", "due_on": null, "closed_at": "2018-01-22T20:55:21Z"}, "comments": 18, "created_at": "2014-06-27T03:24:37Z", "updated_at": "2016-11-28T09:19:58Z", "closed_at": "2016-11-28T09:19:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "An issue that keeps cropping up in PyMC 3, particularly with larger models, is that NUTS tends to stall. For example:\n\n![stalled](http://d.pr/i/A0OD+)\n\nYou can see that it takes several minutes just to get a few dozen iterations, and sometimes it stalls without recovering. I assume this is the `NUTS` step method being stuck in the `while` loop. We probably need to be able to break out of that if the algorithm isn't working.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/555/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/555/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/552", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/552/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/552/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/552/events", "html_url": "https://github.com/pymc-devs/pymc/issues/552", "id": 36176595, "node_id": "MDU6SXNzdWUzNjE3NjU5NQ==", "number": 552, "title": "Issues finding valid starting values for models under HMC", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/8", "html_url": "https://github.com/pymc-devs/pymc/milestone/8", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/8/labels", "id": 1182403, "node_id": "MDk6TWlsZXN0b25lMTE4MjQwMw==", "number": 8, "title": "Version 3.0.stable", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 11, "state": "closed", "created_at": "2015-06-26T10:32:52Z", "updated_at": "2018-01-22T20:55:21Z", "due_on": null, "closed_at": "2018-01-22T20:55:21Z"}, "comments": 11, "created_at": "2014-06-20T15:23:52Z", "updated_at": "2016-09-29T13:58:45Z", "closed_at": "2016-09-29T13:58:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In [this notebook](http://nbviewer.ipython.org/gist/fonnesbeck/04f5da535d71c8377df6), I'm calling `find_map` to get a starting point for the model, but you will notice it fails with a `ValueError`:\n\n```\nOptimization error: max, logp or dlogp at max have non-finite values. Some values may be outside of distribution support\n```\n\nFor some reason the Gamma stochastic has a test point of an array of zeros, which are invalid for this distribution. \n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/552/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/539", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/539/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/539/events", "html_url": "https://github.com/pymc-devs/pymc/issues/539", "id": 32723060, "node_id": "MDU6SXNzdWUzMjcyMzA2MA==", "number": 539, "title": "Parameterizing a vector-valued variable with an indexed variable fails", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-02T20:25:22Z", "updated_at": "2014-05-02T20:41:31Z", "closed_at": "2014-05-02T20:41:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I have a model where I am pulling out particular values of a vector-valued variable and using them as an argument for another vector-valued variable; specifically, I am pulling out the appropriate group mean from a vector of means in order to parametrize the likelihood:\n\n```\nwith pm.Model() as model:\n\n    mu = pm.Normal('mu', 0, 0.001, shape=3)\n    sigma = pm.Uniform('sigma', 0, 100)\n    tau = sigma**-2\n\n    # Study means\n    m = pm.MvNormal('m', mu, TT.eye(3)*tau, shape=(len(unique_studies), 3))\n\n    # Index out appropriate means\n    theta = m[study_id, outcome_id]\n\n    # Likelihood\n    d = pm.Normal('d', theta, sd=change_se, observed=change_mean)\n```\n\nHowever, this fails with:\n\n```\nAsTensorError: ('Cannot convert [Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0\\n Elemwise{mul,no_inplace}.0 Elemwise{mul,no_inplace}.0] to TensorType', <type 'numpy.ndarray'>)\n```\n\nThe same error arises if I try specifying `d` as unobserved.\n\nSince we cannot loop easily in PyMC 3, I regard this sort of functionality as essential, so hopefully this can be made to work.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/539/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/538", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/538/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/538/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/538/events", "html_url": "https://github.com/pymc-devs/pymc/issues/538", "id": 32718774, "node_id": "MDU6SXNzdWUzMjcxODc3NA==", "number": 538, "title": "Wishart fails with valid arguments", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2014-05-02T19:27:22Z", "updated_at": "2016-06-15T18:24:02Z", "closed_at": "2016-06-15T18:24:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Models that use the Wishart as a prior currently fail with valid parameters. For example,\n\n```\ns = pm.Wishart('s', 4, 3, np.eye(3))\n```\n\nFails with the following:\n\n```\nTypeError: Wrong number of dimensions: expected 0, got 2 with shape (3, 3)\n```\n\nI've tried a variety of 3x3 matrices, but all yield similar errors.\n\nPS - I have a pull request that removed the redundant second parameter.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/538/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/522", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/522/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/522/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/522/events", "html_url": "https://github.com/pymc-devs/pymc/issues/522", "id": 30818349, "node_id": "MDU6SXNzdWUzMDgxODM0OQ==", "number": 522, "title": "Named Deterministics not being added to trace when sampling with psample", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-04-03T22:06:51Z", "updated_at": "2015-02-12T20:41:12Z", "closed_at": "2015-02-12T20:41:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When running a model with `psample`, any named deterministics (via `Deterministic`) do not end up in the trace. Works as expected under `sample`.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/522/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/520", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/520/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/520/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/520/events", "html_url": "https://github.com/pymc-devs/pymc/issues/520", "id": 30712332, "node_id": "MDU6SXNzdWUzMDcxMjMzMg==", "number": 520, "title": "Homebrew Installed PYMC2.3", "user": {"login": "pnkelly", "id": 7141062, "node_id": "MDQ6VXNlcjcxNDEwNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/7141062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkelly", "html_url": "https://github.com/pnkelly", "followers_url": "https://api.github.com/users/pnkelly/followers", "following_url": "https://api.github.com/users/pnkelly/following{/other_user}", "gists_url": "https://api.github.com/users/pnkelly/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkelly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkelly/subscriptions", "organizations_url": "https://api.github.com/users/pnkelly/orgs", "repos_url": "https://api.github.com/users/pnkelly/repos", "events_url": "https://api.github.com/users/pnkelly/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkelly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-04-02T18:24:54Z", "updated_at": "2014-07-01T14:39:14Z", "closed_at": "2014-07-01T14:39:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have just installed pymc using home-brew: pip install pymc. \nI am going through the tutorial found here: https://github.com/pymc-devs/pymc/tree/2.3,\nand this line has failed: pymc.Matplot.plot(S).\n\nThe error is:\n\n```\nln [5]: pymc.Matplot.plot(S)\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-5-b825c264da3f> in <module>()\n----> 1 pymc.Matplot.plot(S)\n\nAttributeError: 'module' object has no attribute 'Matplot'\n```\n\nIs the homebrew'ed option out of date? Why was I able to import pymc without Matplot?\n\nThanks!\n\nedit -- this is an home-brew matplotlib issue, not pymc.\nedit -- matplotlib now imports without error, the Attribute Error has not gone away. \n\nHere is the output of pymc.test(), what happened?\n\n```\nIn [4]: pymc.test()\nRunning unit tests for pymc.tests\nNumPy version 1.8.1\nNumPy is installed in /usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/numpy\nPython version 2.7.6 (default, Mar 26 2014, 10:17:18) [GCC 4.2.1 Compatible Apple LLVM 5.1 (clang-503.0.38)]\nnose version 1.3.0\nPlotting disabled\n..S.S..S........EEEE..S.............S............................................................................................................SS......E............./usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pymc/tests/test_utils.py:15: RuntimeWarning: invalid value encountered in sqrt\n  C = Lambda('C', lambda b=B: sqrt(b))\n.........\n======================================================================\nERROR: test_simple (pymc.tests.test_convergence.test_gelman_rubin)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pymc/tests/test_convergence.py\", line 94, in test_simple\n    gr = pymc.gelman_rubin(S2)\nAttributeError: 'module' object has no attribute 'gelman_rubin'\n\n======================================================================\nERROR: test_independent (pymc.tests.test_convergence.test_geweke)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pymc/tests/test_convergence.py\", line 56, in test_independent\n    x = [pymc.geweke(np.random.normal(size=1000), intervals=5)[0][1] for _ in range(10000)]\nAttributeError: 'module' object has no attribute 'geweke'\n\n======================================================================\nERROR: test_simple (pymc.tests.test_convergence.test_geweke)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pymc/tests/test_convergence.py\", line 69, in test_simple\n    scores = pymc.geweke(S, intervals=intervals)\nAttributeError: 'module' object has no attribute 'geweke'\n\n======================================================================\nERROR: test_simple (pymc.tests.test_convergence.test_iat)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pymc/tests/test_convergence.py\", line 104, in test_simple\n    iat = pymc.iat(x)\nAttributeError: 'module' object has no attribute 'iat'\n\n======================================================================\nERROR: Failure: ImportError (No module named six)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/nose/loader.py\", line 413, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/nose/importer.py\", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/nose/importer.py\", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n  File \"/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pymc/tests/test_missing.py\", line 1, in <module>\n    from pymc import rnormal, Normal, MCMC, Uniform, Matplot, Metropolis\n  File \"/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pymc/Matplot.py\", line 14, in <module>\n    from pylab import hist, plot as pyplot, xlabel, ylabel, xlim, ylim, savefig, acorr, mlab\n  File \"/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pylab.py\", line 1, in <module>\n    from matplotlib.pylab import *\n  File \"/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/matplotlib/pylab.py\", line 226, in <module>\n    import matplotlib.finance\n  File \"/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/matplotlib/finance.py\", line 21, in <module>\n    from matplotlib.dates import date2num\n  File \"/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/matplotlib/dates.py\", line 119, in <module>\n    from dateutil.rrule import (rrule, MO, TU, WE, TH, FR, SA, SU, YEARLY,\n  File \"/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/rrule.py\", line 18, in <module>\n    from six import advance_iterator, integer_types\nImportError: No module named six\n\n----------------------------------------------------------------------\nRan 175 tests in 6.105s\n\nFAILED (SKIP=7, errors=5)\nOut[4]: <nose.result.TextTestResult run=175 errors=5 failures=0>\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/520/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/488", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/488/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/488/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/488/events", "html_url": "https://github.com/pymc-devs/pymc/issues/488", "id": 27310431, "node_id": "MDU6SXNzdWUyNzMxMDQzMQ==", "number": 488, "title": "IndexErrors in forestplot and traceplot", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-02-10T23:12:09Z", "updated_at": "2014-10-24T14:53:56Z", "closed_at": "2014-02-26T22:48:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Neither `traceplot` nor `forestplot` works anymore in master.\n\n```\n======================================================================\nERROR: pymc.tests.test_plots.test_plots\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Library/Python/2.7/site-packages/nose-1.2.1-py2.7.egg/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"/Users/fonnescj/Code/pymc/pymc/tests/test_plots.py\", line 20, in test_plots\n    forestplot(trace)\n  File \"/Users/fonnescj/Code/pymc/pymc/plots.py\", line 329, in forestplot\n    trace_quantiles = quantiles(tr, qlist)\n  File \"/Users/fonnescj/Code/pymc/pymc/stats.py\", line 41, in wrapped_f\n    return {v: f(pymc_obj[v][burn:], *args, **kwargs) for v in vars}\n  File \"/Users/fonnescj/Code/pymc/pymc/stats.py\", line 41, in <dictcomp>\n    return {v: f(pymc_obj[v][burn:], *args, **kwargs) for v in vars}\n  File \"/Users/fonnescj/Code/pymc/pymc/trace.py\", line 45, in __getitem__\n    return self.point(index_value)\n  File \"/Users/fonnescj/Code/pymc/pymc/trace.py\", line 57, in point\n    return dict((k, v.value[index]) for (k, v) in self.samples.items())\n  File \"/Users/fonnescj/Code/pymc/pymc/trace.py\", line 57, in <genexpr>\n    return dict((k, v.value[index]) for (k, v) in self.samples.items())\nIndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\n-------------------- >> begin captured stdout << ---------------------\n[-----------------97%----------------- ] 2930 of 3000 complete in 0.5 sec\n[-----------------100%-----------------] 3000 of 3000 complete in 0.5 sec\n\n--------------------- >> end captured stdout << ----------------------\n\n======================================================================\nERROR: pymc.tests.test_plots.test_multichain_plots\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Library/Python/2.7/site-packages/nose-1.2.1-py2.7.egg/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"/Users/fonnescj/Code/pymc/pymc/tests/test_plots.py\", line 36, in test_multichain_plots\n    forestplot(ptrace, vars=['early_mean', 'late_mean'])\n  File \"/Users/fonnescj/Code/pymc/pymc/plots.py\", line 290, in forestplot\n    R = gelman_rubin(trace_obj)\n  File \"/Users/fonnescj/Code/pymc/pymc/diagnostics.py\", line 163, in gelman_rubin\n    x = np.array([mtrace.traces[i][var] for i in range(m)])\n  File \"/Users/fonnescj/Code/pymc/pymc/trace.py\", line 45, in __getitem__\n    return self.point(index_value)\n  File \"/Users/fonnescj/Code/pymc/pymc/trace.py\", line 57, in point\n    return dict((k, v.value[index]) for (k, v) in self.samples.items())\n  File \"/Users/fonnescj/Code/pymc/pymc/trace.py\", line 57, in <genexpr>\n    return dict((k, v.value[index]) for (k, v) in self.samples.items())\nIndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\n\n----------------------------------------------------------------------\nRan 2 tests in 44.915s\n\nFAILED (errors=2)\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/488/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/486", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/486/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/486/events", "html_url": "https://github.com/pymc-devs/pymc/issues/486", "id": 27300877, "node_id": "MDU6SXNzdWUyNzMwMDg3Nw==", "number": 486, "title": "glm.plot_posterior_predictive fails when covariates are not named \"x\"", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2014-02-10T21:14:27Z", "updated_at": "2019-04-08T12:23:20Z", "closed_at": "2018-09-23T14:27:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`plot_posterior_predictive` generates a KeyError when models' independent variables are not called `x`. The name is hard-coded into the function.\n\n```\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n<ipython-input-88-ee71b8754a08> in <module>()\n----> 1 glm.plot_posterior_predictive(trace)\n\n/Users/fonnescj/Code/pymc/pymc/glm/glm.pyc in plot_posterior_predictive(trace, eval, lm, samples, **kwargs)\n    195     for rand_loc in np.random.randint(0, len(trace), samples):\n    196         rand_sample = trace[rand_loc]\n--> 197         plt.plot(eval, lm(eval, rand_sample), **kwargs)\n    198         # Make sure to not plot label multiple times\n    199         kwargs.pop('label', None)\n\n/Users/fonnescj/Code/pymc/pymc/glm/glm.pyc in <lambda>(x, sample)\n    182 \n    183     if lm is None:\n--> 184         lm = lambda x, sample: sample['Intercept'] + sample['x'] * x\n    185 \n    186     if eval is None:\n\nKeyError: 'x'\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/486/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/477", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/477/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/477/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/477/events", "html_url": "https://github.com/pymc-devs/pymc/issues/477", "id": 26550057, "node_id": "MDU6SXNzdWUyNjU1MDA1Nw==", "number": 477, "title": "HMC unable to handle impossible parameter values", "user": {"login": "jangevaare", "id": 5422422, "node_id": "MDQ6VXNlcjU0MjI0MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/5422422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jangevaare", "html_url": "https://github.com/jangevaare", "followers_url": "https://api.github.com/users/jangevaare/followers", "following_url": "https://api.github.com/users/jangevaare/following{/other_user}", "gists_url": "https://api.github.com/users/jangevaare/gists{/gist_id}", "starred_url": "https://api.github.com/users/jangevaare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jangevaare/subscriptions", "organizations_url": "https://api.github.com/users/jangevaare/orgs", "repos_url": "https://api.github.com/users/jangevaare/repos", "events_url": "https://api.github.com/users/jangevaare/events{/privacy}", "received_events_url": "https://api.github.com/users/jangevaare/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-01-29T20:17:47Z", "updated_at": "2016-11-28T09:23:04Z", "closed_at": "2016-11-28T09:23:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "from @jsalvatier in https://github.com/pymc-devs/pymc/issues/472\n\n> As for the exception, it looks like HMC is trying some impossible values\n> for the model. It should be able to handle those. Would you open an issue\n> about that? Maybe there's a way in theano to have linalg exceptions return\n> nan's or something like that. Otherwise, perhaps we want to wrap the calls\n> to theano to catch LinalgExceptions.\n\nLooked around a bit, doesn't seem like it is an option currently to have theano return nan's instead of the numpy's linalg exception... Use/creation of an optional wrapper was mentioned here https://groups.google.com/forum/#!topic/theano-dev/B3K8_CR8TmM , but it doesn't look like that ended up happening.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/477/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/456", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/456/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/456/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/456/events", "html_url": "https://github.com/pymc-devs/pymc/issues/456", "id": 25520515, "node_id": "MDU6SXNzdWUyNTUyMDUxNQ==", "number": 456, "title": "Stochastic's `observed` argument does not accept tuples", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "jsalvatier", "id": 270513, "node_id": "MDQ6VXNlcjI3MDUxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/270513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsalvatier", "html_url": "https://github.com/jsalvatier", "followers_url": "https://api.github.com/users/jsalvatier/followers", "following_url": "https://api.github.com/users/jsalvatier/following{/other_user}", "gists_url": "https://api.github.com/users/jsalvatier/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsalvatier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsalvatier/subscriptions", "organizations_url": "https://api.github.com/users/jsalvatier/orgs", "repos_url": "https://api.github.com/users/jsalvatier/repos", "events_url": "https://api.github.com/users/jsalvatier/events{/privacy}", "received_events_url": "https://api.github.com/users/jsalvatier/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsalvatier", "id": 270513, "node_id": "MDQ6VXNlcjI3MDUxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/270513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsalvatier", "html_url": "https://github.com/jsalvatier", "followers_url": "https://api.github.com/users/jsalvatier/followers", "following_url": "https://api.github.com/users/jsalvatier/following{/other_user}", "gists_url": "https://api.github.com/users/jsalvatier/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsalvatier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsalvatier/subscriptions", "organizations_url": "https://api.github.com/users/jsalvatier/orgs", "repos_url": "https://api.github.com/users/jsalvatier/repos", "events_url": "https://api.github.com/users/jsalvatier/events{/privacy}", "received_events_url": "https://api.github.com/users/jsalvatier/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/7", "html_url": "https://github.com/pymc-devs/pymc/milestone/7", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/7/labels", "id": 432681, "node_id": "MDk6TWlsZXN0b25lNDMyNjgx", "number": 7, "title": "Version 3.0.beta", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 14, "state": "closed", "created_at": "2013-09-20T16:57:28Z", "updated_at": "2015-06-26T10:34:29Z", "due_on": null, "closed_at": "2015-06-26T10:34:29Z"}, "comments": 14, "created_at": "2014-01-13T19:15:02Z", "updated_at": "2015-06-07T22:30:41Z", "closed_at": "2015-06-07T22:30:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Passing a tuple (rather than a NumPy array) to a stochastic as the `observed` value results in a TypeError. We should be able to pass lists and tuples of data.\n\nHere is an example:\n\n```\nfrom pymc import Model, Normal, Uniform, sample, NUTS, Deterministic\n\npost_op_stool = 0.19,0.24,0.29,0.32,0.44,0.44\nstoma_output = 0.33,0.36,0.42,0.44,0.44,0.49,0.52\ntissue_adherent = 0.5,0.52\n\nwith Model() as model:\n\n    sigma = Uniform('sigma', 0, 100)\n    tau = Deterministic('tau', sigma ** -2)\n\n    mu_po = Normal('mu_po', 0, 0.001)\n    mu_so = Normal('mu_so', 0, 0.001)\n    mu_ta = Normal('mu_ta', 0, 0.001)\n\n    y_po = Normal('y_po', mu_po, tau, observed=post_op_stool)\n    y_so = Normal('y_so', mu_so, tau, observed=stoma_output)\n    y_ta = Normal('y_ta', mu_ta, tau, observed=tissue_adherent)\n\n    diff_so_po = Deterministic('diff_so_po', mu_so - mu_po)\n    diff_ta_po = Deterministic('diff_ta_po', mu_ta - mu_po)\n```\n\nResults in:\n\n```\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-31-82417f5a4deb> in <module>()\n     14     mu_ta = Normal('mu_ta', 0, 0.001)\n     15 \n---> 16     y_po = Normal('y_po', mu_po, tau, observed=post_op_stool)\n     17     y_so = Normal('y_so', mu_so, tau, observed=stoma_output)\n     18     y_ta = Normal('y_ta', mu_ta, tau, observed=tissue_adherent)\n\n/Users/fonnescj/Code/pymc/pymc/distributions/distribution.pyc in __new__(cls, name, *args, **kwargs)\n     17             data = kwargs.pop('observed', None)\n     18             dist = cls.dist(*args, **kwargs)\n---> 19             return model.Var(name, dist, data)\n     20         elif name is None:\n     21             return object.__new__(cls) #for pickle\n\n/Users/fonnescj/Code/pymc/pymc/model.pyc in Var(self, name, dist, data)\n    145             self.free_RVs.append(var)\n    146         else:\n--> 147             var = ObservedRV(name=name, data=data, distribution=dist, model=self)\n    148             self.observed_RVs.append(var)\n    149         self.add_random_variable(var)\n\n/Users/fonnescj/Code/pymc/pymc/model.pyc in __init__(self, name, data, distribution, model)\n    355             args = [t.constant(args[0], name=name)]\n    356 \n--> 357         self.logp_elemwiset = distribution.logp(*args)\n    358         self.model = model\n    359 \n\nTypeError: logp() takes exactly 2 arguments (3 given)\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/456/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/455", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/455/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/455/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/455/events", "html_url": "https://github.com/pymc-devs/pymc/issues/455", "id": 25520322, "node_id": "MDU6SXNzdWUyNTUyMDMyMg==", "number": 455, "title": "model.deterministics does not get populated", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-01-13T19:11:52Z", "updated_at": "2015-05-27T03:12:00Z", "closed_at": "2015-05-26T20:50:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Adding a deterministic to a model (via `Deterministic`) does not add the resulting object to `model.deterministics` and therefore its trace does not get saved.\n\nIn the following example, `model.deterministics` is an empty list, despite three in the model:\n\n```\nfrom pymc import Model, Normal, Uniform, sample, NUTS, Deterministic\n\npost_op_stool = 0.19,0.24,0.29,0.32,0.44,0.44\nstoma_output = 0.33,0.36,0.42,0.44,0.44,0.49,0.52\ntissue_adherent = 0.5,0.52\n\nwith Model() as model:\n\n    sigma = Uniform('sigma', 0, 100)\n    tau = Deterministic('tau', sigma ** -2)\n\n    mu_po = Normal('mu_po', 0, 0.001)\n    mu_so = Normal('mu_so', 0, 0.001)\n    mu_ta = Normal('mu_ta', 0, 0.001)\n\n    y_po = Normal('y_po', mu_po, tau, observed=np.array(post_op_stool))\n    y_so = Normal('y_so', mu_so, tau, observed=np.array(stoma_output))\n    y_ta = Normal('y_ta', mu_ta, tau, observed=np.array(tissue_adherent))\n\n    diff_so_po = Deterministic('diff_so_po', mu_so - mu_po)\n    diff_ta_po = Deterministic('diff_ta_po', mu_ta - mu_po)\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/455/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/444", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/444/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/444/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/444/events", "html_url": "https://github.com/pymc-devs/pymc/issues/444", "id": 25044311, "node_id": "MDU6SXNzdWUyNTA0NDMxMQ==", "number": 444, "title": "Test failures on win-amd64-py3.3", "user": {"login": "cgohlke", "id": 483428, "node_id": "MDQ6VXNlcjQ4MzQyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/483428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgohlke", "html_url": "https://github.com/cgohlke", "followers_url": "https://api.github.com/users/cgohlke/followers", "following_url": "https://api.github.com/users/cgohlke/following{/other_user}", "gists_url": "https://api.github.com/users/cgohlke/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgohlke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgohlke/subscriptions", "organizations_url": "https://api.github.com/users/cgohlke/orgs", "repos_url": "https://api.github.com/users/cgohlke/repos", "events_url": "https://api.github.com/users/cgohlke/events{/privacy}", "received_events_url": "https://api.github.com/users/cgohlke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 34672788, "node_id": "MDU6TGFiZWwzNDY3Mjc4OA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/release", "name": "release", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-01-04T00:35:25Z", "updated_at": "2014-01-06T02:20:55Z", "closed_at": "2014-01-06T02:20:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following tests fail for PyMC 2.3 (built from the git branch with msvc10 and Intel Fortran&MKL) on `win-amd64-py3.3` and  `win-amd64-3.4b1` (64 bit builds). The 32 bit builds for Python 3.3 and 3.4, and all builds for Python 2.6 to 3.2 (using msvc9) test OK.\n\n```\nRunning unit tests for pymc.tests\nNumPy version 1.8.0\nNumPy is installed in X:\\Python33\\lib\\site-packages\\numpy\nPython version 3.3.3 (v3.3.3:c3896275c0f6, Nov 18 2013, 21:19:30) [MSC v.1600 64 bit (AMD64)]\nnose version 1.3.0\n\n<snip>\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_beta)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 366, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([  2.37015648e-01,   1.19904062e+00,   2.03944501e+00,\n         2.27232938e+00,   1.93510412e+00,   1.30081243e+00,\n         6.69149143e-01,   2.36175448e-01,   4.27293655e-02,\n         1.53209815e-03])\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_cauchy)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n       False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 457, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,\n        nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([ 0.00174311,  0.00215185,  0.00272319,  0.00355634,  0.00483952,\n        0.00696626,  0.01087639,  0.01929766,  0.04307708,  0.15732132,\n        0.50837813,  0.15732132,  0.04307708,  0.01929766,  0.01087639,...\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_chi2)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 495, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([ 0.35988871,  0.16914584,  0.07949767,  0.0373635 ,  0.01756065,\n        0.00825342,  0.00387906,  0.00182314,  0.00085687,  0.00040272])\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_exponential)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 547, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([  2.70181553e+00,   1.08286948e+00,   4.34006798e-01,\n         1.73947003e-01,   6.97167881e-02,   2.79420194e-02,\n         1.11989733e-02,   4.48847312e-03,   1.79894981e-03,\n         7.21006977e-04])\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_exponweib)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 615, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([  1.85065654e-02,   1.41500344e-01,   2.83940258e-01,\n         2.81956349e-01,   1.73821592e-01,   7.46559472e-02,\n         2.38870957e-02,   5.90899090e-03,   1.15067856e-03,\n         1.77806695e-04])\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_gamma)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 640, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([  2.50594679e-01,   5.17560080e-01,   3.49925010e-01,\n         1.64135587e-01,   6.44428812e-02,   2.27766643e-02,\n         7.51024020e-03,   2.35732419e-03,   7.13199593e-04,\n         2.09711815e-04])\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_gev)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n       False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 690, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,\n        nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([  1.28030684e-02,   8.72150190e-02,   1.17516388e-01,\n         8.15340059e-02,   4.47737978e-02,   2.30142679e-02,\n         1.17918352e-02,   6.16266771e-03,   3.31021117e-03,...\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_half_normal)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 727, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([ 0.55218417,  0.48105921,  0.36338235,  0.23799992,  0.13515526,\n        0.06654666,  0.02840857,  0.01051462,  0.00337403,  0.00093865])\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_inverse_gamma)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 760, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([  1.66121138e-02,   1.42038309e-04,   3.48307505e-05,\n         1.44951453e-05,   7.61680945e-06,   4.57523151e-06,\n         2.99875155e-06,   2.09024145e-06,   1.52525917e-06,\n         1.15313807e-06])\n\n======================================================================\nFAIL: test_consistency_with_gamma (pymc.tests.test_distributions.test_inverse_gamma)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 773, in test_consistency_with_gamma\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([  7.04392710e-02,   9.08637935e-04,   2.25947747e-04,\n         9.45076767e-05,   4.97939907e-05,   2.99596878e-05,\n         1.96587981e-05,   1.37142187e-05,   1.00136106e-05,\n         7.57430268e-06])\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_laplace)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 559, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([  3.46474617e-04,   1.74335804e-03,   8.77206329e-03,\n         4.41384343e-02,   1.68240499e-01,   6.91388397e-02,\n         1.37406387e-02,   2.73081169e-03,   5.42720951e-04,\n         1.07860250e-04])\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_logistic)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 571, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([  1.11426340e-05,   7.63074127e-05,   5.21545822e-04,\n         3.51738816e-03,   2.17501028e-02,   8.61625882e-02,\n         1.05857200e-01,   3.48344889e-02,   6.03745718e-03,\n         9.05488970e-04])\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_lognormal)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 803, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([  2.56787273e-03,   8.87247836e-05,   2.05653804e-05,\n         7.59123716e-06,   3.51143667e-06,   1.86246690e-06,\n         1.08403822e-06,   6.75116129e-07,   4.42739516e-07,\n         3.02456335e-07])\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_noncentral_t)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 595, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([  1.12568622e-04,   4.72855423e-04,   2.84302434e-03,\n         2.46038705e-02,   1.30013284e-01,   9.24508630e-02,\n         1.24930580e-02,   1.57374913e-03,   2.95203511e-04,\n         7.67791819e-05])\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_normal)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 917, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([  2.53483910e-04,   3.50077541e-03,   2.60542770e-02,\n         1.04824547e-01,   2.28576150e-01,   2.70568908e-01,\n         1.73924883e-01,   6.06561279e-02,   1.14528953e-02,\n         1.16743786e-03])\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_pareto)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 954, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([  5.85198138e-01,   5.41174587e-02,   1.01329470e-02,\n         2.76314657e-03,   9.53872457e-04,   3.87366457e-04,\n         1.77180342e-04,   8.87613617e-05,   4.77812469e-05,\n         2.72646334e-05])\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_skew_normal)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 1056, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([ 0.00239468,  0.01143746,  0.04476614,  0.14359639,  0.37752205,\n        0.81352836,  1.43699655,  2.07067085,  1.84338554,  0.28769847])\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_t)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 583, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([ 0.00048423,  0.00180696,  0.00888653,  0.05616524,  0.26207744,\n        0.28930072,  0.06914653,  0.01082547,  0.002129  ,  0.00055475])\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_truncated_pareto)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 973, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([ 1.51297587,  1.03598969,  0.72554936,  0.51839975,  0.37707134,\n        0.27871378,  0.20902501,  0.15884161,  0.12216704,  0.09500108])\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_truncnorm)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 1087, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([ 0.3487416 ,  0.44857299,  0.4636193 ,  0.38502614,  0.25692827,\n        0.13775603,  0.05934202,  0.02053692,  0.00570941,  0.00127493])\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_von_mises)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 936, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([ 0.23380925,  0.1901076 ,  0.14087014,  0.10672979,  0.09222184,\n        0.09635793,  0.11961323,  0.16185965,  0.21224132,  0.24331905])\n\n======================================================================\nFAIL: test_consistency (pymc.tests.test_distributions.test_weibull)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 581, in chk_same_position\n    assert_array_equal(x_id, y_id)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 718, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 644, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True], dtype=bool)\n y: array([False, False, False, False, False, False, False, False, False, False], dtype=bool)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"X:\\Python33\\lib\\site-packages\\pymc\\tests\\test_distributions.py\", line 1134, in test_consistency\n    assert_array_almost_equal(hist, like, 1)\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 811, in assert_array_almost_equal\n    header=('Arrays are not almost equal to %d decimals' % decimal))\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 607, in assert_array_compare\n    chk_same_position(x_isnan, y_isnan, hasval='nan')\n  File \"X:\\Python33\\lib\\site-packages\\numpy\\testing\\utils.py\", line 587, in chk_same_position\n    raise AssertionError(msg)\nAssertionError:\nArrays are not almost equal to 1 decimals\n\nx and y nan location mismatch:\n x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n y: array([  9.91003068e-02,   2.51544846e-01,   2.73916179e-01,\n         1.99816789e-01,   1.07122071e-01,   4.37241916e-02,\n         1.38251503e-02,   3.41935799e-03,   6.65492800e-04,\n         1.02321719e-04])\n\n----------------------------------------------------------------------\nRan 182 tests in 17.755s\n\nFAILED (SKIP=3, failures=22)\nClosing remaining open files: testresults\\ND.hdf5... done testresults\\Disaster.hdf5... done\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/444/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/430", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/430/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/430/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/430/events", "html_url": "https://github.com/pymc-devs/pymc/issues/430", "id": 24721182, "node_id": "MDU6SXNzdWUyNDcyMTE4Mg==", "number": 430, "title": "Loading Tutorial notebook fails", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-12-23T19:43:37Z", "updated_at": "2014-01-14T14:55:59Z", "closed_at": "2014-01-14T14:55:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I get a \"Bad Request\" failure when I try to load it in a recent build of IPython.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/430/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/426", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/426/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/426/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/426/events", "html_url": "https://github.com/pymc-devs/pymc/issues/426", "id": 24583868, "node_id": "MDU6SXNzdWUyNDU4Mzg2OA==", "number": 426, "title": "Runaway Theano warnings during/after sampling", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-12-19T20:02:34Z", "updated_at": "2015-06-03T01:08:32Z", "closed_at": "2015-06-03T01:08:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm getting some pretty bizarre behavior when trying to run a model with the current master. I am running (what appears to be) a pretty straightforward model:\n\n```\n with Model() as model:\n\n            # Mean PDGT10\n            theta = Normal('alpha', 0, 0.001)\n\n            # Season covariates\n            phi = Normal('theta', 0, 0.001, shape=len(sma_dataset.season.unique()))\n\n            # Season mean\n            mu = tinvlogit([(theta, theta + phi[s-1])[s>0] for s in sma_dataset.season])\n\n            # Variance\n            var = Gamma('var', 1, 1)\n\n            # Convert to beta parameters\n            alpha = mu * (mu*(1-mu)/var - 1)\n            beta = (1 - mu) * (mu*(1-mu)/var - 1)\n\n            # Likelihood\n            pdgt10 = Beta('pdgt10', alpha, beta, observed=y)\n\n            start = model.test_point\n            step = NUTS()\n\n            tr = psample(iterations, step, start=start) \n```\n\nBut when I sample, I get a continuous stream of what appears to be warning output (assuming because of the pink background) that consists of hundreds of thousands of lines of C code. I've posted a screen shot because it still hasn't finished printing. I'm assuming this is a Theano thing, but its pretty awful. Anyone have any idea what this is about?\n\n![error](http://f.cl.ly/items/3j0d303e1a013007192p/Screen%20Shot%202013-12-19%20at%2012.19.38%20PM.png)\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/426/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/425", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/425/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/425/events", "html_url": "https://github.com/pymc-devs/pymc/issues/425", "id": 24539271, "node_id": "MDU6SXNzdWUyNDUzOTI3MQ==", "number": 425, "title": "Stochastic volatility example does not run", "user": {"login": "ecod3r", "id": 1567341, "node_id": "MDQ6VXNlcjE1NjczNDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1567341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecod3r", "html_url": "https://github.com/ecod3r", "followers_url": "https://api.github.com/users/ecod3r/followers", "following_url": "https://api.github.com/users/ecod3r/following{/other_user}", "gists_url": "https://api.github.com/users/ecod3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecod3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecod3r/subscriptions", "organizations_url": "https://api.github.com/users/ecod3r/orgs", "repos_url": "https://api.github.com/users/ecod3r/repos", "events_url": "https://api.github.com/users/ecod3r/events{/privacy}", "received_events_url": "https://api.github.com/users/ecod3r/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2013-12-19T06:32:53Z", "updated_at": "2015-02-12T20:44:33Z", "closed_at": "2015-02-12T20:44:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the latest Anaconda (and inclyding the required DYLD_FALLBACK_LIBRARY_PATH) on OS X 10.9.1 yields\n\n``` python\nfrom scan_perform.scan_perform import *\nTraceback (most recent call last):\n  File \"stochastic_volatility.py\", line 113, in <module>\n    step = NUTS(model.vars, hessian(start, 6))\n  File \"stochastic_volatility.py\", line 84, in hessian\n    h = H(Point(point))\n  File \"/Users/eu/anaconda/lib/python2.7/site-packages/pymc/point.py\", line 9, in __call__\n    return self.f(**state)\n  File \"/Users/eu/anaconda/lib/python2.7/site-packages/theano/compile/function_module.py\", line 565, in __call__\n    self.inv_finder[c]))\nTypeError: Missing required input: log_sigma\n```\n\nFor the sake of clarity, I am running\n\n``` bash\npython stochastic_volatility.py\n```\n\nrather than the IPython notebook\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/425/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/424", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/424/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/424/events", "html_url": "https://github.com/pymc-devs/pymc/issues/424", "id": 24513959, "node_id": "MDU6SXNzdWUyNDUxMzk1OQ==", "number": 424, "title": "traceplot breaks on bad chains", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/7", "html_url": "https://github.com/pymc-devs/pymc/milestone/7", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/7/labels", "id": 432681, "node_id": "MDk6TWlsZXN0b25lNDMyNjgx", "number": 7, "title": "Version 3.0.beta", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 14, "state": "closed", "created_at": "2013-09-20T16:57:28Z", "updated_at": "2015-06-26T10:34:29Z", "due_on": null, "closed_at": "2015-06-26T10:34:29Z"}, "comments": 1, "created_at": "2013-12-18T19:50:06Z", "updated_at": "2015-06-05T08:53:33Z", "closed_at": "2015-06-05T08:53:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It seems the kde can sometimes fail, e.g. if the chain is stuck. Maybe we should wrap that into a try/except block and just omit the kde plot if it fails.\n\n```\n---------------------------------------------------------------------------\nLinAlgError                               Traceback (most recent call last)\n<ipython-input-20-48d3d1d2da70> in <module>()\n----> 1 pm.traceplot(trace[3000:])\n\n/Users/danneelbers/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/pymc/plots.pyc in traceplot(trace, vars, figsize, lines)\n     55             ax[i, 0].hist(d, bins=sqrt(d.size))\n     56         else:\n---> 57             kdeplot_op(ax[i, 0], d)\n     58         ax[i, 0].set_title(str(v))\n     59         ax[i, 0].grid(True)\n\n/Users/danneelbers/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/pymc/plots.pyc in kdeplot_op(ax, data)\n     79     for i in range(data.shape[1]):\n     80         d = data[:, i]\n---> 81         density = kde.gaussian_kde(d)\n     82         l = np.min(d)\n     83         u = np.max(d)\n\n/Users/danneelbers/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/scipy/stats/kde.pyc in __init__(self, dataset, bw_method)\n    187 \n    188         self.d, self.n = self.dataset.shape\n--> 189         self.set_bandwidth(bw_method=bw_method)\n    190 \n    191     def evaluate(self, points):\n\n/Users/danneelbers/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/scipy/stats/kde.pyc in set_bandwidth(self, bw_method)\n    498             raise ValueError(msg)\n    499 \n--> 500         self._compute_covariance()\n    501 \n    502     def _compute_covariance(self):\n\n/Users/danneelbers/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/scipy/stats/kde.pyc in _compute_covariance(self)\n    509             self._data_covariance = atleast_2d(np.cov(self.dataset, rowvar=1,\n    510                                                bias=False))\n--> 511             self._data_inv_cov = linalg.inv(self._data_covariance)\n    512 \n    513         self.covariance = self._data_covariance * self.factor**2\n\n/Users/danneelbers/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/scipy/linalg/basic.pyc in inv(a, overwrite_a, check_finite)\n    378         inv_a, info = getri(lu, piv, lwork=lwork, overwrite_lu=1)\n    379     if info > 0:\n--> 380         raise LinAlgError(\"singular matrix\")\n    381     if info < 0:\n    382         raise ValueError('illegal value in %d-th argument of internal '\n\nLinAlgError: singular matrix\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/424/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/422", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/422/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/422/events", "html_url": "https://github.com/pymc-devs/pymc/issues/422", "id": 24356708, "node_id": "MDU6SXNzdWUyNDM1NjcwOA==", "number": 422, "title": "No suitable default initial values for Multinomial", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-12-16T15:35:17Z", "updated_at": "2013-12-24T20:48:15Z", "closed_at": "2013-12-24T20:48:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The `Multinomial` distribution does not have a mode (just a mean), and so fails without manually being given a default when used in models, since `quckclass` only looks for modes of discrete distributions.\n\nFor example, the following:\n\n```\nimport numpy as np\nfrom pymc import Model, Gamma, Normal, Dirichlet\nfrom pymc import Multinomial\nfrom pymc import sample, Metropolis\n\nk = 3\nndata = 500\n\nv = np.random.randint(0, k, ndata)\ndata = ((v == 0)*(50 + np.random.randn(ndata))\n        + (v == 1)*(-50 + np.random.randn(ndata))\n        + (v == 2)*np.random.randn(ndata))\n\nmodel = Model()\n\nwith model:\n    dd = Dirichlet('dd', k=k, a=1, shape=k)\n    precs = Gamma('precs', alpha=0.1, beta=0.1, shape=k)\n    means = Normal('means', 0, 0.001, shape=k)\n    category = Multinomial('category',\n                           n=1,\n                           p=dd,\n                           shape=ndata)\n\n    points = Normal('obs',\n                    means[category],\n                    precs[category],\n                    observed=data)\n    tr = sample(3000, step=Metropolis())\n```\n\nresults in an `AttributeError`\n\n```\nAttributeError: <pymc.quickclass.Multinomial object at 0x4804210> has no default \nvalue to use, checked for: ['mode'] pass testval argument or provide one of these.\n```\n\nWe could add a mode as follows:\n\n```\nround(p*n, 0)\n```\n\nif we can do this in Theano. I don't exactly understand how the `round` function works there, based on the docs.\n\nI wonder if it might be worth having something like a `default_init` attribute in distributions, which for most of them could be set to the mean/mode, but for some problematic ones can just be given an arbitrary/random value.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/422/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/420", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/420/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/420/events", "html_url": "https://github.com/pymc-devs/pymc/issues/420", "id": 24305253, "node_id": "MDU6SXNzdWUyNDMwNTI1Mw==", "number": 420, "title": "Gradient calculation fails on Dirichlet with Categorical child.", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2013-12-15T04:13:46Z", "updated_at": "2014-01-03T21:31:52Z", "closed_at": "2014-01-03T21:31:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I have implemented the categorical distribution in the `categorical` branch. It works fine when used with non-HMC samplers like Metropolis or Slice, but when using HamiltonianMC or NUTS, sampling fails with the following error:\n\n```\nAttributeError: 'All' object has no attribute 'grad'\n```\n\nI have modified the `dirichlet.py` example to include a Categorical likelihood. You will see the error here, and it goes away if you change the sampler.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/420/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/413", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/413/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/413/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/413/events", "html_url": "https://github.com/pymc-devs/pymc/issues/413", "id": 23772431, "node_id": "MDU6SXNzdWUyMzc3MjQzMQ==", "number": 413, "title": "Alternative pickler for multiprocessing?", "user": {"login": "jsalvatier", "id": 270513, "node_id": "MDQ6VXNlcjI3MDUxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/270513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsalvatier", "html_url": "https://github.com/jsalvatier", "followers_url": "https://api.github.com/users/jsalvatier/followers", "following_url": "https://api.github.com/users/jsalvatier/following{/other_user}", "gists_url": "https://api.github.com/users/jsalvatier/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsalvatier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsalvatier/subscriptions", "organizations_url": "https://api.github.com/users/jsalvatier/orgs", "repos_url": "https://api.github.com/users/jsalvatier/repos", "events_url": "https://api.github.com/users/jsalvatier/events{/privacy}", "received_events_url": "https://api.github.com/users/jsalvatier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2013-12-05T08:20:06Z", "updated_at": "2015-05-25T21:13:35Z", "closed_at": "2015-05-25T21:13:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The lack of ability to pickle nested functions is a constant thorn in my side. Apparently there are at least two alternative pickling libraries that supports nested functions: http://stackoverflow.com/questions/16626429/python-cpickle-pickling-lambda-functions. Anyone know if we could somehow use this for multiprocessing in psample?\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/413/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/388", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/388/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/388/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/388/events", "html_url": "https://github.com/pymc-devs/pymc/issues/388", "id": 22705160, "node_id": "MDU6SXNzdWUyMjcwNTE2MA==", "number": 388, "title": "Theano requirement for python 3", "user": {"login": "kyleam", "id": 1297788, "node_id": "MDQ6VXNlcjEyOTc3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleam", "html_url": "https://github.com/kyleam", "followers_url": "https://api.github.com/users/kyleam/followers", "following_url": "https://api.github.com/users/kyleam/following{/other_user}", "gists_url": "https://api.github.com/users/kyleam/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleam/subscriptions", "organizations_url": "https://api.github.com/users/kyleam/orgs", "repos_url": "https://api.github.com/users/kyleam/repos", "events_url": "https://api.github.com/users/kyleam/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-11-15T00:35:25Z", "updated_at": "2013-11-15T22:51:48Z", "closed_at": "2013-11-15T22:51:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The theano 0.6.0rc3 requirement is only accurate for python 2 because the theano release in PyPI doesn't support python 3. If the latest release from PyPI is installed under python 3, it results in the import error below. This can be corrected by installing from the theano git repo. Adding `-e git+https://github.com/Theano/Theano.git#egg=Theano` to requirements.txt would fix this (when using `pip -r`), but it would break reading the requirements.txt in as a list to setup.py `install_requires`. With pymc3 in alpha, I don't imagine this is much of an issue at the moment, but, if you all think it's worthwhile, I'll have a shot at getting it running by tweaking setup.py to use the `dependency_links` argument.\n\n```\nIn [1]: import pymc as pm\n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n<ipython-input-1-290dd01c5432> in <module>()\n----> 1 import pymc as pm\n\n/home/kyle/src/python/pymc/pymc/__init__.py in <module>()\n      1 __version__ = \"3.0\"\n      2\n----> 3 from .core import *\n      4 from .distributions import *\n      5 from .math import *\n\n[...]\n\n/usr/lib/python3.3/site-packages/theano/gof/op.py in <module>()\n     23 from theano.misc.windows import call_subprocess_Popen\n     24\n---> 25 from . import cc\n     26 from . import graph\n     27 from . import utils\n\nImportError: cannot import name cc\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/388/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/379", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/379/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/379/events", "html_url": "https://github.com/pymc-devs/pymc/issues/379", "id": 22164897, "node_id": "MDU6SXNzdWUyMjE2NDg5Nw==", "number": 379, "title": "DisconnectedType Error when computing gradient of stacklists", "user": {"login": "jangevaare", "id": 5422422, "node_id": "MDQ6VXNlcjU0MjI0MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/5422422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jangevaare", "html_url": "https://github.com/jangevaare", "followers_url": "https://api.github.com/users/jangevaare/followers", "following_url": "https://api.github.com/users/jangevaare/following{/other_user}", "gists_url": "https://api.github.com/users/jangevaare/gists{/gist_id}", "starred_url": "https://api.github.com/users/jangevaare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jangevaare/subscriptions", "organizations_url": "https://api.github.com/users/jangevaare/orgs", "repos_url": "https://api.github.com/users/jangevaare/repos", "events_url": "https://api.github.com/users/jangevaare/events{/privacy}", "received_events_url": "https://api.github.com/users/jangevaare/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-11-06T01:05:20Z", "updated_at": "2013-12-04T16:57:36Z", "closed_at": "2013-12-04T16:57:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I have a model here that will run fine with MH sampling but encounters errors with NUTS and standard HMC sampling methods. This example is probably unique in its use of `theano.tensor.stacklists`, which may somehow relate to the error. My use of a constant in `ex_tau` may also be of relevance.\n\nHere's the model:\n\n``` python\nimport pymc as pm\nimport numpy as np\nfrom theano.tensor import stacklists, scalars, matrices, sqrt, constant, dot\nfrom theano.sandbox.linalg.ops import matrix_inverse\n\ncov=np.array([[2,1],[1,3]])\nmean=([2,7])\ntau_choleskyroot=np.linalg.cholesky(np.linalg.inv(cov))\n\nN=1\nz_data=np.ndarray.flatten(np.random.multivariate_normal(mean, cov, N))\n\ndef ex_tau(a11_sqd, a12, a22_sqd):\n    ex_A=stacklists([[sqrt(a11_sqd), a12], [constant(0, dtype='float64'), sqrt(a22_sqd)]])\n    return ex_A.T.dot(ex_A)\n\nwith pm.Model() as model:    \n    a11_sqd=pm.Gamma('a11_sqd', alpha=2, beta=2)\n    a22_sqd=pm.Gamma('a22_sqd', alpha=2, beta=2)\n    a12=pm.Normal('a12', mu=0, tau=1)\n    z=pm.MvNormal('z', mu=mean, Tau=ex_tau(a11_sqd, a12, a22_sqd), shape=2, observed=z_data)\n    start = pm.find_MAP()\n\nwith model:\n    step = pm.NUTS()\n    trace = pm.sample(3000, step, start)\n\n```\n\nThank you for taking a look at this! This error seems similar to the one dealt with https://github.com/pymc-devs/pymc/issues/336, but I am definitely using the latest versions of Theano (and pymc). Here are the full details of the error when using NUTS:\n\n(edited since I accidentally included the error twice)\n\n```\n---------------------------------------------------------------------------\nAsTensorError                             Traceback (most recent call last)\n<ipython-input-1-c16baa5bbcef> in <module>()\n     23 \n     24 with model:\n---> 25     step = pm.NUTS()\n     26     trace = pm.sample(3000, step, start)\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/pymc/step_methods/nuts.pyc in __init__(self, vars, scaling, step_scale, is_cov, state, Emax, target_accept, gamma, k, t0, model)\n     57 \n     58         if isinstance(scaling, dict):\n---> 59             scaling = guess_scaling(Point(scaling, model=model), model=model)\n     60 \n     61 \n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/pymc/tuning/scaling.pyc in guess_scaling(point, model)\n     77 def guess_scaling(point, model=None):\n     78     model = modelcontext(model)\n---> 79     h = find_hessian_diag(point, model=model)\n     80     return adjust_scaling(h)\n     81 \n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/pymc/tuning/scaling.pyc in find_hessian_diag(point, vars, model)\n     72     \"\"\"\n     73     model=modelcontext(model)\n---> 74     H = compilef(hessian_diag(model.logp, vars))\n     75     return H(Point(point, model=model))\n     76 \n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/pymc/memoize.pyc in memoizer(*args, **kwargs)\n     12 \n     13         if key not in cache:\n---> 14             cache[key] = obj(*args, **kwargs)\n     15 \n     16         return cache[key]\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/pymc/theanof.pyc in hessian_diag(f, vars)\n     92         vars = cont_inputs(f)\n     93 \n---> 94     return -t.concatenate([hessian_diag1(f, v) for v in vars], axis=0)\n     95 \n     96 \n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/pymc/theanof.pyc in hessian_diag1(f, v)\n     84         return gradient1(g[i], v)[i]\n     85 \n---> 86     return theano.map(hess_ii, idx)[0]\n     87 \n     88 \n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/scan_module/scan_views.pyc in map(fn, sequences, non_sequences, truncate_gradient, go_backwards, mode, name)\n     66                      go_backwards=go_backwards,\n     67                      mode=mode,\n---> 68                      name=name)\n     69 \n     70 \n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/scan_module/scan.pyc in scan(fn, sequences, outputs_info, non_sequences, n_steps, truncate_gradient, go_backwards, mode, name, profile)\n    730     # and outputs that needs to be separated\n    731 \n--> 732     condition, outputs, updates = scan_utils.get_updates_and_outputs(fn(*args))\n    733     if condition is not None:\n    734         as_while = True\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/pymc/theanof.pyc in hess_ii(i)\n     82 \n     83     def hess_ii(i):\n---> 84         return gradient1(g[i], v)[i]\n     85 \n     86     return theano.map(hess_ii, idx)[0]\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/pymc/theanof.pyc in gradient1(f, v)\n     41 def gradient1(f, v):\n     42     \"\"\"flat gradient of f wrt v\"\"\"\n---> 43     return t.flatten(t.grad(f, v, disconnected_inputs='warn'))\n     44 \n     45 \n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in grad(cost, wrt, consider_constant, disconnected_inputs, add_names, known_grads, return_disconnected)\n    526 \n    527     rval = _populate_grad_dict(var_to_app_to_idx,\n--> 528             grad_dict, wrt, cost_name)\n    529 \n    530     for i in xrange(len(rval)):\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in _populate_grad_dict(var_to_app_to_idx, grad_dict, wrt, cost_name)\n   1101         return grad_dict[var]\n   1102 \n-> 1103     rval = [access_grad_cache(elem) for elem in wrt]\n   1104 \n   1105     return rval\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_grad_cache(var)\n   1061                     for idx in node_to_idx[node]:\n   1062 \n-> 1063                         term = access_term_cache(node)[idx]\n   1064 \n   1065                         if not isinstance(term, gof.Variable):\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_term_cache(node)\n    783             inputs = node.inputs\n    784 \n--> 785             output_grads = [access_grad_cache(var) for var in node.outputs]\n    786 \n    787             # list of bools indicating if each output is connected to the cost\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_grad_cache(var)\n   1061                     for idx in node_to_idx[node]:\n   1062 \n-> 1063                         term = access_term_cache(node)[idx]\n   1064 \n   1065                         if not isinstance(term, gof.Variable):\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_term_cache(node)\n    783             inputs = node.inputs\n    784 \n--> 785             output_grads = [access_grad_cache(var) for var in node.outputs]\n    786 \n    787             # list of bools indicating if each output is connected to the cost\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_grad_cache(var)\n   1061                     for idx in node_to_idx[node]:\n   1062 \n-> 1063                         term = access_term_cache(node)[idx]\n   1064 \n   1065                         if not isinstance(term, gof.Variable):\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_term_cache(node)\n    783             inputs = node.inputs\n    784 \n--> 785             output_grads = [access_grad_cache(var) for var in node.outputs]\n    786 \n    787             # list of bools indicating if each output is connected to the cost\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_grad_cache(var)\n   1061                     for idx in node_to_idx[node]:\n   1062 \n-> 1063                         term = access_term_cache(node)[idx]\n   1064 \n   1065                         if not isinstance(term, gof.Variable):\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_term_cache(node)\n    783             inputs = node.inputs\n    784 \n--> 785             output_grads = [access_grad_cache(var) for var in node.outputs]\n    786 \n    787             # list of bools indicating if each output is connected to the cost\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_grad_cache(var)\n   1061                     for idx in node_to_idx[node]:\n   1062 \n-> 1063                         term = access_term_cache(node)[idx]\n   1064 \n   1065                         if not isinstance(term, gof.Variable):\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_term_cache(node)\n    783             inputs = node.inputs\n    784 \n--> 785             output_grads = [access_grad_cache(var) for var in node.outputs]\n    786 \n    787             # list of bools indicating if each output is connected to the cost\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_grad_cache(var)\n   1061                     for idx in node_to_idx[node]:\n   1062 \n-> 1063                         term = access_term_cache(node)[idx]\n   1064 \n   1065                         if not isinstance(term, gof.Variable):\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_term_cache(node)\n    783             inputs = node.inputs\n    784 \n--> 785             output_grads = [access_grad_cache(var) for var in node.outputs]\n    786 \n    787             # list of bools indicating if each output is connected to the cost\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_grad_cache(var)\n   1061                     for idx in node_to_idx[node]:\n   1062 \n-> 1063                         term = access_term_cache(node)[idx]\n   1064 \n   1065                         if not isinstance(term, gof.Variable):\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_term_cache(node)\n    783             inputs = node.inputs\n    784 \n--> 785             output_grads = [access_grad_cache(var) for var in node.outputs]\n    786 \n    787             # list of bools indicating if each output is connected to the cost\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_grad_cache(var)\n   1061                     for idx in node_to_idx[node]:\n   1062 \n-> 1063                         term = access_term_cache(node)[idx]\n   1064 \n   1065                         if not isinstance(term, gof.Variable):\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_term_cache(node)\n    783             inputs = node.inputs\n    784 \n--> 785             output_grads = [access_grad_cache(var) for var in node.outputs]\n    786 \n    787             # list of bools indicating if each output is connected to the cost\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_grad_cache(var)\n   1061                     for idx in node_to_idx[node]:\n   1062 \n-> 1063                         term = access_term_cache(node)[idx]\n   1064 \n   1065                         if not isinstance(term, gof.Variable):\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_term_cache(node)\n    783             inputs = node.inputs\n    784 \n--> 785             output_grads = [access_grad_cache(var) for var in node.outputs]\n    786 \n    787             # list of bools indicating if each output is connected to the cost\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_grad_cache(var)\n   1061                     for idx in node_to_idx[node]:\n   1062 \n-> 1063                         term = access_term_cache(node)[idx]\n   1064 \n   1065                         if not isinstance(term, gof.Variable):\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_term_cache(node)\n    783             inputs = node.inputs\n    784 \n--> 785             output_grads = [access_grad_cache(var) for var in node.outputs]\n    786 \n    787             # list of bools indicating if each output is connected to the cost\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_grad_cache(var)\n   1061                     for idx in node_to_idx[node]:\n   1062 \n-> 1063                         term = access_term_cache(node)[idx]\n   1064 \n   1065                         if not isinstance(term, gof.Variable):\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_term_cache(node)\n    783             inputs = node.inputs\n    784 \n--> 785             output_grads = [access_grad_cache(var) for var in node.outputs]\n    786 \n    787             # list of bools indicating if each output is connected to the cost\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_grad_cache(var)\n   1061                     for idx in node_to_idx[node]:\n   1062 \n-> 1063                         term = access_term_cache(node)[idx]\n   1064 \n   1065                         if not isinstance(term, gof.Variable):\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_term_cache(node)\n    783             inputs = node.inputs\n    784 \n--> 785             output_grads = [access_grad_cache(var) for var in node.outputs]\n    786 \n    787             # list of bools indicating if each output is connected to the cost\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_grad_cache(var)\n   1061                     for idx in node_to_idx[node]:\n   1062 \n-> 1063                         term = access_term_cache(node)[idx]\n   1064 \n   1065                         if not isinstance(term, gof.Variable):\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_term_cache(node)\n    783             inputs = node.inputs\n    784 \n--> 785             output_grads = [access_grad_cache(var) for var in node.outputs]\n    786 \n    787             # list of bools indicating if each output is connected to the cost\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_grad_cache(var)\n   1061                     for idx in node_to_idx[node]:\n   1062 \n-> 1063                         term = access_term_cache(node)[idx]\n   1064 \n   1065                         if not isinstance(term, gof.Variable):\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_term_cache(node)\n    783             inputs = node.inputs\n    784 \n--> 785             output_grads = [access_grad_cache(var) for var in node.outputs]\n    786 \n    787             # list of bools indicating if each output is connected to the cost\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_grad_cache(var)\n   1061                     for idx in node_to_idx[node]:\n   1062 \n-> 1063                         term = access_term_cache(node)[idx]\n   1064 \n   1065                         if not isinstance(term, gof.Variable):\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_term_cache(node)\n    783             inputs = node.inputs\n    784 \n--> 785             output_grads = [access_grad_cache(var) for var in node.outputs]\n    786 \n    787             # list of bools indicating if each output is connected to the cost\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_grad_cache(var)\n   1061                     for idx in node_to_idx[node]:\n   1062 \n-> 1063                         term = access_term_cache(node)[idx]\n   1064 \n   1065                         if not isinstance(term, gof.Variable):\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_term_cache(node)\n    783             inputs = node.inputs\n    784 \n--> 785             output_grads = [access_grad_cache(var) for var in node.outputs]\n    786 \n    787             # list of bools indicating if each output is connected to the cost\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_grad_cache(var)\n   1061                     for idx in node_to_idx[node]:\n   1062 \n-> 1063                         term = access_term_cache(node)[idx]\n   1064 \n   1065                         if not isinstance(term, gof.Variable):\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_term_cache(node)\n    783             inputs = node.inputs\n    784 \n--> 785             output_grads = [access_grad_cache(var) for var in node.outputs]\n    786 \n    787             # list of bools indicating if each output is connected to the cost\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_grad_cache(var)\n   1061                     for idx in node_to_idx[node]:\n   1062 \n-> 1063                         term = access_term_cache(node)[idx]\n   1064 \n   1065                         if not isinstance(term, gof.Variable):\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gradient.pyc in access_term_cache(node)\n    922                                 str(g_shape))\n    923 \n--> 924                 input_grads = node.op.grad(inputs, new_output_grads)\n    925 \n    926                 if input_grads is None:\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/tensor/basic.pyc in grad(self, inputs, g_outputs)\n   3208         \"\"\"Join the gradients along the axis that was used to split x.\"\"\"\n   3209         _, axis, n = inputs\n-> 3210         return [join(axis, *g_outputs),\n   3211                 grad_undefined(self, 1, axis),\n   3212                 grad_undefined(self, 2, n)]\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/gof/op.pyc in __call__(self, *inputs, **kwargs)\n    397         \"\"\"\n    398         return_list = kwargs.pop('return_list', False)\n--> 399         node = self.make_node(*inputs, **kwargs)\n    400         if self.add_stack_trace_on_call:\n    401             self.add_tag_trace(node)\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/tensor/basic.pyc in make_node(self, *axis_and_tensors)\n   3379         if not tensors:\n   3380             raise ValueError('Cannot join an empty list of tensors')\n-> 3381         as_tensor_variable_args = [as_tensor_variable(x) for x in tensors]\n   3382 \n   3383         dtypes = [x.type.dtype for x in as_tensor_variable_args]\n\n/Users/justin/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/theano/tensor/basic.pyc in as_tensor_variable(x, name, ndim)\n    157         if not isinstance(x.type, TensorType):\n    158             raise AsTensorError(\n--> 159                 \"Variable type field must be a TensorType.\", x, x.type)\n    160 \n    161         if ndim is None:\n\nAsTensorError: ('Variable type field must be a TensorType.', <DisconnectedType>, <theano.gradient.DisconnectedType object at 0x11c4b0590>) \n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/379/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/377", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/377/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/377/events", "html_url": "https://github.com/pymc-devs/pymc/issues/377", "id": 21931008, "node_id": "MDU6SXNzdWUyMTkzMTAwOA==", "number": 377, "title": "Building a model that requires external function in pymc3?", "user": {"login": "bhayden53", "id": 5826711, "node_id": "MDQ6VXNlcjU4MjY3MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/5826711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhayden53", "html_url": "https://github.com/bhayden53", "followers_url": "https://api.github.com/users/bhayden53/followers", "following_url": "https://api.github.com/users/bhayden53/following{/other_user}", "gists_url": "https://api.github.com/users/bhayden53/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhayden53/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhayden53/subscriptions", "organizations_url": "https://api.github.com/users/bhayden53/orgs", "repos_url": "https://api.github.com/users/bhayden53/repos", "events_url": "https://api.github.com/users/bhayden53/events{/privacy}", "received_events_url": "https://api.github.com/users/bhayden53/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-10-31T22:13:36Z", "updated_at": "2018-08-21T09:18:12Z", "closed_at": "2014-08-17T21:24:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI have been anxiously awaiting HMC functionality in pymc3; thanks for all the work everyone has put in.\n\nI am attempting to make a model in pymc3 which requires one of the free parameters of my model to be operated on by an external python package. For instance, one of my 'free' parameters is an unknown parameter of the cosmology of the universe, and a set of integrals needs to be performed on this parameter in order to estimate an observable quantity.\n\nPerhaps I just don't understand what's going on in pymc3, but I can't figure out how to do this since pm.Uniform returns a Theano TensorVariable. The basic structure of what I'm trying to do looks like:\n\n```\nimport pymc as pm\nimport cosmology_calculator\n\ndata = some_data_from_somewhere\nwith pm.Model() as model:\n    cosmo_param = pm.Uniform( 'cosmo_param', lower=0.0, upper=1.0 )\n    cosmo_observable = cosmology_calculator( cosmo_param ) \n```\n\nThe cosmology_calculator step immediately wants the input to be a float, which crashes because it's a Tensor. \n\nIs there any way to construct a model in pymc3 that can do this?\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/377/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/373", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/373/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/373/events", "html_url": "https://github.com/pymc-devs/pymc/issues/373", "id": 21791389, "node_id": "MDU6SXNzdWUyMTc5MTM4OQ==", "number": 373, "title": "Traceplot does not plot parallel chains of multivariate variables properly ", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-10-29T22:01:41Z", "updated_at": "2013-11-19T12:05:52Z", "closed_at": "2013-11-19T12:05:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "After sampling multiple chains via `psample`, the `traceplot` function appears to concatenate the traces of multivariate nodes, rather than plotting them independently. For example, here is output from a variable of size 3 that was sampled for 10K iterations:\n\n![unknown-1](https://f.cloud.github.com/assets/81476/1432832/a3f25a5e-40e5-11e3-9203-6cb2c47397af.png)\n\nClearly, the chains have been concatenated.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/373/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/358", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/358/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/358/events", "html_url": "https://github.com/pymc-devs/pymc/issues/358", "id": 20769102, "node_id": "MDU6SXNzdWUyMDc2OTEwMg==", "number": 358, "title": "Metropolis fails to converge on simple model (PyMC 3)", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/7", "html_url": "https://github.com/pymc-devs/pymc/milestone/7", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/7/labels", "id": 432681, "node_id": "MDk6TWlsZXN0b25lNDMyNjgx", "number": 7, "title": "Version 3.0.beta", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 14, "state": "closed", "created_at": "2013-09-20T16:57:28Z", "updated_at": "2015-06-26T10:34:29Z", "due_on": null, "closed_at": "2015-06-26T10:34:29Z"}, "comments": 14, "created_at": "2013-10-09T20:40:51Z", "updated_at": "2017-03-14T06:35:00Z", "closed_at": "2014-08-17T21:38:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I have attempted to replicate a very simple partial pooling model from Gelman and Hill in PyMC 3, but find that the `Metropolis` step method fails to converge even in a large number of iterations. NUTS seems to handle it fine, but there appears to be an issue with Metropolis. Perhaps related to adaptation?\n\n[Here is a link to a zip file](https://dl.dropboxusercontent.com/u/233041/multilevel.zip) containing the model and data.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/358/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/357", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/357/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/357/events", "html_url": "https://github.com/pymc-devs/pymc/issues/357", "id": 20753221, "node_id": "MDU6SXNzdWUyMDc1MzIyMQ==", "number": 357, "title": "TypeError when sampling glm", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-10-09T16:19:58Z", "updated_at": "2013-10-11T15:50:03Z", "closed_at": "2013-10-11T15:50:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When running models built using `glm`, `sample` gives a `TypeError` from `random_sample`. This seems to have cropped up after updating Numpy, so I'm not sure if it is a change in the interface, or something else.\n\n```\nwith Model() as pooled_model:\n    glm.glm('log_radon ~ floor', srrs_mn)\n    pooled_trace = sample(1000, Metropolis())\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-5-587eccc603b1> in <module>()\n      3 with Model() as pooled_model:\n      4     glm.glm('log_radon ~ floor', srrs_mn)\n----> 5     pooled_trace = sample(1000, Metropolis())\n\n/Library/Python/2.7/site-packages/numpy-1.9.0.dev_7457f15-py2.7-macosx-10.8-x86_64.egg/numpy/random/mtrand.so in mtrand.RandomState.random_sample (numpy/random/mtrand/mtrand.c:6359)()\n\nTypeError: random_sample() takes at most 1 positional argument (2 given)\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/357/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/350", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/350/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/350/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/350/events", "html_url": "https://github.com/pymc-devs/pymc/issues/350", "id": 20046274, "node_id": "MDU6SXNzdWUyMDA0NjI3NA==", "number": 350, "title": "PYMC 3 - Help running model, find_MAP() produces errors", "user": {"login": "jangevaare", "id": 5422422, "node_id": "MDQ6VXNlcjU0MjI0MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/5422422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jangevaare", "html_url": "https://github.com/jangevaare", "followers_url": "https://api.github.com/users/jangevaare/followers", "following_url": "https://api.github.com/users/jangevaare/following{/other_user}", "gists_url": "https://api.github.com/users/jangevaare/gists{/gist_id}", "starred_url": "https://api.github.com/users/jangevaare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jangevaare/subscriptions", "organizations_url": "https://api.github.com/users/jangevaare/orgs", "repos_url": "https://api.github.com/users/jangevaare/repos", "events_url": "https://api.github.com/users/jangevaare/events{/privacy}", "received_events_url": "https://api.github.com/users/jangevaare/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2013-09-25T14:49:30Z", "updated_at": "2013-10-19T22:58:21Z", "closed_at": "2013-10-19T22:58:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello again. I have been able to specify my model finally, but am not at a bit of a loss as to how to actually run it. find_MAP() gives me errors... but not something I am able to make sense of by myself.\n\nI can include my code up to this point if it helps, for now I will just include the error.\n\nHere it is, thank you!\n\n```\nIn [70]: with model:\n   ....:        start = find_MAP()\n   ....:     \n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n<ipython-input-70-8cf80a88b8c3> in <module>()\n      1 with model:\n----> 2         start = find_MAP()\n      3 \n\n/usr/local/lib/python2.7/dist-packages/pymc/tuning/starting.pyc in find_MAP(start, vars, fmin, return_raw, disp, model, *args, **kwargs)\n     43     bij = DictToArrayBijection(ArrayOrdering(vars), start)\n     44 \n---> 45     logp = bij.mapf(model.logpc)\n     46     dlogp = bij.mapf(model.dlogpc(vars))\n     47 \n\n/usr/local/lib/python2.7/dist-packages/pymc/model.pyc in logpc(model)\n     75     def logpc(model):\n     76         \"\"\"Compiled log probability density function\"\"\"\n---> 77         return compilef(model.logp)\n     78 \n     79     def dlogpc(model, vars=None):\n\n/usr/local/lib/python2.7/dist-packages/pymc/memoize.pyc in memoizer(*args, **kwargs)\n     12 \n     13         if key not in cache:\n---> 14             cache[key] = obj(*args, **kwargs)\n     15 \n     16         return cache[key]\n\n/usr/local/lib/python2.7/dist-packages/pymc/model.pyc in compilef(outs, mode)\n    177                  allow_input_downcast=True,\n    178                  on_unused_input='ignore',\n--> 179                  mode=mode)\n    180     )\n    181 \n\n/usr/local/lib/python2.7/dist-packages/Theano-0.6.0rc3-py2.7.egg/theano/compile/function.pyc in function(inputs, outputs, mode, updates, givens, no_default_updates, accept_inplace, name, rebuild_strict, allow_input_downcast, profile, on_unused_input)\n    221                 allow_input_downcast=allow_input_downcast,\n    222                 on_unused_input=on_unused_input,\n--> 223                 profile=profile)\n    224     # We need to add the flag check_aliased inputs if we have any mutable or\n    225     # borrowed used defined inputs\n\n/usr/local/lib/python2.7/dist-packages/Theano-0.6.0rc3-py2.7.egg/theano/compile/pfunc.pyc in pfunc(params, outputs, mode, updates, givens, no_default_updates, accept_inplace, name, rebuild_strict, allow_input_downcast, profile, on_unused_input)\n    510     return orig_function(inputs, cloned_outputs, mode,\n    511             accept_inplace=accept_inplace, name=name, profile=profile,\n--> 512             on_unused_input=on_unused_input)\n    513 \n    514 \n\n/usr/local/lib/python2.7/dist-packages/Theano-0.6.0rc3-py2.7.egg/theano/compile/function_module.pyc in orig_function(inputs, outputs, mode, accept_inplace, name, profile, on_unused_input)\n   1312                 profile=profile,\n   1313                 on_unused_input=on_unused_input).create(\n-> 1314                         defaults)\n   1315 \n   1316     t2 = time.time()\n\n/usr/local/lib/python2.7/dist-packages/Theano-0.6.0rc3-py2.7.egg/theano/compile/function_module.pyc in create(self, input_storage, trustme)\n   1181         # Get a function instance\n   1182         start_linker = time.time()\n-> 1183         _fn, _i, _o = self.linker.make_thunk(input_storage=input_storage_lists)\n   1184         end_linker = time.time()\n   1185 \n\n/usr/local/lib/python2.7/dist-packages/Theano-0.6.0rc3-py2.7.egg/theano/gof/link.pyc in make_thunk(self, profiler, input_storage, output_storage)\n    432         return self.make_all(profiler=profiler,\n    433                              input_storage=input_storage,\n--> 434                              output_storage=output_storage)[:3]\n    435 \n    436     def make_all(self, profiler, input_storage, output_storage):\n\n/usr/local/lib/python2.7/dist-packages/Theano-0.6.0rc3-py2.7.egg/theano/gof/vm.pyc in make_all(self, profiler, input_storage, output_storage)\n    843                     compute_map,\n    844                     no_recycling)\n--> 845                         for node in order]\n    846         for node, thunk in zip(order, thunks):\n    847             thunk.inputs = [storage_map[v] for v in node.inputs]\n\n/usr/local/lib/python2.7/dist-packages/Theano-0.6.0rc3-py2.7.egg/theano/gof/op.pyc in make_thunk(self, node, storage_map, compute_map, no_recycling)\n    604                 logger.debug('Trying CLinker.make_thunk')\n    605                 outputs = cl.make_thunk(input_storage=node_input_storage,\n--> 606                                         output_storage=node_output_storage)\n    607                 fill_storage, node_input_filters, node_output_filters = outputs\n    608 \n\n/usr/local/lib/python2.7/dist-packages/Theano-0.6.0rc3-py2.7.egg/theano/gof/cc.pyc in make_thunk(self, input_storage, output_storage, keep_lock)\n    946         cthunk, in_storage, out_storage, error_storage = self.__compile__(\n    947             input_storage, output_storage,\n--> 948             keep_lock=keep_lock)\n    949 \n    950         res = _CThunk(cthunk, init_tasks, tasks, error_storage)\n\n/usr/local/lib/python2.7/dist-packages/Theano-0.6.0rc3-py2.7.egg/theano/gof/cc.pyc in __compile__(self, input_storage, output_storage, keep_lock)\n    889                                     input_storage,\n    890                                     output_storage,\n--> 891                                     keep_lock=keep_lock)\n    892         return (thunk,\n    893                 [link.Container(input, storage) for input, storage in\n\n/usr/local/lib/python2.7/dist-packages/Theano-0.6.0rc3-py2.7.egg/theano/gof/cc.pyc in cthunk_factory(self, error_storage, in_storage, out_storage, keep_lock)\n   1320         else:\n   1321             module = get_module_cache().module_from_key(\n-> 1322                 key=key, fn=self.compile_cmodule_by_step, keep_lock=keep_lock)\n   1323 \n   1324         vars = self.inputs + self.outputs + self.orphans\n\n/usr/local/lib/python2.7/dist-packages/Theano-0.6.0rc3-py2.7.egg/theano/gof/cmodule.pyc in module_from_key(self, key, fn, keep_lock, key_data)\n    995                                 # The module should be returned by the last\n    996                                 # step of the compilation.\n--> 997                                 module = next(compile_steps)\n    998                             except StopIteration:\n    999                                 break\n\n/usr/local/lib/python2.7/dist-packages/Theano-0.6.0rc3-py2.7.egg/theano/gof/cc.pyc in compile_cmodule_by_step(self, location)\n   1235                     lib_dirs=self.lib_dirs(),\n   1236                     libs=libs,\n-> 1237                     preargs=preargs)\n   1238             except Exception, e:\n   1239                 e.args += (str(self.fgraph),)\n\n/usr/local/lib/python2.7/dist-packages/Theano-0.6.0rc3-py2.7.egg/theano/gof/cmodule.pyc in compile_str(module_name, src_code, location, include_dirs, lib_dirs, libs, preargs, py_module)\n   1906             open(os.path.join(location, \"__init__.py\"), 'w').close()\n   1907             assert os.path.isfile(lib_filename)\n-> 1908             return dlimport(lib_filename)\n   1909 \n   1910 \n\n/usr/local/lib/python2.7/dist-packages/Theano-0.6.0rc3-py2.7.egg/theano/gof/cmodule.pyc in dlimport(fullpath, suffix)\n    283             if hasattr(importlib, \"invalidate_caches\"):\n    284                 importlib.invalidate_caches()\n--> 285         rval = __import__(module_name, {}, {}, [module_name])\n    286         if not rval:\n    287             raise Exception('__import__ failed', fullpath)\n\nImportError: ('/home/justin/.theano/compiledir_Linux-3.2.0-53-generic-x86_64-with-Ubuntu-12.04-precise-x86_64-2.7.3-64/tmpZG40aj/e7bafbeff2b312bd3f5e3f638584f72c.so: undefined symbol: _gfortran_st_write_done', '[CGer{destructive}(<TensorType(float64, matrix)>, TensorConstant{1.0}, <TensorType(float64, vector)>, TensorConstant{[ 1.  0.  ...  0.  1.]})]')\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/350/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/349", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/349/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/349/events", "html_url": "https://github.com/pymc-devs/pymc/pull/349", "id": 19854342, "node_id": "MDExOlB1bGxSZXF1ZXN0ODUwMzQ1Ng==", "number": 349, "title": "Remove duplicated NoStepper class", "user": {"login": "cdeil", "id": 852409, "node_id": "MDQ6VXNlcjg1MjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/852409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdeil", "html_url": "https://github.com/cdeil", "followers_url": "https://api.github.com/users/cdeil/followers", "following_url": "https://api.github.com/users/cdeil/following{/other_user}", "gists_url": "https://api.github.com/users/cdeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdeil/subscriptions", "organizations_url": "https://api.github.com/users/cdeil/orgs", "repos_url": "https://api.github.com/users/cdeil/repos", "events_url": "https://api.github.com/users/cdeil/events{/privacy}", "received_events_url": "https://api.github.com/users/cdeil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-09-21T09:38:35Z", "updated_at": "2013-09-21T18:56:48Z", "closed_at": "2013-09-21T18:56:33Z", "author_association": "NONE", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/349", "html_url": "https://github.com/pymc-devs/pymc/pull/349", "diff_url": "https://github.com/pymc-devs/pymc/pull/349.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/349.patch", "merged_at": "2013-09-21T18:56:33Z"}, "body": "There's also two duplicated functions in [distributions.py](https://github.com/pymc-devs/pymc/blob/master/pymc/distributions.py).\n`noncentral_t_expval` and `noncentral_t_like` I think might be the result of unfinished copy & paste and must be renamed and adapted [here](https://github.com/pymc-devs/pymc/blob/master/pymc/distributions.py#L2504) and [here](https://github.com/pymc-devs/pymc/blob/master/pymc/distributions.py#L2513)?\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/349/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/348", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/348/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/348/events", "html_url": "https://github.com/pymc-devs/pymc/issues/348", "id": 19854251, "node_id": "MDU6SXNzdWUxOTg1NDI1MQ==", "number": 348, "title": "Don't generate documentation outside pymc folder?", "user": {"login": "cdeil", "id": 852409, "node_id": "MDQ6VXNlcjg1MjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/852409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdeil", "html_url": "https://github.com/cdeil", "followers_url": "https://api.github.com/users/cdeil/followers", "following_url": "https://api.github.com/users/cdeil/following{/other_user}", "gists_url": "https://api.github.com/users/cdeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdeil/subscriptions", "organizations_url": "https://api.github.com/users/cdeil/orgs", "repos_url": "https://api.github.com/users/cdeil/repos", "events_url": "https://api.github.com/users/cdeil/events{/privacy}", "received_events_url": "https://api.github.com/users/cdeil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-09-21T09:33:58Z", "updated_at": "2013-09-23T03:34:13Z", "closed_at": "2013-09-23T03:34:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was very surprised to see that generating the pymc html docs locally creates a `pymc-page` folder outside the pymc folder:\n\n```\n$ cd docs\n$ make html\nsphinx-build -b html -d _build/doctrees   . ~/Code/pymc-pages\n...\nBuild finished. The HTML pages are in ~/Code/pymc-pages.\n```\n\nAll other Python packages generate the docs inside the repo folder and this seems easier / safer. Change to generate html docs in `docs/_build/html`?\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/348/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/347", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/347/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/347/events", "html_url": "https://github.com/pymc-devs/pymc/pull/347", "id": 19851608, "node_id": "MDExOlB1bGxSZXF1ZXN0ODUwMjQ0Nw==", "number": 347, "title": "WIP: extend tests on travis-ci (especially test Python 3)", "user": {"login": "cdeil", "id": 852409, "node_id": "MDQ6VXNlcjg1MjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/852409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdeil", "html_url": "https://github.com/cdeil", "followers_url": "https://api.github.com/users/cdeil/followers", "following_url": "https://api.github.com/users/cdeil/following{/other_user}", "gists_url": "https://api.github.com/users/cdeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdeil/subscriptions", "organizations_url": "https://api.github.com/users/cdeil/orgs", "repos_url": "https://api.github.com/users/cdeil/repos", "events_url": "https://api.github.com/users/cdeil/events{/privacy}", "received_events_url": "https://api.github.com/users/cdeil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-09-21T04:49:36Z", "updated_at": "2014-06-14T20:28:32Z", "closed_at": "2013-10-20T04:54:25Z", "author_association": "NONE", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pymc-devs/pymc/pulls/347", "html_url": "https://github.com/pymc-devs/pymc/pull/347", "diff_url": "https://github.com/pymc-devs/pymc/pull/347.diff", "patch_url": "https://github.com/pymc-devs/pymc/pull/347.patch", "merged_at": null}, "body": "This is work in progress, please don't merge.\n\nI plan to adapt the [astropy .travis.yml](https://github.com/astropy/astropy/blob/master/.travis.yml) file.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/347/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/345", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/345/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/345/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/345/events", "html_url": "https://github.com/pymc-devs/pymc/issues/345", "id": 19774156, "node_id": "MDU6SXNzdWUxOTc3NDE1Ng==", "number": 345, "title": "Test errors: test_LazyFunction, test_cov", "user": {"login": "cdeil", "id": 852409, "node_id": "MDQ6VXNlcjg1MjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/852409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdeil", "html_url": "https://github.com/cdeil", "followers_url": "https://api.github.com/users/cdeil/followers", "following_url": "https://api.github.com/users/cdeil/following{/other_user}", "gists_url": "https://api.github.com/users/cdeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdeil/subscriptions", "organizations_url": "https://api.github.com/users/cdeil/orgs", "repos_url": "https://api.github.com/users/cdeil/repos", "events_url": "https://api.github.com/users/cdeil/events{/privacy}", "received_events_url": "https://api.github.com/users/cdeil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2013-09-19T18:52:13Z", "updated_at": "2013-10-20T02:06:06Z", "closed_at": "2013-10-20T02:06:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Mac OS X 10.8 with Macports and Python 2.7 and pymc dev d6be456a18b25f7af06b8845835028e1b862b03f I get a test error, a fail and a bunch of deprecation warnings:\nhttps://gist.github.com/cdeil/6628062\n\nJust thought I mention it in case you can fix it for the upcoming 2.3 release.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/345/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/344", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/344/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/344/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/344/events", "html_url": "https://github.com/pymc-devs/pymc/issues/344", "id": 19759913, "node_id": "MDU6SXNzdWUxOTc1OTkxMw==", "number": 344, "title": "numpy.random.seed setting not working in unit tests", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}, {"id": 34672788, "node_id": "MDU6TGFiZWwzNDY3Mjc4OA==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/release", "name": "release", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-09-19T14:59:37Z", "updated_at": "2013-09-23T03:34:03Z", "closed_at": "2013-09-23T03:34:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I still get stochastic errors when testing the distributions in `test_distributions`, confirming that the seed setting on line 62 is not working. Not sure what to do. Do they need to be set within each function? That would suck. \n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/344/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/337", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/337/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/337/events", "html_url": "https://github.com/pymc-devs/pymc/issues/337", "id": 19326738, "node_id": "MDU6SXNzdWUxOTMyNjczOA==", "number": 337, "title": "PYMC 3 - Wishart distribution problem", "user": {"login": "jangevaare", "id": 5422422, "node_id": "MDQ6VXNlcjU0MjI0MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/5422422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jangevaare", "html_url": "https://github.com/jangevaare", "followers_url": "https://api.github.com/users/jangevaare/followers", "following_url": "https://api.github.com/users/jangevaare/following{/other_user}", "gists_url": "https://api.github.com/users/jangevaare/gists{/gist_id}", "starred_url": "https://api.github.com/users/jangevaare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jangevaare/subscriptions", "organizations_url": "https://api.github.com/users/jangevaare/orgs", "repos_url": "https://api.github.com/users/jangevaare/repos", "events_url": "https://api.github.com/users/jangevaare/events{/privacy}", "received_events_url": "https://api.github.com/users/jangevaare/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/7", "html_url": "https://github.com/pymc-devs/pymc/milestone/7", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/7/labels", "id": 432681, "node_id": "MDk6TWlsZXN0b25lNDMyNjgx", "number": 7, "title": "Version 3.0.beta", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 14, "state": "closed", "created_at": "2013-09-20T16:57:28Z", "updated_at": "2015-06-26T10:34:29Z", "due_on": null, "closed_at": "2015-06-26T10:34:29Z"}, "comments": 3, "created_at": "2013-09-11T15:29:44Z", "updated_at": "2013-09-25T14:37:14Z", "closed_at": "2013-09-25T14:37:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "New PYMC user here... I get an error when I try to specify a Wishart prior distribution... Not sure if this is a bug or if it's me. Any ideas?\n\ne.g.\n\n```\nwith Model() as model:\n...     wishart_test=Wishart('wishart_test', n=3, p=2, V=np.eye(2))\n... \nTraceback (most recent call last):\n  File \"<stdin>\", line 2, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/pymc-3.0-py2.7.egg/pymc/distributions/distribution.py\", line 23, in __new__\n    dist = cls.dist(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/pymc-3.0-py2.7.egg/pymc/distributions/distribution.py\", line 29, in dist\ndist.__init__(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/pymc-3.0-py2.7.egg/pymc/quickclass.py\", line 10, in __init__\n    self.__dict__.update(f(*args, **kwargs))\n  File \"/usr/local/lib/python2.7/dist-packages/pymc-3.0-py2.7.egg/pymc/quickclass.py\", line 76, in newf\n    r1 = f(*args_a, **kwargs_a)\n  File \"/usr/local/lib/python2.7/dist-packages/pymc-3.0-py2.7.egg/pymc/distributions/multivariate.py\", line 164, in Wishart\nnan)\n  File \"/usr/local/lib/python2.7/dist-packages/Theano-0.6.0rc3-py2.7.egg/theano/gof/op.py\", line 399, in __call__\nnode = self.make_node(*inputs, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/Theano-0.6.0rc3-py2.7.egg/theano/tensor/elemwise.py\", line 532, in make_node\ninputs = map(as_tensor_variable, inputs)\n  File \"/usr/local/lib/python2.7/dist-packages/Theano-0.6.0rc3-py2.7.egg/theano/tensor/basic.py\", line 182, in as_tensor_variable\n\"Cannot cast True or False as a tensor variable. Please use 1 or \"\ntheano.tensor.var.AsTensorError: Cannot cast True or False as a tensor variable. Please use 1 or 0. This error might be caused by using the == operator on Variables. v == w does not do what you think it does, use theano.tensor.eq(v, w) instead.\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/337/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/335", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/335/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/335/events", "html_url": "https://github.com/pymc-devs/pymc/issues/335", "id": 19173633, "node_id": "MDU6SXNzdWUxOTE3MzYzMw==", "number": 335, "title": "HamiltonianMC() breaks when no scaling given", "user": {"login": "kforeman", "id": 275114, "node_id": "MDQ6VXNlcjI3NTExNA==", "avatar_url": "https://avatars.githubusercontent.com/u/275114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kforeman", "html_url": "https://github.com/kforeman", "followers_url": "https://api.github.com/users/kforeman/followers", "following_url": "https://api.github.com/users/kforeman/following{/other_user}", "gists_url": "https://api.github.com/users/kforeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/kforeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kforeman/subscriptions", "organizations_url": "https://api.github.com/users/kforeman/orgs", "repos_url": "https://api.github.com/users/kforeman/repos", "events_url": "https://api.github.com/users/kforeman/events{/privacy}", "received_events_url": "https://api.github.com/users/kforeman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-09-09T02:52:53Z", "updated_at": "2013-09-10T15:37:09Z", "closed_at": "2013-09-10T15:37:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you call `HamiltonianMC()` without giving `scaling`, then it tries to call `guess_scaling()` in the global namespace and fails: `NameError: global name 'guess_scaling' is not defined`. \n\nIt happens for both `import pymc` and `from pymc import *`.\n\nIllustration: http://nbviewer.ipython.org/6490952\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/335/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/334", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/334/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/334/events", "html_url": "https://github.com/pymc-devs/pymc/issues/334", "id": 19167769, "node_id": "MDU6SXNzdWUxOTE2Nzc2OQ==", "number": 334, "title": "[pymc3] Gamma(1,1) MAP issue", "user": {"login": "kforeman", "id": 275114, "node_id": "MDQ6VXNlcjI3NTExNA==", "avatar_url": "https://avatars.githubusercontent.com/u/275114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kforeman", "html_url": "https://github.com/kforeman", "followers_url": "https://api.github.com/users/kforeman/followers", "following_url": "https://api.github.com/users/kforeman/following{/other_user}", "gists_url": "https://api.github.com/users/kforeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/kforeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kforeman/subscriptions", "organizations_url": "https://api.github.com/users/kforeman/orgs", "repos_url": "https://api.github.com/users/kforeman/repos", "events_url": "https://api.github.com/users/kforeman/events{/privacy}", "received_events_url": "https://api.github.com/users/kforeman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "jsalvatier", "id": 270513, "node_id": "MDQ6VXNlcjI3MDUxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/270513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsalvatier", "html_url": "https://github.com/jsalvatier", "followers_url": "https://api.github.com/users/jsalvatier/followers", "following_url": "https://api.github.com/users/jsalvatier/following{/other_user}", "gists_url": "https://api.github.com/users/jsalvatier/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsalvatier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsalvatier/subscriptions", "organizations_url": "https://api.github.com/users/jsalvatier/orgs", "repos_url": "https://api.github.com/users/jsalvatier/repos", "events_url": "https://api.github.com/users/jsalvatier/events{/privacy}", "received_events_url": "https://api.github.com/users/jsalvatier/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsalvatier", "id": 270513, "node_id": "MDQ6VXNlcjI3MDUxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/270513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsalvatier", "html_url": "https://github.com/jsalvatier", "followers_url": "https://api.github.com/users/jsalvatier/followers", "following_url": "https://api.github.com/users/jsalvatier/following{/other_user}", "gists_url": "https://api.github.com/users/jsalvatier/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsalvatier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsalvatier/subscriptions", "organizations_url": "https://api.github.com/users/jsalvatier/orgs", "repos_url": "https://api.github.com/users/jsalvatier/repos", "events_url": "https://api.github.com/users/jsalvatier/events{/privacy}", "received_events_url": "https://api.github.com/users/jsalvatier/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/7", "html_url": "https://github.com/pymc-devs/pymc/milestone/7", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/7/labels", "id": 432681, "node_id": "MDk6TWlsZXN0b25lNDMyNjgx", "number": 7, "title": "Version 3.0.beta", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 14, "state": "closed", "created_at": "2013-09-20T16:57:28Z", "updated_at": "2015-06-26T10:34:29Z", "due_on": null, "closed_at": "2015-06-26T10:34:29Z"}, "comments": 18, "created_at": "2013-09-08T21:44:09Z", "updated_at": "2013-12-23T19:25:42Z", "closed_at": "2013-12-23T19:25:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've found that when I run find_MAP() on a Gamma(1,1) distribution it ends up with negative value (and thus -Inf logp).\n\nHere's an illustration of the issue: http://nbviewer.ipython.org/6488376\n\nIf I change it to Gamma(10,1) it works fine...\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/334/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/331", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/331/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/331/events", "html_url": "https://github.com/pymc-devs/pymc/issues/331", "id": 19004860, "node_id": "MDU6SXNzdWUxOTAwNDg2MA==", "number": 331, "title": "PyMC3 test failures", "user": {"login": "aflaxman", "id": 51236, "node_id": "MDQ6VXNlcjUxMjM2", "avatar_url": "https://avatars.githubusercontent.com/u/51236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aflaxman", "html_url": "https://github.com/aflaxman", "followers_url": "https://api.github.com/users/aflaxman/followers", "following_url": "https://api.github.com/users/aflaxman/following{/other_user}", "gists_url": "https://api.github.com/users/aflaxman/gists{/gist_id}", "starred_url": "https://api.github.com/users/aflaxman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aflaxman/subscriptions", "organizations_url": "https://api.github.com/users/aflaxman/orgs", "repos_url": "https://api.github.com/users/aflaxman/repos", "events_url": "https://api.github.com/users/aflaxman/events{/privacy}", "received_events_url": "https://api.github.com/users/aflaxman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc/milestones/7", "html_url": "https://github.com/pymc-devs/pymc/milestone/7", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/milestones/7/labels", "id": 432681, "node_id": "MDk6TWlsZXN0b25lNDMyNjgx", "number": 7, "title": "Version 3.0.beta", "description": "", "creator": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 14, "state": "closed", "created_at": "2013-09-20T16:57:28Z", "updated_at": "2015-06-26T10:34:29Z", "due_on": null, "closed_at": "2015-06-26T10:34:29Z"}, "comments": 14, "created_at": "2013-09-04T21:48:54Z", "updated_at": "2015-06-10T08:57:30Z", "closed_at": "2015-05-31T05:50:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have the latest pymc3 installed in a recent anaconda environment, and it has 24 errors in the test suite.  Most are of the form:\n\nERROR: pymc.tests.test_examples.test_examples('pymc/examples/glm_robust.py',)\n\nTraceback (most recent call last):\n  File \"/homes/abie/anaconda/lib/python2.7/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"pymc/tests/test_examples.py\", line 36, in check_example\n    os.chdir(path.dirname(p))\nOSError: [Errno 2] No such file or directory: 'pymc/examples'\n\nAlthough there is one others: \n\nERROR: pymc.tests.test_plots.test_plots\n\nTraceback (most recent call last):\n  File \"/homes/abie/anaconda/lib/python2.7/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"pymc/tests/test_plots.py\", line 8, in test_plots\n    from pymc.examples import arbitrary_stochastic as asmod\nImportError: cannot import name arbitrary_stochastic\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/331/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/327", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/327/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/327/events", "html_url": "https://github.com/pymc-devs/pymc/issues/327", "id": 18624551, "node_id": "MDU6SXNzdWUxODYyNDU1MQ==", "number": 327, "title": "ARM example fails with NumPy master", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2013-08-27T18:17:38Z", "updated_at": "2013-09-05T00:51:45Z", "closed_at": "2013-09-05T00:51:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\n======================================================================\nERROR: pymc.tests.test_examples.test_examples('/home/travis/build/pymc-devs/pymc/pymc/examples/ARM5-4.py',)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"/home/travis/build/pymc-devs/pymc/pymc/tests/test_examples.py\", line 37, in check_example\n    imp.load_source('__main__', path.basename(p))\n  File \"ARM5-4.py\", line 36, in <module>\n    start = find_MAP()\n  File \"/home/travis/build/pymc-devs/pymc/pymc/tuning/starting.py\", line 46, in find_MAP\n    dlogp = bij.mapf(model.dlogpc(vars))\n  File \"/home/travis/build/pymc-devs/pymc/pymc/model.py\", line 81, in dlogpc\n    return compilef(gradient(model.logp, vars))\n  File \"/home/travis/build/pymc-devs/pymc/pymc/memoize.py\", line 14, in memoizer\n    cache[key] = obj(*args, **kwargs)\n  File \"/home/travis/build/pymc-devs/pymc/pymc/model.py\", line 179, in compilef\n    mode=mode)\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/compile/function.py\", line 223, in function\n    profile=profile)\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/compile/pfunc.py\", line 512, in pfunc\n    on_unused_input=on_unused_input)\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/compile/function_module.py\", line 1314, in orig_function\n    defaults)\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/compile/function_module.py\", line 1183, in create\n    _fn, _i, _o = self.linker.make_thunk(input_storage=input_storage_lists)\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gof/link.py\", line 434, in make_thunk\n    output_storage=output_storage)[:3]\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gof/vm.py\", line 845, in make_all\n    for node in order]\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gof/op.py\", line 591, in make_thunk\n    output_storage=node_output_storage)\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gof/cc.py\", line 933, in make_thunk\n    keep_lock=keep_lock)\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gof/cc.py\", line 876, in __compile__\n    keep_lock=keep_lock)\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gof/cc.py\", line 1297, in cthunk_factory\n    key = self.cmodule_key()\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gof/cc.py\", line 1017, in cmodule_key\n    c_compiler=self.c_compiler(),\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gof/cc.py\", line 1145, in cmodule_key_\n    for ipos, i in enumerate(node.inputs)),\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gof/cc.py\", line 1145, in <genexpr>\n    for ipos, i in enumerate(node.inputs)),\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gof/cc.py\", line 1099, in in_sig\n    isig = (isig[0].theano_hash(), topological_pos, i_idx)\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/tensor/var.py\", line 598, in theano_hash\n    return hash_from_ndarray(d)\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/tensor/utils.py\", line 25, in hash_from_ndarray\n    hash_from_code(str(data.strides)) +\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gof/cc.py\", line 32, in hash_from_code\n    return hashlib.md5(msg).hexdigest()\nValueError: ndarray is not C-contiguous\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/327/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/319", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/319/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/319/events", "html_url": "https://github.com/pymc-devs/pymc/issues/319", "id": 17411538, "node_id": "MDU6SXNzdWUxNzQxMTUzOA==", "number": 319, "title": "Incompatible shapes with use of Observed=True and Size=n", "user": {"login": "JamesPHoughton", "id": 4304478, "node_id": "MDQ6VXNlcjQzMDQ0Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4304478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JamesPHoughton", "html_url": "https://github.com/JamesPHoughton", "followers_url": "https://api.github.com/users/JamesPHoughton/followers", "following_url": "https://api.github.com/users/JamesPHoughton/following{/other_user}", "gists_url": "https://api.github.com/users/JamesPHoughton/gists{/gist_id}", "starred_url": "https://api.github.com/users/JamesPHoughton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JamesPHoughton/subscriptions", "organizations_url": "https://api.github.com/users/JamesPHoughton/orgs", "repos_url": "https://api.github.com/users/JamesPHoughton/repos", "events_url": "https://api.github.com/users/JamesPHoughton/events{/privacy}", "received_events_url": "https://api.github.com/users/JamesPHoughton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2013-07-30T18:19:54Z", "updated_at": "2014-07-23T16:32:25Z", "closed_at": "2013-07-31T14:06:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if this is a bug, or if I have a short between the chair and the keyboard, but I'm having trouble using the size parameter and the observed parameter together. Consider trying to find the weights of four biased coins:\n\n```\nnumcoins=4\nnumtrials=50\ntrue_p = numpy.random.random(size=numcoins)\nvalues = numpy.random.binomial(n=1, p=true_p, size=(numtrials,numcoins))\n\np = pymc.Uniform('p', lower=0, upper=1, size=numcoins)\nobs = pymc.Bernoulli('obs', p=p, size=numcoins, value=values, observed=True)\n```\n\nYields error:\n\n```\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-32-46dc39fa9cea> in <module>()\n      1 p = pymc.Uniform('p', lower=0, upper=1, size=numcoins)\n----> 2 obs = pymc.Bernoulli('obs', p=p, size=numcoins, value=values, observed=True)\n\n/Library/Python/2.7/site-packages/pymc/distributions.pyc in __init__(self, *args, **kwds)\n    242 \n    243                 if init_val_shape is not None and shape is not None and init_val_shape != shape:\n--> 244                     shape_error()\n    245 \n    246                 given_shape = init_val_shape or shape\n\n/Library/Python/2.7/site-packages/pymc/distributions.pyc in shape_error()\n    239 \n    240                 def shape_error():\n--> 241                     raise ValueError('Shapes are incompatible: value %s, largest parent %s, shape argument %s'%(shape, init_val_shape, parents_shape))\n    242 \n    243                 if init_val_shape is not None and shape is not None and init_val_shape != shape:\n\nValueError: Shapes are incompatible: value (4,), largest parent (50, 4), shape argument (4,)\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/319/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/318", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/318/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/318/events", "html_url": "https://github.com/pymc-devs/pymc/issues/318", "id": 17350603, "node_id": "MDU6SXNzdWUxNzM1MDYwMw==", "number": 318, "title": "Replace test_LazyFunction", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-07-29T16:58:32Z", "updated_at": "2013-09-16T04:35:17Z", "closed_at": "2013-09-16T04:35:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The unit test for LazyFunction is unreliable. I can make errors go away by printing the value that fails, which should not happen. I have removed the test from the test suite; it needs to be replaced.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/318/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/317", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/317/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/317/events", "html_url": "https://github.com/pymc-devs/pymc/issues/317", "id": 17020883, "node_id": "MDU6SXNzdWUxNzAyMDg4Mw==", "number": 317, "title": "Dirichlet test fails on travis only", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-07-21T16:43:24Z", "updated_at": "2013-09-05T00:52:20Z", "closed_at": "2013-09-05T00:52:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\nERROR: pymc.tests.test_examples.test_examples('/home/travis/build/pymc-devs/pymc/pymc/examples/dirichlet.py',)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"/home/travis/build/pymc-devs/pymc/pymc/tests/test_examples.py\", line 37, in check_example\n    imp.load_source('__main__', path.basename(p))\n  File \"dirichlet.py\", line 17, in <module>\n    H = model.d2logpc()\n  File \"/home/travis/build/pymc-devs/pymc/pymc/model.py\", line 84, in d2logpc\n    return compilef(hessian(model.logp, vars))\n  File \"/home/travis/build/pymc-devs/pymc/pymc/memoize.py\", line 14, in memoizer\n    cache[key] = obj(*args, **kwargs)\n  File \"/home/travis/build/pymc-devs/pymc/pymc/theanof.py\", line 89, in hessian\n    return -jacobian(gradient(f, vars), vars)\n  File \"/home/travis/build/pymc-devs/pymc/pymc/memoize.py\", line 14, in memoizer\n    cache[key] = obj(*args, **kwargs)\n  File \"/home/travis/build/pymc-devs/pymc/pymc/theanof.py\", line 84, in jacobian\n    return t.concatenate([jacobian1(f, v) for v in vars], axis=1)\n  File \"/home/travis/build/pymc-devs/pymc/pymc/theanof.py\", line 76, in jacobian1\n    return theano.map(grad_i, idx)[0]\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/scan_module/scan_views.py\", line 68, in map\n    name=name)\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/scan_module/scan.py\", line 732, in scan\n    condition, outputs, updates = scan_utils.get_updates_and_outputs(fn(*args))\n  File \"/home/travis/build/pymc-devs/pymc/pymc/theanof.py\", line 74, in grad_i\n    return gradient1(f[i], v)\n  File \"/home/travis/build/pymc-devs/pymc/pymc/theanof.py\", line 57, in gradient1\n    return t.flatten(t.grad(f, v, disconnected_inputs='warn'))\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gradient.py\", line 528, in grad\n    grad_dict, wrt, cost_name)\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gradient.py\", line 1101, in _populate_grad_dict\n    rval = [access_grad_cache(elem) for elem in wrt]\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gradient.py\", line 1061, in access_grad_cache\n    term = access_term_cache(node)[idx]\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gradient.py\", line 785, in access_term_cache\n    output_grads = [access_grad_cache(var) for var in node.outputs]\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gradient.py\", line 1061, in access_grad_cache\n    term = access_term_cache(node)[idx]\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gradient.py\", line 785, in access_term_cache\n    output_grads = [access_grad_cache(var) for var in node.outputs]\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gradient.py\", line 1061, in access_grad_cache\n    term = access_term_cache(node)[idx]\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gradient.py\", line 785, in access_term_cache\n    output_grads = [access_grad_cache(var) for var in node.outputs]\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gradient.py\", line 1061, in access_grad_cache\n    term = access_term_cache(node)[idx]\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gradient.py\", line 785, in access_term_cache\n    output_grads = [access_grad_cache(var) for var in node.outputs]\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gradient.py\", line 1061, in access_grad_cache\n    term = access_term_cache(node)[idx]\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gradient.py\", line 785, in access_term_cache\n    output_grads = [access_grad_cache(var) for var in node.outputs]\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gradient.py\", line 1061, in access_grad_cache\n    term = access_term_cache(node)[idx]\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gradient.py\", line 785, in access_term_cache\n    output_grads = [access_grad_cache(var) for var in node.outputs]\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gradient.py\", line 1061, in access_grad_cache\n    term = access_term_cache(node)[idx]\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gradient.py\", line 785, in access_term_cache\n    output_grads = [access_grad_cache(var) for var in node.outputs]\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gradient.py\", line 1061, in access_grad_cache\n    term = access_term_cache(node)[idx]\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gradient.py\", line 913, in access_term_cache\n    node.outputs, new_output_grads):\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gof/op.py\", line 725, in get_debug_values\n    rval.append(get_test_value(arg))\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/gof/op.py\", line 641, in get_test_value\n    v_tensor = theano.tensor.as_tensor_variable(v)\n  File \"/home/travis/virtualenv/python2.7/local/lib/python2.7/site-packages/theano/tensor/basic.py\", line 217, in as_tensor_variable\n    raise AsTensorError(\"Cannot convert %s to TensorType\" % str_x, type(x))\nAsTensorError: ('Cannot convert [Split{2}.0, Split{2}.1] to TensorType', <type 'list'>)\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/317/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/316", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/316/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/316/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/316/events", "html_url": "https://github.com/pymc-devs/pymc/issues/316", "id": 17011767, "node_id": "MDU6SXNzdWUxNzAxMTc2Nw==", "number": 316, "title": "Stochastics with vector-valued parameters fail during sampling", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "jsalvatier", "id": 270513, "node_id": "MDQ6VXNlcjI3MDUxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/270513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsalvatier", "html_url": "https://github.com/jsalvatier", "followers_url": "https://api.github.com/users/jsalvatier/followers", "following_url": "https://api.github.com/users/jsalvatier/following{/other_user}", "gists_url": "https://api.github.com/users/jsalvatier/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsalvatier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsalvatier/subscriptions", "organizations_url": "https://api.github.com/users/jsalvatier/orgs", "repos_url": "https://api.github.com/users/jsalvatier/repos", "events_url": "https://api.github.com/users/jsalvatier/events{/privacy}", "received_events_url": "https://api.github.com/users/jsalvatier/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsalvatier", "id": 270513, "node_id": "MDQ6VXNlcjI3MDUxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/270513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsalvatier", "html_url": "https://github.com/jsalvatier", "followers_url": "https://api.github.com/users/jsalvatier/followers", "following_url": "https://api.github.com/users/jsalvatier/following{/other_user}", "gists_url": "https://api.github.com/users/jsalvatier/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsalvatier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsalvatier/subscriptions", "organizations_url": "https://api.github.com/users/jsalvatier/orgs", "repos_url": "https://api.github.com/users/jsalvatier/repos", "events_url": "https://api.github.com/users/jsalvatier/events{/privacy}", "received_events_url": "https://api.github.com/users/jsalvatier/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2013-07-20T21:45:44Z", "updated_at": "2016-07-08T07:36:32Z", "closed_at": "2016-07-08T07:36:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In trying to implement a Categorical variable, I have defined its log-probability as follows:\n\n```\n@tensordist(discrete)\ndef Categorical(p):\n    def logp(value):\n        return bound(\n            log(p[value]),\n            all(0 <= p), all(p <= 1))\n\n    mode = argmax(p\n\n    return locals()\n```\n\nHowever, when I pass this to a sampler, say with Dirichlet probabilities:\n\n```\nwith Model() as model:\n    k=3\n    a = np.ones(k)\n    p, p_m1 = model.TransformedVar(\n        'p', Dirichlet.dist(k, a, shape=k),\n        simplextransform)\n    c = Categorical('c', p, observed=[0,0,1,1,0,2])\n```\n\nI get a `ValueError` complaining of a dimension mis-match between p and x:\n\n```\nValueError: ('Input dimension mis-match. (input[0].shape[0] = 3, input[1].shape[0] = 6)', Elemwise{switch,no_inplace}(<TensorType(int8, vector)>, <TensorType(float64, vector)>, <TensorType(float32, (True,))>), [Elemwise{switch,no_inplace}.0])\n```\n\nHow best to deal with univariate distribution with a vector-valued parameter?\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/316/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/311", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/311/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/311/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/311/events", "html_url": "https://github.com/pymc-devs/pymc/issues/311", "id": 16818815, "node_id": "MDU6SXNzdWUxNjgxODgxNQ==", "number": 311, "title": "DiscreteUniform not respecting bounds", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-07-16T16:17:11Z", "updated_at": "2013-08-25T22:03:55Z", "closed_at": "2013-08-25T22:03:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The `DiscreteUniform` distribution does not respect the bound imposed via the `lower` and `upper` arguments. In a model of mine, I have specified the following:\n\n```\nswitchpoint = DiscreteUniform('switchpoint', lower=0, upper=sma_data.season.max()-1)\n```\n\nNotice a lower bound of zero is specified, and yet it is accepting negative samples:\n\n```\nswitchpoint:\n\n    Mean             SD               MC Error        95% HPD interval\n    ------------------------------------------------------------------\n    -2.557           4.603            0.459                  [-12   2]\n\n\n    Posterior quantiles:\n\n    2.5             25              50              75             97.5\n     |---------------|===============|===============|---------------|\n    -12.0            -5.0            0.0            1.0           2.0\n```\n\nI assume this is a problem with the `bound` function?\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/311/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/309", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/309/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/309/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/309/events", "html_url": "https://github.com/pymc-devs/pymc/issues/309", "id": 16624516, "node_id": "MDU6SXNzdWUxNjYyNDUxNg==", "number": 309, "title": "pymc.test() failure on MacOS 10.7.5", "user": {"login": "robertotrotta", "id": 4989015, "node_id": "MDQ6VXNlcjQ5ODkwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4989015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertotrotta", "html_url": "https://github.com/robertotrotta", "followers_url": "https://api.github.com/users/robertotrotta/followers", "following_url": "https://api.github.com/users/robertotrotta/following{/other_user}", "gists_url": "https://api.github.com/users/robertotrotta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertotrotta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertotrotta/subscriptions", "organizations_url": "https://api.github.com/users/robertotrotta/orgs", "repos_url": "https://api.github.com/users/robertotrotta/repos", "events_url": "https://api.github.com/users/robertotrotta/events{/privacy}", "received_events_url": "https://api.github.com/users/robertotrotta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2013-07-11T10:47:57Z", "updated_at": "2013-09-16T04:02:40Z", "closed_at": "2013-09-16T04:02:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\nI'm running the test suite on MacOS 10.7.5 and it hangs with this output:\n\npymc.test()\n..K...Running unit tests for pymc.tests\nNumPy version 1.7.1\nNumPy is installed in /Applications/Canopy.app/appdata/canopy-1.0.3.1262.macosx-x86_64/Canopy.app/Contents/lib/python2.7/site-packages/numpy\nPython version 2.7.3 | 64-bit | (default, Jun 14 2013, 18:17:36) [GCC 4.2.1 (Apple Inc. build 5666) (dot 3)]\nnose version 1.2.1\nCould not generate output statistics for. early_mean\nPlotting early_mean\nPlotting switchpoint\nPlottingE..F...........S.............S..........\n\nPlot windows are produced and they blink all the time -- no visible output is ever plotted. \n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/309/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/304", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/304/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/304/events", "html_url": "https://github.com/pymc-devs/pymc/issues/304", "id": 16267724, "node_id": "MDU6SXNzdWUxNjI2NzcyNA==", "number": 304, "title": "Array-valued variables and hdf5, with multiple chains", "user": {"login": "mpjdem", "id": 4885187, "node_id": "MDQ6VXNlcjQ4ODUxODc=", "avatar_url": "https://avatars.githubusercontent.com/u/4885187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpjdem", "html_url": "https://github.com/mpjdem", "followers_url": "https://api.github.com/users/mpjdem/followers", "following_url": "https://api.github.com/users/mpjdem/following{/other_user}", "gists_url": "https://api.github.com/users/mpjdem/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpjdem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpjdem/subscriptions", "organizations_url": "https://api.github.com/users/mpjdem/orgs", "repos_url": "https://api.github.com/users/mpjdem/repos", "events_url": "https://api.github.com/users/mpjdem/events{/privacy}", "received_events_url": "https://api.github.com/users/mpjdem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-07-02T14:51:56Z", "updated_at": "2013-07-08T10:24:47Z", "closed_at": "2013-07-08T10:24:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I had another multiple-chain issue with HDF5, that does not occur with for instance an sqlite backend. It occurs when concatenating the traces of an array-valued variable, manually or through stats(), csv_write(),... they get stacked along the wrong axis.\n\nThere is no problem with the HDF5 database itself; I believe the bug is found in the use of hstack() in both the Trace.**getitem**() and the Trace.gettrace() function.\n\n``` python\n\nimport pymc as mc\nimport numpy as np\n\ndat = np.random.rand(10)\nmu = mc.Normal('mu', 0.5, 1e6, value=0.5)\nmus = mc.Normal('mus', mu, 1., value=np.ones(10)*0.5)\nobs = mc.Normal('obs', mus, 1., value=dat)\n\nm = mc.MCMC([mu, mus, obs], db='hdf5', dbname='tmp.h5')\n\nm.sample(100, progress_bar=False)\nm.sample(100, progress_bar=False)\n\n# No problem\nprint m.trace('mu', chain=0)[:].shape\nprint m.trace('mu', chain=1)[:].shape\nprint m.trace('mu', chain=None)[:].shape\n\n# Problem\nprint m.trace('mus', chain=0)[:].shape\nprint m.trace('mus', chain=1)[:].shape\nprint m.trace('mus', chain=None)[:].shape\n\n# Also with stats()\nprint m.stats()['mus']['mean'].shape\n\nm.db.close()\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/304/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/298", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/298/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/298/events", "html_url": "https://github.com/pymc-devs/pymc/issues/298", "id": 15726197, "node_id": "MDU6SXNzdWUxNTcyNjE5Nw==", "number": 298, "title": "pymc3: Gradient computation fails for Bound distributions (fix included)", "user": {"login": "kadeng", "id": 480959, "node_id": "MDQ6VXNlcjQ4MDk1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/480959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kadeng", "html_url": "https://github.com/kadeng", "followers_url": "https://api.github.com/users/kadeng/followers", "following_url": "https://api.github.com/users/kadeng/following{/other_user}", "gists_url": "https://api.github.com/users/kadeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kadeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kadeng/subscriptions", "organizations_url": "https://api.github.com/users/kadeng/orgs", "repos_url": "https://api.github.com/users/kadeng/repos", "events_url": "https://api.github.com/users/kadeng/events{/privacy}", "received_events_url": "https://api.github.com/users/kadeng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-06-19T03:52:37Z", "updated_at": "2013-08-24T22:39:21Z", "closed_at": "2013-08-24T22:39:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I experimented a bit with \"Bound\" distributions in PyMC3, and found that the following code raises an exception:\n\n``` python\nPositiveNormal = Bound(Normal, -0.2)  # Normal distribution with a lower bound at -0.2\nval = T.dscalar('val')\ndist = PositiveNormal.dist(mu=0.2, tau=1.)\nlogp = dist.logp(val)\ndlogp = theano.tensor.grad(logp, val) # This one raises an exception\n```\n\nThe problem is, that the bitwise \"AND\" operator used in the \"alltrue\" method does not have a gradient.\n\nA simple fix seems to be to replace the \"&\" found in pymc.dist_math.alltrue() with a multiplication. In this case, the gradient calculation works, and the effect seems to be the same.\n\nSo the fixed version of \"alltrue\" looks like this:\n\n``` python\ndef alltrue(vals):\n    ret = 1\n    for c in vals:\n        ret = ret * (1 * c)\n    return ret\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/298/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/295", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/295/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/295/events", "html_url": "https://github.com/pymc-devs/pymc/issues/295", "id": 15649978, "node_id": "MDU6SXNzdWUxNTY0OTk3OA==", "number": 295, "title": "Sampler converging on \"wrong\" answer: Incorrectly evaluating logp?", "user": {"login": "keflavich", "id": 143715, "node_id": "MDQ6VXNlcjE0MzcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/143715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keflavich", "html_url": "https://github.com/keflavich", "followers_url": "https://api.github.com/users/keflavich/followers", "following_url": "https://api.github.com/users/keflavich/following{/other_user}", "gists_url": "https://api.github.com/users/keflavich/gists{/gist_id}", "starred_url": "https://api.github.com/users/keflavich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keflavich/subscriptions", "organizations_url": "https://api.github.com/users/keflavich/orgs", "repos_url": "https://api.github.com/users/keflavich/repos", "events_url": "https://api.github.com/users/keflavich/events{/privacy}", "received_events_url": "https://api.github.com/users/keflavich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2013-06-17T19:06:35Z", "updated_at": "2013-06-17T20:31:39Z", "closed_at": "2013-06-17T20:30:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm dealing with a bug that has me completely perplexed; I honestly can't tell if it's something in pymc or something weird that I've done, but the end result is that the MCMC sampler converges on a result with _much lower_ probability than the start point and completely rejects the \"correct\" values.\n\nTo debug this, I've patched my code with the following extra debug statements (which might be of general interest?):\nhttps://github.com/keflavich/pymc/commit/27732ed5e23b87df3961684f583a4bfbb2f929cd\n\nMy sampling looks like this:\n\n```\n>>> mc40.sample(1,verbose=5) #ok, verbose=4 is adequate....\n\nBurn-in interval complete\nStep method AdaptiveMetropolis_TEMPERATURE0_COLUMN0_ORTHOPARA0_DENSITY0 stepping\n        AdaptiveMetropolis_TEMPERATURE0_COLUMN0_ORTHOPARA0_DENSITY0 Current log-likelihood plus current log-probability 371.132206505\nCurrent value:  [ 32.15067948  12.48718019   0.30510997   4.21776136]\nCurrent likelihood:  371.132206505\nJump : [-0.64332924  0.21059998 -0.04582936  0.02066177]\n        AdaptiveMetropolis_TEMPERATURE0_COLUMN0_ORTHOPARA0_DENSITY0 Current log-likelihood plus current log-probability -1522.83027611\nCurrent value:  [ 31.50735024  12.69778017   0.25928061   4.23842313]\nCurrent likelihood:  -1522.83027611\nRejected\nStep method Metropolis_WIDTH0 stepping\n\nMetropolis_WIDTH0 getting initial logp.\n        Metropolis_WIDTH0 Current log-likelihood plus current log-probability -565073.087919\nMetropolis_WIDTH0 value before proposing:  0.372648880284\nMetropolis_WIDTH0 logp before proposing:  3.72083402348\n        Metropolis_WIDTH0 Current log-likelihood  -565076.808753\nTotal loglike before proposing:  -565076.808753\nMetropolis_WIDTH0 proposing.\nMetropolis_WIDTH0 value after proposing:  0.36808465319\nMetropolis_WIDTH0 logp after proposing:  3.00373650608\n        Metropolis_WIDTH0 Current log-likelihood  -555949.785666\nTotal loglike after proposing:  -555949.785666\n        Metropolis_WIDTH0 Current log-likelihood  -555949.785666\nTotal loglike after-before:  9123.30225314\n        Metropolis_WIDTH0 Current log-likelihood plus current log-probability -555946.78193\nlogp_p - logp:  9126.30598965\nMetropolis_WIDTH0 accepting\nMetropolis_WIDTH0 returning.\nStep method Metropolis_CENTER0 stepping\n\nMetropolis_CENTER0 getting initial logp.\n        Metropolis_CENTER0 Current log-likelihood plus current log-probability -555946.233049\nMetropolis_CENTER0 value before proposing:  39.5413860111\nMetropolis_CENTER0 logp before proposing:  3.55261688359\n        Metropolis_CENTER0 Current log-likelihood  -555949.785666\nTotal loglike before proposing:  -555949.785666\nMetropolis_CENTER0 proposing.\nMetropolis_CENTER0 value after proposing:  37.9412012151\nMetropolis_CENTER0 rejecting due to ZeroProbability.\nMetropolis_CENTER0 returning.\nMCMC tallying.\nMCMC done tallying.\n\nSampling finished normally.\n```\n\nThe problem is that the step has accepted a value with very low total likelihood:\n\n```\nIn [2]: mc40.WIDTH0.value\nOut[2]: array(0.3680846531895133)\n\nIn [3]: mc40.logp\nOut[3]: 375.7484261522879\n\nIn [6]: mc40.WIDTH0.value =   0.378232\n\nIn [7]: mc40.logp\nOut[7]: 379.53196249724726\n```\n\nThe latter is pretty close to optimal.  That's not so bad, but if I repeat with ~10-15 samples, I rapidly hit something exceedingly unlikely:\n\n```\nIn [19]: mc40.WIDTH0.value\nOut[19]: array(0.319464682867294)\n\nIn [20]: mc40.logp\nOut[20]: 246.58753561908654\n```\n\nCan you provide any tips on what's causing these issues?  Am I perhaps running into floating underflows that are making the log-probabilities come out incorrectly? \n\nI'm happy to provide the full data etc. that goes into this, but frankly it's fairly complicated and difficult to set up, so it's probably best if there are some specific questions I should be asking myself.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/295/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/293", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/293/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/293/events", "html_url": "https://github.com/pymc-devs/pymc/issues/293", "id": 15525707, "node_id": "MDU6SXNzdWUxNTUyNTcwNw==", "number": 293, "title": "TypeError in Normal", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-06-13T19:38:04Z", "updated_at": "2015-02-12T20:33:25Z", "closed_at": "2015-02-12T20:33:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I get a strange `TypeError` when using a Normal as a stochastic with stochastic parents. For example, if I am trying to draw from the posterior predictive distribution:\n\n```\ndiffs = Normal(\"diffs\", mu=mu, tau=tau, observed=y)\ndiff_pred = Normal(\"diff_pred\", mu=mu, tau=tau)\n```\n\nI get the following when I specify the model (i.e. before sampling):\n\n```\n/Users/fonnescj/Code/pymc3/pymc/distributions/continuous.pyc in logp(value)\n    106 \n    107         return bound(\n--> 108             (-tau * (value - mu) ** 2 + log(tau / pi / 2.)) / 2.,\n    109             tau > 0)\n    110 \n\nTypeError: unsupported operand type(s) for -: 'TensorVariable' and 'TensorVariable'\n```\n\nSurely we can subtract tensors from one another?\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/293/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/291", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/291/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/291/events", "html_url": "https://github.com/pymc-devs/pymc/issues/291", "id": 15326604, "node_id": "MDU6SXNzdWUxNTMyNjYwNA==", "number": 291, "title": "vars argument fails in approx_hess", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-06-09T21:58:06Z", "updated_at": "2013-06-10T12:37:30Z", "closed_at": "2013-06-10T02:04:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Irrespective of which variables I pass to the `vars` argument in  `approx_hess`, a TypeError is generated:\n\n```\nTypeError: can't turn ([mu, theta, betas, sigma_b, b],) and {} into a dict. cannot convert dictionary update sequence element #0 to a sequence\n```\n\nTried passing a list of variables and list of variable names, but neither works.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/291/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/289", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/289/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/289/events", "html_url": "https://github.com/pymc-devs/pymc/issues/289", "id": 15284086, "node_id": "MDU6SXNzdWUxNTI4NDA4Ng==", "number": 289, "title": "Optimizing nu of a T distribution walks out of support.", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-06-07T17:57:34Z", "updated_at": "2015-02-12T20:46:01Z", "closed_at": "2015-02-12T20:46:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "``` python\ndata = np.random.randn(100)\n\nwith Model() as model_T:\n     nu = Uniform('nu', 1, 10)\n     obs = T('data', mu=0, lam=1, nu=nu, observed=data)\n     find_MAP(vars=[nu])\n```\n\nCreates this traceback:\n\n```\nTruncated Traceback (Use C-c C-x to view full TB):\n/home/whyking/tools/pymc/pymc/pymc/tuning/starting.pyc in find_MAP(start, vars, fmin, return_raw, disp, model, *args, **kwargs)\n     63             not allfinite(dlogp(mx))):\n     64             raise ValueError(\"Optimization error: max, logp or dlogp at max have bad values. max: \" + repr(mx) + \" logp: \" + repr(logp(mx)) + \" dlogp: \" + repr(dlogp(mx)) +\n---> 65                              \"Check that 1) you don't have hierarchical parameters, these will lead to points with infinite density. 2) your distribution logp's are properly specified.\")\n     66 \n     67     mx = bij.rmap(mx)\n\nValueError: Optimization error: max, logp or dlogp at max have bad values. max: array([ 12.61168354]) logp: array(-inf) dlogp: array([ 0.02809233])Check that 1) you don't have hierarchical parameters, these will lead to points with infinite density. 2) your distribution logp's are properly specified.\n```\n\nNote that it's trying to evaluate `nu` at `array([ 12.61168354])`, i.e. outside the Uniform density.\n\nAny idea why this might be happening?\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/289/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/276", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/276/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/276/events", "html_url": "https://github.com/pymc-devs/pymc/issues/276", "id": 14528541, "node_id": "MDU6SXNzdWUxNDUyODU0MQ==", "number": 276, "title": "Smart resizing for traceplot", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-05-20T16:53:36Z", "updated_at": "2013-11-13T18:13:48Z", "closed_at": "2013-11-12T14:53:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Running `traceplot` with several traces can result in plots that look like this:\n\n![unknown](https://f.cloud.github.com/assets/81476/537322/a76b0b74-c16d-11e2-9660-5f8eadd381f5.png)\n\nOur plotting functions should be smarter about resizing themselves to match the dimensionality of the trace.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/276/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/272", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/272/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/272/events", "html_url": "https://github.com/pymc-devs/pymc/issues/272", "id": 14525450, "node_id": "MDU6SXNzdWUxNDUyNTQ1MA==", "number": 272, "title": "Memory allocation error in sample", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-05-20T15:43:57Z", "updated_at": "2015-02-12T20:32:58Z", "closed_at": "2015-02-12T20:32:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The model in [this zip archive](https://dl.dropboxusercontent.com/u/233041/debug.zip) yields a nasty memory allocation error when run with `psample`. Does not seem to happen with `sample`:\n\n```\npython(55810) malloc: *** error for object 0x10d070000: pointer being freed was not allocated\n*** set a breakpoint in malloc_error_break to debug\n[cepeda:55810] *** Process received signal ***\n[cepeda:55810] Signal: Abort trap: 6 (6)\n[cepeda:55810] Signal code:  (0)\n[cepeda:55810] [ 0] 2   libsystem_c.dylib                   0x00007fff99bad94a _sigtramp + 26\n[cepeda:55810] [ 1] 3   ???                                 0x000000010027c998 0x0 + 4297574808\n[cepeda:55810] [ 2] 4   libLAPACK.dylib                     0x00007fff8e0f042d dgetrf_FactorColumn + 311\n[cepeda:55810] [ 3] 5   libLAPACK.dylib                     0x00007fff8e0f0b3e DGETRF + 845\n[cepeda:55810] [ 4] 6   _umath_linalg.so                    0x00000001013a6fdb DOUBLE_det + 394\n[cepeda:55810] [ 5] 7   umath.so                            0x00000001013032cf PyUFunc_GeneralizedFunction + 2726\n[cepeda:55810] [ 6] 8   umath.so                            0x0000000101303728 PyUFunc_GenericFunction + 199\n[cepeda:55810] [ 7] 9   umath.so                            0x0000000101304aef ufunc_generic_call + 110\n[cepeda:55810] [ 8] 10  Python                              0x00000001000e46c6 PyObject_Call + 97\n[cepeda:55810] [ 9] 11  Python                              0x00000001000ee78d PyEval_EvalFrameEx + 9728\n[cepeda:55810] [10] 12  Python                              0x00000001000ec147 PyEval_EvalCodeEx + 1934\n[cepeda:55810] [11] 13  Python                              0x00000001000f28df _PyEval_SliceIndex + 989\n[cepeda:55810] [12] 14  Python                              0x00000001000ee63a PyEval_EvalFrameEx + 9389\n[cepeda:55810] [13] 15  Python                              0x00000001000f2869 _PyEval_SliceIndex + 871\n[cepeda:55810] [14] 16  Python                              0x00000001000ee63a PyEval_EvalFrameEx + 9389\n[cepeda:55810] [15] 17  Python                              0x00000001000ec147 PyEval_EvalCodeEx + 1934\n[cepeda:55810] [16] 18  Python                              0x0000000100125d7a PyFunction_SetClosure + 872\n[cepeda:55810] [17] 19  Python                              0x00000001000e46c6 PyObject_Call + 97\n[cepeda:55810] [18] 20  Python                              0x00000001000f2018 PyEval_CallObjectWithKeywords + 177\n[cepeda:55810] [19] 21  lazylinker_ext.so                   0x000000010042f61f _ZL6pycallP11CLazyLinkerli + 479\n[cepeda:55810] [20] 22  lazylinker_ext.so                   0x000000010042ff4c _ZL13lazy_rec_evalP11CLazyLinkerlP7_objectS2_ + 2316\n[cepeda:55810] [21] 23  lazylinker_ext.so                   0x000000010042fe4f _ZL13lazy_rec_evalP11CLazyLinkerlP7_objectS2_ + 2063\n[cepeda:55810] [22] 24  lazylinker_ext.so                   0x000000010042c6db _Z16CLazyLinker_callP7_objectS0_S0_ + 875\n[cepeda:55810] [23] 25  Python                              0x00000001000e46c6 PyObject_Call + 97\n[cepeda:55810] [24] 26  Python                              0x00000001000ee78d PyEval_EvalFrameEx + 9728\n[cepeda:55810] [25] 27  Python                              0x00000001000ec147 PyEval_EvalCodeEx + 1934\n[cepeda:55810] [26] 28  Python                              0x0000000100125d7a PyFunction_SetClosure + 872\n[cepeda:55810] [27] 29  Python                              0x00000001000e46c6 PyObject_Call + 97\n[cepeda:55810] [28] 30  Python                              0x00000001001019bf PyMethod_New + 1627\n[cepeda:55810] [29] 31  Python                              0x00000001000e46c6 PyObject_Call + 97\n[cepeda:55810] *** End of error message ***\npython(55811) malloc: *** error for object 0x10d278000: entry for pointer being freed from death-row vanished\n*** set a breakpoint in malloc_error_break to debug\n[cepeda:55811] *** Process received signal ***\n[cepeda:55811] Signal: Abort trap: 6 (6)\n[cepeda:55811] Signal code:  (0)\n[cepeda:55811] [ 0] 2   libsystem_c.dylib                   0x00007fff99bad94a _sigtramp + 26\n[cepeda:55811] [ 1] 3   multiarray.so                       0x0000000101186254 PyArray_GetDTypeTransferFunction + 320\n[cepeda:55811] [ 2] 4   libsystem_c.dylib                   0x00007fff99be0905 szone_error + 580\n[cepeda:55811] [ 3] 5   libsystem_c.dylib                   0x00007fff99be0f7d free_large + 229\n[cepeda:55811] [ 4] 6   libsystem_c.dylib                   0x00007fff99bd88f8 free + 199\n[cepeda:55811] [ 5] 7   libBLAS.dylib                       0x00007fff91dec0b5 APL_dgemm + 1042\n[cepeda:55811] [ 6] 8   libLAPACK.dylib                     0x00007fff8e0f0594 dgetrf_FactorColumn + 670\n[cepeda:55811] [ 7] 9   libLAPACK.dylib                     0x00007fff8e0f0b3e DGETRF + 845\n[cepeda:55811] [ 8] 10  _umath_linalg.so                    0x00000001013a6fdb DOUBLE_det + 394\n[cepeda:55811] [ 9] 11  umath.so                            0x00000001013032cf PyUFunc_GeneralizedFunction + 2726\n[cepeda:55811] [10] 12  umath.so                            0x0000000101303728 PyUFunc_GenericFunction + 199\n[cepeda:55811] [11] 13  umath.so                            0x0000000101304aef ufunc_generic_call + 110\n[cepeda:55811] [12] 14  Python                              0x00000001000e46c6 PyObject_Call + 97\n[cepeda:55811] [13] 15  Python                              0x00000001000ee78d PyEval_EvalFrameEx + 9728\n[cepeda:55811] [14] 16  Python                              0x00000001000ec147 PyEval_EvalCodeEx + 1934\n[cepeda:55811] [15] 17  Python                              0x00000001000f28df _PyEval_SliceIndex + 989\n[cepeda:55811] [16] 18  Python                              0x00000001000ee63a PyEval_EvalFrameEx + 9389\n[cepeda:55811] [17] 19  Python                              0x00000001000f2869 _PyEval_SliceIndex + 871\n[cepeda:55811] [18] 20  Python                              0x00000001000ee63a PyEval_EvalFrameEx + 9389\n[cepeda:55811] [19] 21  Python                              0x00000001000ec147 PyEval_EvalCodeEx + 1934\n[cepeda:55811] [20] 22  Python                              0x0000000100125d7a PyFunction_SetClosure + 872\n[cepeda:55811] [21] 23  Python                              0x00000001000e46c6 PyObject_Call + 97\n[cepeda:55811] [22] 24  Python                              0x00000001000f2018 PyEval_CallObjectWithKeywords + 177\n[cepeda:55811] [23] 25  lazylinker_ext.so                   0x000000010042f61f _ZL6pycallP11CLazyLinkerli + 479\n[cepeda:55811] [24] 26  lazylinker_ext.so                   0x000000010042ff4c _ZL13lazy_rec_evalP11CLazyLinkerlP7_objectS2_ + 2316\n[cepeda:55811] [25] 27  lazylinker_ext.so                   0x000000010042fe4f _ZL13lazy_rec_evalP11CLazyLinkerlP7_objectS2_ + 2063\n[cepeda:55811] [26] 28  lazylinker_ext.so                   0x000000010042c6db _Z16CLazyLinker_callP7_objectS0_S0_ + 875\n[cepeda:55811] [27] 29  Python                              0x00000001000e46c6 PyObject_Call + 97\n[cepeda:55811] [28] 30  Python                              0x00000001000ee78d PyEval_EvalFrameEx + 9728\n[cepeda:55811] [29] 31  Python                              0x00000001000ec147 PyEval_EvalCodeEx + 1934\n[cepeda:55811] *** End of error message ***\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/272/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/268", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/268/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/268/events", "html_url": "https://github.com/pymc-devs/pymc/issues/268", "id": 14415864, "node_id": "MDU6SXNzdWUxNDQxNTg2NA==", "number": 268, "title": "Better error message if find_MAP is called with list of variables with as starting param", "user": {"login": "jsalvatier", "id": 270513, "node_id": "MDQ6VXNlcjI3MDUxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/270513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsalvatier", "html_url": "https://github.com/jsalvatier", "followers_url": "https://api.github.com/users/jsalvatier/followers", "following_url": "https://api.github.com/users/jsalvatier/following{/other_user}", "gists_url": "https://api.github.com/users/jsalvatier/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsalvatier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsalvatier/subscriptions", "organizations_url": "https://api.github.com/users/jsalvatier/orgs", "repos_url": "https://api.github.com/users/jsalvatier/repos", "events_url": "https://api.github.com/users/jsalvatier/events{/privacy}", "received_events_url": "https://api.github.com/users/jsalvatier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-05-16T16:58:34Z", "updated_at": "2013-05-23T12:42:59Z", "closed_at": "2013-05-23T12:42:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The first parameter is a starting point, and if you pass a list of vars it gives the error `returns  cannot convert dictionary update sequence element #0 to a sequence` which is not very clear.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/268/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/267", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/267/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/267/events", "html_url": "https://github.com/pymc-devs/pymc/issues/267", "id": 14374092, "node_id": "MDU6SXNzdWUxNDM3NDA5Mg==", "number": 267, "title": "Terminal hangs on exit when using PyMC 3", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2013-05-15T19:08:52Z", "updated_at": "2015-06-03T12:26:18Z", "closed_at": "2015-06-03T12:26:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm not sure what is responsible for this (a Theano issue?), but when I am using PyMC 3 from the Python/iPython command prompt on OSX (10.8.3), exiting the session (e.g. via ctrl-d), the terminal frequently hangs and the entire terminal window must be forcibly closed. Anyone else get this?\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/267/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/260", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/260/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/260/events", "html_url": "https://github.com/pymc-devs/pymc/issues/260", "id": 14273158, "node_id": "MDU6SXNzdWUxNDI3MzE1OA==", "number": 260, "title": "Covariance matrix in Metroplis Step", "user": {"login": "kyleabeauchamp", "id": 1900459, "node_id": "MDQ6VXNlcjE5MDA0NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1900459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleabeauchamp", "html_url": "https://github.com/kyleabeauchamp", "followers_url": "https://api.github.com/users/kyleabeauchamp/followers", "following_url": "https://api.github.com/users/kyleabeauchamp/following{/other_user}", "gists_url": "https://api.github.com/users/kyleabeauchamp/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleabeauchamp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleabeauchamp/subscriptions", "organizations_url": "https://api.github.com/users/kyleabeauchamp/orgs", "repos_url": "https://api.github.com/users/kyleabeauchamp/repos", "events_url": "https://api.github.com/users/kyleabeauchamp/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleabeauchamp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-05-13T17:57:23Z", "updated_at": "2015-02-12T20:32:23Z", "closed_at": "2015-02-12T20:32:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've been having some issues with using a covariance matrix in the Metrepolis step.  Here is some example code:\n\n```\nimport pymc\n\nn = 10\n\nwith pymc.Model() as model:\n    alpha = pymc.distributions.Flat('alpha', shape=(n))\n    model.AddPotential(-1 * (alpha ** 2.).sum())\n    start = pymc.find_MAP()\n    h = pymc.approx_hessian(start)\n    step = pymc.Metropolis(model.vars, S=h)\n    trace = pymc.sample(3000, step, start)\n```\n\nThis code raises an error:\n\n```\npymc/step_methods/metropolis.pyc in astep(self, q0, logp)\n     95             self.accepted = 0\n     96 \n---> 97         delta = self.proposal_dist() * self.scaling\n     98 \n     99         q = q0 + delta\n\n/pymc/step_methods/metropolis.pyc in __call__(self)\n     21 class NormalProposal(Proposal):\n     22     def __call__(self):\n---> 23         return normal(scale=self.s)\n     24 \n     25 \nnumpy/random/mtrand.so in mtrand.RandomState.normal (numpy/random/mtrand/mtrand.c:9268)()\n```\n\nIf I disable the proposal covariance, things run fine:\n\n```\nwith pymc.Model() as model:\n    alpha = pymc.distributions.Flat('alpha', shape=(n))\n    model.AddPotential(-1 * (alpha ** 2.).sum())\n    start = pymc.find_MAP()\n    h = pymc.approx_hess(start)\n    step = pymc.Metropolis(model.vars)\n    trace = pymc.sample(3000, step, start)\n```\n\nIf I use an identity matrix for the proposal distribution, I _still_ get the error.  Am I building my model incorrectly, or is there something wrong here?\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/260/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/259", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/259/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/259/events", "html_url": "https://github.com/pymc-devs/pymc/issues/259", "id": 14247255, "node_id": "MDU6SXNzdWUxNDI0NzI1NQ==", "number": 259, "title": "Betabin test stalling", "user": {"login": "jsalvatier", "id": 270513, "node_id": "MDQ6VXNlcjI3MDUxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/270513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsalvatier", "html_url": "https://github.com/jsalvatier", "followers_url": "https://api.github.com/users/jsalvatier/followers", "following_url": "https://api.github.com/users/jsalvatier/following{/other_user}", "gists_url": "https://api.github.com/users/jsalvatier/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsalvatier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsalvatier/subscriptions", "organizations_url": "https://api.github.com/users/jsalvatier/orgs", "repos_url": "https://api.github.com/users/jsalvatier/repos", "events_url": "https://api.github.com/users/jsalvatier/events{/privacy}", "received_events_url": "https://api.github.com/users/jsalvatier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "jsalvatier", "id": 270513, "node_id": "MDQ6VXNlcjI3MDUxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/270513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsalvatier", "html_url": "https://github.com/jsalvatier", "followers_url": "https://api.github.com/users/jsalvatier/followers", "following_url": "https://api.github.com/users/jsalvatier/following{/other_user}", "gists_url": "https://api.github.com/users/jsalvatier/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsalvatier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsalvatier/subscriptions", "organizations_url": "https://api.github.com/users/jsalvatier/orgs", "repos_url": "https://api.github.com/users/jsalvatier/repos", "events_url": "https://api.github.com/users/jsalvatier/events{/privacy}", "received_events_url": "https://api.github.com/users/jsalvatier/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsalvatier", "id": 270513, "node_id": "MDQ6VXNlcjI3MDUxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/270513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsalvatier", "html_url": "https://github.com/jsalvatier", "followers_url": "https://api.github.com/users/jsalvatier/followers", "following_url": "https://api.github.com/users/jsalvatier/following{/other_user}", "gists_url": "https://api.github.com/users/jsalvatier/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsalvatier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsalvatier/subscriptions", "organizations_url": "https://api.github.com/users/jsalvatier/orgs", "repos_url": "https://api.github.com/users/jsalvatier/repos", "events_url": "https://api.github.com/users/jsalvatier/events{/privacy}", "received_events_url": "https://api.github.com/users/jsalvatier/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2013-05-13T06:37:00Z", "updated_at": "2013-05-23T12:42:40Z", "closed_at": "2013-05-23T12:42:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This isn't a new test, so I'm not sure why its stalling, but it is. \n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/259/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/254", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/254/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/254/events", "html_url": "https://github.com/pymc-devs/pymc/issues/254", "id": 14227176, "node_id": "MDU6SXNzdWUxNDIyNzE3Ng==", "number": 254, "title": "Histograms for discrete variables", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-05-11T21:23:39Z", "updated_at": "2013-05-18T06:16:02Z", "closed_at": "2013-05-18T06:16:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`traceplot` currently plots a kernel density estimate of the posterior even for discrete variables. We should be plotting histograms instead.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/254/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/244", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/244/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/244/events", "html_url": "https://github.com/pymc-devs/pymc/issues/244", "id": 14106461, "node_id": "MDU6SXNzdWUxNDEwNjQ2MQ==", "number": 244, "title": "attributeError in Binomial variables", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-05-08T15:25:59Z", "updated_at": "2013-05-09T07:33:44Z", "closed_at": "2013-05-09T07:33:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Using a Binomial in as a non-observed stochastic results in an AttributeError being raised. For example:\n\n```\nquitters_pred = Binomial('quitters_pred', n=n, p=p_quit)\n```\n\nyields:\n\n```\nAttributeError: <pymc.quickclass.Binomial object at 0x10755f650> does not have a value for any of: ['mode']\n```\n\nwhereas an observed variable does not:\n\n```\nquitters = Binomial('quitters', n=n, p=p_quit, observed=y) \n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/244/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/237", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/237/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/237/events", "html_url": "https://github.com/pymc-devs/pymc/issues/237", "id": 14000910, "node_id": "MDU6SXNzdWUxNDAwMDkxMA==", "number": 237, "title": "Travis fails, exceeds time limit.", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-05-06T13:29:08Z", "updated_at": "2013-05-10T16:21:02Z", "closed_at": "2013-05-10T16:21:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Since some days our travis build hangs. Any tests added that take a long time to run?\n\nhttps://s3.amazonaws.com/archive.travis-ci.org/jobs/6910650/log.txt\n\n```\n\u001b[?1049h\u001b[?1h\u001b=\nHelp on Model in module pymc.model object:\n\nclass \u001b[1mModel\u001b[0m(Context)\n |  Base class for encapsulation of the variables and\n |  likelihood factors of a model.\n |  \n |  Method resolution order:\n |      Model\n |      Context\n |      __builtin__.object\n |  \n |  Methods defined here:\n |  \n |  \u001b[1mAddPotential\u001b[0m(model, potential)\n |  \n |  \u001b[1mData\u001b[0m(model, data, dist)\n |  \n |  \u001b[1mTransformedVar\u001b[0m(model, name, dist, trans)\n |  \n |  \u001b[1mVar\u001b[0m(model, name, dist)\n |  \n |  \u001b[1m__init__\u001b[0m(self)\n |  \n:\u001b[K\n\nI'm sorry but your test run exceeded 50.0 minutes. \n\nOne possible solution is to split up your test run.\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/237/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/236", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/236/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/236/events", "html_url": "https://github.com/pymc-devs/pymc/issues/236", "id": 13989995, "node_id": "MDU6SXNzdWUxMzk4OTk5NQ==", "number": 236, "title": "d2logp is slow on big problems", "user": {"login": "jsalvatier", "id": 270513, "node_id": "MDQ6VXNlcjI3MDUxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/270513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsalvatier", "html_url": "https://github.com/jsalvatier", "followers_url": "https://api.github.com/users/jsalvatier/followers", "following_url": "https://api.github.com/users/jsalvatier/following{/other_user}", "gists_url": "https://api.github.com/users/jsalvatier/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsalvatier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsalvatier/subscriptions", "organizations_url": "https://api.github.com/users/jsalvatier/orgs", "repos_url": "https://api.github.com/users/jsalvatier/repos", "events_url": "https://api.github.com/users/jsalvatier/events{/privacy}", "received_events_url": "https://api.github.com/users/jsalvatier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-05-06T06:36:41Z", "updated_at": "2015-05-25T21:08:52Z", "closed_at": "2015-05-25T21:08:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "the d2logp function is slow to compute even though the resulting Theano function is fast to execute. At least on big problems. It would be nice if it were more useable. I think the reason is that on big problems the test input is also big so computing the test output matrix in python is slow. \n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/236/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/233", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/233/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/233/events", "html_url": "https://github.com/pymc-devs/pymc/issues/233", "id": 13987512, "node_id": "MDU6SXNzdWUxMzk4NzUxMg==", "number": 233, "title": "Travis builds keep erroring", "user": {"login": "jsalvatier", "id": 270513, "node_id": "MDQ6VXNlcjI3MDUxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/270513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsalvatier", "html_url": "https://github.com/jsalvatier", "followers_url": "https://api.github.com/users/jsalvatier/followers", "following_url": "https://api.github.com/users/jsalvatier/following{/other_user}", "gists_url": "https://api.github.com/users/jsalvatier/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsalvatier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsalvatier/subscriptions", "organizations_url": "https://api.github.com/users/jsalvatier/orgs", "repos_url": "https://api.github.com/users/jsalvatier/repos", "events_url": "https://api.github.com/users/jsalvatier/events{/privacy}", "received_events_url": "https://api.github.com/users/jsalvatier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-05-06T03:34:38Z", "updated_at": "2013-05-09T07:34:11Z", "closed_at": "2013-05-09T07:34:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The Travis builds keep erroring, and that's bad. The reason seems to be that they take too long, more than 50 minutes. Anything we can do? \n\nI'd be totally OK with paying money in turn for allowing longer builds, but they don't seem to offer that yet. \n\nCould we have the virtual machine preloaded with some of the dependencies? \n\nThe other thing to do is make the tests complete faster.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/233/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/223", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/223/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/223/events", "html_url": "https://github.com/pymc-devs/pymc/issues/223", "id": 13921169, "node_id": "MDU6SXNzdWUxMzkyMTE2OQ==", "number": 223, "title": "HMC fails without scikits.sparse installed", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-05-03T04:16:28Z", "updated_at": "2013-05-03T12:37:03Z", "closed_at": "2013-05-03T12:37:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Without installing scikits.sparse, using the HMC sampler does not work (see below). While its fine to require the package, when its an optional package it should fail more gracefully than this, by checking for the package on initialization and returning an informative message, instead of a cryptic exception.\n\n```\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n<ipython-input-6-62f83321ba5d> in <module>()\n      1 with model:\n----> 2     step = HamiltonianMC(model.vars, hessian(start, 6))\n      3     trace = sample(200, step, start, trace = model.vars + [sigma])\n      4 \n      5     # Start next run at the last sampled position.\n\n/Users/fonnescj/Code/pymc3/pymc/step_methods/hmc.py in __init__(self, vars, C, step_scale, path_length, is_cov, step_rand, state, model)\n     45         self.step_size = step_scale / n**(1/4.)\n     46 \n---> 47         self.potential = quad_potential(C, is_cov)\n     48         self.path_length = path_length\n     49         self.step_rand = step_rand\n\n/Users/fonnescj/Code/pymc3/pymc/step_methods/quadpotential.py in quad_potential(C, is_cov)\n     14 \n     15     if issparse(C):\n---> 16         return QuadPotential_SparseInv(C)\n     17 \n     18     partial_check_positive_definite(C)\n\nNameError: global name 'QuadPotential_SparseInv' is not defined\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/223/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/210", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/210/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/210/events", "html_url": "https://github.com/pymc-devs/pymc/issues/210", "id": 13766505, "node_id": "MDU6SXNzdWUxMzc2NjUwNQ==", "number": 210, "title": "PositiveDefiniteError with Uniform standard deviation prior in Metropolis step", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-04-29T15:45:15Z", "updated_at": "2013-05-10T16:23:08Z", "closed_at": "2013-05-10T16:23:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If you alter the prior on the standard deviation in the [examples/lasso_block_update.py](https://github.com/pymc-devs/pymc/blob/pymc3/examples/lasso_block_update.py) example to be uniform rather than exponential:\n\n```\ns = Uniform('s', 0, 1000)\n```\n\nwhich is recommended as a more optimal uninformative prior by [Gelman (2006)](http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.64.7507), it generates a PositiveDefiniteError from quadpotential:\n\n```\n    ---------------------------------------------------------------------------\nPositiveDefiniteError                     Traceback (most recent call last)\n<ipython-input-16-e3385aad2c56> in <module>()\n      4     step1 = Metropolis([m1, m2], approx_hess(start, [m1,m2]))\n      5 \n----> 6     step2 = Metropolis([s], approx_hess(start, [s]))\n      7 \n      8     trace = sample(5000, [step1, step2], start)\n\n/Users/fonnescj/Code/pymc3/pymc/step_methods/metropolis.pyc in __init__(self, vars, C, scaling, is_cov, model)\n     18         model = modelcontext(model)\n     19 \n---> 20         self.potential = quad_potential(C, not is_cov)\n     21         self.scaling = scaling\n     22         super(Metropolis,self).__init__(vars, [model.logpc])\n\n/Users/fonnescj/Code/pymc3/pymc/step_methods/quadpotential.pyc in quad_potential(C, is_cov)\n     16         return QuadPotential_SparseInv(C)\n     17 \n---> 18     partial_check_positive_definite(C)\n     19     if C.ndim == 1:\n     20         if is_cov:\n\n/Users/fonnescj/Code/pymc3/pymc/step_methods/quadpotential.pyc in partial_check_positive_definite(C)\n     37 \n     38     if len(i):\n---> 39         raise PositiveDefiniteError(\"Simple check failed. Diagonal contains negatives\", i)\n     40 \n     41 class PositiveDefiniteError(ValueError):\n\nPositiveDefiniteError: Scaling is not positive definite. Simple check failed. Diagonal contains negatives. Check indexes [0]\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/210/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/205", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/205/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/205/events", "html_url": "https://github.com/pymc-devs/pymc/issues/205", "id": 13286290, "node_id": "MDU6SXNzdWUxMzI4NjI5MA==", "number": 205, "title": "MCMC is memory costing.", "user": {"login": "hyissue", "id": 4157178, "node_id": "MDQ6VXNlcjQxNTcxNzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4157178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hyissue", "html_url": "https://github.com/hyissue", "followers_url": "https://api.github.com/users/hyissue/followers", "following_url": "https://api.github.com/users/hyissue/following{/other_user}", "gists_url": "https://api.github.com/users/hyissue/gists{/gist_id}", "starred_url": "https://api.github.com/users/hyissue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hyissue/subscriptions", "organizations_url": "https://api.github.com/users/hyissue/orgs", "repos_url": "https://api.github.com/users/hyissue/repos", "events_url": "https://api.github.com/users/hyissue/events{/privacy}", "received_events_url": "https://api.github.com/users/hyissue/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2013-04-17T08:41:33Z", "updated_at": "2013-09-07T23:59:16Z", "closed_at": "2013-09-07T23:59:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the number of Stochastic variables are large, e.g. 1,000, it is memory costing when I call a=pymc.MCMC(model). I wonder why? Thank you.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/205/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/204", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/204/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/204/events", "html_url": "https://github.com/pymc-devs/pymc/issues/204", "id": 13091569, "node_id": "MDU6SXNzdWUxMzA5MTU2OQ==", "number": 204, "title": "Failure in test_LazyFunction.py", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-04-11T21:49:39Z", "updated_at": "2013-05-23T15:34:34Z", "closed_at": "2013-05-23T15:34:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Really bizarre failure in `test_LazyFunction.py` whereby the test fails if the debugging string in line 48 is not printed! Commenting out the print statement or changing the string appreciably causes failure. I have no earthly idea how printing a string should affect cached counts. May have to kill this test and write a new one.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/204/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/194", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/194/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/194/events", "html_url": "https://github.com/pymc-devs/pymc/issues/194", "id": 12285033, "node_id": "MDU6SXNzdWUxMjI4NTAzMw==", "number": 194, "title": "Issues Building on Anaconda", "user": {"login": "kyleabeauchamp", "id": 1900459, "node_id": "MDQ6VXNlcjE5MDA0NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1900459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleabeauchamp", "html_url": "https://github.com/kyleabeauchamp", "followers_url": "https://api.github.com/users/kyleabeauchamp/followers", "following_url": "https://api.github.com/users/kyleabeauchamp/following{/other_user}", "gists_url": "https://api.github.com/users/kyleabeauchamp/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleabeauchamp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleabeauchamp/subscriptions", "organizations_url": "https://api.github.com/users/kyleabeauchamp/orgs", "repos_url": "https://api.github.com/users/kyleabeauchamp/repos", "events_url": "https://api.github.com/users/kyleabeauchamp/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleabeauchamp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-03-21T17:16:13Z", "updated_at": "2014-08-17T21:40:34Z", "closed_at": "2014-08-17T21:40:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In setup.py, you currently check the build options of numpy to determine your library flags for the fortran subroutines:\n\n```\nlapack_info = get_info('lapack_opt',1)\n...\nif lapack_info:\n    config.add_extension(name='flib',sources=f_sources, extra_info=lapack_info, f2py_options=['skip:ppnd7'])\n```\n\nHowever, in some situations, people might not have access to all of the Fortran libraries that were used during the numpy build.  Here is my lapack_info:\n\n{'define_macros': [('SCIPY_MKL_H', None)],\n 'include_dirs': ['/home/kyleb/opt/include'],\n 'libraries': ['mkl_lapack95_lp64',\n  'mkl_intel_lp64',\n  'mkl_intel_thread',\n  'mkl_core',\n  'iomp5',\n  'pthread'],\n 'library_dirs': ['/home/kyleb/opt/lib']}\n\nFor now, I have a workaround where I manually clear the lapack_info to force the local blas build:\n\n```\nlapack_info = {}\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/194/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/186", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/186/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/186/events", "html_url": "https://github.com/pymc-devs/pymc/issues/186", "id": 12117951, "node_id": "MDU6SXNzdWUxMjExNzk1MQ==", "number": 186, "title": "Fresh install, immediate import error ", "user": {"login": "jbwhit", "id": 105829, "node_id": "MDQ6VXNlcjEwNTgyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/105829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbwhit", "html_url": "https://github.com/jbwhit", "followers_url": "https://api.github.com/users/jbwhit/followers", "following_url": "https://api.github.com/users/jbwhit/following{/other_user}", "gists_url": "https://api.github.com/users/jbwhit/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbwhit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbwhit/subscriptions", "organizations_url": "https://api.github.com/users/jbwhit/orgs", "repos_url": "https://api.github.com/users/jbwhit/repos", "events_url": "https://api.github.com/users/jbwhit/events{/privacy}", "received_events_url": "https://api.github.com/users/jbwhit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-03-18T01:25:58Z", "updated_at": "2013-09-16T04:02:05Z", "closed_at": "2013-09-16T04:02:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed a fresh pymc via: \n\n```\n$ pip install -U pymc\nDownloading/unpacking pymc\n  Downloading pymc-2.2.tar.gz (351kB): 351kB downloaded\n  Running setup.py egg_info for package pymc\n\n... (Many things here)\n\n  Successfully installed pymc\n  Cleaning up...\n```\n\nWhich looks to me like it installs without problem. \n\nWhen I try to simply `import pymc as mc` I get the following error (same errors with plain python but more descriptive traceback w/ ipython): \n\n```\n$ ipython\nEnthought Python Distribution -- www.enthought.com\n\nPython 2.7.3 |EPD 7.3-2 (64-bit)| (default, Apr 11 2012, 17:52:16)\nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.12.1 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: import pymc as mc\n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n/<ipython-input-1-b5e4a67f5f71> in <module>()\n----> 1 import pymc as mc\n\n/path/to/epd-7.3-2-rh5-x86_64/lib/python2.7/site-packages/pymc/__init__.pyc in <module>()\n     45 from .CircularStochastic import *\n     46 from . import distributions\n---> 47 from . import gp\n     48\n     49 # Optional modules\n\n\n/path/to/epd-7.3-2-rh5-x86_64/lib/python2.7/site-packages/pymc/gp/__init__.py in <module>()\n     25 from .NearlyFullRankCovariance import *\n     26 from .Realization import *\n---> 27 from .cov_funs import *\n     28 from .gp_submodel import *\n     29 from .step_methods import *\n\n/path/to/epd-7.3-2-rh5-x86_64/lib/python2.7/site-packages/pymc/gp/cov_funs/__init__.py in <module>()\n----> 1 from .isotropic_cov_funs import *\n      2 from .cov_utils import *\n      3 from .bases import *\n      4 from .wrapped_distances import *\n      5 from . import isotropic_cov_funs\n\nImportError: /path/to/epd-7.3-2-rh5-x86_64/lib/python2.7/site-packages/pymc/gp/cov_funs/isotropic_cov_funs.so: undefined symbol: floor_\n```\n\nAnd simply trying the same command again it yields: \n\n```\nIn [2]: import pymc as mc\n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n/<ipython-input-2-b5e4a67f5f71> in <module>()\n----> 1 import pymc as mc\n\n/path/to/epd-7.3-2-rh5-x86_64/lib/python2.7/site-packages/pymc/__init__.py in <module>()\n     41 from . import utils\n     42 append = utils.append\n---> 43 from . import CommonDeterministics\n     44 from . import NumpyDeterministics\n     45 from .CircularStochastic import *\n\nImportError: cannot import name CommonDeterministics\n```\n\nSo something bad has happened, however, if this isn't a bug, any help would be appreciated!\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/186/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/180", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/180/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/180/events", "html_url": "https://github.com/pymc-devs/pymc/issues/180", "id": 11572176, "node_id": "MDU6SXNzdWUxMTU3MjE3Ng==", "number": 180, "title": "segfault with minimal example", "user": {"login": "astraw", "id": 30176, "node_id": "MDQ6VXNlcjMwMTc2", "avatar_url": "https://avatars.githubusercontent.com/u/30176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/astraw", "html_url": "https://github.com/astraw", "followers_url": "https://api.github.com/users/astraw/followers", "following_url": "https://api.github.com/users/astraw/following{/other_user}", "gists_url": "https://api.github.com/users/astraw/gists{/gist_id}", "starred_url": "https://api.github.com/users/astraw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/astraw/subscriptions", "organizations_url": "https://api.github.com/users/astraw/orgs", "repos_url": "https://api.github.com/users/astraw/repos", "events_url": "https://api.github.com/users/astraw/events{/privacy}", "received_events_url": "https://api.github.com/users/astraw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-03-02T05:34:41Z", "updated_at": "2014-05-25T17:31:15Z", "closed_at": "2013-09-16T04:01:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran across a segfault on a couple different machines. It's possible that I screwed something up with my PyMC build, but I reproduce this on two different Ubuntu 12.04 setups running the git master branch of PyMC. Anyhow, here's a minimal example:\n\n```\nfrom pymc import Binomial\n\ndata = [0,0,1,1,0,0,1,1,0,0,1,1]\nBinomial('fair_coin',len(data),0.5, observed=True, value=data)\n```\n\nThis invariably results in a core dump for me. On the console before the backtrace I see:\n\n```\n*** glibc detected *** python: free(): corrupted unsorted chunks: 0x00000000039109f0 ***\n```\n\nI think that, even if I have something deeply wrong with my code, I shouldn't be getting a segfault here.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/180/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/174", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/174/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/174/events", "html_url": "https://github.com/pymc-devs/pymc/issues/174", "id": 10939184, "node_id": "MDU6SXNzdWUxMDkzOTE4NA==", "number": 174, "title": "python_vs_c example fails", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-02-13T03:14:15Z", "updated_at": "2013-03-20T06:01:28Z", "closed_at": "2013-03-20T06:01:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Running the `python_vs_c` example raises an AssertionError:\n\n```\nIn [2]: run -i python_vs_c\npython\n---------------------------------------------------------------------------\nAssertionError                            Traceback (most recent call last)\n/Library/Python/2.7/site-packages/ipython-0.14.dev-py2.7.egg/IPython/utils/py3compat.pyc in execfile(fname, *where)\n    181             else:\n    182                 filename = fname\n--> 183             __builtin__.execfile(filename, *where)\n\n/Users/fonnescj/Desktop/python_vs_c.py in <module>()\n     43 print \"python\"\n     44 mode = theano.ProfileMode(optimizer='fast_run', linker = 'py')\n---> 45 print model.fn(calc, mode = mode)(start)\n     46 mode.print_summary()\n     47 \n\n/Users/fonnescj/Code/pymc3/pymc/model.pyc in fn(self, calc, mode)\n     69     def fn(self, calc, mode = None):\n     70         if hasattr(calc, '__iter__'):\n---> 71             out = [f(self) for f in calc]\n     72         else:\n     73             out = calc(self)\n\n/Users/fonnescj/Code/pymc3/pymc/model.pyc in dlogp_calc(model)\n    162         else:\n    163             vars = dvars\n--> 164         return dfn[n-1](logp(model), vars)\n    165 \n    166     return dlogp_calc\n\n/Users/fonnescj/Code/pymc3/pymc/model.pyc in gradient(f, dvars)\n    128 \n    129 def gradient(f, dvars):\n--> 130     return concatenate([flatgrad(f, v) for v in dvars])\n    131 def jacobian(f, dvars):\n    132     def jac(v):\n\n/Users/fonnescj/Code/pymc3/pymc/model.pyc in flatgrad(f, v)\n    125 \n    126 def flatgrad(f, v):\n--> 127     return flatten(grad(f, v))\n    128 \n    129 def gradient(f, dvars):\n\n/Users/fonnescj/Code/Theano/theano/gradient.pyc in grad(cost, wrt, consider_constant, disconnected_inputs, add_names, known_grads, return_disconnected)\n    527 \n    528     rval = _populate_grad_dict(var_to_app_to_idx,\n--> 529             grad_dict, wrt, cost_name)\n    530 \n    531     for i in xrange(len(rval)):\n\n/Users/fonnescj/Code/Theano/theano/gradient.pyc in _populate_grad_dict(var_to_app_to_idx, grad_dict, wrt, cost_name)\n   1066         return grad_dict[var]\n   1067 \n-> 1068     rval = [access_grad_cache(elem) for elem in wrt]\n   1069 \n   1070     return rval\n\n/Users/fonnescj/Code/Theano/theano/gradient.pyc in access_grad_cache(var)\n   1026                     for idx in node_to_idx[node]:\n   1027 \n-> 1028                         term = access_term_cache(node)[idx]\n   1029 \n   1030                         if not isinstance(term, gof.Variable):\n\n/Users/fonnescj/Code/Theano/theano/gradient.pyc in access_term_cache(node)\n    781             inputs = node.inputs\n    782 \n--> 783             output_grads = [access_grad_cache(var) for var in node.outputs]\n    784 \n    785             # list of bools indicating if each output is connected to the cost\n\n/Users/fonnescj/Code/Theano/theano/gradient.pyc in access_grad_cache(var)\n   1026                     for idx in node_to_idx[node]:\n   1027 \n-> 1028                         term = access_term_cache(node)[idx]\n   1029 \n   1030                         if not isinstance(term, gof.Variable):\n\n/Users/fonnescj/Code/Theano/theano/gradient.pyc in access_term_cache(node)\n    781             inputs = node.inputs\n    782 \n--> 783             output_grads = [access_grad_cache(var) for var in node.outputs]\n    784 \n    785             # list of bools indicating if each output is connected to the cost\n\n/Users/fonnescj/Code/Theano/theano/gradient.pyc in access_grad_cache(var)\n   1026                     for idx in node_to_idx[node]:\n   1027 \n-> 1028                         term = access_term_cache(node)[idx]\n   1029 \n   1030                         if not isinstance(term, gof.Variable):\n\n/Users/fonnescj/Code/Theano/theano/gradient.pyc in access_term_cache(node)\n    781             inputs = node.inputs\n    782 \n--> 783             output_grads = [access_grad_cache(var) for var in node.outputs]\n    784 \n    785             # list of bools indicating if each output is connected to the cost\n\n/Users/fonnescj/Code/Theano/theano/gradient.pyc in access_grad_cache(var)\n   1026                     for idx in node_to_idx[node]:\n   1027 \n-> 1028                         term = access_term_cache(node)[idx]\n   1029 \n   1030                         if not isinstance(term, gof.Variable):\n\n/Users/fonnescj/Code/Theano/theano/gradient.pyc in access_term_cache(node)\n    781             inputs = node.inputs\n    782 \n--> 783             output_grads = [access_grad_cache(var) for var in node.outputs]\n    784 \n    785             # list of bools indicating if each output is connected to the cost\n\n/Users/fonnescj/Code/Theano/theano/gradient.pyc in access_grad_cache(var)\n   1026                     for idx in node_to_idx[node]:\n   1027 \n-> 1028                         term = access_term_cache(node)[idx]\n   1029 \n   1030                         if not isinstance(term, gof.Variable):\n\n/Users/fonnescj/Code/Theano/theano/gradient.pyc in access_term_cache(node)\n    781             inputs = node.inputs\n    782 \n--> 783             output_grads = [access_grad_cache(var) for var in node.outputs]\n    784 \n    785             # list of bools indicating if each output is connected to the cost\n\n/Users/fonnescj/Code/Theano/theano/gradient.pyc in access_grad_cache(var)\n   1026                     for idx in node_to_idx[node]:\n   1027 \n-> 1028                         term = access_term_cache(node)[idx]\n   1029 \n   1030                         if not isinstance(term, gof.Variable):\n\n/Users/fonnescj/Code/Theano/theano/gradient.pyc in access_term_cache(node)\n    894                     assert getattr(ng.type, 'dtype', None) not in theano.tensor.discrete_dtypes\n    895 \n--> 896                 input_grads = node.op.grad(inputs, new_output_grads)\n    897 \n    898                 if input_grads is None:\n\n/Users/fonnescj/Code/Theano/theano/tensor/elemwise.pyc in grad(self, inputs, ograds)\n    661 \n    662         #compute grad with respect to broadcasted input\n--> 663         rval = self._bgrad(inputs, ograds)\n    664 \n    665         # TODO: make sure that zeros are clearly identifiable\n\n/Users/fonnescj/Code/Theano/theano/tensor/elemwise.pyc in _bgrad(self, inputs, ograds)\n    739             scalar_igrads = self.scalar_op.grad(scalar_inputs, scalar_ograds)\n    740             for igrad in scalar_igrads:\n--> 741                 assert igrad is not None\n    742 \n    743         finally:\n\nAssertionError: \n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/174/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/133", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/133/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/133/events", "html_url": "https://github.com/pymc-devs/pymc/issues/133", "id": 7515515, "node_id": "MDU6SXNzdWU3NTE1NTE1", "number": 133, "title": "No verbosity control for GPEvaluationGibbs", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-10-11T14:56:38Z", "updated_at": "2015-05-25T21:08:07Z", "closed_at": "2015-05-25T21:08:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There appears to be no way to control the verbosity (which is set to a high-verbose level) for the Gaussian process MCMC classes.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/133/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/126", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/126/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/126/events", "html_url": "https://github.com/pymc-devs/pymc/issues/126", "id": 5325186, "node_id": "MDU6SXNzdWU1MzI1MTg2", "number": 126, "title": "DIC failure for GP models", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-06-28T15:42:25Z", "updated_at": "2013-09-19T02:49:13Z", "closed_at": "2013-09-19T02:49:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Calling the `dic` method for a GP model currently generates an error, such as the following:\n\n```\nTraceback (most recent call last):\n  File \"/Users/Sam/PycharmProjects/Reg/VolFit.py\", line 115, in <module>\n    print \"This is the Deviance Information Criteria: \", GPSampler.dic\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pymc/MCMC.py\", line 387, in _get_dic\n    return self._calc_dic()\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pymc/MCMC.py\", line 374, in _calc_dic\n    mean_value = np.mean(self.db.trace(stochastic.__name__)(), axis=0)\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/numpy/core/fromnumeric.py\", line 2374, in mean\n    return mean(axis, dtype, out)\nTypeError: unsupported operand type(s) for +: 'StandardRealization' and 'StandardRealization\n```\n\nWe need to either calculate a value, or return a message that DIC cannot be calculated. Refer to the [original post on Google Groups](https://groups.google.com/forum/?fromgroups#!topic/pymc/KttPj8a9i20) for details.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/126/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/116", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/116/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/116/events", "html_url": "https://github.com/pymc-devs/pymc/issues/116", "id": 4570558, "node_id": "MDU6SXNzdWU0NTcwNTU4", "number": 116, "title": "Model.write_csv ignores variables argument", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2012-05-14T19:23:47Z", "updated_at": "2013-07-25T12:45:43Z", "closed_at": "2013-07-25T12:45:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`write_csv` does not honor the `variables` argument, and instead dumps all traced variables to the file.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/116/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/58", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/58/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/58/events", "html_url": "https://github.com/pymc-devs/pymc/issues/58", "id": 1412242, "node_id": "MDU6SXNzdWUxNDEyMjQy", "number": 58, "title": "IndexError in test_gradients", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2011-08-16T02:46:39Z", "updated_at": "2012-03-28T00:58:50Z", "closed_at": "2012-03-28T00:58:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Two identical failures occur during calls to check_gradients in the test_gradients unit tests:\n\n```\nTraceback (most recent call last):\n  File \"/Users/fonnescj/Code/pymc/pymc/tests/test_gradients.py\", line 286, in test_gradients\n    check_gradients(norm2)\n  File \"/Users/fonnescj/Code/pymc/pymc/tests/test_gradients.py\", line 107, in check_gradients\n    numeric_gradient = get_numeric_gradient(stochastics, s)\n  File \"/Users/fonnescj/Code/pymc/pymc/tests/test_gradients.py\", line 134, in get_numeric_gradient\n    delta[unravel_index(i,i_shape or (1,))] += e\nIndexError: 0-d arrays can only use a single () or a list of newaxes (and a single ...) as an index\n```\n\nAlso occurs on line 360 of test_gradients.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/58/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/58/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/57", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/57/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/57/events", "html_url": "https://github.com/pymc-devs/pymc/issues/57", "id": 1412236, "node_id": "MDU6SXNzdWUxNDEyMjM2", "number": 57, "title": "HDF5 failures on testHDF5Objects", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-08-16T02:42:51Z", "updated_at": "2012-02-27T03:57:05Z", "closed_at": "2012-02-27T03:57:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The unit tests consistently fail testHDF5Objects in test_database. It appears to choke on updating the K node when sampling the second chain, as it refuses to tally:\n\n```\nUserWarning:             ] Iterations: 0\nError tallying K, will not try to tally it again this chain.\nDid you make all the samevariables and step methods tallyable\nas were tallyable last time you used the database file?\n```\n\nThis subsequently causes the chain length assertion tests to fail.\n\nRunning on OS X 10.7 with HDF5 1.8.5.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/57/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/57/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/52", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/52/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/52/events", "html_url": "https://github.com/pymc-devs/pymc/issues/52", "id": 1358586, "node_id": "MDU6SXNzdWUxMzU4NTg2", "number": 52, "title": "cannot compute stats on a model that was loaded from a db", "user": {"login": "isofer", "id": 368583, "node_id": "MDQ6VXNlcjM2ODU4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/368583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isofer", "html_url": "https://github.com/isofer", "followers_url": "https://api.github.com/users/isofer/followers", "following_url": "https://api.github.com/users/isofer/following{/other_user}", "gists_url": "https://api.github.com/users/isofer/gists{/gist_id}", "starred_url": "https://api.github.com/users/isofer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isofer/subscriptions", "organizations_url": "https://api.github.com/users/isofer/orgs", "repos_url": "https://api.github.com/users/isofer/repos", "events_url": "https://api.github.com/users/isofer/events{/privacy}", "received_events_url": "https://api.github.com/users/isofer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2011-08-06T18:35:14Z", "updated_at": "2011-08-08T20:40:55Z", "closed_at": "2011-08-08T20:31:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I cannot compute stats on a model that was loaded from a db although the model was loaded successfully.\n\nHere is the code I used:\n# creating MCMC model\n\nimport pymc as pm\nx = pm.Normal('x',0,1)\nmc = pm.MCMC([x],db='pickle', dbname='testing.db')\n# sample\n\nmc.sample(1000)\n# print stats (no problem here)\n\nprint mc.stats()\n# close the db\n\nmc.db.close()\n# now, let's load the db\n\ndb = pm.database.pickle.load('testing.db')\n# create a new model\n\nx = pm.Normal('x',0,1)\nmc2 = pm.MCMC([x], db=db)\n# check that the trace was loaded\n\nprint len(mc2.trace('x')[:])\n# try to compute stats (which fails)\n\nprint mc2.stats()\n\nhere is the output that I got:\n\nIn [31]: import pymc as pm\n\nIn [32]: x = pm.Normal('x',0,1)\n\nIn [33]: mc = pm.MCMC([x],db='pickle', dbname='testing.db')\n\nIn [34]: mc.sample(1000)\nSampling: 100% [00000000000000000000000000000000000000000000000000000000000000000000000000000000000000] Iterations: 1000\n\nIn [35]: print mc.stats()\n{'x': {'95% HPD interval': array([-1.88467957,  1.94281242]), 'n': 1000, 'quantiles': {2.5: -1.8828947855723701, 25: -0.68774516402745267, 50: -0.049887820880991689, 75: 0.665653263476219, 97.5: 1.9941128356195819}, 'standard deviation': 0.99104350597342195, 'mc error': 0.032035926857117064, 'mean': -0.030453765602493965}}\n\nIn [36]: mc.db.close()\n\nIn [37]: db = pm.database.pickle.load('testing.db')\n\nIn [38]: x = pm.Normal('x',0,1)\n\nIn [39]: mc2 = pm.MCMC([x], db=db)\n\nIn [40]: print len(mc2.trace('x')[:])\n1000\n\nIn [41]: print mc2.stats()\nCould not generate output statistics for x\n{'x': None}\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/52/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/52/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/47", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/47/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/47/events", "html_url": "https://github.com/pymc-devs/pymc/issues/47", "id": 1111400, "node_id": "MDU6SXNzdWUxMTExNDAw", "number": 47, "title": "MAP's fmin is unconstrained and breaks nodes by walking outside the support.", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2011-06-24T17:15:00Z", "updated_at": "2011-06-30T19:04:03Z", "closed_at": "2011-06-30T19:04:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi,\n\nI found it very useful to just use the MAP for complex models during model exploration. However, I'm having the problem that fmin sometimes explores parameter spaces outside the support of my distributions (Uniform). In this case, rather than return -Inf, they raise an exception. I'm not sure what the best way would be to fix it, but in this case I think this behavior makes no sense, so either MAP should ignore out-side-of-support-errors or the nodes should have a flag not to raise that error.\n\nThanks,\nThomas\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/47/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/47/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/42", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/42/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/42/events", "html_url": "https://github.com/pymc-devs/pymc/issues/42", "id": 1024001, "node_id": "MDU6SXNzdWUxMDI0MDAx", "number": 42, "title": "Test for importing from source tree masks compiler issues on Windows", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2011-06-08T13:50:56Z", "updated_at": "2011-06-09T22:57:24Z", "closed_at": "2011-06-09T22:57:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "A couple of windows users have reported receiving the \"'You seem to be importing PyMC from inside its source tree\" error, despite being outside the source tree. Rather, it appears to be a problem with their gcc compiler not building Container_values. I wonder if there is a better test for the import from source tree issue that does not mask other unrelated problems?\n\n```\ntry:\n    import Container_values\n    del Container_values\nexcept ImportError:\n    raise ImportError, 'You seem to be importing PyMC from inside its source tree. Please change to another directory and try again.'\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/42/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/42/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/35", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/35/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/35/events", "html_url": "https://github.com/pymc-devs/pymc/issues/35", "id": 788502, "node_id": "MDU6SXNzdWU3ODg1MDI=", "number": 35, "title": "Cannot change StepMethod after sampling", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-04-19T13:11:30Z", "updated_at": "2011-05-05T10:24:07Z", "closed_at": "2011-05-05T10:24:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If a model has been initialized and sampled from, it is apparently not possible to change the StepMethod for any of its stochastics. use_step_method() works fine before sampling has occurred, but if a subsequent chain is sampled after changing the StepMethod, it uses the original StepMethod that it was initialized with. \n\nThis post describes an example: http://groups.google.com/group/pymc/browse_thread/thread/2e7a7e3be91bc90f\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/35/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/35/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/25", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/25/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/25/events", "html_url": "https://github.com/pymc-devs/pymc/issues/25", "id": 757388, "node_id": "MDU6SXNzdWU3NTczODg=", "number": 25, "title": "Can we get past transient state in hierarchical model?\t", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2011-04-12T02:04:15Z", "updated_at": "2013-05-08T15:37:40Z", "closed_at": "2013-05-08T15:37:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "An apparent bug in AdaptiveMetropolis, detailed in [this issue](http://code.google.com/p/pymc/issues/detail?id=269) on Google Code.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/25/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/25/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/24", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/24/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/24/events", "html_url": "https://github.com/pymc-devs/pymc/issues/24", "id": 757382, "node_id": "MDU6SXNzdWU3NTczODI=", "number": 24, "title": "Fortran likelihoods need to check shapes of input arguments", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-04-12T02:00:57Z", "updated_at": "2011-08-09T01:40:01Z", "closed_at": "2011-08-09T01:39:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In order to avoid difficult debugging of errors.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/24/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/24/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/22", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/22/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/22/events", "html_url": "https://github.com/pymc-devs/pymc/issues/22", "id": 757367, "node_id": "MDU6SXNzdWU3NTczNjc=", "number": 22, "title": "cannot import pymc while Sampler is running in another session", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-04-12T01:54:59Z", "updated_at": "2011-08-09T02:01:27Z", "closed_at": "2011-08-09T02:01:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(This issue was moved from the Google Code tracker - #356)\n# What steps will reproduce the problem?\n\nI've run the following:\n\n```\nIn [1]: import pymc\n\nIn [3]: from pymc.examples import DisasterModel\n\nIn [4]: t = pymc.MCMC(DisasterModel)\n\nIn [5]: t.sample(50000, thin=100)\n\n\nwhile the sampler was running I opened a new python session in another terminal and got an error while trying to import pymc.\n\n\n$ ipython -q4thread\nEnthought Python Distribution -- http://www.enthought.com\n\nPython 2.7.1 |EPD 7.0-2 (64-bit)| (r271:86832, Dec  3 2010, 15:56:20) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.10.1 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object'. ?object also works, ?? prints more.\n\nIn [1]: import pymc\n---------------------------------------------------------------------------\nIOError                                   Traceback (most recent call last)\n\n/Users/imrisofer/<ipython console> in <module>()\n\n/Library/Frameworks/EPD64.framework/Versions/7.0/lib/python2.7/site-packages/pymc/__init__.py in <module>()\n     16 \n     17 # Core modules\n\n---> 18 from threadpool import *\n     19 try:\n     20     import Container_values\n\n/Library/Frameworks/EPD64.framework/Versions/7.0/lib/python2.7/site-packages/pymc/threadpool.py in <module>()\n    310 except:\n    311     import multiprocessing\n--> 312     __PyMCThreadPool__ = ThreadPool(multiprocessing.cpu_count())\n    313 \n    314 class CountDownLatch(object):\n\n/Library/Frameworks/EPD64.framework/Versions/7.0/lib/python2.7/multiprocessing/__init__.pyc in cpu_count()\n    118         try:\n    119             with os.popen('sysctl -n hw.ncpu') as p:\n--> 120                 num = int(p.read())\n    121         except ValueError:\n    122             num = 0\n\nIOError: [Errno 4] Interrupted system call\n```\n# What version of the product are you using? On what operating system?\n\nMac OS X 10.6.7\npymc 2.2grad\n# Please provide any additional information below.\n\nthis error occurs only while the Sampler is running in the first session and only when the second session is open with the q4thread flag (I did not check other threads, but without any flags there's no problem of importing pymc)\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/22/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/22/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/21", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/21/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/21/events", "html_url": "https://github.com/pymc-devs/pymc/issues/21", "id": 757326, "node_id": "MDU6SXNzdWU3NTczMjY=", "number": 21, "title": "verbose setting is not changed by sample() in multiple chains", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2011-04-12T01:38:08Z", "updated_at": "2011-06-30T20:53:36Z", "closed_at": "2011-06-30T20:53:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When running a MCMC model 2+ times, the verbose setting for sampling is not properly changed after the initial sampling run. So, for example, using verbose=2 causes tuning feedback to be displayed, even when subsequent chains are run with a lower verbosity.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/21/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/21/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/8", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/8/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/8/events", "html_url": "https://github.com/pymc-devs/pymc/issues/8", "id": 610332, "node_id": "MDU6SXNzdWU2MTAzMzI=", "number": 8, "title": "gradient calculations in fortran sometimes permutes results with ndim > 2", "user": {"login": "jsalvatier", "id": 270513, "node_id": "MDQ6VXNlcjI3MDUxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/270513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsalvatier", "html_url": "https://github.com/jsalvatier", "followers_url": "https://api.github.com/users/jsalvatier/followers", "following_url": "https://api.github.com/users/jsalvatier/following{/other_user}", "gists_url": "https://api.github.com/users/jsalvatier/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsalvatier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsalvatier/subscriptions", "organizations_url": "https://api.github.com/users/jsalvatier/orgs", "repos_url": "https://api.github.com/users/jsalvatier/repos", "events_url": "https://api.github.com/users/jsalvatier/events{/privacy}", "received_events_url": "https://api.github.com/users/jsalvatier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2011-02-18T21:33:02Z", "updated_at": "2013-09-16T16:52:50Z", "closed_at": "2013-09-16T16:52:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I think this is due to a fortran/c array ordering issue. \n\nExample: \n\n```\nIn [5]: x = array([[1, 2, 3],\n       [4, 5, 6]])\n\nIn [7]: reshape(flib.normal_grad_mu(x, zeros(x.shape), 1.0),x.shape)\nOut[7]: \narray([[ 1.,  4.,  2.],\n       [ 5.,  3.,  6.]])\n```\n\nThis to me is another reason why moving to numexpr or similar is a good idea.\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/8/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/8/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/7", "repository_url": "https://api.github.com/repos/pymc-devs/pymc", "labels_url": "https://api.github.com/repos/pymc-devs/pymc/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc/issues/7/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc/issues/7/events", "html_url": "https://github.com/pymc-devs/pymc/issues/7", "id": 610229, "node_id": "MDU6SXNzdWU2MTAyMjk=", "number": 7, "title": "graph.dag() broken", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2011-02-18T20:55:28Z", "updated_at": "2011-02-22T03:29:47Z", "closed_at": "2011-02-22T03:29:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I am no longer able to generate DAGs for any of 3 models attempted. Fails in the unit test as well. Here is the error reported:\n\n/Users/fonnescj/Code/pymc/pymc/PyMCObjects.pyc in gen_lazy_function(self)\n    413 \n    414         self._jacobians = {}\n    --> 415         for parameter, function in self._jacobian_functions.iteritems():\n    416             lazy_jacobian = LazyFunction(fun = function,\n    417                                             arguments = self.parents,\n\n```\nAttributeError: 'NoneType' object has no attribute 'iteritems'\n```\n", "reactions": {"url": "https://api.github.com/repos/pymc-devs/pymc/issues/7/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pymc-devs/pymc/issues/7/timeline", "performed_via_github_app": null, "state_reason": "completed"}]