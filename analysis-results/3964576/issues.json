[{"url": "https://api.github.com/repos/sanic-org/sanic/issues/2736", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2736/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2736/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2736/events", "html_url": "https://github.com/sanic-org/sanic/issues/2736", "id": 1659810989, "node_id": "I_kwDOA49B_s5i7rSt", "number": 2736, "title": "JSONResponse defaults to None content-type", "user": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 2620207377, "node_id": "MDU6TGFiZWwyNjIwMjA3Mzc3", "url": "https://api.github.com/repos/sanic-org/sanic/labels/LTS", "name": "LTS", "color": "18D9EA", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "prryplatypus", "id": 25409753, "node_id": "MDQ6VXNlcjI1NDA5NzUz", "avatar_url": "https://avatars.githubusercontent.com/u/25409753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prryplatypus", "html_url": "https://github.com/prryplatypus", "followers_url": "https://api.github.com/users/prryplatypus/followers", "following_url": "https://api.github.com/users/prryplatypus/following{/other_user}", "gists_url": "https://api.github.com/users/prryplatypus/gists{/gist_id}", "starred_url": "https://api.github.com/users/prryplatypus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prryplatypus/subscriptions", "organizations_url": "https://api.github.com/users/prryplatypus/orgs", "repos_url": "https://api.github.com/users/prryplatypus/repos", "events_url": "https://api.github.com/users/prryplatypus/events{/privacy}", "received_events_url": "https://api.github.com/users/prryplatypus/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "prryplatypus", "id": 25409753, "node_id": "MDQ6VXNlcjI1NDA5NzUz", "avatar_url": "https://avatars.githubusercontent.com/u/25409753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prryplatypus", "html_url": "https://github.com/prryplatypus", "followers_url": "https://api.github.com/users/prryplatypus/followers", "following_url": "https://api.github.com/users/prryplatypus/following{/other_user}", "gists_url": "https://api.github.com/users/prryplatypus/gists{/gist_id}", "starred_url": "https://api.github.com/users/prryplatypus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prryplatypus/subscriptions", "organizations_url": "https://api.github.com/users/prryplatypus/orgs", "repos_url": "https://api.github.com/users/prryplatypus/repos", "events_url": "https://api.github.com/users/prryplatypus/events{/privacy}", "received_events_url": "https://api.github.com/users/prryplatypus/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-04-09T09:22:59Z", "updated_at": "2023-04-09T19:23:22Z", "closed_at": "2023-04-09T19:23:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\n```python\r\n@app.get(\"/\")\r\nasync def handler(request: Request):\r\n    return JSONResponse({\"message\": \"Hello World!\"})\r\n```\r\n```sh\r\n\u2570\u2500\u25b6 curl localhost:9999   \r\nHTTP/1.1 200 OK\r\ncontent-length: 26\r\nconnection: keep-alive\r\nalt-svc: \r\ncontent-type: None\r\n\r\n{\"message\":\"Hello World!\"}\r\n```\n\n### Code snippet\n\n_No response_\n\n### Expected Behavior\n\n`content-type: application/json`\n\n### How do you run Sanic?\n\nSanic CLI\n\n### Operating System\n\nall\n\n### Sanic Version\n\nLTS+\n\n### Additional context\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2736/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2715", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2715/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2715/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2715/events", "html_url": "https://github.com/sanic-org/sanic/issues/2715", "id": 1629869006, "node_id": "I_kwDOA49B_s5hJdPO", "number": 2715, "title": "SSL key encryption password not propagated to worker processes", "user": {"login": "ndg-GH", "id": 68022964, "node_id": "MDQ6VXNlcjY4MDIyOTY0", "avatar_url": "https://avatars.githubusercontent.com/u/68022964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ndg-GH", "html_url": "https://github.com/ndg-GH", "followers_url": "https://api.github.com/users/ndg-GH/followers", "following_url": "https://api.github.com/users/ndg-GH/following{/other_user}", "gists_url": "https://api.github.com/users/ndg-GH/gists{/gist_id}", "starred_url": "https://api.github.com/users/ndg-GH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ndg-GH/subscriptions", "organizations_url": "https://api.github.com/users/ndg-GH/orgs", "repos_url": "https://api.github.com/users/ndg-GH/repos", "events_url": "https://api.github.com/users/ndg-GH/events{/privacy}", "received_events_url": "https://api.github.com/users/ndg-GH/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-03-17T19:58:58Z", "updated_at": "2023-03-20T16:38:40Z", "closed_at": "2023-03-20T10:35:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nWhen launching a server using the AppLoader, the SSL key encryption password from the ssl parameter is not reaching the workers, triggering a cert chain default \"Enter PEM pass phrase:\" prompt that causes the worker processes to fail.\r\n\n\n### Code snippet\n\nA typical scenario to reproduce the problem is as follows:\r\n```\r\napp_loader = AppLoader(factory=factory)\r\napp = app_loader.load()\r\napp.prepare(host='0.0.0.0',\r\n            port=443,\r\n            ssl={'cert': '/path/to/cert.pem',\r\n                 'key': '/path/to/key.pem',\r\n                 'password': 'the secret password'},\r\n            workers=4)\r\nSanic.serve(primary=app, app_loader=app_loader)\r\n```\r\n\n\n### Expected Behavior\n\n_No response_\n\n### How do you run Sanic?\n\nAs a script (`app.run` or `Sanic.serve`)\n\n### Operating System\n\nUbuntu 20.04 LTS (Focal Fossa)\n\n### Sanic Version\n\nSanic 22.12.0; Routing 22.8.0\n\n### Additional context\n\nThe problem lies in lines 811-814 of file `sanic/mixins/startup.py`  :\r\n```\r\nssl = kwargs.get(\"ssl\")\r\n\r\nif isinstance(ssl, SanicSSLContext):\r\n    kwargs[\"ssl\"] = kwargs[\"ssl\"].sanic\r\n```\r\n\r\nWhen entering these lines, `kwargs[\"ssl\"]` is a `CertSimple(SanicSSLContext)` instance that (according to line 176 of file `sanic/http/tls/context.py` where the `.sanic` attribute is set) is replaced with a dictionary that is missing the `\"password\"` entry because it was removed by the `pop` call at line 162 of file `sanic/http/tls/context.py`:\r\n```\r\npassword = kw.pop(\"password\", None)\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2715/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2702", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2702/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2702/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2702/events", "html_url": "https://github.com/sanic-org/sanic/issues/2702", "id": 1605945425, "node_id": "I_kwDOA49B_s5fuMhR", "number": 2702, "title": "Follow-Up: Sanic generated code makes coverage throw \"couldn't parse\" warnings", "user": {"login": "rbm-radius", "id": 99690083, "node_id": "U_kgDOBfEmYw", "avatar_url": "https://avatars.githubusercontent.com/u/99690083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbm-radius", "html_url": "https://github.com/rbm-radius", "followers_url": "https://api.github.com/users/rbm-radius/followers", "following_url": "https://api.github.com/users/rbm-radius/following{/other_user}", "gists_url": "https://api.github.com/users/rbm-radius/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbm-radius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbm-radius/subscriptions", "organizations_url": "https://api.github.com/users/rbm-radius/orgs", "repos_url": "https://api.github.com/users/rbm-radius/repos", "events_url": "https://api.github.com/users/rbm-radius/events{/privacy}", "received_events_url": "https://api.github.com/users/rbm-radius/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-03-02T01:09:33Z", "updated_at": "2023-03-20T08:50:27Z", "closed_at": "2023-03-20T08:50:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nRunning `coverage run; coverage xml` on a Sanic app causes warnings about unparseable code that seem related to code generated by Sanic.\r\n\r\nAs an example:\r\n\r\nwarning: \"No source for code: _run_response_middleware (couldnt-parse)\n\n### Code snippet\n\nA full example is provided here:\r\n\r\nhttps://github.com/rogthefrog/sanic-coverage-example\n\n### Expected Behavior\n\nWarnings should not be issued against code that doesn't exist.\n\n### How do you run Sanic?\n\nSanic CLI\n\n### Operating System\n\nMacOS Monterey 12.4\n\n### Sanic Version\n\n22.12.0\n\n### Additional context\n\nThis is a follow-up to https://github.com/sanic-org/sanic/issues/2345 per request from @ahopkins \r\n\r\nThank you.", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2702/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2694", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2694/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2694/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2694/events", "html_url": "https://github.com/sanic-org/sanic/issues/2694", "id": 1599317977, "node_id": "I_kwDOA49B_s5fU6fZ", "number": 2694, "title": "Datetime issue with Python 3.11 (with fix)", "user": {"login": "stricaud", "id": 956069, "node_id": "MDQ6VXNlcjk1NjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/956069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stricaud", "html_url": "https://github.com/stricaud", "followers_url": "https://api.github.com/users/stricaud/followers", "following_url": "https://api.github.com/users/stricaud/following{/other_user}", "gists_url": "https://api.github.com/users/stricaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/stricaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stricaud/subscriptions", "organizations_url": "https://api.github.com/users/stricaud/orgs", "repos_url": "https://api.github.com/users/stricaud/repos", "events_url": "https://api.github.com/users/stricaud/events{/privacy}", "received_events_url": "https://api.github.com/users/stricaud/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-02-24T21:48:52Z", "updated_at": "2023-02-26T22:05:20Z", "closed_at": "2023-02-26T22:05:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nI am getting various exceptions like this:\r\n```\r\n[2023-02-24 22:41:25 +0100] [512643] [ERROR] Exception in static request handler: path=static, relative_url=fonts/general.woff2\r\nTraceback (most recent call last):\r\n  File \"/home/sebastien/.local/lib/python3.11/site-packages/sanic/mixins/routes.py\", line 848, in _static_request_handler\r\n    response = await validate_file(request.headers, modified_since)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/sebastien/.local/lib/python3.11/site-packages/sanic/response/convenience.py\", line 151, in validate_file\r\n    if last_modified <= if_modified_since:\r\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nTypeError: can't compare offset-naive and offset-aware datetimes\r\n```\r\nWhich is fixed by ensuring last_modified and if_modified_since are converted to proper timestamps():\r\n```\r\nif last_modified.timestamp() <= if_modified_since.timestamp():\r\n```\r\n\n\n### Code snippet\n\n_No response_\n\n### Expected Behavior\n\n_No response_\n\n### How do you run Sanic?\n\nSanic CLI\n\n### Operating System\n\nLinux Debian\n\n### Sanic Version\n\nSanic 22.12.0; Routing 22.8.0\n\n### Additional context\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2694/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2694/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2689", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2689/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2689/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2689/events", "html_url": "https://github.com/sanic-org/sanic/issues/2689", "id": 1590667587, "node_id": "I_kwDOA49B_s5ez6lD", "number": 2689, "title": "Malfunction of middleware when the request aborted.", "user": {"login": "kijk2869", "id": 35522821, "node_id": "MDQ6VXNlcjM1NTIyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/35522821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kijk2869", "html_url": "https://github.com/kijk2869", "followers_url": "https://api.github.com/users/kijk2869/followers", "following_url": "https://api.github.com/users/kijk2869/following{/other_user}", "gists_url": "https://api.github.com/users/kijk2869/gists{/gist_id}", "starred_url": "https://api.github.com/users/kijk2869/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kijk2869/subscriptions", "organizations_url": "https://api.github.com/users/kijk2869/orgs", "repos_url": "https://api.github.com/users/kijk2869/repos", "events_url": "https://api.github.com/users/kijk2869/events{/privacy}", "received_events_url": "https://api.github.com/users/kijk2869/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-02-19T12:19:33Z", "updated_at": "2023-03-20T11:00:36Z", "closed_at": "2023-03-20T11:00:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nWhen the client aborts the request while processing the request on the server, on_request is called again after on_response.\r\n\r\n### Code snippet\r\n\r\n```py\r\nimport asyncio\r\n\r\nfrom sanic import Sanic, text\r\n\r\napp = Sanic(__name__)\r\n\r\n\r\n@app.on_request\r\nasync def on_request(request):\r\n    print(\"on_request\", request.id)\r\n\r\n\r\n@app.on_response\r\nasync def on_response(request, response):\r\n    print(\"on_response\", request.id)\r\n\r\n\r\n@app.get(\"/\")\r\nasync def test(request):\r\n    print(\"test handler\")\r\n\r\n    try:\r\n        await asyncio.sleep(10)\r\n    except asyncio.CancelledError as e:\r\n        print(\"test handler cancelled\")\r\n        raise e\r\n\r\n    return text(\"test\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    app.run(host=\"0.0.0.0\", port=8000)\r\n```\r\n\r\nOutput\r\n```sh\r\non_request 592d1e27-b05b-4f2f-a138-f81d5c44c58c\r\ntest handler\r\n---- I aborted the request here ----\r\ntest handler cancelled\r\non_response 592d1e27-b05b-4f2f-a138-f81d5c44c58c\r\non_request 592d1e27-b05b-4f2f-a138-f81d5c44c58c <<<< strange thing\r\n```\r\n\r\n### Expected Behavior\r\n\r\n`on_request` should be called once before call `RouterHandler`, not again after `on_response`\r\n\r\n### How do you run Sanic?\r\n\r\nAs a script (`app.run` or `Sanic.serve`)\r\n\r\n### Operating System\r\n\r\nWindows-10-10.0.19044-SP0 \r\n\r\n### Sanic Version\r\n\r\nsanic==22.12.0, sanic-routing==22.8.0, sanic-ext==22.12.0", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2689/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2684", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2684/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2684/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2684/events", "html_url": "https://github.com/sanic-org/sanic/issues/2684", "id": 1584710456, "node_id": "I_kwDOA49B_s5edMM4", "number": 2684, "title": "Sanic doesn't shutdown cleanly on Mac ", "user": {"login": "tylerprete", "id": 230436, "node_id": "MDQ6VXNlcjIzMDQzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/230436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tylerprete", "html_url": "https://github.com/tylerprete", "followers_url": "https://api.github.com/users/tylerprete/followers", "following_url": "https://api.github.com/users/tylerprete/following{/other_user}", "gists_url": "https://api.github.com/users/tylerprete/gists{/gist_id}", "starred_url": "https://api.github.com/users/tylerprete/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tylerprete/subscriptions", "organizations_url": "https://api.github.com/users/tylerprete/orgs", "repos_url": "https://api.github.com/users/tylerprete/repos", "events_url": "https://api.github.com/users/tylerprete/events{/privacy}", "received_events_url": "https://api.github.com/users/tylerprete/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-02-14T19:27:43Z", "updated_at": "2023-02-14T20:59:43Z", "closed_at": "2023-02-14T20:59:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nWhen running a simple server on mac os 13.1, after using ctrl-c to shutdown the app, a socket exception is thrown instead of a graceful shutdown\r\n\r\n```sh\r\npython3 helloworld.py\r\n[2023-02-14 12:23:23 -0700] [6169] [DEBUG] Creating multiprocessing context using 'spawn'\r\n[2023-02-14 12:23:23][DEBUG] Creating multiprocessing context using 'spawn'\r\n[2023-02-14 12:23:23 -0700] [6169] [DEBUG] Starting a process: Sanic-Server-0-0\r\n[2023-02-14 12:23:23][DEBUG] Starting a process: Sanic-Server-0-0\r\n[2023-02-14 12:23:24 -0700] [6175] [DEBUG] Process ack: Sanic-Server-0-0 [6175]\r\n[2023-02-14 12:23:24][DEBUG] Process ack: Sanic-Server-0-0 [6175]\r\n[2023-02-14 12:23:24 -0700] [6175] [INFO] Starting worker [6175]\r\n[2023-02-14 12:23:24][INFO] Starting worker [6175]\r\n^C[2023-02-14 12:23:26 -0700] [6169] [INFO] Received signal SIGINT. Shutting down.\r\n[2023-02-14 12:23:26][INFO] Received signal SIGINT. Shutting down.\r\n[2023-02-14 12:23:26 -0700] [6169] [DEBUG] Terminating a process: Sanic-Server-0-0 [6175]\r\n[2023-02-14 12:23:26][DEBUG] Terminating a process: Sanic-Server-0-0 [6175]\r\n[2023-02-14 12:23:26 -0700] [6169] [INFO] Server Stopped\r\n[2023-02-14 12:23:26][INFO] Server Stopped\r\nTraceback (most recent call last):\r\n  File \"/Users/tylerprete/sandbox/asana/asana2/asana/server/kube_app/apps/helloworld/helloworld.py\", line 22, in <module>\r\n    app.run(host=\"127.0.0.1\", port=8086, debug=True)\r\n  File \"/usr/local/lib/python3.9/site-packages/sanic/mixins/startup.py\", line 209, in run\r\n    serve(primary=self)  # type: ignore\r\n  File \"/usr/local/lib/python3.9/site-packages/sanic/mixins/startup.py\", line 880, in serve\r\n    sock.shutdown(SHUT_RDWR)\r\nOSError: [Errno 57] Socket is not connected\r\n[2023-02-14 12:23:26 -0700] [6175] [INFO] Stopping worker [6175]\r\n[2023-02-14 12:23:26][INFO] Stopping worker [6175]\r\n```\n\n### Code snippet\n\n```python3\r\nfrom sanic import Sanic\r\nfrom sanic.response import html, text\r\n\r\napp = Sanic(\"helloworld\")\r\n\r\n@app.get(\"/\")\r\ndef hello_world(request):\r\n    print(\"Serving /\")\r\n    return html(\"<p>Hello, World!</p>\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    app.run(host=\"127.0.0.1\", port=8086, debug=True)\r\n```\n\n### Expected Behavior\n\nOn linux I run this and get the following (removing the sanic banners for brevity):\r\n```sh\r\npython3 helloworld.py\r\n[2023-02-14 19:17:43 +0000] [23570] [DEBUG] Creating multiprocessing context using 'spawn'\r\n[2023-02-14 19:17:43][DEBUG] Creating multiprocessing context using 'spawn'\r\n[2023-02-14 19:17:43 +0000] [23570] [DEBUG] Starting a process: Sanic-Server-0-0\r\n[2023-02-14 19:17:43][DEBUG] Starting a process: Sanic-Server-0-0\r\n[2023-02-14 19:17:43 +0000] [23579] [DEBUG] Process ack: Sanic-Server-0-0 [23579]\r\n[2023-02-14 19:17:43][DEBUG] Process ack: Sanic-Server-0-0 [23579]\r\n[2023-02-14 19:17:43 +0000] [23579] [INFO] Starting worker [23579]\r\n[2023-02-14 19:17:43][INFO] Starting worker [23579]\r\n^C[2023-02-14 19:17:45 +0000] [23570] [INFO] Received signal SIGINT. Shutting down.\r\n[2023-02-14 19:17:45][INFO] Received signal SIGINT. Shutting down.\r\n[2023-02-14 19:17:45 +0000] [23570] [DEBUG] Terminating a process: Sanic-Server-0-0 [23579]\r\n[2023-02-14 19:17:45][DEBUG] Terminating a process: Sanic-Server-0-0 [23579]\r\n[2023-02-14 19:17:45 +0000] [23570] [INFO] Server Stopped\r\n[2023-02-14 19:17:45][INFO] Server Stopped\r\n[2023-02-14 19:17:45 +0000] [23579] [INFO] Stopping worker [23579]\r\n[2023-02-14 19:17:45][INFO] Stopping worker [23579]\r\n```\n\n### How do you run Sanic?\n\nAs a script (`app.run` or `Sanic.serve`)\n\n### Operating System\n\nmacOS Ventura 13.1\n\n### Sanic Version\n\n22.12.0\n\n### Additional context\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2684/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2683", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2683/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2683/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2683/events", "html_url": "https://github.com/sanic-org/sanic/issues/2683", "id": 1581815272, "node_id": "I_kwDOA49B_s5eSJXo", "number": 2683, "title": "Type of the variable \"file_path\" is PosixPath but  mimetypes.guess_type() need a string or byte-like object.", "user": {"login": "xSandie", "id": 29241566, "node_id": "MDQ6VXNlcjI5MjQxNTY2", "avatar_url": "https://avatars.githubusercontent.com/u/29241566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xSandie", "html_url": "https://github.com/xSandie", "followers_url": "https://api.github.com/users/xSandie/followers", "following_url": "https://api.github.com/users/xSandie/following{/other_user}", "gists_url": "https://api.github.com/users/xSandie/gists{/gist_id}", "starred_url": "https://api.github.com/users/xSandie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xSandie/subscriptions", "organizations_url": "https://api.github.com/users/xSandie/orgs", "repos_url": "https://api.github.com/users/xSandie/repos", "events_url": "https://api.github.com/users/xSandie/events{/privacy}", "received_events_url": "https://api.github.com/users/xSandie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-02-13T07:32:00Z", "updated_at": "2023-04-02T11:04:23Z", "closed_at": "2023-04-01T13:56:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nIn the File sanic/mixins/route.py, the type of the variable \"file_path\"(line:836) is PosixPath but  mimetypes.guess_type() need a string or byte-like object.\r\n\r\nIn python 3.7.2, the Signature of the function guess_type is given below\r\n```python\r\ndef guess_type(url: str,\r\n               strict: bool = ...) -> Tuple[Optional[str], Optional[str]]\r\n```\r\n\r\n\n\n### Code snippet\n\nFile \"sanic/mixins/routes.py\", line 874, in _static_request_handler\r\n    or guess_type(file_path)[0] \r\n\r\n```python\r\n            if \"content-type\" not in headers:\r\n                content_type = (\r\n                    content_type\r\n                    or guess_type(file_path)[0]\r\n                    or DEFAULT_HTTP_CONTENT_TYPE\r\n                )\r\n```\n\n### Expected Behavior\n\nIn the File sanic/mixins/route.py, the type of the variable \"file_path\"(line:836)  should be a str or byte-like object.\r\nI added a line of code to forcefully fix it.\r\n\r\n```python\r\nfile_path = str(file_path)\r\n```\n\n### How do you run Sanic?\n\nAs a script (`app.run` or `Sanic.serve`)\n\n### Operating System\n\nMacos Darwin-20.6.0-x86_64-i386-64bit\n\n### Sanic Version\n\nSanic v22.12.0\n\n### Additional context\n\npackages: sanic-routing==22.8.0\r\npython: 3.7.2\r\nmode: production, single worker", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2683/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2677", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2677/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2677/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2677/events", "html_url": "https://github.com/sanic-org/sanic/issues/2677", "id": 1577161445, "node_id": "I_kwDOA49B_s5eAZLl", "number": 2677, "title": "Access logging raise TypeError after `logging.logProcesses=False`", "user": {"login": "Starry-OvO", "id": 48282276, "node_id": "MDQ6VXNlcjQ4MjgyMjc2", "avatar_url": "https://avatars.githubusercontent.com/u/48282276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Starry-OvO", "html_url": "https://github.com/Starry-OvO", "followers_url": "https://api.github.com/users/Starry-OvO/followers", "following_url": "https://api.github.com/users/Starry-OvO/following{/other_user}", "gists_url": "https://api.github.com/users/Starry-OvO/gists{/gist_id}", "starred_url": "https://api.github.com/users/Starry-OvO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Starry-OvO/subscriptions", "organizations_url": "https://api.github.com/users/Starry-OvO/orgs", "repos_url": "https://api.github.com/users/Starry-OvO/repos", "events_url": "https://api.github.com/users/Starry-OvO/events{/privacy}", "received_events_url": "https://api.github.com/users/Starry-OvO/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-02-09T03:17:38Z", "updated_at": "2023-03-20T11:25:08Z", "closed_at": "2023-03-20T11:25:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nIf someone use `logging.logProcesses = False` to disable the calling of `os.getpid()` while logging, the [default formatter of Sanic](https://github.com/sanic-org/sanic/blob/5e7f6998bdccce325a4c30d940d02d9d1e40b11e/sanic/log.py#L65) will lead to the exception as shown below.\r\n\r\nSee [`logging.logProcesses`](https://docs.python.org/3/howto/logging.html#optimization)\r\n\r\n```log\r\n  File \"C:\\Program Files\\Python\\Python311\\Lib\\logging\\__init__.py\", line 445, in _format\r\n    return self._fmt % values\r\n           ~~~~~~~~~~^~~~~~~~\r\n  File \"C:\\Program Files\\Python\\Python311\\Lib\\logging\\__init__.py\", line 449, in format\r\n    return self._format(record)\r\n  File \"C:\\Program Files\\Python\\Python311\\Lib\\logging\\__init__.py\", line 659, in formatMessage\r\n    return self._style.format(record)\r\n  File \"C:\\Program Files\\Python\\Python311\\Lib\\logging\\__init__.py\", line 690, in format\r\n    s = self.formatMessage(record)\r\n  File \"C:\\Program Files\\Python\\Python311\\Lib\\logging\\__init__.py\", line 953, in format\r\n    return fmt.format(record)\r\n  File \"C:\\Program Files\\Python\\Python311\\Lib\\logging\\__init__.py\", line 1110, in emit\r\n    msg = self.format(record)\r\n  File \"C:\\Program Files\\Python\\Python311\\Lib\\logging\\__init__.py\", line 978, in handle\r\n    self.emit(record)\r\n  File \"C:\\Program Files\\Python\\Python311\\Lib\\logging\\__init__.py\", line 1706, in callHandlers\r\n    hdlr.handle(record)\r\n  File \"C:\\Program Files\\Python\\Python311\\Lib\\logging\\__init__.py\", line 1644, in handle\r\n    self.callHandlers(record)\r\n  File \"C:\\Program Files\\Python\\Python311\\Lib\\logging\\__init__.py\", line 1634, in _log\r\n    self.handle(record)\r\n  File \"C:\\Program Files\\Python\\Python311\\Lib\\logging\\__init__.py\", line 1489, in info\r\n    self._log(INFO, msg, args, **kwargs)\r\n  File \"C:\\Program Files\\Python\\Python311\\Lib\\site-packages\\sanic\\application\\motd.py\", line 113, in display\r\n    out(indent(\"\\n\".join(lines), \"  \"))\r\n  File \"C:\\Program Files\\Python\\Python311\\Lib\\site-packages\\sanic\\application\\motd.py\", line 39, in output\r\n    motd_class(logo, serve_location, data, extra).display()\r\n  File \"C:\\Program Files\\Python\\Python311\\Lib\\site-packages\\sanic\\mixins\\startup.py\", line 579, in motd\r\n    MOTD.output(logo, serve_location, display, extra)\r\n  File \"C:\\Program Files\\Python\\Python311\\Lib\\site-packages\\sanic\\mixins\\startup.py\", line 533, in _helper\r\n    self.motd(server_settings=server_settings)\r\n  File \"C:\\Program Files\\Python\\Python311\\Lib\\site-packages\\sanic\\mixins\\startup.py\", line 327, in prepare\r\n    server_settings = self._helper(\r\n  File \"C:\\Program Files\\Python\\Python311\\Lib\\site-packages\\sanic\\mixins\\startup.py\", line 176, in run\r\n    self.prepare(\r\n...\r\nTypeError: %d format: a real number is required, not NoneType\r\n```\r\n\r\nWithout `os.getpid()`, the LogRecord will only be generated with a value dict like `values = {'process': None, ...}`. Then, exception raises when the formatter tries to translate `values = {'process': None, ...}` into `\"[%(process)d]\"`.\r\n\r\nI suggest to use `[%(process)s]` instead of `[%(process)d]`.\r\n\r\nhttps://github.com/sanic-org/sanic/blob/5e7f6998bdccce325a4c30d940d02d9d1e40b11e/sanic/log.py#L65\r\n\r\nIf there is no [conversion flags](https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting) (like `%06d`) setted, `%s` also has a better performance on converting unsigned integer to string.\r\n\r\nSee [Why is %s faster than %d for integer substitution in python?](https://stackoverflow.com/a/27800584/18677995)\r\n\r\nAnd here is a shell snippet for you to make a brief test:\r\n```shell\r\npython -m timeit -n 100000 -s \"fstr='[%(process)s]'\" \"fstr % {'process':12345}\"\r\npython -m timeit -n 100000 -s \"fstr='[%(process)d]'\" \"fstr % {'process':12345}\"\r\n```\r\n\r\nResult on my laptop is:\r\n```log\r\n100000 loops, best of 5: 157 nsec per loop\r\n100000 loops, best of 5: 160 nsec per loop\r\n```\r\n\r\n### Code snippet\r\n\r\n```python\r\nimport logging\r\n\r\nfrom sanic import Sanic\r\nfrom sanic.response import text\r\n\r\nlogging.logProcesses = False\r\n\r\napp = Sanic(\"MyHelloWorldApp\")\r\n\r\n\r\n@app.get(\"/\")\r\nasync def hello_world(request):\r\n    return text(\"Hello, world.\")\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(host=\"127.0.0.1\", port=8080, debug=True)\r\n```\r\n\r\n### Expected Behavior\r\n\r\nLog be like (pid shows `None` instead of raising exceptions):\r\n\r\n```log\r\n[2023-02-09 10:39:08 +0800] [None] [INFO] \r\n  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n  \u2502                        Sanic v22.12.0                       \u2502\r\n  \u2502              Goin' Fast @ http://127.0.0.1:8080             \u2502\r\n  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n  \u2502                       \u2502     mode: debug, single worker      \u2502\r\n  \u2502     \u2584\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588 \u2588\u2588     \u2502   server: sanic, HTTP/1.1           \u2502\r\n  \u2502    \u2588\u2588                 \u2502   python: 3.11.1                    \u2502\r\n  \u2502     \u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2584     \u2502 platform: Windows-10-10.0.22621-SP0 \u2502\r\n  \u2502                 \u2588\u2588    \u2502 packages: sanic-routing==22.8.0     \u2502\r\n  \u2502    \u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580     \u2502                                     \u2502\r\n  \u2502                       \u2502                                     \u2502\r\n  \u2502 Build Fast. Run Fast. \u2502                                     \u2502\r\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n[2023-02-09 10:39:08 +0800] [None] [DEBUG] Creating multiprocessing context using 'spawn'\r\n[2023-02-09 10:39:08 +0800] [None] [DEBUG] Starting a process: Sanic-Server-0-0\r\n[2023-02-09 10:39:09 +0800] [None] [DEBUG] Process ack: Sanic-Server-0-0 [13504]\r\n[2023-02-09 10:39:09 +0800] [None] [INFO] Starting worker [13504]\r\n```\r\n\r\n### How do you run Sanic?\r\n\r\nAs a script (`app.run` or `Sanic.serve`)\r\n\r\n### Operating System\r\n\r\nWindows\r\n\r\n### Sanic Version\r\n\r\n22.12.0\r\n\r\n### Additional context\r\n\r\n_No response_", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2677/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2675", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2675/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2675/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2675/events", "html_url": "https://github.com/sanic-org/sanic/issues/2675", "id": 1575040459, "node_id": "I_kwDOA49B_s5d4TXL", "number": 2675, "title": "Changing app name breaks reloading", "user": {"login": "Tronic", "id": 98187, "node_id": "MDQ6VXNlcjk4MTg3", "avatar_url": "https://avatars.githubusercontent.com/u/98187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tronic", "html_url": "https://github.com/Tronic", "followers_url": "https://api.github.com/users/Tronic/followers", "following_url": "https://api.github.com/users/Tronic/following{/other_user}", "gists_url": "https://api.github.com/users/Tronic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tronic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tronic/subscriptions", "organizations_url": "https://api.github.com/users/Tronic/orgs", "repos_url": "https://api.github.com/users/Tronic/repos", "events_url": "https://api.github.com/users/Tronic/events{/privacy}", "received_events_url": "https://api.github.com/users/Tronic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-02-07T21:22:02Z", "updated_at": "2023-03-20T12:28:15Z", "closed_at": "2023-03-20T12:28:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nStart a dev server with some application name, rename the app and it can no longer auto-reload.\n\n### Code snippet\n\n```\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\user\\dev\\sanic\\sanic\\app.py\", line 1489, in get_app\r\n    return cls._app_registry[name]\r\n           ~~~~~~~~~~~~~~~~~^^^^^^\r\nKeyError: 'Fizz_buzz'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\user\\dev\\sanic\\sanic\\worker\\serve.py\", line 68, in worker_serve\r\n    a = Sanic.get_app(app_name)\r\n        ^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"c:\\users\\user\\dev\\sanic\\sanic\\app.py\", line 1495, in get_app\r\n    raise SanicException(\r\nsanic.exceptions.SanicException: Sanic app name 'Fizz_buzz' not found.\r\nApp instantiation must occur outside if __name__ == '__main__' block or by using an AppLoader.\r\nSee https://sanic.dev/en/guide/deployment/app-loader.html for more details.\r\n```\n\n### Expected Behavior\n\nSanic could (e.g. while handling this) look up the app object again to figure out the new name, or keep track of the old name - whichever is the issue here, so that it Just Works.\r\n\r\nNot show unrelated error message.\n\n### How do you run Sanic?\n\nSanic CLI\n\n### Operating System\n\nWindows\n\n### Sanic Version\n\n22.12+\n\n### Additional context\n\nLow priority, especially with `Sanic(__name__)` name changes should not occur frequently if ever.", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2675/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2658", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2658/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2658/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2658/events", "html_url": "https://github.com/sanic-org/sanic/issues/2658", "id": 1538652288, "node_id": "I_kwDOA49B_s5btfiA", "number": 2658, "title": "FALLBACK_ERROR_FORMAT does not work with empty()", "user": {"login": "simon-lund", "id": 41208671, "node_id": "MDQ6VXNlcjQxMjA4Njcx", "avatar_url": "https://avatars.githubusercontent.com/u/41208671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simon-lund", "html_url": "https://github.com/simon-lund", "followers_url": "https://api.github.com/users/simon-lund/followers", "following_url": "https://api.github.com/users/simon-lund/following{/other_user}", "gists_url": "https://api.github.com/users/simon-lund/gists{/gist_id}", "starred_url": "https://api.github.com/users/simon-lund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simon-lund/subscriptions", "organizations_url": "https://api.github.com/users/simon-lund/orgs", "repos_url": "https://api.github.com/users/simon-lund/repos", "events_url": "https://api.github.com/users/simon-lund/events{/privacy}", "received_events_url": "https://api.github.com/users/simon-lund/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-01-18T20:16:54Z", "updated_at": "2023-02-05T13:29:03Z", "closed_at": "2023-02-05T13:29:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nToday I tested a handler which always returns `empty()` (see example below). \r\nI was quite confused by the format of the errors, as they were all in HTML format, even though the fallback was set to json.\r\nIt took me a while to figure out that this was because of the `empty()` statement returned by the function, which somehow hijacks the error format, so that the errors are converted to html. \r\n\r\nI could use the `error_format` from now on for handlers returning `empty()`, but was wondering if this is a feature or a bug.\r\n\r\n### Code snippet\r\n\r\n```python\r\nfrom sanic import Sanic, empty\r\nfrom sanic.exceptions import Unauthorized\r\n\r\n\r\napp = Sanic(__name__)\r\napp.config.FALLBACK_ERROR_FORMAT = \"json\"\r\n\r\n# Returns error in html format\r\n@app.post(\"/empty\")\r\nasync def empty_(request):\r\n    raise Unauthorized(\"bli bla blub\")\r\n\r\n    return empty()\r\n\r\n# Returns error in json format\r\n@app.post(\"/nothing\")\r\nasync def nothing(request):\r\n    raise Unauthorized(\"bli bla blub\")\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(\"127.0.0.1\", port=3000, auto_reload=True, debug=True, dev=True)\r\n```\r\n\r\n### How do you run Sanic?\r\n\r\nAs a script\r\n\r\n### Operating System\r\n\r\nUbuntu\r\n\r\n### Sanic Version\r\n\r\n22.9.1", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2658/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2655", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2655/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2655/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2655/events", "html_url": "https://github.com/sanic-org/sanic/issues/2655", "id": 1533131991, "node_id": "I_kwDOA49B_s5bYbzX", "number": 2655, "title": "Can't run normally when using SSLContext", "user": {"login": "sdir", "id": 13232593, "node_id": "MDQ6VXNlcjEzMjMyNTkz", "avatar_url": "https://avatars.githubusercontent.com/u/13232593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdir", "html_url": "https://github.com/sdir", "followers_url": "https://api.github.com/users/sdir/followers", "following_url": "https://api.github.com/users/sdir/following{/other_user}", "gists_url": "https://api.github.com/users/sdir/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdir/subscriptions", "organizations_url": "https://api.github.com/users/sdir/orgs", "repos_url": "https://api.github.com/users/sdir/repos", "events_url": "https://api.github.com/users/sdir/events{/privacy}", "received_events_url": "https://api.github.com/users/sdir/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2023-01-14T04:27:56Z", "updated_at": "2023-03-20T12:05:23Z", "closed_at": "2023-03-20T12:05:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\n```\r\n   app.run(host='0.0.0.0', port=443, ssl=context, dev=True)\r\n  File \"/usr/lib/python3.10/site-packages/sanic/mixins/startup.py\", line 209, in run\r\n    serve(primary=self)  # type: ignore\r\n  File \"/usr/lib/python3.10/site-packages/sanic/mixins/startup.py\", line 862, in serve\r\n    manager.run()\r\n  File \"/usr/lib/python3.10/site-packages/sanic/worker/manager.py\", line 94, in run\r\n    self.start()\r\n  File \"/usr/lib/python3.10/site-packages/sanic/worker/manager.py\", line 101, in start\r\n    process.start()\r\n  File \"/usr/lib/python3.10/site-packages/sanic/worker/process.py\", line 53, in start\r\n    self._current_process.start()\r\n  File \"/usr/lib/python3.10/multiprocessing/process.py\", line 121, in start\r\n    self._popen = self._Popen(self)\r\n  File \"/usr/lib/python3.10/multiprocessing/context.py\", line 284, in _Popen\r\n    return Popen(process_obj)\r\n  File \"/usr/lib/python3.10/multiprocessing/popen_spawn_posix.py\", line 32, in __init__\r\n    super().__init__(process_obj)\r\n  File \"/usr/lib/python3.10/multiprocessing/popen_fork.py\", line 19, in __init__\r\n    self._launch(process_obj)\r\n  File \"/usr/lib/python3.10/multiprocessing/popen_spawn_posix.py\", line 47, in _launch\r\n    reduction.dump(process_obj, fp)\r\n  File \"/usr/lib/python3.10/multiprocessing/reduction.py\", line 60, in dump\r\n    ForkingPickler(file, protocol).dump(obj)\r\nTypeError: cannot pickle 'SSLContext' object\r\n```\n\n### Code snippet\n\n```python\r\nfrom sanic import Sanic\r\nimport ssl\r\n\r\ncontext = ssl.SSLContext(ssl.PROTOCOL_TLS_SERVER)\r\ncontext.load_cert_chain(\"certs/fullchain.pem\", \"certs/privkey.pem\")\r\n\r\napp = Sanic('test')\r\n\r\nif __name__ == \"__main__\":\r\n    app.run(host='0.0.0.0', port=443, ssl=context, dev=True)\r\n```\n\n### Expected Behavior\n\n_No response_\n\n### How do you run Sanic?\n\nAs a script (`app.run` or `Sanic.serve`)\n\n### Operating System\n\nlinux\n\n### Sanic Version\n\n22.12.0\n\n### Additional context\n\npickle does not support dump ssl.SSLContext causing this problem. \r\n`multiprocessing.context` use `pickle`\r\n\r\n```python\r\nimport ssl\r\n\r\ncontext = ssl.SSLContext(ssl.PROTOCOL_TLS_SERVER)\r\ncontext.load_cert_chain(\"certs/fullchain.pem\", \"certs/privkey.pem\")\r\npickle.dumps(context)\r\n```", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2655/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2655/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2631", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2631/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2631/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2631/events", "html_url": "https://github.com/sanic-org/sanic/issues/2631", "id": 1501617255, "node_id": "I_kwDOA49B_s5ZgNxn", "number": 2631, "title": "'NoneType' object has no attribute 'share' when using create_server", "user": {"login": "johnwason", "id": 7517859, "node_id": "MDQ6VXNlcjc1MTc4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/7517859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnwason", "html_url": "https://github.com/johnwason", "followers_url": "https://api.github.com/users/johnwason/followers", "following_url": "https://api.github.com/users/johnwason/following{/other_user}", "gists_url": "https://api.github.com/users/johnwason/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnwason/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnwason/subscriptions", "organizations_url": "https://api.github.com/users/johnwason/orgs", "repos_url": "https://api.github.com/users/johnwason/repos", "events_url": "https://api.github.com/users/johnwason/events{/privacy}", "received_events_url": "https://api.github.com/users/johnwason/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-12-17T22:07:14Z", "updated_at": "2022-12-18T11:43:23Z", "closed_at": "2022-12-18T11:43:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nI am getting this error when using `app.create_server()` function on Windows:\r\n\r\n```\r\n'NoneType' object has no attribute 'share'\r\n  File \"c:\\project\\\\software\\venv\\Lib\\site-packages\\sanic\\server\\runners.py\", line 205, in _serve_http_1\r\n    sock = sock.share(pid)\r\n  File \"c:\\project\\\\software\\venv\\Lib\\site-packages\\sanic\\server\\runners.py\", line 106, in serve\r\n    return _serve_http_1(\r\n  File \"c:\\project\\\\software\\venv\\Lib\\site-packages\\sanic\\mixins\\startup.py\", line 451, in create_server\r\n    return await serve(\r\n  File \"c:\\project\\\\software\\pyri-webui-server\\src\\pyri\\webui_server\\webui_server.py\", line 100, in _run_server\r\n    server = await self._app.create_server(self._host, self._port, return_asyncio_server=True) #sock=self._socket)\r\n  File \"C:\\Python310\\Lib\\asyncio\\base_events.py\", line 649, in run_until_complete\r\n    return future.result()\r\n  File \"c:\\project\\\\software\\pyri-webui-server\\src\\pyri\\webui_server\\webui_server.py\", line 105, in run\r\n    self._loop.run_until_complete(self._run_server())\r\n  File \"c:\\project\\\\software\\pyri-webui-server\\src\\pyri\\webui_server\\__main__.py\", line 30, in main\r\n    server.run()\r\n  File \"c:\\project\\\\software\\pyri-webui-server\\src\\pyri\\webui_server\\__main__.py\", line 33, in <module>\r\n    main()\r\n  File \"C:\\Python310\\Lib\\runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Python310\\Lib\\runpy.py\", line 196, in _run_module_as_main (Current frame)\r\n    return _run_code(code, main_globals, None,\r\n```\r\n\r\nIf I create and pass a socket to create_server it seems to work.\n\n### Code snippet\n\n```python\r\nasync def _run_server(self):\r\n        server = await self._app.create_server(self._host, self._port, return_asyncio_server=True)\r\n        await server.startup()\r\n        await server.serve_forever()\r\n```\n\n### Expected Behavior\n\nServer should start normally.\n\n### How do you run Sanic?\n\nAs a module\n\n### Operating System\n\nWindows 10\n\n### Sanic Version\n\n22.9.1\n\n### Additional context\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2631/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2604", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2604/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2604/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2604/events", "html_url": "https://github.com/sanic-org/sanic/issues/2604", "id": 1454240962, "node_id": "I_kwDOA49B_s5WrfTC", "number": 2604, "title": "HTTP 1 request headers decoded using default encoding instead of ISO-8859-1", "user": {"login": "relud", "id": 433717, "node_id": "MDQ6VXNlcjQzMzcxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/433717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/relud", "html_url": "https://github.com/relud", "followers_url": "https://api.github.com/users/relud/followers", "following_url": "https://api.github.com/users/relud/following{/other_user}", "gists_url": "https://api.github.com/users/relud/gists{/gist_id}", "starred_url": "https://api.github.com/users/relud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/relud/subscriptions", "organizations_url": "https://api.github.com/users/relud/orgs", "repos_url": "https://api.github.com/users/relud/repos", "events_url": "https://api.github.com/users/relud/events{/privacy}", "received_events_url": "https://api.github.com/users/relud/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1171857926, "node_id": "MDU6TGFiZWwxMTcxODU3OTI2", "url": "https://api.github.com/repos/sanic-org/sanic/labels/on%20hold", "name": "on hold", "color": "333333", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2022-11-18T00:45:16Z", "updated_at": "2023-03-20T13:40:01Z", "closed_at": "2023-03-20T13:40:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nheaders are decoded here without specifying their encoding:\r\n\r\nhttps://github.com/sanic-org/sanic/blob/ad4e526c775fc3ce950503d6476d9d344492b0dd/sanic/http/http1.py#L205\r\n\r\nOn my system (osx using python 3.10.8 installed via homebrew) this causes bytes that are valid characters in ISO-8859-1 but not in UTF-8 to be decoded as surrogate escape characters, e.g. `b\"\\x80\"` becomes `\"\\udf80\"` instead of `\"\\x80\"`\n\n### Code snippet\n\n_No response_\n\n### Expected Behavior\n\nheaders encoded as ISO-8859-1 with no MIME type to be decoded correctly without using UTF-8 surrogate escape characters.\n\n### How do you run Sanic?\n\nAs a script (`app.run` or `Sanic.serve`)\n\n### Operating System\n\nlinux\n\n### Sanic Version\n\n22.9.1\n\n### Additional context\n\nthis used to work as expected in Sanic<=20.12.7", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2604/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2604/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2601", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2601/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2601/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2601/events", "html_url": "https://github.com/sanic-org/sanic/issues/2601", "id": 1446466368, "node_id": "I_kwDOA49B_s5WN1NA", "number": 2601, "title": "SanicException.message is always None", "user": {"login": "Thirumalai", "id": 39087394, "node_id": "MDQ6VXNlcjM5MDg3Mzk0", "avatar_url": "https://avatars.githubusercontent.com/u/39087394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thirumalai", "html_url": "https://github.com/Thirumalai", "followers_url": "https://api.github.com/users/Thirumalai/followers", "following_url": "https://api.github.com/users/Thirumalai/following{/other_user}", "gists_url": "https://api.github.com/users/Thirumalai/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thirumalai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thirumalai/subscriptions", "organizations_url": "https://api.github.com/users/Thirumalai/orgs", "repos_url": "https://api.github.com/users/Thirumalai/repos", "events_url": "https://api.github.com/users/Thirumalai/events{/privacy}", "received_events_url": "https://api.github.com/users/Thirumalai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-11-12T14:07:52Z", "updated_at": "2023-03-20T12:50:52Z", "closed_at": "2023-03-20T12:50:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nRaising SanicException with a custom message does not assign it to the message attribute. It's always empty.\r\n\r\n### Code snippet\r\n\r\n```\r\nimport logging\r\n\r\nfrom sanic import Sanic\r\nfrom sanic.exceptions import Forbidden, NotFound, SanicException\r\nfrom sanic.request import Request\r\nfrom sanic.response import json\r\n\r\napp = Sanic(__name__)\r\n\r\n\r\n@app.route('/unauthorized')\r\nasync def unauthorized(request: Request):\r\n    raise SanicException(message=\"Unauthorized!!!\", status_code=401)\r\n\r\n\r\n@app.route('/forbidden')\r\nasync def forbidden(request: Request):\r\n    raise Forbidden(message=\"Forbidden!!!\")\r\n\r\n\r\n@app.route('/not-found')\r\nasync def not_found(request: Request):\r\n    raise NotFound()\r\n\r\n\r\n@app.exception(SanicException)\r\nasync def error_handler(req: Request, err: SanicException):\r\n    logging.error(f\"err: {err.message}\", exc_info=err)\r\n    return json({\"response_code\": err.status_code, \"error\": err.message})\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    app.run(host=\"0.0.0.0\", port=8080, dev=True)\r\n```\r\n\r\n### Expected Behavior\r\n\r\n_No response_\r\n\r\n### How do you run Sanic?\r\n\r\nASGI\r\n\r\n### Operating System\r\n\r\nMac\r\n\r\n### Sanic Version\r\n\r\n22.9.1\r\n\r\n### Additional context\r\n\r\n_No response_", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2601/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2596", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2596/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2596/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2596/events", "html_url": "https://github.com/sanic-org/sanic/issues/2596", "id": 1437051754, "node_id": "I_kwDOA49B_s5Vp6tq", "number": 2596, "title": "Missing priority functionality in app-wide middlware", "user": {"login": "Bluenix2", "id": 38372706, "node_id": "MDQ6VXNlcjM4MzcyNzA2", "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bluenix2", "html_url": "https://github.com/Bluenix2", "followers_url": "https://api.github.com/users/Bluenix2/followers", "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}", "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions", "organizations_url": "https://api.github.com/users/Bluenix2/orgs", "repos_url": "https://api.github.com/users/Bluenix2/repos", "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}", "received_events_url": "https://api.github.com/users/Bluenix2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-11-05T14:29:00Z", "updated_at": "2022-12-19T17:14:48Z", "closed_at": "2022-12-19T17:14:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\n\r\nIn v22.9 the priority feature was added, but unfortunately it appears it was overlooked and there is priority parameter to `register_middleware()` for `Sanic`.\r\n\r\nI am looking to use this feature because I have a Blueprint-specific middleware which appears to run before the application-wide middleware. In my case the application-wide middleware does authorization and updates `request.ctx` which is then used in the Blueprint-specific middleware.\r\n\r\n### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n## Environment\r\n\r\nSanic (22.9.1; Routing 22.8.0) is ran on Windows using ASGI.\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2596/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2594", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2594/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2594/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2594/events", "html_url": "https://github.com/sanic-org/sanic/issues/2594", "id": 1429031247, "node_id": "I_kwDOA49B_s5VLUlP", "number": 2594, "title": "Empty reply from server", "user": {"login": "longswordinhand", "id": 11819209, "node_id": "MDQ6VXNlcjExODE5MjA5", "avatar_url": "https://avatars.githubusercontent.com/u/11819209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/longswordinhand", "html_url": "https://github.com/longswordinhand", "followers_url": "https://api.github.com/users/longswordinhand/followers", "following_url": "https://api.github.com/users/longswordinhand/following{/other_user}", "gists_url": "https://api.github.com/users/longswordinhand/gists{/gist_id}", "starred_url": "https://api.github.com/users/longswordinhand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/longswordinhand/subscriptions", "organizations_url": "https://api.github.com/users/longswordinhand/orgs", "repos_url": "https://api.github.com/users/longswordinhand/repos", "events_url": "https://api.github.com/users/longswordinhand/events{/privacy}", "received_events_url": "https://api.github.com/users/longswordinhand/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-10-30T21:59:11Z", "updated_at": "2022-10-31T05:25:56Z", "closed_at": "2022-10-31T05:25:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nAfter my server receives a request, it will run processing steps which might take times. However, the steps will not be finished compeletely. It reports \"[52] Empty reply from server\". \r\nI also increase the response time out as:\r\napp = Sanic(\"App\")\r\napp.config.KEEP_ALIVE = True\r\napp.config.REQUEST_TIMEOUT = 5000\r\napp.config.RESPONSE_TIMEOUT = 6000\r\n\r\nPlease help. Thanks a lot.\r\n \r\n\r\n### Code snippet\r\n\r\n_No response_\r\n\r\n### Expected Behavior\r\n\r\n_No response_\r\n\r\n### How do you run Sanic?\r\n\r\nAs a script (`app.run` or `Sanic.serve`)\r\n\r\n### Operating System\r\n\r\nUbuntu\r\n\r\n### Sanic Version\r\n\r\n22.9.0\r\n\r\n### Additional context\r\n\r\n_No response_", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2594/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2593", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2593/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2593/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2593/events", "html_url": "https://github.com/sanic-org/sanic/issues/2593", "id": 1427641916, "node_id": "I_kwDOA49B_s5VGBY8", "number": 2593, "title": "Missing links in error messages (\"See more information: ____\")", "user": {"login": "budroco", "id": 109351575, "node_id": "U_kgDOBoSSlw", "avatar_url": "https://avatars.githubusercontent.com/u/109351575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/budroco", "html_url": "https://github.com/budroco", "followers_url": "https://api.github.com/users/budroco/followers", "following_url": "https://api.github.com/users/budroco/following{/other_user}", "gists_url": "https://api.github.com/users/budroco/gists{/gist_id}", "starred_url": "https://api.github.com/users/budroco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/budroco/subscriptions", "organizations_url": "https://api.github.com/users/budroco/orgs", "repos_url": "https://api.github.com/users/budroco/repos", "events_url": "https://api.github.com/users/budroco/events{/privacy}", "received_events_url": "https://api.github.com/users/budroco/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-10-28T18:27:25Z", "updated_at": "2022-12-27T14:50:37Z", "closed_at": "2022-12-27T14:50:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nWhen Sanic throws error messages, sometimes they hint at more information being available, but with \"____\" instead of a real link. \r\n\r\nExample: \r\n```\r\nsanic.exceptions.ServerError: Sanic server could not start: [Errno 48] Address already in use.\r\nThis may have happened if you are running Sanic in the global scope and not inside of a `if __name__ == \"__main__\"` block. See more information: ____.\r\n```\r\n\r\nThere are [multiple of these placeholders](https://github.com/sanic-org/sanic/search?q=____) with varying lengths. \n\n### Code snippet\n\n_No response_\n\n### Expected Behavior\n\nThe message contains a link to relevant documentation. \n\n### How do you run Sanic?\n\nSanic CLI\n\n### Operating System\n\nmacOS 12.6\n\n### Sanic Version\n\nSanic 22.9.0; Routing 22.8.0\n\n### Additional context\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2593/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2589", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2589/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2589/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2589/events", "html_url": "https://github.com/sanic-org/sanic/issues/2589", "id": 1424365353, "node_id": "I_kwDOA49B_s5U5hcp", "number": 2589, "title": "Sanic colors with python 3.11 displayed incorrectly", "user": {"login": "LiraNuna", "id": 205628, "node_id": "MDQ6VXNlcjIwNTYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/205628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LiraNuna", "html_url": "https://github.com/LiraNuna", "followers_url": "https://api.github.com/users/LiraNuna/followers", "following_url": "https://api.github.com/users/LiraNuna/following{/other_user}", "gists_url": "https://api.github.com/users/LiraNuna/gists{/gist_id}", "starred_url": "https://api.github.com/users/LiraNuna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LiraNuna/subscriptions", "organizations_url": "https://api.github.com/users/LiraNuna/orgs", "repos_url": "https://api.github.com/users/LiraNuna/repos", "events_url": "https://api.github.com/users/LiraNuna/events{/privacy}", "received_events_url": "https://api.github.com/users/LiraNuna/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-10-26T16:46:34Z", "updated_at": "2022-11-29T10:17:49Z", "closed_at": "2022-11-29T10:17:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nUsing Python3.11, the DEBUG message when starting the server shows:\r\n\r\n```\r\n[2022-10-26 11:43:52 -0500] [109121] [DEBUG] Colors.BLUEStarting a process: Colors.BOLDColors.SANICSanic-Server-0-0Colors.END\r\n[2022-10-26 11:43:52 -0500] [109121] [DEBUG] Colors.BLUEStarting a process: Colors.BOLDColors.SANICSanic-Reloader-0Colors.END\r\n```\r\n\r\nThis is fairly minor issue but could be a note of a larger issue. \r\n\r\n### Code snippet\r\n\r\n_No response_\r\n\r\n### Expected Behavior\r\n\r\n_No response_\r\n\r\n### How do you run Sanic?\r\n\r\nAs a script (`app.run` or `Sanic.serve`)\r\n\r\n### Operating System\r\n\r\nLinux\r\n\r\n### Sanic Version\r\n\r\n22.9.0\r\n\r\n### Additional context\r\n\r\nUsing Python3.10 works correctly.", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2589/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2584", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2584/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2584/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2584/events", "html_url": "https://github.com/sanic-org/sanic/issues/2584", "id": 1418475458, "node_id": "I_kwDOA49B_s5UjDfC", "number": 2584, "title": "Unable to handle global scope on Windows", "user": {"login": "SaidBySolo", "id": 33891531, "node_id": "MDQ6VXNlcjMzODkxNTMx", "avatar_url": "https://avatars.githubusercontent.com/u/33891531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SaidBySolo", "html_url": "https://github.com/SaidBySolo", "followers_url": "https://api.github.com/users/SaidBySolo/followers", "following_url": "https://api.github.com/users/SaidBySolo/following{/other_user}", "gists_url": "https://api.github.com/users/SaidBySolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/SaidBySolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SaidBySolo/subscriptions", "organizations_url": "https://api.github.com/users/SaidBySolo/orgs", "repos_url": "https://api.github.com/users/SaidBySolo/repos", "events_url": "https://api.github.com/users/SaidBySolo/events{/privacy}", "received_events_url": "https://api.github.com/users/SaidBySolo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1366213001, "node_id": "MDU6TGFiZWwxMzY2MjEzMDAx", "url": "https://api.github.com/repos/sanic-org/sanic/labels/windows", "name": "windows", "color": "1c74b2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-10-21T15:02:07Z", "updated_at": "2022-12-07T13:08:12Z", "closed_at": "2022-12-07T13:08:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nOn Windows I get a runtime error telling me to call freeze_support, when run code snippet\r\n\r\n```py\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"C:\\Python310\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\r\n    exitcode = _main(fd, parent_sentinel)\r\n  File \"C:\\Python310\\lib\\multiprocessing\\spawn.py\", line 125, in _main\r\n    prepare(preparation_data)\r\n  File \"C:\\Python310\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\r\n    _fixup_main_from_path(data['init_main_from_path'])\r\n  File \"C:\\Python310\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\r\n    main_content = runpy.run_path(main_path,\r\n  File \"C:\\Python310\\lib\\runpy.py\", line 269, in run_path\r\n    return _run_module_code(code, init_globals, run_name,\r\n  File \"C:\\Python310\\lib\\runpy.py\", line 96, in _run_module_code\r\n    _run_code(code, mod_globals, init_globals,\r\n  File \"C:\\Python310\\lib\\runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n  File \"c:\\Users\\Juheon\\Documents\\playground\\server.py\", line 5, in <module>\r\n    app.run(workers=4)\r\n  File \"C:\\Users\\Juheon\\Documents\\playground\\.venv\\lib\\site-packages\\sanic\\mixins\\startup.py\", line 208, in run\r\n    serve(primary=self)  # type: ignore\r\n  File \"C:\\Users\\Juheon\\Documents\\playground\\.venv\\lib\\site-packages\\sanic\\mixins\\startup.py\", line 727, in serve\r\n    sync_manager = Manager()\r\n  File \"C:\\Python310\\lib\\multiprocessing\\context.py\", line 57, in Manager\r\n    m.start()\r\n  File \"C:\\Python310\\lib\\multiprocessing\\managers.py\", line 562, in start\r\n    self._process.start()\r\n  File \"C:\\Python310\\lib\\multiprocessing\\process.py\", line 121, in start\r\n    self._popen = self._Popen(self)\r\n  File \"C:\\Python310\\lib\\multiprocessing\\context.py\", line 327, in _Popen\r\n    return Popen(process_obj)\r\n  File \"C:\\Python310\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\r\n    prep_data = spawn.get_preparation_data(process_obj._name)\r\n  File \"C:\\Python310\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\r\n    _check_not_importing_main()\r\n  File \"C:\\Python310\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\r\n    raise RuntimeError('''\r\nRuntimeError:\r\n        An attempt has been made to start a new process before the\r\n        current process has finished its bootstrapping phase.\r\n\r\n        This probably means that you are not using fork to start your\r\n        child processes and you have forgotten to use the proper idiom\r\n        in the main module:\r\n\r\n            if __name__ == '__main__':\r\n                freeze_support()\r\n                ...\r\n\r\n        The \"freeze_support()\" line can be omitted if the program\r\n        is not going to be frozen to produce an executable.\r\n\r\n```\r\n\r\n**Code snippet**\r\n```py\r\nfrom sanic import Sanic\r\n\r\napp = Sanic(\"server\")\r\n\r\napp.run(worker=4)\r\n```\r\n\r\n**Expected behavior**\r\n\r\nshould be handled like this:\r\nhttps://sanic.dev/en/guide/release-notes/v22.9.html#potential-upgrade-issues\r\n\r\n\r\n\r\n\r\n**Environment (please complete the following information):**\r\n<!-- Please provide the information below. Instead, you can copy and paste the message that Sanic shows on startup. If you do, please remember to format it with ``` -->\r\n - OS: Windows 10\r\n - Sanic Version: 22.9\r\n\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2584/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2583", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2583/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2583/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2583/events", "html_url": "https://github.com/sanic-org/sanic/issues/2583", "id": 1418328729, "node_id": "I_kwDOA49B_s5UifqZ", "number": 2583, "title": "Sanic v22.9 server could not be start with `add_route()`", "user": {"login": "Xnollis", "id": 29424100, "node_id": "MDQ6VXNlcjI5NDI0MTAw", "avatar_url": "https://avatars.githubusercontent.com/u/29424100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xnollis", "html_url": "https://github.com/Xnollis", "followers_url": "https://api.github.com/users/Xnollis/followers", "following_url": "https://api.github.com/users/Xnollis/following{/other_user}", "gists_url": "https://api.github.com/users/Xnollis/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xnollis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xnollis/subscriptions", "organizations_url": "https://api.github.com/users/Xnollis/orgs", "repos_url": "https://api.github.com/users/Xnollis/repos", "events_url": "https://api.github.com/users/Xnollis/events{/privacy}", "received_events_url": "https://api.github.com/users/Xnollis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-10-21T13:16:46Z", "updated_at": "2022-10-21T14:37:39Z", "closed_at": "2022-10-21T13:56:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nThe \"Hello world\" demo failed to start and stopped automatically because of below exceptions:\r\n===========start======================\r\nTraceback (most recent call last):\r\n  File \"C:\\prog\\.venv\\lib\\site-packages\\sanic\\app.py\", line 1450, in get_app\r\n    return cls._app_registry[name]\r\nKeyError: 'MyHelloWorldApp'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\tyrant\\AppData\\Local\\Programs\\Python\\Python310\\lib\\multiprocessing\\process.py\", line 314, in _bootstrap\r\n    self.run()\r\n  File \"C:\\Users\\tyrant\\AppData\\Local\\Programs\\Python\\Python310\\lib\\multiprocessing\\process.py\", line 108, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"C:\\prog\\.venv\\lib\\site-packages\\sanic\\worker\\serve.py\", line 51, in worker_serve\r\n    app = app_loader.load()\r\n  File \"C:\\prog\\.venv\\lib\\site-packages\\sanic\\worker\\loader.py\", line 60, in load\r\n    return self.factory()\r\n  File \"C:\\prog\\.venv\\lib\\site-packages\\sanic\\app.py\", line 1456, in get_app\r\n    raise SanicException(f'Sanic app name \"{name}\" not found.')\r\nsanic.exceptions.SanicException: Sanic app name \"MyHelloWorldApp\" not found.\r\n[11504] [ERROR] Not all workers are ack. Shutting down.\r\n[11504] [ERROR] Experienced exception while trying to serve\r\nTraceback (most recent call last):\r\n  File \"C:\\prog\\.venv\\lib\\site-packages\\sanic\\mixins\\startup.py\", line 851, in serve\r\n    manager.run()\r\n  File \"C:\\prog\\.venv\\lib\\site-packages\\sanic\\worker\\manager.py\", line 63, in run\r\n    self.monitor()\r\n  File \"C:\\prog\\.venv\\lib\\site-packages\\sanic\\worker\\manager.py\", line 99, in monitor\r\n    self.wait_for_ack()\r\n  File \"C:\\prog\\.venv\\lib\\site-packages\\sanic\\worker\\manager.py\", line 138, in wait_for_ack\r\n    self.kill()\r\n  File \"C:\\prog\\.venv\\lib\\site-packages\\sanic\\worker\\manager.py\", line 159, in kill\r\n    os.kill(process.pid, SIGKILL)\r\nPermissionError: [WinError 5] Access denied\r\n[2022-10-21 20:22:13 +0800] [11504] [INFO] Server Stopped\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\tyrant\\Documents\\gy-sso\\test\\main2.py\", line 12, in <module>\r\n    app.run()\r\n  File \"C:\\prog\\.venv\\lib\\site-packages\\sanic\\mixins\\startup.py\", line 206, in run\r\n    serve(primary=self)  # type: ignore\r\n  File \"C:\\prog\\.venv\\lib\\site-packages\\sanic\\mixins\\startup.py\", line 851, in serve\r\n    manager.run()\r\n  File \"C:\\prog\\.venv\\lib\\site-packages\\sanic\\worker\\manager.py\", line 63, in run\r\n    self.monitor()\r\n  File \"C:\\prog\\.venv\\lib\\site-packages\\sanic\\worker\\manager.py\", line 99, in monitor\r\n    self.wait_for_ack()\r\n  File \"C:\\prog\\.venv\\lib\\site-packages\\sanic\\worker\\manager.py\", line 138, in wait_for_ack\r\n    self.kill()\r\n  File \"C:\\prog\\.venv\\lib\\site-packages\\sanic\\worker\\manager.py\", line 159, in kill\r\n    os.kill(process.pid, SIGKILL)\r\nPermissionError: [WinError 5] Access denied\r\n============end=========================\r\n\r\n**This issue could be reshown by following steps:**\r\n`python3 -m venv myvenv`\r\n\r\n`source ./myvenv/bin/activate`\r\n\r\n`pip3 install sanic`\r\n\r\n`vim hello_world.py`\r\n\r\nContent of hello_world.py(or download here [hello_world.txt](https://github.com/sanic-org/sanic/files/9839299/hello_world.txt) ):\r\n========hello_world.py start================\r\nfrom sanic import Sanic\r\nfrom sanic.response import text\r\n\r\nasync def hello_world(request):\r\n    return text(\"Hello, world.\")\r\n\r\nif __name__ == '__main__':\r\n    app = Sanic(\"MyHelloWorldApp\")`\r\n    app.add_route(hello_world, '/')\r\n    app.run()\r\n========hello_world.py end================\r\n\r\n**Then start this py file:**\r\n`python3 hello_world.py`\r\n\r\n**Expected behavior**\r\nSanic server should be started correctly.\r\n\r\n**Environment (please complete the following information):**\r\n<!-- Please provide the information below. Instead, you can copy and paste the message that Sanic shows on startup. If you do, please remember to format it with ``` -->\r\n - OS: Windows10 x64 and macOS 11.5 x64 (Intel)\r\n - Sanic Version:  v22.9.0 \r\n - Python Version: 3.10.7\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2583/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2580", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2580/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2580/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2580/events", "html_url": "https://github.com/sanic-org/sanic/issues/2580", "id": 1417011461, "node_id": "I_kwDOA49B_s5UdeEF", "number": 2580, "title": "Sanic app name \"...\" not found", "user": {"login": "Snocember", "id": 56262919, "node_id": "MDQ6VXNlcjU2MjYyOTE5", "avatar_url": "https://avatars.githubusercontent.com/u/56262919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Snocember", "html_url": "https://github.com/Snocember", "followers_url": "https://api.github.com/users/Snocember/followers", "following_url": "https://api.github.com/users/Snocember/following{/other_user}", "gists_url": "https://api.github.com/users/Snocember/gists{/gist_id}", "starred_url": "https://api.github.com/users/Snocember/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Snocember/subscriptions", "organizations_url": "https://api.github.com/users/Snocember/orgs", "repos_url": "https://api.github.com/users/Snocember/repos", "events_url": "https://api.github.com/users/Snocember/events{/privacy}", "received_events_url": "https://api.github.com/users/Snocember/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-10-20T17:36:05Z", "updated_at": "2022-10-20T19:29:57Z", "closed_at": "2022-10-20T17:49:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I upgraded from 22.6.2 to 22.9.0 and my code and the hello world example are not working anymore.\r\nThe error message says: `Sanic app name \"Example\" not found`.\r\nSame error message as in #2560 and #2563.\r\n\r\n**Code snippet**\r\n```python\r\nfrom sanic import Sanic\r\nfrom sanic.response import text\r\napp = Sanic(\"Example\")\r\n@app.get(\"/\")\r\nasync def hello_world(request):\r\n    return text(\"Hello, world.\")\r\n\r\napp.run()\r\n```\r\n\r\n**Traceback**\r\n```txt\r\nFile \".../python/site-packages/sanic/app.py\", line 1450, in get_app\r\n    return cls._app_registry[name]\r\nKeyError: 'Example'\r\n\r\nsanic.exceptions.SanicException: Sanic app name \"Example\" not found.\r\n```\r\n\r\n**Environment**\r\n - OS: macOS-12.6-arm64-arm-64bit\r\n - Sanic Version: v22.9.0\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2580/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2577", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2577/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2577/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2577/events", "html_url": "https://github.com/sanic-org/sanic/issues/2577", "id": 1415311397, "node_id": "I_kwDOA49B_s5UW_Al", "number": 2577, "title": "Certificates not created with `mkcert` or `trustme` raise a RuntimeError", "user": {"login": "lllama", "id": 598411, "node_id": "MDQ6VXNlcjU5ODQxMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/598411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lllama", "html_url": "https://github.com/lllama", "followers_url": "https://api.github.com/users/lllama/followers", "following_url": "https://api.github.com/users/lllama/following{/other_user}", "gists_url": "https://api.github.com/users/lllama/gists{/gist_id}", "starred_url": "https://api.github.com/users/lllama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lllama/subscriptions", "organizations_url": "https://api.github.com/users/lllama/orgs", "repos_url": "https://api.github.com/users/lllama/repos", "events_url": "https://api.github.com/users/lllama/events{/privacy}", "received_events_url": "https://api.github.com/users/lllama/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-10-19T17:00:54Z", "updated_at": "2022-10-31T11:22:31Z", "closed_at": "2022-10-31T11:22:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `CertLoader` class in `sanic-org/sanic/sanic/worker/loader.py` checks the creator of the certificate. If the creator is not `mkcert` or `trustme` then it raises a `RuntimeError`. This will prevent Sanic from running with certificates from any other sources.\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2577/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2577/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2576", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2576/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2576/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2576/events", "html_url": "https://github.com/sanic-org/sanic/issues/2576", "id": 1413166429, "node_id": "I_kwDOA49B_s5UOzVd", "number": 2576, "title": "Sentry integration and background tasks", "user": {"login": "cnicodeme", "id": 317142, "node_id": "MDQ6VXNlcjMxNzE0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/317142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cnicodeme", "html_url": "https://github.com/cnicodeme", "followers_url": "https://api.github.com/users/cnicodeme/followers", "following_url": "https://api.github.com/users/cnicodeme/following{/other_user}", "gists_url": "https://api.github.com/users/cnicodeme/gists{/gist_id}", "starred_url": "https://api.github.com/users/cnicodeme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cnicodeme/subscriptions", "organizations_url": "https://api.github.com/users/cnicodeme/orgs", "repos_url": "https://api.github.com/users/cnicodeme/repos", "events_url": "https://api.github.com/users/cnicodeme/events{/privacy}", "received_events_url": "https://api.github.com/users/cnicodeme/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-10-18T12:45:41Z", "updated_at": "2022-10-18T14:10:14Z", "closed_at": "2022-10-18T13:32:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nLooking at the Sentry integration, a hub is created on request ('http.lifecycle.request' => `_hub_enter`) and removed at exit ('http.lifecycle.response' => `_hub_exit`).\r\n\r\nIf I understand this correctly, it means that if an exception occurs outside of the request, no Hub will be define and the exception won't be caught by Sentry.\r\n\r\nThis can happen when running a long background_task from a request handler that has already returned a response.\r\n\r\n**Environment (please complete the following information):**\r\n\r\n - Sanic Version: 22.9.0\r\n- Sentry SDK : 1.9.9\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2576/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2568", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2568/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2568/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2568/events", "html_url": "https://github.com/sanic-org/sanic/issues/2568", "id": 1404621787, "node_id": "I_kwDOA49B_s5TuNPb", "number": 2568, "title": "Sanic fails to start when the source files are frozen with cx_Freeze i.e. when only the pyc files are available", "user": {"login": "jangxx", "id": 2213088, "node_id": "MDQ6VXNlcjIyMTMwODg=", "avatar_url": "https://avatars.githubusercontent.com/u/2213088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jangxx", "html_url": "https://github.com/jangxx", "followers_url": "https://api.github.com/users/jangxx/followers", "following_url": "https://api.github.com/users/jangxx/following{/other_user}", "gists_url": "https://api.github.com/users/jangxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/jangxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jangxx/subscriptions", "organizations_url": "https://api.github.com/users/jangxx/orgs", "repos_url": "https://api.github.com/users/jangxx/repos", "events_url": "https://api.github.com/users/jangxx/events{/privacy}", "received_events_url": "https://api.github.com/users/jangxx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-10-11T13:13:14Z", "updated_at": "2022-10-11T14:35:33Z", "closed_at": "2022-10-11T14:35:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nRunning `startup()` on the http server fails with\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"server\\main.py\", line 133, in async_main\r\n  File \"C:\\path\\venv\\lib\\site-packages\\sanic\\app.py\", line 1541, in _startup\r\n  File \"C:\\path\\venv\\lib\\site-packages\\sanic\\touchup\\service.py\", line 24, in run\r\n  File \"C:\\path\\venv\\lib\\site-packages\\sanic\\touchup\\schemes\\base.py\", line 27, in build\r\n  File \"C:\\Program Files\\Python310\\lib\\inspect.py\", line 1147, in getsource\r\n  File \"C:\\Program Files\\Python310\\lib\\inspect.py\", line 1129, in getsourcelines\r\n  File \"C:\\Program Files\\Python310\\lib\\inspect.py\", line 958, in findsource\r\nOSError: could not get source code\r\n```\r\n\r\nwhen the scripts are frozen with cx_Freeze and run on a different machine. I'm guessing this is due to the fact that Sanic tries to look in the original location of the source files which obviously doesn't exist on other machines.\r\n\r\n**Code snippet**\r\n```python\r\nhttp_server = await app.create_server(\r\n\thost=\"localhost\", \r\n\tport=64152, \r\n\treturn_asyncio_server=True\r\n)\r\nawait http_server.startup()\r\n````\r\n\r\n**Expected behavior**\r\nThe server starts.\r\n\r\n\r\n**Environment (please complete the following information):**\r\n```\r\nSanic v22.6.2\r\nGoin' Fast @ http://localhost:64152\r\nmode: production, single worker\r\nserver: sanic, HTTP/1.1\r\npython: 3.10.7\r\nplatform: Windows-10-10.0.19044\r\npackages: sanic-routing==22.3.0\r\n```\r\n\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2568/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2566", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2566/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2566/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2566/events", "html_url": "https://github.com/sanic-org/sanic/issues/2566", "id": 1404391541, "node_id": "I_kwDOA49B_s5TtVB1", "number": 2566, "title": "Auto reloader consumes full CPU core", "user": {"login": "eirikrye", "id": 597264, "node_id": "MDQ6VXNlcjU5NzI2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/597264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eirikrye", "html_url": "https://github.com/eirikrye", "followers_url": "https://api.github.com/users/eirikrye/followers", "following_url": "https://api.github.com/users/eirikrye/following{/other_user}", "gists_url": "https://api.github.com/users/eirikrye/gists{/gist_id}", "starred_url": "https://api.github.com/users/eirikrye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eirikrye/subscriptions", "organizations_url": "https://api.github.com/users/eirikrye/orgs", "repos_url": "https://api.github.com/users/eirikrye/repos", "events_url": "https://api.github.com/users/eirikrye/events{/privacy}", "received_events_url": "https://api.github.com/users/eirikrye/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-10-11T10:21:50Z", "updated_at": "2022-10-31T10:34:02Z", "closed_at": "2022-10-31T10:34:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nEnabling the auto reloader (`auto_reload=True` or `--auto-reload`) will consume a full CPU core, because it is looping over all files in all loaded modules and `stat`-ing every file. 100% usage on a single core is observed on macOS and Linux.\r\n\r\nThe problematic loop is here:\r\n\r\nhttps://github.com/sanic-org/sanic/blob/f891995b487f01ff1207afcd241ae359725a8e3c/sanic/worker/reloader.py#L46-L64\r\n\r\n**Code snippet**\r\n\r\nRun the following minimal example with `python3 test.py` or `sanic test:app --auto-reload` and watch CPU usage\r\n\r\n```python\r\nfrom sanic import Sanic, text\r\n\r\napp = Sanic(\"test\")\r\n\r\n\r\n@app.route(\"/\")\r\ndef hello_world(request):\r\n    return text(\"hello, world\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    app.run(auto_reload=True)\r\n```\r\n\r\n\r\n**Expected behavior**\r\n\r\nThe reloader should not consume a full CPU core, but should watch the file system for changes more intelligently, using platform-specific methods (inotify, FSEvents, kqueue, etc). See the [watchdog](https://github.com/gorakhargosh/watchdog/) project for inspiration. Maybe `watchdog` could be included as an optional dependency and used if available?\r\n\r\nFor instance, [another popular framework has implemented two reloader loops](https://github.com/pallets/werkzeug/blob/2.2.2/src/werkzeug/_reloader.py) and will select the `watchdog` loop if the package is available.\r\n\r\nAlternatively, simply add a short sleep step to the reloader loop. I think a one second delay in reloading is acceptable.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: macOS 12.6, Ubuntu Linux 22.04 (likely also Windows, but not tested)\r\n - Sanic Version: 22.9.0\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2566/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2565", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2565/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2565/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2565/events", "html_url": "https://github.com/sanic-org/sanic/issues/2565", "id": 1403432995, "node_id": "I_kwDOA49B_s5TprAj", "number": 2565, "title": "Openapi not work with Pydantic as expected ", "user": {"login": "cncws", "id": 12729745, "node_id": "MDQ6VXNlcjEyNzI5NzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/12729745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cncws", "html_url": "https://github.com/cncws", "followers_url": "https://api.github.com/users/cncws/followers", "following_url": "https://api.github.com/users/cncws/following{/other_user}", "gists_url": "https://api.github.com/users/cncws/gists{/gist_id}", "starred_url": "https://api.github.com/users/cncws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cncws/subscriptions", "organizations_url": "https://api.github.com/users/cncws/orgs", "repos_url": "https://api.github.com/users/cncws/repos", "events_url": "https://api.github.com/users/cncws/events{/privacy}", "received_events_url": "https://api.github.com/users/cncws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-10-10T16:26:44Z", "updated_at": "2022-11-01T01:24:04Z", "closed_at": "2022-10-31T08:08:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n<!-- A clear and concise description of what the bug is, make sure to paste any exceptions and tracebacks. -->\r\n\r\nAccording to the doc <https://sanic.dev/en/plugins/sanic-ext/openapi/decorators.html#integration-with-pydantic>, the request body should be generated properly. However, a wrong schema is shown.\r\n\r\n**Code snippet**\r\n<!-- Relevant source code, make sure to remove what is not necessary. -->\r\n\r\n```py\r\nfrom sanic import Sanic, json\r\nfrom sanic_ext import validate, openapi\r\nfrom pydantic import BaseModel, Field\r\n\r\nclass Test(BaseModel):\r\n    foo: str = Field(description=\"Foo Description\", example=\"FOOO\")\r\n    bar: str = \"test\"\r\n\r\n\r\napp = Sanic(\"test\")\r\n\r\n@app.get(\"/\")\r\n@openapi.definition(\r\n    body={'application/json': Test.schema()},\r\n)\r\n@validate(json=Test)\r\nasync def get(request):\r\n    return json({})\r\n```\r\n\r\nThe server above generate a wrong schema like this:\r\n\r\n```json\r\n{\r\n    \"openapi\": \"3.0.3\",\r\n    \"info\": {\r\n        \"title\": \"API\",\r\n        \"version\": \"1.0.0\",\r\n        \"contact\": {}\r\n    },\r\n    \"paths\": {\r\n        \"\\/\": {\r\n            \"get\": {\r\n                \"operationId\": \"get~get\",\r\n                \"summary\": \"Get\",\r\n                \"requestBody\": {\r\n                    \"content\": {\r\n                        \"application\\/json\": {\r\n                            \"schema\": {\r\n                                \"type\": \"object\"\r\n                            }           // `properties` object is missing\r\n                        }\r\n                    }\r\n                },\r\n                \"responses\": {\r\n                    \"default\": {\r\n                        \"description\": \"OK\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"tags\": [],\r\n    \"servers\": [],\r\n    \"security\": []\r\n}\r\n```\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\nVisit <http://localhost:8000/docs/openapi.json>, shown the following schema.\r\n\r\n```json\r\n{\r\n    \"openapi\": \"3.0.3\",\r\n    \"info\": {\r\n        \"title\": \"API\",\r\n        \"version\": \"1.0.0\",\r\n        \"contact\": {}\r\n    },\r\n    \"paths\": {\r\n        \"\\/\": {\r\n            \"get\": {\r\n                \"operationId\": \"get~get\",\r\n                \"summary\": \"Get\",\r\n                \"requestBody\": {\r\n                    \"content\": {\r\n                        \"application\\/json\": {\r\n                            \"schema\": {\r\n                                \"type\": \"object\",\r\n                                \"properties\": {\r\n                                    \"foo\": {\r\n                                        \"type\": \"string\"\r\n                                    },\r\n                                    \"bar\": {\r\n                                        \"type\": \"string\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"responses\": {\r\n                    \"default\": {\r\n                        \"description\": \"OK\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"tags\": [],\r\n    \"servers\": [],\r\n    \"security\": []\r\n}\r\n```\r\n\r\n\r\n\r\n**Environment (please complete the following information):**\r\n<!-- Please provide the information below. Instead, you can copy and paste the message that Sanic shows on startup. If you do, please remember to format it with ``` -->\r\n - OS: macOS-12.6-arm64-arm-64bit   \r\n - Sanic Version: v22.9.0 \r\n\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2565/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2563", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2563/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2563/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2563/events", "html_url": "https://github.com/sanic-org/sanic/issues/2563", "id": 1402749747, "node_id": "I_kwDOA49B_s5TnEMz", "number": 2563, "title": "Sanic app name  not found", "user": {"login": "lky1937", "id": 8570358, "node_id": "MDQ6VXNlcjg1NzAzNTg=", "avatar_url": "https://avatars.githubusercontent.com/u/8570358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lky1937", "html_url": "https://github.com/lky1937", "followers_url": "https://api.github.com/users/lky1937/followers", "following_url": "https://api.github.com/users/lky1937/following{/other_user}", "gists_url": "https://api.github.com/users/lky1937/gists{/gist_id}", "starred_url": "https://api.github.com/users/lky1937/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lky1937/subscriptions", "organizations_url": "https://api.github.com/users/lky1937/orgs", "repos_url": "https://api.github.com/users/lky1937/repos", "events_url": "https://api.github.com/users/lky1937/events{/privacy}", "received_events_url": "https://api.github.com/users/lky1937/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-10-10T07:57:07Z", "updated_at": "2022-10-20T09:35:27Z", "closed_at": "2022-10-20T09:27:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm having a problem, I need help, here is my running environment  and some sample code.\r\n\r\nsanic: v22.9.0\r\npython: 3.8.10\r\nplatform: macOS-10.13.6-x86_64-i386-64bit\r\n\r\n```python\r\nimport uuid\r\n\r\nfrom sanic import Sanic\r\n\r\napp = Sanic(name='test')\r\n\r\nif __name__ == \"__main__\":\r\n    app.run()\r\n```\r\n\r\n I'm confused when I use \r\n`app = Sanic(name='sanic_' + str(uuid.uuid4())[:5])` instead of `app = Sanic(name='test')`, I get some errors like that\r\n```\r\nsanic.exceptions.SanicException: Sanic app name \"sanic_12c3a\" not found.\r\n[2022-10-10 15:53:50 +0800] [84384] [ERROR] Not all workers are ack. Shutting down.\r\n[2022-10-10 15:53:50 +0800] [84384] [ERROR] Experienced exception while trying to serve\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2563/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2561", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2561/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2561/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2561/events", "html_url": "https://github.com/sanic-org/sanic/issues/2561", "id": 1402189745, "node_id": "I_kwDOA49B_s5Tk7ex", "number": 2561, "title": "Disabling OpenAPI throws URLBuildError", "user": {"login": "4n1qz5skwv", "id": 76768193, "node_id": "MDQ6VXNlcjc2NzY4MTkz", "avatar_url": "https://avatars.githubusercontent.com/u/76768193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/4n1qz5skwv", "html_url": "https://github.com/4n1qz5skwv", "followers_url": "https://api.github.com/users/4n1qz5skwv/followers", "following_url": "https://api.github.com/users/4n1qz5skwv/following{/other_user}", "gists_url": "https://api.github.com/users/4n1qz5skwv/gists{/gist_id}", "starred_url": "https://api.github.com/users/4n1qz5skwv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/4n1qz5skwv/subscriptions", "organizations_url": "https://api.github.com/users/4n1qz5skwv/orgs", "repos_url": "https://api.github.com/users/4n1qz5skwv/repos", "events_url": "https://api.github.com/users/4n1qz5skwv/events{/privacy}", "received_events_url": "https://api.github.com/users/4n1qz5skwv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-10-09T07:57:22Z", "updated_at": "2022-10-09T12:56:04Z", "closed_at": "2022-10-09T12:55:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\ntrying to disable openapi completely. setting required config produce errors.\r\n\r\n\r\n**Code snippet**\r\n```python\r\nfrom sanic import Request, Sanic\r\nfrom sanic_ext import render\r\nfrom sanic_ext.extensions.templating.render import TemplateResponse\r\n\r\napp = Sanic(\"App\")\r\n\r\napp.config['OAS_UI_REDOC'] = False\r\napp.config['OAS_UI_SWAGGER'] = False\r\n\r\n\r\n@app.get(\"/\")\r\n@app.ext.template(\"index.html\")\r\nasync def index(_: Request) -> TemplateResponse:\r\n    return await render(context={\"seq\": [\"five\", \"six\"]}, status=400)\r\n\r\n```\r\n\r\n\r\n**Expected behavior**\r\n_No Error. OpenAPI is disabled._\r\n\r\n\r\n\r\n**Actualbehavior**\r\n```\r\n.\r\n.\r\n.\r\n  File \"...site-packages\\sanic\\app.py\", line 585, in url_for\r\n    raise URLBuildError(\r\nsanic.exceptions.URLBuildError: Endpoint with name `openapi.index` was not found\r\nsys:1: RuntimeWarning: coroutine 'BaseEventLoop.create_server' was never awaited\r\nRuntimeWarning: Enable tracemalloc to get the object allocation traceback\r\n```\r\n\r\n\r\n**Environment:**\r\n```\r\n[2022-10-09 13:46:33 +0600] [13280] [INFO] Sanic v22.9.0\r\n[2022-10-09 13:46:33 +0600] [13280] [INFO] Goin' Fast @ http://127.0.0.1:8000\r\n[2022-10-09 13:46:33 +0600] [13280] [INFO] mode: production, single worker\r\n[2022-10-09 13:46:33 +0600] [13280] [INFO] server: sanic, HTTP/1.1\r\n[2022-10-09 13:46:33 +0600] [13280] [INFO] python: 3.10.5\r\n[2022-10-09 13:46:33 +0600] [13280] [INFO] platform: Windows-10-10.0.19044-SP0\r\n[2022-10-09 13:46:33 +0600] [13280] [INFO] packages: sanic-routing==22.8.0, sanic-ext==22.9.0\r\n```\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2561/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2558", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2558/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2558/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2558/events", "html_url": "https://github.com/sanic-org/sanic/issues/2558", "id": 1393531302, "node_id": "I_kwDOA49B_s5TD5mm", "number": 2558, "title": "AttributeError: 'NoneType' object has no attribute 'share' when using the async server", "user": {"login": "jangxx", "id": 2213088, "node_id": "MDQ6VXNlcjIyMTMwODg=", "avatar_url": "https://avatars.githubusercontent.com/u/2213088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jangxx", "html_url": "https://github.com/jangxx", "followers_url": "https://api.github.com/users/jangxx/followers", "following_url": "https://api.github.com/users/jangxx/following{/other_user}", "gists_url": "https://api.github.com/users/jangxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/jangxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jangxx/subscriptions", "organizations_url": "https://api.github.com/users/jangxx/orgs", "repos_url": "https://api.github.com/users/jangxx/repos", "events_url": "https://api.github.com/users/jangxx/events{/privacy}", "received_events_url": "https://api.github.com/users/jangxx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1366213001, "node_id": "MDU6TGFiZWwxMzY2MjEzMDAx", "url": "https://api.github.com/repos/sanic-org/sanic/labels/windows", "name": "windows", "color": "1c74b2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-10-01T19:56:23Z", "updated_at": "2022-12-18T13:04:12Z", "closed_at": "2022-12-18T13:04:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI'm trying to run a slightly modified version of https://github.com/sanic-org/sanic/blob/main/examples/run_async.py, where I switched `uvloop.new_event_loop()` for the builtin `asyncio.new_event_loop()`. This works in Sanic 22.6.2, but breaks in 22.9.0 with the following error message\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\<path>\\sanic_test.py\", line 28, in <module>\r\n    asyncio.run(main())\r\n  File \"C:\\Python310\\lib\\asyncio\\runners.py\", line 44, in run\r\n    return loop.run_until_complete(main)\r\n  File \"C:\\Python310\\lib\\asyncio\\base_events.py\", line 646, in run_until_complete\r\n    return future.result()\r\n  File \"\"C:\\<path>\\sanic_test.py\", line 15, in main\r\n    server = await app.create_server(\r\n  File \"\"C:\\<path>\\venv\\lib\\site-packages\\sanic\\mixins\\startup.py\", line 450, in create_server    return await serve(\r\n  File \"\"C:\\<path>\\venv\\lib\\site-packages\\sanic\\server\\runners.py\", line 106, in serve        \r\n    return _serve_http_1(\r\n  File \"\"C:\\<path>\\venv\\lib\\site-packages\\sanic\\server\\runners.py\", line 205, in _serve_http_1    sock = sock.share(pid)\r\nAttributeError: 'NoneType' object has no attribute 'share'\r\n```\r\n\r\n**Code snippet**\r\nhttps://github.com/sanic-org/sanic/blob/main/examples/run_async.py with `uvloop.new_event_loop()` replaced with `asyncio.new_event_loop()`.\r\n\r\n**Expected behavior**\r\nThe server starts.\r\n\r\n**Environment (please complete the following information):**\r\n<!-- Please provide the information below. Instead, you can copy and paste the message that Sanic shows on startup. If you do, please remember to format it with ``` -->\r\n```\r\n  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n  \u2502                        Sanic v22.9.0                        \u2502\r\n  \u2502               Goin' Fast @ http://0.0.0.0:8000              \u2502\r\n  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n  \u2502                       \u2502     mode: production, single worker \u2502\r\n  \u2502     \u2584\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588 \u2588\u2588     \u2502   server: sanic, HTTP/1.1           \u2502\r\n  \u2502    \u2588\u2588                 \u2502   python: 3.10.4                    \u2502\r\n  \u2502     \u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2584     \u2502 platform: Windows-10-10.0.19043-SP0 \u2502\r\n  \u2502                 \u2588\u2588    \u2502 packages: sanic-routing==22.8.0     \u2502\r\n  \u2502    \u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580     \u2502                                     \u2502\r\n  \u2502                       \u2502                                     \u2502\r\n  \u2502 Build Fast. Run Fast. \u2502                                     \u2502\r\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2558/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2557", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2557/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2557/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2557/events", "html_url": "https://github.com/sanic-org/sanic/issues/2557", "id": 1392485699, "node_id": "I_kwDOA49B_s5S_6VD", "number": 2557, "title": "Triggering a worker reload does not take the code change into consideration", "user": {"login": "cnicodeme", "id": 317142, "node_id": "MDQ6VXNlcjMxNzE0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/317142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cnicodeme", "html_url": "https://github.com/cnicodeme", "followers_url": "https://api.github.com/users/cnicodeme/followers", "following_url": "https://api.github.com/users/cnicodeme/following{/other_user}", "gists_url": "https://api.github.com/users/cnicodeme/gists{/gist_id}", "starred_url": "https://api.github.com/users/cnicodeme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cnicodeme/subscriptions", "organizations_url": "https://api.github.com/users/cnicodeme/orgs", "repos_url": "https://api.github.com/users/cnicodeme/repos", "events_url": "https://api.github.com/users/cnicodeme/events{/privacy}", "received_events_url": "https://api.github.com/users/cnicodeme/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2022-09-30T13:57:12Z", "updated_at": "2023-01-04T16:23:28Z", "closed_at": "2022-10-10T12:53:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nChanging the code - like the response returned by a view - should be updated when the Sanic instance is reloaded (triggered either via the CLI `--trigger-reload` or via `app.m.restart(\"__ALL_PROCESSES__\")`.\r\n\r\nRight now, it doesn't seems to be the case\r\n\r\n\r\n**Code snippet**\r\n```\r\nfrom sanic import Sanic\r\nfrom sanic.response import text\r\n\r\napp = Sanic('Test')\r\n\r\n@app.get('/reload')\r\nasync def re(request):\r\n    request.app.m.restart(\"__ALL_PROCESSES__\")\r\n    return text('Restart triggered')\r\n\r\n@app.get('/')\r\nasync def index(request):\r\n    return text('Hello world')\r\n\r\nif __name__ == '__main__':\r\n    app.run(host='127.0.0.1', port=1337, access_log=True, debug=True)\r\n```\r\n\r\n\r\n**Expected behavior**\r\n\r\n1. Run the above code\r\n2. Go to \"http://127.0.0.1:1337/\"\r\n3. See the data : \"Hello world\"\r\n4. Change the code and replace \"Hello world\" by something else\r\n5. Go to \"http://127.0.0.1:1337/reload\"\r\n6. The console shows that the server was restarted\r\n7. Go back to \"http://127.0.0.1:1337/\"\r\n8. The text displayed is still \"Hello world\", not the new one.\r\n\r\n(Restarting the server via the command line `sanic --trigger-reload app:app` has the same behavior.\r\n\r\n\r\n**Environment (please complete the following information):**\r\n - Sanic Version: 22.9.0\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2557/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2547", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2547/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2547/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2547/events", "html_url": "https://github.com/sanic-org/sanic/issues/2547", "id": 1374131597, "node_id": "I_kwDOA49B_s5R55WN", "number": 2547, "title": "Run normally under macos, run error report on Ubuntu.", "user": {"login": "jiayouzl", "id": 7685337, "node_id": "MDQ6VXNlcjc2ODUzMzc=", "avatar_url": "https://avatars.githubusercontent.com/u/7685337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiayouzl", "html_url": "https://github.com/jiayouzl", "followers_url": "https://api.github.com/users/jiayouzl/followers", "following_url": "https://api.github.com/users/jiayouzl/following{/other_user}", "gists_url": "https://api.github.com/users/jiayouzl/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiayouzl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiayouzl/subscriptions", "organizations_url": "https://api.github.com/users/jiayouzl/orgs", "repos_url": "https://api.github.com/users/jiayouzl/repos", "events_url": "https://api.github.com/users/jiayouzl/events{/privacy}", "received_events_url": "https://api.github.com/users/jiayouzl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-09-15T08:23:50Z", "updated_at": "2022-09-15T08:27:43Z", "closed_at": "2022-09-15T08:27:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n@app.get('/admin/card_info/')\r\n@app.ext.template('card_info.html')\r\nasync def card_info(request: Request):\r\n    page = 1 if (request.args.get('page') is None) else int(request.args.get('page'))\r\n    card_info = verify.get_card(page, 20)\r\n    home_page = 1\r\n    previous_page = 1 if (page - 1 == 0) else page - 1\r\n    next_page = card_info['all_page'] if (page + 1 > card_info['all_page']) else page + 1\r\n    end_page = card_info['all_page']\r\n    return {'title': '\u5145\u503c\u5361\u7ba1\u7406', 'card_data': card_info['data'], 'page': [home_page, previous_page, next_page, end_page]}\r\n```\r\n\r\nRun normally under macos, run error report on Ubuntu.\r\n```\r\n(venv) ubuntu@VM-4-7-ubuntu:/www/wwwroot/test_python$ python3 app.py \r\nTraceback (most recent call last):\r\n  File \"/www/wwwroot/test_python/app.py\", line 123, in <module>\r\n    @app.ext.template('card_info.html')\r\n  File \"/www/wwwroot/test_python/venv/lib/python3.9/site-packages/sanic_ext/bootstrap.py\", line 154, in template\r\n    return self.templating.template(template_name, **kwargs)\r\nAttributeError: 'Extend' object has no attribute 'templating'\r\n```\r\n\r\n`AttributeError: 'Extend' object has no attribute 'templating'`", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2547/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2538", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2538/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2538/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2538/events", "html_url": "https://github.com/sanic-org/sanic/issues/2538", "id": 1355605416, "node_id": "I_kwDOA49B_s5QzOWo", "number": 2538, "title": "Sanic enables writing of DeprecationWarning to the log", "user": {"login": "azimovMichael", "id": 11870748, "node_id": "MDQ6VXNlcjExODcwNzQ4", "avatar_url": "https://avatars.githubusercontent.com/u/11870748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azimovMichael", "html_url": "https://github.com/azimovMichael", "followers_url": "https://api.github.com/users/azimovMichael/followers", "following_url": "https://api.github.com/users/azimovMichael/following{/other_user}", "gists_url": "https://api.github.com/users/azimovMichael/gists{/gist_id}", "starred_url": "https://api.github.com/users/azimovMichael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azimovMichael/subscriptions", "organizations_url": "https://api.github.com/users/azimovMichael/orgs", "repos_url": "https://api.github.com/users/azimovMichael/repos", "events_url": "https://api.github.com/users/azimovMichael/events{/privacy}", "received_events_url": "https://api.github.com/users/azimovMichael/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2022-08-30T11:21:53Z", "updated_at": "2022-09-18T15:54:36Z", "closed_at": "2022-09-18T15:54:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nSanic changes the default DeprecationWarning behaviour to be written to the log.\r\nThe code line that cause it is in app.py line 104:\r\n`filterwarnings(\"once\", category=DeprecationWarning)`\r\n\r\nThis change makes all of the DeprecationWarning, *in every 3rd party library* we use, to be written to the log.\r\n\r\n\r\n**Expected behavior**\r\nI would expect that this will not happen in production \ud83d\ude05 \r\n\r\n\r\n**Environment (please complete the following information):**\r\n<!-- Please provide the information below. Instead, you can copy and paste the message that Sanic shows on startup. If you do, please remember to format it with ``` -->\r\n - OS: ubuntu & macOS\r\n - Sanic Version: 22.6\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2538/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 1, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2538/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2520", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2520/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2520/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2520/events", "html_url": "https://github.com/sanic-org/sanic/issues/2520", "id": 1331100202, "node_id": "I_kwDOA49B_s5PVvoq", "number": 2520, "title": "uvicorn (ASGI?) unable to run sanic application", "user": {"login": "paulgessinger", "id": 1058585, "node_id": "MDQ6VXNlcjEwNTg1ODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1058585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulgessinger", "html_url": "https://github.com/paulgessinger", "followers_url": "https://api.github.com/users/paulgessinger/followers", "following_url": "https://api.github.com/users/paulgessinger/following{/other_user}", "gists_url": "https://api.github.com/users/paulgessinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulgessinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulgessinger/subscriptions", "organizations_url": "https://api.github.com/users/paulgessinger/orgs", "repos_url": "https://api.github.com/users/paulgessinger/repos", "events_url": "https://api.github.com/users/paulgessinger/events{/privacy}", "received_events_url": "https://api.github.com/users/paulgessinger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-08-07T19:19:48Z", "updated_at": "2022-08-11T07:00:36Z", "closed_at": "2022-08-11T07:00:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nSanic used to work behind uvicorn (ASGI). Now I can't get it to work\r\n\r\n\r\n**Code snippet**\r\n\r\n```python\r\n# test_app.py\r\nfrom sanic import Sanic, response\r\n\r\n\r\napp = Sanic(name=\"test\")\r\n\r\n\r\n@app.get(\"/\")\r\nasync def index(request):\r\n    return response.text(\"ok\")\r\n```\r\n\r\n```console\r\n$ uvicorn test_app:app\r\n```\r\n\r\nuvicorn+sanic then launches with:\r\n\r\n```\r\nINFO:     ASGI 'lifespan' protocol appears unsupported.\r\nINFO:     Application startup complete.\r\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\r\n```\r\nbut on first request there's a 500 like:\r\n\r\n```Traceback (most recent call last):\r\n  File \"/home/pagessin/dev/sentinel/.venv/lib/python3.10/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 401, in run_asgi\r\n    result = await app(self.scope, self.receive, self.send)\r\n  File \"/home/pagessin/dev/sentinel/.venv/lib/python3.10/site-packages/uvicorn/middleware/proxy_headers.py\", line 78, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"/home/pagessin/dev/sentinel/.venv/lib/python3.10/site-packages/sanic/app.py\", line 1297, in __call__\r\n    self._asgi_app = await ASGIApp.create(self, scope, receive, send)\r\n  File \"/home/pagessin/dev/sentinel/.venv/lib/python3.10/site-packages/sanic/asgi.py\", line 167, in create\r\n    await sanic_app.dispatch(\r\n  File \"/home/pagessin/dev/sentinel/.venv/lib/python3.10/site-packages/sanic/signals.py\", line 193, in dispatch\r\n    return await dispatch\r\n  File \"/home/pagessin/dev/sentinel/.venv/lib/python3.10/site-packages/sanic/signals.py\", line 131, in _dispatch\r\n    group, handlers, params = self.get(event, condition=condition)\r\n  File \"/home/pagessin/dev/sentinel/.venv/lib/python3.10/site-packages/sanic/signals.py\", line 93, in get\r\n    group, param_basket = self.find_route(\r\nTypeError: 'NoneType' object is not callable\r\nINFO:     127.0.0.1:33318 - \"GET /status HTTP/1.1\" 500 Internal Server Error\r\n```\r\n\r\n\r\n**Expected behavior**\r\nSanic is able to respond to HTTP requests via ASGI.\r\n\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Ubuntu 20.04\r\n - `sanic==22.6.1`\r\n - `uvicorn==0.18.2`\r\n\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2520/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2477", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2477/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2477/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2477/events", "html_url": "https://github.com/sanic-org/sanic/issues/2477", "id": 1267892773, "node_id": "I_kwDOA49B_s5LkoIl", "number": 2477, "title": "Sanic static directory fails when folder name ends with \"..\"", "user": {"login": "ekzhang", "id": 7550632, "node_id": "MDQ6VXNlcjc1NTA2MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/7550632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ekzhang", "html_url": "https://github.com/ekzhang", "followers_url": "https://api.github.com/users/ekzhang/followers", "following_url": "https://api.github.com/users/ekzhang/following{/other_user}", "gists_url": "https://api.github.com/users/ekzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ekzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ekzhang/subscriptions", "organizations_url": "https://api.github.com/users/ekzhang/orgs", "repos_url": "https://api.github.com/users/ekzhang/repos", "events_url": "https://api.github.com/users/ekzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/ekzhang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-06-10T18:45:37Z", "updated_at": "2022-11-06T19:18:43Z", "closed_at": "2022-11-06T19:17:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nWhen serving a static file named `a../b.txt` with `app.static()`, the Sanic request handler gives a 400 status code instead of 200.\r\n\r\n**Code snippet**\r\n\r\nFirst file is called `main.py`.\r\n\r\n```python\r\nfrom sanic import Sanic\r\n\r\napp = Sanic(name=\"sanic_test\")\r\n\r\napp.static('/static', './static_files')\r\n\r\nif __name__ == \"__main__\":\r\n    app.run(host=\"0.0.0.0\", port=8000)\r\n```\r\n\r\nThen, make the file in question:\r\n\r\n```\r\nmkdir -p static_files/a../\r\ncat \"hello world\" > static_files/a../b.txt\r\n```\r\n\r\nAnd run the server with `python main.py`, followed by a GET request.\r\n\r\n```sh-session\r\n$ curl http://localhost:8000/static/a../b.txt\r\n\u26a0\ufe0f 400 \u2014 Bad Request\r\n====================\r\nInvalid URL\r\n\r\n```\r\n\r\n\r\n**Expected behavior**\r\n\r\nThe `app.static()` handler should serve the `b.txt` file with a 200 response code.\r\n\r\n\r\n**Environment (please complete the following information):**\r\n - OS: macOS and Linux\r\n - Version 22.3.0\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2477/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2462", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2462/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2462/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2462/events", "html_url": "https://github.com/sanic-org/sanic/issues/2462", "id": 1245062104, "node_id": "I_kwDOA49B_s5KNiPY", "number": 2462, "title": "Websocket disconnection and server task pending error", "user": {"login": "jrayu", "id": 37897165, "node_id": "MDQ6VXNlcjM3ODk3MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/37897165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrayu", "html_url": "https://github.com/jrayu", "followers_url": "https://api.github.com/users/jrayu/followers", "following_url": "https://api.github.com/users/jrayu/following{/other_user}", "gists_url": "https://api.github.com/users/jrayu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrayu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrayu/subscriptions", "organizations_url": "https://api.github.com/users/jrayu/orgs", "repos_url": "https://api.github.com/users/jrayu/repos", "events_url": "https://api.github.com/users/jrayu/events{/privacy}", "received_events_url": "https://api.github.com/users/jrayu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-05-23T12:06:46Z", "updated_at": "2022-05-23T22:55:24Z", "closed_at": "2022-05-23T19:47:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI am a complete newbie trying to use sanic with websocket. I was following the tutorial of websockets in sanic document, and by the time I disconnected the websocket connection I found this in the console.\r\n```\r\n[2022-05-23 19:43:15 +0800] [14879] [ERROR] Exception occurred while handling uri: 'ws://10.215.220.4:4017/test/'\r\nTraceback (most recent call last):\r\n  File \"/home/yuzixin/workspace/sanicserver/venv/lib/python3.7/site-packages/sanic/app.py\", line 994, in _websocket_handler\r\n    await fut\r\nconcurrent.futures._base.CancelledError\r\n```\r\nfollowed by this error message when the server was shut down.\r\n```\r\nTask was destroyed but it is pending!\r\ntask: <Task pending coro=<WebsocketFrameAssembler.get() done, defined at /home/yuzixin/workspace/sanicserver/venv/lib/python3.7/site-packages/sanic/server/websockets/frame.py:91> wait_for=<Future pending cb=[<TaskWakeupMethWrapper object at 0x7ff6e9bafa98>()]> cb=[_wait.<locals>._on_completion() at /usr/lib/python3.7/asyncio/tasks.py:440]>\r\n```\r\nSo I checked the lines where error was triggered and found this at sanic/app.py line 993~999:\r\n```python\r\n        try:\r\n            await fut\r\n        except Exception as e:\r\n            self.error_handler.log(request, e)\r\n        except (CancelledError, ConnectionClosed):\r\n            cancelled = True\r\n        finally:\r\n...\r\n```\r\nIt seemed like the CancelledError exception would never be reached.\r\nI tried switching the two exceptions and it all worked fine. Wondering if the modification is correct, or the order of the exceptions were just meant to be.\r\n\r\n**Code snippet**\r\n```python\r\nfrom sanic import Sanic\r\n\r\napp = Sanic(\"MyHelloWorldApp\")\r\n\r\n\r\n@app.websocket(\"/test\")\r\nasync def handler(request, ws):\r\n    while True:\r\n        message = await ws.recv()\r\n        await ws.send(message)\r\n```\r\n\r\n\r\n**Expected behavior**\r\nExpected no errors at disconnect behavior.\r\n\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Debian\r\n - Version 10\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2462/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2450", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2450/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2450/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2450/events", "html_url": "https://github.com/sanic-org/sanic/issues/2450", "id": 1228903328, "node_id": "I_kwDOA49B_s5JP5Og", "number": 2450, "title": "Error Handler mismatch warning", "user": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1813838238, "node_id": "MDU6TGFiZWwxODEzODM4MjM4", "url": "https://api.github.com/repos/sanic-org/sanic/labels/release-needed", "name": "release-needed", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-05-08T14:32:17Z", "updated_at": "2022-05-11T06:36:05Z", "closed_at": "2022-05-11T06:36:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The warning for error handler mismatch is triggering on v22.3 accidentally when setting `FALLBACK_ERROR_FORMAT`.\r\n\r\n```python\r\napp.config.FALLBACK_ERROR_FORMAT = \"text\"\r\n\r\n\r\n@app.get(\"/\")\r\nasync def handler(request: Request):\r\n    1 / 0\r\n```\r\n\r\nThis can be resolved as follows:\r\n\r\n```python\r\n    @classmethod\r\n    def _get_fallback_value(cls, error_handler: ErrorHandler, config: Config):\r\n        if error_handler._fallback is not _default:\r\n            if config._FALLBACK_ERROR_FORMAT == error_handler._fallback:  # <<<<< This line needs this change\r\n                return error_handler.fallback\r\n\r\n            error_logger.warning(\r\n                \"Conflicting error fallback values were found in the \"\r\n                \"error handler and in the app.config while handling an \"\r\n                \"exception. Using the value from app.config.\"\r\n            )\r\n        return config.FALLBACK_ERROR_FORMAT\r\n```\r\n\r\nhttps://github.com/sanic-org/sanic/blob/5d683c6ea4b615e80c51d80189436437b824cce6/sanic/handlers.py#L79", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2450/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2427", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2427/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2427/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2427/events", "html_url": "https://github.com/sanic-org/sanic/issues/2427", "id": 1199008282, "node_id": "I_kwDOA49B_s5Hd2oa", "number": 2427, "title": "request.form uses urllib.parse_qs which does not persist blank values by default when requests submit application/x-www-form-urlencoded data", "user": {"login": "pobk", "id": 923392, "node_id": "MDQ6VXNlcjkyMzM5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/923392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pobk", "html_url": "https://github.com/pobk", "followers_url": "https://api.github.com/users/pobk/followers", "following_url": "https://api.github.com/users/pobk/following{/other_user}", "gists_url": "https://api.github.com/users/pobk/gists{/gist_id}", "starred_url": "https://api.github.com/users/pobk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pobk/subscriptions", "organizations_url": "https://api.github.com/users/pobk/orgs", "repos_url": "https://api.github.com/users/pobk/repos", "events_url": "https://api.github.com/users/pobk/events{/privacy}", "received_events_url": "https://api.github.com/users/pobk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sjsadowski", "id": 857480, "node_id": "MDQ6VXNlcjg1NzQ4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/857480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjsadowski", "html_url": "https://github.com/sjsadowski", "followers_url": "https://api.github.com/users/sjsadowski/followers", "following_url": "https://api.github.com/users/sjsadowski/following{/other_user}", "gists_url": "https://api.github.com/users/sjsadowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjsadowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjsadowski/subscriptions", "organizations_url": "https://api.github.com/users/sjsadowski/orgs", "repos_url": "https://api.github.com/users/sjsadowski/repos", "events_url": "https://api.github.com/users/sjsadowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sjsadowski/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sjsadowski", "id": 857480, "node_id": "MDQ6VXNlcjg1NzQ4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/857480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjsadowski", "html_url": "https://github.com/sjsadowski", "followers_url": "https://api.github.com/users/sjsadowski/followers", "following_url": "https://api.github.com/users/sjsadowski/following{/other_user}", "gists_url": "https://api.github.com/users/sjsadowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjsadowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjsadowski/subscriptions", "organizations_url": "https://api.github.com/users/sjsadowski/orgs", "repos_url": "https://api.github.com/users/sjsadowski/repos", "events_url": "https://api.github.com/users/sjsadowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sjsadowski/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/sanic-org/sanic/milestones/24", "html_url": "https://github.com/sanic-org/sanic/milestone/24", "labels_url": "https://api.github.com/repos/sanic-org/sanic/milestones/24/labels", "id": 7799840, "node_id": "MI_kwDOA49B_s4AdwQg", "number": 24, "title": "v22.6", "description": null, "creator": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2022-03-24T13:48:38Z", "updated_at": "2022-07-13T07:11:05Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2022-04-10T12:14:39Z", "updated_at": "2022-04-24T20:01:35Z", "closed_at": "2022-04-24T20:01:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nThis seems to be an acknowledged limitation of parse_qs, but I'm raising as a bug as this introduces undesired behaviour rather than adding new features.\r\n\r\nWhile `request.get_args` and and `request.get_query_args` accept the `keep_blank_values` argument in order to persist blanks, `request.form` does not provide an interface to persist blank values.\r\n\r\nMy assertion is that a framework should not remove data simply because it doesn't have a value.\r\n\r\nRelevant anecdote: Twilio webhooks submit a POST request using `application/x-www-form-urlencoded` encoded body. The body includes all values including some potentially blank/empty values.\r\n\r\nWhen the request is processed by Sanic, it is decoded using `urllib.parse_qs` and does not have a mechanism to allow blank elements to persist. This results in missing elements from the request when accessing the variables from `request.form`.\r\n\r\nIn my case, the elements from the submission are relevant to generate a signature for request validation (see https://www.twilio.com/docs/usage/security). The signature is constructed using SHA1 hash of the submitted request key/value pairs and missing pairs generates a different signature to that expected.\r\n\r\nIn this instance, I have been receiving requests which include two elements that, depending on the hook, may or may not have a value.\r\n\r\n**Expected behavior**\r\nAll variables, irrespective of existence of a value should be passed to the application.\r\n\r\n\r\n**Environment (please complete the following information):**\r\n - Version v22.3.0", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2427/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2422", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2422/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2422/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2422/events", "html_url": "https://github.com/sanic-org/sanic/issues/2422", "id": 1191734423, "node_id": "I_kwDOA49B_s5HCGyX", "number": 2422, "title": "Windows: no running event loop as of 22.3.0", "user": {"login": "jamesstidard", "id": 1797906, "node_id": "MDQ6VXNlcjE3OTc5MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1797906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesstidard", "html_url": "https://github.com/jamesstidard", "followers_url": "https://api.github.com/users/jamesstidard/followers", "following_url": "https://api.github.com/users/jamesstidard/following{/other_user}", "gists_url": "https://api.github.com/users/jamesstidard/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesstidard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesstidard/subscriptions", "organizations_url": "https://api.github.com/users/jamesstidard/orgs", "repos_url": "https://api.github.com/users/jamesstidard/repos", "events_url": "https://api.github.com/users/jamesstidard/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesstidard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1813838238, "node_id": "MDU6TGFiZWwxODEzODM4MjM4", "url": "https://api.github.com/repos/sanic-org/sanic/labels/release-needed", "name": "release-needed", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2022-04-04T12:46:11Z", "updated_at": "2022-04-20T01:27:13Z", "closed_at": "2022-04-17T09:25:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nHey, heads up, after updating to `22.3.0` a sanic server no longer starts on my Windows machine. Instead raises a `RuntimeError: no running event loop`. Seen this on two separate Windows machines so far.\r\n\r\n\r\n**Code snippet**\r\n```python\r\n# main.py\r\nimport sanic\r\n\r\napp = sanic.Sanic(\"foo\")\r\n\r\n@app.get(\"/bar\")\r\nasync def _(request):\r\n    return sanic.response.text(\"buzz\")\r\n\r\napp.run(host=\"127.0.0.1\", port=1337, access_log=False)\r\n```\r\n\r\n```console\r\n$ pipenv run python main.py\r\n[2022-04-04 13:33:34 +0100] [14080] [INFO] \r\n  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n  \u2502                        Sanic v22.3.0                        \u2502\r\n  \u2502               Goin' Fast @ http://0.0.0.0:1337              \u2502\r\n  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n  \u2502                       \u2502     mode: production, single worker \u2502\r\n  \u2502     \u2584\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588 \u2588\u2588     \u2502   server: sanic                     \u2502\r\n  \u2502    \u2588\u2588                 \u2502   python: 3.9.2                     \u2502\r\n  \u2502     \u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2584     \u2502 platform: Windows-10-10.0.22000-SP0 \u2502\r\n  \u2502                 \u2588\u2588    \u2502 packages: sanic-routing==22.3.0     \u2502\r\n  \u2502    \u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580     \u2502                                     \u2502\r\n  \u2502                       \u2502                                     \u2502\r\n  \u2502 Build Fast. Run Fast. \u2502                                     \u2502\r\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n[2022-04-04 13:33:34 +0100] [14080] [WARNING] Sanic is running in PRODUCTION mode. Consider using '--debug' or '--dev' while actively developing your application.\r\n[2022-04-04 13:33:34 +0100] [14080] [ERROR] Experienced exception while trying to serve\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\mixins\\runner.py\", line 578, in serve\r\n    serve_single(primary_server_info.settings)\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\server\\runners.py\", line 206, in serve_single\r\n    serve(**server_settings)\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\server\\runners.py\", line 146, in serve\r\n    ctrlc_workaround_for_windows(app)\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\compat.py\", line 91, in ctrlc_workaround_for_windows\r\n    app.add_task(stay_active)\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\app.py\", line 1217, in add_task\r\n    loop = self.loop  # Will raise SanicError if loop is not started\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\app.py\", line 255, in loop\r\n    return get_running_loop()\r\nRuntimeError: no running event loop\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\James\\Desktop\\test\\main.py\", line 9, in <module>\r\n    app.run(host='0.0.0.0', port=1337, access_log=False)\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\mixins\\runner.py\", line 145, in run\r\n    self.class.serve(primary=self)  # type: ignore\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\mixins\\runner.py\", line 578, in serve\r\n[2022-04-04 13:40:57 +0100] [22748] [WARNING] Sanic is running in PRODUCTION mode. Consider using '--debug' or '--dev' while actively developing your application.\r\n[2022-04-04 13:40:57 +0100] [22748] [ERROR] Experienced exception while trying to serve\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\mixins\\runner.py\", line 578, in serve\r\n    serve_single(primary_server_info.settings)\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\server\\runners.py\", line 206, in serve_single\r\n    serve(**server_settings)\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\server\\runners.py\", line 146, in serve\r\n    ctrlc_workaround_for_windows(app)\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\compat.py\", line 91, in ctrlc_workaround_for_windows\r\n    app.add_task(stay_active)\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\app.py\", line 1217, in add_task\r\n    loop = self.loop  # Will raise SanicError if loop is not started\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\app.py\", line 255, in loop\r\n    return get_running_loop()\r\nRuntimeError: no running event loop\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\James\\Desktop\\test\\main.py\", line 9, in <module>\r\n    app.run(port=1337, access_log=False)\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\mixins\\runner.py\", line 145, in run\r\n    self.class.serve(primary=self)  # type: ignore\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\mixins\\runner.py\", line 578, in serve\r\n    serve_single(primary_server_info.settings)\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\server\\runners.py\", line 206, in serve_single\r\n    serve(**server_settings)\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\server\\runners.py\", line 146, in serve\r\n    ctrlc_workaround_for_windows(app)\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\compat.py\", line 91, in ctrlc_workaround_for_windows\r\n    app.add_task(stay_active)\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\app.py\", line 1217, in add_task\r\n    loop = self.loop  # Will raise SanicError if loop is not started\r\n  File \"C:\\Users\\James\\.virtualenvs\\test-lP8LJtvX\\lib\\site-packages\\sanic\\app.py\", line 255, in loop\r\n    return get_running_loop()\r\nRuntimeError: no running event loop\r\n```\r\n\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Windows 11 Pro\r\n - Version 10.0.22000 build 22000\r\n - Python: 3.9.2", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2422/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2288", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2288/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2288/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2288/events", "html_url": "https://github.com/sanic-org/sanic/issues/2288", "id": 1034766312, "node_id": "I_kwDOA49B_s49rUfo", "number": 2288, "title": "`no-ext` tests pass even when they have errors", "user": {"login": "prryplatypus", "id": 25409753, "node_id": "MDQ6VXNlcjI1NDA5NzUz", "avatar_url": "https://avatars.githubusercontent.com/u/25409753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prryplatypus", "html_url": "https://github.com/prryplatypus", "followers_url": "https://api.github.com/users/prryplatypus/followers", "following_url": "https://api.github.com/users/prryplatypus/following{/other_user}", "gists_url": "https://api.github.com/users/prryplatypus/gists{/gist_id}", "starred_url": "https://api.github.com/users/prryplatypus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prryplatypus/subscriptions", "organizations_url": "https://api.github.com/users/prryplatypus/orgs", "repos_url": "https://api.github.com/users/prryplatypus/repos", "events_url": "https://api.github.com/users/prryplatypus/events{/privacy}", "received_events_url": "https://api.github.com/users/prryplatypus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 464612041, "node_id": "MDU6TGFiZWw0NjQ2MTIwNDE=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/necessary", "name": "necessary", "color": "fbca04", "default": false, "description": null}, {"id": 2862487559, "node_id": "MDU6TGFiZWwyODYyNDg3NTU5", "url": "https://api.github.com/repos/sanic-org/sanic/labels/unit-test", "name": "unit-test", "color": "207C63", "default": false, "description": "Task Items related to Unit Tests"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-10-25T07:15:46Z", "updated_at": "2021-10-27T08:55:35Z", "closed_at": "2021-10-27T08:55:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\nGH actions tests which use `no-ext` Python versions always pass, regardless of whether they have errors or not.\r\n\r\n\r\n**Expected behavior**\r\nTests only pass if they do not have any errors. Otherwise they should fail.\r\n\r\n\r\n**Additional context**\r\nThis has been observed in GitHub actions. Unsure of whether this is an issue with their config or not. Haven't tried reproducing locally.\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2288/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2284", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2284/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2284/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2284/events", "html_url": "https://github.com/sanic-org/sanic/issues/2284", "id": 1034401261, "node_id": "I_kwDOA49B_s49p7Xt", "number": 2284, "title": "Goin' Fast URL IPv6 address is not bracketed", "user": {"login": "Tronic", "id": 98187, "node_id": "MDQ6VXNlcjk4MTg3", "avatar_url": "https://avatars.githubusercontent.com/u/98187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tronic", "html_url": "https://github.com/Tronic", "followers_url": "https://api.github.com/users/Tronic/followers", "following_url": "https://api.github.com/users/Tronic/following{/other_user}", "gists_url": "https://api.github.com/users/Tronic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tronic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tronic/subscriptions", "organizations_url": "https://api.github.com/users/Tronic/orgs", "repos_url": "https://api.github.com/users/Tronic/repos", "events_url": "https://api.github.com/users/Tronic/events{/privacy}", "received_events_url": "https://api.github.com/users/Tronic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 464611475, "node_id": "MDU6TGFiZWw0NjQ2MTE0NzU=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/beginner", "name": "beginner", "color": "c2e0c6", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-10-24T12:16:59Z", "updated_at": "2021-10-24T16:14:01Z", "closed_at": "2021-10-24T16:14:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Sanic says:\r\n```\r\nsanic myprogram.app -H ::\r\nGoin' Fast @ http://:::8000\r\n```\r\n\r\nThe correct formatting for IPv6 would be:\r\n```\r\nGoin' Fast @ http://[::]:8000\r\n```\r\n\r\nFixing the Goin' fast banner in `sanic/app.py` would be an easy enough task for someone wishing to start hacking Sanic. Existing code from `sanic/models/server_types.py` class `ConnInfo` could be useful, as there already is handling for adding brackets to IPv6 addresses.\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2284/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2276", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2276/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2276/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2276/events", "html_url": "https://github.com/sanic-org/sanic/issues/2276", "id": 1028214225, "node_id": "I_kwDOA49B_s49SU3R", "number": 2276, "title": "``FALLBACK_ERROR_FORMAT`` cannot be set even when the ``update_config`` function is called because the ``ErrorHandler`` object receives the default value of the config and is initialized.", "user": {"login": "SaidBySolo", "id": 33891531, "node_id": "MDQ6VXNlcjMzODkxNTMx", "avatar_url": "https://avatars.githubusercontent.com/u/33891531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SaidBySolo", "html_url": "https://github.com/SaidBySolo", "followers_url": "https://api.github.com/users/SaidBySolo/followers", "following_url": "https://api.github.com/users/SaidBySolo/following{/other_user}", "gists_url": "https://api.github.com/users/SaidBySolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/SaidBySolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SaidBySolo/subscriptions", "organizations_url": "https://api.github.com/users/SaidBySolo/orgs", "repos_url": "https://api.github.com/users/SaidBySolo/repos", "events_url": "https://api.github.com/users/SaidBySolo/events{/privacy}", "received_events_url": "https://api.github.com/users/SaidBySolo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-10-17T04:36:27Z", "updated_at": "2021-11-16T11:07:34Z", "closed_at": "2021-11-16T11:07:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nhttps://github.com/sanic-org/sanic/blob/3262878ebd41aa2230ef15d4475bbcf223b2356b/sanic/app.py#L139-L184\r\n\r\nReferring to the code above, since the config is set when the Sanic object is initialized, you cannot pass a fallback value to the ErrorHandler even if you set ``config.update_config`` or ``app.config.FALLBACK_ERROR_FORMAT = \"json\"``.\r\n\r\nTo solve this, you can pass the config argument when initializing the Sanic app, but this doesn't seem to be intended.\r\n\r\n**Code snippet**\r\n```py\r\napp = Sanic(__name__)\r\n\r\n@app.main_process_start\r\nasync def start(app, loop):\r\n    app.config.FALLBACK_ERROR_FORMAT = \"json\"\r\n```\r\n\r\n**Expected behavior**\r\nEven if you use ``config.update_config`` or ``app.config.FALLBACK_ERROR_FORMAT = \"json\"``, the error handler should normally receive this value.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: [Windows 10]\r\n - Version [21.9.1]\r\n\r\n\r\n**Additional context**\r\n\r\nI wanted to open a PR on this issue, but I'm not sure where to touch.\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2276/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2268", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2268/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2268/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2268/events", "html_url": "https://github.com/sanic-org/sanic/pull/2268", "id": 1017096596, "node_id": "PR_kwDOA49B_s4svFg8", "number": 2268, "title": "Make HTTP connections start in IDLE stage, avoiding delays and error messages", "user": {"login": "Tronic", "id": 98187, "node_id": "MDQ6VXNlcjk4MTg3", "avatar_url": "https://avatars.githubusercontent.com/u/98187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tronic", "html_url": "https://github.com/Tronic", "followers_url": "https://api.github.com/users/Tronic/followers", "following_url": "https://api.github.com/users/Tronic/following{/other_user}", "gists_url": "https://api.github.com/users/Tronic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tronic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tronic/subscriptions", "organizations_url": "https://api.github.com/users/Tronic/orgs", "repos_url": "https://api.github.com/users/Tronic/repos", "events_url": "https://api.github.com/users/Tronic/events{/privacy}", "received_events_url": "https://api.github.com/users/Tronic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 464612041, "node_id": "MDU6TGFiZWw0NjQ2MTIwNDE=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/necessary", "name": "necessary", "color": "fbca04", "default": false, "description": null}, {"id": 1256929793, "node_id": "MDU6TGFiZWwxMjU2OTI5Nzkz", "url": "https://api.github.com/repos/sanic-org/sanic/labels/needs%20review", "name": "needs review", "color": "4fd648", "default": false, "description": "the PR appears ready but requires a review"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2021-10-06T00:06:46Z", "updated_at": "2022-08-11T06:59:21Z", "closed_at": "2021-11-16T21:03:28Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/sanic-org/sanic/pulls/2268", "html_url": "https://github.com/sanic-org/sanic/pull/2268", "diff_url": "https://github.com/sanic-org/sanic/pull/2268.diff", "patch_url": "https://github.com/sanic-org/sanic/pull/2268.patch", "merged_at": "2021-11-16T21:03:27Z"}, "body": "Change new connections to start in IDLE stage, and switch to REQUEST stage only once any bytes are received from client. This makes new connections without any request obey keepalive timeout rather than request timeout like they did before. New connections where no request was ever done also no longer print access log entries or crash with exception trying to do so. Such connections are now immediately disconnected during graceful shutdown, avoiding server shutdown and restart delay when it actually is idle. This was affecting at least some Chrome users.\r\n\r\nKeep-alive timeout is the primary control for disconnecting clients that are taking too long to make a request. Request timeout only governs the receiving of the request header, starting of its first packet, and thus has very little significance for normal clients where this is always instantaneous.\r\n\r\nFixes #2249\r\nFixes #2289", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2268/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2210", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2210/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2210/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2210/events", "html_url": "https://github.com/sanic-org/sanic/issues/2210", "id": 958082844, "node_id": "MDU6SXNzdWU5NTgwODI4NDQ=", "number": 2210, "title": "In ASGI mod, the response turns into 500 server error.", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1813838238, "node_id": "MDU6TGFiZWwxODEzODM4MjM4", "url": "https://api.github.com/repos/sanic-org/sanic/labels/release-needed", "name": "release-needed", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-08-02T12:15:27Z", "updated_at": "2021-08-02T16:12:12Z", "closed_at": "2021-08-02T16:12:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "In ASGI mod, if request middleware raises an exception and meanwhile there is an error in fetching handler from router part as well, server response turns into 500 server error. \r\n\r\n**app.py**\r\n```python\r\nfrom sanic import Request, Sanic\r\nfrom sanic.exceptions import Forbidden\r\nfrom sanic.response import text\r\n\r\napp = Sanic(\"My Hello, world app\")\r\n\r\n\r\n@app.get(\"/\")\r\nasync def hello_world(request):\r\n    return text(\"Hello, world.\")\r\n\r\n\r\n@app.middleware\r\nasync def request_middleware(request: Request) -> None:\r\n    if \"Authorization\" not in request.headers:\r\n        raise Forbidden(message=\"Authorization header not found\")\r\n```\r\n```bash\r\n>>> uvicorn app:app\r\nINFO:     Started server process [227205]\r\nINFO:     Waiting for application startup.\r\nINFO:     Application startup complete.\r\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\r\nERROR:    Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"/home/cansarigol/Documents/sanic-demo/venv/lib/python3.8/site-packages/sanic_routing/router.py\", line 79, in resolve\r\n    route, param_basket = self.find_route(\r\n  File \"\", line 9, in find_route\r\nsanic_routing.exceptions.NotFound: Not Found\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/cansarigol/Documents/sanic-demo/venv/lib/python3.8/site-packages/sanic/router.py\", line 33, in _get\r\n    return self.resolve(\r\n  File \"/home/cansarigol/Documents/sanic-demo/venv/lib/python3.8/site-packages/sanic_routing/router.py\", line 96, in resolve\r\n    raise self.exception(str(e), path=path)\r\nsanic_routing.exceptions.NotFound: Not Found\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/cansarigol/Documents/sanic-demo/venv/lib/python3.8/site-packages/sanic/app.py\", line 723, in handle_request\r\n    route, handler, kwargs = self.router.get(\r\n  File \"/home/cansarigol/Documents/sanic-demo/venv/lib/python3.8/site-packages/sanic/router.py\", line 61, in get\r\n    return self._get(path, method, host)\r\n  File \"/home/cansarigol/Documents/sanic-demo/venv/lib/python3.8/site-packages/sanic/router.py\", line 39, in _get\r\n    raise NotFound(\"Requested URL {} not found\".format(e.path))\r\nsanic.exceptions.NotFound: Requested URL /wrong not found\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/cansarigol/Documents/sanic-demo/venv/lib/python3.8/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 371, in run_asgi\r\n    result = await app(self.scope, self.receive, self.send)\r\n  File \"/home/cansarigol/Documents/sanic-demo/venv/lib/python3.8/site-packages/uvicorn/middleware/proxy_headers.py\", line 59, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"/home/cansarigol/Documents/sanic-demo/venv/lib/python3.8/site-packages/sanic/app.py\", line 1276, in __call__\r\n    await asgi_app()\r\n  File \"/home/cansarigol/Documents/sanic-demo/venv/lib/python3.8/site-packages/sanic/asgi.py\", line 210, in __call__\r\n    await self.sanic_app.handle_request(self.request)\r\n  File \"/home/cansarigol/Documents/sanic-demo/venv/lib/python3.8/site-packages/sanic/app.py\", line 791, in handle_request\r\n    await self.handle_exception(request, e)\r\n  File \"/home/cansarigol/Documents/sanic-demo/venv/lib/python3.8/site-packages/sanic/app.py\", line 667, in handle_exception\r\n    response = await self._run_request_middleware(\r\n  File \"/home/cansarigol/Documents/sanic-demo/venv/lib/python3.8/site-packages/sanic/app.py\", line 1116, in _run_request_middleware\r\n    response = await response\r\n  File \"/home/cansarigol/Documents/sanic-demo/./app.py\", line 16, in request_middleware\r\n    raise Forbidden(message=\"Authorization header not found\")\r\nsanic.exceptions.Forbidden: Authorization header not found\r\nINFO:     127.0.0.1:52662 - \"GET /wrong HTTP/1.1\" 500 Internal Server Error\r\n```\r\n\r\n**Expected behavior**\r\nit should have been 403 (the same approach as WSGI).\r\n\r\n**Environment (please complete the following information):**\r\n - OS: ubuntu 20.04\r\n - Version\r\n        python = \"3.8\"\r\n        sanic = \"21.6.1\"\r\n        uvicorn = \"0.14.0\"\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2210/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2210/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2201", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2201/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2201/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2201/events", "html_url": "https://github.com/sanic-org/sanic/pull/2201", "id": 947478286, "node_id": "MDExOlB1bGxSZXF1ZXN0NjkyNDUzNjY3", "number": 2201, "title": "Fix issues with after request handling in HTTP pipelining", "user": {"login": "Tronic", "id": 98187, "node_id": "MDQ6VXNlcjk4MTg3", "avatar_url": "https://avatars.githubusercontent.com/u/98187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tronic", "html_url": "https://github.com/Tronic", "followers_url": "https://api.github.com/users/Tronic/followers", "following_url": "https://api.github.com/users/Tronic/following{/other_user}", "gists_url": "https://api.github.com/users/Tronic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tronic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tronic/subscriptions", "organizations_url": "https://api.github.com/users/Tronic/orgs", "repos_url": "https://api.github.com/users/Tronic/repos", "events_url": "https://api.github.com/users/Tronic/events{/privacy}", "received_events_url": "https://api.github.com/users/Tronic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-07-19T09:54:20Z", "updated_at": "2022-08-11T06:59:20Z", "closed_at": "2021-07-28T08:38:28Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/sanic-org/sanic/pulls/2201", "html_url": "https://github.com/sanic-org/sanic/pull/2201", "diff_url": "https://github.com/sanic-org/sanic/pull/2201.diff", "patch_url": "https://github.com/sanic-org/sanic/pull/2201.patch", "merged_at": "2021-07-28T08:38:28Z"}, "body": "Clean up after a request is complete, before the next pipelined request.", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2201/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2183", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2183/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2183/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2183/events", "html_url": "https://github.com/sanic-org/sanic/pull/2183", "id": 937381148, "node_id": "MDExOlB1bGxSZXF1ZXN0NjgzOTQ3MTkw", "number": 2183, "title": "Manually reset the buffer when streaming request body", "user": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2021-07-05T21:52:21Z", "updated_at": "2022-08-11T06:59:19Z", "closed_at": "2021-07-06T05:24:21Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/sanic-org/sanic/pulls/2183", "html_url": "https://github.com/sanic-org/sanic/pull/2183", "diff_url": "https://github.com/sanic-org/sanic/pull/2183.diff", "patch_url": "https://github.com/sanic-org/sanic/pull/2183.patch", "merged_at": "2021-07-06T05:24:20Z"}, "body": "Resolves #2182 ", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2183/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2182", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2182/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2182/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2182/events", "html_url": "https://github.com/sanic-org/sanic/issues/2182", "id": 937380713, "node_id": "MDU6SXNzdWU5MzczODA3MTM=", "number": 2182, "title": "Request streaming results in a phantom 503", "user": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-07-05T21:50:49Z", "updated_at": "2021-07-28T08:57:59Z", "closed_at": "2021-07-28T08:57:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When streaming a request body, you end up with a phantom 503 response. To the client, everything looks fine. The data is transmitted, and a response received OK.\r\n\r\n```\r\n[2021-07-05 22:45:47 +0300] - (sanic.access)[INFO][127.0.0.1:34264]: POST http://localhost:9999/upload  201 4\r\n[2021-07-05 22:45:47 +0300] - (sanic.access)[INFO][127.0.0.1:34264]: POST http://localhost:9999/upload  503 666\r\n[2021-07-05 22:45:47 +0300] [686804] [ERROR] Connection lost before response written @ ('127.0.0.1', 34264) <Request: POST /upload>\r\n```\r\n\r\nBut, there is an extra 503 that is caused by a task cancel while waiting on `receive_more`. This appears to be caused by leaving one extra CRLF in the buffer.", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2182/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2181", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2181/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2181/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2181/events", "html_url": "https://github.com/sanic-org/sanic/pull/2181", "id": 937370541, "node_id": "MDExOlB1bGxSZXF1ZXN0NjgzOTM4NTkz", "number": 2181, "title": "Resolve regressions in exceptions", "user": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-07-05T21:20:19Z", "updated_at": "2022-08-11T06:59:18Z", "closed_at": "2021-07-11T21:35:28Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/sanic-org/sanic/pulls/2181", "html_url": "https://github.com/sanic-org/sanic/pull/2181", "diff_url": "https://github.com/sanic-org/sanic/pull/2181.diff", "patch_url": "https://github.com/sanic-org/sanic/pull/2181.patch", "merged_at": "2021-07-11T21:35:28Z"}, "body": "Resolve #2177 \r\n\r\nWhen we merged #2077, the default `quiet` attribute was not being set properly. This restores quiet to the pre-2077 values.\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2181/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2181/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2177", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2177/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2177/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2177/events", "html_url": "https://github.com/sanic-org/sanic/issues/2177", "id": 934429537, "node_id": "MDU6SXNzdWU5MzQ0Mjk1Mzc=", "number": 2177, "title": "asyncio.exceptions.CancelledError On Windows OS", "user": {"login": "ChihweiLHBird", "id": 43905414, "node_id": "MDQ6VXNlcjQzOTA1NDE0", "avatar_url": "https://avatars.githubusercontent.com/u/43905414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChihweiLHBird", "html_url": "https://github.com/ChihweiLHBird", "followers_url": "https://api.github.com/users/ChihweiLHBird/followers", "following_url": "https://api.github.com/users/ChihweiLHBird/following{/other_user}", "gists_url": "https://api.github.com/users/ChihweiLHBird/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChihweiLHBird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChihweiLHBird/subscriptions", "organizations_url": "https://api.github.com/users/ChihweiLHBird/orgs", "repos_url": "https://api.github.com/users/ChihweiLHBird/repos", "events_url": "https://api.github.com/users/ChihweiLHBird/events{/privacy}", "received_events_url": "https://api.github.com/users/ChihweiLHBird/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1813838238, "node_id": "MDU6TGFiZWwxODEzODM4MjM4", "url": "https://api.github.com/repos/sanic-org/sanic/labels/release-needed", "name": "release-needed", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2021-07-01T05:56:21Z", "updated_at": "2021-07-11T21:35:28Z", "closed_at": "2021-07-11T21:35:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following exception raised when running the hello world example on Windows with Microsoft store version of Python 3.9.\r\n\r\nWSL2 environment does not reproduce the issue.\r\n\r\n```\r\nfrom sanic import Sanic\r\nfrom sanic.response import json\r\n\r\napp = Sanic(\"My Hello, world app\")\r\n\r\n@app.route('/')\r\nasync def test(request):\r\n    return json({'hello': 'world'})\r\n\r\nif __name__ == '__main__':\r\n    app.run()\r\n```\r\n\r\n```\r\n[2021-06-30 23:00:05 -0700] [12184] [INFO] Goin' Fast @ http://127.0.0.1:8000\r\n[2021-06-30 23:00:06 -0700] [12184] [INFO] Starting worker [12184]\r\n[2021-06-30 23:00:11 -0700] - (sanic.access)[INFO][127.0.0.1:53159]: GET http://127.0.0.1:8000/  200 17\r\n[2021-06-30 23:01:11 -0700] [12184] [ERROR] Exception occurred while handling uri: 'http:///*'\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\zhiwe\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\sanic\\http.py\", line 126, in http1\r\n    await self.http1_request_header()\r\n  File \"C:\\Users\\zhiwe\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\sanic\\http.py\", line 188, in http1_request_header      \r\n    await self._receive_more()\r\n  File \"C:\\Users\\zhiwe\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\sanic\\server.py\", line 222, in receive_more\r\n    await self._data_received.wait()\r\n  File \"C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_3.9.1776.0_x64__qbz5n2kfra8p0\\lib\\asyncio\\locks.py\", line 226, in wait\r\n    await fut\r\nasyncio.exceptions.CancelledError\r\n[2021-06-30 23:01:11 -0700] - (sanic.access)[INFO][UNKNOWN]: NONE http:///*  408 664\r\n```", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2177/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2138", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2138/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2138/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2138/events", "html_url": "https://github.com/sanic-org/sanic/issues/2138", "id": 895451765, "node_id": "MDU6SXNzdWU4OTU0NTE3NjU=", "number": 2138, "title": "Some routes are not available in some conditions because of find_routes_src code", "user": {"login": "ZeJ0hn", "id": 38920448, "node_id": "MDQ6VXNlcjM4OTIwNDQ4", "avatar_url": "https://avatars.githubusercontent.com/u/38920448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZeJ0hn", "html_url": "https://github.com/ZeJ0hn", "followers_url": "https://api.github.com/users/ZeJ0hn/followers", "following_url": "https://api.github.com/users/ZeJ0hn/following{/other_user}", "gists_url": "https://api.github.com/users/ZeJ0hn/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZeJ0hn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZeJ0hn/subscriptions", "organizations_url": "https://api.github.com/users/ZeJ0hn/orgs", "repos_url": "https://api.github.com/users/ZeJ0hn/repos", "events_url": "https://api.github.com/users/ZeJ0hn/events{/privacy}", "received_events_url": "https://api.github.com/users/ZeJ0hn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 464641209, "node_id": "MDU6TGFiZWw0NjQ2NDEyMDk=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/needs%20investigation", "name": "needs investigation", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2021-05-19T13:32:30Z", "updated_at": "2021-07-23T11:56:21Z", "closed_at": "2021-07-23T11:56:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nIn some cases, routers don't support routes correctly registered. If one of other route is removed, it works.\r\nI find that the code of `find_routes_src` seems not correctly generated in the code snippet.\r\n\r\nIn the snippet code, the route `/<example:string>/users` doesn't work and return a 404 error, but if any other method is commented (`/<example:string>/documents`, `/<example:string>/search/image`, etc), the route works.\r\n\r\n**Code snippet**\r\nMain module:\r\n```\r\nfrom sanic import Sanic\r\nfrom sanic.response import text\r\n\r\napp = Sanic('Test')\r\n\r\n\r\n@app.get(\"/<example:string>/search/document\")\r\nasync def request_document(request, example):\r\n    return text(\"search-document\")\r\n\r\n\r\n@app.get(\"/<example:string>/search/text\")\r\nasync def request_text(request, example):\r\n    return text(\"search-text\")\r\n\r\n\r\n@app.get(\"/<example:string>/search/image\")\r\nasync def request_image(request, example):\r\n    return text(\"search-image\")\r\n\r\n\r\n@app.get(\"/<example:string>/users\")\r\nasync def get_users(request, example):\r\n    return text(\"users\")\r\n\r\n\r\n@app.put(\"/<example:string>/users/add\")\r\nasync def add_user_to_corpus(request, example):\r\n    return text(\"users-add\")\r\n\r\n\r\n@app.delete(\"/<example:string>/users/remove\")\r\nasync def remove_user_to_corpus(request, example):\r\n    return text(\"users-remove\")\r\n\r\n\r\n@app.post(\"/<example:string>/documents\")\r\nasync def get_documents(request, example):\r\n    return text(\"documents\")\r\n\r\nif __name__ == \"__main__\":  # pragma: no cover\r\n    app.run(host='0.0.0.0', port=5000, debug=False, access_log=False)\r\n\r\n```\r\n\r\nTest module (for pytest):\r\n```\r\nimport main\r\n\r\n\r\nclass TestClass:\r\n\r\n    @staticmethod\r\n    def test_get_users() -> None:\r\n        _, response = main.app.test_client.get(\"/example/users\")\r\n\r\n        assert response.status == 200\r\n\r\n        print(response.text)\r\n```\r\n\r\n**Expected behavior**\r\nThe route works in all cases.\r\n\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Mac OS 11.3\r\n - Version : 21.3.4\r\n\r\nWorks fine in 20.12.3\r\n\r\n**Additionnal Information**\r\nIn the case which doesn't work, the generated code of find_routes_src is:\r\n```\r\n{ ... }\r\nelif parts[1] == \"users\":\r\n    if num > 2:\r\n        if parts[2] == \"add\" and num == 3:\r\n            if num == 3:\r\n                try:\r\n                    basket['__params__']['example'] = str(basket[0])\r\n                except (ValueError, KeyError):\r\n                    pass\r\n                else:\r\n                    return router.dynamic_routes[('<example:string>', 'users', 'add')][0], basket\r\n        elif parts[2] == \"remove\" and num == 3:\r\n            if num > 3:\r\n                raise NotFound\r\n            try:\r\n                basket['__params__']['example'] = str(basket[0])\r\n            except (ValueError, KeyError):\r\n                pass\r\n            else:\r\n                return router.dynamic_routes[('<example:string>', 'users', 'remove')][0], basket\r\n        try:\r\n            basket['__params__']['example'] = str(basket[0])\r\n        except (ValueError, KeyError):\r\n            pass\r\n        else:\r\n            return router.dynamic_routes[('<example:string>', 'users')][0], basket\r\n{ ... }\r\n```\r\nIt's impossible to go in the final line because in this case, `num` equals 2 and not greater.\r\nSo route `/<example:string>/users` is unreachable.\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2138/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2116", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2116/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2116/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2116/events", "html_url": "https://github.com/sanic-org/sanic/issues/2116", "id": 860529343, "node_id": "MDU6SXNzdWU4NjA1MjkzNDM=", "number": 2116, "title": "Access logs not properly displaying body size", "user": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2021-04-17T22:45:01Z", "updated_at": "2021-04-19T21:53:42Z", "closed_at": "2021-04-19T21:53:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In certain circumstances, the access logger is displaying the wrong body size.\r\n\r\n```python\r\n@app.post(\"/\")\r\nasync def post(request):\r\n    print(request.json)\r\n```\r\n```\r\n$ curl localhost:9999 -d '{\"foo\": \"bar\"}\r\n```\r\n```\r\n{'foo': 'bar'}\r\n[2021-04-18 01:43:33 +0300] - (sanic.access)[INFO][127.0.0.1:52172]: POST http://localhost:9999/  200 -1\r\n```\r\n\r\nIn this example, it is being reported as `-1`", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2116/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2113", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2113/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2113/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2113/events", "html_url": "https://github.com/sanic-org/sanic/issues/2113", "id": 856374528, "node_id": "MDU6SXNzdWU4NTYzNzQ1Mjg=", "number": 2113, "title": "Reuse of blueprint groups causes duplicate route errors", "user": {"login": "jdraymon", "id": 2312736, "node_id": "MDQ6VXNlcjIzMTI3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/2312736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdraymon", "html_url": "https://github.com/jdraymon", "followers_url": "https://api.github.com/users/jdraymon/followers", "following_url": "https://api.github.com/users/jdraymon/following{/other_user}", "gists_url": "https://api.github.com/users/jdraymon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdraymon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdraymon/subscriptions", "organizations_url": "https://api.github.com/users/jdraymon/orgs", "repos_url": "https://api.github.com/users/jdraymon/repos", "events_url": "https://api.github.com/users/jdraymon/events{/privacy}", "received_events_url": "https://api.github.com/users/jdraymon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 2620207377, "node_id": "MDU6TGFiZWwyNjIwMjA3Mzc3", "url": "https://api.github.com/repos/sanic-org/sanic/labels/LTS", "name": "LTS", "color": "18D9EA", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/sanic-org/sanic/milestones/19", "html_url": "https://github.com/sanic-org/sanic/milestone/19", "labels_url": "https://api.github.com/repos/sanic-org/sanic/milestones/19/labels", "id": 6296055, "node_id": "MDk6TWlsZXN0b25lNjI5NjA1NQ==", "number": 19, "title": "v21.6", "description": null, "creator": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "open", "created_at": "2021-01-11T10:14:52Z", "updated_at": "2021-06-27T19:52:56Z", "due_on": null, "closed_at": null}, "comments": 7, "created_at": "2021-04-12T21:26:58Z", "updated_at": "2021-06-25T17:26:45Z", "closed_at": "2021-06-21T15:41:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nWhen adding a blueprint to multiple groups, the router seems to club `url_prefix`es together in an unexpected way, resulting in duplicate route errors.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/jraymond/Development/sanic-org/bugreport/bugreport/app.py\", line 26, in <module>\r\n    app.blueprint(new)\r\n  File \"/home/jraymond/Development/sanic-org/sanic/sanic/app.py\", line 407, in blueprint\r\n    self.blueprint(item, **options)\r\n  File \"/home/jraymond/Development/sanic-org/sanic/sanic/app.py\", line 423, in blueprint\r\n    blueprint.register(self, options)\r\n  File \"/home/jraymond/Development/sanic-org/sanic/sanic/blueprints.py\", line 227, in register\r\n    route = app._apply_route(apply_route)\r\n  File \"/home/jraymond/Development/sanic-org/sanic/sanic/app.py\", line 337, in _apply_route\r\n    routes = self.router.add(**params)\r\n  File \"/home/jraymond/Development/sanic-org/sanic/sanic/router.py\", line 128, in add\r\n    route = super().add(**params)  # type: ignore\r\n  File \"/home/jraymond/.local/lib/python3.9/site-packages/sanic_routing/router.py\", line 170, in add\r\n    route.add_handler(path, handler, method, requirements, overwrite)\r\n  File \"/home/jraymond/.local/lib/python3.9/site-packages/sanic_routing/route.py\", line 114, in add_handler\r\n    raise RouteExists(\r\nsanic_routing.exceptions.RouteExists: Route already registered: api/new/v1/api/v1/hello [GET]\r\n```\r\n\r\n**Code snippet**\r\nMinimal reproduction:\r\n```python\r\nfrom sanic import Blueprint, Sanic\r\nfrom sanic.response import text\r\n\r\n\r\nbp1 = Blueprint(\"bp1\", url_prefix=\"/hello\")\r\n\r\n\r\n@bp1.get(\"/\")\r\nasync def hello(_):\r\n    return text(\"hello\")\r\n\r\n\r\nbp2 = Blueprint(\"bp2\", url_prefix=\"/goodbye\")\r\n\r\n\r\n@bp2.get(\"/\")\r\nasync def goodbye(_):\r\n    return text(\"goodbye\")\r\n\r\n\r\nlegacy = Blueprint.group([bp1, bp2], url_prefix=\"/api/v1\")\r\nnew = Blueprint.group([bp1, bp2], url_prefix=\"/api/new/v1\")\r\n\r\napp = Sanic(\"bugreport\")\r\napp.blueprint(legacy)\r\napp.blueprint(new)\r\n\r\nif __name__ == \"__main__\":\r\n    app.run(host=\"0.0.0.0\", port=1234, debug=True)\r\n```\r\n\r\n**Expected behavior**\r\nBlueprint groups should be independent references to handlers:\r\n```\r\nGET: /api/thing/v1/hello => \"hello\"\r\nGET: /api/v1/hello => \"hello\"\r\n```\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Linux (Arch)\r\n - Python: 3.9\r\n - Version 21.3.2\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2113/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2106", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2106/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2106/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2106/events", "html_url": "https://github.com/sanic-org/sanic/issues/2106", "id": 854749483, "node_id": "MDU6SXNzdWU4NTQ3NDk0ODM=", "number": 2106, "title": "request.args.pop removes parameters inconsistently", "user": {"login": "artcg", "id": 952771, "node_id": "MDQ6VXNlcjk1Mjc3MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/952771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artcg", "html_url": "https://github.com/artcg", "followers_url": "https://api.github.com/users/artcg/followers", "following_url": "https://api.github.com/users/artcg/following{/other_user}", "gists_url": "https://api.github.com/users/artcg/gists{/gist_id}", "starred_url": "https://api.github.com/users/artcg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artcg/subscriptions", "organizations_url": "https://api.github.com/users/artcg/orgs", "repos_url": "https://api.github.com/users/artcg/repos", "events_url": "https://api.github.com/users/artcg/events{/privacy}", "received_events_url": "https://api.github.com/users/artcg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-04-09T18:11:12Z", "updated_at": "2021-04-10T22:04:33Z", "closed_at": "2021-04-10T22:04:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Environment : 20.12.3, presumably other environments too\r\n\r\n\r\nCode to reproduce:\r\n\r\nsend this request to this app\r\n`GET http://localhost:8000/?hello=a&world=4`\r\n```python\r\nfrom sanic import Sanic\r\n\r\n\r\napp = Sanic('test')\r\n\r\n@app.get('/')\r\ndef _(request):\r\n    a = request.args.pop('hello')\r\n    b = request.args.pop('world')\r\n    c = request.args.pop('world')\r\n    d = request.args.pop('world')   << crashes here\r\n\r\napp.run()\r\n```\r\n\r\nExpected:\r\ncrashes at line second call of .pop('world'), or not at all", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2106/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2103", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2103/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2103/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2103/events", "html_url": "https://github.com/sanic-org/sanic/issues/2103", "id": 851808523, "node_id": "MDU6SXNzdWU4NTE4MDg1MjM=", "number": 2103, "title": "Request body is not automatically loaded", "user": {"login": "Tronic", "id": 98187, "node_id": "MDQ6VXNlcjk4MTg3", "avatar_url": "https://avatars.githubusercontent.com/u/98187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tronic", "html_url": "https://github.com/Tronic", "followers_url": "https://api.github.com/users/Tronic/followers", "following_url": "https://api.github.com/users/Tronic/following{/other_user}", "gists_url": "https://api.github.com/users/Tronic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tronic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tronic/subscriptions", "organizations_url": "https://api.github.com/users/Tronic/orgs", "repos_url": "https://api.github.com/users/Tronic/repos", "events_url": "https://api.github.com/users/Tronic/events{/privacy}", "received_events_url": "https://api.github.com/users/Tronic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2021-04-06T21:03:04Z", "updated_at": "2021-04-19T21:53:43Z", "closed_at": "2021-04-19T21:53:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I had to manually call `req.receive_body()` to have `req.body` and others filled in, in a *non-streaming* handler. Isn't `streaming=False` still the default? Let me know if I missed something obvious changed in 21.3, otherwise I'll debug more tomorrow.\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2103/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2101", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2101/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2101/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2101/events", "html_url": "https://github.com/sanic-org/sanic/issues/2101", "id": 851200952, "node_id": "MDU6SXNzdWU4NTEyMDA5NTI=", "number": 2101, "title": "ASGI routes with body not extracted from the request", "user": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-04-06T08:50:07Z", "updated_at": "2021-04-19T21:53:43Z", "closed_at": "2021-04-19T21:53:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[See source](https://github.com/sanic-org/sanic/blob/824f41d6e06006076725d7be0140ebb4381440ff/sanic/asgi.py#L169)\r\n\r\nThis bug only applies to ASGI when sending.\r\n\r\nWhen sending a body to a request on ASGI, the body is not making it through. I have not yet tested if this also applies with streaming requests.\r\n\r\nThe problem is here:\r\n\r\n```python\r\n    async def read(self) -> Optional[bytes]:\r\n        \"\"\"\r\n        Read and stream the body in chunks from an incoming ASGI message.\r\n        \"\"\"\r\n        message = await self.transport.receive()\r\n        if not message.get(\"more_body\", False):\r\n            self.request_body = False\r\n            return None         # <<<< we are not returning the body\r\n        return message.get(\"body\", b\"\")\r\n```\r\n\r\nIf a small message comes through that has not hit this `read()` more than once (again, I am assuming that a streaming request might actually work), the message will look like this:\r\n\r\n```python\r\nmessage = await self.transport.receive()\r\n# message={'type': 'http.request', 'body': b'{\"foo\": \"bar\"}', 'more_body': False}\r\n```\r\n\r\nTherefore, we need to return the `body` even if `more_body` is `False` (and also properly set `self.request_body`.\r\n\r\nMore testing is needed", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2101/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2101/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2078", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2078/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2078/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2078/events", "html_url": "https://github.com/sanic-org/sanic/issues/2078", "id": 837202351, "node_id": "MDU6SXNzdWU4MzcyMDIzNTE=", "number": 2078, "title": "websocket disconnect  every minute and raise 503 error.", "user": {"login": "xkungfu", "id": 26067653, "node_id": "MDQ6VXNlcjI2MDY3NjUz", "avatar_url": "https://avatars.githubusercontent.com/u/26067653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xkungfu", "html_url": "https://github.com/xkungfu", "followers_url": "https://api.github.com/users/xkungfu/followers", "following_url": "https://api.github.com/users/xkungfu/following{/other_user}", "gists_url": "https://api.github.com/users/xkungfu/gists{/gist_id}", "starred_url": "https://api.github.com/users/xkungfu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xkungfu/subscriptions", "organizations_url": "https://api.github.com/users/xkungfu/orgs", "repos_url": "https://api.github.com/users/xkungfu/repos", "events_url": "https://api.github.com/users/xkungfu/events{/privacy}", "received_events_url": "https://api.github.com/users/xkungfu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2021-03-21T22:45:02Z", "updated_at": "2021-03-22T23:20:17Z", "closed_at": "2021-03-22T23:20:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nfrom client, every 25 seconds send a \"ping\",\r\non server side, when received \"ping\", send a \"pong\".\r\n\r\non client side, after sent a \"ping\", wait 15 seconds, if not receive \"pong\", then reconnect.\r\n\r\nwebsocket disconnect  about every minute.\r\n\r\n**Code snippet**\r\nserver.py:\r\n```python\r\nfrom sanic import Sanic\r\napp = Sanic(\"websocket_example\")\r\n@app.websocket('/wsserver')\r\nasync def feed(request, ws):\r\n    while True:\r\n        data = 'pong'\r\n        print('Sending: ' + data)\r\n        await ws.send(data)\r\n        data = await ws.recv()\r\n        print('Received: ' + data)\r\nif __name__ == \"__main__\":\r\n    app.run(host=\"0.0.0.0\", port=8001)\r\n\r\n```\r\n\r\n**Expected behavior**\r\nkeep connection!\r\n\r\n**Environment (please complete the following information):**\r\n - OS: ubuntu20.04\r\n - Version : sanic 21.3.1\r\n\r\n\r\n**Additional context**\r\non server side log:\r\n```\r\n[2021-03-22 06:28:15 +0800] [3380798] [INFO] Goin' Fast @ http://0.0.0.0:8001\r\n[2021-03-22 06:28:15 +0800] [3380798] [INFO] Starting worker [3380798]\r\nSending: pong\r\nReceived: ping\r\nSending: pong\r\nReceived: ping\r\nSending: pong\r\nReceived: ping\r\nSending: pong\r\n[2021-03-22 06:29:35 +0800] - (sanic.access)[INFO][42.185.74.69:34866]: GET ws://42.3.27.246/wsserver  503 -1\r\nSending: pong\r\nReceived: ping\r\nSending: pong\r\nReceived: ping\r\nSending: pong\r\nReceived: ping\r\nSending: pong\r\n[2021-03-22 06:30:52 +0800] - (sanic.access)[INFO][42.185.74.69:34911]: GET ws://42.3.27.246/wsserver  503 -1\r\nSending: pong\r\nReceived: ping\r\nSending: pong\r\nReceived: ping\r\nSending: pong\r\nReceived: ping\r\nSending: pong\r\n[2021-03-22 06:32:09 +0800] - (sanic.access)[INFO][42.185.74.69:35021]: GET ws://42.3.27.246/wsserver  503 -1\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2078/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2075", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2075/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2075/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2075/events", "html_url": "https://github.com/sanic-org/sanic/issues/2075", "id": 837047552, "node_id": "MDU6SXNzdWU4MzcwNDc1NTI=", "number": 2075, "title": "Static files inside subfolders are not accessible (404)", "user": {"login": "mikekeda", "id": 4765088, "node_id": "MDQ6VXNlcjQ3NjUwODg=", "avatar_url": "https://avatars.githubusercontent.com/u/4765088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikekeda", "html_url": "https://github.com/mikekeda", "followers_url": "https://api.github.com/users/mikekeda/followers", "following_url": "https://api.github.com/users/mikekeda/following{/other_user}", "gists_url": "https://api.github.com/users/mikekeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikekeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikekeda/subscriptions", "organizations_url": "https://api.github.com/users/mikekeda/orgs", "repos_url": "https://api.github.com/users/mikekeda/repos", "events_url": "https://api.github.com/users/mikekeda/events{/privacy}", "received_events_url": "https://api.github.com/users/mikekeda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2021-03-21T11:10:07Z", "updated_at": "2021-03-21T13:03:55Z", "closed_at": "2021-03-21T13:03:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nAfter upgrading from 20.12.3 to 21.3.0 I'm getting 404 for all my static files (those files are located inside subfolders), example:\r\nGET http://127.0.0.1:8000/static/node_modules/jquery/dist/jquery.min.js 404\r\n\r\nbut static files that are located directly inside static folder are accessible, example:\r\nGET http://127.0.0.1:8000/static/package.json 200\r\n\r\n**Code snippet**\r\nI added static in this way (it was working fine for Sanic <= 20.12.3):\r\n`app.static(\"/static\", \"./static\")`\r\n\r\nI'm assuming the problem is in this line:\r\n`uri += \"/<__file_uri__>\"`\r\nhttps://github.com/sanic-org/sanic/blob/master/sanic/mixins/routes.py#L779\r\nlooks like there is no place for subfolders\r\n\r\n**Expected behavior**\r\nI expect static files inside subfolders to accessible.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: MacOS 11.2.3\r\n - Version 21.3.0 \r\n - Python 3.9.0\r\n\r\n**Additional context**\r\nThis is a problem only for local environment, for prod static files are not served by Sanic\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2075/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2070", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/2070/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/2070/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/2070/events", "html_url": "https://github.com/sanic-org/sanic/issues/2070", "id": 836473694, "node_id": "MDU6SXNzdWU4MzY0NzM2OTQ=", "number": 2070, "title": "Sanic WebSockets not working in ASGI mode with daphne as a server", "user": {"login": "sim1234", "id": 601730, "node_id": "MDQ6VXNlcjYwMTczMA==", "avatar_url": "https://avatars.githubusercontent.com/u/601730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sim1234", "html_url": "https://github.com/sim1234", "followers_url": "https://api.github.com/users/sim1234/followers", "following_url": "https://api.github.com/users/sim1234/following{/other_user}", "gists_url": "https://api.github.com/users/sim1234/gists{/gist_id}", "starred_url": "https://api.github.com/users/sim1234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sim1234/subscriptions", "organizations_url": "https://api.github.com/users/sim1234/orgs", "repos_url": "https://api.github.com/users/sim1234/repos", "events_url": "https://api.github.com/users/sim1234/events{/privacy}", "received_events_url": "https://api.github.com/users/sim1234/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 2107585562, "node_id": "MDU6TGFiZWwyMTA3NTg1NTYy", "url": "https://api.github.com/repos/sanic-org/sanic/labels/breaking", "name": "breaking", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2021-03-19T23:27:41Z", "updated_at": "2021-06-21T11:39:07Z", "closed_at": "2021-06-21T11:39:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sanic WebSockets not working in ASGI mode with daphne as a server\r\n\r\nBackend code:\r\n```\r\nfrom sanic import Sanic\r\n\r\napp = Sanic(\"bug\")\r\n\r\n\r\n@app.websocket(\"/ws/\")\r\nasync def handler(request, ws):\r\n    await ws.accept()\r\n    while True:\r\n        data = \"Hello\"\r\n        print(\"Sending:\", data)\r\n        await ws.send(data)\r\n        data = await ws.recv()\r\n        print(\"Received: \", data)\r\n\r\n```\r\nRan with `daphne -e tcp:80:interface=0.0.0.0 bug:app`\r\n\r\nFrontend code:\r\n```\r\nsocket = new WebSocket(\"ws://localhost:80/ws/\", []);\r\n\r\nsocket.onopen = function(e) {\r\n  console.log(\"Sending to server\");\r\n  socket.send(\"My name is John\");\r\n};\r\n\r\nsocket.onmessage = function(event) {\r\n  console.log(`[message] Data received from server: ${event.data}`);\r\n};\r\n\r\nsocket.onclose = function(event) {\r\n  if (event.wasClean) {\r\n    console.log(`[close] Connection closed cleanly, code=${event.code} reason=${event.reason}`);\r\n  } else {\r\n    // e.g. server process killed or network down\r\n    // event.code is usually 1006 in this case\r\n    console.log('[close] Connection died');\r\n  }\r\n};\r\n\r\nsocket.onerror = function(error) {\r\n  console.log(`[error] ${error.message}`);\r\n};\r\n\u0192 (error) {\r\n  console.log(`[error] ${error.message}`);\r\n}\r\n```\r\n\r\nExpected behavior is for the sockets to connect and exchange messages.\r\n\r\nObserved behavior is that the backend crashes with `AttributeError: 'WebSocketProtocol' object has no attribute 'handshake_deferred'`. \r\n\r\nRemoving the `await ws.accept()` line causes backend to crash with `ValueError: Socket has not been accepted, so cannot send over it`.\r\n\r\nSwitching the order of send and recv prevents the crash, but no messages are received nor sent.\r\n\r\nIn all cases frontend disconects with message `[close] Connection died`.\r\n\r\n\r\nOS: Win10\r\nsanic==20.12.2\r\ndaphne==3.0.1\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/2070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/2070/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1966", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1966/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1966/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1966/events", "html_url": "https://github.com/sanic-org/sanic/pull/1966", "id": 736628738, "node_id": "MDExOlB1bGxSZXF1ZXN0NTE1ODA4NDkz", "number": 1966, "title": "Backport #1965 to 19.12LTS", "user": {"login": "ashleysommer", "id": 402468, "node_id": "MDQ6VXNlcjQwMjQ2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/402468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashleysommer", "html_url": "https://github.com/ashleysommer", "followers_url": "https://api.github.com/users/ashleysommer/followers", "following_url": "https://api.github.com/users/ashleysommer/following{/other_user}", "gists_url": "https://api.github.com/users/ashleysommer/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashleysommer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashleysommer/subscriptions", "organizations_url": "https://api.github.com/users/ashleysommer/orgs", "repos_url": "https://api.github.com/users/ashleysommer/repos", "events_url": "https://api.github.com/users/ashleysommer/events{/privacy}", "received_events_url": "https://api.github.com/users/ashleysommer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 464611821, "node_id": "MDU6TGFiZWw0NjQ2MTE4MjE=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/urgent", "name": "urgent", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-11-05T05:37:39Z", "updated_at": "2022-08-11T06:59:15Z", "closed_at": "2020-11-05T07:31:02Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/sanic-org/sanic/pulls/1966", "html_url": "https://github.com/sanic-org/sanic/pull/1966", "diff_url": "https://github.com/sanic-org/sanic/pull/1966.diff", "patch_url": "https://github.com/sanic-org/sanic/pull/1966.patch", "merged_at": "2020-11-05T07:31:02Z"}, "body": "Backport #1965 to 19.12LTS\r\n\r\n**Fix Chunked Transport-Encoding in ASGI streaming response**\r\nIn ASGI-mode, don't do sanic-side response chunk encoding, leave that to the ASGI-response-transport\r\nDon't set content-length when using chunked-encoding in ASGI mode, this is incompatible with ASGI Chunked Transport-Encoding.\r\n\r\n(cherry picked from commit c0839afddea13501a3098f8e27e686a6a95a71ee)", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1966/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1966/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1965", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1965/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1965/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1965/events", "html_url": "https://github.com/sanic-org/sanic/pull/1965", "id": 736625420, "node_id": "MDExOlB1bGxSZXF1ZXN0NTE1ODA1NjQ4", "number": 1965, "title": "Fix Chunked Transport-Encoding in ASGI streaming response", "user": {"login": "ashleysommer", "id": 402468, "node_id": "MDQ6VXNlcjQwMjQ2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/402468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashleysommer", "html_url": "https://github.com/ashleysommer", "followers_url": "https://api.github.com/users/ashleysommer/followers", "following_url": "https://api.github.com/users/ashleysommer/following{/other_user}", "gists_url": "https://api.github.com/users/ashleysommer/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashleysommer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashleysommer/subscriptions", "organizations_url": "https://api.github.com/users/ashleysommer/orgs", "repos_url": "https://api.github.com/users/ashleysommer/repos", "events_url": "https://api.github.com/users/ashleysommer/events{/privacy}", "received_events_url": "https://api.github.com/users/ashleysommer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 464611821, "node_id": "MDU6TGFiZWw0NjQ2MTE4MjE=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/urgent", "name": "urgent", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-11-05T05:29:28Z", "updated_at": "2022-08-11T06:59:15Z", "closed_at": "2020-11-05T07:02:19Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/sanic-org/sanic/pulls/1965", "html_url": "https://github.com/sanic-org/sanic/pull/1965", "diff_url": "https://github.com/sanic-org/sanic/pull/1965.diff", "patch_url": "https://github.com/sanic-org/sanic/pull/1965.patch", "merged_at": "2020-11-05T07:02:19Z"}, "body": "In ASGI-mode, don't do sanic-side response chunk encoding, leave that to the ASGI-response-transport\r\nDon't set content-length when using chunked-encoding in ASGI mode, this is incompatible with ASGI Chunked Transport-Encoding.\r\nFixes #1964 ", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1965/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1938", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1938/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1938/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1938/events", "html_url": "https://github.com/sanic-org/sanic/issues/1938", "id": 710929695, "node_id": "MDU6SXNzdWU3MTA5Mjk2OTU=", "number": 1938, "title": "Windows Logging Python 3.8", "user": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 382692935, "node_id": "MDU6TGFiZWwzODI2OTI5MzU=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-09-29T09:26:34Z", "updated_at": "2020-09-30T12:35:41Z", "closed_at": "2020-09-30T12:35:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I have recently noticed [this error in appveryor builds](https://ci.appveyor.com/project/sjsadowski/sanic/builds/35454061/job/kiieujoex767uwna). Seems to be limited to Py38.\r\n\r\nIt is [this test in `tests/test_logging.py`](https://github.com/huge-success/sanic/blob/master/tests/test_logging.py#L129)\r\n\r\nCan someone with a Windows machine take a look at this?\r\n\r\n```\r\n_________________________________ test_logger _________________________________\r\ncaplog = <_pytest.logging.LogCaptureFixture object at 0x000000E28E0AE550>\r\n    def test_logger(caplog):\r\n        rand_string = str(uuid.uuid4())\r\n    \r\n        app = Sanic(name=__name__)\r\n    \r\n        @app.get(\"/\")\r\n        def log_info(request):\r\n            logger.info(rand_string)\r\n            return text(\"hello\")\r\n    \r\n        with caplog.at_level(logging.INFO):\r\n            request, response = app.test_client.get(\"/\")\r\n    \r\n        port = request.server_port\r\n    \r\n        # Note: testing with random port doesn't show the banner because it doesn't\r\n        # define host and port. This test supports both modes.\r\n        if caplog.record_tuples[0] == (\r\n            \"sanic.root\",\r\n            logging.INFO,\r\n            f\"Goin' Fast @ http://127.0.0.1:{port}\",\r\n        ):\r\n            caplog.record_tuples.pop(0)\r\n    \r\n>       assert caplog.record_tuples[0] == (\r\n            \"sanic.root\",\r\n            logging.INFO,\r\n            f\"http://127.0.0.1:{port}/\",\r\n        )\r\nE       AssertionError: assert ('asyncio', 4... cancelled>>') == ('sanic.root'....0.0.1:2040/')\r\nE         At index 0 diff: 'asyncio' != 'sanic.root'\r\nE         Use -v to get the full diff\r\ntests\\test_logging.py:153: AssertionError\r\n----------------------------- Captured log setup ------------------------------\r\nDEBUG    asyncio:proactor_events.py:623 Using proactor: IocpProactor\r\n---------------------------- Captured stdout call -----------------------------\r\n[2020-09-28 22:46:46 -0000] - (sanic.root)[INFO]: http://127.0.0.1:2040/\r\n[2020-09-28 22:46:46 -0000] - (sanic.root)[INFO]: 8c241bab-6591-4f09-87f8-c439ed3da740\r\n[2020-09-28 22:46:46 -0000] - (sanic.access)[INFO]: \r\n[2020-09-28 22:46:46 -0000] - (sanic.root)[INFO]: Starting worker [2352]\r\n[2020-09-28 22:46:46 -0000] - (sanic.root)[INFO]: Stopping worker [2352]\r\n[2020-09-28 22:46:46 -0000] - (sanic.root)[INFO]: Server Stopped\r\n---------------------------- Captured stderr call -----------------------------\r\nINFO:     ASGI 'lifespan' protocol appears unsupported.\r\nException ignored in: <function _ProactorBasePipeTransport.__del__ at 0x000000E28A393E50>\r\nTraceback (most recent call last):\r\n  File \"c:\\python38-x64\\Lib\\asyncio\\proactor_events.py\", line 116, in __del__\r\n    self.close()\r\n  File \"c:\\python38-x64\\Lib\\asyncio\\proactor_events.py\", line 108, in close\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"c:\\python38-x64\\Lib\\asyncio\\base_events.py\", line 711, in call_soon\r\n    self._check_closed()\r\n  File \"c:\\python38-x64\\Lib\\asyncio\\base_events.py\", line 504, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\nException ignored in: <function _ProactorBasePipeTransport.__del__ at 0x000000E28A393E50>\r\nTraceback (most recent call last):\r\n  File \"c:\\python38-x64\\Lib\\asyncio\\proactor_events.py\", line 116, in __del__\r\n    self.close()\r\n  File \"c:\\python38-x64\\Lib\\asyncio\\proactor_events.py\", line 108, in close\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"c:\\python38-x64\\Lib\\asyncio\\base_events.py\", line 711, in call_soon\r\n    self._check_closed()\r\n  File \"c:\\python38-x64\\Lib\\asyncio\\base_events.py\", line 504, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\n------------------------------ Captured log call ------------------------------\r\nERROR    asyncio:base_events.py:1692 Task was destroyed but it is pending!\r\n```", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1938/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1875", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1875/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1875/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1875/events", "html_url": "https://github.com/sanic-org/sanic/issues/1875", "id": 641045886, "node_id": "MDU6SXNzdWU2NDEwNDU4ODY=", "number": 1875, "title": "Response timeout error from all routes after returning several timeouts from a specific route", "user": {"login": "oskouei", "id": 20972307, "node_id": "MDQ6VXNlcjIwOTcyMzA3", "avatar_url": "https://avatars.githubusercontent.com/u/20972307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oskouei", "html_url": "https://github.com/oskouei", "followers_url": "https://api.github.com/users/oskouei/followers", "following_url": "https://api.github.com/users/oskouei/following{/other_user}", "gists_url": "https://api.github.com/users/oskouei/gists{/gist_id}", "starred_url": "https://api.github.com/users/oskouei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oskouei/subscriptions", "organizations_url": "https://api.github.com/users/oskouei/orgs", "repos_url": "https://api.github.com/users/oskouei/repos", "events_url": "https://api.github.com/users/oskouei/events{/privacy}", "received_events_url": "https://api.github.com/users/oskouei/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 464612041, "node_id": "MDU6TGFiZWw0NjQ2MTIwNDE=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/necessary", "name": "necessary", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-18T09:14:44Z", "updated_at": "2021-01-10T22:45:37Z", "closed_at": "2021-01-10T22:45:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Response timeout error**\r\nReturn \"Response timeout\" error from all routes after returning several timeouts from a specific route.\r\n\r\n\r\n**Codes**\r\nSet response timeout to 5 sec in config:\r\n`RESPONSE_TIMEOUT = 5`\r\n\r\nDefine funcs:\r\n```\r\n@app.get('test')\r\nasync def test_func(request):\r\n    \"\"\"Timeout func\"\"\"\r\n    await asyncio.sleep(10)\r\n    ...\r\n@app.get('test2')\r\nasync def test_func2(request):\r\n    \"\"\"Func without timeout\"\"\"\r\n    return response.text('OK')\r\n```\r\nMake several timeout responses:\r\n```\r\nfor i in range(20):\r\n    resp = requests.get('/test')\r\n```\r\nThen if I request all other endpoints, it returns \"Response timeout\" error:\r\n`resp = requests.get('/test2')`\r\n\r\n\r\n\r\n**Environment:**\r\n - OS: Ubuntu\r\n - Python: 3.8.2\r\n - Sanic: 20.3.0\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1875/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1810", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1810/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1810/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1810/events", "html_url": "https://github.com/sanic-org/sanic/issues/1810", "id": 583918508, "node_id": "MDU6SXNzdWU1ODM5MTg1MDg=", "number": 1810, "title": "Hard error on invalid max-age cookie", "user": {"login": "jamesstidard", "id": 1797906, "node_id": "MDQ6VXNlcjE3OTc5MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1797906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesstidard", "html_url": "https://github.com/jamesstidard", "followers_url": "https://api.github.com/users/jamesstidard/followers", "following_url": "https://api.github.com/users/jamesstidard/following{/other_user}", "gists_url": "https://api.github.com/users/jamesstidard/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesstidard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesstidard/subscriptions", "organizations_url": "https://api.github.com/users/jamesstidard/orgs", "repos_url": "https://api.github.com/users/jamesstidard/repos", "events_url": "https://api.github.com/users/jamesstidard/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesstidard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-18T18:19:16Z", "updated_at": "2021-01-18T23:11:40Z", "closed_at": "2021-01-18T23:11:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nCurrently when setting the `max-age` cookie value, it's possible for a valid value to not be set as expected, as well as an invalid value from raising a hard error. In both cases the values are replaced by a `0` `max-age`.\r\n\r\n\r\n**Code snippet**\r\n```python\r\nresponse.cookie[\"my-cookie\"][\"max-age\"] = 10.0  # max-age is set to 0\r\nresponse.cookie[\"my-cookie\"][\"max-age\"] = 10.5  # max-age is set to 0\r\nresponse.cookie[\"my-cookie\"][\"max-age\"] = \"ten\"  # max-age is set to 0\r\nresponse.cookie[\"my-cookie\"][\"max-age\"] = \"10\"  # max-age is set to 10\r\nresponse.cookie[\"my-cookie\"][\"max-age\"] = 10  # max-age is set to 10\r\n```\r\n\r\n**Expected behavior**\r\nHere's what I think the expected behaviour should be (akin to how the `expires` cookie attribute is handled; raising an error if not a `datetime.datetime`).\r\n\r\n```python\r\nresponse.cookie[\"my-cookie\"][\"max-age\"] = 10.0  # max-age is set to 10\r\nresponse.cookie[\"my-cookie\"][\"max-age\"] = 10.5  # raise ValueError\r\nresponse.cookie[\"my-cookie\"][\"max-age\"] = \"ten\"  # raise ValueError\r\nresponse.cookie[\"my-cookie\"][\"max-age\"] = \"10\"  # max-age is set to 10\r\nresponse.cookie[\"my-cookie\"][\"max-age\"] = 10  # max-age is set to 10\r\n```\r\n\r\n**Environment (please complete the following information):**\r\n - OS: macOS\r\n - Version 19.12.2\r\n\r\n\r\n**Additional context**\r\nI've created a pull request for this here #1809. Here's the issue relating to the original implementation #1452.\r\n\r\nCreating this issue so I can have an issue number for the changelog.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1810/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1773", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1773/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1773/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1773/events", "html_url": "https://github.com/sanic-org/sanic/issues/1773", "id": 555926387, "node_id": "MDU6SXNzdWU1NTU5MjYzODc=", "number": 1773, "title": "Can't add 2 urls using decorators for function in new version (19.12)", "user": {"login": "pi11", "id": 384365, "node_id": "MDQ6VXNlcjM4NDM2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/384365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pi11", "html_url": "https://github.com/pi11", "followers_url": "https://api.github.com/users/pi11/followers", "following_url": "https://api.github.com/users/pi11/following{/other_user}", "gists_url": "https://api.github.com/users/pi11/gists{/gist_id}", "starred_url": "https://api.github.com/users/pi11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pi11/subscriptions", "organizations_url": "https://api.github.com/users/pi11/orgs", "repos_url": "https://api.github.com/users/pi11/repos", "events_url": "https://api.github.com/users/pi11/events{/privacy}", "received_events_url": "https://api.github.com/users/pi11/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1813838238, "node_id": "MDU6TGFiZWwxODEzODM4MjM4", "url": "https://api.github.com/repos/sanic-org/sanic/labels/release-needed", "name": "release-needed", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "sjsadowski", "id": 857480, "node_id": "MDQ6VXNlcjg1NzQ4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/857480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjsadowski", "html_url": "https://github.com/sjsadowski", "followers_url": "https://api.github.com/users/sjsadowski/followers", "following_url": "https://api.github.com/users/sjsadowski/following{/other_user}", "gists_url": "https://api.github.com/users/sjsadowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjsadowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjsadowski/subscriptions", "organizations_url": "https://api.github.com/users/sjsadowski/orgs", "repos_url": "https://api.github.com/users/sjsadowski/repos", "events_url": "https://api.github.com/users/sjsadowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sjsadowski/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sjsadowski", "id": 857480, "node_id": "MDQ6VXNlcjg1NzQ4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/857480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjsadowski", "html_url": "https://github.com/sjsadowski", "followers_url": "https://api.github.com/users/sjsadowski/followers", "following_url": "https://api.github.com/users/sjsadowski/following{/other_user}", "gists_url": "https://api.github.com/users/sjsadowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjsadowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjsadowski/subscriptions", "organizations_url": "https://api.github.com/users/sjsadowski/orgs", "repos_url": "https://api.github.com/users/sjsadowski/repos", "events_url": "https://api.github.com/users/sjsadowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sjsadowski/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-01-28T01:09:12Z", "updated_at": "2021-01-11T12:29:03Z", "closed_at": "2021-01-11T12:29:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "So in previous version I was using something like this:\r\n```\r\n\r\n@app.get('/embed/<video_id:int>', strict_slashes=False)\r\n@app.get('/<video_id:int>', strict_slashes=False)\r\nasync def embed_video(request, video_id): \r\n    ....\r\n```\r\nEverything works just fine, in new version I got error:\r\n\r\n```\r\n\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 84, in <module>\r\n    @app.get('/<video_id:int>', strict_slashes=False)\r\n  File \"/home/serge/work/ve/lib/python3.7/site-packages/sanic/app.py\", line 197, in response\r\n    args = list(signature(handler).parameters.keys())\r\n  File \"/usr/lib/python3.7/inspect.py\", line 3083, in signature\r\n    return Signature.from_callable(obj, follow_wrapped=follow_wrapped)\r\n  File \"/usr/lib/python3.7/inspect.py\", line 2833, in from_callable\r\n    follow_wrapper_chains=follow_wrapped)\r\n  File \"/usr/lib/python3.7/inspect.py\", line 2208, in _signature_from_callable\r\n    raise TypeError('{!r} is not a callable object'.format(obj))\r\nTypeError: ([Route(handler=<function embed_video at 0x7f5463598400>, methods=frozenset({'GET'}), pattern=re.compile('^/(-?\\\\d+)$'), parameters=[Parameter(name='video_id', cast=<class 'int'>)], name='embed_video', uri='/<video_id:int>'), Route(handler=<function embed_video at 0x7f5463598400>, methods=frozenset({'GET'}), pattern=re.compile('^/(-?\\\\d+)/$'), parameters=[Parameter(name='video_id', cast=<class 'int'>)], name='embed_video', uri='/<video_id:int>/')], <function embed_video at 0x7f5463598400>) is not a callable object\r\n```\r\n\r\n\r\nI also tried decorator + adding add_route, here example code:\r\n\r\n```\r\nfrom sanic import Sanic\r\nfrom sanic.response import json\r\n\r\napp = Sanic()\r\n\r\n@app.route(\"/\")\r\nasync def test(request):\r\n    return json({\"hello\": \"world\"})\r\n\r\nif __name__ == \"__main__\":\r\n    app.add_route(test, '/test')\r\n    app.run(host=\"0.0.0.0\", port=8000)\r\n  \r\n```\r\nAnd got same error. \r\n\r\nSo the only way to add 2 urls for 1 function is using add_route - which work perfect.\r\nNot sure if this is expected behavior from now on or a bug?\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1773/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1773/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1730", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1730/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1730/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1730/events", "html_url": "https://github.com/sanic-org/sanic/issues/1730", "id": 537645695, "node_id": "MDU6SXNzdWU1Mzc2NDU2OTU=", "number": 1730, "title": "ASGI Streaming response contains extra content", "user": {"login": "dmachi", "id": 190574, "node_id": "MDQ6VXNlcjE5MDU3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/190574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmachi", "html_url": "https://github.com/dmachi", "followers_url": "https://api.github.com/users/dmachi/followers", "following_url": "https://api.github.com/users/dmachi/following{/other_user}", "gists_url": "https://api.github.com/users/dmachi/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmachi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmachi/subscriptions", "organizations_url": "https://api.github.com/users/dmachi/orgs", "repos_url": "https://api.github.com/users/dmachi/repos", "events_url": "https://api.github.com/users/dmachi/events{/privacy}", "received_events_url": "https://api.github.com/users/dmachi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-13T16:33:58Z", "updated_at": "2020-10-25T13:01:54Z", "closed_at": "2020-10-25T13:01:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some code that makes an http request (aiohttp) to an separate service to retrieve a file and then stream that file back.  It is essentially acting as a proxy for this request.  However, the streaming portion ends up wrapping some additional bytes of data around the body that I don't quite understand.\r\n\r\nHere is a test case:\r\n\r\n```\r\nfrom sanic import Sanic\r\nfrom sanic.response import file_stream\r\nfrom pathlib import Path\r\nimport aiofiles\r\nfrom aiofiles import os as async_os\r\nfrom sanic.response import stream\r\nimport aiohttp\r\n\r\napp = Sanic()\r\n\r\n@app.route(\"/\", methods=[\"GET\"])\r\nasync def test(request):\r\n  tf=__file__\r\n  file_stat = await async_os.stat(tf)\r\n  headers = {\"Content-Length\": file_stat.st_size,\"Content-Type\": \"application/octet-stream\"}\r\n  return await file_stream(tf,headers=headers,chunked=False)\r\n\r\n@app.route(\"/test2\",methods=[\"GET\"])\r\nasync def test2(request):\r\n  session = aiohttp.ClientSession()\r\n  resp = await session.get('http://localhost:%s/'%request.server_port)\r\n\r\n  async def stream_file(response):\r\n    while True:\r\n      chunk = await resp.content.read()\r\n      if not chunk:\r\n        break\r\n      await response.write(chunk)\r\n\r\n  return stream(stream_file)\r\n\r\n```\r\nI run this code with 'uvicorn test:app --port 9000'\r\n\r\nThere are two endpoints / and /test2:\r\n- The / request simply returns a file (the actual code in this example). curl \"http://localhost:9000/\" verifies the results are correct\r\n- The /test2 call makes an aiohttp call to the / endpoint and then tries to stream the response.  I expect the response to be the same as the / endpoint.\r\n\r\nThe actual response looks like:\r\n```\r\n$ curl http://localhost:9000/test2\r\n33d\r\nfrom sanic import Sanic\r\nfrom sanic.response import file_stream\r\nfrom pathlib import Path\r\n...TRUNCATED MIDDLE OF OUTPUT\r\n  return stream(stream_file)\r\n0\r\n```\r\nThat '33d' and '0' should not be there, but I don't see where they are coming from.  Am I passing the stream along improperly?\r\n\r\nThe environment is OSX 10.15.1\r\n\r\nOne note is that  I have applied the small snippet of code I described in #1653 in order to make the initial file stream work.\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1730/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1707", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1707/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1707/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1707/events", "html_url": "https://github.com/sanic-org/sanic/issues/1707", "id": 511304799, "node_id": "MDU6SXNzdWU1MTEzMDQ3OTk=", "number": 1707, "title": "Using request.url_for throws KeyError: 'SERVER_NAME' in 19.9.0", "user": {"login": "roemba", "id": 2606940, "node_id": "MDQ6VXNlcjI2MDY5NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/2606940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roemba", "html_url": "https://github.com/roemba", "followers_url": "https://api.github.com/users/roemba/followers", "following_url": "https://api.github.com/users/roemba/following{/other_user}", "gists_url": "https://api.github.com/users/roemba/gists{/gist_id}", "starred_url": "https://api.github.com/users/roemba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roemba/subscriptions", "organizations_url": "https://api.github.com/users/roemba/orgs", "repos_url": "https://api.github.com/users/roemba/repos", "events_url": "https://api.github.com/users/roemba/events{/privacy}", "received_events_url": "https://api.github.com/users/roemba/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-23T12:56:35Z", "updated_at": "2019-11-01T17:32:50Z", "closed_at": "2019-11-01T17:32:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nRunning Sanic behind a proxy and trying to generate an url using `request.url_for` throws a KeyError. This used to work but now Sanic suddenly requires a SERVER_NAME in order to do this. I get the following trace:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/sanic/app.py\", line 942, in handle_request\r\n    response = await response\r\n  File \"/app/tsauth/views/activate.py\", line 41, in init_activate\r\n    request=request)\r\n  File \"/usr/local/lib/python3.7/site-packages/mako/template.py\", line 476, in render\r\n    return runtime._render(self, self.callable_, args, data)\r\n  File \"/usr/local/lib/python3.7/site-packages/mako/runtime.py\", line 883, in _render\r\n    **_kwargs_for_callable(callable_, data)\r\n  File \"/usr/local/lib/python3.7/site-packages/mako/runtime.py\", line 920, in _render_context\r\n    _exec_template(inherit, lclcontext, args=args, kwargs=kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/mako/runtime.py\", line 947, in _exec_template\r\n    callable_(context, *args, **kwargs)\r\n  File \"transaction_mako\", line 60, in render_body\r\n  File \"/usr/local/lib/python3.7/site-packages/sanic/request.py\", line 522, in url_for\r\n    if \"//\" in self.app.config.SERVER_NAME:\r\n  File \"/usr/local/lib/python3.7/site-packages/sanic/config.py\", line 54, in __getattr__\r\n    raise AttributeError(\"Config has no '{}'\".format(ke.args[0]))\r\nAttributeError: Config has no 'SERVER_NAME'\r\n[2019-10-23 12:38:09 +0000] - (sanic.access)[INFO][<redacted>:33328]: GET <redacted>  500 144\r\n10/23/2019 12:38:09 PM ERROR Exception occurred while handling uri: '<redacted>'\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/sanic/config.py\", line 52, in __getattr__\r\n    return self[attr]\r\nKeyError: 'SERVER_NAME'\r\n```\r\n\r\n\r\n\r\n**Code snippet**\r\n`request.url_for(\"static\",  name='static', filename=\"badge.png\")`\r\n\r\n\r\n**Expected behavior**\r\n`request.url_for` should generate a full url with the given path, e.g. `https://hostname:port/static/badge.png`. As I am running my server behind a proxy, I do not want to hardcode the hostname in the SERVER_NAME. This used to work with Sanic version 19.6.3.\r\n\r\n\r\n**Environment (please complete the following information):**\r\n - Python 3.7 Docker container, Kubernetes v1.16.2 with nginx-ingress 0.26.1\r\n - Sanic version 19.9.0\r\n\r\n\r\n**Additional context**\r\nThe calling code to `request.url_for` has not changed since the Sanic version update. \r\nThe documentation also does not speak a word about why the SERVER_NAME variable needs to be configured...\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1707/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1653", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1653/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1653/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1653/events", "html_url": "https://github.com/sanic-org/sanic/issues/1653", "id": 476518754, "node_id": "MDU6SXNzdWU0NzY1MTg3NTQ=", "number": 1653, "title": "In ASGI, headers is output as body", "user": {"login": "skytoup", "id": 11342389, "node_id": "MDQ6VXNlcjExMzQyMzg5", "avatar_url": "https://avatars.githubusercontent.com/u/11342389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skytoup", "html_url": "https://github.com/skytoup", "followers_url": "https://api.github.com/users/skytoup/followers", "following_url": "https://api.github.com/users/skytoup/following{/other_user}", "gists_url": "https://api.github.com/users/skytoup/gists{/gist_id}", "starred_url": "https://api.github.com/users/skytoup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skytoup/subscriptions", "organizations_url": "https://api.github.com/users/skytoup/orgs", "repos_url": "https://api.github.com/users/skytoup/repos", "events_url": "https://api.github.com/users/skytoup/events{/privacy}", "received_events_url": "https://api.github.com/users/skytoup/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2019-08-04T06:01:42Z", "updated_at": "2020-10-26T23:42:00Z", "closed_at": "2020-10-25T13:01:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "simple test code\r\n```Python3\r\n@app.get('')\r\nasync def test(request):\r\n    return await file_stream(...)\r\n```\r\n\r\nThe HTTP response will output twice headers.\r\nOne of them is in the headers (\u2705), the other time in the body (\u274e)", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1653/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1629", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1629/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1629/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1629/events", "html_url": "https://github.com/sanic-org/sanic/issues/1629", "id": 466335058, "node_id": "MDU6SXNzdWU0NjYzMzUwNTg=", "number": 1629, "title": "Uvicorn and Sanic have incompatible websockets dependencies", "user": {"login": "ahankinson", "id": 163183, "node_id": "MDQ6VXNlcjE2MzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/163183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahankinson", "html_url": "https://github.com/ahankinson", "followers_url": "https://api.github.com/users/ahankinson/followers", "following_url": "https://api.github.com/users/ahankinson/following{/other_user}", "gists_url": "https://api.github.com/users/ahankinson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahankinson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahankinson/subscriptions", "organizations_url": "https://api.github.com/users/ahankinson/orgs", "repos_url": "https://api.github.com/users/ahankinson/repos", "events_url": "https://api.github.com/users/ahankinson/events{/privacy}", "received_events_url": "https://api.github.com/users/ahankinson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "yunstanford", "id": 13110231, "node_id": "MDQ6VXNlcjEzMTEwMjMx", "avatar_url": "https://avatars.githubusercontent.com/u/13110231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yunstanford", "html_url": "https://github.com/yunstanford", "followers_url": "https://api.github.com/users/yunstanford/followers", "following_url": "https://api.github.com/users/yunstanford/following{/other_user}", "gists_url": "https://api.github.com/users/yunstanford/gists{/gist_id}", "starred_url": "https://api.github.com/users/yunstanford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yunstanford/subscriptions", "organizations_url": "https://api.github.com/users/yunstanford/orgs", "repos_url": "https://api.github.com/users/yunstanford/repos", "events_url": "https://api.github.com/users/yunstanford/events{/privacy}", "received_events_url": "https://api.github.com/users/yunstanford/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yunstanford", "id": 13110231, "node_id": "MDQ6VXNlcjEzMTEwMjMx", "avatar_url": "https://avatars.githubusercontent.com/u/13110231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yunstanford", "html_url": "https://github.com/yunstanford", "followers_url": "https://api.github.com/users/yunstanford/followers", "following_url": "https://api.github.com/users/yunstanford/following{/other_user}", "gists_url": "https://api.github.com/users/yunstanford/gists{/gist_id}", "starred_url": "https://api.github.com/users/yunstanford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yunstanford/subscriptions", "organizations_url": "https://api.github.com/users/yunstanford/orgs", "repos_url": "https://api.github.com/users/yunstanford/repos", "events_url": "https://api.github.com/users/yunstanford/events{/privacy}", "received_events_url": "https://api.github.com/users/yunstanford/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/sanic-org/sanic/milestones/17", "html_url": "https://github.com/sanic-org/sanic/milestone/17", "labels_url": "https://api.github.com/repos/sanic-org/sanic/milestones/17/labels", "id": 4343334, "node_id": "MDk6TWlsZXN0b25lNDM0MzMzNA==", "number": 17, "title": "19.9", "description": null, "creator": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "closed", "created_at": "2019-05-23T20:27:56Z", "updated_at": "2020-07-24T12:12:13Z", "due_on": null, "closed_at": "2020-07-24T12:12:13Z"}, "comments": 1, "created_at": "2019-07-10T14:14:27Z", "updated_at": "2019-08-12T17:48:57Z", "closed_at": "2019-08-12T17:48:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nUsing pipenv to install sanic and uvicorn fails because Sanic requires websockets >= 6.0, <7.0, and uvicorn requires websockets ==7.*\r\n\r\nYou can install this with `pipenv install --skip-lock`, but locking the packages will produce an error.\r\n\r\n```\r\n$> pipenv graph\r\nsanic==19.6.2\r\n  - aiofiles [required: >=0.3.0, installed: 0.4.0]\r\n  - httptools [required: >=0.0.10, installed: 0.0.13]\r\n  - multidict [required: >=4.0,<5.0, installed: 4.5.2]\r\n  - requests-async [required: ==0.5.0, installed: 0.5.0]\r\n    - httpcore [required: ==0.3.*, installed: 0.3.0]\r\n      - certifi [required: Any, installed: 2019.6.16]\r\n      - chardet [required: ==3.*, installed: 3.0.4]\r\n      - h11 [required: ==0.8.*, installed: 0.8.1]\r\n      - h2 [required: ==3.*, installed: 3.1.0]\r\n        - hpack [required: >=2.3,<4, installed: 3.0.0]\r\n        - hyperframe [required: >=5.2.0,<6, installed: 5.2.0]\r\n      - idna [required: ==2.*, installed: 2.8]\r\n      - rfc3986 [required: ==1.*, installed: 1.3.2]\r\n    - requests [required: ==2.*, installed: 2.22.0]\r\n      - certifi [required: >=2017.4.17, installed: 2019.6.16]\r\n      - chardet [required: >=3.0.2,<3.1.0, installed: 3.0.4]\r\n      - idna [required: >=2.5,<2.9, installed: 2.8]\r\n      - urllib3 [required: >=1.21.1,<1.26,!=1.25.1,!=1.25.0, installed: 1.25.3]\r\n  - ujson [required: >=1.35, installed: 1.35]\r\n  - uvloop [required: >=0.5.3, installed: 0.12.2]\r\n  - websockets [required: >=6.0,<7.0, installed: 6.0]\r\nuvicorn==0.8.3\r\n  - click [required: ==7.*, installed: 7.0]\r\n  - h11 [required: ==0.8.*, installed: 0.8.1]\r\n  - httptools [required: ==0.0.13, installed: 0.0.13]\r\n  - uvloop [required: ==0.12.*, installed: 0.12.2]\r\n  - websockets [required: ==7.*, installed: 6.0]\r\n```\r\n\r\n**Expected behavior**\r\nSince the documentation describes running Sanic with uvicorn, I would expect this to work.\r\n\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Mac OS X (but I would expect it to be a problem on most platforms)\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1629/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1629/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1601", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1601/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1601/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1601/events", "html_url": "https://github.com/sanic-org/sanic/issues/1601", "id": 452305455, "node_id": "MDU6SXNzdWU0NTIzMDU0NTU=", "number": 1601, "title": "A mysterious issue with Cython, sanic 19.3.1", "user": {"login": "heshiming", "id": 558825, "node_id": "MDQ6VXNlcjU1ODgyNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/558825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heshiming", "html_url": "https://github.com/heshiming", "followers_url": "https://api.github.com/users/heshiming/followers", "following_url": "https://api.github.com/users/heshiming/following{/other_user}", "gists_url": "https://api.github.com/users/heshiming/gists{/gist_id}", "starred_url": "https://api.github.com/users/heshiming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heshiming/subscriptions", "organizations_url": "https://api.github.com/users/heshiming/orgs", "repos_url": "https://api.github.com/users/heshiming/repos", "events_url": "https://api.github.com/users/heshiming/events{/privacy}", "received_events_url": "https://api.github.com/users/heshiming/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 464641209, "node_id": "MDU6TGFiZWw0NjQ2NDEyMDk=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/needs%20investigation", "name": "needs investigation", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-05T04:03:11Z", "updated_at": "2019-10-23T16:12:20Z", "closed_at": "2019-10-23T16:12:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm seeing a mysterious exception in `_build_endpoint_name` of `app.py`. It occurs only when the app server module is compiled using Cython. It happens to sanic 19.3.1 but not 18.12.0 (or below).\r\n\r\nHere is a minimal example to replicate this issue in the docker environment. First, in an empty folder, create `dockerfile` with the following contents:\r\n\r\n    FROM python:3.7-stretch\r\n    RUN pip install sanic cython gunicorn\r\n\r\nThen, in the same folder, create a very simple server `app.py` like this:\r\n\r\n    from sanic import Sanic, response\r\n\r\n    app = Sanic()\r\n\r\n    @app.route('/')\r\n    async def root(request):\r\n        return response.text('Hello')\r\n\r\nBuild the docker image:\r\n\r\n    $ docker build --rm -f dockerfile -t sanic-test ./\r\n\r\nLaunch and go inside the container:\r\n\r\n    $ docker run --rm --name sanic-test -it -v `pwd`:/app -w=\"/app\" -p 127.0.0.1:5000:5000/tcp sanic-test bash\r\n\r\nRun the following command to get `app.py` compiled:\r\n\r\n    cython app.py -3\r\n    gcc -shared -pthread `python3-config --includes` -fPIC -fwrapv -O2 -Wall -fno-strict-aliasing -o app.cpython-37m-x86_64-linux-gnu.so app.c\r\n\r\nNow launch the compiled module using `gunicorn`:\r\n\r\n    $ gunicorn app:app --bind 0.0.0.0:5000 --worker-class sanic.worker.GunicornWorker\r\n    [2019-06-05 03:32:57 +0000] [7] [INFO] Starting gunicorn 19.9.0\r\n    [2019-06-05 03:32:57 +0000] [7] [INFO] Listening at: http://0.0.0.0:5000 (7)\r\n    [2019-06-05 03:32:57 +0000] [7] [INFO] Using worker: sanic.worker.GunicornWorker\r\n    [2019-06-05 03:32:57 +0000] [10] [INFO] Booting worker with pid: 10\r\n\r\nThe docker container is set up with external port mapping. So on your host machine, you can do:\r\n\r\n    $ curl http://localhost:5000\r\n\r\nWhich generates:\r\n\r\n    [2019-06-05 03:32:59 +0000] [10] [ERROR] Exception occurred while handling uri: 'http://localhost:5000/'\r\n    Traceback (most recent call last):\r\n      File \"/usr/local/lib/python3.7/site-packages/sanic/app.py\", line 906, in handle_request\r\n        handler.__name__\r\n      File \"/usr/local/lib/python3.7/site-packages/sanic/app.py\", line 1355, in _build_endpoint_name\r\n        return \".\".join(parts)\r\n    TypeError: sequence item 0: expected str instance, NoneType found\r\n    [2019-06-05 03:32:59 +0000] - (sanic.access)[INFO][172.17.0.1:55388]: GET http://localhost:5000/  500 144\r\n\r\nOptions to prevent this exception include:\r\n\r\n1. removing `app.cpython-37m-x86_64-linux-gnu.so` and let it run in source code\r\n2. downgrading sanic by changing the docker file line `RUN pip install sanic cython gunicorn` to `RUN pip install sanic==18.12.0 cython gunicorn`\r\n\r\nAnd of course, the expected result is something like this:\r\n\r\n    [2019-06-05 03:35:01 +0000] - (sanic.access)[INFO][172.17.0.1:55396]: GET http://localhost:5000/  200 5\r\n\r\nA change in 19.3.1 must have triggered this issue. But due to the nature of Cython, it's probably very difficult to debug, especially considering the source code itself works without any problem. The corresponding part of sanic's `app.py` is trying to load the handlers' `__name__` attribute.\r\n\r\nAccording to my previous experience, Cython has problems with `__file__`. A Cythonized module or script will not have `__file__` defined. But I have never seen a problem with `__name__`. Any idea how to debug such a problem?", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1601/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1505", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1505/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1505/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1505/events", "html_url": "https://github.com/sanic-org/sanic/issues/1505", "id": 416539788, "node_id": "MDU6SXNzdWU0MTY1Mzk3ODg=", "number": 1505, "title": "backport 'remove time prefetch' to 18.12LTS", "user": {"login": "sjsadowski", "id": 857480, "node_id": "MDQ6VXNlcjg1NzQ4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/857480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjsadowski", "html_url": "https://github.com/sjsadowski", "followers_url": "https://api.github.com/users/sjsadowski/followers", "following_url": "https://api.github.com/users/sjsadowski/following{/other_user}", "gists_url": "https://api.github.com/users/sjsadowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjsadowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjsadowski/subscriptions", "organizations_url": "https://api.github.com/users/sjsadowski/orgs", "repos_url": "https://api.github.com/users/sjsadowski/repos", "events_url": "https://api.github.com/users/sjsadowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sjsadowski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sjsadowski", "id": 857480, "node_id": "MDQ6VXNlcjg1NzQ4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/857480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjsadowski", "html_url": "https://github.com/sjsadowski", "followers_url": "https://api.github.com/users/sjsadowski/followers", "following_url": "https://api.github.com/users/sjsadowski/following{/other_user}", "gists_url": "https://api.github.com/users/sjsadowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjsadowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjsadowski/subscriptions", "organizations_url": "https://api.github.com/users/sjsadowski/orgs", "repos_url": "https://api.github.com/users/sjsadowski/repos", "events_url": "https://api.github.com/users/sjsadowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sjsadowski/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sjsadowski", "id": 857480, "node_id": "MDQ6VXNlcjg1NzQ4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/857480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjsadowski", "html_url": "https://github.com/sjsadowski", "followers_url": "https://api.github.com/users/sjsadowski/followers", "following_url": "https://api.github.com/users/sjsadowski/following{/other_user}", "gists_url": "https://api.github.com/users/sjsadowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjsadowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjsadowski/subscriptions", "organizations_url": "https://api.github.com/users/sjsadowski/orgs", "repos_url": "https://api.github.com/users/sjsadowski/repos", "events_url": "https://api.github.com/users/sjsadowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sjsadowski/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-03-03T17:21:06Z", "updated_at": "2019-03-06T15:09:00Z", "closed_at": "2019-03-06T15:09:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Remove memory leak related to time prefetch in 18.12 per #1502 work on master", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1505/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1492", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1492/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1492/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1492/events", "html_url": "https://github.com/sanic-org/sanic/issues/1492", "id": 411817081, "node_id": "MDU6SXNzdWU0MTE4MTcwODE=", "number": 1492, "title": "Module import fails when auto_reload is active", "user": {"login": "subokita", "id": 2043928, "node_id": "MDQ6VXNlcjIwNDM5Mjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2043928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/subokita", "html_url": "https://github.com/subokita", "followers_url": "https://api.github.com/users/subokita/followers", "following_url": "https://api.github.com/users/subokita/following{/other_user}", "gists_url": "https://api.github.com/users/subokita/gists{/gist_id}", "starred_url": "https://api.github.com/users/subokita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/subokita/subscriptions", "organizations_url": "https://api.github.com/users/subokita/orgs", "repos_url": "https://api.github.com/users/subokita/repos", "events_url": "https://api.github.com/users/subokita/events{/privacy}", "received_events_url": "https://api.github.com/users/subokita/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-02-19T09:08:31Z", "updated_at": "2019-03-03T17:03:27Z", "closed_at": "2019-03-03T17:03:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have two piece of code (the structure has been simplified for clarity sake)\r\nFirst in base.py\r\n```\r\n#! /usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n# module: init0\r\n\r\nfrom abc   import ABCMeta\r\nfrom sanic import Sanic\r\n\r\nclass BaseService( metaclass = ABCMeta ):\r\n    def create_app( self ) -> Sanic:\r\n        app = Sanic( __name__ )\r\n        return app\r\n\r\n# app = BaseService().create_app()\r\n\r\n# app.run( host  = '0.0.0.0',\r\n#      port  = 5000,\r\n#      debug = True,\r\n#     )\r\n\r\nprint('[DONE]')\r\n\r\n```\r\nSecond in run_test.py\r\n```\r\n#! /usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n# module: init0\r\n\r\nfrom init0.base import BaseService\r\n\r\ndef main():\r\n    app = BaseService().create_app()\r\n    app.run( host  = '0.0.0.0',\r\n         port  = 5000,\r\n         debug = True,\r\n        )\r\n    return\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n\r\n```\r\n\r\nIf I were to run `python -m init0.run_test` with `debug = False` then everything works perfectly, however if it's `debug = True`, then it'd throw me `ModuleNotFoundError: No module named 'init0'`\r\n\r\nIs it some sort of loading error somewhere that I need to configure beforehand?\r\n\r\nThanks a lot in advance", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1492/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1471", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1471/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1471/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1471/events", "html_url": "https://github.com/sanic-org/sanic/issues/1471", "id": 399389003, "node_id": "MDU6SXNzdWUzOTkzODkwMDM=", "number": 1471, "title": "Not properly handle signal to stop worker sub-process in debug mode", "user": {"login": "cfhamlet", "id": 348882, "node_id": "MDQ6VXNlcjM0ODg4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/348882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cfhamlet", "html_url": "https://github.com/cfhamlet", "followers_url": "https://api.github.com/users/cfhamlet/followers", "following_url": "https://api.github.com/users/cfhamlet/following{/other_user}", "gists_url": "https://api.github.com/users/cfhamlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/cfhamlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cfhamlet/subscriptions", "organizations_url": "https://api.github.com/users/cfhamlet/orgs", "repos_url": "https://api.github.com/users/cfhamlet/repos", "events_url": "https://api.github.com/users/cfhamlet/events{/privacy}", "received_events_url": "https://api.github.com/users/cfhamlet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 464641209, "node_id": "MDU6TGFiZWw0NjQ2NDEyMDk=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/needs%20investigation", "name": "needs investigation", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-15T15:11:11Z", "updated_at": "2022-09-18T14:17:27Z", "closed_at": "2022-09-18T14:17:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nIn the debug mode, if you do not change your source code to trigger auto reload, the stop signals(SIGTERM, SIGINT) send to the main process will not work properly to stop the worker sub-process.  As the following code, run it and stop(Ctrl-C), the ``on_shutdown`` method will not be called.\r\n\r\n```\r\n# v18.12.0\r\nfrom sanic import Sanic\r\n\r\napp = Sanic(__name__)\r\n\r\n@app.listener('after_server_stop')\r\ndef on_shutdown(app, loop):\r\n    print('I am done!')\r\n\r\napp.run(debug=True)\r\n```\r\n\r\nI think the problem maybe caused by the following code in ``reloader_helpers.py``:\r\n\r\n```\r\ndef watchdog(sleep_interval):\r\n    mtimes = {}\r\n    worker_process = restart_with_reloader()\r\n    signal.signal(\r\n        signal.SIGTERM, lambda *args: kill_program_completly(worker_process)\r\n    )\r\n    signal.signal(\r\n        signal.SIGINT, lambda *args: kill_program_completly(worker_process)\r\n    )\r\n```\r\n\r\nBecause of creating worker_process before register signal hander(``kill_program_completly``), the woker_process still use the default signal handler and do not kill sub-process woker.\r\n\r\nThe following snippet is a immature solution, just for reference:\r\n\r\n```\r\ndef kill_program_completly(proc):\r\n    if not proc:\r\n        kill_process_children(os.getpid())\r\n        os._exit(0)\r\n    proc = proc.pop()\r\n    kill_process_children(proc.pid)\r\n    proc.terminate()\r\n    os._exit(0)\r\n\r\n\r\ndef watchdog(sleep_interval):\r\n    mtimes = {}\r\n    worker_process = []\r\n    signal.signal(\r\n        signal.SIGTERM, lambda *args: kill_program_completly(worker_process)\r\n    )\r\n    signal.signal(\r\n        signal.SIGINT, lambda *args: kill_program_completly(worker_process)\r\n    )\r\n\r\n    worker_process.append(restart_with_reloader())\r\n    while True:\r\n        for filename in _iter_module_files():\r\n            try:\r\n                mtime = os.stat(filename).st_mtime\r\n            except OSError:\r\n                continue\r\n\r\n            old_time = mtimes.get(filename)\r\n            if old_time is None:\r\n                mtimes[filename] = mtime\r\n                continue\r\n            elif mtime > old_time:\r\n                wp = worker_process.pop()\r\n                kill_process_children(wp.pid)\r\n                wp.terminate()\r\n                worker_process.append(restart_with_reloader())\r\n                mtimes[filename] = mtime\r\n                break\r\n\r\n        sleep(sleep_interval)\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1471/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1471/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1420", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1420/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1420/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1420/events", "html_url": "https://github.com/sanic-org/sanic/issues/1420", "id": 384123263, "node_id": "MDU6SXNzdWUzODQxMjMyNjM=", "number": 1420, "title": "url_for() doesn't return a working URI for a route with the trailing slash and strict_slashes=True", "user": {"login": "hatarist", "id": 2741725, "node_id": "MDQ6VXNlcjI3NDE3MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/2741725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hatarist", "html_url": "https://github.com/hatarist", "followers_url": "https://api.github.com/users/hatarist/followers", "following_url": "https://api.github.com/users/hatarist/following{/other_user}", "gists_url": "https://api.github.com/users/hatarist/gists{/gist_id}", "starred_url": "https://api.github.com/users/hatarist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hatarist/subscriptions", "organizations_url": "https://api.github.com/users/hatarist/orgs", "repos_url": "https://api.github.com/users/hatarist/repos", "events_url": "https://api.github.com/users/hatarist/events{/privacy}", "received_events_url": "https://api.github.com/users/hatarist/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 382692935, "node_id": "MDU6TGFiZWwzODI2OTI5MzU=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}, {"id": 464611475, "node_id": "MDU6TGFiZWw0NjQ2MTE0NzU=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/beginner", "name": "beginner", "color": "c2e0c6", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/sanic-org/sanic/milestones/18", "html_url": "https://github.com/sanic-org/sanic/milestone/18", "labels_url": "https://api.github.com/repos/sanic-org/sanic/milestones/18/labels", "id": 6089148, "node_id": "MDk6TWlsZXN0b25lNjA4OTE0OA==", "number": 18, "title": "v21.3", "description": null, "creator": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 11, "state": "closed", "created_at": "2020-11-10T08:36:43Z", "updated_at": "2021-05-13T21:04:51Z", "due_on": null, "closed_at": "2021-05-13T21:04:51Z"}, "comments": 17, "created_at": "2018-11-25T21:56:40Z", "updated_at": "2021-03-01T13:30:52Z", "closed_at": "2021-03-01T13:30:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nSay we have a route with the trailing slash and `strict_slashes=True`:\r\n`@app.route('/endpoint/', strict_slashes=True)`\r\nthis way, `url_for()` will always trim the trailing slash, returning a non-working URL.\r\n\r\n**Code snippet**\r\n```python\r\nfrom sanic import Sanic\r\nfrom sanic.response import html\r\n\r\napp = Sanic()\r\n\r\n# @app.route('/endpoint', strict_slashes=True)\r\n@app.route('/endpoint/', strict_slashes=True)\r\nasync def endpoint(request):\r\n    return html('OK')\r\n\r\n\r\n@app.route('/')\r\nasync def index(request):\r\n    # print(request.app.router.routes_all)\r\n    return html('<a href=\"' + request.app.url_for('endpoint') + '\">endpoint</a>')\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(port=8000)\r\n```\r\n\r\n**Expected behavior**\r\nIn my example, `request.app.url_for('endpoint')` is expected to return `'/endpoint/'`.\r\n\r\n\r\n**Environment (please complete the following information):**\r\n - Version 0.8.3\r\n\r\n\r\n**Additional context**\r\nThe current implementation of `url_for()` just blindly removes the trailing slash, see [app.py, lines 617-618](https://github.com/huge-success/sanic/blob/7c182f63c8aee1d6cb31aabf6408595b195685ae/sanic/app.py#L617-L618).\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1420/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1395", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1395/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1395/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1395/events", "html_url": "https://github.com/sanic-org/sanic/issues/1395", "id": 377328350, "node_id": "MDU6SXNzdWUzNzczMjgzNTA=", "number": 1395, "title": "Logger not work.", "user": {"login": "chenjr0719", "id": 13619684, "node_id": "MDQ6VXNlcjEzNjE5Njg0", "avatar_url": "https://avatars.githubusercontent.com/u/13619684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenjr0719", "html_url": "https://github.com/chenjr0719", "followers_url": "https://api.github.com/users/chenjr0719/followers", "following_url": "https://api.github.com/users/chenjr0719/following{/other_user}", "gists_url": "https://api.github.com/users/chenjr0719/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenjr0719/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenjr0719/subscriptions", "organizations_url": "https://api.github.com/users/chenjr0719/orgs", "repos_url": "https://api.github.com/users/chenjr0719/repos", "events_url": "https://api.github.com/users/chenjr0719/events{/privacy}", "received_events_url": "https://api.github.com/users/chenjr0719/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/sanic-org/sanic/milestones/13", "html_url": "https://github.com/sanic-org/sanic/milestone/13", "labels_url": "https://api.github.com/repos/sanic-org/sanic/milestones/13/labels", "id": 3688222, "node_id": "MDk6TWlsZXN0b25lMzY4ODIyMg==", "number": 13, "title": "18.12 LTS", "description": "Milestone for initial CalVer LTS release", "creator": {"login": "sjsadowski", "id": 857480, "node_id": "MDQ6VXNlcjg1NzQ4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/857480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjsadowski", "html_url": "https://github.com/sjsadowski", "followers_url": "https://api.github.com/users/sjsadowski/followers", "following_url": "https://api.github.com/users/sjsadowski/following{/other_user}", "gists_url": "https://api.github.com/users/sjsadowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjsadowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjsadowski/subscriptions", "organizations_url": "https://api.github.com/users/sjsadowski/orgs", "repos_url": "https://api.github.com/users/sjsadowski/repos", "events_url": "https://api.github.com/users/sjsadowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sjsadowski/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 13, "state": "closed", "created_at": "2018-09-25T19:05:53Z", "updated_at": "2018-12-27T21:00:44Z", "due_on": "2018-12-22T08:00:00Z", "closed_at": "2018-12-27T20:59:25Z"}, "comments": 7, "created_at": "2018-11-05T10:06:49Z", "updated_at": "2018-11-06T04:37:32Z", "closed_at": "2018-11-06T04:37:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\nLogger did not work at current master commit (https://github.com/huge-success/sanic/commit/7d79a86d4dc48de11cd34e8ba12e41f3a9f9ff18).\r\n\r\n\r\n**Code snippet**\r\n```python\r\nfrom sanic import Sanic\r\nfrom sanic.log import logger\r\nfrom sanic.response import text\r\n\r\n\r\napp = Sanic()\r\n\r\n@app.listener('before_server_start')\r\nasync def setup(app, loop):\r\n    logger.info('INFO')\r\n\r\n\r\n@app.get('/')\r\nasync def test(request):\r\n    return text('hello world')\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run()\r\n```\r\nThere is no any log/output now.\r\n\r\n\r\n\r\n**Expected behavior**\r\nAt `0.8.3` release, it will logging/output some messages like:\r\n```\r\n[2018-11-05 17:34:47 +0800] [12112] [INFO] Goin' Fast @ http://127.0.0.1:8000\r\n[2018-11-05 17:34:47 +0800] [12112] [INFO] INFO\r\n[2018-11-05 17:34:47 +0800] [12112] [INFO] Starting worker [12112]\r\n```\r\n\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Ubuntu 18.04\r\n - Version: https://github.com/huge-success/sanic/commit/7d79a86d4dc48de11cd34e8ba12e41f3a9f9ff18\r\n\r\n\r\n**Additional context**\r\nIt seems that `getLogger()` does not get the correct logger at [line 56](https://github.com/huge-success/sanic/blob/master/sanic/log.py#L56) in `log.py`. The logger is trying to get a logger named `sanic.root`, but it does not exist. Rename the logger `root` at [line 9](https://github.com/huge-success/sanic/blob/master/sanic/log.py#L9) should fix this bug.\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1395/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1392", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1392/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1392/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1392/events", "html_url": "https://github.com/sanic-org/sanic/issues/1392", "id": 377100029, "node_id": "MDU6SXNzdWUzNzcxMDAwMjk=", "number": 1392, "title": " Blueprint with multiple workers not usable on Windows due to pickling error", "user": {"login": "mungojam", "id": 3154635, "node_id": "MDQ6VXNlcjMxNTQ2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3154635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mungojam", "html_url": "https://github.com/mungojam", "followers_url": "https://api.github.com/users/mungojam/followers", "following_url": "https://api.github.com/users/mungojam/following{/other_user}", "gists_url": "https://api.github.com/users/mungojam/gists{/gist_id}", "starred_url": "https://api.github.com/users/mungojam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mungojam/subscriptions", "organizations_url": "https://api.github.com/users/mungojam/orgs", "repos_url": "https://api.github.com/users/mungojam/repos", "events_url": "https://api.github.com/users/mungojam/events{/privacy}", "received_events_url": "https://api.github.com/users/mungojam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 799208863, "node_id": "MDU6TGFiZWw3OTkyMDg4NjM=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/documentation", "name": "documentation", "color": "f7e70c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2018-11-03T22:39:22Z", "updated_at": "2019-05-17T02:22:32Z", "closed_at": "2018-11-05T13:24:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen using a blueprint with multiple workers on windows, sanic fails on startup due to a failure to pickle the route:\r\n\r\n> Exception has occurred: _pickle.PicklingError\r\nCan't pickle <class 'sanic.blueprints.Route'>: attribute lookup Route on sanic.blueprints failed\r\n\r\n\r\n**Code snippet**\r\n```python\r\nfrom sanic import Sanic\r\nfrom sanic import Blueprint\r\nfrom sanic.response import json\r\n\r\nblueprint = Blueprint(\"API_blueprint\")\r\n\r\n@blueprint.route(\"/\")\r\nasync def test(request):\r\n    return json({\"hello\": \"world\"})\r\n\r\napp = Sanic()\r\n\r\napp.blueprint(blueprint)\r\n\r\ndef main():\r\n    app.run(workers=2)\r\n```\r\n\r\n**Expected behavior**\r\nIt should be possible to run with multiple workers using blueprints in the same way as it is using the sanic app object directly\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Windows\r\n - Version 7\r\n\r\n\r\n**Additional context**\r\nA similar issue with pickling was [recently fixed](https://github.com/ashleysommer/sanic-cors/issues/14#issuecomment-434968189) in sanic-cors. No idea if the resolution to that one will be helpful\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1392/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1381", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1381/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1381/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1381/events", "html_url": "https://github.com/sanic-org/sanic/issues/1381", "id": 374023508, "node_id": "MDU6SXNzdWUzNzQwMjM1MDg=", "number": 1381, "title": "Auto reload causes debuggers not to attach properly", "user": {"login": "jared-mackey", "id": 10620022, "node_id": "MDQ6VXNlcjEwNjIwMDIy", "avatar_url": "https://avatars.githubusercontent.com/u/10620022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jared-mackey", "html_url": "https://github.com/jared-mackey", "followers_url": "https://api.github.com/users/jared-mackey/followers", "following_url": "https://api.github.com/users/jared-mackey/following{/other_user}", "gists_url": "https://api.github.com/users/jared-mackey/gists{/gist_id}", "starred_url": "https://api.github.com/users/jared-mackey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jared-mackey/subscriptions", "organizations_url": "https://api.github.com/users/jared-mackey/orgs", "repos_url": "https://api.github.com/users/jared-mackey/repos", "events_url": "https://api.github.com/users/jared-mackey/events{/privacy}", "received_events_url": "https://api.github.com/users/jared-mackey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 382692933, "node_id": "MDU6TGFiZWwzODI2OTI5MzM=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}, {"id": 464641209, "node_id": "MDU6TGFiZWw0NjQ2NDEyMDk=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/needs%20investigation", "name": "needs investigation", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-25T16:08:48Z", "updated_at": "2019-11-17T16:07:06Z", "closed_at": "2018-12-27T21:13:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen in debug mode, the auto reload functionality seems to break debuggers such as PyCharm.\r\n\r\n\r\n**Expected behavior**\r\nAuto reload and debugger support.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: MacOS\r\n - Version: 0.8.3\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1381/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1380", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1380/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1380/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1380/events", "html_url": "https://github.com/sanic-org/sanic/issues/1380", "id": 373848406, "node_id": "MDU6SXNzdWUzNzM4NDg0MDY=", "number": 1380, "title": "Port not provided in URLs produced with `url_for`", "user": {"login": "eric-spitler", "id": 1396382, "node_id": "MDQ6VXNlcjEzOTYzODI=", "avatar_url": "https://avatars.githubusercontent.com/u/1396382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eric-spitler", "html_url": "https://github.com/eric-spitler", "followers_url": "https://api.github.com/users/eric-spitler/followers", "following_url": "https://api.github.com/users/eric-spitler/following{/other_user}", "gists_url": "https://api.github.com/users/eric-spitler/gists{/gist_id}", "starred_url": "https://api.github.com/users/eric-spitler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eric-spitler/subscriptions", "organizations_url": "https://api.github.com/users/eric-spitler/orgs", "repos_url": "https://api.github.com/users/eric-spitler/repos", "events_url": "https://api.github.com/users/eric-spitler/events{/privacy}", "received_events_url": "https://api.github.com/users/eric-spitler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 382692935, "node_id": "MDU6TGFiZWwzODI2OTI5MzU=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}, {"id": 464611475, "node_id": "MDU6TGFiZWw0NjQ2MTE0NzU=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/beginner", "name": "beginner", "color": "c2e0c6", "default": false, "description": null}, {"id": 464612226, "node_id": "MDU6TGFiZWw0NjQ2MTIyMjY=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/nice%20to%20have", "name": "nice to have", "color": "1d76db", "default": false, "description": null}, {"id": 799208863, "node_id": "MDU6TGFiZWw3OTkyMDg4NjM=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/documentation", "name": "documentation", "color": "f7e70c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/sanic-org/sanic/milestones/15", "html_url": "https://github.com/sanic-org/sanic/milestone/15", "labels_url": "https://api.github.com/repos/sanic-org/sanic/milestones/15/labels", "id": 3691989, "node_id": "MDk6TWlsZXN0b25lMzY5MTk4OQ==", "number": 15, "title": "19.3", "description": "", "creator": {"login": "sjsadowski", "id": 857480, "node_id": "MDQ6VXNlcjg1NzQ4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/857480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjsadowski", "html_url": "https://github.com/sjsadowski", "followers_url": "https://api.github.com/users/sjsadowski/followers", "following_url": "https://api.github.com/users/sjsadowski/following{/other_user}", "gists_url": "https://api.github.com/users/sjsadowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjsadowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjsadowski/subscriptions", "organizations_url": "https://api.github.com/users/sjsadowski/orgs", "repos_url": "https://api.github.com/users/sjsadowski/repos", "events_url": "https://api.github.com/users/sjsadowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sjsadowski/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2018-09-27T00:59:03Z", "updated_at": "2021-12-26T10:17:56Z", "due_on": null, "closed_at": "2019-05-23T20:31:00Z"}, "comments": 15, "created_at": "2018-10-25T09:14:14Z", "updated_at": "2021-03-10T09:19:38Z", "closed_at": "2021-03-10T09:19:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nThe default port for a Sanic app is 8000, which by HTTP standards is a custom port. This port can also be set during calls to `app.run()`.\r\n\r\nWhen using `app.url_for('handler.name', _external=True)`, the resultant URL does **not** contain the port without manual intervention.\r\n\r\nThis line is the final step before the application returns the URL. The URL is build using `urlunparse` which takes a `tuple` of values as would be producted by [urlparse](https://docs.python.org/3.6/library/urllib.parse.html#urllib.parse.urlparse). The snippet below shows that only the first 6 arguments are provided, which does not include the port (unless included as part of `netloc`).\r\nhttps://github.com/huge-success/sanic/blob/905c51bef03818c629173938a1183b38dd0ebc65/sanic/app.py#L695\r\n\r\nIn order to get port, the value of `app.confg.SERVER_NAME` **must** be set to the hostname and port\r\n```python\r\napp.config.SERVER_NAME = '{}:{}'.format(host, port)\r\napp.run(host=host, port=port)\r\n```\r\nThus, the default behavior for creating the URL is incorrect as it requires manual attribute setting for every single application.\r\n\r\n**Expected behavior**\r\nCalls to `app.url_for()` with the `_external` flag should build the correct URL, including the port number, such as `http://hostname:8000` without forcing every application to specify the `SERVER_NAME` config attribute.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: CentOS 7.5\r\n - Version 0.7.0", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1380/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1359", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1359/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1359/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1359/events", "html_url": "https://github.com/sanic-org/sanic/issues/1359", "id": 369249041, "node_id": "MDU6SXNzdWUzNjkyNDkwNDE=", "number": 1359, "title": "Multiple identical route variables", "user": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 382692934, "node_id": "MDU6TGFiZWwzODI2OTI5MzQ=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 464653269, "node_id": "MDU6TGFiZWw0NjQ2NTMyNjk=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/idea%20discussion", "name": "idea discussion", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-11T18:27:56Z", "updated_at": "2018-10-13T18:45:00Z", "closed_at": "2018-10-13T18:45:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Problem\r\n\r\nCurrently, the router allows you to define the same variable multiple times in a route. What happens if you do? It simply grabs the last one.\r\n\r\nLet me show you what I mean:\r\n\r\n```from sanic import Blueprint, Sanic\r\nfrom sanic.response import text\r\n\r\napp = Sanic(__name__)\r\n\r\n\r\n@app.get(\"/<test>/<test>\")\r\nasync def multiple_identical_variables(request, test):\r\n   return text(test)\r\n\r\n\r\nif __name__ == '__main__':\r\n   app.run(host=\"0.0.0.0\", port=1234)\r\n```\r\n\r\nThen query it:\r\n\r\n```\r\n$ curl localhost:1234/foo/bar\r\nbar\r\n```\r\n\r\n### Expected outcome\r\n\r\nI think that the server should (at a minimum) throw me a warning that there is a route that potentially will dome something unintended on it. Taking that one step further, I sort of feel like it should raise an exception.\r\n\r\nI am thinking more in terms of nested blueprints with conflicting `url_prefix`. Without a notice of some sort, I think this has the potential to be a difficult bug for someone to identify.", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1359/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1356", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1356/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1356/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1356/events", "html_url": "https://github.com/sanic-org/sanic/issues/1356", "id": 368996369, "node_id": "MDU6SXNzdWUzNjg5OTYzNjk=", "number": 1356, "title": "Add '%' to quote_plus's `safe` parameter in response.redirect", "user": {"login": "denglj", "id": 13680853, "node_id": "MDQ6VXNlcjEzNjgwODUz", "avatar_url": "https://avatars.githubusercontent.com/u/13680853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denglj", "html_url": "https://github.com/denglj", "followers_url": "https://api.github.com/users/denglj/followers", "following_url": "https://api.github.com/users/denglj/following{/other_user}", "gists_url": "https://api.github.com/users/denglj/gists{/gist_id}", "starred_url": "https://api.github.com/users/denglj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denglj/subscriptions", "organizations_url": "https://api.github.com/users/denglj/orgs", "repos_url": "https://api.github.com/users/denglj/repos", "events_url": "https://api.github.com/users/denglj/events{/privacy}", "received_events_url": "https://api.github.com/users/denglj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1070193329, "node_id": "MDU6TGFiZWwxMDcwMTkzMzI5", "url": "https://api.github.com/repos/sanic-org/sanic/labels/information%20required", "name": "information required", "color": "443ce8", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "sjsadowski", "id": 857480, "node_id": "MDQ6VXNlcjg1NzQ4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/857480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjsadowski", "html_url": "https://github.com/sjsadowski", "followers_url": "https://api.github.com/users/sjsadowski/followers", "following_url": "https://api.github.com/users/sjsadowski/following{/other_user}", "gists_url": "https://api.github.com/users/sjsadowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjsadowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjsadowski/subscriptions", "organizations_url": "https://api.github.com/users/sjsadowski/orgs", "repos_url": "https://api.github.com/users/sjsadowski/repos", "events_url": "https://api.github.com/users/sjsadowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sjsadowski/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sjsadowski", "id": 857480, "node_id": "MDQ6VXNlcjg1NzQ4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/857480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjsadowski", "html_url": "https://github.com/sjsadowski", "followers_url": "https://api.github.com/users/sjsadowski/followers", "following_url": "https://api.github.com/users/sjsadowski/following{/other_user}", "gists_url": "https://api.github.com/users/sjsadowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjsadowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjsadowski/subscriptions", "organizations_url": "https://api.github.com/users/sjsadowski/orgs", "repos_url": "https://api.github.com/users/sjsadowski/repos", "events_url": "https://api.github.com/users/sjsadowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sjsadowski/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-10-11T07:56:22Z", "updated_at": "2018-10-23T22:12:03Z", "closed_at": "2018-10-23T22:12:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/huge-success/sanic/blob/30e6a310f132752669a74927530e8bc52a51e98e/sanic/response.py#L367\r\n\r\n```\r\nfrom urllib.parse import urlencode\r\nargs = urlencode({\"redirect_uri\": \"http://example.com\"})\r\nresponse.redirect(...args...)\r\n>>> 'redirect_uri=http%253A%252F%252Fexample.com'\r\n```\r\nIn this case it will be `quote_plus` twice, and generate extra '%25'\u3002", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1356/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1326", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1326/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1326/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1326/events", "html_url": "https://github.com/sanic-org/sanic/issues/1326", "id": 363681911, "node_id": "MDU6SXNzdWUzNjM2ODE5MTE=", "number": 1326, "title": "Rename modules to not conflict with the standard library", "user": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/sanic-org/sanic/milestones/13", "html_url": "https://github.com/sanic-org/sanic/milestone/13", "labels_url": "https://api.github.com/repos/sanic-org/sanic/milestones/13/labels", "id": 3688222, "node_id": "MDk6TWlsZXN0b25lMzY4ODIyMg==", "number": 13, "title": "18.12 LTS", "description": "Milestone for initial CalVer LTS release", "creator": {"login": "sjsadowski", "id": 857480, "node_id": "MDQ6VXNlcjg1NzQ4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/857480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjsadowski", "html_url": "https://github.com/sjsadowski", "followers_url": "https://api.github.com/users/sjsadowski/followers", "following_url": "https://api.github.com/users/sjsadowski/following{/other_user}", "gists_url": "https://api.github.com/users/sjsadowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjsadowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjsadowski/subscriptions", "organizations_url": "https://api.github.com/users/sjsadowski/orgs", "repos_url": "https://api.github.com/users/sjsadowski/repos", "events_url": "https://api.github.com/users/sjsadowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sjsadowski/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 13, "state": "closed", "created_at": "2018-09-25T19:05:53Z", "updated_at": "2018-12-27T21:00:44Z", "due_on": "2018-12-22T08:00:00Z", "closed_at": "2018-12-27T20:59:25Z"}, "comments": 2, "created_at": "2018-09-25T17:15:06Z", "updated_at": "2018-10-10T12:01:21Z", "closed_at": "2018-10-10T12:01:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As discovered by Issues #1323, there are modules that are named as the same as [standard library modules](https://docs.python.org/3/library/index.html).\r\n\r\nIn particular, [`http.py`](https://github.com/huge-success/sanic/blob/master/sanic/http.py) conflicts with [`http`](https://docs.python.org/3/library/http.html).\r\n\r\nWe should rename `http.py` to `helpers.py` or something that will not conflict.", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1326/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1323", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1323/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1323/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1323/events", "html_url": "https://github.com/sanic-org/sanic/issues/1323", "id": 361950504, "node_id": "MDU6SXNzdWUzNjE5NTA1MDQ=", "number": 1323, "title": "Trouble with import conflict in request.py", "user": {"login": "hatarist", "id": 2741725, "node_id": "MDQ6VXNlcjI3NDE3MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/2741725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hatarist", "html_url": "https://github.com/hatarist", "followers_url": "https://api.github.com/users/hatarist/followers", "following_url": "https://api.github.com/users/hatarist/following{/other_user}", "gists_url": "https://api.github.com/users/hatarist/gists{/gist_id}", "starred_url": "https://api.github.com/users/hatarist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hatarist/subscriptions", "organizations_url": "https://api.github.com/users/hatarist/orgs", "repos_url": "https://api.github.com/users/hatarist/repos", "events_url": "https://api.github.com/users/hatarist/events{/privacy}", "received_events_url": "https://api.github.com/users/hatarist/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-09-19T22:23:36Z", "updated_at": "2018-10-04T15:58:30Z", "closed_at": "2018-09-25T17:17:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nTraceback (most recent call last):\r\n  File \"/env/lib/python3.6/site-packages/sanic/__main__.py\", line 4, in <module>\r\n    from sanic.log import logger\r\n  File \"/env/lib/python3.6/site-packages/sanic/__init__.py\", line 1, in <module>\r\n    from sanic.app import Sanic\r\n  File \"/env/lib/python3.6/site-packages/sanic/app.py\", line 21, in <module>\r\n    from sanic.server import serve, serve_multiple, HttpProtocol, Signal\r\n  File \"/env/lib/python3.6/site-packages/sanic/server.py\", line 31, in <module>\r\n    from sanic.request import Request\r\n  File \"/env/lib/python3.6/site-packages/sanic/request.py\", line 6, in <module>\r\n    from http.cookies import SimpleCookie\r\nModuleNotFoundError: No module named 'http.cookies'; 'http' is not a package\r\n```\r\n\r\nIt seems it tries to use sanic's `http.py` instead of the builtin Python library. The `http.py` itself is used only twice, in the `response.py` & `exceptions.py`.\r\nAm I missing something and/or have something misconfigured? \r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1323/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1194", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1194/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1194/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1194/events", "html_url": "https://github.com/sanic-org/sanic/issues/1194", "id": 315206856, "node_id": "MDU6SXNzdWUzMTUyMDY4NTY=", "number": 1194, "title": "Ability to send Content-Length header when streaming large files", "user": {"login": "simonw", "id": 9599, "node_id": "MDQ6VXNlcjk1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/9599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonw", "html_url": "https://github.com/simonw", "followers_url": "https://api.github.com/users/simonw/followers", "following_url": "https://api.github.com/users/simonw/following{/other_user}", "gists_url": "https://api.github.com/users/simonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonw/subscriptions", "organizations_url": "https://api.github.com/users/simonw/orgs", "repos_url": "https://api.github.com/users/simonw/repos", "events_url": "https://api.github.com/users/simonw/events{/privacy}", "received_events_url": "https://api.github.com/users/simonw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 464641209, "node_id": "MDU6TGFiZWw0NjQ2NDEyMDk=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/needs%20investigation", "name": "needs investigation", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-17T19:53:10Z", "updated_at": "2019-04-30T21:56:28Z", "closed_at": "2019-04-30T21:56:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the `response.file_stream(...)` function to serve a large (often 100MB-ish) file for download, and I noticed that I'm not getting a `Content-Length` header even if I manually include one in the call to that function.\r\n\r\nWithout a Content-Length header, tools like `wget` and `curl` or browser download interfaces are unable to show my user's a progress bar indicating how long the file will take to download.\r\n\r\nMy code looks like this:\r\n\r\n        return await response.file_stream(\r\n            location=filepath,\r\n            headers={\r\n                'Content-Length': os.path.getsize(filepath),\r\n            },\r\n            filename=os.path.basename(filepath),\r\n            mime_type='application/octet-stream''\r\n        )\r\n\r\nIt looks like the `Content-Length` header I calculated is being removed here:\r\n\r\nhttps://github.com/channelcat/sanic/blob/8b920d9d5683467b89fda2bd463656b1846a9059/sanic/response.py#L148-L157\r\n\r\nI'd like to be able to include this header when I serve large files.", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1194/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1194/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1189", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1189/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1189/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1189/events", "html_url": "https://github.com/sanic-org/sanic/issues/1189", "id": 311742647, "node_id": "MDU6SXNzdWUzMTE3NDI2NDc=", "number": 1189, "title": "vhost using blueprints with nonstandard port does not work as documented", "user": {"login": "mashaalmemon", "id": 18560240, "node_id": "MDQ6VXNlcjE4NTYwMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/18560240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mashaalmemon", "html_url": "https://github.com/mashaalmemon", "followers_url": "https://api.github.com/users/mashaalmemon/followers", "following_url": "https://api.github.com/users/mashaalmemon/following{/other_user}", "gists_url": "https://api.github.com/users/mashaalmemon/gists{/gist_id}", "starred_url": "https://api.github.com/users/mashaalmemon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mashaalmemon/subscriptions", "organizations_url": "https://api.github.com/users/mashaalmemon/orgs", "repos_url": "https://api.github.com/users/mashaalmemon/repos", "events_url": "https://api.github.com/users/mashaalmemon/events{/privacy}", "received_events_url": "https://api.github.com/users/mashaalmemon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 799208863, "node_id": "MDU6TGFiZWw3OTkyMDg4NjM=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/documentation", "name": "documentation", "color": "f7e70c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sjsadowski", "id": 857480, "node_id": "MDQ6VXNlcjg1NzQ4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/857480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjsadowski", "html_url": "https://github.com/sjsadowski", "followers_url": "https://api.github.com/users/sjsadowski/followers", "following_url": "https://api.github.com/users/sjsadowski/following{/other_user}", "gists_url": "https://api.github.com/users/sjsadowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjsadowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjsadowski/subscriptions", "organizations_url": "https://api.github.com/users/sjsadowski/orgs", "repos_url": "https://api.github.com/users/sjsadowski/repos", "events_url": "https://api.github.com/users/sjsadowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sjsadowski/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sjsadowski", "id": 857480, "node_id": "MDQ6VXNlcjg1NzQ4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/857480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjsadowski", "html_url": "https://github.com/sjsadowski", "followers_url": "https://api.github.com/users/sjsadowski/followers", "following_url": "https://api.github.com/users/sjsadowski/following{/other_user}", "gists_url": "https://api.github.com/users/sjsadowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjsadowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjsadowski/subscriptions", "organizations_url": "https://api.github.com/users/sjsadowski/orgs", "repos_url": "https://api.github.com/users/sjsadowski/repos", "events_url": "https://api.github.com/users/sjsadowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sjsadowski/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/sanic-org/sanic/milestones/16", "html_url": "https://github.com/sanic-org/sanic/milestone/16", "labels_url": "https://api.github.com/repos/sanic-org/sanic/milestones/16/labels", "id": 4105227, "node_id": "MDk6TWlsZXN0b25lNDEwNTIyNw==", "number": 16, "title": "19.6", "description": null, "creator": {"login": "sjsadowski", "id": 857480, "node_id": "MDQ6VXNlcjg1NzQ4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/857480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjsadowski", "html_url": "https://github.com/sjsadowski", "followers_url": "https://api.github.com/users/sjsadowski/followers", "following_url": "https://api.github.com/users/sjsadowski/following{/other_user}", "gists_url": "https://api.github.com/users/sjsadowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjsadowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjsadowski/subscriptions", "organizations_url": "https://api.github.com/users/sjsadowski/orgs", "repos_url": "https://api.github.com/users/sjsadowski/repos", "events_url": "https://api.github.com/users/sjsadowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sjsadowski/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 11, "state": "closed", "created_at": "2019-03-03T20:24:56Z", "updated_at": "2021-03-10T09:19:38Z", "due_on": null, "closed_at": "2020-07-24T12:12:11Z"}, "comments": 0, "created_at": "2018-04-05T19:39:07Z", "updated_at": "2021-03-10T09:19:38Z", "closed_at": "2021-03-10T09:19:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that when I followed the example given in the sanic repo for vhosts [here](https://github.com/channelcat/sanic/blob/master/examples/vhosts.py). Taking some exerpts from this example below, I modified my ```/etc/hosts``` file to point ```bp.example.com``` to ```127.0.0.1``` for testing.\r\n\r\nI've shortened that example to illustrate the issue:\r\n\r\n```\r\napp = Sanic()\r\nbp = Blueprint(\"bp\", host=\"bp.example.com\")\r\n\r\n@bp.route(\"/question\")\r\nasync def hello(request):\r\n    return response.text(\"What is the meaning of life?\")\r\n\r\n@bp.route(\"/answer\")\r\nasync def hello(request):\r\n    return response.text(\"42\")\r\n\r\napp.blueprint(bp)\r\n\r\nif __name__ == '__main__':\r\n    app.run(host=\"0.0.0.0\", port=8000)\r\n```\r\n\r\nWhat I found was, this example didn't work. I was getting errors like this:\r\n\r\n```\r\nError: Requested URL /answer not found\r\n```\r\n\r\nDigging deeper into the code, apparently the code is looking at the ```Host:``` header to decide if it has a route for a particular host. In the case of nonstandard ports (not 80 or 443), the ```Host:``` header has the ports appended. What would make this example work is changing one line:\r\n\r\n```\r\nbp = Blueprint(\"bp\", host=\"bp.example.com:8000\")\r\n```\r\n\r\nIt is worth documenting this. A better fix might be perhaps added a ```port``` option to the Blueprint constructor when the port is non-standard.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1189/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1151", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1151/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1151/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1151/events", "html_url": "https://github.com/sanic-org/sanic/issues/1151", "id": 302211142, "node_id": "MDU6SXNzdWUzMDIyMTExNDI=", "number": 1151, "title": "`request` in exception handler is None", "user": {"login": "Luftzig", "id": 3384761, "node_id": "MDQ6VXNlcjMzODQ3NjE=", "avatar_url": "https://avatars.githubusercontent.com/u/3384761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Luftzig", "html_url": "https://github.com/Luftzig", "followers_url": "https://api.github.com/users/Luftzig/followers", "following_url": "https://api.github.com/users/Luftzig/following{/other_user}", "gists_url": "https://api.github.com/users/Luftzig/gists{/gist_id}", "starred_url": "https://api.github.com/users/Luftzig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Luftzig/subscriptions", "organizations_url": "https://api.github.com/users/Luftzig/orgs", "repos_url": "https://api.github.com/users/Luftzig/repos", "events_url": "https://api.github.com/users/Luftzig/events{/privacy}", "received_events_url": "https://api.github.com/users/Luftzig/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/sanic-org/sanic/milestones/14", "html_url": "https://github.com/sanic-org/sanic/milestone/14", "labels_url": "https://api.github.com/repos/sanic-org/sanic/milestones/14/labels", "id": 3688416, "node_id": "MDk6TWlsZXN0b25lMzY4ODQxNg==", "number": 14, "title": "Future Release", "description": null, "creator": {"login": "ahopkins", "id": 166269, "node_id": "MDQ6VXNlcjE2NjI2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahopkins", "html_url": "https://github.com/ahopkins", "followers_url": "https://api.github.com/users/ahopkins/followers", "following_url": "https://api.github.com/users/ahopkins/following{/other_user}", "gists_url": "https://api.github.com/users/ahopkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahopkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahopkins/subscriptions", "organizations_url": "https://api.github.com/users/ahopkins/orgs", "repos_url": "https://api.github.com/users/ahopkins/repos", "events_url": "https://api.github.com/users/ahopkins/events{/privacy}", "received_events_url": "https://api.github.com/users/ahopkins/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 12, "state": "open", "created_at": "2018-09-25T20:13:00Z", "updated_at": "2022-12-31T09:28:51Z", "due_on": null, "closed_at": null}, "comments": 6, "created_at": "2018-03-05T08:35:42Z", "updated_at": "2021-01-11T13:10:22Z", "closed_at": "2021-01-11T13:10:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have the following request handler:\r\n```\r\n        @self._app.exception(Exception)\r\n        def to_json(request, exception):\r\n            if request:\r\n                error_logger.exception(log_message(request, exception))\r\n                return json({\"error\": str(exception), \"request\": request.body},\r\n                            status=exception.status_code if hasattr(exception, 'status_code') else 500)\r\n            else:\r\n                error_logger.exception(\"Error occurred outside request handling %s\" % exception)\r\n                return json({\"error\": str(exception)},\r\n                            status=exception.status_code if hasattr(exception, 'status_code') else 500)\r\n```\r\nFor some reason I see errors handled by the `else` branch, specifically this:\r\n\r\n    aiohttp.client_exceptions.ClientResponseError: 404, message='Not Found'\r\n\r\nI need the context of the incoming request because I include a header with a request ID propagated to all services involved.\r\n\r\nExpect Behaviour:\r\n\r\nrequest should not be None when handling errors originated from aiohttp.\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1151/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1139", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1139/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1139/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1139/events", "html_url": "https://github.com/sanic-org/sanic/issues/1139", "id": 299305421, "node_id": "MDU6SXNzdWUyOTkzMDU0MjE=", "number": 1139, "title": "Static files handling makes a mistake when deal with \"Range: bytes=0-\" headers.", "user": {"login": "ryanrain2016", "id": 22925589, "node_id": "MDQ6VXNlcjIyOTI1NTg5", "avatar_url": "https://avatars.githubusercontent.com/u/22925589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanrain2016", "html_url": "https://github.com/ryanrain2016", "followers_url": "https://api.github.com/users/ryanrain2016/followers", "following_url": "https://api.github.com/users/ryanrain2016/following{/other_user}", "gists_url": "https://api.github.com/users/ryanrain2016/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanrain2016/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanrain2016/subscriptions", "organizations_url": "https://api.github.com/users/ryanrain2016/orgs", "repos_url": "https://api.github.com/users/ryanrain2016/repos", "events_url": "https://api.github.com/users/ryanrain2016/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanrain2016/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-22T10:48:51Z", "updated_at": "2019-02-08T19:32:43Z", "closed_at": "2019-02-08T19:32:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use the code below to deal with static files with  request with \"Range: 0-\" headers.\r\n```python\r\n@app.route(\"/media/<filename>\")\r\nasync def static(request, filename):\r\n    filename = os.path.join('media',  filename)\r\n    stats = await stat(filename)\r\n    _range = None\r\n    try:\r\n        _range = ContentRangeHandler(request, stats)\r\n    except HeaderNotFound:\r\n        pass\r\n    else:\r\n        # _range.end -= 1\r\n    resp = await sanic.response.file_stream(filename, _range=_range)\r\n    # if _range: resp.status=206\r\n    return resp\r\n```\r\nBut unfortunately, it doesn't work as expected.\r\nAssume the file size is 1024 bytes.  \r\nFirstly, the `_range`  returned by `ContentRangeHandler` in the code produces a header 'Range: bytes 0-1024/1024', which exactly should be 'Range: bytes 0-1023/1024'. I should add `_range.end -= 1` to fix it.When dealing with video files, this mistake will make video on browsers un-seekable.\r\nSecondly, If `_range`  is not None, the `file_stream` returns a `StreamingHTTPResponse` with a status 200. I should change is to 206 by myself , which is annoying.", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1139/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1120", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1120/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1120/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1120/events", "html_url": "https://github.com/sanic-org/sanic/issues/1120", "id": 295831355, "node_id": "MDU6SXNzdWUyOTU4MzEzNTU=", "number": 1120, "title": "Passing the list into route decorator's host argument", "user": {"login": "mexicarne", "id": 1031992, "node_id": "MDQ6VXNlcjEwMzE5OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1031992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mexicarne", "html_url": "https://github.com/mexicarne", "followers_url": "https://api.github.com/users/mexicarne/followers", "following_url": "https://api.github.com/users/mexicarne/following{/other_user}", "gists_url": "https://api.github.com/users/mexicarne/gists{/gist_id}", "starred_url": "https://api.github.com/users/mexicarne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mexicarne/subscriptions", "organizations_url": "https://api.github.com/users/mexicarne/orgs", "repos_url": "https://api.github.com/users/mexicarne/repos", "events_url": "https://api.github.com/users/mexicarne/events{/privacy}", "received_events_url": "https://api.github.com/users/mexicarne/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-09T10:57:10Z", "updated_at": "2018-09-13T08:18:13Z", "closed_at": "2018-02-16T19:12:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\naccording to the [docs](http://sanic.readthedocs.io/en/latest/sanic/routing.html#http-request-types) :\r\n> There is also an optional host argument (which can be a list or a string)\r\n\r\nBut if I try to pass a list into host argument, I got \r\n```python\r\nFile \"/path/lib/python3.6/site-packages/sanic/router.py\", line 216, in merge_route\r\n    uri, ','.join(list(duplicated))))\r\nsanic.router.RouteExists: Route already registered: test.com/post/ [POST]\r\n```\r\n\r\nHere is the test sample:\r\n```python\r\nfrom sanic import Sanic\r\nfrom sanic.response import text\r\n\r\napp = Sanic()\r\n\r\n@app.route('/post', methods=['POST'], host=['test.com', 'test2.com'])\r\nasync def post_handler(request):\r\n    return text('POST request for test.com - {}'.format(request.json))\r\n\r\n@app.route('/post', methods=['POST'])\r\nasync def post_handler(request):\r\n    return text('POST request for default - {}'.format(request.json))\r\n\r\nif __name__ == '__main__':\r\n    app.run(host='127.0.0.1', port=8000)\r\n```\r\n\r\nI get the same exception if I'm passing the list with single value in it (`host=['test.com']`). Everything works as expected if host argument is a string though. Am I doing something wrong or it's a bug in documentation/sanic?\r\n\r\nSanic is installed from pip: sanic==0.7.0", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1120/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1120/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1102", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1102/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1102/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1102/events", "html_url": "https://github.com/sanic-org/sanic/issues/1102", "id": 292189081, "node_id": "MDU6SXNzdWUyOTIxODkwODE=", "number": 1102, "title": "How to response 204 using response.json() ", "user": {"login": "alaminopu", "id": 1296554, "node_id": "MDQ6VXNlcjEyOTY1NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1296554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alaminopu", "html_url": "https://github.com/alaminopu", "followers_url": "https://api.github.com/users/alaminopu/followers", "following_url": "https://api.github.com/users/alaminopu/following{/other_user}", "gists_url": "https://api.github.com/users/alaminopu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alaminopu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alaminopu/subscriptions", "organizations_url": "https://api.github.com/users/alaminopu/orgs", "repos_url": "https://api.github.com/users/alaminopu/repos", "events_url": "https://api.github.com/users/alaminopu/events{/privacy}", "received_events_url": "https://api.github.com/users/alaminopu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-01-28T08:53:05Z", "updated_at": "2018-09-13T08:18:12Z", "closed_at": "2018-02-02T21:21:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Usually the `DELETE` request should return a [204](https://httpstatuses.com/204) response. How can I send 204 response using sanic. I was trying something like below. \r\n\r\n```python\r\nreturn response.json(\r\n        None,\r\n        status=204\r\n    )\r\n```\r\n\r\nBut it doesn't work, it response with null. \r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1102/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1102/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1089", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1089/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1089/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1089/events", "html_url": "https://github.com/sanic-org/sanic/issues/1089", "id": 288575841, "node_id": "MDU6SXNzdWUyODg1NzU4NDE=", "number": 1089, "title": "Wrong parameter when there are handlers with the same pattern but difference parameters", "user": {"login": "phatthana", "id": 722351, "node_id": "MDQ6VXNlcjcyMjM1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/722351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phatthana", "html_url": "https://github.com/phatthana", "followers_url": "https://api.github.com/users/phatthana/followers", "following_url": "https://api.github.com/users/phatthana/following{/other_user}", "gists_url": "https://api.github.com/users/phatthana/gists{/gist_id}", "starred_url": "https://api.github.com/users/phatthana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phatthana/subscriptions", "organizations_url": "https://api.github.com/users/phatthana/orgs", "repos_url": "https://api.github.com/users/phatthana/repos", "events_url": "https://api.github.com/users/phatthana/events{/privacy}", "received_events_url": "https://api.github.com/users/phatthana/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-15T12:18:49Z", "updated_at": "2018-09-13T08:18:11Z", "closed_at": "2018-01-17T08:19:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example, I have these handlers\r\n```\r\n@app.route('/ads/<ad_id>', methods=['GET'])\r\nasync def ad_get(request, ad_id):\r\n    return json({'ad_id': ad_id})\r\n\r\n@app.route('/ads/<action>', methods=['POST'])\r\nasync def ad_post(request, action):\r\n    return json({'action': action})\r\n```\r\nwhen I call `POST /ads/some_action` it call `ad_post` but with `ad_id` parameter.\r\n\r\nThis is error I got,\r\n```\r\n  File \"/Users/phatthana/Envs/python_http_server/lib/python3.5/site-packages/sanic/app.py\", line 554, in handle_request\r\n    response = handler(request, *args, **kwargs)\r\nTypeError: ad_post() got an unexpected keyword argument 'ad_id'\r\n```", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1089/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1065", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1065/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1065/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1065/events", "html_url": "https://github.com/sanic-org/sanic/issues/1065", "id": 284088729, "node_id": "MDU6SXNzdWUyODQwODg3Mjk=", "number": 1065, "title": "app.add_task() working ?", "user": {"login": "bourdeau", "id": 1926353, "node_id": "MDQ6VXNlcjE5MjYzNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1926353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bourdeau", "html_url": "https://github.com/bourdeau", "followers_url": "https://api.github.com/users/bourdeau/followers", "following_url": "https://api.github.com/users/bourdeau/following{/other_user}", "gists_url": "https://api.github.com/users/bourdeau/gists{/gist_id}", "starred_url": "https://api.github.com/users/bourdeau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bourdeau/subscriptions", "organizations_url": "https://api.github.com/users/bourdeau/orgs", "repos_url": "https://api.github.com/users/bourdeau/repos", "events_url": "https://api.github.com/users/bourdeau/events{/privacy}", "received_events_url": "https://api.github.com/users/bourdeau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-22T07:08:49Z", "updated_at": "2018-09-13T08:18:09Z", "closed_at": "2017-12-22T07:44:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there!\r\n\r\nI'm very new to Pyhon and even more to Sanic (great job btw guys!) but I'm having a little problem with add_task().\r\n\r\n```python\r\nfrom sanic import Blueprint\r\nfrom sanic.response import json\r\nfrom app import app\r\nfrom sanic import response\r\nfrom PIL import Image\r\n\r\nmain = Blueprint('main')\r\n\r\n@main.route(\"/\")\r\nasync def home(request):\r\n\r\n    await image('await') # Ok. Properly create an image\r\n    app.add_task(image('task')) # No image creation\r\n\r\n    return json({\"data\": \"Ok\"})\r\n\r\nasync def image(name):\r\n    new_im = Image.new('RGB', (100,200))\r\n    name = \"./image/{}.png\".format(name)\r\n    new_im.save(name, \"PNG\")\r\n```\r\nAny idea what I'm doing wrong here?", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1065/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1065/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1042", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1042/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1042/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1042/events", "html_url": "https://github.com/sanic-org/sanic/issues/1042", "id": 278503538, "node_id": "MDU6SXNzdWUyNzg1MDM1Mzg=", "number": 1042, "title": "Wrong status response when raise exception from catch_404 method", "user": {"login": "rsc1975", "id": 3704272, "node_id": "MDQ6VXNlcjM3MDQyNzI=", "avatar_url": "https://avatars.githubusercontent.com/u/3704272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsc1975", "html_url": "https://github.com/rsc1975", "followers_url": "https://api.github.com/users/rsc1975/followers", "following_url": "https://api.github.com/users/rsc1975/following{/other_user}", "gists_url": "https://api.github.com/users/rsc1975/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsc1975/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsc1975/subscriptions", "organizations_url": "https://api.github.com/users/rsc1975/orgs", "repos_url": "https://api.github.com/users/rsc1975/repos", "events_url": "https://api.github.com/users/rsc1975/events{/privacy}", "received_events_url": "https://api.github.com/users/rsc1975/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-01T15:35:10Z", "updated_at": "2018-09-13T08:18:08Z", "closed_at": "2018-01-14T01:06:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I raise an exception from the catch method (`favicon.ico` request), the raised exception is not correctly processed, I get a 200 status code in the browser, maybe I'm doing something wrong, this is my first time with Sanic.\r\n\r\nI've tested it in v0.6 and @master branch\r\n\r\nMy code:\r\n\r\n```python\r\nfrom sanic import response\r\nfrom sanic.exceptions import NotFound\r\nfrom os.path import dirname, abspath, join\r\nfrom sanic.app import Sanic\r\n\r\n_CURDIR = dirname(abspath(__file__))\r\n\r\nif __name__ == '__main__':\r\n    \r\n    app = Sanic(__name__) \r\n    app.static('', join(_CURDIR, 'static' ))\r\n\r\n    @app.route('/')\r\n    async def index(_):\r\n        return await response.file_stream(join(_CURDIR, 'static', 'index.html'))\r\n    \r\n    @app.exception(NotFound)\r\n    async def catch_404(request, exception):\r\n        if '.' not in request.path:\r\n            return await index(request) #Used for angular routes\r\n        raise exception\r\n\r\n    app.run('0.0.0.0', 5000, debug = True)\r\n\r\n```\r\nThe server log trace:\r\n\r\n```\r\n[2017-12-01 16:26:30 +0100] [14367] [INFO] Goin' Fast @ http://0.0.0.0:5000\r\n[2017-12-01 16:26:30 +0100] [14367] [INFO] Starting worker [14367]\r\n[2017-12-01 16:26:34 +0100] - (sanic.access)[INFO][1:2]: GET http://127.0.0.1:5000/  200 -1\r\n[2017-12-01 16:26:34 +0100] - (sanic.access)[INFO][1:2]: GET http://127.0.0.1:5000/favicon.ico  200 1712\r\n[2017-12-01 16:26:39 +0100] [14367] [INFO] KeepAlive Timeout. Closing connection.\r\n```\r\n\r\nFrom browser I get a 200 status, in plain/text, with the response content:\r\n\r\n```\r\nError while handling error: File not found\r\nStack: Traceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/sanic/static.py\", line 76, in _handler\r\n    stats = await stat(file_path)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/coroutines.py\", line 213, in coro\r\n    res = yield from res\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/concurrent/futures/thread.py\", line 56, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\nFileNotFoundError: [Errno 2] No such file or directory: '/Users/rob/git/GITHUB/zzzz-server/scripts/static/favicon.ico'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/sanic/app.py\", line 565, in handle_request\r\n    response = await response\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/coroutines.py\", line 109, in __next__\r\n    return self.gen.send(None)\r\n  File \"/Users/rob/git/GITHUB/zzzz-server/scripts/dummy.py\", line 21, in catch_all\r\n    raise exception\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/sanic/app.py\", line 556, in handle_request\r\n    response = await response\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/coroutines.py\", line 128, in throw\r\n    return self.gen.throw(type, value, traceback)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/sanic/static.py\", line 120, in _handler\r\n    relative_url=file_uri)\r\nsanic.exceptions.FileNotFound: File not found\r\n```\r\n\r\nI think that the expected behavior should be a 404 response, Am I wrong ?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1042/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1003", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/1003/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/1003/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/1003/events", "html_url": "https://github.com/sanic-org/sanic/issues/1003", "id": 270491872, "node_id": "MDU6SXNzdWUyNzA0OTE4NzI=", "number": 1003, "title": "Unexpected HTTP 405 errors when using shorthand route decorators", "user": {"login": "bow", "id": 343998, "node_id": "MDQ6VXNlcjM0Mzk5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/343998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bow", "html_url": "https://github.com/bow", "followers_url": "https://api.github.com/users/bow/followers", "following_url": "https://api.github.com/users/bow/following{/other_user}", "gists_url": "https://api.github.com/users/bow/gists{/gist_id}", "starred_url": "https://api.github.com/users/bow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bow/subscriptions", "organizations_url": "https://api.github.com/users/bow/orgs", "repos_url": "https://api.github.com/users/bow/repos", "events_url": "https://api.github.com/users/bow/events{/privacy}", "received_events_url": "https://api.github.com/users/bow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-02T00:05:43Z", "updated_at": "2018-09-13T08:18:06Z", "closed_at": "2017-11-04T07:09:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello Sanic folks,\r\n\r\nI've been playing with Sanic recently and stumbled on getting weird 405 HTTP errors on endpoints that have methods defined. This only happens when 1) I use the `app.<http_method>` (e.g. `app.post`) decorator and 2) when I try to query and endpoint with trailing slash and the `strict_slash` option is set to `False` (the default).\r\n\r\nI tried to reproduce the error with a simple case, which I have done as a test [here](https://travis-ci.org/bow/sanic/jobs/296017905). As you can see, the builds are all failing with a similar unexpected HTTP status code error.\r\n\r\nAfter digging a little bit deeper, I think I've pinned this down to [this block of code](https://github.com/channelcat/sanic/blob/master/sanic/router.py#L133) which checks for an existing route using only the URI but without checking the HTTP method. The reason this causes the bug and only when `strict_slashes=False` is because when adding the route for the non-first HTTP method with the slash appended, both boolean checks evaluate to `False`, so the route is not added. However on an actual query, a method check is done and since the route for that method is missing, we have a 405.\r\n\r\nAnyway, [I added the extra HTTP method check](https://github.com/bow/sanic/commit/7bde17aed54fd6b2ed5b48833ba8adc52fc78d21) on a my own branch and [it seems to make the test case pass without breaking anything else](https://travis-ci.org/bow/sanic/builds/296020569).\r\n\r\nWould this fix be useful for Sanic?\r\n\r\nBy the way, I am opening this as an issue since I'm not sure the code and test I've written fit. I'm open to changing it if you think it would fit the rest of the code better and then submit a proper PR :).", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/1003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/1003/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/991", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/991/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/991/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/991/events", "html_url": "https://github.com/sanic-org/sanic/issues/991", "id": 267378356, "node_id": "MDU6SXNzdWUyNjczNzgzNTY=", "number": 991, "title": "Nginx Reverse Proxy + Sanic", "user": {"login": "dsanghan", "id": 6698354, "node_id": "MDQ6VXNlcjY2OTgzNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6698354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsanghan", "html_url": "https://github.com/dsanghan", "followers_url": "https://api.github.com/users/dsanghan/followers", "following_url": "https://api.github.com/users/dsanghan/following{/other_user}", "gists_url": "https://api.github.com/users/dsanghan/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsanghan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsanghan/subscriptions", "organizations_url": "https://api.github.com/users/dsanghan/orgs", "repos_url": "https://api.github.com/users/dsanghan/repos", "events_url": "https://api.github.com/users/dsanghan/events{/privacy}", "received_events_url": "https://api.github.com/users/dsanghan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-10-21T12:57:40Z", "updated_at": "2018-09-13T08:18:06Z", "closed_at": "2017-10-28T11:29:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've setup a Nginx reverse proxy that forwards all HTTPS requests to an HTTP sanic backend using a private IP. We receive about a 10 requests/s and generally see about a 100 established ports on nginx, with about 400 in timeout_wait. In about an hour, we're seeing nginx report a bad gateway and all requests start failing. \r\n\r\nThe error logs start filling with:\r\n```\r\n2017/10/21 11:05:44 [error] 2447#2447: *26440 connect() failed (110: Connection timed out) while connecting to upstream, client: *.*.*.*, server: example.com, request: \"POST /api/negotiate HTTP/1.1\", upstream: \"http://*.*.*.*:12789/api/negotiate\", host: \"example.com:12789\"\r\n2017/10/21 11:05:44 [error] 2446#2446: *25512 connect() failed (110: Connection timed out) while connecting to upstream, client: *.*.*.*, server: example.com, request: \"POST /api/negotiate HTTP/1.1\", upstream: \"http://*.*.*.*:12789/api/negotiate\", host: \"example.com:12789\"\r\n2017/10/21 11:05:44 [error] 2447#2447: *25191 recv() failed (104: Connection reset by peer) while reading response header from upstream, client: *.*.*.*, server: example.com, request: \"POST /api/negotiate HTTP/1.1\", upstream: \"http://*.*.*.*:12789/api/negotiate\", host: \"example.com:12789\"\r\n2017/10/21 11:05:45 [alert] 2446#2446: *25099 open socket #69 left in connection 49\r\n2017/10/21 11:05:45 [alert] 2446#2446: *24467 open socket #18 left in connection 80\r\n2017/10/21 11:05:45 [alert] 2446#2446: *26148 open socket #21 left in connection 119\r\n2017/10/21 11:05:45 [alert] 2446#2446: *25613 open socket #216 left in connection 122/api/\r\n```\r\n\r\nExposing sanic via HTTPs works properly. We only start seeing issues as soon as we put sanic behind the nginx reverse proxy.\r\n\r\nHere's our nginx conf:\r\n```\r\nupstream http_backend {\r\n\tserver *.*.*.*:12789;\r\n\tkeepalive 512;\r\n}\r\n\r\nserver {\r\n\tlisten 12789 ssl;\r\n\tserver_name example.com;\r\n\r\n\tssl on;\r\n\tssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;\r\n\tssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;\r\n\r\n\tkeepalive_timeout 10;\r\n\r\n\tlocation / {\r\n\t\tproxy_http_version 1.1;\r\n\t\tproxy_pass http://http_backend;\r\n\t\tproxy_set_header Host $host;\r\n\t\tproxy_set_header X-Real-IP $remote_addr;\r\n\t\tproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n        \tproxy_set_header X-Forwarded-Proto https;\r\n\t}\r\n}\r\n```\r\n\r\nAny suggestions?", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/991/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/991/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/918", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/918/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/918/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/918/events", "html_url": "https://github.com/sanic-org/sanic/issues/918", "id": 252815519, "node_id": "MDU6SXNzdWUyNTI4MTU1MTk=", "number": 918, "title": "memory leak.", "user": {"login": "larryclean", "id": 18585750, "node_id": "MDQ6VXNlcjE4NTg1NzUw", "avatar_url": "https://avatars.githubusercontent.com/u/18585750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larryclean", "html_url": "https://github.com/larryclean", "followers_url": "https://api.github.com/users/larryclean/followers", "following_url": "https://api.github.com/users/larryclean/following{/other_user}", "gists_url": "https://api.github.com/users/larryclean/gists{/gist_id}", "starred_url": "https://api.github.com/users/larryclean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larryclean/subscriptions", "organizations_url": "https://api.github.com/users/larryclean/orgs", "repos_url": "https://api.github.com/users/larryclean/repos", "events_url": "https://api.github.com/users/larryclean/events{/privacy}", "received_events_url": "https://api.github.com/users/larryclean/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 382692935, "node_id": "MDU6TGFiZWwzODI2OTI5MzU=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-08-25T07:05:24Z", "updated_at": "2020-09-14T06:14:10Z", "closed_at": "2020-09-14T06:14:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use:\r\nsanic 0.6\r\npython-socket.io\r\naioredis\r\naiohttp client\r\nsqlalchemy\r\n\r\nAs my users continue to enter, my thread memory continues to increase. Until the thread crashes.\r\nWhen i use aiohttp +python-socket.io ,this problem does not appear.\r\n\r\n@seemethere Can you help me?", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/918/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/910", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/910/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/910/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/910/events", "html_url": "https://github.com/sanic-org/sanic/issues/910", "id": 252180421, "node_id": "MDU6SXNzdWUyNTIxODA0MjE=", "number": 910, "title": "Disabling debug mode?", "user": {"login": "olalonde", "id": 416585, "node_id": "MDQ6VXNlcjQxNjU4NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olalonde", "html_url": "https://github.com/olalonde", "followers_url": "https://api.github.com/users/olalonde/followers", "following_url": "https://api.github.com/users/olalonde/following{/other_user}", "gists_url": "https://api.github.com/users/olalonde/gists{/gist_id}", "starred_url": "https://api.github.com/users/olalonde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olalonde/subscriptions", "organizations_url": "https://api.github.com/users/olalonde/orgs", "repos_url": "https://api.github.com/users/olalonde/repos", "events_url": "https://api.github.com/users/olalonde/events{/privacy}", "received_events_url": "https://api.github.com/users/olalonde/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 464611821, "node_id": "MDU6TGFiZWw0NjQ2MTE4MjE=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/urgent", "name": "urgent", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-23T07:01:50Z", "updated_at": "2018-09-13T08:18:01Z", "closed_at": "2017-09-09T03:49:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't seem to disable the debug mode, is this normal?\r\n\r\n```python\r\nfrom rise.server.wsgi import app, config\r\n\r\n# config['debug'] = False\r\napp.run(**config)\r\n```\r\n\r\n```bash\r\n{'port': 5000, 'debug': False, 'host': '0.0.0.0'}\r\n2017-08-22 23:59:32 - (sanic)[DEBUG]:\r\n                 \u2584\u2584\u2584\u2584\u2584\r\n        \u2580\u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2584\u2584\u2584       _______________\r\n      \u2584\u2584\u2584\u2584\u2584  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584  /                 \\\r\n     \u2580\u2580\u2580\u2580\u2588\u2588\u2588\u2588\u2588\u258c \u2580\u2590\u2584 \u2580\u2590\u2588 |   Gotta go fast!  |\r\n   \u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2584\u2584 \u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2584\u2588\u2588 | _________________/\r\n   \u2580\u2584\u2584\u2584\u2584\u2584  \u2580\u2580\u2588\u2584\u2580\u2588\u2550\u2550\u2550\u2550\u2588\u2580 |/\r\n        \u2580\u2580\u2580\u2584  \u2580\u2580\u2588\u2588\u2588 \u2580       \u2584\u2584\r\n     \u2584\u2588\u2588\u2588\u2580\u2580\u2588\u2588\u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584 \u2584\u2580\u2580\u2580\u2580\u2580\u2580\u2588\u258c\r\n   \u2588\u2588\u2580\u2584\u2584\u2584\u2588\u2588\u2580\u2584\u2588\u2588\u2588\u2580 \u2580\u2580\u2588\u2588\u2588\u2588      \u2584\u2588\u2588\r\n\u2584\u2580\u2580\u2580\u2584\u2588\u2588\u2584\u2580\u2580\u258c\u2588\u2588\u2588\u2588\u2592\u2592\u2592\u2592\u2592\u2592\u2588\u2588\u2588     \u258c\u2584\u2584\u2580\r\n\u258c    \u2590\u2580\u2588\u2588\u2588\u2588\u2590\u2588\u2588\u2588\u2592\u2592\u2592\u2592\u2592\u2590\u2588\u2588\u258c\r\n\u2580\u2584\u2584\u2584\u2584\u2580   \u2580\u2580\u2588\u2588\u2588\u2588\u2592\u2592\u2592\u2592\u2584\u2588\u2588\u2580\r\n          \u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\r\n        \u2584\u2584\u2588\u2588\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2588\r\n      \u2584\u2588\u2588\u2580     \u2580\u2580\u2580  \u2588\r\n     \u2584\u2588             \u2590\u258c\r\n \u2584\u2584\u2584\u2584\u2588\u258c              \u2580\u2588\u2584\u2584\u2584\u2584\u2580\u2580\u2584\r\n\u258c     \u2590                \u2580\u2580\u2584\u2584\u2584\u2580\r\n \u2580\u2580\u2584\u2584\u2580\r\n\r\nDEBUG:sanic:\r\n                 \u2584\u2584\u2584\u2584\u2584\r\n        \u2580\u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2584\u2584\u2584       _______________\r\n      \u2584\u2584\u2584\u2584\u2584  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584  /                 \\\r\n     \u2580\u2580\u2580\u2580\u2588\u2588\u2588\u2588\u2588\u258c \u2580\u2590\u2584 \u2580\u2590\u2588 |   Gotta go fast!  |\r\n   \u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2584\u2584 \u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2584\u2588\u2588 | _________________/\r\n   \u2580\u2584\u2584\u2584\u2584\u2584  \u2580\u2580\u2588\u2584\u2580\u2588\u2550\u2550\u2550\u2550\u2588\u2580 |/\r\n        \u2580\u2580\u2580\u2584  \u2580\u2580\u2588\u2588\u2588 \u2580       \u2584\u2584\r\n     \u2584\u2588\u2588\u2588\u2580\u2580\u2588\u2588\u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584 \u2584\u2580\u2580\u2580\u2580\u2580\u2580\u2588\u258c\r\n   \u2588\u2588\u2580\u2584\u2584\u2584\u2588\u2588\u2580\u2584\u2588\u2588\u2588\u2580 \u2580\u2580\u2588\u2588\u2588\u2588      \u2584\u2588\u2588\r\n\u2584\u2580\u2580\u2580\u2584\u2588\u2588\u2584\u2580\u2580\u258c\u2588\u2588\u2588\u2588\u2592\u2592\u2592\u2592\u2592\u2592\u2588\u2588\u2588     \u258c\u2584\u2584\u2580\r\n\u258c    \u2590\u2580\u2588\u2588\u2588\u2588\u2590\u2588\u2588\u2588\u2592\u2592\u2592\u2592\u2592\u2590\u2588\u2588\u258c\r\n\u2580\u2584\u2584\u2584\u2584\u2580   \u2580\u2580\u2588\u2588\u2588\u2588\u2592\u2592\u2592\u2592\u2584\u2588\u2588\u2580\r\n          \u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\r\n        \u2584\u2584\u2588\u2588\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2588\r\n      \u2584\u2588\u2588\u2580     \u2580\u2580\u2580  \u2588\r\n     \u2584\u2588             \u2590\u258c\r\n \u2584\u2584\u2584\u2584\u2588\u258c              \u2580\u2588\u2584\u2584\u2584\u2584\u2580\u2580\u2584\r\n\u258c     \u2590                \u2580\u2580\u2584\u2584\u2584\u2580\r\n \u2580\u2580\u2584\u2584\u2580\r\n\r\n2017-08-22 23:59:32 - (sanic)[INFO]: Goin' Fast @ http://0.0.0.0:5000\r\nINFO:sanic:Goin' Fast @ http://0.0.0.0:5000\r\n2017-08-22 23:59:32 - (sanic)[INFO]: Starting worker [39513]\r\nINFO:sanic:Starting worker [39513]\r\n```", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/910/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/895", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/895/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/895/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/895/events", "html_url": "https://github.com/sanic-org/sanic/issues/895", "id": 251402867, "node_id": "MDU6SXNzdWUyNTE0MDI4Njc=", "number": 895, "title": "Maybe we can let users choose whether `merge_route` or not?", "user": {"login": "zhustec", "id": 3840198, "node_id": "MDQ6VXNlcjM4NDAxOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3840198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhustec", "html_url": "https://github.com/zhustec", "followers_url": "https://api.github.com/users/zhustec/followers", "following_url": "https://api.github.com/users/zhustec/following{/other_user}", "gists_url": "https://api.github.com/users/zhustec/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhustec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhustec/subscriptions", "organizations_url": "https://api.github.com/users/zhustec/orgs", "repos_url": "https://api.github.com/users/zhustec/repos", "events_url": "https://api.github.com/users/zhustec/events{/privacy}", "received_events_url": "https://api.github.com/users/zhustec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-08-19T05:40:30Z", "updated_at": "2018-09-13T08:18:00Z", "closed_at": "2017-12-15T10:53:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use Ruby on Rails before, I like the resourcesful router in Rails, so I try to do the same thing in Sanic.\r\n\r\n```python\r\nbp = sanic.Blueprint('posts', url_prefix='posts')\r\n\r\n@bp.get('/<post_id>')\r\nasync def show(request, post_id):\r\n    pass\r\n\r\n@bp.patch('/<post_id>')\r\nasync def update(request, post_id):\r\n    pass\r\n\r\n@bp.delete('/<post_id>')\r\nasync def delete(request, post_id):\r\n    pass\r\n```\r\nBut when I use `url_for('posts.update', post_id=post.id)`, It shows `Error: Endpoint with name posts.update was not found`.\r\n\r\nThen I found it will `merge_route` into `CompositionView` as it change router name to `posts.show`, it is exactlly not what I want. Maybe we can disable `merge route` by given an options to user?\r\n\r\nhttps://github.com/channelcat/sanic/blob/master/sanic/router.py#L194-L214\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/895/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/895/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/846", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/846/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/846/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/846/events", "html_url": "https://github.com/sanic-org/sanic/issues/846", "id": 242345410, "node_id": "MDU6SXNzdWUyNDIzNDU0MTA=", "number": 846, "title": "Sanic in Snap package error with logging even if logging disabled", "user": {"login": "btegs", "id": 5166649, "node_id": "MDQ6VXNlcjUxNjY2NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5166649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/btegs", "html_url": "https://github.com/btegs", "followers_url": "https://api.github.com/users/btegs/followers", "following_url": "https://api.github.com/users/btegs/following{/other_user}", "gists_url": "https://api.github.com/users/btegs/gists{/gist_id}", "starred_url": "https://api.github.com/users/btegs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/btegs/subscriptions", "organizations_url": "https://api.github.com/users/btegs/orgs", "repos_url": "https://api.github.com/users/btegs/repos", "events_url": "https://api.github.com/users/btegs/events{/privacy}", "received_events_url": "https://api.github.com/users/btegs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 464641209, "node_id": "MDU6TGFiZWw0NjQ2NDEyMDk=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/needs%20investigation", "name": "needs investigation", "color": "d4c5f9", "default": false, "description": null}, {"id": 1361813929, "node_id": "MDU6TGFiZWwxMzYxODEzOTI5", "url": "https://api.github.com/repos/sanic-org/sanic/labels/stale", "name": "stale", "color": "c6930f", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-12T11:16:29Z", "updated_at": "2019-06-18T19:12:34Z", "closed_at": "2019-06-18T19:12:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is a very basic server.py script for Sanic:\r\n\r\n```\r\n#!/usr/bin/env python3\r\n\r\nfrom sanic import Sanic\r\nfrom sanic import response\r\n\r\napp = Sanic(__name__)\r\n\r\n@app.route(\"/\")\r\nasync def test(request):\r\n    return response.json({\"sanic\": \"Py3 Snap!\"})\r\n\r\nif __name__ == '__main__':\r\n    app.run(host=\"0.0.0.0\", port=8000, debug=False, log_config=None)\r\n```\r\nand here is my snapcraft.yaml:\r\n\r\n```\r\nname: py3snap\r\nversion: '1499857382'\r\nsummary: Single-line elevator pitch for Python 3 snap test\r\ndescription: This is the description for the test Python 3 snap test\r\nconfinement: strict\r\ngrade: devel\r\n\r\napps:\r\n  py3snap:\r\n    command: bin/py3snap-server\r\n    # daemon: simple\r\n    plugs: [network-bind]\r\n    # restart-condition: always\r\n\r\nparts:\r\n  py3snap:\r\n    plugin: python\r\n    python-version: python3\r\n    requirements: /home/brian/Projects/py3snap/requirements.txt\r\n    source: /home/brian/Projects/py3snap\r\n    organize:\r\n      /home/brian/Projects/py3snap/server: bin/py3snap-server\r\n```\r\n\r\nMy requirements.txt is pretty simple:\r\n\r\n```\r\nuvloop\r\nsanic\r\n```\r\n\r\nWhen creating a Snap package for Ubuntu 16.04 via snapcraft, I still get a logging error even if log_config is disabled:\r\n\r\n```\r\nbrian@ubuntu:~/Projects/py3snap/snaps$ sudo snap install py3snap_1499857382_amd64.snap --dangerous\r\n[sudo] password for brian: \r\npy3snap 1499857382 installed\r\nbrian@ubuntu:/$ sudo py3snap\r\nTraceback (most recent call last):\r\n  File \"/snap/py3snap/x1/usr/lib/python3.5/logging/config.py\", line 558, in configure\r\n    handler = self.configure_handler(handlers[name])\r\n  File \"/snap/py3snap/x1/usr/lib/python3.5/logging/config.py\", line 731, in configure_handler\r\n    result = factory(**kwargs)\r\n  File \"/snap/py3snap/x1/usr/lib/python3.5/logging/handlers.py\", line 202, in __init__\r\n    BaseRotatingHandler.__init__(self, filename, 'a', encoding, delay)\r\n  File \"/snap/py3snap/x1/usr/lib/python3.5/logging/handlers.py\", line 57, in __init__\r\n    logging.FileHandler.__init__(self, filename, mode, encoding, delay)\r\n  File \"/snap/py3snap/x1/usr/lib/python3.5/logging/__init__.py\", line 1008, in __init__\r\n    StreamHandler.__init__(self, self._open())\r\n  File \"/snap/py3snap/x1/usr/lib/python3.5/logging/__init__.py\", line 1037, in _open\r\n    return open(self.baseFilename, self.mode, encoding=self.encoding)\r\nOSError: [Errno 30] Read-only file system: '/access.log'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/snap/py3snap/x1/bin/py3snap-server\", line 6, in <module>\r\n    app = Sanic(__name__)\r\n  File \"/snap/py3snap/x1/lib/python3.5/site-packages/sanic/app.py\", line 33, in __init__\r\n    logging.config.dictConfig(log_config)\r\n  File \"/snap/py3snap/x1/usr/lib/python3.5/logging/config.py\", line 795, in dictConfig\r\n    dictConfigClass(config).configure()\r\n  File \"/snap/py3snap/x1/usr/lib/python3.5/logging/config.py\", line 566, in configure\r\n    '%r: %s' % (name, e))\r\nValueError: Unable to configure handler 'accessTimedRotatingFile': [Errno 30] Read-only file system: '/access.log'\r\n\r\n```\r\nAs you can see, I have error logging to off in the .run command but it is still looking for it. Is this a known issue to still look for log files even if disabled?", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/846/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/840", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/840/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/840/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/840/events", "html_url": "https://github.com/sanic-org/sanic/issues/840", "id": 241563261, "node_id": "MDU6SXNzdWUyNDE1NjMyNjE=", "number": 840, "title": "Sanic fails to read cookies if one of them is broken", "user": {"login": "AlexzAK", "id": 47482, "node_id": "MDQ6VXNlcjQ3NDgy", "avatar_url": "https://avatars.githubusercontent.com/u/47482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexzAK", "html_url": "https://github.com/AlexzAK", "followers_url": "https://api.github.com/users/AlexzAK/followers", "following_url": "https://api.github.com/users/AlexzAK/following{/other_user}", "gists_url": "https://api.github.com/users/AlexzAK/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexzAK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexzAK/subscriptions", "organizations_url": "https://api.github.com/users/AlexzAK/orgs", "repos_url": "https://api.github.com/users/AlexzAK/repos", "events_url": "https://api.github.com/users/AlexzAK/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexzAK/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-07-09T22:04:14Z", "updated_at": "2018-09-13T08:17:57Z", "closed_at": "2018-03-13T07:18:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "example broken cookie `inbound_referral_site: Direct Traffic`\r\nThan cookie contains non escaped space and http.cookie.SimpleCookie fails to parse all of them and returns empty dictionary\r\n\r\nFollowing code fails (sanic uses the same aproach) \r\n```\r\nc = SimpleCookie()\r\ns1 = 'inbound_referral_site=Direct Traffic; good_cookie=123'\r\nc.load(s1)\r\nprint(c.items())\r\n\r\nOutput: dict_items([])\r\n```\r\n\r\nIt should return at least good cookies\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/840/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/784", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/784/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/784/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/784/events", "html_url": "https://github.com/sanic-org/sanic/issues/784", "id": 234560366, "node_id": "MDU6SXNzdWUyMzQ1NjAzNjY=", "number": 784, "title": "Timeout when streaming response", "user": {"login": "jvlar", "id": 16194365, "node_id": "MDQ6VXNlcjE2MTk0MzY1", "avatar_url": "https://avatars.githubusercontent.com/u/16194365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvlar", "html_url": "https://github.com/jvlar", "followers_url": "https://api.github.com/users/jvlar/followers", "following_url": "https://api.github.com/users/jvlar/following{/other_user}", "gists_url": "https://api.github.com/users/jvlar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvlar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvlar/subscriptions", "organizations_url": "https://api.github.com/users/jvlar/orgs", "repos_url": "https://api.github.com/users/jvlar/repos", "events_url": "https://api.github.com/users/jvlar/events{/privacy}", "received_events_url": "https://api.github.com/users/jvlar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 382692935, "node_id": "MDU6TGFiZWwzODI2OTI5MzU=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-08T15:10:05Z", "updated_at": "2019-05-19T18:41:43Z", "closed_at": "2019-05-19T18:41:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like Sanic will still raise a RequestTimeout when the response is streaming.\r\n\r\nI'm proxying a file from another server, so while the user is downloading the streamed file, if it takes more than 60 seconds using the default timeout, the request will be cancelled.\r\n\r\n\r\nHere's a small code example of what I'm doing:\r\n\r\n```py\r\n@file_bp.route('/file', methods=['GET'])\r\nasync def download_file(request: Request) -> StreamingHTTPResponse:\r\n    url = generate_url(request)\r\n    session = aiohttp.ClientSession()\r\n\r\n    resp = await session.get(url, timeout=0,\r\n                             headers=filter_headers(request.headers))\r\n    content_type = resp.headers.get('Content-Type', 'text/plain')\r\n\r\n    async def streaming_return(sanic_response: StreamingHTTPResponse):\r\n        async for chunk in resp.content.iter_any():\r\n            sanic_response.write(chunk)\r\n        session.close()\r\n\r\n    return stream(streaming_return, content_type=content_type)\r\n```\r\n\r\nRight now I've had to set the global timeout to something really so huge files can be downloaded without timing out, but I'd like to still have a smaller timeout for standard requests.\r\n\r\nI don't think a request should timeout while streaming.\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/784/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/784/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/763", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/763/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/763/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/763/events", "html_url": "https://github.com/sanic-org/sanic/issues/763", "id": 232780587, "node_id": "MDU6SXNzdWUyMzI3ODA1ODc=", "number": 763, "title": "Bad char cause parse exception  and how to log the url when request can't be parsed?", "user": {"login": "jiamo", "id": 732751, "node_id": "MDQ6VXNlcjczMjc1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/732751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiamo", "html_url": "https://github.com/jiamo", "followers_url": "https://api.github.com/users/jiamo/followers", "following_url": "https://api.github.com/users/jiamo/following{/other_user}", "gists_url": "https://api.github.com/users/jiamo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiamo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiamo/subscriptions", "organizations_url": "https://api.github.com/users/jiamo/orgs", "repos_url": "https://api.github.com/users/jiamo/repos", "events_url": "https://api.github.com/users/jiamo/events{/privacy}", "received_events_url": "https://api.github.com/users/jiamo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-01T06:46:09Z", "updated_at": "2018-09-13T08:17:53Z", "closed_at": "2017-09-14T20:38:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using: sanic 0.5.1  (While I don't see which change with 0.5.4 in changelog)\r\n\r\nIn our code we using : \r\n\r\n```\r\n@app.exception(Exception)\r\ndef server_error_handler(request, exception):\r\n    if request is not None:\r\n        msg = request.url + ' ' + traceback.format_exc()\r\n    elif isinstance(exception, RequestTimeout):\r\n        return response.text('timeout', status=504)\r\n    else:\r\n        msg = str(exception) + ' ' + traceback.format_exc()\r\n    asyncio.ensure_future(fluent.write_debug('error', msg))\r\n``` \r\nto log exception.  We find error has : \r\n\r\n \r\n> Bad Request Traceback (most recent call last):\r\n>   File \"httptools/parser/parser.pyx\", line 247, in httptools.parser.parser.cb_on_header_field (httptools/parser/parser.c:4007)\r\n>   File \"httptools/parser/parser.pyx\", line 109, in httptools.parser.parser.HttpParser._on_header_field (httptools/parser/parser.c:1893)\r\n>   File \"httptools/parser/parser.pyx\", line 105, in httptools.parser.parser.HttpParser._maybe_call_on_header (httptools/parser/parser.c:1822)\r\n>   File \"/usr/local/lib/python3.5/dist-packages/sanic/server.py\", line 157, in on_header\r\n>     self.headers.append((name.decode().casefold(), value.decode()))\r\n> AttributeError: 'NoneType' object has no attribute 'decode'\r\n> \r\n> During handling of the above exception, another exception occurred:\r\n> \r\n> Traceback (most recent call last):\r\n>   File \"/usr/local/lib/python3.5/dist-packages/sanic/server.py\", line 144, in data_received\r\n>     self.parser.feed_data(data)\r\n>   File \"httptools/parser/parser.pyx\", line 171, in httptools.parser.parser.HttpParser.feed_data (httptools/parser/parser.c:2721)\r\n> httptools.parser.errors.HttpParserCallbackError: the on_header_field callback failed\r\n\r\nAt this moment the request have not been created. So is there a method can I log the access url ?\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/763/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/763/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/752", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/752/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/752/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/752/events", "html_url": "https://github.com/sanic-org/sanic/issues/752", "id": 231854634, "node_id": "MDU6SXNzdWUyMzE4NTQ2MzQ=", "number": 752, "title": "[Errno 13] Permission denied: '/access.log' with disabled debug & logging?", "user": {"login": "talaikis", "id": 7689499, "node_id": "MDQ6VXNlcjc2ODk0OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/7689499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/talaikis", "html_url": "https://github.com/talaikis", "followers_url": "https://api.github.com/users/talaikis/followers", "following_url": "https://api.github.com/users/talaikis/following{/other_user}", "gists_url": "https://api.github.com/users/talaikis/gists{/gist_id}", "starred_url": "https://api.github.com/users/talaikis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/talaikis/subscriptions", "organizations_url": "https://api.github.com/users/talaikis/orgs", "repos_url": "https://api.github.com/users/talaikis/repos", "events_url": "https://api.github.com/users/talaikis/events{/privacy}", "received_events_url": "https://api.github.com/users/talaikis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-28T08:25:23Z", "updated_at": "2018-09-13T08:17:52Z", "closed_at": "2017-06-12T06:24:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "With:\r\n\r\n```text\r\napp.run(host=API_HOST, port=PORT, sock=None, debug=False, workers=API_WORKERS, log_config=None)\r\n```\r\n\r\n```text\r\napp = Sanic(__name__)\r\n  File \"/usr/local/anaconda/envs/proj/lib/python3.6/site-packages/sanic/app.py\", line 33, in __init__\r\n    logging.config.dictConfig(log_config)\r\n  File \"/usr/local/anaconda/envs/proj/lib/python3.6/logging/config.py\", line 795, in dictConfig\r\n    dictConfigClass(config).configure()\r\n  File \"/usr/local/anaconda/envs/proj/lib/python3.6/logging/config.py\", line 566, in configure\r\n    '%r: %s' % (name, e))\r\nValueError: Unable to configure handler 'accessTimedRotatingFile': [Errno 13] Permission denied: '/access.log'\r\n```", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/752/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/747", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/747/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/747/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/747/events", "html_url": "https://github.com/sanic-org/sanic/issues/747", "id": 231387812, "node_id": "MDU6SXNzdWUyMzEzODc4MTI=", "number": 747, "title": "How can Install sanic with pypy v3.5?", "user": {"login": "mrkaspa", "id": 764271, "node_id": "MDQ6VXNlcjc2NDI3MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/764271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrkaspa", "html_url": "https://github.com/mrkaspa", "followers_url": "https://api.github.com/users/mrkaspa/followers", "following_url": "https://api.github.com/users/mrkaspa/following{/other_user}", "gists_url": "https://api.github.com/users/mrkaspa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrkaspa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrkaspa/subscriptions", "organizations_url": "https://api.github.com/users/mrkaspa/orgs", "repos_url": "https://api.github.com/users/mrkaspa/repos", "events_url": "https://api.github.com/users/mrkaspa/events{/privacy}", "received_events_url": "https://api.github.com/users/mrkaspa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "harshanarayana", "id": 1404867, "node_id": "MDQ6VXNlcjE0MDQ4Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/1404867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshanarayana", "html_url": "https://github.com/harshanarayana", "followers_url": "https://api.github.com/users/harshanarayana/followers", "following_url": "https://api.github.com/users/harshanarayana/following{/other_user}", "gists_url": "https://api.github.com/users/harshanarayana/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshanarayana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshanarayana/subscriptions", "organizations_url": "https://api.github.com/users/harshanarayana/orgs", "repos_url": "https://api.github.com/users/harshanarayana/repos", "events_url": "https://api.github.com/users/harshanarayana/events{/privacy}", "received_events_url": "https://api.github.com/users/harshanarayana/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "harshanarayana", "id": 1404867, "node_id": "MDQ6VXNlcjE0MDQ4Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/1404867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshanarayana", "html_url": "https://github.com/harshanarayana", "followers_url": "https://api.github.com/users/harshanarayana/followers", "following_url": "https://api.github.com/users/harshanarayana/following{/other_user}", "gists_url": "https://api.github.com/users/harshanarayana/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshanarayana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshanarayana/subscriptions", "organizations_url": "https://api.github.com/users/harshanarayana/orgs", "repos_url": "https://api.github.com/users/harshanarayana/repos", "events_url": "https://api.github.com/users/harshanarayana/events{/privacy}", "received_events_url": "https://api.github.com/users/harshanarayana/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 24, "created_at": "2017-05-25T16:20:44Z", "updated_at": "2022-11-06T22:03:21Z", "closed_at": "2021-01-11T13:11:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/747/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/728", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/728/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/728/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/728/events", "html_url": "https://github.com/sanic-org/sanic/issues/728", "id": 228847101, "node_id": "MDU6SXNzdWUyMjg4NDcxMDE=", "number": 728, "title": "Trying to send 304 response results in unwanted headers", "user": {"login": "mike-hart", "id": 4129199, "node_id": "MDQ6VXNlcjQxMjkxOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/4129199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mike-hart", "html_url": "https://github.com/mike-hart", "followers_url": "https://api.github.com/users/mike-hart/followers", "following_url": "https://api.github.com/users/mike-hart/following{/other_user}", "gists_url": "https://api.github.com/users/mike-hart/gists{/gist_id}", "starred_url": "https://api.github.com/users/mike-hart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mike-hart/subscriptions", "organizations_url": "https://api.github.com/users/mike-hart/orgs", "repos_url": "https://api.github.com/users/mike-hart/repos", "events_url": "https://api.github.com/users/mike-hart/events{/privacy}", "received_events_url": "https://api.github.com/users/mike-hart/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-05-15T21:10:06Z", "updated_at": "2018-09-13T08:17:51Z", "closed_at": "2018-06-27T05:26:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "An HTTP 304 (Not Modified) response should be zero length and should contain headers appropriate to the 200 that would have resulted otherwise.\r\n\r\nThere does not seem to be a way to send a response without either a Content-Length or Content-Type header (neither of which are appropriate for a zero-length response) and either of which could upset the cache content if the cache were to update its headers from this response.\r\n\r\ncf. https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.5", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/728/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/728/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/615", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/615/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/615/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/615/events", "html_url": "https://github.com/sanic-org/sanic/issues/615", "id": 219326198, "node_id": "MDU6SXNzdWUyMTkzMjYxOTg=", "number": 615, "title": "Streaming Response Chunked Encoding Incomplete Read Error", "user": {"login": "ubergarm", "id": 4724321, "node_id": "MDQ6VXNlcjQ3MjQzMjE=", "avatar_url": "https://avatars.githubusercontent.com/u/4724321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubergarm", "html_url": "https://github.com/ubergarm", "followers_url": "https://api.github.com/users/ubergarm/followers", "following_url": "https://api.github.com/users/ubergarm/following{/other_user}", "gists_url": "https://api.github.com/users/ubergarm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubergarm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubergarm/subscriptions", "organizations_url": "https://api.github.com/users/ubergarm/orgs", "repos_url": "https://api.github.com/users/ubergarm/repos", "events_url": "https://api.github.com/users/ubergarm/events{/privacy}", "received_events_url": "https://api.github.com/users/ubergarm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 464641209, "node_id": "MDU6TGFiZWw0NjQ2NDEyMDk=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/needs%20investigation", "name": "needs investigation", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-04T17:31:25Z", "updated_at": "2018-09-13T08:17:45Z", "closed_at": "2017-04-11T01:58:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "The new `stream` method works with the [demo example](http://sanic.readthedocs.io/en/latest/sanic/streaming.html), but if I try to stream larger chunks of data (e.g. 10 bytes) I get a ChunkedEncodingError / broken connection / Incomplete Read on the client.\r\n\r\nI confirmed this on both latest master 62ebcba64 and when the feature was introduced at 19592e8eea.\r\n\r\nHere is a slightly modified test demo server to reproduce the problem:\r\n```\r\nfrom sanic import Sanic\r\nfrom sanic.response import stream\r\n\r\napp = Sanic(__name__)\r\n\r\n@app.route(\"/\")\r\nasync def test(request):\r\n    async def sample_streaming_fn(response):\r\n        response.write('foo,bat,baz,')\r\n        response.write('bar')\r\n\r\n    return stream(sample_streaming_fn, content_type='text/csv')\r\n\r\napp.run(host=\"0.0.0.0\", port=8000, workers=1)\r\n```\r\n\r\nStart this test server with:\r\n```\r\n$ docker run --rm -it -v `pwd`:/app -p 8000:8000 ubergarm/sanic-alpine /app/test.py\r\n2017-04-04 17:27:49,501: INFO: Goin' Fast @ http://0.0.0.0:8000\r\n2017-04-04 17:27:49,503: INFO: Starting worker [1]\r\n```\r\n\r\nTest with `curl`:\r\n```\r\n$ curl -v localhost:8000\r\n* Rebuilt URL to: localhost:8000/\r\n*   Trying ::1...\r\n* Connected to localhost (::1) port 8000 (#0)\r\n> GET / HTTP/1.1\r\n> Host: localhost:8000\r\n> User-Agent: curl/7.47.0\r\n> Accept: */*\r\n>\r\n< HTTP/1.1 200 OK\r\n< Keep-Alive: 60\r\n< Transfer-Encoding: chunked\r\n< Content-Type: text/csv\r\n<\r\nfoo,bat,baz,\r\n3\r\n* Malformed encoding found in chunked-encoding\r\n* Closing connection 0\r\ncurl: (56) Malformed encoding found in chunked-encoding\r\n```\r\n\r\nTest with `httpie`:\r\n```\r\n$ http -v localhost:8000\r\nGET / HTTP/1.1\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nHost: localhost:8000\r\nUser-Agent: HTTPie/0.9.4\r\n\r\n\r\n\r\nHTTP/1.1 200 OK\r\nContent-Type: text/csv\r\nKeep-Alive: 60\r\nTransfer-Encoding: chunked\r\n\r\n\r\nhttp: error: ChunkedEncodingError: ('Connection broken: IncompleteRead(2 bytes read)', IncompleteRead(2 bytes read))\r\n```", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/615/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/615/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/492", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/492/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/492/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/492/events", "html_url": "https://github.com/sanic-org/sanic/issues/492", "id": 210497962, "node_id": "MDU6SXNzdWUyMTA0OTc5NjI=", "number": 492, "title": "Cant install 0.4.0 release", "user": {"login": "gerasim13", "id": 842316, "node_id": "MDQ6VXNlcjg0MjMxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/842316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gerasim13", "html_url": "https://github.com/gerasim13", "followers_url": "https://api.github.com/users/gerasim13/followers", "following_url": "https://api.github.com/users/gerasim13/following{/other_user}", "gists_url": "https://api.github.com/users/gerasim13/gists{/gist_id}", "starred_url": "https://api.github.com/users/gerasim13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gerasim13/subscriptions", "organizations_url": "https://api.github.com/users/gerasim13/orgs", "repos_url": "https://api.github.com/users/gerasim13/repos", "events_url": "https://api.github.com/users/gerasim13/events{/privacy}", "received_events_url": "https://api.github.com/users/gerasim13/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-02-27T14:23:44Z", "updated_at": "2018-09-13T08:17:38Z", "closed_at": "2017-02-28T14:59:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, i cant install latest release.\r\nHere is part of log from gitlab-ci:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.5/site-packages/pip/basecommand.py\", line 209, in main\r\n    status = self.run(options, args)\r\n  File \"/usr/lib/python3.5/site-packages/pip/commands/install.py\", line 310, in run\r\n    wb.build(autobuilding=True)\r\n  File \"/usr/lib/python3.5/site-packages/pip/wheel.py\", line 748, in build\r\n    self.requirement_set.prepare_files(self.finder)\r\n  File \"/usr/lib/python3.5/site-packages/pip/req/req_set.py\", line 360, in prepare_files\r\n    ignore_dependencies=self.ignore_dependencies))\r\n  File \"/usr/lib/python3.5/site-packages/pip/req/req_set.py\", line 647, in _prepare_file\r\n    set(req_to_install.extras) - set(dist.extras)\r\n  File \"/usr/lib/python3.5/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 2810, in extras\r\n    return [dep for dep in self._dep_map if dep]\r\n  File \"/usr/lib/python3.5/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 2624, in _dep_map\r\n    dm.setdefault(extra,[]).extend(parse_requirements(reqs))\r\n  File \"/usr/lib/python3.5/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 2980, in parse_requirements\r\n    \"version spec\")\r\n  File \"/usr/lib/python3.5/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 2956, in scan_list\r\n    raise RequirementParseError(msg, line, \"at\", line[p:])\r\npip._vendor.pkg_resources.RequirementParseError: Expected ',' or end-of-list in uvloop>=0.5.3;platform_system!=\"Windows\" at ;platform_system!=\"Windows\"\r\n```", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/492/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/483", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/483/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/483/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/483/events", "html_url": "https://github.com/sanic-org/sanic/issues/483", "id": 209975266, "node_id": "MDU6SXNzdWUyMDk5NzUyNjY=", "number": 483, "title": "AttributeError: 'NoneType' object has no attribute 'url'", "user": {"login": "messense", "id": 1556054, "node_id": "MDQ6VXNlcjE1NTYwNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1556054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/messense", "html_url": "https://github.com/messense", "followers_url": "https://api.github.com/users/messense/followers", "following_url": "https://api.github.com/users/messense/following{/other_user}", "gists_url": "https://api.github.com/users/messense/gists{/gist_id}", "starred_url": "https://api.github.com/users/messense/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/messense/subscriptions", "organizations_url": "https://api.github.com/users/messense/orgs", "repos_url": "https://api.github.com/users/messense/repos", "events_url": "https://api.github.com/users/messense/events{/privacy}", "received_events_url": "https://api.github.com/users/messense/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-02-24T07:06:07Z", "updated_at": "2018-09-13T08:17:38Z", "closed_at": "2017-04-13T01:47:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using a custom error handler to send exception to sentry:\r\n\r\n```\r\nclass SentryErrorHandler(ErrorHandler):\r\n    def default(self, request, exception):\r\n        if exception is None:\r\n            return text('unknown error occurred')\r\n        sentry.captureException()\r\n        return super().default(request, exception)\r\n\r\napp = Sanic(__name__, error_handler=SentryErrorHandler())\r\n```\r\n\r\nGot the exception:\r\n\r\n```\r\n2017-02-24 07:53:18,845 ERROR Process-22219 MainThread sanic.handlers.log:73    Traceback (most recent call last):\r\n  File \"/home/kpath/kpath/venv/lib/python3.6/site-packages/sanic/handlers.py\", line 54, in response\r\n    response = handler(request=request, exception=exception)\r\n  File \"app.py\", line 486, in default\r\n    sentry.captureException()\r\n  File \"/home/kpath/kpath/venv/lib/python3.6/site-packages/raven/base.py\", line 799, in captureException\r\n    'raven.events.Exception', exc_info=exc_info, **kwargs)\r\n  File \"/home/kpath/kpath/venv/lib/python3.6/site-packages/raven/base.py\", line 615, in capture\r\n    elif not self.should_capture(exc_info):\r\n  File \"/home/kpath/kpath/venv/lib/python3.6/site-packages/raven/base.py\", line 803, in should_capture\r\n    exc_name = '%s.%s' % (exc_type.__module__, exc_type.__name__)\r\nAttributeError: 'NoneType' object has no attribute '__module__'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/kpath/kpath/venv/lib/python3.6/site-packages/sanic/server.py\", line 201, in write_error\r\n    response = self.error_handler.response(self.request, exception)\r\n  File \"/home/kpath/kpath/venv/lib/python3.6/site-packages/sanic/handlers.py\", line 61, in response\r\n    handler.__name__, request.url, format_exc())\r\nAttributeError: 'NoneType' object has no attribute 'url'\r\n\r\n2017-02-24 07:53:18,845 ERROR Process-22219 MainThread sanic.server.bail_out:226   Writing error failed, connection closed AttributeError(\"'NoneType' object has no attribute 'url'\",)\r\n```", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/483/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/374", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/374/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/374/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/374/events", "html_url": "https://github.com/sanic-org/sanic/issues/374", "id": 204056148, "node_id": "MDU6SXNzdWUyMDQwNTYxNDg=", "number": 374, "title": "Serve static directory", "user": {"login": "darksonic37", "id": 180382, "node_id": "MDQ6VXNlcjE4MDM4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/180382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darksonic37", "html_url": "https://github.com/darksonic37", "followers_url": "https://api.github.com/users/darksonic37/followers", "following_url": "https://api.github.com/users/darksonic37/following{/other_user}", "gists_url": "https://api.github.com/users/darksonic37/gists{/gist_id}", "starred_url": "https://api.github.com/users/darksonic37/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darksonic37/subscriptions", "organizations_url": "https://api.github.com/users/darksonic37/orgs", "repos_url": "https://api.github.com/users/darksonic37/repos", "events_url": "https://api.github.com/users/darksonic37/events{/privacy}", "received_events_url": "https://api.github.com/users/darksonic37/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-01-30T16:19:03Z", "updated_at": "2021-11-16T08:08:24Z", "closed_at": "2017-02-03T00:05:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a small application with the following directory hierarchy:\r\n\r\n```\r\n$ tree\r\n.\r\n\u251c\u2500\u2500 client\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 index.html\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 package.json\r\n\u2514\u2500\u2500 server\r\n    \u251c\u2500\u2500 api.py\r\n    \u2514\u2500\u2500 requirements.txt\r\n\r\n2 directories, 4 files\r\n```\r\n\r\nFrom `api.py` I want to serve the `client/` directory to the `/` route (while avoiding moving the `client/` directory inside `server/`). Something like this should work:\r\n\r\n```\r\napp.static('/', os.path.abspath('../client'))\r\n```\r\n\r\nHowever when I try to hit the route I just get:\r\n\r\n```\r\nsanic.exceptions.NotFound: Requested URL / not found\r\n```\r\n\r\nAny ideas?", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/374/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/337", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/337/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/337/events", "html_url": "https://github.com/sanic-org/sanic/issues/337", "id": 202721507, "node_id": "MDU6SXNzdWUyMDI3MjE1MDc=", "number": 337, "title": "Sanic _violates_ HTTP, fails with HTTP 1.1 pipelining", "user": {"login": "squeaky-pl", "id": 754356, "node_id": "MDQ6VXNlcjc1NDM1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/754356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/squeaky-pl", "html_url": "https://github.com/squeaky-pl", "followers_url": "https://api.github.com/users/squeaky-pl/followers", "following_url": "https://api.github.com/users/squeaky-pl/following{/other_user}", "gists_url": "https://api.github.com/users/squeaky-pl/gists{/gist_id}", "starred_url": "https://api.github.com/users/squeaky-pl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/squeaky-pl/subscriptions", "organizations_url": "https://api.github.com/users/squeaky-pl/orgs", "repos_url": "https://api.github.com/users/squeaky-pl/repos", "events_url": "https://api.github.com/users/squeaky-pl/events{/privacy}", "received_events_url": "https://api.github.com/users/squeaky-pl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-01-24T04:22:12Z", "updated_at": "2019-02-08T14:57:32Z", "closed_at": "2019-02-08T14:57:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "HTTP 1.1 improves performance upon HTTP 1.0 in two main areas:\r\n\r\n1. *Keep-alive*. Possibility to send many (request, response) pairs on the same connections\r\n2. *Pipelining*. Possibility to send many requests without waiting for a response after each of them. The responses must be returned in the same order that requests arrived. https://en.wikipedia.org/wiki/HTTP_pipelining\r\n\r\n> HTTP/1.1 conforming servers are required to support pipelining. This does not mean that servers are required to pipeline responses, but that they are required not to fail if a client chooses to pipeline requests.\r\n\r\nSanic currently doesnt support pipelining, worse it will fail very badly by dropping responses if the client attempts pipelining. This is a HTTP 1.1 protocol violation. If sanic doesn't support pipelining it should at least not consume new requests on the same connection until generating corresponding responses. This way pipelining clients will not break.\r\n\r\nAt the moment pointing pipelining client at sanic results in a stream of errors in error log:\r\n\r\n```\r\n2017-01-24 01:54:53,266: ERROR: Writing response failed, connection closed 'NoneType' object has no attribute 'should_keep_alive'\r\n2017-01-24 01:54:53,266: ERROR: Writing response failed, connection closed 'NoneType' object has no attribute 'should_keep_alive'\r\n2017-01-24 01:54:53,266: ERROR: Writing response failed, connection closed 'NoneType' object has no attribute 'should_keep_alive'\r\n2017-01-24 01:54:53,267: ERROR: Writing response failed, connection closed 'NoneType' object has no attribute 'should_keep_alive'\r\n...\r\n\r\n```\r\n\r\nYou can reproduce issue with `wrk` passing following script into it:\r\n\r\n```\r\n-- pipeline.lua, example script demonstrating HTTP pipelining\r\n-- based on: https://github.com/wg/wrk/blob/master/scripts/pipeline.lua\r\n\r\ninit = function(args)\r\n   local r = {}\r\n   r[1] = wrk.format(nil, \"/\")\r\n   r[2] = wrk.format(nil, \"/\")\r\n   r[3] = wrk.format(nil, \"/\")\r\n   r[4] = wrk.format(nil, \"/\")\r\n   r[5] = wrk.format(nil, \"/\")\r\n   r[6] = wrk.format(nil, \"/\")   \r\n   r[7] = wrk.format(nil, \"/\")\r\n   r[8] = wrk.format(nil, \"/\")\r\n\r\n   req = table.concat(r)\r\nend\r\n\r\nrequest = function()\r\n   return req\r\nend\r\n```\r\nand run it so:\r\n\r\n```\r\nwrk -t 1 -c 100 -d 10 -s pipeline.lua http://localhost:8000\r\nRunning 10s test @ http://localhost:8000\r\n  1 threads and 100 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency     0.00us    0.00us   0.00us    -nan%\r\n    Req/Sec   530.40    184.91     1.02k    75.00%\r\n  5242 requests in 10.08s, 0.00B read\r\n  Socket errors: connect 0, read 2621, write 0, timeout 0\r\n  Non-2xx or 3xx responses: 2621\r\n```\r\n\r\nNote that half of the traffic failed.\r\n\r\nThe script instructs wrk to send 8 requests in parallel over the same connection.\r\n\r\nSaid all that Sanic should support pipelining because it can improve performance (nginx can serve static content twice as fast if client pipelines requests). ", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/337/reactions", "total_count": 9, "+1": 9, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/337/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/178", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/178/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/178/events", "html_url": "https://github.com/sanic-org/sanic/issues/178", "id": 192991638, "node_id": "MDU6SXNzdWUxOTI5OTE2Mzg=", "number": 178, "title": "Add documentation for response headers", "user": {"login": "blakev", "id": 4885156, "node_id": "MDQ6VXNlcjQ4ODUxNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4885156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blakev", "html_url": "https://github.com/blakev", "followers_url": "https://api.github.com/users/blakev/followers", "following_url": "https://api.github.com/users/blakev/following{/other_user}", "gists_url": "https://api.github.com/users/blakev/gists{/gist_id}", "starred_url": "https://api.github.com/users/blakev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blakev/subscriptions", "organizations_url": "https://api.github.com/users/blakev/orgs", "repos_url": "https://api.github.com/users/blakev/repos", "events_url": "https://api.github.com/users/blakev/events{/privacy}", "received_events_url": "https://api.github.com/users/blakev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 464641209, "node_id": "MDU6TGFiZWw0NjQ2NDEyMDk=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/needs%20investigation", "name": "needs investigation", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-01T23:25:52Z", "updated_at": "2018-09-13T08:17:22Z", "closed_at": "2017-01-19T22:25:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Just spent a long time trying to track down a bug related to headers where a key's value was an int.\r\n\r\nThe header dictionary must be in the format `[str, str]` or the response will silently fail.\r\n\r\n```python\r\n    headers = {\r\n        'Age': str(int(time.time() - store_time)),\r\n    }\r\n```", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/178/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/176", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/176/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/176/events", "html_url": "https://github.com/sanic-org/sanic/issues/176", "id": 192370072, "node_id": "MDU6SXNzdWUxOTIzNzAwNzI=", "number": 176, "title": "Make python's log-format editable by others using sanic", "user": {"login": "x10an14", "id": 710608, "node_id": "MDQ6VXNlcjcxMDYwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/710608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/x10an14", "html_url": "https://github.com/x10an14", "followers_url": "https://api.github.com/users/x10an14/followers", "following_url": "https://api.github.com/users/x10an14/following{/other_user}", "gists_url": "https://api.github.com/users/x10an14/gists{/gist_id}", "starred_url": "https://api.github.com/users/x10an14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/x10an14/subscriptions", "organizations_url": "https://api.github.com/users/x10an14/orgs", "repos_url": "https://api.github.com/users/x10an14/repos", "events_url": "https://api.github.com/users/x10an14/events{/privacy}", "received_events_url": "https://api.github.com/users/x10an14/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 464611475, "node_id": "MDU6TGFiZWw0NjQ2MTE0NzU=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/beginner", "name": "beginner", "color": "c2e0c6", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/sanic-org/sanic/milestones/2", "html_url": "https://github.com/sanic-org/sanic/milestone/2", "labels_url": "https://api.github.com/repos/sanic-org/sanic/milestones/2/labels", "id": 2213858, "node_id": "MDk6TWlsZXN0b25lMjIxMzg1OA==", "number": 2, "title": "0.2.0", "description": "", "creator": {"login": "seemethere", "id": 1700823, "node_id": "MDQ6VXNlcjE3MDA4MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1700823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seemethere", "html_url": "https://github.com/seemethere", "followers_url": "https://api.github.com/users/seemethere/followers", "following_url": "https://api.github.com/users/seemethere/following{/other_user}", "gists_url": "https://api.github.com/users/seemethere/gists{/gist_id}", "starred_url": "https://api.github.com/users/seemethere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seemethere/subscriptions", "organizations_url": "https://api.github.com/users/seemethere/orgs", "repos_url": "https://api.github.com/users/seemethere/repos", "events_url": "https://api.github.com/users/seemethere/events{/privacy}", "received_events_url": "https://api.github.com/users/seemethere/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 30, "state": "closed", "created_at": "2016-12-23T17:41:29Z", "updated_at": "2017-01-18T13:45:34Z", "due_on": "2017-01-14T08:00:00Z", "closed_at": "2017-01-18T13:45:34Z"}, "comments": 3, "created_at": "2016-11-29T19:04:45Z", "updated_at": "2018-09-13T08:17:22Z", "closed_at": "2016-12-25T17:13:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hiya,\r\n\r\nSanic uses python's logging (in `sanic/log.py`) in a fashion which overrides the ability of others to set it they way they want to.\r\n\r\nCould this be refactored into making it configurable by others? I'm not that into python logging/adept at it, but I'll try to make a PR this weekend if nobody else beat me to it!\r\n\r\nExample code which gets overwritten in my script:\r\n```python\r\n(...)\r\nfrom src import app # -> from sanic import Sanic; app = Sanic(\"my-module\")\r\n(...)\r\n\r\nif __name__ == '__main__':\r\n    debug = False\r\n\r\n    logging_format = \"[%(asctime)s] %(process)d-%(levelname)s \"\r\n    logging_format += \"%(module)s::%(funcName)s():l%(lineno)d: \"\r\n    logging_format += \"%(message)s\"\r\n    logging.basicConfig(\r\n        format=logging_format,\r\n        datefmt=default_parse_fmt + \"%f\",\r\n        level=logging.DEBUG if debug else logging.INFO, )\r\n\r\n    app.run(host=\"127.0.0.1\", port=8000, debug=debug)\r\n```\r\n\r\n`sanic/log.py`'s config (below) overwrites mine, even though I only invoke it by importing sanic in my own `__init__.py` file:\r\n```python\r\nimport logging\r\n\r\nlogging.basicConfig(\r\n    level=logging.INFO, format=\"%(asctime)s: %(levelname)s: %(message)s\")\r\nlog = logging.getLogger(__name__)\r\n```\r\n\r\nThe `log.py` module in sanic is barely used anywhere. I easily managed to remove it and replace it with the use specified [here](https://docs.python.org/3.5/howto/logging.html#logging-from-multiple-modules). Everything still worked!\r\n\r\nProof:\r\n```\r\n[29-11-2016 20:04:07%f] 19034-DEBUG sanic::run():l281 >\r\n                 \u2584\u2584\u2584\u2584\u2584\r\n        \u2580\u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2584\u2584\u2584       _______________\r\n      \u2584\u2584\u2584\u2584\u2584  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584  /                 \\\r\n     \u2580\u2580\u2580\u2580\u2588\u2588\u2588\u2588\u2588\u258c \u2580\u2590\u2584 \u2580\u2590\u2588 |   Gotta go fast!  |\r\n   \u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2584\u2584 \u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2584\u2588\u2588 | _________________/\r\n   \u2580\u2584\u2584\u2584\u2584\u2584  \u2580\u2580\u2588\u2584\u2580\u2588\u2550\u2550\u2550\u2550\u2588\u2580 |/\r\n        \u2580\u2580\u2580\u2584  \u2580\u2580\u2588\u2588\u2588 \u2580       \u2584\u2584\r\n     \u2584\u2588\u2588\u2588\u2580\u2580\u2588\u2588\u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584 \u2584\u2580\u2580\u2580\u2580\u2580\u2580\u2588\u258c\r\n   \u2588\u2588\u2580\u2584\u2584\u2584\u2588\u2588\u2580\u2584\u2588\u2588\u2588\u2580 \u2580\u2580\u2588\u2588\u2588\u2588      \u2584\u2588\u2588\r\n\u2584\u2580\u2580\u2580\u2584\u2588\u2588\u2584\u2580\u2580\u258c\u2588\u2588\u2588\u2588\u2592\u2592\u2592\u2592\u2592\u2592\u2588\u2588\u2588     \u258c\u2584\u2584\u2580\r\n\u258c    \u2590\u2580\u2588\u2588\u2588\u2588\u2590\u2588\u2588\u2588\u2592\u2592\u2592\u2592\u2592\u2590\u2588\u2588\u258c\r\n\u2580\u2584\u2584\u2584\u2584\u2580   \u2580\u2580\u2588\u2588\u2588\u2588\u2592\u2592\u2592\u2592\u2584\u2588\u2588\u2580\r\n          \u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\r\n        \u2584\u2584\u2588\u2588\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2588\r\n      \u2584\u2588\u2588\u2580     \u2580\u2580\u2580  \u2588\r\n     \u2584\u2588             \u2590\u258c\r\n \u2584\u2584\u2584\u2584\u2588\u258c              \u2580\u2588\u2584\u2584\u2584\u2584\u2580\u2580\u2584\r\n\u258c     \u2590                \u2580\u2580\u2584\u2584\u2584\u2580\r\n \u2580\u2580\u2584\u2584\u2580\r\n\r\n[29-11-2016 20:04:07%f] 19034-INFO sanic::run():l284 > Goin' Fast @ http://127.0.0.1:8000\r\n[29-11-2016 20:04:11%f] 19034-INFO __init__::wrapper():l53 > Entering calculate_csv()...\r\n[29-11-2016 20:04:11%f] 19034-DEBUG __init__::wrapper():l64 >   args={'request': <sanic.request.Request object at 0x7f17a6354bc8>}, kwargs={}\r\n[29-11-2016 20:04:11%f] 19034-INFO webapp::calculate_csv():l56 > Receiving a request to /csv_upload\r\n[29-11-2016 20:04:11%f] 19034-INFO webapp::calculate_csv():l59 > Received the following files:\r\n[29-11-2016 20:04:11%f] 19034-INFO webapp::calculate_csv():l64 >        #of files: 1, file_names: [('csv_file', 'data.csv')]\r\n[29-11-2016 20:04:11%f] 19034-INFO webapp::calculate_csv():l90 > Content writtent to tempfile...\r\n[29-11-2016 20:04:11%f] 19034-INFO webapp::calculate_csv():l95 > CSV dialect '<class 'csv.Sniffer.sniff.<locals>.dialect'>' sniffed...\r\n[29-11-2016 20:04:11%f] 19034-INFO webapp::calculate_csv():l100 > #rows in csv_file: 70\r\n[29-11-2016 20:04:11%f] 19034-INFO webapp::calculate_csv():l102 > Parsing time records...\r\n[29-11-2016 20:04:11%f] 19034-INFO __init__::wrapper():l53 > Entering parse_csv_reader_content()...\r\n```", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/176/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/176/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/sanic-org/sanic/issues/116", "repository_url": "https://api.github.com/repos/sanic-org/sanic", "labels_url": "https://api.github.com/repos/sanic-org/sanic/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/sanic-org/sanic/issues/116/comments", "events_url": "https://api.github.com/repos/sanic-org/sanic/issues/116/events", "html_url": "https://github.com/sanic-org/sanic/issues/116", "id": 185273941, "node_id": "MDU6SXNzdWUxODUyNzM5NDE=", "number": 116, "title": "Unparseable JSON should not be ignored", "user": {"login": "jasonab", "id": 111883, "node_id": "MDQ6VXNlcjExMTg4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/111883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonab", "html_url": "https://github.com/jasonab", "followers_url": "https://api.github.com/users/jasonab/followers", "following_url": "https://api.github.com/users/jasonab/following{/other_user}", "gists_url": "https://api.github.com/users/jasonab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonab/subscriptions", "organizations_url": "https://api.github.com/users/jasonab/orgs", "repos_url": "https://api.github.com/users/jasonab/repos", "events_url": "https://api.github.com/users/jasonab/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonab/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 382692932, "node_id": "MDU6TGFiZWwzODI2OTI5MzI=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 464641209, "node_id": "MDU6TGFiZWw0NjQ2NDEyMDk=", "url": "https://api.github.com/repos/sanic-org/sanic/labels/needs%20investigation", "name": "needs investigation", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-10-26T01:21:32Z", "updated_at": "2018-09-13T08:17:19Z", "closed_at": "2016-12-08T16:27:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "request.py, line 64\n\nReturning a None here causes breakage in application code further down the line. Generate a 400 error here on malformed JSON to protect the server.\n", "reactions": {"url": "https://api.github.com/repos/sanic-org/sanic/issues/116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/sanic-org/sanic/issues/116/timeline", "performed_via_github_app": null, "state_reason": "completed"}]