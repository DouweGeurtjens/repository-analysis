[{"url": "https://api.github.com/repos/ethereum/web3.py/issues/1560", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/1560/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/1560/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/1560/events", "html_url": "https://github.com/ethereum/web3.py/issues/1560", "id": 542694641, "node_id": "MDU6SXNzdWU1NDI2OTQ2NDE=", "number": 1560, "title": "Contract event overloading breaks `hasattr`", "user": {"login": "Arachnid", "id": 17865, "node_id": "MDQ6VXNlcjE3ODY1", "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arachnid", "html_url": "https://github.com/Arachnid", "followers_url": "https://api.github.com/users/Arachnid/followers", "following_url": "https://api.github.com/users/Arachnid/following{/other_user}", "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions", "organizations_url": "https://api.github.com/users/Arachnid/orgs", "repos_url": "https://api.github.com/users/Arachnid/repos", "events_url": "https://api.github.com/users/Arachnid/events{/privacy}", "received_events_url": "https://api.github.com/users/Arachnid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}, {"id": 423939244, "node_id": "MDU6TGFiZWw0MjM5MzkyNDQ=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Good%20First%20Issue", "name": "Good First Issue", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-26T23:37:44Z", "updated_at": "2020-03-31T20:57:47Z", "closed_at": "2020-03-31T20:57:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Version: 5.0.0a6\r\n* Python: 3.7\r\n* OS: linux\r\n\r\n### What was wrong?\r\nCalling `hasattr` on a contract events object should return `True` or `False` as appropriate. Instead, it raises the following exception:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"tools/get_names.py\", line 101, in <module>\r\n    main(parser.parse_args())\r\n  File \"tools/get_names.py\", line 89, in main\r\n    if hasattr(registrar.events, 'BidRevealed'):\r\n  File \"/home/user/.local/lib/python3.7/site-packages/web3/contract.py\", line 200, in __getattr__\r\n    \"Are you sure you provided the correct contract abi?\"\r\nweb3.exceptions.MismatchedABI: (\"The event 'BidRevealed' was not found in this contract's abi. \", 'Are you sure you provided the correct contract abi?')\r\n```\r\n\r\n### How can it be fixed?\r\n\r\nFix the 'helpful' overloading of `__getattr__` to raise the exception expected by Python (preferable), or implement `__hasattr__`.", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/1560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/1560/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/ethereum/web3.py/issues/1127", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/1127/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/1127/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/1127/events", "html_url": "https://github.com/ethereum/web3.py/issues/1127", "id": 374204372, "node_id": "MDU6SXNzdWUzNzQyMDQzNzI=", "number": 1127, "title": "Cannot send the double list into a function with parameter type bytes32[10][] ", "user": {"login": "ayeteng", "id": 12135212, "node_id": "MDQ6VXNlcjEyMTM1MjEy", "avatar_url": "https://avatars.githubusercontent.com/u/12135212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayeteng", "html_url": "https://github.com/ayeteng", "followers_url": "https://api.github.com/users/ayeteng/followers", "following_url": "https://api.github.com/users/ayeteng/following{/other_user}", "gists_url": "https://api.github.com/users/ayeteng/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayeteng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayeteng/subscriptions", "organizations_url": "https://api.github.com/users/ayeteng/orgs", "repos_url": "https://api.github.com/users/ayeteng/repos", "events_url": "https://api.github.com/users/ayeteng/events{/privacy}", "received_events_url": "https://api.github.com/users/ayeteng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-10-26T02:40:08Z", "updated_at": "2018-11-14T23:42:50Z", "closed_at": "2018-11-14T23:39:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Version: 4.7.2\r\n* Python: 3.6\r\n* OS: osx\r\n* `pip freeze` output\r\n\r\n```\r\nurllib3==1.23\r\nPillow==5.2.0\r\npy_solc==2.2.0\r\nweb3==4.7.2\r\nrequests==2.19.1\r\nethereum_input_decoder==0.2.2\r\ntornado==5.1\r\nbcrypt==3.1.4\r\nipfsapi==0.4.3\r\nmysqlclient==1.3.13\r\nPyJWT==1.6.4\r\npymongo==3.7.1\r\npython-telegram-bot==11.1.0\r\npytz==2018.5\r\n```\r\n\r\n### What was wrong?\r\n\r\nThe solidity function defined:\r\n```\r\nfunction set_first_step(bytes32[10][] INPUT_1) public {...}\r\n```\r\n\r\nWhen use web3 tx to call solidity function, I try to use double list but I get complain from the output. How can I fix this issue?\r\n\r\nThe INPUT_1 array:\r\n```\r\nINPUT_1 = [[bytes(range(idx, 32 + idx)) for idx in range(10)] * 2]\r\n```\r\n\r\nThe web3 function:\r\n```\r\ntx_hash = self.contract_instance['../contracts/n1.sol:node1'].functions.set_first_step(INPUT1).transact({'from': self.w3.toChecksumAddress(unit['detail_list'][1]), 'gas': 3400000})\r\n```\r\n\r\nThe output from web3:\r\n```\r\nCould not identify the intended function with name `set_first_step`, positional argument(s) of type `( <class 'list'>)` and keyword argument(s) of type `{}`.\r\nFound 1 function(s) with the name `set_first_step`: ['set_first_step(bytes32[10][])']\r\nFunction invocation failed due to no matching argument types.\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/1127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/1127/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/ethereum/web3.py/issues/1104", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/1104/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/1104/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/1104/events", "html_url": "https://github.com/ethereum/web3.py/pull/1104", "id": 369252706, "node_id": "MDExOlB1bGxSZXF1ZXN0MjIyMjM4MzI4", "number": 1104, "title": "Upgrade eth-utils to 1.2.0", "user": {"login": "katakonst", "id": 6519792, "node_id": "MDQ6VXNlcjY1MTk3OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/6519792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/katakonst", "html_url": "https://github.com/katakonst", "followers_url": "https://api.github.com/users/katakonst/followers", "following_url": "https://api.github.com/users/katakonst/following{/other_user}", "gists_url": "https://api.github.com/users/katakonst/gists{/gist_id}", "starred_url": "https://api.github.com/users/katakonst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/katakonst/subscriptions", "organizations_url": "https://api.github.com/users/katakonst/orgs", "repos_url": "https://api.github.com/users/katakonst/repos", "events_url": "https://api.github.com/users/katakonst/events{/privacy}", "received_events_url": "https://api.github.com/users/katakonst/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-11T18:37:09Z", "updated_at": "2018-10-11T23:02:19Z", "closed_at": "2018-10-11T23:02:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/ethereum/web3.py/pulls/1104", "html_url": "https://github.com/ethereum/web3.py/pull/1104", "diff_url": "https://github.com/ethereum/web3.py/pull/1104.diff", "patch_url": "https://github.com/ethereum/web3.py/pull/1104.patch", "merged_at": "2018-10-11T23:02:18Z"}, "body": "### What was wrong?\r\n\r\nRelated to Issue #1102\r\n\r\n### How was it fixed?\r\n\r\nUpgraded minimum eth-utils  version to 1.2.0\r\n\r\n#### Cute Animal Picture\r\n![image](https://user-images.githubusercontent.com/6519792/46826051-ad8c1b00-cd9d-11e8-815c-b054d486c9f6.png)\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/1104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/1104/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/ethereum/web3.py/issues/521", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/521/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/521/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/521/events", "html_url": "https://github.com/ethereum/web3.py/issues/521", "id": 283967048, "node_id": "MDU6SXNzdWUyODM5NjcwNDg=", "number": 521, "title": "ConciseContract does not allow interfacing with methods through standard API", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-21T18:30:05Z", "updated_at": "2017-12-29T22:15:22Z", "closed_at": "2017-12-29T22:15:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "* Version: 0.3.x and 0.4.x\r\n\r\n\r\n### What was wrong?\r\n\r\n```python\r\n# This works:\r\nprint(gnt.balanceOf(GNT_ADDR))\r\n# This does not:\r\nprint(gnt.call({'from': web3.eth.coinbase}).balanceOf(GNT_ADDR))\r\n```\r\n\r\nThe later produces this error:\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"./check.py\", line 20, in <module>\r\n    print(gnt.call({'from': web3.eth.coinbase}).balanceOf(GNT_ADDR))\r\n  File \".../lib/python3.5/site-packages/web3/contract.py\", line 805, in __call__\r\n    return self.__prepared_function(**kwargs)(*args)\r\n  File \".../lib/python3.5/site-packages/web3/contract.py\", line 834, in call_contract_function\r\n    transaction=transaction,\r\n  File \".../lib/python3.5/site-packages/web3/utils/decorators.py\", line 17, in _wrapper\r\n    return self.method(obj, *args, **kwargs)\r\n  File \".../lib/python3.5/site-packages/web3/contract.py\", line 695, in _prepare_transaction\r\n    fn_kwargs,\r\n  File \".../lib/python3.5/site-packages/eth_utils/string.py\", line 85, in inner\r\n    return force_obj_to_text(fn(*args, **kwargs))\r\n  File \".../lib/python3.5/site-packages/web3/contract.py\", line 734, in _encode_transaction_data\r\n    fn_name, args, kwargs,\r\n  File \".../lib/python3.5/site-packages/web3/contract.py\", line 663, in _get_function_info\r\n    fn_abi = cls._find_matching_fn_abi(fn_name, args, kwargs)\r\n  File \".../lib/python3.5/site-packages/web3/contract.py\", line 627, in _find_matching_fn_abi\r\n    raise ValueError(\"No matching functions found\")\r\nValueError: No matching functions found\r\n```\r\n\r\nThe error occurs because `ConciseContract` tries to lookup a function named `call`.\r\n\r\n### How can it be fixed?\r\n\r\nThe `ConciseContract` class should be augmented such that the `__getattr__` method will return the existing attribute on the contract class if present, only falling back to the contract method if no attribute by the requested name exists.", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/521/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/ethereum/web3.py/issues/443", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/443/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/443/events", "html_url": "https://github.com/ethereum/web3.py/issues/443", "id": 275152658, "node_id": "MDU6SXNzdWUyNzUxNTI2NTg=", "number": 443, "title": "Suspicion that `@reject_recursive_repeats` is not thread-safe", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-19T11:49:16Z", "updated_at": "2017-11-22T21:27:53Z", "closed_at": "2017-11-22T21:27:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Version: 3.16.2\r\n* Python: 3.6\r\n* OS: osx\r\n\r\n\r\n### What was wrong?\r\n\r\nWhen executing a few contract calls concurrently, I kept getting errors like:\r\n\r\n```\r\nFile \"/usr/local/lib/python3.6/site-packages/web3/contract.py\", line 870, in call_contract_function\r\n    normalized_data = map_abi_data(normalizers, output_types, output_data)\r\n  File \"/usr/local/lib/python3.6/site-packages/eth_utils/string.py\", line 85, in inner\r\n    return force_obj_to_text(fn(*args, **kwargs))\r\n  File \"/usr/local/lib/python3.6/site-packages/web3/utils/abi.py\", line 437, in map_abi_data\r\n    return pipe(data, *pipeline)\r\n  File \"cytoolz/functoolz.pyx\", line 586, in cytoolz.functoolz.pipe (cytoolz/functoolz.c:10663)\r\n  File \"cytoolz/functoolz.pyx\", line 562, in cytoolz.functoolz.c_pipe (cytoolz/functoolz.c:10494)\r\n  File \"/usr/local/lib/python3.6/site-packages/web3/utils/decorators.py\", line 31, in wrapped\r\n    wrapped_val = to_wrap(*args)\r\n  File \"/usr/local/lib/python3.6/site-packages/web3/utils/formatters.py\", line 117, in recursive_map\r\n    items_mapped = map_collection(recurse, data)\r\n  File \"/usr/local/lib/python3.6/site-packages/web3/utils/formatters.py\", line 104, in map_collection\r\n    return datatype(map(func, collection))\r\n  File \"/usr/local/lib/python3.6/site-packages/web3/utils/formatters.py\", line 116, in recurse\r\n    return recursive_map(func, item)\r\n  File \"/usr/local/lib/python3.6/site-packages/web3/utils/decorators.py\", line 29, in wrapped\r\n    raise ValueError('Recursively called %s with %r' % (to_wrap, args))\r\nValueError: Recursively called <function recursive_map at 0x7f012ea030d0> with (<function strip_abi_type at 0x7f012ea06ae8>, ABITypedData(abi_type='address', data='0x168910909606A2Fca90D4C28Fa39b50407b9C526'))\r\n```\r\n\r\nand\r\n\r\n```\r\n  File \"/usr/local/lib/python3.6/site-packages/web3/contract.py\", line 870, in call_contract_function\r\n    normalized_data = map_abi_data(normalizers, output_types, output_data)\r\n  File \"/usr/local/lib/python3.6/site-packages/eth_utils/string.py\", line 85, in inner\r\n    return force_obj_to_text(fn(*args, **kwargs))\r\n  File \"/usr/local/lib/python3.6/site-packages/web3/utils/abi.py\", line 437, in map_abi_data\r\n    return pipe(data, *pipeline)\r\n  File \"cytoolz/functoolz.pyx\", line 586, in cytoolz.functoolz.pipe (cytoolz/functoolz.c:10663)\r\n  File \"cytoolz/functoolz.pyx\", line 562, in cytoolz.functoolz.c_pipe (cytoolz/functoolz.c:10494)\r\n  File \"/usr/local/lib/python3.6/site-packages/web3/utils/decorators.py\", line 29, in wrapped\r\n    raise ValueError('Recursively called %s with %r' % (to_wrap, args))\r\nValueError: Recursively called <function recursive_map at 0x7f012ea030d0> with (<function strip_abi_type at 0x7f012ea06ae8>, [ABITypedData(abi_type='uint256', data=1000000000000000000), ABITypedData(abi_type='address', data='0xC66eA802717bFb9833400264Dd12c2bCeAa34a6d'), ABITypedData(abi_type='uint256', data=100000000000000000000), ABITypedData(abi_type='address', data='0xECF8F87f810EcF450940c9f60066b4a7a501d6A7'), ABITypedData(abi_type='address', data='0xbe69Be9133DAA77AeAFcA0d6330c7Ba44f597b15'), ABITypedData(abi_type='bool', data=True), ABITypedData(abi_type='uint64', data=1505245070)])\r\n```\r\n\r\nWe are connecting to a Parity node.\r\n\r\n### How can it be fixed?\r\n\r\nMy suspicion is that because `@reject_recursive_repeats` keeps state in `to_wrap.__already_called`, this is not thread-safe and will fail if two threads want to parse the same data at the same time.\r\n", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/443/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/ethereum/web3.py/issues/440", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/440/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/440/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/440/events", "html_url": "https://github.com/ethereum/web3.py/issues/440", "id": 275073257, "node_id": "MDU6SXNzdWUyNzUwNzMyNTc=", "number": 440, "title": "sendRawTransaction doesn't produce valid RPC request", "user": {"login": "monokh", "id": 11529637, "node_id": "MDQ6VXNlcjExNTI5NjM3", "avatar_url": "https://avatars.githubusercontent.com/u/11529637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/monokh", "html_url": "https://github.com/monokh", "followers_url": "https://api.github.com/users/monokh/followers", "following_url": "https://api.github.com/users/monokh/following{/other_user}", "gists_url": "https://api.github.com/users/monokh/gists{/gist_id}", "starred_url": "https://api.github.com/users/monokh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/monokh/subscriptions", "organizations_url": "https://api.github.com/users/monokh/orgs", "repos_url": "https://api.github.com/users/monokh/repos", "events_url": "https://api.github.com/users/monokh/events{/privacy}", "received_events_url": "https://api.github.com/users/monokh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-18T11:33:50Z", "updated_at": "2017-11-22T21:28:34Z", "closed_at": "2017-11-22T21:28:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Version: 4.0.0-beta.1\r\n* Python: 3.5\r\n* OS: osx\r\n\r\n### What was wrong?\r\n\r\nTrying to sign and send a raw transaction produces an error indicating the RPC request is invalid. \r\n\r\n* The code which produced the error ([straight from the docs](http://web3py.readthedocs.io/en/latest/web3.eth.account.html#web3.eth.account.Account.signTransaction)) :\r\n```\r\nfrom web3 import Web3, HTTPProvider\r\n\r\nw3 = Web3(HTTPProvider('https://mainnet.infura.io'))\r\ntransaction = {\r\n    'to': '0xF0109fC8DF283027b6285cc889F5aA624EaC1F55',\r\n    'value': 1000000000,\r\n    'gas': 2000000,\r\n    'gasPrice': 234567897654321,\r\n    'nonce': 0,\r\n    'chainId': 1\r\n}\r\nkey = '0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318'\r\nsigned = w3.eth.account.signTransaction(transaction, key)\r\nprint(Web3.toHex(signed.rawTransaction))\r\ntx = w3.eth.sendRawTransaction(signed.rawTransaction)\r\n```\r\n* The full output of the error\r\n```\r\nTraceback (most recent call last):\r\n  File \"justtesting.py\", line 14, in <module>\r\n    tx = w3.eth.sendRawTransaction(signed.rawTransaction)\r\n  File \"/Users/monokh/Code/web3.py/web3/eth.py\", line 222, in sendRawTransaction\r\n    [raw_transaction],\r\n  File \"/Users/monokh/Code/web3.py/web3/manager.py\", line 92, in request_blocking\r\n    raise ValueError(response[\"error\"])\r\nValueError: {'message': 'invalid argument 0: json: cannot unmarshal invalid hex string into Go value of type hexutil.Bytes', 'code': -32602}\r\n```\r\n* What type of node you were connecting to.\r\nhttps://mainnet.infura.io\r\n`testrpc` produces similar error: `ValueError: {'code': -32000, 'message': 'Error: Invalid Signature`\r\n\r\n### How can it be fixed?\r\n\r\nThe web3py version produces the signed message: `0xf86a8086d55698372431831e848094f0109fc8df283027b6285cc889f5aa624eac1f55843b9aca008025a009ebb6ca057a0535d6186462bc0b465b561c94a295bdb0621fc19208ab149a9ca0440ffd775ce91a833ab410777204d5341a6f9fa91216a6f3ee2c051fea6a0428`\r\nThe web3.js version produces an identical signed message.\r\n\r\nHere's the web3.js version: ``\r\n\r\n```\r\nvar Web3 = require('web3');\r\nvar web3 = new Web3(new Web3.providers.HttpProvider(\"https://mainnet.infura.io\"));\r\n\r\nvar Tx = require('ethereumjs-tx');\r\nvar privateKey = new Buffer('4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318', 'hex')\r\n\r\nvar rawTx = {\r\n    'to': '0xF0109fC8DF283027b6285cc889F5aA624EaC1F55',\r\n    'value': web3.utils.toHex(1000000000),\r\n    'gas': web3.utils.toHex(2000000),\r\n    'gasPrice': web3.utils.toHex(234567897654321),\r\n    'nonce': web3.utils.toHex(0),\r\n    'chainId': 1\r\n}\r\n\r\nvar tx = new Tx(rawTx);\r\ntx.sign(privateKey);\r\n\r\nvar serializedTx = tx.serialize();\r\n\r\nweb3.eth.sendSignedTransaction('0x' + serializedTx.toString('hex'), function(err, hash) {\r\n  if (!err) {\r\n    console.log(hash);\r\n  } else {\r\n    console.log(err); \r\n  }\r\n});\r\n```\r\n\r\nSo it seems the transaction signing is working correctly but something in the process of encoding that for the RPC request is going wrong.", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/440/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/440/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/ethereum/web3.py/issues/437", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/437/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/437/events", "html_url": "https://github.com/ethereum/web3.py/issues/437", "id": 275022443, "node_id": "MDU6SXNzdWUyNzUwMjI0NDM=", "number": 437, "title": "web3.auto raises unclear exception if no client is live", "user": {"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-17T23:03:18Z", "updated_at": "2017-12-01T01:43:32Z", "closed_at": "2017-12-01T01:43:32Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "* Version: 4.0.0-beta.1\r\n* OS: linux\r\n\r\n\r\n### What was wrong?\r\n\r\nIf no client is live, I expect w3 to return as `None` in this case, but instead I get an exception.\r\n```\r\nfrom web3.auto import w3\r\n```\r\n\r\ncc @Sebohe \r\n\r\n> ~/code/ethtoken/ethtoken/main.py in eip20_token(address, w3, **kwargs)\r\n>      23     '''\r\n>      24     if w3 is None:\r\n> ---> 25         from web3.auto import w3\r\n>      26         if w3 is None:\r\n>      27             raise RuntimeError(\"Could not auto-detect web3 connection, please supply it as arg w3\")\r\n> \r\n> ~/code/ethtoken/venv/lib/python3.5/site-packages/web3/auto/__init__.py in <module>()\r\n>       2 \r\n>       3 for connector in ('ipc', 'http'):\r\n> ----> 4     connection = importlib.import_module('web3.auto.' + connector)\r\n>       5     if connection.w3:\r\n>       6         w3 = connection.w3\r\n> \r\n> /usr/lib/python3.5/importlib/__init__.py in import_module(name, package)\r\n>     124                 break\r\n>     125             level += 1\r\n> --> 126     return _bootstrap._gcd_import(name[level:], package, level)\r\n>     127 \r\n>     128 \r\n> \r\n> ~/code/ethtoken/venv/lib/python3.5/site-packages/web3/auto/ipc.py in <module>()\r\n>      14 \r\n>      15 \r\n> ---> 16 w3 = connect()\r\n> \r\n> ~/code/ethtoken/venv/lib/python3.5/site-packages/web3/auto/ipc.py in connect()\r\n>       8 def connect():\r\n>       9     w3 = Web3(IPCProvider(get_default_ipc_path()))\r\n> ---> 10     if w3.isConnected():\r\n>      11         return w3\r\n>      12 \r\n> \r\n> ~/code/ethtoken/venv/lib/python3.5/site-packages/web3/main.py in isConnected(self)\r\n>     155     def isConnected(self):\r\n>     156         for provider in self.providers:\r\n> --> 157             if provider.isConnected():\r\n>     158                 return True\r\n>     159         else:\r\n> \r\n> ~/code/ethtoken/venv/lib/python3.5/site-packages/web3/providers/base.py in isConnected(self)\r\n>      73     def isConnected(self):\r\n>      74         try:\r\n> ---> 75             response = self.make_request('web3_clientVersion', [])\r\n>      76         except IOError:\r\n>      77             return False\r\n> \r\n> ~/code/ethtoken/venv/lib/python3.5/site-packages/web3/providers/ipc.py in make_request(self, method, params)\r\n>     139         request = self.encode_rpc_request(method, params)\r\n>     140 \r\n> --> 141         with self._lock, self._socket as sock:\r\n>     142             sock.sendall(request)\r\n>     143             raw_response = b\"\"\r\n> \r\n> ~/code/ethtoken/venv/lib/python3.5/site-packages/web3/providers/ipc.py in __enter__(self)\r\n>      37     def __enter__(self):\r\n>      38         if not self.sock:\r\n> ---> 39             self.sock = get_ipc_socket(self.ipc_path)\r\n>      40         return self.sock\r\n>      41 \r\n> \r\n> ~/code/ethtoken/venv/lib/python3.5/site-packages/web3/providers/ipc.py in get_ipc_socket(ipc_path, timeout)\r\n>      24     else:\r\n>      25         sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\r\n> ---> 26         sock.connect(ipc_path)\r\n>      27         sock.settimeout(timeout)\r\n>      28         return sock\r\n> \r\n> TypeError: a bytes-like object is required, not 'NoneType'\r\n\r\n\r\n### How can it be fixed?\r\n\r\n* Add a new test to verify the situation, and prevent regressions\r\n* `isConnected` should short-circuit with something like: `if self.ipc_path is None: return False`\r\n", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/437/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/ethereum/web3.py/issues/337", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/337/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/337/events", "html_url": "https://github.com/ethereum/web3.py/pull/337", "id": 263994908, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ1NTI0NzA4", "number": 337, "title": "Warn that py2 is deprecated, plus guidance in docs", "user": {"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-09T19:00:44Z", "updated_at": "2017-10-09T19:50:54Z", "closed_at": "2017-10-09T19:50:14Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/ethereum/web3.py/pulls/337", "html_url": "https://github.com/ethereum/web3.py/pull/337", "diff_url": "https://github.com/ethereum/web3.py/pull/337.diff", "patch_url": "https://github.com/ethereum/web3.py/pull/337.patch", "merged_at": "2017-10-09T19:50:14Z"}, "body": "### What was wrong?\r\n\r\n#300 Needed to warn about py2 deprecation.\r\n\r\n### How was it fixed?\r\n\r\nAdded deprecation warning, plus an environment note in the docs\r\n\r\nAlso, trying out merging to the v3 branch, a la #336 \r\n\r\nFor backported items that belong in both versions, we can manually merge to master after doing a PR to v3. Any better idea?\r\n\r\n#### Cute Animal Picture\r\n\r\n![Cute animal picture](https://media.mnn.com/assets/images/2014/01/Blue-blanket-JF_0.jpg.838x0_q80.jpg)\r\n", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/337/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/ethereum/web3.py/issues/150", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/150/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/150/events", "html_url": "https://github.com/ethereum/web3.py/issues/150", "id": 200417367, "node_id": "MDU6SXNzdWUyMDA0MTczNjc=", "number": 150, "title": "`web3.eth.contract` does not perform validation on `address` parameter.", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}, {"id": 423939244, "node_id": "MDU6TGFiZWw0MjM5MzkyNDQ=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Good%20First%20Issue", "name": "Good First Issue", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-12T16:40:09Z", "updated_at": "2017-07-18T15:27:43Z", "closed_at": "2017-07-18T15:27:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### What was wrong?\r\n\r\nThis code does not throw any errors or warnings.\r\n\r\n```python\r\nabi = [...]  # the contract ABI\r\ncode = \"0x...\"  # the contract code\r\nweb3.eth.contract(abi, code)\r\n```\r\n\r\nThe above code is actually passing in the `code` as the `address` parameter since the function signature of `web3.eth.contract` is `def contract(self, abi, address=None, **kwargs):`.  \r\n\r\nValidating the `address` is well formed (and potentially normalizing it) is trivial to do and would keep this subtle error from happening.\r\n\r\n#### Cute Animal Picture\r\n\r\n![baby_squirrel_sleeping](https://cloud.githubusercontent.com/assets/824194/21898719/fc102a6c-d8aa-11e6-8127-284761e5b405.jpg)\r\n", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/150/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/ethereum/web3.py/issues/144", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/144/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/144/events", "html_url": "https://github.com/ethereum/web3.py/issues/144", "id": 198387435, "node_id": "MDU6SXNzdWUxOTgzODc0MzU=", "number": 144, "title": "-1 on int8 weird value", "user": {"login": "datgrog", "id": 5671336, "node_id": "MDQ6VXNlcjU2NzEzMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/5671336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/datgrog", "html_url": "https://github.com/datgrog", "followers_url": "https://api.github.com/users/datgrog/followers", "following_url": "https://api.github.com/users/datgrog/following{/other_user}", "gists_url": "https://api.github.com/users/datgrog/gists{/gist_id}", "starred_url": "https://api.github.com/users/datgrog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/datgrog/subscriptions", "organizations_url": "https://api.github.com/users/datgrog/orgs", "repos_url": "https://api.github.com/users/datgrog/repos", "events_url": "https://api.github.com/users/datgrog/events{/privacy}", "received_events_url": "https://api.github.com/users/datgrog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-02T22:37:53Z", "updated_at": "2017-03-22T18:07:48Z", "closed_at": "2017-03-22T18:07:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Version: 3.4.4\r\n* Python: 2.7.10\r\n* OS: osx\r\n\r\n\r\n### What was wrong?\r\n\r\nAssuming that \"-1\" can be represented by the int8 type (range -128;+127) I have this contract\r\n```\r\ncontract Example {\r\n    int8 myInt = -1;\r\n\r\n    function getMyInt() constant returns (int8) {\r\n        return myInt;\r\n    }\r\n\r\n    function getMyLittleInt() constant returns (int8 myLittleInt) {\r\n        myLittleInt = -1;\r\n    }\r\n}\r\n```\r\nthen I get an \"instance\" of this with web3.py and try to retrieve it but this is what I get :  \r\n```\r\n>>> abi = json.loads('[{\"constant\":true,\"inputs\":[],\"name\":\"getMyInt\",\"outputs\":[{\"name\":\"\",\"type\":\"int8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyLittleInt\",\"outputs\":[{\"name\":\"myLittleInt\",\"type\":\"int8\"}],\"payable\":false,\"type\":\"function\"}]')\r\n>>> myIntContract = web3.eth.contract(abi, address=\"0x1d4e3694b0155bf821963793ecac3b84f4a0815f\")\r\n>>> myIntContract\r\n<web3.contract.Contract object at 0x1075a6290>\r\n>>> myIntContract.call().getMyInt()\r\n115792089237316195423570985008687907853269984665640564039457584007913129639679L\r\n>>> myIntContract.call().getMyLittleInt()\r\n115792089237316195423570985008687907853269984665640564039457584007913129639679L\r\n```\r\n\r\nIs that right ? What's wrong ?\r\n\r\n#### Cute Animal Picture\r\n\r\n![Cute animal picture](http://10wallpaper.com/wallpaper/medium/1109/baby_seal-Animal_World_Series_Wallpaper_medium.jpg)\r\n", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/144/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/ethereum/web3.py/issues/130", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/130/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/130/events", "html_url": "https://github.com/ethereum/web3.py/issues/130", "id": 194049047, "node_id": "MDU6SXNzdWUxOTQwNDkwNDc=", "number": 130, "title": "string and byte conversion in events.py corrupts data", "user": {"login": "brenzi", "id": 10366175, "node_id": "MDQ6VXNlcjEwMzY2MTc1", "avatar_url": "https://avatars.githubusercontent.com/u/10366175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brenzi", "html_url": "https://github.com/brenzi", "followers_url": "https://api.github.com/users/brenzi/followers", "following_url": "https://api.github.com/users/brenzi/following{/other_user}", "gists_url": "https://api.github.com/users/brenzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/brenzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brenzi/subscriptions", "organizations_url": "https://api.github.com/users/brenzi/orgs", "repos_url": "https://api.github.com/users/brenzi/repos", "events_url": "https://api.github.com/users/brenzi/events{/privacy}", "received_events_url": "https://api.github.com/users/brenzi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-12-07T13:26:53Z", "updated_at": "2017-01-02T23:38:12Z", "closed_at": "2017-01-02T23:38:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Version: 3.2.0\r\n* Python: 3.5\r\n* OS: linux\r\n\r\n\r\n### What was wrong?\r\nMy strings passed in contract events get corrupted. They look like this when I listen to events:\r\n`'_ipfsaddr': '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00`'`\r\n\r\n### solution\r\n\r\n```\r\n--- events.py   2016-12-07 14:21:27.523182611 +0100\r\n+++ events-new.py       2016-12-07 14:18:24.779178254 +0100\r\n@@ -116,8 +116,8 @@\r\n     entries using the correct types.\r\n     \"\"\"\r\n     return [\r\n-        'bytes32' if arg_type in {'bytes', 'string'} else arg_type\r\n-        for arg_type in input_types\r\n+        #'bytes32' if arg_type in {'bytes', 'string'} else arg_type\r\n+        arg_type for arg_type in input_types\r\n     ]\r\n```\r\nnow I get my ipfs address correctly:\r\n`'_ipfsaddr': 'QmSL2Zj3QmQFNcF6pethSYDF8fGYpz1LDeFiaLSzkCtAQ2'`", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/130/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/ethereum/web3.py/issues/127", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/127/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/127/events", "html_url": "https://github.com/ethereum/web3.py/issues/127", "id": 193800128, "node_id": "MDU6SXNzdWUxOTM4MDAxMjg=", "number": 127, "title": "Bug in calling methods automatically generated by solidity for public contract attributes", "user": {"login": "gkapkowski", "id": 114996, "node_id": "MDQ6VXNlcjExNDk5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/114996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gkapkowski", "html_url": "https://github.com/gkapkowski", "followers_url": "https://api.github.com/users/gkapkowski/followers", "following_url": "https://api.github.com/users/gkapkowski/following{/other_user}", "gists_url": "https://api.github.com/users/gkapkowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/gkapkowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gkapkowski/subscriptions", "organizations_url": "https://api.github.com/users/gkapkowski/orgs", "repos_url": "https://api.github.com/users/gkapkowski/repos", "events_url": "https://api.github.com/users/gkapkowski/events{/privacy}", "received_events_url": "https://api.github.com/users/gkapkowski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-06T15:23:01Z", "updated_at": "2017-09-14T15:24:07Z", "closed_at": "2017-09-14T15:24:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Version: 656903b34473a8cb658996a3dd8877ad9c734a12 (current master)\r\n* Python: 2.7/3.4/3.5\r\n* OS: osx/linux/win\r\n\r\n\r\n### What was wrong?\r\nFor solidity code:\r\n```\r\ncontract A {\r\n    mapping (address => bytes32[]) public somename;\r\n}\r\n```\r\nsolc will generate function with ABI:\r\n```\r\n{\r\n            \"constant\": True,\r\n            \"inputs\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"somename\",\r\n            \"outputs\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"type\": \"bytes32\",\r\n                    \"value\": \"0x\"\r\n                }\r\n            ],\r\n            \"payable\": False,\r\n            \"type\": \"function\"\r\n        },\r\n```\r\nNotice that both `name` keys of inputs are empty.\r\n\r\nThe code in https://github.com/pipermerriam/web3.py/blob/master/web3/utils/abi.py#L162\r\nWill squash two arguments pased to Contract.call().somename(addr, index) into one argument because it uses name as unique identifier. \r\n\r\n(Note, above examples are edited from my code so I haven't actually compile this exact code to reproduce the issue)\r\n\r\n#### Cute Animal Picture\r\n\r\n![Cute animal picture]()\r\n", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/127/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/ethereum/web3.py/issues/98", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/98/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/98/events", "html_url": "https://github.com/ethereum/web3.py/issues/98", "id": 176331524, "node_id": "MDU6SXNzdWUxNzYzMzE1MjQ=", "number": 98, "title": "default ipc path incorrect ?", "user": {"login": "euri10", "id": 1104190, "node_id": "MDQ6VXNlcjExMDQxOTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1104190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euri10", "html_url": "https://github.com/euri10", "followers_url": "https://api.github.com/users/euri10/followers", "following_url": "https://api.github.com/users/euri10/following{/other_user}", "gists_url": "https://api.github.com/users/euri10/gists{/gist_id}", "starred_url": "https://api.github.com/users/euri10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euri10/subscriptions", "organizations_url": "https://api.github.com/users/euri10/orgs", "repos_url": "https://api.github.com/users/euri10/repos", "events_url": "https://api.github.com/users/euri10/events{/privacy}", "received_events_url": "https://api.github.com/users/euri10/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}, {"id": 423939244, "node_id": "MDU6TGFiZWw0MjM5MzkyNDQ=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Good%20First%20Issue", "name": "Good First Issue", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-12T09:28:58Z", "updated_at": "2016-09-12T16:39:46Z", "closed_at": "2016-09-12T16:39:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "- Version: 2.7.1\n- Python: 2.7/3.4/3.5\n- OS: /linux/\n### What was wrong?\n\nI have a running node launched with geth, no params\n\n```\nIn[3]: from web3 import Web3, IPCProvider\nIn[4]: web3 = Web3(IPCProvider())\nIn[5]: web3.eth.coinbase\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/IPython/core/interactiveshell.py\", line 2885, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"<ipython-input-5-951bbb3a23b6>\", line 1, in <module>\n    web3.eth.coinbase\n  File \"/usr/local/lib/python3.5/dist-packages/web3-2.7.1-py3.5.egg/web3/eth.py\", line 70, in coinbase\n    return self.request_manager.request_blocking(\"eth_coinbase\", [])\n  File \"/usr/local/lib/python3.5/dist-packages/web3-2.7.1-py3.5.egg/web3/providers/manager.py\", line 20, in request_blocking\n    response_raw = self.provider.make_request(method, params)\n  File \"/usr/local/lib/python3.5/dist-packages/web3-2.7.1-py3.5.egg/web3/providers/ipc.py\", line 86, in make_request\n    with get_ipc_socket(self.ipc_path) as sock:\n  File \"/usr/lib/python3.5/contextlib.py\", line 59, in __enter__\n    return next(self.gen)\n  File \"/usr/local/lib/python3.5/dist-packages/web3-2.7.1-py3.5.egg/web3/providers/ipc.py\", line 27, in get_ipc_socket\n    sock.connect(ipc_path)\n  File \"/usr/local/lib/python3.5/dist-packages/gevent/_socket3.py\", line 294, in connect\n    raise error(result, strerror(result))\nFileNotFoundError: [Errno 2] No such file or directory\nIn[6]: web3.currentProvider.ipc_path\nOut[6]: '/home/user/ethereum/geth.ipc'\n```\n\ndebugging the stuff makes me think that in this part in https://github.com/pipermerriam/web3.py/blob/master/web3/providers/ipc.py#L49-L55 there should be a .ethereum instead of ethereum, or I'm smoking and don't use it correctly ?\n\n```\n    elif sys.platform.startswith('linux'):\n        return os.path.expanduser(os.path.join(\n            \"~\",\n            \"ethereum\",\n            testnet,\n            \"geth.ipc\",\n        ))\n```\n\non my computer the geth.ipc is there : '/home/user/.ethereum/geth.ipc'\n#### Cute Animal Picture\n\n![Cute animal picture](http://media3.s-nbcnews.com/i/streams/2013/September/130923/4B9132043-tdy-130923-panda-baby-03.jpg)\n", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/98/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/98/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/ethereum/web3.py/issues/88", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/88/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/88/events", "html_url": "https://github.com/ethereum/web3.py/pull/88", "id": 175404325, "node_id": "MDExOlB1bGxSZXF1ZXN0ODQyMzA4ODc=", "number": 88, "title": "Fix eth methods that use `latest/earliest/pending`", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-07T03:23:37Z", "updated_at": "2016-09-07T20:14:16Z", "closed_at": "2016-09-07T20:14:16Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/ethereum/web3.py/pulls/88", "html_url": "https://github.com/ethereum/web3.py/pull/88", "diff_url": "https://github.com/ethereum/web3.py/pull/88.diff", "patch_url": "https://github.com/ethereum/web3.py/pull/88.patch", "merged_at": "2016-09-07T20:14:16Z"}, "body": "### What was wrong?\n\n`web3.eth.getBlock('latest')` doesn't work, and neither do the majority of the other methods that use these sort of identifiers.\n### How was it fixed?\n\nChange logic to use the right endpoint with one of the predefined identifiers is passed in.\n#### Cute Animal Picture\n\n![snape-as-a-harry-potter-cat-harry-potter-16828518-281-400](https://cloud.githubusercontent.com/assets/824194/18319800/8cb7dee6-74e4-11e6-8bfe-861a2b42238e.jpg)\n", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/88/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/88/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/ethereum/web3.py/issues/86", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/86/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/86/events", "html_url": "https://github.com/ethereum/web3.py/pull/86", "id": 175352158, "node_id": "MDExOlB1bGxSZXF1ZXN0ODQxOTY1OTM=", "number": 86, "title": "Fix address[] return types", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-06T21:07:03Z", "updated_at": "2016-09-07T02:56:56Z", "closed_at": "2016-09-07T02:56:55Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/ethereum/web3.py/pulls/86", "html_url": "https://github.com/ethereum/web3.py/pull/86", "diff_url": "https://github.com/ethereum/web3.py/pull/86.diff", "patch_url": "https://github.com/ethereum/web3.py/pull/86.patch", "merged_at": "2016-09-07T02:56:55Z"}, "body": "### What was wrong?\n#70\n\nSolidity functions which return type `address[]` were not returning addresses with `0x` prefixes.\n### How was it fixed?\n\nAdded a generic return value normalizer that recursively normalizes return types.\n#### Cute Animal Picture\n\n![10-signs-that-your-cat-is-a-wizard-1-805-1363644760-0_big](https://cloud.githubusercontent.com/assets/824194/18291114/8d6ad60a-7443-11e6-9183-bcdd8302e584.jpg)\n", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/86/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/86/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/ethereum/web3.py/issues/80", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/80/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/80/events", "html_url": "https://github.com/ethereum/web3.py/issues/80", "id": 174815997, "node_id": "MDU6SXNzdWUxNzQ4MTU5OTc=", "number": 80, "title": "Strange error from `ethereum.tester`", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2016-09-02T18:01:35Z", "updated_at": "2017-09-14T17:21:17Z", "closed_at": "2017-09-14T17:21:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### What was wrong?\r\n\r\nOn most commands this comes out of standard out when the interpreter exits.\r\n\r\n``` python\r\nException ignored in: <bound method state.__del__ of <ethereum.tester.state object at 0x11350ca20>>\r\nTraceback (most recent call last):\r\n  File \"/Users/piper/python-environments/web3.py/lib/python3.5/site-packages/ethereum/tester.py\", line 187, in __del__\r\nAttributeError: 'NoneType' object has no attribute 'rmtree'\r\n```\r\n\r\n### What is going on?\r\n\r\nThis is a race condition that occurs when the interpreter is shutting down.  The upstream library `eth-testrpc` needs to be patched so that it doesn't create the instance of the tester client on module import but rather on demand somehow.", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/80/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/80/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/ethereum/web3.py/issues/79", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/79/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/79/events", "html_url": "https://github.com/ethereum/web3.py/pull/79", "id": 174813595, "node_id": "MDExOlB1bGxSZXF1ZXN0ODM4Mzk4MTA=", "number": 79, "title": "Fix past log filters and pull in downstream filter fixes", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201302, "node_id": "MDU6TGFiZWwzNTgyMDEzMDI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Work%20in%20Progress", "name": "Work in Progress", "color": "c5def5", "default": false, "description": null}, {"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-02T17:48:32Z", "updated_at": "2018-07-02T00:35:18Z", "closed_at": "2016-09-03T05:05:13Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/ethereum/web3.py/pulls/79", "html_url": "https://github.com/ethereum/web3.py/pull/79", "diff_url": "https://github.com/ethereum/web3.py/pull/79.diff", "patch_url": "https://github.com/ethereum/web3.py/pull/79.patch", "merged_at": "2016-09-03T05:05:13Z"}, "body": "### What was wrong?\n- There was an error in `eth-testrpc` and `ethereum-tester-client` for the filters code.\n- The way `Contract.pastEvents` was implemented caused it to call filter callbacks multiple times with the same log entries.\n### How was it fixed?\n- Updated version for `eth-testrpc` and `ethereum-tester-client`\n- Added a new filter class for `PastLogFilter` to handle historical filters.\n#### Cute Animal Picture\n\n![catwithbirdmy31](https://cloud.githubusercontent.com/assets/824194/18212962/2b6baeea-7103-11e6-99fa-81fd53995ba9.jpg)\n", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/79/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/79/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/ethereum/web3.py/issues/70", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/70/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/70/events", "html_url": "https://github.com/ethereum/web3.py/issues/70", "id": 173838342, "node_id": "MDU6SXNzdWUxNzM4MzgzNDI=", "number": 70, "title": "Calling any solidity function returning address[ ] gives address list without 0x prefix", "user": {"login": "agatsoh", "id": 15123108, "node_id": "MDQ6VXNlcjE1MTIzMTA4", "avatar_url": "https://avatars.githubusercontent.com/u/15123108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agatsoh", "html_url": "https://github.com/agatsoh", "followers_url": "https://api.github.com/users/agatsoh/followers", "following_url": "https://api.github.com/users/agatsoh/following{/other_user}", "gists_url": "https://api.github.com/users/agatsoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/agatsoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agatsoh/subscriptions", "organizations_url": "https://api.github.com/users/agatsoh/orgs", "repos_url": "https://api.github.com/users/agatsoh/repos", "events_url": "https://api.github.com/users/agatsoh/events{/privacy}", "received_events_url": "https://api.github.com/users/agatsoh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}, {"id": 423939244, "node_id": "MDU6TGFiZWw0MjM5MzkyNDQ=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Good%20First%20Issue", "name": "Good First Issue", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-29T18:22:28Z", "updated_at": "2016-09-12T15:46:24Z", "closed_at": "2016-09-12T15:46:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "- Version: 1.8.0\n- Python: 2.7.6\n- OS: Ubuntu 14.04\n### What was wrong?\n\nCalling any solidity function returning address[ ] gives address list without 0x prefix\n#### Cute Animal Picture\n\n![image](https://cloud.githubusercontent.com/assets/15123108/18062197/729941c8-6e43-11e6-8683-8598b1979f89.png)\n\n![Cute animal picture]()\n", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/70/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/70/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/ethereum/web3.py/issues/58", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/58/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/58/events", "html_url": "https://github.com/ethereum/web3.py/issues/58", "id": 170442454, "node_id": "MDU6SXNzdWUxNzA0NDI0NTQ=", "number": 58, "title": "json encode error : TypeError: Decimal('100000000000000000000') is not JSON serializable when sending a transaction", "user": {"login": "euri10", "id": 1104190, "node_id": "MDQ6VXNlcjExMDQxOTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1104190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euri10", "html_url": "https://github.com/euri10", "followers_url": "https://api.github.com/users/euri10/followers", "following_url": "https://api.github.com/users/euri10/following{/other_user}", "gists_url": "https://api.github.com/users/euri10/gists{/gist_id}", "starred_url": "https://api.github.com/users/euri10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euri10/subscriptions", "organizations_url": "https://api.github.com/users/euri10/orgs", "repos_url": "https://api.github.com/users/euri10/repos", "events_url": "https://api.github.com/users/euri10/events{/privacy}", "received_events_url": "https://api.github.com/users/euri10/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-08-10T15:13:01Z", "updated_at": "2016-08-15T19:26:06Z", "closed_at": "2016-08-15T19:26:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "- Version: 1.6.0\n- Python: 2.7/3.4/3.5\n- OS: linux\n### What was wrong?\n\nI'm trying to create an account and send funds to it from the coinbase I got this error\n\n```\nDEBUG:requests.packages.urllib3.connectionpool:\"POST / HTTP/1.1\" 200 80\nE\nweb3 = <web3.main.Web3 object at 0x7fc57de45d30>\nrequest = <SubRequest 'account' for <Function 'test_buyAsset[rpc-0-param1]'>>\nwait_for_transaction = <function wait_for_transaction.<locals>._wait_for_transaction at 0x7fc57e6a7d08>\n\n    @pytest.fixture(params=[0])\n    def account(web3, request, wait_for_transaction):\n        if (len(web3.personal.listAccounts))< 2:\n            log.debug('web3: {} {}'.format(web3, web3.personal.listAccounts))\n            new_account = create_account(web3, password='test')\n            log_who_got_what(web3)\n>           tx = web3.eth.sendTransaction({\"from\": web3.eth.coinbase, \"to\": new_account, \"value\": to_wei(100, 'ether')})\n\nPycharmProjects/ddn/tests/test_dudes.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.5/dist-packages/web3-1.6.0-py3.5.egg/web3/eth.py:208: in sendTransaction\n    [formatted_transaction],\n/usr/local/lib/python3.5/dist-packages/web3-1.6.0-py3.5.egg/web3/providers/manager.py:20: in request_blocking\n    response_raw = self.provider.make_request(method, params)\n/usr/local/lib/python3.5/dist-packages/web3-1.6.0-py3.5.egg/web3/providers/rpc.py:17: in make_request\n    request = self.encode_rpc_request(method, params)\n/usr/local/lib/python3.5/dist-packages/web3-1.6.0-py3.5.egg/web3/providers/base.py:24: in encode_rpc_request\n    \"id\": next(self.request_counter),\n/usr/lib/python3.5/json/__init__.py:230: in dumps\n    return _default_encoder.encode(obj)\n/usr/lib/python3.5/json/encoder.py:198: in encode\n    chunks = self.iterencode(o, _one_shot=True)\n/usr/lib/python3.5/json/encoder.py:256: in iterencode\n    return _iterencode(o, 0)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.encoder.JSONEncoder object at 0x7fc5833e9f98>\no = Decimal('100000000000000000000')\n\n    def default(self, o):\n        \"\"\"Implement this method in a subclass such that it returns\n            a serializable object for ``o``, or calls the base implementation\n            (to raise a ``TypeError``).\n\n            For example, to support arbitrary iterators, you could\n            implement default like this::\n\n                def default(self, o):\n                    try:\n                        iterable = iter(o)\n                    except TypeError:\n                        pass\n                    else:\n                        return list(iterable)\n                    # Let the base class default method raise the TypeError\n                    return JSONEncoder.default(self, o)\n\n            \"\"\"\n>       raise TypeError(repr(o) + \" is not JSON serializable\")\nE       TypeError: Decimal('100000000000000000000') is not JSON serializable\n\n/usr/lib/python3.5/json/encoder.py:179: TypeError\n```\n#### Cute Animal Picture\n\n![parresseux](http://pmdvod.nationalgeographic.com/NG_Video/742/275/140715-baby-sloth-orphanage-rescue-vin_640x360_304699971673.jpg)\n", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/58/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/58/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/ethereum/web3.py/issues/29", "repository_url": "https://api.github.com/repos/ethereum/web3.py", "labels_url": "https://api.github.com/repos/ethereum/web3.py/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/web3.py/issues/29/comments", "events_url": "https://api.github.com/repos/ethereum/web3.py/issues/29/events", "html_url": "https://github.com/ethereum/web3.py/pull/29", "id": 165369302, "node_id": "MDExOlB1bGxSZXF1ZXN0NzczMjM1NjY=", "number": 29, "title": "Add missing python dependencies", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 358201382, "node_id": "MDU6TGFiZWwzNTgyMDEzODI=", "url": "https://api.github.com/repos/ethereum/web3.py/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-13T16:50:47Z", "updated_at": "2016-07-13T18:21:00Z", "closed_at": "2016-07-13T18:21:00Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/ethereum/web3.py/pulls/29", "html_url": "https://github.com/ethereum/web3.py/pull/29", "diff_url": "https://github.com/ethereum/web3.py/pull/29.diff", "patch_url": "https://github.com/ethereum/web3.py/pull/29.patch", "merged_at": "2016-07-13T18:21:00Z"}, "body": "### What was wrong?\n\nThe project was missing the `rlp` and `gevent` dependencies.\n### How was it fixed?\n\nAdded them in `setup.py\n#### Cute Animal Picture\n\n> put a cute animal picture here.\n\n![f3b68c3732480809358f3fb1a58eb32e](https://cloud.githubusercontent.com/assets/824194/16811873/a522c19a-48e7-11e6-8853-a89e301f4847.jpg)\n", "reactions": {"url": "https://api.github.com/repos/ethereum/web3.py/issues/29/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/ethereum/web3.py/issues/29/timeline", "performed_via_github_app": null, "state_reason": null}]