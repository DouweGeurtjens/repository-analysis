[{"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1365", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1365/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1365/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1365/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/1365", "id": 620882289, "node_id": "MDU6SXNzdWU2MjA4ODIyODk=", "number": 1365, "title": "different results on joining queries with '+' and '&'", "user": {"login": "SeanLee97", "id": 12824323, "node_id": "MDQ6VXNlcjEyODI0MzIz", "avatar_url": "https://avatars.githubusercontent.com/u/12824323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SeanLee97", "html_url": "https://github.com/SeanLee97", "followers_url": "https://api.github.com/users/SeanLee97/followers", "following_url": "https://api.github.com/users/SeanLee97/following{/other_user}", "gists_url": "https://api.github.com/users/SeanLee97/gists{/gist_id}", "starred_url": "https://api.github.com/users/SeanLee97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SeanLee97/subscriptions", "organizations_url": "https://api.github.com/users/SeanLee97/orgs", "repos_url": "https://api.github.com/users/SeanLee97/repos", "events_url": "https://api.github.com/users/SeanLee97/events{/privacy}", "received_events_url": "https://api.github.com/users/SeanLee97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}, {"id": 2039410643, "node_id": "MDU6TGFiZWwyMDM5NDEwNjQz", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/good%20first%20issue", "name": "good first issue", "color": "7759ff", "default": true, "description": "Good for new contributors"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-19T10:59:35Z", "updated_at": "2020-12-07T22:18:14Z", "closed_at": "2020-12-07T22:18:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "elasticsearch-dsl>=7.0.0,<8.0.0\r\n\r\n```python\r\nfrom elasticsearch_dsl import Q\r\n\r\nq1 = Q('range', date1={'gt': '2020/05/19'})\r\nq2 = Q('range', date2={'gt': '2020/05/19'})\r\nq3 = Q('bool', should=[Q('match_phrase', keyword='hello'),\r\n                       Q('match_phrase', keyword='world')],\r\n       mininum_should_match=1)\r\n```\r\n\r\n### join with `+`\r\n\r\n#### join q1 and q3\r\n```python\r\nprint(q1 + q3)\r\n```\r\n\r\noutput\r\n\r\n```\r\nBool(mininum_should_match=1, must=[Range(date1={'gt': '2020/05/19'})], should=[MatchPhrase(keyword='hello'), MatchPhrase(keyword='world')])\r\n```\r\n\r\n\u2714\ufe0fthe joined query is correct .\r\n\r\n#### join q1, q2 and q3\r\n\r\n```python\r\nprint(q1 + q2 + q3)\r\n```\r\n\r\noutput\r\n\r\n```\r\nBool(must=[Range(date1={'gt': '2020/05/19'}), Range(date2={'gt': '2020/05/19'})], should=[MatchPhrase(keyword='hello'), MatchPhrase(keyword='world')])\r\n```\r\n\r\n\u26a0\ufe0f \u274cthe joined query lacks of  `minimum_should_match=1` .\r\n\r\n### join with `&`\r\n\r\n#### join q1 and q3\r\n```python\r\nprint(q1 & q3)\r\n```\r\n\r\noutput\r\n```\r\nBool(minimum_should_match=1, mininum_should_match=1, must=[Range(date1={'gt': '2020/05/19'})], should=[MatchPhrase(keyword='hello'), MatchPhrase(keyword='world')])\r\n```\r\n\u26a0\ufe0f strangely, there are two `minimum_should_match` in the joined query.\r\n\r\n#### join q1, q2 and q3\r\n\r\n```python\r\nprint(q1 & q2 & q3)\r\n```\r\n\r\noutput\r\n\r\n```\r\nBool(minimum_should_match=1, must=[Range(date1={'gt': '2020/05/19'}), Range(date2={'gt': '2020/05/19'})], should=[MatchPhrase(keyword='hello'), MatchPhrase(keyword='world')])\r\n```\r\n\u2714\ufe0fthe joined query is correct  .\r\n\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1365/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1358", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1358/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1358/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1358/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/1358", "id": 612892203, "node_id": "MDU6SXNzdWU2MTI4OTIyMDM=", "number": 1358, "title": "Reverse slices result in negative size", "user": {"login": "bk-equityzen", "id": 37187683, "node_id": "MDQ6VXNlcjM3MTg3Njgz", "avatar_url": "https://avatars.githubusercontent.com/u/37187683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bk-equityzen", "html_url": "https://github.com/bk-equityzen", "followers_url": "https://api.github.com/users/bk-equityzen/followers", "following_url": "https://api.github.com/users/bk-equityzen/following{/other_user}", "gists_url": "https://api.github.com/users/bk-equityzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/bk-equityzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bk-equityzen/subscriptions", "organizations_url": "https://api.github.com/users/bk-equityzen/orgs", "repos_url": "https://api.github.com/users/bk-equityzen/repos", "events_url": "https://api.github.com/users/bk-equityzen/events{/privacy}", "received_events_url": "https://api.github.com/users/bk-equityzen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-05T21:00:52Z", "updated_at": "2020-06-02T18:54:41Z", "closed_at": "2020-05-05T21:44:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```py\r\nsearch[20:0]\r\n```\r\nresults in `-20` as the size sent to ElasticSearch. This can possibly cause an error: `RequestError(400, 'search_phase_execution_exception', 'numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count')`\r\n\r\nProposed Solution:\r\nThe slice function should result in a minimum size of `0`\r\n\r\n```py\r\ns._extra['size'] = n.stop - (n.start or 0) if n.stop is not None else 10\r\ns._extra['size'] = max(s._extra['size'], 0)\r\n```", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1358/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1319", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1319/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1319/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1319/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/1319", "id": 572980755, "node_id": "MDU6SXNzdWU1NzI5ODA3NTU=", "number": 1319, "title": "TypeError: unhashable type: 'list'", "user": {"login": "alexanderatallah", "id": 1011391, "node_id": "MDQ6VXNlcjEwMTEzOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1011391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexanderatallah", "html_url": "https://github.com/alexanderatallah", "followers_url": "https://api.github.com/users/alexanderatallah/followers", "following_url": "https://api.github.com/users/alexanderatallah/following{/other_user}", "gists_url": "https://api.github.com/users/alexanderatallah/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexanderatallah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexanderatallah/subscriptions", "organizations_url": "https://api.github.com/users/alexanderatallah/orgs", "repos_url": "https://api.github.com/users/alexanderatallah/repos", "events_url": "https://api.github.com/users/alexanderatallah/events{/privacy}", "received_events_url": "https://api.github.com/users/alexanderatallah/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}, {"id": 2039410643, "node_id": "MDU6TGFiZWwyMDM5NDEwNjQz", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/good%20first%20issue", "name": "good first issue", "color": "7759ff", "default": true, "description": "Good for new contributors"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-28T20:13:57Z", "updated_at": "2020-12-07T15:11:35Z", "closed_at": "2020-12-07T15:11:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the value of a `must` query is a list, I get this error when calling `Search(..).update_from_dict(..)`, specifically on L219 of utils.py after calling `Query.get_dsl_class(name_or_query)(**params)`. (`name_or_query` is an array.)\r\n\r\nThe full query is valid, and works fine when used in the Elasticsearch 7 kibana dev console:\r\n\r\n```\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"must\": [\r\n        {\r\n          \"bool\": {\r\n            \"must\": [\r\n              {\r\n                \"bool\": {\r\n                  \"should\": [\r\n                    {\r\n                      \"multi_match\": {\r\n                        \"query\": \"paw\",\r\n                        \"fields\": [\r\n                          \"name^4\",\r\n                          \"description^3\"\r\n                        ],\r\n                        \"type\": \"cross_fields\",\r\n                        \"operator\": \"and\"\r\n                      }\r\n                    },\r\n                    {\r\n                      \"multi_match\": {\r\n                        \"query\": \"test\",\r\n                        \"fields\": [\r\n                          \"name^4\",\r\n                          \"description^3\"\r\n                        ],\r\n                        \"type\": \"phrase_prefix\",\r\n                        \"operator\": \"and\"\r\n                      }\r\n                    }\r\n                  ],\r\n                  \"minimum_should_match\": \"1\"\r\n                }\r\n              },\r\n              {\r\n                \"term\": {\r\n                  \"collection.name.keyword\": \"Test\"\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n```", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1319/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1203", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1203/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1203/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1203/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/1203", "id": 449817625, "node_id": "MDU6SXNzdWU0NDk4MTc2MjU=", "number": 1203, "title": "Document.search fails when using custom index= value", "user": {"login": "vanzi", "id": 416521, "node_id": "MDQ6VXNlcjQxNjUyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vanzi", "html_url": "https://github.com/vanzi", "followers_url": "https://api.github.com/users/vanzi/followers", "following_url": "https://api.github.com/users/vanzi/following{/other_user}", "gists_url": "https://api.github.com/users/vanzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/vanzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vanzi/subscriptions", "organizations_url": "https://api.github.com/users/vanzi/orgs", "repos_url": "https://api.github.com/users/vanzi/repos", "events_url": "https://api.github.com/users/vanzi/events{/privacy}", "received_events_url": "https://api.github.com/users/vanzi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-29T13:44:45Z", "updated_at": "2019-10-23T01:03:04Z", "closed_at": "2019-05-31T15:39:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using\r\n\r\n    elasticsearch==6.4.0\r\n    elasticsearch-dsl==6.4.0\r\n\r\ngiven a Document subclass called `Profile`, the following code fails\r\n\r\n    >>> connection = connections.create_connection('default', hosts=['elasticsearch'])\r\n    >>> Profile.search(index='default', using=connection).execute()\r\n    Traceback (most recent call last):\r\n      File \"/usr/local/lib/python3.7/code.py\", line 90, in runcode\r\n        exec(code, self.locals)\r\n      File \"<console>\", line 1, in <module>\r\n      File \"/srv/venv/lib/python3.7/site-packages/elasticsearch_dsl/response/__init__.py\", line 25, in __repr__\r\n        return '<Response: %r>' % (self.hits or self.aggregations)\r\n      File \"/srv/venv/lib/python3.7/site-packages/elasticsearch_dsl/response/__init__.py\", line 47, in hits\r\n        hits = AttrList(map(self._search._get_result, h['hits']))\r\n      File \"/srv/venv/lib/python3.7/site-packages/elasticsearch_dsl/utils.py\", line 38, in __init__\r\n        l = list(l)\r\n      File \"/srv/venv/lib/python3.7/site-packages/elasticsearch_dsl/search.py\", line 221, in _get_result\r\n        if hasattr(doc_type, '_matches') and doc_type._matches(hit):\r\n      File \"/srv/venv/lib/python3.7/site-packages/elasticsearch_dsl/document.py\", line 117, in _matches\r\n        return fnmatch(hit.get('_index', ''), cls._index._name) \\\r\n      File \"/usr/local/lib/python3.7/fnmatch.py\", line 35, in fnmatch\r\n        pat = os.path.normcase(pat)\r\n      File \"/usr/local/lib/python3.7/posixpath.py\", line 54, in normcase\r\n        s = os.fspath(s)\r\n    TypeError: expected str, bytes or os.PathLike object, not NoneType\r\n\r\nthis happens when `index` is passed to `search` as a param and Profile.Index is not set (which in our case it can't be as there are multiple indices that are used with this document type).\r\n\r\nI did some digging in the code and it seems that when [Request._get_result](https://github.com/elastic/elasticsearch-dsl-py/blob/6.4.0/elasticsearch_dsl/search.py#L221) calls the `Document._matches` method it does not pass the `index` name, the document method always uses `cls._index._name` which is None.\r\n\r\nIf I understand this code correctly then even if `Profile.Index` was set to something, it would still not work correctly when `index` is overwritten via `search` param since the values could be different.\r\n\r\nSo far our workaround was to override the `_matches` method and get rid of that comparison on index name, but I guess it was there for a reason so that probably breaks some use case, though I'm not sure what that could be -- if anyone could shed some light on this that would help.", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1203/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/1203/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/819", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/819/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/819/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/819/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/819", "id": 290900696, "node_id": "MDU6SXNzdWUyOTA5MDA2OTY=", "number": 819, "title": "Bool queries with different minimum_should_match values are combined incorrectly", "user": {"login": "bigbear-jrib", "id": 35732818, "node_id": "MDQ6VXNlcjM1NzMyODE4", "avatar_url": "https://avatars.githubusercontent.com/u/35732818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bigbear-jrib", "html_url": "https://github.com/bigbear-jrib", "followers_url": "https://api.github.com/users/bigbear-jrib/followers", "following_url": "https://api.github.com/users/bigbear-jrib/following{/other_user}", "gists_url": "https://api.github.com/users/bigbear-jrib/gists{/gist_id}", "starred_url": "https://api.github.com/users/bigbear-jrib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bigbear-jrib/subscriptions", "organizations_url": "https://api.github.com/users/bigbear-jrib/orgs", "repos_url": "https://api.github.com/users/bigbear-jrib/repos", "events_url": "https://api.github.com/users/bigbear-jrib/events{/privacy}", "received_events_url": "https://api.github.com/users/bigbear-jrib/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-23T16:23:15Z", "updated_at": "2018-02-06T23:08:17Z", "closed_at": "2018-02-06T23:08:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Combining two queries with different minimum_should_match values seem to result in one of the minimum_should_match values getting lost.\r\n\r\nExample:\r\n```\r\n>>> q1 = query.Q('bool', minimum_should_match=2, should=[query.Q('term', field='aa1'), query.Q('term', field='aa2'), query.Q('term', field='aa3'), query.Q('term', field='aa4')])\r\n>>> q2 = query.Q('bool', minimum_should_match=3, should=[query.Q('term', field='bb1'), query.Q('term', field='bb2'), query.Q('term', field='bb3'), query.Q('term', field='bb4')])\r\n>>> q1 | q2\r\nBool(minimum_should_match=2, should=[Term(field='aa1'), Term(field='aa2'), Term(field='aa3'), Term(field='aa4'), Term(field='bb1'), Term(field='bb2'), Term(field='bb3'), Term(field='bb4')])\r\n```\r\n\r\nI would expect instead for a new `Bool(q1, q2)` object to be created so that differing `minimum_should_match` values are preserved.\r\n\r\nI noticed the \"TODO\" in the code at https://github.com/elastic/elasticsearch-dsl-py/blob/master/elasticsearch_dsl/query.py#L98, so I suspect maybe more intricate behavior is expected.  For example, ideally, `Bools` with equal `minimum_should_match` values should be combined.\r\n\r\nProposed fix and tests illustrating the issue at:\r\nbigbear-jrib/elasticsearch-dsl-py@aedda6366b0f72101969c3f71059e0e498d86c03", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/819/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/797", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/797/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/797/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/797/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/797", "id": 284386848, "node_id": "MDU6SXNzdWUyODQzODY4NDg=", "number": 797, "title": "Filters examples use terms instead of term", "user": {"login": "bharath-elastic", "id": 28268761, "node_id": "MDQ6VXNlcjI4MjY4NzYx", "avatar_url": "https://avatars.githubusercontent.com/u/28268761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bharath-elastic", "html_url": "https://github.com/bharath-elastic", "followers_url": "https://api.github.com/users/bharath-elastic/followers", "following_url": "https://api.github.com/users/bharath-elastic/following{/other_user}", "gists_url": "https://api.github.com/users/bharath-elastic/gists{/gist_id}", "starred_url": "https://api.github.com/users/bharath-elastic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bharath-elastic/subscriptions", "organizations_url": "https://api.github.com/users/bharath-elastic/orgs", "repos_url": "https://api.github.com/users/bharath-elastic/repos", "events_url": "https://api.github.com/users/bharath-elastic/events{/privacy}", "received_events_url": "https://api.github.com/users/bharath-elastic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}, {"id": 304645373, "node_id": "MDU6TGFiZWwzMDQ2NDUzNzM=", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/documentation", "name": "documentation", "color": "bfe5bf", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-24T23:39:16Z", "updated_at": "2018-12-12T13:06:33Z", "closed_at": "2017-12-25T06:37:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Filters examples used in [https://elasticsearch-dsl.readthedocs.io/en/latest/search_dsl.html#filters](url) uses \"terms\" instead of \"term\". For example\r\n\r\n`s = s.filter('terms', tags=['search', 'python'])`\r\nshould be\r\n`s = s.filter('term', tags=['search', 'python'])`\r\nand\r\n`s = s.query('bool', filter=[Q('terms', tags=['search', 'python'])])`\r\nshould be\r\n`s = s.query('bool', filter=[Q('term', tags=['search', 'python'])])`\r\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/797/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/797/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/583", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/583/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/583/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/583/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/583", "id": 206292235, "node_id": "MDU6SXNzdWUyMDYyOTIyMzU=", "number": 583, "title": "Boolean field returned as integer value in facets ", "user": {"login": "wimglenn", "id": 6615374, "node_id": "MDQ6VXNlcjY2MTUzNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6615374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wimglenn", "html_url": "https://github.com/wimglenn", "followers_url": "https://api.github.com/users/wimglenn/followers", "following_url": "https://api.github.com/users/wimglenn/following{/other_user}", "gists_url": "https://api.github.com/users/wimglenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/wimglenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wimglenn/subscriptions", "organizations_url": "https://api.github.com/users/wimglenn/orgs", "repos_url": "https://api.github.com/users/wimglenn/repos", "events_url": "https://api.github.com/users/wimglenn/events{/privacy}", "received_events_url": "https://api.github.com/users/wimglenn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": {"login": "honzakral", "id": 32132, "node_id": "MDQ6VXNlcjMyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/32132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzakral", "html_url": "https://github.com/honzakral", "followers_url": "https://api.github.com/users/honzakral/followers", "following_url": "https://api.github.com/users/honzakral/following{/other_user}", "gists_url": "https://api.github.com/users/honzakral/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzakral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzakral/subscriptions", "organizations_url": "https://api.github.com/users/honzakral/orgs", "repos_url": "https://api.github.com/users/honzakral/repos", "events_url": "https://api.github.com/users/honzakral/events{/privacy}", "received_events_url": "https://api.github.com/users/honzakral/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "honzakral", "id": 32132, "node_id": "MDQ6VXNlcjMyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/32132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzakral", "html_url": "https://github.com/honzakral", "followers_url": "https://api.github.com/users/honzakral/followers", "following_url": "https://api.github.com/users/honzakral/following{/other_user}", "gists_url": "https://api.github.com/users/honzakral/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzakral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzakral/subscriptions", "organizations_url": "https://api.github.com/users/honzakral/orgs", "repos_url": "https://api.github.com/users/honzakral/repos", "events_url": "https://api.github.com/users/honzakral/events{/privacy}", "received_events_url": "https://api.github.com/users/honzakral/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-02-08T19:01:35Z", "updated_at": "2017-02-11T22:13:09Z", "closed_at": "2017-02-09T21:47:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using ES v5.1.2 and having an issue with the facets returning incorrect types for `Boolean` fields. Here's a minimal setup to reproduce and demonstrate the problem:\r\n\r\n```\r\nfrom elasticsearch_dsl import DocType, FacetedSearch, TermsFacet\r\nfrom elasticsearch_dsl.field import Keyword, Integer, Boolean\r\n\r\nclass Post(DocType):\r\n    comment = Keyword()\r\n    likes = Integer()\r\n    published = Boolean()\r\n    class Meta:\r\n        index = 'blog'\r\n\r\nclass PostSearch(FacetedSearch):\r\n    index = 'blog'\r\n    doc_types = [Post]\r\n    fields = 'comment', 'likes', 'published'\r\n    facets = {k: TermsFacet(field=k) for k in fields}\r\n```\r\n\r\nNow create some documents in the index, and execute a faceted search:\r\n\r\n```\r\n>>> Post.init()\r\n>>> Post(comment='potato', likes=42, published=True).save()\r\nTrue\r\n>>> Post(comment='spud', likes=12, published=False).save()\r\nTrue\r\n>>> Post(comment='foo', likes=7, published=True).save()\r\nTrue\r\n>>> search = PostSearch()\r\n>>> response = search.execute()\r\n\r\n```\r\nThe actual response data looks correct:\r\n\r\n```\r\n>>> response.hits.total\r\n3\r\n>>> vars(response[0])\r\n{'_d_': {u'comment': u'spud', u'likes': 12, u'published': False},\r\n 'meta': {u'index': u'blog', u'score': 1.0, u'id': u'AVofDCdDpUlHAgmQ...}}\r\n>>> response[0].published\r\nFalse\r\n\r\n```\r\nThat is, we have deserialized Python booleans on the search results. However, the data in the aggregations is incorrect:\r\n\r\n```\r\n>>> response.facets.to_dict()\r\n{'comment': [(u'foo', 1, False), (u'potato', 1, False), (u'spud', 1, False)],\r\n 'likes': [(7, 1, False), (12, 1, False), (42, 1, False)],\r\n 'published': [(1, 2, False), (0, 1, False)]}\r\n\r\n```\r\n\r\nThe facets should be 3-tuples of (value,count,selected). But boolean values come back as 1 and 0 ( i.e. not deserialized), so the frontend and my templates are not able to distinguish an integer type from a boolean type. To summarise, the expected and actual behaviour are shown below:\r\n\r\nActual behaviour:\r\n\r\n```\r\n>>> response.facets['published']\r\n[(1, 2, False), (0, 1, False)]\r\n\r\n```\r\n\r\nExpected behaviour:\r\n\r\n```\r\n>>> response.facets['published']\r\n[(True, 2, False), (False, 1, False)]\r\n\r\n```\r\n\r\nWhat am I doing wrong here? How can we make the facet values for a Boolean field deserialize correctly in the facets, as they do in the actual search results?", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/583/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/582", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/582/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/582/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/582/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/582", "id": 206196804, "node_id": "MDU6SXNzdWUyMDYxOTY4MDQ=", "number": 582, "title": "Index.clone() does not copy Index._analysis", "user": {"login": "nazarewk", "id": 3494992, "node_id": "MDQ6VXNlcjM0OTQ5OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3494992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nazarewk", "html_url": "https://github.com/nazarewk", "followers_url": "https://api.github.com/users/nazarewk/followers", "following_url": "https://api.github.com/users/nazarewk/following{/other_user}", "gists_url": "https://api.github.com/users/nazarewk/gists{/gist_id}", "starred_url": "https://api.github.com/users/nazarewk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nazarewk/subscriptions", "organizations_url": "https://api.github.com/users/nazarewk/orgs", "repos_url": "https://api.github.com/users/nazarewk/repos", "events_url": "https://api.github.com/users/nazarewk/events{/privacy}", "received_events_url": "https://api.github.com/users/nazarewk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": {"login": "honzakral", "id": 32132, "node_id": "MDQ6VXNlcjMyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/32132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzakral", "html_url": "https://github.com/honzakral", "followers_url": "https://api.github.com/users/honzakral/followers", "following_url": "https://api.github.com/users/honzakral/following{/other_user}", "gists_url": "https://api.github.com/users/honzakral/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzakral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzakral/subscriptions", "organizations_url": "https://api.github.com/users/honzakral/orgs", "repos_url": "https://api.github.com/users/honzakral/repos", "events_url": "https://api.github.com/users/honzakral/events{/privacy}", "received_events_url": "https://api.github.com/users/honzakral/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "honzakral", "id": 32132, "node_id": "MDQ6VXNlcjMyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/32132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzakral", "html_url": "https://github.com/honzakral", "followers_url": "https://api.github.com/users/honzakral/followers", "following_url": "https://api.github.com/users/honzakral/following{/other_user}", "gists_url": "https://api.github.com/users/honzakral/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzakral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzakral/subscriptions", "organizations_url": "https://api.github.com/users/honzakral/orgs", "repos_url": "https://api.github.com/users/honzakral/repos", "events_url": "https://api.github.com/users/honzakral/events{/privacy}", "received_events_url": "https://api.github.com/users/honzakral/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-02-08T13:23:36Z", "updated_at": "2017-02-11T02:33:12Z", "closed_at": "2017-02-11T02:32:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am not sure if it's intended or not but `Index.clone()` does not copy `_analysis` attribute.", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/582/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/581", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/581/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/581/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/581/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/581", "id": 206025835, "node_id": "MDU6SXNzdWUyMDYwMjU4MzU=", "number": 581, "title": "0 hits from FacetedSearch when not specifying doc_types", "user": {"login": "gregpinero", "id": 102648, "node_id": "MDQ6VXNlcjEwMjY0OA==", "avatar_url": "https://avatars.githubusercontent.com/u/102648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregpinero", "html_url": "https://github.com/gregpinero", "followers_url": "https://api.github.com/users/gregpinero/followers", "following_url": "https://api.github.com/users/gregpinero/following{/other_user}", "gists_url": "https://api.github.com/users/gregpinero/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregpinero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregpinero/subscriptions", "organizations_url": "https://api.github.com/users/gregpinero/orgs", "repos_url": "https://api.github.com/users/gregpinero/repos", "events_url": "https://api.github.com/users/gregpinero/events{/privacy}", "received_events_url": "https://api.github.com/users/gregpinero/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-02-07T21:46:28Z", "updated_at": "2017-11-06T20:47:11Z", "closed_at": "2017-11-06T20:47:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying something simple to see if I can get it working:  (I'm on 5.1)\r\n\r\n```\r\nclass DogSearch(FacetedSearch):\r\n    fields = ['fleas']\r\n    facets = {\r\n        'fleas': TermsFacet(field='fleas'),\r\n    }\r\n    index = [settings.ASSOCIATIONS_INDEX_NAME]\r\n\r\nrs = DogSearch()\r\nresponse = rs.execute()\r\n```\r\n\r\nBut I'm getting 0 hits when I know there are lots of results.\r\n\r\nHere's what it's generating when I run it:\r\n\r\n`{\"query\": {\"match_all\": {}}, \"aggs\": {\"_filter_fleas\": {\"filter\": {\"match_all\": {}}, \"aggs\": {\"fleas\": {\"terms\": {\"field\": \"fleas\"}}}}}, \"highlight\": {\"fields\": {\"fleas\": {}}}}`\r\n\r\n\r\n`{\"took\":3,\"timed_out\":false,\"_shards\":{\"total\":5,\"successful\":5,\"failed\":0},\"hits\":{\"total\":0,\"max_score\":null,\"hits\":[]},\"aggregations\":{\"_filter_fleas\":{\"doc_count\":0,\"fleas\":{\"doc_count_error_upper_bound\":0,\"sum_other_doc_count\":0,\"buckets\":[]}}}}`\r\n\r\nCould something be going wrong in the query, or am I just using this wrong?\r\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/581/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/581/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/558", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/558/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/558/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/558/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/558", "id": 200645318, "node_id": "MDU6SXNzdWUyMDA2NDUzMTg=", "number": 558, "title": "Is Result object cacheable?", "user": {"login": "Alkalit", "id": 4231218, "node_id": "MDQ6VXNlcjQyMzEyMTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4231218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alkalit", "html_url": "https://github.com/Alkalit", "followers_url": "https://api.github.com/users/Alkalit/followers", "following_url": "https://api.github.com/users/Alkalit/following{/other_user}", "gists_url": "https://api.github.com/users/Alkalit/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alkalit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alkalit/subscriptions", "organizations_url": "https://api.github.com/users/Alkalit/orgs", "repos_url": "https://api.github.com/users/Alkalit/repos", "events_url": "https://api.github.com/users/Alkalit/events{/privacy}", "received_events_url": "https://api.github.com/users/Alkalit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-01-13T14:39:26Z", "updated_at": "2017-03-01T22:17:22Z", "closed_at": "2017-02-28T15:32:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to save `Response` object in redis cache in django project\r\n\r\n```\r\nfrom django.core.cache import cache\r\n\r\nquery = \\\r\n    {\r\n      \"query\": {\r\n# some query here\r\n      }\r\n    }\r\n\r\nsearcher = Search(using=haystack_connections['default'].get_backend().conn)\r\nsearcher = searcher.update_from_dict(query)[:10]\r\n\r\nresults = searcher.execute()\r\ncache.set('foo', result, timeout=60*60)\r\ncache.get('foo')\r\n\r\n/home/gnom/www/env/apps/elasticsearch_dsl2/result.pyc in __repr__(self)\r\n     24 \r\n     25     def __repr__(self):\r\n---> 26         return '<Response: %r>' % self.hits\r\n     27 \r\n     28     def __len__(self):\r\n\r\n/home/gnom/www/env/apps/elasticsearch_dsl2/result.pyc in hits(self)\r\n     47             except AttributeError as e:\r\n     48                 # avoid raising AttributeError since it will be hidden by the property\r\n---> 49                 raise TypeError(\"Could not parse hits.\", e)\r\n     50 \r\n     51             # avoid assigning _hits into self._d_\r\n\r\nTypeError: ('Could not parse hits.', AttributeError(u\"'Response' object has no attribute '_callbacks'\",))\r\n\r\n```\r\n\r\nor: \r\n\r\n```\r\ncache.set('foo', list(result), timeout=60*60)\r\ncache.get('foo')\r\n\r\n\r\n/home/gnom/www/env/apps/elasticsearch_dsl2/result.pyc in <genexpr>((key,))\r\n     83         return '<Result(%s): %s>' % (\r\n     84             '/'.join(getattr(self.meta, key) for key in\r\n---> 85                       ('index', 'doc_type', 'id') if key in self.meta),\r\n     86             super(Result, self).__repr__()\r\n     87         )\r\n\r\n/home/gnom/www/env/apps/elasticsearch_dsl2/utils.pyc in __getattr__(self, attr_name)\r\n    121         except KeyError:\r\n    122             raise AttributeError(\r\n--> 123                 '%r object has no attribute %r' % (self.__class__.__name__, attr_name))\r\n    124 \r\n    125     def __delattr__(self, attr_name):\r\n\r\nAttributeError: 'Result' object has no attribute 'meta'\r\n```\r\n\r\ndsl lib version is (2, 2, 0)", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/558/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/442", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/442/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/442/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/442/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/442", "id": 168818726, "node_id": "MDU6SXNzdWUxNjg4MTg3MjY=", "number": 442, "title": "Query combination generates wrong es query in boolean operation", "user": {"login": "wataru-chocola", "id": 4014321, "node_id": "MDQ6VXNlcjQwMTQzMjE=", "avatar_url": "https://avatars.githubusercontent.com/u/4014321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wataru-chocola", "html_url": "https://github.com/wataru-chocola", "followers_url": "https://api.github.com/users/wataru-chocola/followers", "following_url": "https://api.github.com/users/wataru-chocola/following{/other_user}", "gists_url": "https://api.github.com/users/wataru-chocola/gists{/gist_id}", "starred_url": "https://api.github.com/users/wataru-chocola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wataru-chocola/subscriptions", "organizations_url": "https://api.github.com/users/wataru-chocola/orgs", "repos_url": "https://api.github.com/users/wataru-chocola/repos", "events_url": "https://api.github.com/users/wataru-chocola/events{/privacy}", "received_events_url": "https://api.github.com/users/wataru-chocola/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-02T07:36:43Z", "updated_at": "2016-08-02T16:30:37Z", "closed_at": "2016-08-02T16:30:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version: 0.0.11\n\n`elasticsearch-dsl-py` generates wrong es query in boolean operation when combining `~` and another operators.\n\n``` python\nIn [1]: from elasticsearch_dsl.query import Bool, QueryString\nIn [3]: q_a = QueryString(query='a:*')\nIn [4]: q_b = QueryString(query='b:*')\n\nIn [6]: str(q_a & q_b)\nOut[6]: \"Bool(must=[QueryString(query='a:*'), QueryString(query='b:*')])\"\n\n# wrong result, I think\nIn [7]: str(~(q_a & q_b))\nOut[7]: \"Bool(must_not=[QueryString(query='a:*'), QueryString(query='b:*')])\"\n```\n\nExpected query is:\n\n``` python\nBool(must_not=[Bool(must=[QueryString(query='a:*'), QueryString(query='b:*')])])\n```\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/442/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/418", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/418/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/418/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/418", "id": 158663098, "node_id": "MDU6SXNzdWUxNTg2NjMwOTg=", "number": 418, "title": "ValidationException is raised for non-empty fields", "user": {"login": "tq0", "id": 8254620, "node_id": "MDQ6VXNlcjgyNTQ2MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/8254620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tq0", "html_url": "https://github.com/tq0", "followers_url": "https://api.github.com/users/tq0/followers", "following_url": "https://api.github.com/users/tq0/following{/other_user}", "gists_url": "https://api.github.com/users/tq0/gists{/gist_id}", "starred_url": "https://api.github.com/users/tq0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tq0/subscriptions", "organizations_url": "https://api.github.com/users/tq0/orgs", "repos_url": "https://api.github.com/users/tq0/repos", "events_url": "https://api.github.com/users/tq0/events{/privacy}", "received_events_url": "https://api.github.com/users/tq0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-06T12:12:23Z", "updated_at": "2016-06-08T11:47:37Z", "closed_at": "2016-06-08T11:47:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using `required=True` with numeric, string or boolean type fields Field.clean method (https://github.com/elastic/elasticsearch-dsl-py/blob/master/elasticsearch_dsl/field.py#L81) raises `ValidationException`. There is a `FIXME` in the code for this already, but the issue is not related only to numeric types.\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/418/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/408", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/408/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/408/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/408", "id": 155960403, "node_id": "MDU6SXNzdWUxNTU5NjA0MDM=", "number": 408, "title": "Faceted search highlighting doesn't work when using field boosters", "user": {"login": "arthurzenika", "id": 445200, "node_id": "MDQ6VXNlcjQ0NTIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/445200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthurzenika", "html_url": "https://github.com/arthurzenika", "followers_url": "https://api.github.com/users/arthurzenika/followers", "following_url": "https://api.github.com/users/arthurzenika/following{/other_user}", "gists_url": "https://api.github.com/users/arthurzenika/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthurzenika/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthurzenika/subscriptions", "organizations_url": "https://api.github.com/users/arthurzenika/orgs", "repos_url": "https://api.github.com/users/arthurzenika/repos", "events_url": "https://api.github.com/users/arthurzenika/events{/privacy}", "received_events_url": "https://api.github.com/users/arthurzenika/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-20T13:14:16Z", "updated_at": "2016-06-08T11:57:30Z", "closed_at": "2016-06-08T11:53:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using field boosters : \n\n```\n    fields = [\"title^3\", \"name^3\", \"content^2\", '_all',]\n```\n\nThe highlighting doesn't work since it should probably remove the \"^\" suffix. \n\nIn my case, fixed by add twice \"content\"  (not sure yet if it has an effect on the results).\n\n```\n    fields = [\"title^3\", \"name^3\", \"content^2\", \"content\", '_all',]\n```\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/408/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/400", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/400/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/400/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/400/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/400", "id": 152791757, "node_id": "MDU6SXNzdWUxNTI3OTE3NTc=", "number": 400, "title": "Fields starting with underscore end up in meta", "user": {"login": "armisael", "id": 71387, "node_id": "MDQ6VXNlcjcxMzg3", "avatar_url": "https://avatars.githubusercontent.com/u/71387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/armisael", "html_url": "https://github.com/armisael", "followers_url": "https://api.github.com/users/armisael/followers", "following_url": "https://api.github.com/users/armisael/following{/other_user}", "gists_url": "https://api.github.com/users/armisael/gists{/gist_id}", "starred_url": "https://api.github.com/users/armisael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/armisael/subscriptions", "organizations_url": "https://api.github.com/users/armisael/orgs", "repos_url": "https://api.github.com/users/armisael/repos", "events_url": "https://api.github.com/users/armisael/events{/privacy}", "received_events_url": "https://api.github.com/users/armisael/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-03T14:43:43Z", "updated_at": "2016-06-08T12:08:44Z", "closed_at": "2016-06-08T12:08:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everybody,\n\nIn our ES index we mark some private fields by prefixing them with an underscore; they are intended to be \"maintenance\" fields, and we use this \"trick\" to make this clear.\n\nWhen writing a query to ES through the `elasticsearch-dsl-py` though, they do not appear on the returned items; after a bit of struggling we discovered they are actually stored in `item.meta`, so that (for example) a field called `_show` can be retrieved with `item.meta.show` instead of `item._show`.\n\nIs this intended?\n\nI would expect all fields in the `_source` of the document to appear on the item itself, regardless of their name.\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/400/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/382", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/382/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/382/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/382", "id": 144110817, "node_id": "MDU6SXNzdWUxNDQxMTA4MTc=", "number": 382, "title": "minimum_should_match doesn't work inside 'bool' query def", "user": {"login": "dblado", "id": 926459, "node_id": "MDQ6VXNlcjkyNjQ1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/926459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dblado", "html_url": "https://github.com/dblado", "followers_url": "https://api.github.com/users/dblado/followers", "following_url": "https://api.github.com/users/dblado/following{/other_user}", "gists_url": "https://api.github.com/users/dblado/gists{/gist_id}", "starred_url": "https://api.github.com/users/dblado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dblado/subscriptions", "organizations_url": "https://api.github.com/users/dblado/orgs", "repos_url": "https://api.github.com/users/dblado/repos", "events_url": "https://api.github.com/users/dblado/events{/privacy}", "received_events_url": "https://api.github.com/users/dblado/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-03-28T23:35:11Z", "updated_at": "2019-07-02T13:25:37Z", "closed_at": "2016-04-11T00:09:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Per the docs, specifying minimum_should_match in the Q ('bool',...) didn't work for me.:\n\n```\nq = Q('bool',\n    must=[Q('match', title='python')],\n    should=[Q(...), Q(...)],\n    minimum_should_match=1\n)\ns = Search().query(q)\n```\n\nSpecifying it before executing the query like this did.\n\n```\nq = Q('bool',\n    must=[Q('match', title='python')],\n    should=[Q(...), Q(...)]\n)\ns = Search().query(q)\ns.query.minimum_should_match = 2\n```\n\nusing:\nelasticsearch==2.3.0\nelasticsearch-dsl==2.0.0\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/382/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/382/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/373", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/373/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/373/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/373", "id": 142412830, "node_id": "MDU6SXNzdWUxNDI0MTI4MzA=", "number": 373, "title": "Equality check on documents behaves unexpectedly", "user": {"login": "0x64746b", "id": 984686, "node_id": "MDQ6VXNlcjk4NDY4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/984686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0x64746b", "html_url": "https://github.com/0x64746b", "followers_url": "https://api.github.com/users/0x64746b/followers", "following_url": "https://api.github.com/users/0x64746b/following{/other_user}", "gists_url": "https://api.github.com/users/0x64746b/gists{/gist_id}", "starred_url": "https://api.github.com/users/0x64746b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0x64746b/subscriptions", "organizations_url": "https://api.github.com/users/0x64746b/orgs", "repos_url": "https://api.github.com/users/0x64746b/repos", "events_url": "https://api.github.com/users/0x64746b/events{/privacy}", "received_events_url": "https://api.github.com/users/0x64746b/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-21T17:19:22Z", "updated_at": "2016-03-21T17:45:11Z", "closed_at": "2016-03-21T17:45:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nIn [1]: from elasticsearch_dsl import DocType, String\n\nIn [2]: class Author(DocType):\n    name = String()\n   ...:     \n\nIn [3]: a = Author(name='George Orwell')\n\nIn [4]: b = Author(name='George Orwell')\n\nIn [5]: a == b\nOut[5]: True\n\nIn [6]: a != b\nOut[6]: True\n```\n\nAm I holding it wrong?\ndtk\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/373/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/359", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/359/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/359/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/359", "id": 138965521, "node_id": "MDU6SXNzdWUxMzg5NjU1MjE=", "number": 359, "title": "Nested with empty multi field is broken after calling to_dict", "user": {"login": "mcs07", "id": 732185, "node_id": "MDQ6VXNlcjczMjE4NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/732185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcs07", "html_url": "https://github.com/mcs07", "followers_url": "https://api.github.com/users/mcs07/followers", "following_url": "https://api.github.com/users/mcs07/following{/other_user}", "gists_url": "https://api.github.com/users/mcs07/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcs07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcs07/subscriptions", "organizations_url": "https://api.github.com/users/mcs07/orgs", "repos_url": "https://api.github.com/users/mcs07/repos", "events_url": "https://api.github.com/users/mcs07/events{/privacy}", "received_events_url": "https://api.github.com/users/mcs07/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-07T12:18:26Z", "updated_at": "2016-03-07T13:38:50Z", "closed_at": "2016-03-07T13:38:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I have a Nested field that contains a property with `multi=True`, I'm finding that calling `to_dict` on parent is changing some state of the inner object so that the empty values are no longer available as empty lists.\n\nAs an example:\n\n```\nclass BlogPost(DocType):\n    categories = Nested(properties={'level': Integer(), 'value': String(multi=True)})\n```\n\nThen I find:\n\n```\n>>> b = BlogPost(categories=[{'level': 1}])\n>>> b.categories\n[{'level': 1}]\n>>> b.categories[0].value\n[]\n>>> b.to_dict()\n{'categories': [{'level': 1}]}\n>>> b.categories[0].value\nAttributeError: 'AttrDict' object has no attribute 'value'\n```\n\nIs this a bug or am I doing something wrong here?\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/359/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/343", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/343/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/343/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/343", "id": 135417570, "node_id": "MDU6SXNzdWUxMzU0MTc1NzA=", "number": 343, "title": "Unpickling a Result causes RuntimeError: maximum recursion depth exceeded", "user": {"login": "mohd-akram", "id": 1823771, "node_id": "MDQ6VXNlcjE4MjM3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1823771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mohd-akram", "html_url": "https://github.com/mohd-akram", "followers_url": "https://api.github.com/users/mohd-akram/followers", "following_url": "https://api.github.com/users/mohd-akram/following{/other_user}", "gists_url": "https://api.github.com/users/mohd-akram/gists{/gist_id}", "starred_url": "https://api.github.com/users/mohd-akram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mohd-akram/subscriptions", "organizations_url": "https://api.github.com/users/mohd-akram/orgs", "repos_url": "https://api.github.com/users/mohd-akram/repos", "events_url": "https://api.github.com/users/mohd-akram/events{/privacy}", "received_events_url": "https://api.github.com/users/mohd-akram/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-22T13:31:27Z", "updated_at": "2016-02-22T18:26:39Z", "closed_at": "2016-02-22T18:25:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is due to AttrDict's behavior. To reproduce:\n\n```\nimport pickle\n\nfrom elasticsearch_dsl.utils import AttrDict\n\npickle.loads(pickle.dumps(AttrDict({})))\n```\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/343/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/330", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/330/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/330/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/330", "id": 129390615, "node_id": "MDU6SXNzdWUxMjkzOTA2MTU=", "number": 330, "title": "selected value is kept after a new search without filters", "user": {"login": "AdrianRibao", "id": 169631, "node_id": "MDQ6VXNlcjE2OTYzMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/169631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdrianRibao", "html_url": "https://github.com/AdrianRibao", "followers_url": "https://api.github.com/users/AdrianRibao/followers", "following_url": "https://api.github.com/users/AdrianRibao/following{/other_user}", "gists_url": "https://api.github.com/users/AdrianRibao/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdrianRibao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdrianRibao/subscriptions", "organizations_url": "https://api.github.com/users/AdrianRibao/orgs", "repos_url": "https://api.github.com/users/AdrianRibao/repos", "events_url": "https://api.github.com/users/AdrianRibao/events{/privacy}", "received_events_url": "https://api.github.com/users/AdrianRibao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-01-28T09:08:56Z", "updated_at": "2016-01-28T13:22:04Z", "closed_at": "2016-01-28T10:01:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "When filtering a faceted search the results return a triplet like this: `(facet_name, count, selected)` with the value selected set properly if the search has been filtered by that facet.\n\nAfter performing a new search without filtering by that facet, the `selected` value is kept to the old one, but all of them should be `False`\n\nThe `is_filtered(self, key)` method is checking if the key is set in `filter_values`\n\n```\ndef __init__(self, **kwargs):\n    self.filter_values = ()\n    self._params = kwargs\n```\n\nbut is never removed. Probably `filter_values` should be cleaned for each search.\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/330/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/321", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/321/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/321/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/321", "id": 126655645, "node_id": "MDU6SXNzdWUxMjY2NTU2NDU=", "number": 321, "title": "UnknownDslObject for geo_bounding_box", "user": {"login": "liran90", "id": 6773444, "node_id": "MDQ6VXNlcjY3NzM0NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6773444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liran90", "html_url": "https://github.com/liran90", "followers_url": "https://api.github.com/users/liran90/followers", "following_url": "https://api.github.com/users/liran90/following{/other_user}", "gists_url": "https://api.github.com/users/liran90/gists{/gist_id}", "starred_url": "https://api.github.com/users/liran90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liran90/subscriptions", "organizations_url": "https://api.github.com/users/liran90/orgs", "repos_url": "https://api.github.com/users/liran90/repos", "events_url": "https://api.github.com/users/liran90/events{/privacy}", "received_events_url": "https://api.github.com/users/liran90/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-01-14T13:33:20Z", "updated_at": "2016-01-14T14:05:55Z", "closed_at": "2016-01-14T13:56:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I am trying to send a query including a geo_bounding_box element I get this exception:\n\"elasticsearch_dsl.exceptions.UnknownDslObject\nUnknownDslObject: DSL class `geo_bounding_box` does not exist in query.\"\n\nwhen I delete this part of query it works well, needless to say - both queries(with or without the geo_bounding_box) were tested and works with curl, sending to the same ES server the code tries to send\n\nI was migrating from elasticsearch-py and using Search.from_dict\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/321/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/318", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/318/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/318/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/318", "id": 125986539, "node_id": "MDU6SXNzdWUxMjU5ODY1Mzk=", "number": 318, "title": "from_dict is strange for deep queries", "user": {"login": "sofigern", "id": 7364863, "node_id": "MDQ6VXNlcjczNjQ4NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/7364863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sofigern", "html_url": "https://github.com/sofigern", "followers_url": "https://api.github.com/users/sofigern/followers", "following_url": "https://api.github.com/users/sofigern/following{/other_user}", "gists_url": "https://api.github.com/users/sofigern/gists{/gist_id}", "starred_url": "https://api.github.com/users/sofigern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sofigern/subscriptions", "organizations_url": "https://api.github.com/users/sofigern/orgs", "repos_url": "https://api.github.com/users/sofigern/repos", "events_url": "https://api.github.com/users/sofigern/events{/privacy}", "received_events_url": "https://api.github.com/users/sofigern/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-11T16:44:48Z", "updated_at": "2016-01-11T17:02:47Z", "closed_at": "2016-01-11T17:02:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\nself.assertEqual(\n            Search.from_dict({\n                \"query\": {\n                    \"constant_score\": {\n                        \"filter\": {\n                            \"bool\": {\n                                \"must_not\": {\"exists\": {\"field\": \"value\"}}\n                            }\n                        }\n                    }\n                }}\n            ).to_dict(),\n            {\n                \"query\": {\n                    \"constant_score\": {\n                        \"filter\": {\n                            \"bool\": {\n                                \"must_not\": {\"exists\": {\"field\": \"value\"}}\n                            }\n                        }\n                    }\n                }\n            }\n        )\n```\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/318/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/310", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/310/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/310/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/310", "id": 122368529, "node_id": "MDU6SXNzdWUxMjIzNjg1Mjk=", "number": 310, "title": "Custom analyzer on _all field causes SerializationError on init", "user": {"login": "gmacon", "id": 238853, "node_id": "MDQ6VXNlcjIzODg1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/238853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gmacon", "html_url": "https://github.com/gmacon", "followers_url": "https://api.github.com/users/gmacon/followers", "following_url": "https://api.github.com/users/gmacon/following{/other_user}", "gists_url": "https://api.github.com/users/gmacon/gists{/gist_id}", "starred_url": "https://api.github.com/users/gmacon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gmacon/subscriptions", "organizations_url": "https://api.github.com/users/gmacon/orgs", "repos_url": "https://api.github.com/users/gmacon/repos", "events_url": "https://api.github.com/users/gmacon/events{/privacy}", "received_events_url": "https://api.github.com/users/gmacon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-15T21:18:24Z", "updated_at": "2016-01-05T11:31:25Z", "closed_at": "2016-01-05T11:31:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "This:\n\n``` python\nfrom elasticsearch_dsl import DocType, analyzer, MetaField, String\nfrom elasticsearch_dsl.connections import connections\n\nan = analyzer('my_analyzer')\n\nclass Foo(DocType):\n    class Meta:\n        index = 'foo'\n\n        all = MetaField(search_analyzer=an, index_analyzer=an)\n\n    foo = String()\n\nconnections.create_connection(hosts=['localhost'])\nFoo.init()\n```\n\nraises `SerializationError` when trying to create the mapping.  I think this bug is in `Mapping.to_dict`, but I'm not sure of the correct approach here for fixing the bug.\n\nHere's the stack trace:\n\n```\nTraceback (most recent call last):\n  File \"minimal.py\", line 16, in <module>\n    Foo.init()\n  File \"/usr/local/var/pyenv/versions/foo/lib/python2.7/site-packages/elasticsearch_dsl/document.py\", line 126, in init\n    cls._doc_type.init(index, using)\n  File \"/usr/local/var/pyenv/versions/foo/lib/python2.7/site-packages/elasticsearch_dsl/document.py\", line 89, in init\n    self.mapping.save(index or self.index, using=using or self.using)\n  File \"/usr/local/var/pyenv/versions/foo/lib/python2.7/site-packages/elasticsearch_dsl/mapping.py\", line 68, in save\n    es.indices.create(index=index, body={'mappings': self.to_dict(), 'settings': {'analysis': self._collect_analysis()}})\n  File \"/usr/local/var/pyenv/versions/foo/lib/python2.7/site-packages/elasticsearch/client/utils.py\", line 69, in _wrapped\n    return func(*args, params=params, **kwargs)\n  File \"/usr/local/var/pyenv/versions/foo/lib/python2.7/site-packages/elasticsearch/client/indices.py\", line 105, in create\n    params=params, body=body)\n  File \"/usr/local/var/pyenv/versions/foo/lib/python2.7/site-packages/elasticsearch/transport.py\", line 273, in perform_request\n    body = self.serializer.dumps(body)\n  File \"/usr/local/var/pyenv/versions/foo/lib/python2.7/site-packages/elasticsearch/serializer.py\", line 47, in dumps\n    raise SerializationError(data, e)\nelasticsearch.exceptions.SerializationError: ({'mappings': {'foo': {'_all': {'search_analyzer': CustomAnalyzer(), 'index_analyzer': CustomAnalyzer()}, 'properties': {'foo': {'type': 'string'}}}}, 'settings': {'analysis': {}}}, TypeError(\"Unable to serialize CustomAnalyzer() (type: <class 'elasticsearch_dsl.analysis.CustomAnalyzer'>)\",))\n```\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/310/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/158", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/158/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/158/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/158", "id": 75489320, "node_id": "MDU6SXNzdWU3NTQ4OTMyMA==", "number": 158, "title": "KeyError exception when call Mapping.from_es() using index alias", "user": {"login": "wataru-chocola", "id": 4014321, "node_id": "MDQ6VXNlcjQwMTQzMjE=", "avatar_url": "https://avatars.githubusercontent.com/u/4014321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wataru-chocola", "html_url": "https://github.com/wataru-chocola", "followers_url": "https://api.github.com/users/wataru-chocola/followers", "following_url": "https://api.github.com/users/wataru-chocola/following{/other_user}", "gists_url": "https://api.github.com/users/wataru-chocola/gists{/gist_id}", "starred_url": "https://api.github.com/users/wataru-chocola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wataru-chocola/subscriptions", "organizations_url": "https://api.github.com/users/wataru-chocola/orgs", "repos_url": "https://api.github.com/users/wataru-chocola/repos", "events_url": "https://api.github.com/users/wataru-chocola/events{/privacy}", "received_events_url": "https://api.github.com/users/wataru-chocola/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": {"login": "honzakral", "id": 32132, "node_id": "MDQ6VXNlcjMyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/32132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzakral", "html_url": "https://github.com/honzakral", "followers_url": "https://api.github.com/users/honzakral/followers", "following_url": "https://api.github.com/users/honzakral/following{/other_user}", "gists_url": "https://api.github.com/users/honzakral/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzakral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzakral/subscriptions", "organizations_url": "https://api.github.com/users/honzakral/orgs", "repos_url": "https://api.github.com/users/honzakral/repos", "events_url": "https://api.github.com/users/honzakral/events{/privacy}", "received_events_url": "https://api.github.com/users/honzakral/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "honzakral", "id": 32132, "node_id": "MDQ6VXNlcjMyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/32132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzakral", "html_url": "https://github.com/honzakral", "followers_url": "https://api.github.com/users/honzakral/followers", "following_url": "https://api.github.com/users/honzakral/following{/other_user}", "gists_url": "https://api.github.com/users/honzakral/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzakral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzakral/subscriptions", "organizations_url": "https://api.github.com/users/honzakral/orgs", "repos_url": "https://api.github.com/users/honzakral/repos", "events_url": "https://api.github.com/users/honzakral/events{/privacy}", "received_events_url": "https://api.github.com/users/honzakral/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-05-12T06:48:21Z", "updated_at": "2015-05-12T14:09:10Z", "closed_at": "2015-05-12T14:09:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "version: elasticsearch-dsl-py 0.0.4\n\nI called `Mapping.from_es()` with index alias,\n\n```\n$ curl -XGET 'http://localhost:9200/test/_alias/'\n{\"test.v1\":{\"aliases\":{\"test\":{}}}}\n```\n\n```\nm = elasticsearch_dsl.Mapping.from_es('test', 'my_type')\n```\n\nand got errors.\n\n```\nTraceback (most recent call last):\n  File \"test.py\", line 9, in <module>\n    mapping = elasticsearch_dsl.Mapping.from_es('test', 'my_type')\n  File \"/home/myacc/.venv/local/lib/python2.7/site-packages/elasticsearch_dsl/mapping.py\", line 32, in from_es\n    m.update_from_es(index, using)\n  File \"/home/myacc/.venv/local/lib/python2.7/site-packages/elasticsearch_dsl/mapping.py\", line 73, in update_from_es\n    raw = raw[index]['mappings'][self.doc_type]\nKeyError: 'test'\n```\n\nThis is because 1st level key of response object is index name, instead of alias.\n\n```\n$ curl -XGET 'http://localhost:9200/test/_mapping/' | jq .\n{\n  \"test.v1\": {\n    \"mappings\": {\n      \"my_type\": {\n        \"properties\": {\n          \"name\": {\n            \"index\": \"not_analyzed\",\n            \"type\": \"string\"\n          }\n        },\n        \"_all\": {\n          \"enabled\": false\n        },\n\n```\n\nDo you planned to support index alias?\n\nRegards\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/158/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/150", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/150/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/150/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/150", "id": 73118532, "node_id": "MDU6SXNzdWU3MzExODUzMg==", "number": 150, "title": "Deleting attributes?", "user": {"login": "njoannin", "id": 3947618, "node_id": "MDQ6VXNlcjM5NDc2MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3947618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njoannin", "html_url": "https://github.com/njoannin", "followers_url": "https://api.github.com/users/njoannin/followers", "following_url": "https://api.github.com/users/njoannin/following{/other_user}", "gists_url": "https://api.github.com/users/njoannin/gists{/gist_id}", "starred_url": "https://api.github.com/users/njoannin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njoannin/subscriptions", "organizations_url": "https://api.github.com/users/njoannin/orgs", "repos_url": "https://api.github.com/users/njoannin/repos", "events_url": "https://api.github.com/users/njoannin/events{/privacy}", "received_events_url": "https://api.github.com/users/njoannin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": {"login": "honzakral", "id": 32132, "node_id": "MDQ6VXNlcjMyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/32132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzakral", "html_url": "https://github.com/honzakral", "followers_url": "https://api.github.com/users/honzakral/followers", "following_url": "https://api.github.com/users/honzakral/following{/other_user}", "gists_url": "https://api.github.com/users/honzakral/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzakral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzakral/subscriptions", "organizations_url": "https://api.github.com/users/honzakral/orgs", "repos_url": "https://api.github.com/users/honzakral/repos", "events_url": "https://api.github.com/users/honzakral/events{/privacy}", "received_events_url": "https://api.github.com/users/honzakral/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "honzakral", "id": 32132, "node_id": "MDQ6VXNlcjMyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/32132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzakral", "html_url": "https://github.com/honzakral", "followers_url": "https://api.github.com/users/honzakral/followers", "following_url": "https://api.github.com/users/honzakral/following{/other_user}", "gists_url": "https://api.github.com/users/honzakral/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzakral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzakral/subscriptions", "organizations_url": "https://api.github.com/users/honzakral/orgs", "repos_url": "https://api.github.com/users/honzakral/repos", "events_url": "https://api.github.com/users/honzakral/events{/privacy}", "received_events_url": "https://api.github.com/users/honzakral/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-05-04T20:23:34Z", "updated_at": "2015-05-11T13:53:14Z", "closed_at": "2015-05-11T13:53:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to delete an attribute?\n\nI've tried with `del obj.attr` but that doesn't work:\n\n```\n>>> class Test(DocType):\n...     test_attr = String()\n... \n>>> t = Test()\n>>> t.test_attr = \"test\"\n>>> t\n{'test_attr': 'test'}\n>>> del t.test_attr\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: test_attr\n```\n\nIs there another way I'm missing?\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/150/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/148", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/148/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/148/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/148", "id": 72086404, "node_id": "MDU6SXNzdWU3MjA4NjQwNA==", "number": 148, "title": "slice of 0 [0:0]", "user": {"login": "dblado", "id": 926459, "node_id": "MDQ6VXNlcjkyNjQ1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/926459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dblado", "html_url": "https://github.com/dblado", "followers_url": "https://api.github.com/users/dblado/followers", "following_url": "https://api.github.com/users/dblado/following{/other_user}", "gists_url": "https://api.github.com/users/dblado/gists{/gist_id}", "starred_url": "https://api.github.com/users/dblado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dblado/subscriptions", "organizations_url": "https://api.github.com/users/dblado/orgs", "repos_url": "https://api.github.com/users/dblado/repos", "events_url": "https://api.github.com/users/dblado/events{/privacy}", "received_events_url": "https://api.github.com/users/dblado/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-30T07:23:26Z", "updated_at": "2015-05-01T14:16:57Z", "closed_at": "2015-05-01T14:16:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just started working w/ the dsl today and loving it! Nice work!\n\nI'm doing a simple aggregation where I don't need any results but the aggs. I noticed that if I use:\n\n```\ns = Search(using=es_conn, index='vendop', doc_type='review').fields([])[0:0]\n```\n\nThe size parameter in the query will be 10. Why is the underlying ES library substituting the default when I specified 0? If I do [0:1] I see \"size\": 1 in s.to_dict\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/148/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/146", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/146/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/146/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/146", "id": 71691856, "node_id": "MDU6SXNzdWU3MTY5MTg1Ng==", "number": 146, "title": "No way to set dynamic: false in a mapping", "user": {"login": "honzakral", "id": 32132, "node_id": "MDQ6VXNlcjMyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/32132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzakral", "html_url": "https://github.com/honzakral", "followers_url": "https://api.github.com/users/honzakral/followers", "following_url": "https://api.github.com/users/honzakral/following{/other_user}", "gists_url": "https://api.github.com/users/honzakral/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzakral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzakral/subscriptions", "organizations_url": "https://api.github.com/users/honzakral/orgs", "repos_url": "https://api.github.com/users/honzakral/repos", "events_url": "https://api.github.com/users/honzakral/events{/privacy}", "received_events_url": "https://api.github.com/users/honzakral/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": {"login": "honzakral", "id": 32132, "node_id": "MDQ6VXNlcjMyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/32132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzakral", "html_url": "https://github.com/honzakral", "followers_url": "https://api.github.com/users/honzakral/followers", "following_url": "https://api.github.com/users/honzakral/following{/other_user}", "gists_url": "https://api.github.com/users/honzakral/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzakral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzakral/subscriptions", "organizations_url": "https://api.github.com/users/honzakral/orgs", "repos_url": "https://api.github.com/users/honzakral/repos", "events_url": "https://api.github.com/users/honzakral/events{/privacy}", "received_events_url": "https://api.github.com/users/honzakral/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "honzakral", "id": 32132, "node_id": "MDQ6VXNlcjMyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/32132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzakral", "html_url": "https://github.com/honzakral", "followers_url": "https://api.github.com/users/honzakral/followers", "following_url": "https://api.github.com/users/honzakral/following{/other_user}", "gists_url": "https://api.github.com/users/honzakral/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzakral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzakral/subscriptions", "organizations_url": "https://api.github.com/users/honzakral/orgs", "repos_url": "https://api.github.com/users/honzakral/repos", "events_url": "https://api.github.com/users/honzakral/events{/privacy}", "received_events_url": "https://api.github.com/users/honzakral/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-04-28T20:19:08Z", "updated_at": "2015-06-17T00:14:43Z", "closed_at": "2015-06-17T00:14:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "since `.meta` assumes that all meta fields start with underscore. Proper solution is to white-list\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/146/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/128", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/128/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/128/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/128", "id": 68811346, "node_id": "MDU6SXNzdWU2ODgxMTM0Ng==", "number": 128, "title": "problems with celery, maximum recursion depth exceeded (DocType cannot be unpickled)", "user": {"login": "brizzbane", "id": 4657471, "node_id": "MDQ6VXNlcjQ2NTc0NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/4657471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brizzbane", "html_url": "https://github.com/brizzbane", "followers_url": "https://api.github.com/users/brizzbane/followers", "following_url": "https://api.github.com/users/brizzbane/following{/other_user}", "gists_url": "https://api.github.com/users/brizzbane/gists{/gist_id}", "starred_url": "https://api.github.com/users/brizzbane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brizzbane/subscriptions", "organizations_url": "https://api.github.com/users/brizzbane/orgs", "repos_url": "https://api.github.com/users/brizzbane/repos", "events_url": "https://api.github.com/users/brizzbane/events{/privacy}", "received_events_url": "https://api.github.com/users/brizzbane/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-04-15T23:44:33Z", "updated_at": "2015-04-25T00:58:39Z", "closed_at": "2015-04-24T15:43:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "issue is with DocTypes.   Code works fine w/out using celery, but once I start using celery I get an error from elasticsearch_dsl that the maximum recursion depth has been exceeded.  \n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/128/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/117", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/117/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/117/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/117", "id": 66922908, "node_id": "MDU6SXNzdWU2NjkyMjkwOA==", "number": 117, "title": "Filter Aggregation not working", "user": {"login": "john-parton", "id": 2071543, "node_id": "MDQ6VXNlcjIwNzE1NDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2071543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/john-parton", "html_url": "https://github.com/john-parton", "followers_url": "https://api.github.com/users/john-parton/followers", "following_url": "https://api.github.com/users/john-parton/following{/other_user}", "gists_url": "https://api.github.com/users/john-parton/gists{/gist_id}", "starred_url": "https://api.github.com/users/john-parton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/john-parton/subscriptions", "organizations_url": "https://api.github.com/users/john-parton/orgs", "repos_url": "https://api.github.com/users/john-parton/repos", "events_url": "https://api.github.com/users/john-parton/events{/privacy}", "received_events_url": "https://api.github.com/users/john-parton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-04-07T15:58:58Z", "updated_at": "2018-03-27T13:18:31Z", "closed_at": "2015-04-14T20:34:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to create an aggregation like the one described here: http://www.elastic.co/guide/en/elasticsearch/reference/1.x/search-aggregations-bucket-filter-aggregation.html\n\n``` python\nagg = A({\n    \"filter\" : { \"range\" : { \"stock\" : { \"gt\" : 0 } } },\n    \"aggs\" : {\n        \"avg_price\" : { \"avg\" : { \"field\" : \"price\" } }\n    }\n})\nagg.to_dict()\n{\n    \"filter\": { \"range\": { \"stock\": { \"gt\": 0 } }, \n        \"aggs\": {\n            \"avg_price\": { \"avg\": { \"field\": \"price\" } }\n        }\n    }\n}\n```\n\nThe `\"aggs\"` block is moved inside of the `\"filter\"` block.\n\nI tried to circumvent `A` like this:\n\n``` python\nquery.aggs.bucket('in_stock_products', {\n            \"filter\" : { \"range\" : { \"stock\" : { \"gt\" : 0 } } },\n            \"aggs\" : {\n                \"avg_price\" : { \"avg\" : { \"field\" : \"price\" } }\n            }\n        })\nquery.to_dict()\n{\n    \"query\": {\n        ...\n    }, \n    \"aggs\": {\n        \"in_stock_products\": {\n            \"filter\": { \"range\": { \"stock\": { \"gt\": 0 } }, \n                \"aggs\": { \"avg_price\": { \"avg\": { \"field\": \"price\" } } }\n            }\n        }\n    }\n}\n```\n\nbut it still moved the `\"aggs\"` block inside of the `\"filter\"` block. (Probably because the `dict` is converted to the `A` class internally.)\n\nIf you try to execute the query, you'll get an error like `QueryParsingException[[catalogue] No filter registered for [aggs]`\n\nI'm using a clone of master.\n\n`0.0.3` doesn't appear to have this problem, but I need support for `Search.suggest`.\n\nI cloned master and did a git revert on this commit: https://github.com/elastic/elasticsearch-dsl-py/commit/856801a8c553adf4f34fe353f6f63cd6cd596126\n\nAnd it went back to the `0.0.3` (correct) behavior.\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/117/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/115", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/115/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/115/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/115", "id": 66164120, "node_id": "MDU6SXNzdWU2NjE2NDEyMA==", "number": 115, "title": "DocType search does not handle \"fields\" dictionary in response hit", "user": {"login": "pipoun", "id": 1447313, "node_id": "MDQ6VXNlcjE0NDczMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1447313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipoun", "html_url": "https://github.com/pipoun", "followers_url": "https://api.github.com/users/pipoun/followers", "following_url": "https://api.github.com/users/pipoun/following{/other_user}", "gists_url": "https://api.github.com/users/pipoun/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipoun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipoun/subscriptions", "organizations_url": "https://api.github.com/users/pipoun/orgs", "repos_url": "https://api.github.com/users/pipoun/repos", "events_url": "https://api.github.com/users/pipoun/events{/privacy}", "received_events_url": "https://api.github.com/users/pipoun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": {"login": "honzakral", "id": 32132, "node_id": "MDQ6VXNlcjMyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/32132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzakral", "html_url": "https://github.com/honzakral", "followers_url": "https://api.github.com/users/honzakral/followers", "following_url": "https://api.github.com/users/honzakral/following{/other_user}", "gists_url": "https://api.github.com/users/honzakral/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzakral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzakral/subscriptions", "organizations_url": "https://api.github.com/users/honzakral/orgs", "repos_url": "https://api.github.com/users/honzakral/repos", "events_url": "https://api.github.com/users/honzakral/events{/privacy}", "received_events_url": "https://api.github.com/users/honzakral/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "honzakral", "id": 32132, "node_id": "MDQ6VXNlcjMyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/32132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzakral", "html_url": "https://github.com/honzakral", "followers_url": "https://api.github.com/users/honzakral/followers", "following_url": "https://api.github.com/users/honzakral/following{/other_user}", "gists_url": "https://api.github.com/users/honzakral/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzakral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzakral/subscriptions", "organizations_url": "https://api.github.com/users/honzakral/orgs", "repos_url": "https://api.github.com/users/honzakral/repos", "events_url": "https://api.github.com/users/honzakral/events{/privacy}", "received_events_url": "https://api.github.com/users/honzakral/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2015-04-03T15:14:14Z", "updated_at": "2015-04-03T16:44:25Z", "closed_at": "2015-04-03T16:44:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "When executing a search with specific fields, the values present in the `fields` hit dictionary are not used during the initialization of the `DocType` subclass.\n\nThat's why I am unable to handle a search response with the `_parent` field (this field is not present in the `_source` dictionary, so I have to specify it manually).\nMoreover, this issue is not present with the `Search` class workflow (because the `Result` constructor does handle `fields` explicitly).\n\nMapping\n\n``` python\nclass Blog(DocType):\n    description = String()\n\n    class Meta:\n        index = 'my_index'\n\nclass Post(DocType):\n    tag = String()\n\n    class Meta:\n        index = 'my_index'\n        parent = MetaField(type='blog')\n```\n\nSearch\n\n``` python\n# Search class, '_parent' can be accessed directly.\ns = Search(index='my_index', doc_type='post').extra(fields=['_parent', '_source'])\nresponse = s.execute()\nfor result in response:\n    print result.tag\n    print result._parent\n\n# DocType subclass, '_parent' can not be accessed directly.\ns = Post.search().extra(fields=['_parent', '_source'])\nresponse = s.execute()\nfor post in response:\n    print post.tag\n    print getattr(post, '_parent', None)  # None\n    print getattr(post, 'parent', None)  # None\n    print post.meta.fields._parent  # OK\n```\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/115/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/96", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/96/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/96/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/96", "id": 60576819, "node_id": "MDU6SXNzdWU2MDU3NjgxOQ==", "number": 96, "title": "Runtime error with f = ~F(...) | ~F(...)", "user": {"login": "njoannin", "id": 3947618, "node_id": "MDQ6VXNlcjM5NDc2MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3947618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njoannin", "html_url": "https://github.com/njoannin", "followers_url": "https://api.github.com/users/njoannin/followers", "following_url": "https://api.github.com/users/njoannin/following{/other_user}", "gists_url": "https://api.github.com/users/njoannin/gists{/gist_id}", "starred_url": "https://api.github.com/users/njoannin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njoannin/subscriptions", "organizations_url": "https://api.github.com/users/njoannin/orgs", "repos_url": "https://api.github.com/users/njoannin/repos", "events_url": "https://api.github.com/users/njoannin/events{/privacy}", "received_events_url": "https://api.github.com/users/njoannin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-10T22:01:59Z", "updated_at": "2015-03-14T22:03:18Z", "closed_at": "2015-03-14T22:03:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got a `\nRuntimeError: maximum recursion depth exceeded while calling a Python object`\n when trying to combine two \"must not\" filters.\n\n``````\nf = ~F(...) | ~F(...)```\n results in the runtime error.\n\nI'm guessing it shouldn't do that, right?\n\nWorkaround: ```\nf = ~(F(...) | F(...))```\n is OK.\n``````\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/96/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/96/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/81", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/81/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/81/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/81", "id": 58910347, "node_id": "MDU6SXNzdWU1ODkxMDM0Nw==", "number": 81, "title": "@property not working in DocType derived class?", "user": {"login": "njoannin", "id": 3947618, "node_id": "MDQ6VXNlcjM5NDc2MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3947618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njoannin", "html_url": "https://github.com/njoannin", "followers_url": "https://api.github.com/users/njoannin/followers", "following_url": "https://api.github.com/users/njoannin/following{/other_user}", "gists_url": "https://api.github.com/users/njoannin/gists{/gist_id}", "starred_url": "https://api.github.com/users/njoannin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njoannin/subscriptions", "organizations_url": "https://api.github.com/users/njoannin/orgs", "repos_url": "https://api.github.com/users/njoannin/repos", "events_url": "https://api.github.com/users/njoannin/events{/privacy}", "received_events_url": "https://api.github.com/users/njoannin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-02-25T14:38:22Z", "updated_at": "2019-02-19T10:47:43Z", "closed_at": "2015-03-17T22:26:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following class:\n\n```\nclass TestUser(DocType, UserMixin):\n    email = String(index=\"not_analyzed\")\n    pw_hash = String(index=\"not_analyzed\")\n\n    class Meta:\n        index = \"testing\"\n        doc_type = \"test_users\"\n\n    @property\n    def password(self):\n        raise AttributeError('Password is not a readable attribute.')\n\n    @password.setter\n    def password(self, password):\n        self.pw_hash = generate_password_hash(password)\n```\n\nI therefore expect any call to the \"password\" attribute to raise an error, and any setting of it to set a pw_hash attribute...\n\nHowever, this is what happens:\n\n```\n>>> test_user = TestUser(_id=1, email=\"test_user@test.com\")\n>>> test_user.save()\nTrue\n>>> test_user.to_dict()\n{'email': 'test_user@test.com'}\n>>> test_user.meta.to_dict()\n{'id': '1', 'version': 1, 'index': 'testing'}\n>>> test_user.password = \"test\"\n>>> test_user.to_dict()\n{'email': 'test_user@test.com', 'password': 'test'}\n\n```\n\nAm I doing something wrong here?\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/81/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/81/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/79", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/79/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/79/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/79", "id": 58497244, "node_id": "MDU6SXNzdWU1ODQ5NzI0NA==", "number": 79, "title": "Calling my_mapping.properties raises AttributeError", "user": {"login": "njoannin", "id": 3947618, "node_id": "MDQ6VXNlcjM5NDc2MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3947618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njoannin", "html_url": "https://github.com/njoannin", "followers_url": "https://api.github.com/users/njoannin/followers", "following_url": "https://api.github.com/users/njoannin/following{/other_user}", "gists_url": "https://api.github.com/users/njoannin/gists{/gist_id}", "starred_url": "https://api.github.com/users/njoannin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njoannin/subscriptions", "organizations_url": "https://api.github.com/users/njoannin/orgs", "repos_url": "https://api.github.com/users/njoannin/repos", "events_url": "https://api.github.com/users/njoannin/events{/privacy}", "received_events_url": "https://api.github.com/users/njoannin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-02-22T09:54:31Z", "updated_at": "2015-03-17T22:26:11Z", "closed_at": "2015-03-17T22:26:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I fetched a mapping from es.\nWhen wanting to look at my_mapping.properties, I got the following error:\n\n```\n>>> type(my_mapping.properties)\n<class 'elasticsearch_dsl.mapping.Properties'>\n>>> my_mapping.properties\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/path/to/my_python/flask/lib/python3.3/site-packages/elasticsearch_dsl-0.0.4.dev0-py3.3.egg/elasticsearch_dsl/utils.py\", line 205, in __repr__\n  File \"/path/to/my_python/flask/lib/python3.3/site-packages/elasticsearch_dsl-0.0.4.dev0-py3.3.egg/elasticsearch_dsl/utils.py\", line 240, in __getattr__\nAttributeError: 'Properties' object has no attribute '_type_shortcut'\n```\n\nIs this the expected behaviour?\n\nMy intention was to look into individual field mappings. But so far, I can't figure out how to do so... Is there a way to do so?\n\nAlso, the `\nmy_mapping.properties.to_dict()`\n gives the same result as `\nmy_mapping.to_dict()`. Is that intended to be so?\n\nUsing elasticsearch-dsl-py version 0.0.4 beta\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/79/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/79/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/70", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/70/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/70/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/70", "id": 57602529, "node_id": "MDU6SXNzdWU1NzYwMjUyOQ==", "number": 70, "title": "\"found\" field added after MyDocType.get(): expected behaviour?", "user": {"login": "njoannin", "id": 3947618, "node_id": "MDQ6VXNlcjM5NDc2MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3947618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njoannin", "html_url": "https://github.com/njoannin", "followers_url": "https://api.github.com/users/njoannin/followers", "following_url": "https://api.github.com/users/njoannin/following{/other_user}", "gists_url": "https://api.github.com/users/njoannin/gists{/gist_id}", "starred_url": "https://api.github.com/users/njoannin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njoannin/subscriptions", "organizations_url": "https://api.github.com/users/njoannin/orgs", "repos_url": "https://api.github.com/users/njoannin/repos", "events_url": "https://api.github.com/users/njoannin/events{/privacy}", "received_events_url": "https://api.github.com/users/njoannin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-02-13T14:09:17Z", "updated_at": "2015-03-10T17:01:14Z", "closed_at": "2015-02-13T20:17:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been playing around with the persistance example.\nI just noticed that after I use the get method, there is a \"found\" field added to my document.\nSaving, then adds that field to the document, and obviously to the mapping.\n\nIs this the expected behaviour?\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/70/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/70/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/58", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/58/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/58/events", "html_url": "https://github.com/elastic/elasticsearch-dsl-py/issues/58", "id": 55373672, "node_id": "MDU6SXNzdWU1NTM3MzY3Mg==", "number": 58, "title": "Accessing and setting document metadata directly vs through `_meta`", "user": {"login": "dcwatson", "id": 293445, "node_id": "MDQ6VXNlcjI5MzQ0NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/293445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcwatson", "html_url": "https://github.com/dcwatson", "followers_url": "https://api.github.com/users/dcwatson/followers", "following_url": "https://api.github.com/users/dcwatson/following{/other_user}", "gists_url": "https://api.github.com/users/dcwatson/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcwatson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcwatson/subscriptions", "organizations_url": "https://api.github.com/users/dcwatson/orgs", "repos_url": "https://api.github.com/users/dcwatson/repos", "events_url": "https://api.github.com/users/dcwatson/events{/privacy}", "received_events_url": "https://api.github.com/users/dcwatson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84252166, "node_id": "MDU6TGFiZWw4NDI1MjE2Ng==", "url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2015-01-24T15:04:19Z", "updated_at": "2016-01-25T19:12:42Z", "closed_at": "2015-01-30T03:16:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you define a \"score\" field on a DocType, the `_meta.score` attribute is set to the document value rather than the `_score` attribute of the ES hit. I think this is due to `ObjectBase.__init__` calling setattr, and the `__setattr__` of DocType making a special case for META_FIELDS (which include \"score\") to set attributes on `_meta`. I'd imagine this is the case for any document field with the same name as a meta field.\n\nIt seems like DocType shouldn't try to expose/set `_meta` attributes directly. Or at least document which field names are not allowed on a DocType and raise an error if you try to define one that conflicts with `_meta`.\n", "reactions": {"url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/58/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-dsl-py/issues/58/timeline", "performed_via_github_app": null, "state_reason": "completed"}]