[{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7240", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7240/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7240/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7240/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7240", "id": 1685119726, "node_id": "I_kwDOBlHMec5kcOLu", "number": 7240, "title": "ImportError in NeighborLoader example", "user": {"login": "simondelarue", "id": 6034452, "node_id": "MDQ6VXNlcjYwMzQ0NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/6034452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simondelarue", "html_url": "https://github.com/simondelarue", "followers_url": "https://api.github.com/users/simondelarue/followers", "following_url": "https://api.github.com/users/simondelarue/following{/other_user}", "gists_url": "https://api.github.com/users/simondelarue/gists{/gist_id}", "starred_url": "https://api.github.com/users/simondelarue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simondelarue/subscriptions", "organizations_url": "https://api.github.com/users/simondelarue/orgs", "repos_url": "https://api.github.com/users/simondelarue/repos", "events_url": "https://api.github.com/users/simondelarue/events{/privacy}", "received_events_url": "https://api.github.com/users/simondelarue/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-04-26T14:13:23Z", "updated_at": "2023-04-26T14:20:09Z", "closed_at": "2023-04-26T14:20:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nThe example provided in `NeighborLoader` documentation [page](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.NeighborLoader) yields an `ImportError` at execution.\r\n\r\nThe following piece of code:\r\n```python\r\nfrom torch_geometric.datasets import Planetoid\r\nfrom torch_geometric.loader import NeighborLoader\r\n\r\ndata = Planetoid(path, name='Cora')[0]\r\n\r\nloader = NeighborLoader(\r\n    data,\r\n    # Sample 30 neighbors for each node for 2 iterations\r\n    num_neighbors=[30] * 2,\r\n    # Use a batch size of 128 for sampling training nodes\r\n    batch_size=128,\r\n    input_nodes=data.train_mask,\r\n)\r\n\r\nsampled_data = next(iter(loader))\r\nprint(sampled_data.batch_size)\r\n```\r\nyields: ```'NeighborSampler' requires either 'pyg-lib' or 'torch-sparse'``` (the documentation specifies that result should be `128`).\r\nThe error remains when a `Data()` object is used (e.g. a subgraph of Cora).\r\nA full traceback of the error is provided at the end of this post.\r\n\r\nDo you have any idea where this error comes from, and how to resolve it?\r\n\r\nThanks,\r\nSimon\r\n\r\nFull error traceback:\r\n```\r\n---------------------------------------------------------------------------\r\nImportError                               Traceback (most recent call last)\r\nCell In[496], line 15\r\n      4 data = Planetoid('/tmp', name='Cora')[0]\r\n      6 loader = NeighborLoader(\r\n      7     data,\r\n      8     # Sample 30 neighbors for each node for 2 iterations\r\n   (...)\r\n     12     input_nodes=data.train_mask,\r\n     13 )\r\n---> 15 sampled_data = next(iter(loader))\r\n     16 print(sampled_data.batch_size)\r\n\r\nFile ~/Documents/PhD/Research/Envs/GNNPerf/lib/python3.9/site-packages/torch_geometric/loader/base.py:36, in DataLoaderIterator.__next__(self)\r\n     35 def __next__(self) -> Any:\r\n---> 36     return self.transform_fn(next(self.iterator))\r\n\r\nFile ~/Documents/PhD/Research/Envs/GNNPerf/lib/python3.9/site-packages/torch/utils/data/dataloader.py:634, in _BaseDataLoaderIter.__next__(self)\r\n    631 if self._sampler_iter is None:\r\n    632     # TODO(https://github.com/pytorch/pytorch/issues/76750)\r\n    633     self._reset()  # type: ignore[call-arg]\r\n--> 634 data = self._next_data()\r\n    635 self._num_yielded += 1\r\n    636 if self._dataset_kind == _DatasetKind.Iterable and \\\r\n    637         self._IterableDataset_len_called is not None and \\\r\n    638         self._num_yielded > self._IterableDataset_len_called:\r\n\r\nFile ~/Documents/PhD/Research/Envs/GNNPerf/lib/python3.9/site-packages/torch/utils/data/dataloader.py:678, in _SingleProcessDataLoaderIter._next_data(self)\r\n    676 def _next_data(self):\r\n    677     index = self._next_index()  # may raise StopIteration\r\n--> 678     data = self._dataset_fetcher.fetch(index)  # may raise StopIteration\r\n    679     if self._pin_memory:\r\n    680         data = _utils.pin_memory.pin_memory(data, self._pin_memory_device)\r\n\r\nFile ~/Documents/PhD/Research/Envs/GNNPerf/lib/python3.9/site-packages/torch/utils/data/_utils/fetch.py:54, in _MapDatasetFetcher.fetch(self, possibly_batched_index)\r\n     52 else:\r\n     53     data = self.dataset[possibly_batched_index]\r\n---> 54 return self.collate_fn(data)\r\n\r\nFile ~/Documents/PhD/Research/Envs/GNNPerf/lib/python3.9/site-packages/torch_geometric/loader/node_loader.py:117, in NodeLoader.collate_fn(self, index)\r\n    114 r\"\"\"Samples a subgraph from a batch of input nodes.\"\"\"\r\n    115 input_data: NodeSamplerInput = self.input_data[index]\r\n--> 117 out = self.node_sampler.sample_from_nodes(input_data)\r\n    119 if self.filter_per_worker:  # Execute `filter_fn` in the worker process\r\n    120     out = self.filter_fn(out)\r\n\r\nFile ~/Documents/PhD/Research/Envs/GNNPerf/lib/python3.9/site-packages/torch_geometric/sampler/neighbor_sampler.py:174, in NeighborSampler.sample_from_nodes(self, inputs)\r\n    170 def sample_from_nodes(\r\n    171     self,\r\n    172     inputs: NodeSamplerInput,\r\n    173 ) -> Union[SamplerOutput, HeteroSamplerOutput]:\r\n--> 174     return node_sample(inputs, self._sample)\r\n\r\nFile ~/Documents/PhD/Research/Envs/GNNPerf/lib/python3.9/site-packages/torch_geometric/sampler/neighbor_sampler.py:358, in node_sample(inputs, sample_fn)\r\n    355     seed = inputs.node\r\n    356     seed_time = inputs.time\r\n--> 358 out = sample_fn(seed, seed_time)\r\n    359 out.metadata = (inputs.input_id, inputs.time)\r\n    361 return out\r\n\r\nFile ~/Documents/PhD/Research/Envs/GNNPerf/lib/python3.9/site-packages/torch_geometric/sampler/neighbor_sampler.py:325, in NeighborSampler._sample(self, seed, seed_time, **kwargs)\r\n    322     num_sampled_nodes = num_sampled_edges = None\r\n    324 else:\r\n--> 325     raise ImportError(f\"'{self.__class__.__name__}' requires \"\r\n    326                       f\"either 'pyg-lib' or 'torch-sparse'\")\r\n    328 return SamplerOutput(\r\n    329     node=node,\r\n    330     row=row,\r\n   (...)\r\n    335     num_sampled_edges=num_sampled_edges,\r\n    336 )\r\n\r\nImportError: 'NeighborSampler' requires either 'pyg-lib' or 'torch-sparse'\r\n```\n\n### Environment\n\n* PyG version: 2.3.0\r\n* PyTorch version: 2.0.0\r\n* OS: MacOS 12.0\r\n* Python version: 3.9.16\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): `pip`\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): `torch-scatter 2.1.1`\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7240/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7238", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7238/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7238/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7238/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7238", "id": 1685082333, "node_id": "PR_kwDOBlHMec5PNCSF", "number": 7238, "title": "Update `to_hetero` error message", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-04-26T13:53:55Z", "updated_at": "2023-04-26T14:52:22Z", "closed_at": "2023-04-26T14:52:22Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7238", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7238", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7238.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7238.patch", "merged_at": "2023-04-26T14:52:22Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7238/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7238/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7234", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7234/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7234/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7234/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7234", "id": 1684452727, "node_id": "I_kwDOBlHMec5kZrV3", "number": 7234, "title": "NotImplementedError occurs when doing \"to_hetero\"", "user": {"login": "CrazyIvanChu", "id": 13133542, "node_id": "MDQ6VXNlcjEzMTMzNTQy", "avatar_url": "https://avatars.githubusercontent.com/u/13133542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CrazyIvanChu", "html_url": "https://github.com/CrazyIvanChu", "followers_url": "https://api.github.com/users/CrazyIvanChu/followers", "following_url": "https://api.github.com/users/CrazyIvanChu/following{/other_user}", "gists_url": "https://api.github.com/users/CrazyIvanChu/gists{/gist_id}", "starred_url": "https://api.github.com/users/CrazyIvanChu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CrazyIvanChu/subscriptions", "organizations_url": "https://api.github.com/users/CrazyIvanChu/orgs", "repos_url": "https://api.github.com/users/CrazyIvanChu/repos", "events_url": "https://api.github.com/users/CrazyIvanChu/events{/privacy}", "received_events_url": "https://api.github.com/users/CrazyIvanChu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2023-04-26T07:40:11Z", "updated_at": "2023-04-28T11:23:07Z", "closed_at": "2023-04-26T14:52:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI've been learning how to apply torch_geometric to heterogeneous graphs, and this is the video I followed on YouTube:\r\nhttps://www.youtube.com/watch?v=qL09oshDKww\r\n\r\nBasically I did exactly what Giovanni did in the tutorial, and here is the code:\r\n```\r\nimport torch\r\nfrom torch_geometric.data import HeteroData\r\nimport numpy as np\r\n\r\nauthors = torch.rand((10, 8))\r\npapers = torch.rand((20, 4))\r\n\r\nauthors_y = torch.rand(10).round()\r\nwrite_from = torch.tensor(np.random.choice(10, 50, replace=True))\r\nwrite_to = torch.tensor(np.random.choice(20, 50, replace=True))\r\nwrite = torch.concat((write_from, write_to)).reshape(-1, 50).long()\r\n\r\ncite_from = torch.tensor(np.random.choice(20, 15, replace=True))\r\ncite_to = torch.tensor(np.random.choice(20, 15, replace=True))\r\ncite = torch.concat((cite_from, cite_to)).reshape(-1, 15).long()\r\n\r\ndata = HeteroData({\"author\": {\"x\": authors, \"y\": authors_y}, \"paper\": {\"x\": papers}},\r\n                      author__write__paper={\"edge_index\": write}, paper__cite__paper={\"edge_index\": cite})\r\n\r\nhomogeneous_data = data.to_homogeneous()\r\n\r\nimport torch_geometric.transforms as T\r\nfrom torch_geometric.nn import Sequential, Linear\r\nfrom torch.nn import ReLU\r\n\r\ntransform = T.RandomNodeSplit()\r\ndata = transform(data)\r\n\r\nfrom torch_geometric.nn import SAGEConv, to_hetero\r\n\r\nclass GNN(torch.nn.Module):\r\n    def __init__(self, hidden_channels, out_channels):\r\n        super().__init__()\r\n        self.conv1 = SAGEConv((-1,-1), hidden_channels)\r\n        self.conv2 = SAGEConv((-1,-1), out_channels)\r\n\r\n    def forward(self, x, edge_index):\r\n        x = self.conv1(x, edge_index).relu()\r\n        x = self.conv2(x, edge_index)\r\n        return x\r\n\r\nmodel = GNN(hidden_channels=64, out_channels=2)\r\nmodel= to_hetero(model, data_backup.metadata(), aggr='sum')\r\n```\r\n\r\nAnd this is what I got:\r\n```\r\n---------------------------------------------------------------------------\r\nNotImplementedError                       Traceback (most recent call last)\r\nInput In [44], in <cell line: 15>()\r\n     12         return x\r\n     14 model = GNN(hidden_channels=64, out_channels=2)\r\n---> 15 model= to_hetero(model, data_backup.metadata(), aggr='sum')\r\n\r\nFile ~/anaconda3/envs/play/lib/python3.10/site-packages/torch_geometric/nn/to_hetero_transformer.py:120, in to_hetero(module, metadata, aggr, input_map, debug)\r\n     30 r\"\"\"Converts a homogeneous GNN model into its heterogeneous equivalent in\r\n     31 which node representations are learned for each node type in\r\n     32 :obj:`metadata[0]`, and messages are exchanged between each edge type in\r\n   (...)\r\n    117         transformation in debug mode. (default: :obj:`False`)\r\n    118 \"\"\"\r\n    119 transformer = ToHeteroTransformer(module, metadata, aggr, input_map, debug)\r\n--> 120 return transformer.transform()\r\n\r\nFile ~/anaconda3/envs/play/lib/python3.10/site-packages/torch_geometric/nn/fx.py:157, in Transformer.transform(self)\r\n    155     elif is_global_pooling_op(self.module, op, node.target):\r\n    156         op = 'call_global_pooling_module'\r\n--> 157     getattr(self, op)(node, node.target, node.name)\r\n    159 # Remove all unused nodes in the computation graph, i.e., all nodes\r\n    160 # which have been replaced by node type-wise or edge type-wise variants\r\n    161 # but which are still present in the computation graph.\r\n    162 # We do this by iterating over the computation graph in reversed order,\r\n    163 # and try to remove every node. This does only succeed in case there\r\n    164 # are no users of that node left in the computation graph.\r\n    165 for node in reversed(list(self.graph.nodes)):\r\n\r\nFile ~/anaconda3/envs/play/lib/python3.10/site-packages/torch_geometric/nn/to_hetero_transformer.py:308, in ToHeteroTransformer.call_method(self, node, target, name)\r\n    306 self.graph.inserting_after(node)\r\n    307 for key in self.metadata[int(self.is_edge_level(node))]:\r\n--> 308     args, kwargs = self.map_args_kwargs(node, key)\r\n    309     out = self.graph.create_node('call_method', target=target,\r\n    310                                  args=args, kwargs=kwargs,\r\n    311                                  name=f'{name}__{key2str(key)}')\r\n    312     self.graph.inserting_after(out)\r\n\r\nFile ~/anaconda3/envs/play/lib/python3.10/site-packages/torch_geometric/nn/to_hetero_transformer.py:414, in ToHeteroTransformer.map_args_kwargs(self, node, key)\r\n    411     else:\r\n    412         return value\r\n--> 414 args = tuple(_recurse(v) for v in node.args)\r\n    415 kwargs = {k: _recurse(v) for k, v in node.kwargs.items()}\r\n    416 return args, kwargs\r\n\r\nFile ~/anaconda3/envs/play/lib/python3.10/site-packages/torch_geometric/nn/to_hetero_transformer.py:414, in <genexpr>(.0)\r\n    411     else:\r\n    412         return value\r\n--> 414 args = tuple(_recurse(v) for v in node.args)\r\n    415 kwargs = {k: _recurse(v) for k, v in node.kwargs.items()}\r\n    416 return args, kwargs\r\n\r\nFile ~/anaconda3/envs/play/lib/python3.10/site-packages/torch_geometric/nn/to_hetero_transformer.py:404, in ToHeteroTransformer.map_args_kwargs.<locals>._recurse(value)\r\n    399         return (\r\n    400             self.find_by_name(f'{value.name}__{key2str(key[0])}'),\r\n    401             self.find_by_name(f'{value.name}__{key2str(key[-1])}'),\r\n    402         )\r\n    403     else:\r\n--> 404         raise NotImplementedError\r\n    405 elif isinstance(value, dict):\r\n    406     return {k: _recurse(v) for k, v in value.items()}\r\n\r\nNotImplementedError:\r\n```\n\n### Environment\n\n* PyG version: 2.3.0\r\n* PyTorch version: 2.0.0+cu117\r\n* OS: Linux\r\n* Python version: 3.10.4\r\n* CUDA/cuDNN version: no CUDA/cuDNN\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7234/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7232", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7232/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7232/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7232/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7232", "id": 1683707510, "node_id": "I_kwDOBlHMec5kW1Z2", "number": 7232, "title": "Remote Backend Utils Calculates Wrong # Nodes", "user": {"login": "alexbarghi-nv", "id": 105237337, "node_id": "U_kgDOBkXLWQ", "avatar_url": "https://avatars.githubusercontent.com/u/105237337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexbarghi-nv", "html_url": "https://github.com/alexbarghi-nv", "followers_url": "https://api.github.com/users/alexbarghi-nv/followers", "following_url": "https://api.github.com/users/alexbarghi-nv/following{/other_user}", "gists_url": "https://api.github.com/users/alexbarghi-nv/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexbarghi-nv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexbarghi-nv/subscriptions", "organizations_url": "https://api.github.com/users/alexbarghi-nv/orgs", "repos_url": "https://api.github.com/users/alexbarghi-nv/repos", "events_url": "https://api.github.com/users/alexbarghi-nv/events{/privacy}", "received_events_url": "https://api.github.com/users/alexbarghi-nv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-04-25T19:09:46Z", "updated_at": "2023-04-26T18:14:28Z", "closed_at": "2023-04-26T18:14:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nCurrently, the function `num_nodes()` in `remote_backend_utils` reports the wrong number of nodes.  This is because it first checks the edge indices and returns the length of matching edge indices, instead of checking node features first.  This bug causes some remote backend functionality to break, including calls to `get_input_nodes()` returning non-existent nodes, which will cause sampling to fail.\r\n\r\nMRE:\r\n```\r\nfrom cugraph.experimental.datasets import karate\r\nfrom cugraph.gnn import FeatureStore\r\nimport torch\r\nimport cudf\r\nimport cupy\r\nimport numpy as np\r\n\r\nel = karate.get_edgelist().reset_index(drop=True)\r\nel.src = el.src.astype(\"int64\")\r\nel.dst = el.dst.astype(\"int64\")\r\nall_vertices = np.array_split(cudf.concat([el.src, el.dst]).unique().values_host, 2)\r\n\r\nF = FeatureStore(backend=\"torch\")\r\nF.add_data(\r\n    torch.arange(len(all_vertices[0]), dtype=torch.float32) * 31,\r\n    \"type0\",\r\n    \"prop0\",\r\n)\r\nF.add_data(\r\n    torch.arange(len(all_vertices[1]), dtype=torch.float32) * 41,\r\n    \"type1\",\r\n    \"prop0\",\r\n)\r\n\r\nN = {\r\n    \"type0\": len(all_vertices[0]),\r\n    \"type1\": len(all_vertices[1]),\r\n}\r\n\r\noffsets = {\"type0\": 0, \"type1\": N[\"type0\"]}\r\n\r\nG = {\r\n    (\"type0\", \"et01\", \"type1\"): el[\r\n        el.src.isin(all_vertices[0]) & el.dst.isin(all_vertices[1])\r\n    ],\r\n    (\"type1\", \"et10\", \"type0\"): el[\r\n        el.src.isin(all_vertices[1]) & el.dst.isin(all_vertices[0])\r\n    ],\r\n    (\"type0\", \"et00\", \"type0\"): el[\r\n        el.src.isin(all_vertices[0]) & el.dst.isin(all_vertices[0])\r\n    ],\r\n    (\"type1\", \"et11\", \"type1\"): el[\r\n        el.src.isin(all_vertices[1]) & el.dst.isin(all_vertices[1])\r\n    ],\r\n}\r\n\r\nG = {\r\n    (src_type, edge_type, dst_type): (\r\n        torch.tensor(elx[\"src\"].values_host - offsets[src_type]),\r\n        torch.tensor(elx[\"dst\"].values_host - offsets[dst_type]),\r\n    )\r\n    for (src_type, edge_type, dst_type), elx in G.items()\r\n}\r\n\r\nfrom cugraph_pyg.data import CuGraphStore\r\ncugraph_store = CuGraphStore(F, G, N)\r\n\r\nfrom torch_geometric.loader.utils import get_input_nodes\r\nprint(get_input_nodes((cugraph_store, cugraph_store), 'type0'))\r\n\r\n```\r\n\r\nCorrect Output:\r\n```\r\n('type0',\r\n tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16]))\r\n```\r\n\r\nActual Output:\r\n```\r\n('type0',\r\n tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\r\n         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\r\n         36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,\r\n         54, 55, 56, 57, 58, 59]))\r\n```\r\n\r\nI have confirmed that `cugraph_store.get_all_tensor_attrs()` returns the correct output and have stepped through the code to verify that line 46 in `remote_backend_utils` (shown below) is where the wrong number of nodes is being returned.\r\n\r\n`remote_backend_utils.py` Lines 44-46:\r\n```\r\n        if None not in _num_nodes:\r\n            # We have filled out all the nodes:\r\n            return _num_nodes[0] if node_query else tuple(_num_nodes)\r\n```\r\n\n\n### Environment\n\n* PyG version: 2.3\r\n* PyTorch version: 2.0.0\r\n* OS: Ubuntu\r\n* Python version: 3.10.9\r\n* CUDA/cuDNN version: 11.8/8.7.0_0\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): n/a\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7232/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7228", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7228/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7228/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7228/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7228", "id": 1681749699, "node_id": "PR_kwDOBlHMec5PB1kk", "number": 7228, "title": "minor fix for `qm9_pretrained_schnet.py`", "user": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017636777, "node_id": "LA_kwDOBlHMec7veEWp", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/example", "name": "example", "color": "27D88A", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-04-24T17:45:11Z", "updated_at": "2023-04-25T11:34:20Z", "closed_at": "2023-04-25T11:34:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7228", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7228", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7228.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7228.patch", "merged_at": "2023-04-25T11:34:19Z"}, "body": "```\r\nroot@9135585df2bb:/workspace# python3 examples/qm9_pretrained_schnet.py\r\nTraceback (most recent call last):\r\n  File \"examples/qm9_pretrained_schnet.py\", line 17, in <module>\r\n    dataset = QM9(osp.join())\r\nTypeError: join() missing 1 required positional argument: 'a'\r\n```\r\n\r\nafter this minor fix and pip installing ase and schnet==1.0.0\r\ni get:\r\n```\r\nTraceback (most recent call last):\r\n  File \"examples/qm9_pretrained_schnet.py\", line 22, in <module>\r\n    model, datasets = SchNet.from_qm9_pretrained(path, dataset, target)\r\n  File \"/usr/local/lib/python3.8/dist-packages/torch_geometric/nn/models/schnet.py\", line 252, in from_qm9_pretrained\r\n    net.readout = 'mean' if mean is True else 'add'\r\n  File \"/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py\", line 1685, in __setattr__\r\n    raise TypeError(\"cannot assign '{}' as child module '{}' \"\r\nTypeError: cannot assign 'str' as child module 'readout' (torch.nn.Module or None expected)\r\n```\r\nif i set net.readout = None then it works and I get to the part of the schnet that relies on torch cluster (which i will eventually make a part of pyg-lib along with a bunch of other torch-* functionalities that are needed to be moved to pyg-lib)\r\n\r\n```\r\n  File \"examples/qm9_pretrained_schnet.py\", line 32, in <module>\r\n    pred = model(data.z, data.pos, data.batch)\r\n  File \"/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py\", line 1533, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/dist-packages/torch_geometric/nn/models/schnet.py\", line 284, in forward\r\n    edge_index, edge_weight = self.interaction_graph(pos, batch)\r\n  File \"/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py\", line 1533, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/dist-packages/torch_geometric/nn/models/schnet.py\", line 352, in forward\r\n    edge_index = radius_graph(pos, r=self.cutoff, batch=batch,\r\n  File \"/usr/local/lib/python3.8/dist-packages/torch_geometric/nn/pool/__init__.py\", line 210, in radius_graph\r\n    return torch_cluster.radius_graph(x, r, batch, loop, max_num_neighbors,\r\nAttributeError: 'NoneType' object has no attribute 'radius_graph'\r\n```\r\n\r\nnote that w/ schnet >= 2.0:\r\n```\r\nTraceback (most recent call last):\r\n  File \"examples/qm9_pretrained_schnet.py\", line 22, in <module>\r\n    model, datasets = SchNet.from_qm9_pretrained(path, dataset, target)\r\n  File \"/usr/local/lib/python3.8/dist-packages/torch_geometric/nn/models/schnet.py\", line 219, in from_qm9_pretrained\r\n    state = torch.load(path, map_location='cpu')\r\n  File \"/usr/local/lib/python3.8/dist-packages/torch/serialization.py\", line 817, in load\r\n    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)\r\n  File \"/usr/local/lib/python3.8/dist-packages/torch/serialization.py\", line 1045, in _legacy_load\r\n    result = unpickler.load()\r\n  File \"/usr/lib/python3.8/pickle.py\", line 1212, in load\r\n    dispatch[key[0]](self)\r\n  File \"/usr/lib/python3.8/pickle.py\", line 1528, in load_global\r\n    klass = self.find_class(module, name)\r\n  File \"/usr/local/lib/python3.8/dist-packages/torch/serialization.py\", line 850, in find_class\r\n    return super().find_class(mod_name, name)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pytorch_lightning/_graveyard/legacy_import_unpickler.py\", line 24, in find_class\r\n    return super().find_class(new_module, name)\r\n  File \"/usr/lib/python3.8/pickle.py\", line 1579, in find_class\r\n    __import__(module, level=0)\r\nModuleNotFoundError: No module named 'schnetpack.atomistic.model'\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7228/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7223", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7223/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7223/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7223/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7223", "id": 1680138002, "node_id": "I_kwDOBlHMec5kJN8S", "number": 7223, "title": "GNNExplainer on GAT (assert inputs.size(self.node_dim) == edge_mask.size(0))", "user": {"login": "sahiljain01", "id": 38175421, "node_id": "MDQ6VXNlcjM4MTc1NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/38175421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sahiljain01", "html_url": "https://github.com/sahiljain01", "followers_url": "https://api.github.com/users/sahiljain01/followers", "following_url": "https://api.github.com/users/sahiljain01/following{/other_user}", "gists_url": "https://api.github.com/users/sahiljain01/gists{/gist_id}", "starred_url": "https://api.github.com/users/sahiljain01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sahiljain01/subscriptions", "organizations_url": "https://api.github.com/users/sahiljain01/orgs", "repos_url": "https://api.github.com/users/sahiljain01/repos", "events_url": "https://api.github.com/users/sahiljain01/events{/privacy}", "received_events_url": "https://api.github.com/users/sahiljain01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-04-23T19:21:02Z", "updated_at": "2023-04-24T22:29:05Z", "closed_at": "2023-04-24T22:29:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nGAT Design:\r\n\r\n```\r\nimport torch.nn as nn\r\nimport torch.nn.functional as F\r\nfrom torch.optim import Adam\r\nfrom torch_geometric.nn import GATConv\r\nfrom torch_geometric.nn import global_mean_pool, global_add_pool, global_max_pool\r\nimport torch\r\n\r\nclass GAT(nn.Module):\r\n    def __init__(self, num_features=4, dim_h=4, first_heads=4, output_heads=1, layers=1, readout='all', dropout=0):\r\n        super(GAT, self).__init__()\r\n\r\n        self.layers = layers\r\n        self.num_readouts = 3 if readout=='all' else 1\r\n        self.readout = readout\r\n\r\n        self.attention_layers = torch.nn.ModuleList()\r\n\r\n        for l in range(self.layers):\r\n            if l==0:\r\n                self.attention_layers.append(GATConv(num_features, dim_h,\r\n                           heads=first_heads, dropout=dropout))\r\n            else:\r\n                self.attention_layers.append(GATConv(dim_h*first_heads, dim_h,\r\n                           heads=first_heads, dropout=dropout))\r\n\r\n        self.lin1 = nn.Linear(dim_h*first_heads*self.layers*self.num_readouts, dim_h*first_heads*self.layers*self.num_readouts)\r\n        self.lin2 = nn.Linear(dim_h*first_heads*self.layers*self.num_readouts, 1)\r\n        self.dropout = dropout\r\n\r\n    def reset_parameters(self):\r\n        self.attention_layers.reset_parameters()\r\n        self.lin1.reset_parameters()\r\n        self.lin2.reset_parameters()\r\n\r\n    def forward(self, x, edge_index, batch):\r\n        # Node embeddings\r\n        hs = {-1: x}\r\n        for l in range(self.layers):\r\n            hs[l] = self.attention_layers[l](hs[l-1], edge_index)\r\n            # print(hs[l].shape)\r\n\r\n        readouts = ()\r\n\r\n        # Graph-level readout\r\n        for index, h in hs.items():\r\n            if index != -1:\r\n                if self.readout == 'all':\r\n                    readouts += (global_add_pool(h, batch),)\r\n                    readouts += (global_max_pool(h, batch),)\r\n                    readouts += (global_mean_pool(h, batch),)\r\n                elif self.readout == 'add':\r\n                    readouts += (global_add_pool(h, batch),)\r\n                elif self.readout == 'max':\r\n                    readouts += (global_max_pool(h, batch),)\r\n                elif self.readout == 'mean':\r\n                    readouts += (global_mean_pool(h, batch),)\r\n\r\n        readouts = torch.cat(readouts, dim=1)\r\n        # print(readouts.shape)\r\n\r\n        x = F.dropout(readouts, p=self.dropout, training=self.training)\r\n        x = F.relu(self.lin1(x))\r\n        x = F.dropout(x, p=self.dropout, training=self.training)\r\n        x = self.lin2(x)\r\n        return F.sigmoid(x), None, None\r\n\r\n```\r\n       \r\nCode for GNN Explainer:\r\n```\r\nfrom torch_geometric.explain import Explainer, PGExplainer\r\nexplainer = Explainer(\r\n    model=model,\r\n    algorithm=PGExplainer(epochs=10, lr=0.003),\r\n    explanation_type='phenomenon',\r\n    edge_mask_type='object',\r\n    model_config=dict(\r\n        mode='binary_classification',\r\n        task_level='graph',\r\n        return_type='raw',\r\n    ),\r\n    # Include only the top 10 most important edges:\r\n    threshold_config=dict(threshold_type='topk', value=10),\r\n)\r\n\r\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\r\n\r\n# PGExplainer needs to be trained separately since it is a parametric\r\n# explainer i.e it uses a neural network to generate explanations:\r\nfor epoch in range(10):\r\n    for data in test_loader:\r\n        # Move the data to the chosen device\r\n        data = data.to(device)\r\n        x = data.x[:, [0, 1, 2]]\r\n        x = x.to(device)\r\n\r\n        edge_index = data.edge_index\r\n        edge_index = edge_index.to(device)\r\n\r\n        target = data.label\r\n        target = target.to(device)\r\n\r\n        batch = data.batch\r\n        batch = batch.to(device)\r\n\r\n        # Pass the data to the model's train method\r\n        loss = explainer.algorithm.train(epoch, model, x, edge_index, target=target, batch=batch)\r\n\r\n```\r\n\r\nError:  assert inputs.size(self.node_dim) == edge_mask.size(0)\n\n### Environment\n\n* PyG version: 2.3.0\r\n* PyTorch version: 1.12.1\r\n* OS: Mac OS\r\n* Python version: 3.10.9\r\n* CUDA/cuDNN version: running on cpu\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7223/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7214", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7214/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7214/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7214/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7214", "id": 1676047054, "node_id": "PR_kwDOBlHMec5Ou3y-", "number": 7214, "title": "Respect empty tensors in `NormalizeFeatures`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052698076, "node_id": "LA_kwDOBlHMec7xj0Pc", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/transform", "name": "transform", "color": "480283", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-04-20T05:54:43Z", "updated_at": "2023-04-20T06:03:12Z", "closed_at": "2023-04-20T06:03:11Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7214", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7214", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7214.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7214.patch", "merged_at": "2023-04-20T06:03:11Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7214/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7202", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7202/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7202/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7202/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7202", "id": 1672792793, "node_id": "PR_kwDOBlHMec5Oj-QT", "number": 7202, "title": "Fix optional `edge_id` handling in `SamplerOutput`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}, {"id": 4871834239, "node_id": "LA_kwDOBlHMec8AAAABImJKfw", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/sampler", "name": "sampler", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-04-18T10:12:19Z", "updated_at": "2023-04-18T10:13:10Z", "closed_at": "2023-04-18T10:13:09Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7202", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7202", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7202.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7202.patch", "merged_at": "2023-04-18T10:13:09Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7202/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7194", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7194/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7194/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7194/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7194", "id": 1671398997, "node_id": "PR_kwDOBlHMec5OfTZ8", "number": 7194, "title": "Fix `HGTConv` `edge_type_vec` construction ", "user": {"login": "berkekisin", "id": 70319815, "node_id": "MDQ6VXNlcjcwMzE5ODE1", "avatar_url": "https://avatars.githubusercontent.com/u/70319815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berkekisin", "html_url": "https://github.com/berkekisin", "followers_url": "https://api.github.com/users/berkekisin/followers", "following_url": "https://api.github.com/users/berkekisin/following{/other_user}", "gists_url": "https://api.github.com/users/berkekisin/gists{/gist_id}", "starred_url": "https://api.github.com/users/berkekisin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berkekisin/subscriptions", "organizations_url": "https://api.github.com/users/berkekisin/orgs", "repos_url": "https://api.github.com/users/berkekisin/repos", "events_url": "https://api.github.com/users/berkekisin/events{/privacy}", "received_events_url": "https://api.github.com/users/berkekisin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "berkekisin", "id": 70319815, "node_id": "MDQ6VXNlcjcwMzE5ODE1", "avatar_url": "https://avatars.githubusercontent.com/u/70319815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berkekisin", "html_url": "https://github.com/berkekisin", "followers_url": "https://api.github.com/users/berkekisin/followers", "following_url": "https://api.github.com/users/berkekisin/following{/other_user}", "gists_url": "https://api.github.com/users/berkekisin/gists{/gist_id}", "starred_url": "https://api.github.com/users/berkekisin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berkekisin/subscriptions", "organizations_url": "https://api.github.com/users/berkekisin/orgs", "repos_url": "https://api.github.com/users/berkekisin/repos", "events_url": "https://api.github.com/users/berkekisin/events{/privacy}", "received_events_url": "https://api.github.com/users/berkekisin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "berkekisin", "id": 70319815, "node_id": "MDQ6VXNlcjcwMzE5ODE1", "avatar_url": "https://avatars.githubusercontent.com/u/70319815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berkekisin", "html_url": "https://github.com/berkekisin", "followers_url": "https://api.github.com/users/berkekisin/followers", "following_url": "https://api.github.com/users/berkekisin/following{/other_user}", "gists_url": "https://api.github.com/users/berkekisin/gists{/gist_id}", "starred_url": "https://api.github.com/users/berkekisin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berkekisin/subscriptions", "organizations_url": "https://api.github.com/users/berkekisin/orgs", "repos_url": "https://api.github.com/users/berkekisin/repos", "events_url": "https://api.github.com/users/berkekisin/events{/privacy}", "received_events_url": "https://api.github.com/users/berkekisin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2023-04-17T15:05:13Z", "updated_at": "2023-04-25T05:04:15Z", "closed_at": "2023-04-25T05:04:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7194", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7194", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7194.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7194.patch", "merged_at": "2023-04-25T05:04:14Z"}, "body": "This pr fixes the utility function https://github.com/pyg-team/pytorch_geometric/blob/3d4836bc24dbb1b180f29cbbbdbcd18b94116dd7/torch_geometric/nn/conv/hgt_conv.py#L123, which constructs the type_vec of edges wrong and also crashes if some edge_types are not present in the current edge_index_dict. \r\nConsider the following scenario:\r\n\r\n```python\r\n# N =2, D=2, H=2 (2 nodes, head_dim 2, 2 heads)\r\nk = [\r\n     [0,0,1,1],\r\n     [2,2,3,3]\r\n    ]\r\n```\r\n\r\nafter calling this line:\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/3d4836bc24dbb1b180f29cbbbdbcd18b94116dd7/torch_geometric/nn/conv/hgt_conv.py#L141\r\n\r\nthe matrix k looks like this:\r\n\r\n```python\r\nk= [\r\n     [0,0],\r\n     [1,1],\r\n     [2,2],\r\n     [3,3]]\r\n\r\n# the type vec should look like this\r\ntype_vec = [0,1,0,1]\r\n# but at current implementation it would look like this\r\ntype_vec = [0,0,1,1]\r\n```\r\n\r\nAfter the reshape the attention heads are interleaved but  the type vector that  is currently constructed is sorted. \r\nWe fixed this issue by constructing interleaved type vec. Alternatively we can transpose the k before the reshape to ensure that we can use sorted type vec. This will also allow us to set `is_sorted=True` for the heterolinear `k_rel` which would be more efficient.\r\nAlso note that we added a test case for missing edge type in edge_index_dict.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7194/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7190", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7190/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7190/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7190/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7190", "id": 1671060863, "node_id": "I_kwDOBlHMec5jml1_", "number": 7190, "title": "How to concatenate different positional encoding node features faster?", "user": {"login": "kou18n", "id": 64201392, "node_id": "MDQ6VXNlcjY0MjAxMzky", "avatar_url": "https://avatars.githubusercontent.com/u/64201392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kou18n", "html_url": "https://github.com/kou18n", "followers_url": "https://api.github.com/users/kou18n/followers", "following_url": "https://api.github.com/users/kou18n/following{/other_user}", "gists_url": "https://api.github.com/users/kou18n/gists{/gist_id}", "starred_url": "https://api.github.com/users/kou18n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kou18n/subscriptions", "organizations_url": "https://api.github.com/users/kou18n/orgs", "repos_url": "https://api.github.com/users/kou18n/repos", "events_url": "https://api.github.com/users/kou18n/events{/privacy}", "received_events_url": "https://api.github.com/users/kou18n/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-04-17T12:27:51Z", "updated_at": "2023-04-18T05:41:54Z", "closed_at": "2023-04-18T05:41:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI want to concatenate AddRandomWalkPE node feature and AddLaplacianEigenvectorPE feature as x value.\r\n```python\r\ntransform = T.Compose([T.RemoveIsolatedNodes() ,T.AddSelfLoops(), T.AddLaplacianEigenvectorPE(5,attr_name='x'),T.AddRandomWalkPE(20,attr_name='x'),T.ToSparseTensor()])  \r\ntrain_dataset = MalNetTiny(root='/home/xxx/Datasets/MalNetTiny', split='train', transform=transform)\r\n```\r\nCurrently, I use for loop, but it's time-consuming.\r\n\r\n```python\r\nfor i,graph in enumerate(tqdm(train_dataset,total=3500)):\r\n    train_dataset[i].x = torch.cat([graph.x.to(device) ,graph.random_walk_pe.to(device)],dim=1)\r\n```\r\nIs there any faster way? Thank you.\n\n### Environment\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7190/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7187", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7187/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7187/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7187/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7187", "id": 1670694535, "node_id": "PR_kwDOBlHMec5Oc6o5", "number": 7187, "title": "Fix `subgraph` on unordered inputs", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4601575641, "node_id": "LA_kwDOBlHMec8AAAABEkZ42Q", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/utils", "name": "utils", "color": "DBC48C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-04-17T08:42:21Z", "updated_at": "2023-04-17T08:50:22Z", "closed_at": "2023-04-17T08:50:21Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7187", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7187", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7187.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7187.patch", "merged_at": "2023-04-17T08:50:21Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7187/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7186", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7186/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7186/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7186/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7186", "id": 1670192744, "node_id": "I_kwDOBlHMec5jjR5o", "number": 7186, "title": "unexpected behaviour of torch_geometric.utils.subgraph", "user": {"login": "VeritasYin", "id": 10231926, "node_id": "MDQ6VXNlcjEwMjMxOTI2", "avatar_url": "https://avatars.githubusercontent.com/u/10231926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VeritasYin", "html_url": "https://github.com/VeritasYin", "followers_url": "https://api.github.com/users/VeritasYin/followers", "following_url": "https://api.github.com/users/VeritasYin/following{/other_user}", "gists_url": "https://api.github.com/users/VeritasYin/gists{/gist_id}", "starred_url": "https://api.github.com/users/VeritasYin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VeritasYin/subscriptions", "organizations_url": "https://api.github.com/users/VeritasYin/orgs", "repos_url": "https://api.github.com/users/VeritasYin/repos", "events_url": "https://api.github.com/users/VeritasYin/events{/privacy}", "received_events_url": "https://api.github.com/users/VeritasYin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-04-16T23:29:45Z", "updated_at": "2023-04-17T08:50:22Z", "closed_at": "2023-04-17T08:50:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nIssue: currently, call the subgraph method with `relabel_nodes=True` will give unexpected behavior. The relabeled edges do not associate with the input subset for pyg 2.1.0-2.2.0 as follows\r\n\r\n```\r\n>>> import torch\r\n>>> import torch_geometric as pyg\r\n>>> pyg.__version__\r\n'2.2.0'\r\n>>> edge_index = torch.tensor([[0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6], [1, 0, 2, 1, 3, 2, 4, 3, 5, 4, 6, 5]])\r\n>>> from torch_geometric.utils import subgraph\r\n>>> subset = torch.tensor([3, 4, 5])\r\n>>> subgraph(subset, edge_index)\r\n(tensor([[3, 4, 4, 5],\r\n        [4, 3, 5, 4]]), None)\r\n>>> subgraph(subset, edge_index, relabel_nodes=True)\r\n(tensor([[0, 1, 1, 2],\r\n        [1, 0, 2, 1]]), None)\r\n>>> subset = torch.tensor([5, 4, 3])\r\n>>> subgraph(subset, edge_index)\r\n(tensor([[3, 4, 4, 5],\r\n        [4, 3, 5, 4]]), None)\r\n>>> subgraph(subset, edge_index, relabel_nodes=True)\r\n(tensor([[0, 1, 1, 2],\r\n        [1, 0, 2, 1]]), None)\r\n```\r\n\r\nFor pyg 1.6.3\r\n```\r\n>>> import torch\r\n>>> import torch_geometric\r\n>>> torch_geometric.__version__\r\n'1.6.3'\r\n>>> from torch_geometric.utils import subgraph\r\n>>> edge_index = torch.tensor([[0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6], [1, 0, 2, 1, 3, 2, 4, 3, 5, 4, 6, 5]])\r\n>>> subset = torch.tensor([5, 4, 3])\r\n>>> subgraph(subset, edge_index, relabel_nodes=False)\r\n(tensor([[3, 4, 4, 5],\r\n        [4, 3, 5, 4]]), None)\r\n>>> subgraph(subset, edge_index, relabel_nodes=True)\r\n(tensor([[2, 1, 1, 0],\r\n        [1, 2, 0, 1]]), None)\r\n```\r\n\r\n\r\n### Environment\r\n\r\n* PyG version: 2.1.0-2.2.0\r\n* PyTorch version: 1.12.1\r\n* OS: Linux-5.4.0-66-generic-x86_64-with-glibc2.31\r\n* Python version: 3.10.9\r\n* CUDA/cuDNN version: 11.3.1 \r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7186/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7185", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7185/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7185/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7185/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7185", "id": 1670066300, "node_id": "PR_kwDOBlHMec5Oa2bE", "number": 7185, "title": "Fix `HeteroDictLinear` crashes if some node types are absent", "user": {"login": "berkekisin", "id": 70319815, "node_id": "MDQ6VXNlcjcwMzE5ODE1", "avatar_url": "https://avatars.githubusercontent.com/u/70319815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berkekisin", "html_url": "https://github.com/berkekisin", "followers_url": "https://api.github.com/users/berkekisin/followers", "following_url": "https://api.github.com/users/berkekisin/following{/other_user}", "gists_url": "https://api.github.com/users/berkekisin/gists{/gist_id}", "starred_url": "https://api.github.com/users/berkekisin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berkekisin/subscriptions", "organizations_url": "https://api.github.com/users/berkekisin/orgs", "repos_url": "https://api.github.com/users/berkekisin/repos", "events_url": "https://api.github.com/users/berkekisin/events{/privacy}", "received_events_url": "https://api.github.com/users/berkekisin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "berkekisin", "id": 70319815, "node_id": "MDQ6VXNlcjcwMzE5ODE1", "avatar_url": "https://avatars.githubusercontent.com/u/70319815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berkekisin", "html_url": "https://github.com/berkekisin", "followers_url": "https://api.github.com/users/berkekisin/followers", "following_url": "https://api.github.com/users/berkekisin/following{/other_user}", "gists_url": "https://api.github.com/users/berkekisin/gists{/gist_id}", "starred_url": "https://api.github.com/users/berkekisin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berkekisin/subscriptions", "organizations_url": "https://api.github.com/users/berkekisin/orgs", "repos_url": "https://api.github.com/users/berkekisin/repos", "events_url": "https://api.github.com/users/berkekisin/events{/privacy}", "received_events_url": "https://api.github.com/users/berkekisin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "berkekisin", "id": 70319815, "node_id": "MDQ6VXNlcjcwMzE5ODE1", "avatar_url": "https://avatars.githubusercontent.com/u/70319815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berkekisin", "html_url": "https://github.com/berkekisin", "followers_url": "https://api.github.com/users/berkekisin/followers", "following_url": "https://api.github.com/users/berkekisin/following{/other_user}", "gists_url": "https://api.github.com/users/berkekisin/gists{/gist_id}", "starred_url": "https://api.github.com/users/berkekisin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berkekisin/subscriptions", "organizations_url": "https://api.github.com/users/berkekisin/orgs", "repos_url": "https://api.github.com/users/berkekisin/repos", "events_url": "https://api.github.com/users/berkekisin/events{/privacy}", "received_events_url": "https://api.github.com/users/berkekisin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2023-04-16T17:49:38Z", "updated_at": "2023-04-16T18:29:16Z", "closed_at": "2023-04-16T18:29:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7185", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7185", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7185.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7185.patch", "merged_at": "2023-04-16T18:29:16Z"}, "body": "This pr fixes a bug in HeteroDictLinear forward function, which crashes if the input x_dict has some node types missing.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7185/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7183", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7183/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7183/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7183/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7183", "id": 1669785333, "node_id": "PR_kwDOBlHMec5OZ9Hl", "number": 7183, "title": "Fix empty `dst_type` handling in `HGTConv`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-04-16T08:42:44Z", "updated_at": "2023-04-16T08:48:53Z", "closed_at": "2023-04-16T08:48:52Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7183", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7183", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7183.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7183.patch", "merged_at": "2023-04-16T08:48:52Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7183/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7182", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7182/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7182/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7182/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7182", "id": 1669529285, "node_id": "I_kwDOBlHMec5jgv7F", "number": 7182, "title": "[HGTConv] Weird Behavior", "user": {"login": "yamaceay", "id": 46201716, "node_id": "MDQ6VXNlcjQ2MjAxNzE2", "avatar_url": "https://avatars.githubusercontent.com/u/46201716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yamaceay", "html_url": "https://github.com/yamaceay", "followers_url": "https://api.github.com/users/yamaceay/followers", "following_url": "https://api.github.com/users/yamaceay/following{/other_user}", "gists_url": "https://api.github.com/users/yamaceay/gists{/gist_id}", "starred_url": "https://api.github.com/users/yamaceay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yamaceay/subscriptions", "organizations_url": "https://api.github.com/users/yamaceay/orgs", "repos_url": "https://api.github.com/users/yamaceay/repos", "events_url": "https://api.github.com/users/yamaceay/events{/privacy}", "received_events_url": "https://api.github.com/users/yamaceay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-04-15T18:39:07Z", "updated_at": "2023-04-16T08:48:53Z", "closed_at": "2023-04-16T08:48:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHey, I recently noticed a potential bug in HGTConv: Attribute `dst_node_types` causes weird behavior. \r\n\r\n_torch_geometric/nn/conv/hgt_conv.py:74_\r\n\r\n```python\r\nself.dst_node_types = list(set(metadata[1][1]))\r\n```\r\n \r\nIn this context, metadata is a list as specified below:\r\n```python\r\n> print(metadata)\r\n[[\"X\", \"Y\", \"Z\"], [[\"X\", \"r\", \"Y\"], [\"X\", \"s\", \"X\"], [\"Z\", \"t\", \"Y\"]]]\r\n# [[Nodes], [Meta relations]]\r\n\r\n> print(metadata[1])\r\n[[\"X\", \"r\", \"Y\"], [\"X\", \"s\", \"X\"], [\"Z\", \"t\", \"Y\"]]\r\n# [Meta relations]\r\n\r\n> print(metadata[1][1])\r\n[\"X\", \"s\", \"X\"]\r\n# Second relation type\r\n\r\n> list(set(print(metadata[1][1]))\r\n[\"X\", \"s\"]\r\n# Unique values of second relation type\r\n# 'X' being a node type and 's' being an edge type\r\n```\r\n\r\nAnd it is used exactly once at:\r\n_torch_geometric/nn/conv/hgt_conv.py:212-215_\r\n\r\n```python\r\nfor node_type, out in out_dict.items():\r\n  if node_type not in self.dst_node_types:\r\n    out_dict[node_type] = None\r\n    continue\r\n```\r\n \r\nSo, results of each node type except 'X' would be ignored. \r\n\r\nI suggest the following change:\r\n\r\nChange _torch_geometric/nn/conv/hgt_conv.py:74_ to:\r\n\r\n```python\r\nself.dst_node_types = [edge_type[2] for edge_type in self.edge_types]\r\n```\r\n\r\nI hope this helps. Keep up the good work and thank you in advance!\n\n### Environment\n\n* PyG version: 2.4.0\r\n* PyTorch version: 2.0.0+cu118\r\n* OS: Linux (Google Colab)\r\n* Python version: 3.9.16\r\n* CUDA/cuDNN version: 11.8\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7182/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7176", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7176/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7176/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7176/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7176", "id": 1668958222, "node_id": "PR_kwDOBlHMec5OXVHO", "number": 7176, "title": "Can't use `deepcopy` on `Explanation`", "user": {"login": "RBendias", "id": 29600676, "node_id": "MDQ6VXNlcjI5NjAwNjc2", "avatar_url": "https://avatars.githubusercontent.com/u/29600676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RBendias", "html_url": "https://github.com/RBendias", "followers_url": "https://api.github.com/users/RBendias/followers", "following_url": "https://api.github.com/users/RBendias/following{/other_user}", "gists_url": "https://api.github.com/users/RBendias/gists{/gist_id}", "starred_url": "https://api.github.com/users/RBendias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RBendias/subscriptions", "organizations_url": "https://api.github.com/users/RBendias/orgs", "repos_url": "https://api.github.com/users/RBendias/repos", "events_url": "https://api.github.com/users/RBendias/events{/privacy}", "received_events_url": "https://api.github.com/users/RBendias/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 4020368118, "node_id": "LA_kwDOBlHMec7vofL2", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/explain", "name": "explain", "color": "5319e7", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "RBendias", "id": 29600676, "node_id": "MDQ6VXNlcjI5NjAwNjc2", "avatar_url": "https://avatars.githubusercontent.com/u/29600676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RBendias", "html_url": "https://github.com/RBendias", "followers_url": "https://api.github.com/users/RBendias/followers", "following_url": "https://api.github.com/users/RBendias/following{/other_user}", "gists_url": "https://api.github.com/users/RBendias/gists{/gist_id}", "starred_url": "https://api.github.com/users/RBendias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RBendias/subscriptions", "organizations_url": "https://api.github.com/users/RBendias/orgs", "repos_url": "https://api.github.com/users/RBendias/repos", "events_url": "https://api.github.com/users/RBendias/events{/privacy}", "received_events_url": "https://api.github.com/users/RBendias/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "RBendias", "id": 29600676, "node_id": "MDQ6VXNlcjI5NjAwNjc2", "avatar_url": "https://avatars.githubusercontent.com/u/29600676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RBendias", "html_url": "https://github.com/RBendias", "followers_url": "https://api.github.com/users/RBendias/followers", "following_url": "https://api.github.com/users/RBendias/following{/other_user}", "gists_url": "https://api.github.com/users/RBendias/gists{/gist_id}", "starred_url": "https://api.github.com/users/RBendias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RBendias/subscriptions", "organizations_url": "https://api.github.com/users/RBendias/orgs", "repos_url": "https://api.github.com/users/RBendias/repos", "events_url": "https://api.github.com/users/RBendias/events{/privacy}", "received_events_url": "https://api.github.com/users/RBendias/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-04-14T21:12:15Z", "updated_at": "2023-04-16T08:29:10Z", "closed_at": "2023-04-16T08:29:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7176", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7176", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7176.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7176.patch", "merged_at": "2023-04-16T08:29:08Z"}, "body": "Running the method `get_explanation_subgraph()` fails with: \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/Users/ramonabendias/.local/share/virtualenvs/pydata-workshop-CALqWZ-I/lib/python3.11/site-packages/torch_geometric/explain/explanation.py\", line 306, in get_explanation_subgraph\r\n    return self._apply_masks(\r\n           ^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/ramonabendias/.local/share/virtualenvs/pydata-workshop-CALqWZ-I/lib/python3.11/site-packages/torch_geometric/explain/explanation.py\", line 336, in _apply_masks\r\n    out = copy.deepcopy(self)\r\n          ^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.2_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/copy.py\", line 153, in deepcopy\r\n    y = copier(memo)\r\n        ^^^^^^^^^^^^\r\n  File \"/Users/ramonabendias/.local/share/virtualenvs/pydata-workshop-CALqWZ-I/lib/python3.11/site-packages/torch_geometric/data/hetero_data.py\", line 203, in __deepcopy__\r\n    out.__dict__[key] = copy.deepcopy(value, memo)\r\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.2_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n        ^^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.2_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/copy.py\", line 231, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n                             ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.2_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/copy.py\", line 153, in deepcopy\r\n    y = copier(memo)\r\n        ^^^^^^^^^^^^\r\n  File \"/Users/ramonabendias/.local/share/virtualenvs/pydata-workshop-CALqWZ-I/lib/python3.11/site-packages/torch_geometric/data/storage.py\", line 132, in __deepcopy__\r\n    out._mapping = copy.deepcopy(out._mapping, memo)\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.2_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n        ^^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.2_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/copy.py\", line 231, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n                             ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.2_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/copy.py\", line 153, in deepcopy\r\n    y = copier(memo)\r\n        ^^^^^^^^^^^^\r\n  File \"/Users/ramonabendias/.local/share/virtualenvs/pydata-workshop-CALqWZ-I/lib/python3.11/site-packages/torch/_tensor.py\", line 86, in __deepcopy__\r\n    raise RuntimeError(\r\nRuntimeError: Only Tensors created explicitly by the user (graph leaves) support the deepcopy protocol at the moment\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7176/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7174", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7174/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7174/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7174/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7174", "id": 1667822930, "node_id": "I_kwDOBlHMec5jaPVS", "number": 7174, "title": "Data collation error combining `compile` with `DataParallel` ", "user": {"login": "j-degroot", "id": 65828458, "node_id": "MDQ6VXNlcjY1ODI4NDU4", "avatar_url": "https://avatars.githubusercontent.com/u/65828458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j-degroot", "html_url": "https://github.com/j-degroot", "followers_url": "https://api.github.com/users/j-degroot/followers", "following_url": "https://api.github.com/users/j-degroot/following{/other_user}", "gists_url": "https://api.github.com/users/j-degroot/gists{/gist_id}", "starred_url": "https://api.github.com/users/j-degroot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j-degroot/subscriptions", "organizations_url": "https://api.github.com/users/j-degroot/orgs", "repos_url": "https://api.github.com/users/j-degroot/repos", "events_url": "https://api.github.com/users/j-degroot/events{/privacy}", "received_events_url": "https://api.github.com/users/j-degroot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-04-14T08:55:50Z", "updated_at": "2023-04-14T09:39:31Z", "closed_at": "2023-04-14T09:39:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nWhen working with the new `torch_geometric.compile` feature with `DataParallel` gives an error. Running the compile and DataParllel examples works, but combined code below (based on the DataParallel example)\r\n```\r\nimport os.path as osp\r\n\r\nimport torch\r\nimport torch.nn.functional as F\r\n\r\nimport torch_geometric\r\nimport torch_geometric.transforms as T\r\nfrom torch_geometric.datasets import MNISTSuperpixels\r\nfrom torch_geometric.loader import DataListLoader\r\nfrom torch_geometric.nn import DataParallel, SplineConv, global_mean_pool\r\n\r\npath = osp.join(osp.dirname(osp.realpath(__file__)), '../../data', 'MNIST')\r\ndataset = MNISTSuperpixels(path, transform=T.Cartesian()).shuffle()\r\nloader = DataListLoader(dataset, batch_size=1024, shuffle=True)\r\n\r\n\r\nclass Net(torch.nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.conv1 = SplineConv(dataset.num_features, 32, dim=2, kernel_size=5)\r\n        self.conv2 = SplineConv(32, 64, dim=2, kernel_size=5)\r\n        self.lin1 = torch.nn.Linear(64, 128)\r\n        self.lin2 = torch.nn.Linear(128, dataset.num_classes)\r\n\r\n    def forward(self, data):\r\n        print(f'Inside model - num graphs: {data.num_graphs}, '\r\n              f'device: {data.batch.device}')\r\n\r\n        x, edge_index, edge_attr = data.x, data.edge_index, data.edge_attr\r\n        x = F.elu(self.conv1(x, edge_index, edge_attr))\r\n        x = F.elu(self.conv2(x, edge_index, edge_attr))\r\n        x = global_mean_pool(x, data.batch)\r\n        x = F.elu(self.lin1(x))\r\n        return F.log_softmax(self.lin2(x), dim=1)\r\n\r\n\r\nmodel = Net()\r\nprint(f\"Let's use {torch.cuda.device_count()} GPUs!\")\r\nmodel = DataParallel(model)\r\ndevice = torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')\r\nmodel = model.to(device)\r\nmodel = torch_geometric.compile(model)\r\n\r\noptimizer = torch.optim.Adam(model.parameters(), lr=0.01)\r\n\r\nfor data_list in loader:\r\n    optimizer.zero_grad()\r\n    output = model(data_list)\r\n    print(f'Outside model - num graphs: {output.size(0)}')\r\n    y = torch.cat([data.y for data in data_list]).to(output.device)\r\n    loss = F.nll_loss(output, y)\r\n    loss.backward()\r\n    optimizer.step()\r\n```\r\n\r\n\r\ngives the full error\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/jurren/helper/dataparallel_debug.py\", line 51, in <module>\r\n    output = model(data_list)\r\n  File \"/home/jurren/.conda/envs/pyg/lib/python3.10/site-packages/torch/nn/modules/module.py\", line 1501, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\n  File \"/home/jurren/.conda/envs/pyg/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py\", line 82, in forward\r\n    return self.dynamo_ctx(self._orig_mod.forward)(*args, **kwargs)\r\n  File \"/home/jurren/.conda/envs/pyg/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py\", line 209, in _fn\r\n    return fn(*args, **kwargs)\r\n  File \"/home/jurren/.conda/envs/pyg/lib/python3.10/site-packages/torch_geometric/nn/data_parallel.py\", line 61, in forward\r\n    for t in chain(self.module.parameters(), self.module.buffers()):\r\n  File \"/home/jurren/.conda/envs/pyg/lib/python3.10/site-packages/torch_geometric/nn/data_parallel.py\", line 61, in <graph break in forward>\r\n    for t in chain(self.module.parameters(), self.module.buffers()):\r\n  File \"/home/jurren/.conda/envs/pyg/lib/python3.10/site-packages/torch_geometric/nn/data_parallel.py\", line 68, in <graph break in forward>\r\n    inputs = self.scatter(data_list, self.device_ids)\r\n  File \"/home/jurren/.conda/envs/pyg/lib/python3.10/site-packages/torch_geometric/nn/data_parallel.py\", line 76, in scatter\r\n    count = torch.tensor([data.num_nodes for data in data_list])\r\n  File \"/home/jurren/.conda/envs/pyg/lib/python3.10/site-packages/torch_geometric/nn/data_parallel.py\", line 79, in <graph break in scatter>\r\n    device_id = num_devices * cumsum.to(torch.float) / cumsum[-1].item()\r\n  File \"/home/jurren/.conda/envs/pyg/lib/python3.10/site-packages/torch_geometric/nn/data_parallel.py\", line 82, in <graph break in scatter>\r\n    split = device_id.bincount().cumsum(0)\r\n  File \"/home/jurren/.conda/envs/pyg/lib/python3.10/site-packages/torch_geometric/nn/data_parallel.py\", line 84, in <graph break in scatter>\r\n    split = torch.unique(split, sorted=True)\r\n  File \"/home/jurren/.conda/envs/pyg/lib/python3.10/site-packages/torch_geometric/nn/data_parallel.py\", line 85, in <graph break in scatter>\r\n    split = split.tolist()\r\n  File \"/home/jurren/.conda/envs/pyg/lib/python3.10/site-packages/torch_geometric/nn/data_parallel.py\", line 87, in <graph break in scatter>\r\n    return [\r\n  File \"/home/jurren/.conda/envs/pyg/lib/python3.10/site-packages/torch_geometric/nn/data_parallel.py\", line 88, in <listcomp>\r\n    Batch.from_data_list(data_list[split[i]:split[i + 1]],\r\n  File \"/home/jurren/.conda/envs/pyg/lib/python3.10/site-packages/torch_geometric/data/batch.py\", line 76, in from_data_list\r\n    batch, slice_dict, inc_dict = collate(\r\n  File \"/home/jurren/.conda/envs/pyg/lib/python3.10/site-packages/torch_geometric/data/collate.py\", line 37, in collate\r\n    out.stores_as(data_list[0])\r\nTypeError: 'NoneType' object is not callable```\r\n\r\n### Environment\r\n\r\n* PyG version: 2.3.0\r\n* PyTorch version: 2.0.0\r\n* OS: Linux\r\n* Python version: 3.10.9\r\n* CUDA/cuDNN version: 11.7\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): PyG with pip (PyTorch and CUDA with conda)\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\ntorch-cluster      1.6.1+pt20cu117\r\ntorch-scatter      2.1.1+pt20cu117\r\ntorch-sparse       0.6.17+pt20cu117\r\ntorch-spline-conv  1.2.2+pt20cu117\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7174/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7173", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7173/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7173/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7173/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7173", "id": 1666053391, "node_id": "I_kwDOBlHMec5jTfUP", "number": 7173, "title": "batch_size makes errors in gcn", "user": {"login": "finquick", "id": 95392682, "node_id": "U_kgDOBa-Tqg", "avatar_url": "https://avatars.githubusercontent.com/u/95392682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/finquick", "html_url": "https://github.com/finquick", "followers_url": "https://api.github.com/users/finquick/followers", "following_url": "https://api.github.com/users/finquick/following{/other_user}", "gists_url": "https://api.github.com/users/finquick/gists{/gist_id}", "starred_url": "https://api.github.com/users/finquick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/finquick/subscriptions", "organizations_url": "https://api.github.com/users/finquick/orgs", "repos_url": "https://api.github.com/users/finquick/repos", "events_url": "https://api.github.com/users/finquick/events{/privacy}", "received_events_url": "https://api.github.com/users/finquick/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-04-13T09:25:18Z", "updated_at": "2023-04-14T00:19:38Z", "closed_at": "2023-04-14T00:19:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\n```\r\nimport torch\r\nfrom torch_geometric.data import Data\r\nfrom torch_geometric.nn import GCNConv\r\nfrom torch_geometric.nn import GAE\r\n\r\n\r\nclass GCNEncoder(torch.nn.Module):\r\n    def __init__(self, in_channels, out_channels):\r\n        super(GCNEncoder, self).__init__()\r\n        self.conv1 = GCNConv(in_channels, 2 * out_channels, cached=True) # cached only for transductive learning\r\n  \r\n    def forward(self, data):\r\n        x = data.x\r\n        edge_index = data.edge_index\r\n\r\n        x = self.conv1(x, edge_index).relu()\r\n        return x\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    model = GCNEncoder(in_channels=10, out_channels=5).cuda()\r\n\r\n    edge_index = torch.tensor([[0, 1, 2],\r\n                               [1, 0, 0]], dtype=torch.long)\r\n    x = torch.randn(3, 10)\r\n    y = torch.tensor([1]).long()\r\n\r\n    data = Data(x=x, y=y, edge_index=edge_index)\r\n\r\n\r\n    # data_list = [data, data, data, data] #right\r\n    data_list = [data, data, data] #error\r\n\r\n    from torch_geometric.loader import DataLoader\r\n    loader = DataLoader(data_list, batch_size=2)\r\n\r\n    for batch in loader:\r\n        z = model(batch.cuda())\r\n \r\n        print(z.shape)\r\n```\r\nThe program executes normally when the element in the batch is exactly equal to the batchsize, but an error occurs if the element is smaller than the batchsize.\r\n\r\nException has occurred: RuntimeError\r\nCUDA error: device-side assert triggered\r\nCUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.\r\nFor debugging consider passing CUDA_LAUNCH_BLOCKING=1.\r\n  File \"C:\\DevelopFolder\\1_GAE_transformer_CNN\\7_UCIHAR\\models\\gae_transformer copy.py\", line 23, in forward\r\n    x = self.conv1(x, edge_index).relu()\r\n  File \"C:\\DevelopFolder\\1_GAE_transformer_CNN\\7_UCIHAR\\models\\gae_transformer copy.py\", line 45, in <module>\r\n    z = model(batch.cuda())\r\nRuntimeError: CUDA error: device-side assert triggered\r\nCUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.\r\nFor debugging consider passing CUDA_LAUNCH_BLOCKING=1.\r\n\n\n### Environment\n\n* PyG version:2.2.0\r\n* PyTorch version:1.13.0\r\n* OS: win10\r\n* Python version:\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda and pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): 2.1.0+pt113cu116\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7173/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7172", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7172/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7172/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7172/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7172", "id": 1665968992, "node_id": "PR_kwDOBlHMec5ONUVt", "number": 7172, "title": "Fix typo in documentation", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-04-13T08:32:25Z", "updated_at": "2023-04-13T08:32:42Z", "closed_at": "2023-04-13T08:32:36Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7172", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7172", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7172.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7172.patch", "merged_at": "2023-04-13T08:32:36Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7172/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7153", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7153/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7153/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7153/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7153", "id": 1661675230, "node_id": "I_kwDOBlHMec5jCybe", "number": 7153, "title": "subgraph generates different results from cluster loader", "user": {"login": "llan-ml", "id": 22030149, "node_id": "MDQ6VXNlcjIyMDMwMTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/22030149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llan-ml", "html_url": "https://github.com/llan-ml", "followers_url": "https://api.github.com/users/llan-ml/followers", "following_url": "https://api.github.com/users/llan-ml/following{/other_user}", "gists_url": "https://api.github.com/users/llan-ml/gists{/gist_id}", "starred_url": "https://api.github.com/users/llan-ml/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llan-ml/subscriptions", "organizations_url": "https://api.github.com/users/llan-ml/orgs", "repos_url": "https://api.github.com/users/llan-ml/repos", "events_url": "https://api.github.com/users/llan-ml/events{/privacy}", "received_events_url": "https://api.github.com/users/llan-ml/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-04-11T02:33:51Z", "updated_at": "2023-04-12T07:10:43Z", "closed_at": "2023-04-11T15:29:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\n```ipython\r\nIn [1]: import torch\r\n\r\nIn [2]: from torch_geometric.datasets import Reddit\r\n\r\nIn [3]: from torch_geometric.loader import ClusterData, ClusterLoader\r\n\r\nIn [4]: K, N = 15, 100\r\n\r\nIn [5]: dataset = Reddit(\"./data/Reddit\")\r\n\r\nIn [6]: data = dataset[0]\r\n\r\nIn [7]: cluster_data = ClusterData(data, num_parts=N, recursive=False, save_dir=dataset.processed_dir)\r\n\r\nIn [8]: batch = torch.tensor(range(K))\r\n\r\nIn [9]: start = cluster_data.partptr[batch].tolist()\r\n\r\nIn [10]: end = cluster_data.partptr[batch + 1].tolist()\r\n\r\nIn [11]: node_idx = torch.cat([torch.arange(s, e) for s, e in zip(start, end)])\r\n\r\nIn [12]: d = data.subgraph(node_idx)\r\n\r\nIn [13]: train_loader = ClusterLoader(cluster_data, batch_size=K, shuffle=False, num_workers=0)\r\n\r\nIn [14]: dd = train_loader._collate(batch)\r\n\r\nIn [15]: d\r\nOut[15]: Data(x=[35019, 602], edge_index=[2, 2825258], y=[35019], train_mask=[35019], val_mask=[35019], test_mask=[35019])\r\n\r\nIn [16]: dd\r\nOut[16]: Data(x=[35019, 602], y=[35019], train_mask=[35019], val_mask=[35019], test_mask=[35019], edge_index=[2, 14892264])\r\n```\r\n\r\nThe number of edges of `d` is different from that of `dd`.\n\n### Environment\n\n* PyG version: 2.3.0\r\n* PyTorch version: 1.13.1+cpu\r\n* OS: Ubuntu 18.04\r\n* Python version: 3.9.12\r\n* CUDA/cuDNN version: N/A\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): torch-scatter==2.1.1+pt113cpu, torch-sparse==0.6.17+pt113cpu\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7153/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7151", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7151/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7151/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7151/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7151", "id": 1661196949, "node_id": "I_kwDOBlHMec5jA9qV", "number": 7151, "title": "Metapath2vec IndexError: index is out of bounds", "user": {"login": "ZihanChen1995", "id": 36064256, "node_id": "MDQ6VXNlcjM2MDY0MjU2", "avatar_url": "https://avatars.githubusercontent.com/u/36064256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZihanChen1995", "html_url": "https://github.com/ZihanChen1995", "followers_url": "https://api.github.com/users/ZihanChen1995/followers", "following_url": "https://api.github.com/users/ZihanChen1995/following{/other_user}", "gists_url": "https://api.github.com/users/ZihanChen1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZihanChen1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZihanChen1995/subscriptions", "organizations_url": "https://api.github.com/users/ZihanChen1995/orgs", "repos_url": "https://api.github.com/users/ZihanChen1995/repos", "events_url": "https://api.github.com/users/ZihanChen1995/events{/privacy}", "received_events_url": "https://api.github.com/users/ZihanChen1995/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2023-04-10T18:53:43Z", "updated_at": "2023-04-17T06:08:34Z", "closed_at": "2023-04-12T22:26:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\n### Description\r\nHi, I am trying to implement the `MetaPath2Vec()` to embed the nodes of a `HeteroData`. I wrote the code following the `AMiner` data example. **However, when training the model, it keeps showing the IndexError**: \r\n\r\n`IndexError: index 86099 is out of bounds for dimension 0 with size 9290`. \r\n\r\nCan you help me with that? Thank you so much in advance!\r\n\r\n(This issue is similar but different from [ISSUE #2273](https://github.com/pyg-team/pytorch_geometric/issues/2273), since the error messages are somehow different, and that issue has already been fixed.)\r\n\r\n---\r\n\r\nMy sample data and code can be found here:\r\n\r\n### Sample Data: \r\n- [Links to data repo](https://github.com/ZihanChen1995/Sample_Edges)\r\n\r\n### Code:\r\n```\r\nfrom torch_geometric.nn import MetaPath2Vec\r\nnum_cores = 8\r\n\r\n# load edges\r\nroot_path = \"./Sample_Edges\"\r\na2a = torch.load(Path(root_path, \"a2a.pt\"))\r\nb2b = torch.load(Path(root_path, \"b2b.pt\"))\r\na2b = torch.load(Path(root_path, \"a2b.pt\"))\r\nb2a = torch.load(Path(root_path, \"b2a.pt\"))\r\n\r\n# construct graph\r\nsample_graph = HeteroData()\r\nsample_graph[\"a\"].num_nodes = 76809\r\nsample_graph[\"b\"].num_nodes = 9290\r\nsample_graph[\"a\",\"a2a\",\"a\"].edge_index = a2a.contiguous()\r\nsample_graph[\"b\",\"b2b\",\"b\"].edge_index = b2b.contiguous()\r\nsample_graph[\"a\",\"a2b\",\"b\"].edge_index = a2b.contiguous()\r\nsample_graph[\"b\",\"b2a\",\"a\"].edge_index = b2a.contiguous()\r\n\r\n# define metapath\r\nmetapath = [\r\n    (\"a\",\"a2a\",\"a\"),\r\n    (\"a\",\"a2b\",\"b\"),\r\n    (\"b\",\"b2b\",\"b\"),\r\n    (\"b\",\"b2a\",\"a\"),\r\n]\r\n\r\nmodel = MetaPath2Vec(sample_graph.edge_index_dict, embedding_dim=100,\r\n                     metapath=metapath, walk_length=50, context_size=7,\r\n                     walks_per_node=5, num_negative_samples=3, num_nodes_dict=sample_graph.num_nodes_dict,\r\n                     sparse=True).to(device)\r\n\r\nloader = model.loader(batch_size=512, shuffle=True, num_workers=num_cores)\r\noptimizer = torch.optim.SparseAdam(list(model.parameters()), lr=0.01)\r\n```\r\n\r\n### Error Message\r\n```\r\ndef train(epoch, log_steps=100):\r\n    model.train()\r\n\r\n    total_loss = 0\r\n\r\n    for i, (pos_rw, neg_rw) in enumerate(loader):    # this is where the error occurs\r\n        optimizer.zero_grad()\r\n        loss = model.loss(pos_rw.to(device), neg_rw.to(device))\r\n        loss.backward()\r\n        optimizer.step()\r\n\r\n        total_loss += loss.item()\r\n        if (i + 1) % log_steps == 0:\r\n            print((f'Epoch: {epoch}, Step: {i + 1:05d}/{len(loader)}, '\r\n                f'Loss: {total_loss / log_steps:.4f}'))\r\n            total_loss = 0\r\n\r\nfor epoch in range(1, 10):\r\n    train(epoch)\r\n\r\n\r\n>>>>>>>>>\r\n[/usr/local/lib/python3.9/dist-packages/torch/_utils.py](https://localhost:8080/#) in reraise(self)\r\n    642             # instantiate since we don't know how to\r\n    643             raise RuntimeError(msg) from None\r\n--> 644         raise exception\r\n    645 \r\n    646 \r\n\r\nIndexError: Caught IndexError in DataLoader worker process 0.\r\nOriginal Traceback (most recent call last):\r\n  File \"/usr/local/lib/python3.9/dist-packages/torch/utils/data/_utils/worker.py\", line 308, in _worker_loop\r\n    data = fetcher.fetch(index)\r\n  File \"/usr/local/lib/python3.9/dist-packages/torch/utils/data/_utils/fetch.py\", line 54, in fetch\r\n    return self.collate_fn(data)\r\n  File \"/usr/local/lib/python3.9/dist-packages/torch_geometric/nn/models/metapath2vec.py\", line 193, in _sample\r\n    return self._pos_sample(batch), self._neg_sample(batch)\r\n  File \"/usr/local/lib/python3.9/dist-packages/torch_geometric/nn/models/metapath2vec.py\", line 151, in _pos_sample\r\n    batch = sample(\r\n  File \"/usr/local/lib/python3.9/dist-packages/torch_geometric/nn/models/metapath2vec.py\", line 245, in sample\r\n    rand *= rowcount[subset].to(rand.dtype).view(-1, 1)\r\nIndexError: index 86099 is out of bounds for dimension 0 with size 9290\r\n```\r\n\r\nSeems the 86099 equals the sum of 76809 (num of `a`) and 9290 (num of `b`). I also added the `num_nodes_dict=sample_graph.num_nodes_dict` to the arguments. But it did not help.\r\n\r\nMay I ask how I can fix it? Thank you so much!\r\n\r\n### Environment\r\n\r\n* PyG version: 2.4.0\r\n* PyTorch version: 2.0.0+cu118\r\n* Python version: 3.9\r\n* CUDA/cuDNN version: 118\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n```\r\nos.environ['TORCH'] = torch.__version__\r\n!pip install -q torch-scatter -f https://data.pyg.org/whl/torch-${TORCH}.html\r\n!pip install -q torch-sparse -f https://data.pyg.org/whl/torch-${TORCH}.html\r\n!pip install -q torch-cluster -f https://data.pyg.org/whl/torch-${TORCH}.html\r\n!pip install -q pyg-lib -f https://data.pyg.org/whl/nightly/torch-${TORCH}.html\r\n!pip install -q git+https://github.com/pyg-team/pytorch_geometric.git\r\n```\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): Running on Google Colab.\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7151/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7149", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7149/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7149/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7149/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7149", "id": 1661030306, "node_id": "I_kwDOBlHMec5jAU-i", "number": 7149, "title": "Edge weight in the LightGCN implementation in torch_geometric.nn.models.lightgcn does not work", "user": {"login": "happykygo", "id": 62350285, "node_id": "MDQ6VXNlcjYyMzUwMjg1", "avatar_url": "https://avatars.githubusercontent.com/u/62350285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/happykygo", "html_url": "https://github.com/happykygo", "followers_url": "https://api.github.com/users/happykygo/followers", "following_url": "https://api.github.com/users/happykygo/following{/other_user}", "gists_url": "https://api.github.com/users/happykygo/gists{/gist_id}", "starred_url": "https://api.github.com/users/happykygo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/happykygo/subscriptions", "organizations_url": "https://api.github.com/users/happykygo/orgs", "repos_url": "https://api.github.com/users/happykygo/repos", "events_url": "https://api.github.com/users/happykygo/events{/privacy}", "received_events_url": "https://api.github.com/users/happykygo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-04-10T16:26:01Z", "updated_at": "2023-04-11T14:49:11Z", "closed_at": "2023-04-11T14:49:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nEdge weight in the LightGCN implementation in torch_geometric.nn.models.lightgcn does not seem to work.\r\n\r\nWhile the init() function can take edge_weight as an additional argument of the underlying LGConv layers, it does not appear to be used anywhere in the code, including the forward() function. \r\n\r\nThe forward() function in LightGCN only takes edge_index as a parameter and not edge_weight, even though the forward() function in the LGConv layers accepts both edge_index and edge_weight. \n\n### Environment\n\n* PyG version: 2.3.0\r\n* PyTorch version: 2.0.0\r\n* OS: MacOS and Linux\r\n* Python version: 3.9\r\n* CUDA/cuDNN version: \r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7149/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7141", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7141/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7141/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7141/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7141", "id": 1659819288, "node_id": "PR_kwDOBlHMec5N4sIs", "number": 7141, "title": "Fix `numpy` incompatiblity when reading files for `Planetoid` datasets", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637023, "node_id": "LA_kwDOBlHMec7veEaf", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/dataset", "name": "dataset", "color": "7705B6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-04-09T09:57:01Z", "updated_at": "2023-04-09T10:02:45Z", "closed_at": "2023-04-09T10:02:44Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7141", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7141", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7141.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7141.patch", "merged_at": "2023-04-09T10:02:44Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7141/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7137", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7137/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7137/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7137/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7137", "id": 1658770652, "node_id": "I_kwDOBlHMec5i3tTc", "number": 7137, "title": "TorhScript error in self.propagate", "user": {"login": "dvlp-r", "id": 42722663, "node_id": "MDQ6VXNlcjQyNzIyNjYz", "avatar_url": "https://avatars.githubusercontent.com/u/42722663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvlp-r", "html_url": "https://github.com/dvlp-r", "followers_url": "https://api.github.com/users/dvlp-r/followers", "following_url": "https://api.github.com/users/dvlp-r/following{/other_user}", "gists_url": "https://api.github.com/users/dvlp-r/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvlp-r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvlp-r/subscriptions", "organizations_url": "https://api.github.com/users/dvlp-r/orgs", "repos_url": "https://api.github.com/users/dvlp-r/repos", "events_url": "https://api.github.com/users/dvlp-r/events{/privacy}", "received_events_url": "https://api.github.com/users/dvlp-r/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2023-04-07T12:47:32Z", "updated_at": "2023-04-18T15:49:12Z", "closed_at": "2023-04-18T15:49:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi, I am trying to save the torchScript of a GNN model created with PyTorch geometric. The model is the one provided by OGB in its GitHub repository (https://github.com/snap-stanford/ogb/tree/master/examples/graphproppred/mol).\r\n\r\nAfter having done a modification in the OGB mol_encoder class (used a jit interface to avoid the expected integer literal for index error) and set the re-defined GINConv operator as jittable() and added the propagate and forward types, I am now encountering this error and I do not know how to solve it.\r\n\r\n```\r\nRuntimeError: \r\nArguments for call are not valid.\r\nThe following variants are available:\r\n  \r\n  propagate__0(__torch__.GINConvJittable_f74bb0.GINConvJittable_f74bb0 self, Tensor edge_index, Tensor x, Tensor edge_attr, (int, int)? size) -> Tensor:\r\n  Expected a value of type 'Tensor' for argument 'edge_attr' but instead found type 'int'.\r\n  \r\n  propagate__1(__torch__.GINConvJittable_f74bb0.GINConvJittable_f74bb0 self, __torch__.torch_sparse.tensor.SparseTensor edge_index, Tensor x, Tensor edge_attr, (int, int)? size) -> Tensor:\r\n  Expected a value of type '__torch__.torch_sparse.tensor.SparseTensor (of Python compilation unit at: 0x600001f88018)' for argument 'edge_index' but instead found type 'Tensor'.\r\n\r\nThe original call is:\r\n  File \"/var/folders/fv/2kfwzrfd34g51h7_rsfb3pb00000gn/T/dvlpr_pyg/tmpk2s6lstw.py\", line 205\r\n    def forward(self, x: torch.Tensor, edge_index: torch.Tensor, edge_attr: torch.Tensor) -> torch.Tensor:\r\n        edge_embedding = self.bond_encoder(edge_attr)\r\n        return self.mlp((1 + self.eps) * x + self.propagate(edge_index, x=x, edge_attr=edge_embedding, size=None))\r\n                                             ~~~~~~~~~~~~~~ <--- HERE\r\n```\r\n\r\nThank you in advance for your help, if you do not know about this error but are able to provide me a working solution to save the TorchScript of the OGB model I linked, I would be really thankful.\r\n\r\nThanks everyone in advance for your help.\n\n### Environment\n\n* PyG version: 2.3.0\r\n* PyTorch version: 2.1.0.dev20230329\r\n* OS: MacOS\r\n* Python version: 3.10.10\r\n* CUDA/cuDNN version: \r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7137/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7128", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7128/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7128/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7128/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7128", "id": 1656441905, "node_id": "PR_kwDOBlHMec5NuDaf", "number": 7128, "title": "Fix for `from_networkx` re-calling the constructor of the `nx.Graph`", "user": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}, {"id": 4601575641, "node_id": "LA_kwDOBlHMec8AAAABEkZ42Q", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/utils", "name": "utils", "color": "DBC48C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2023-04-05T23:34:58Z", "updated_at": "2023-04-09T22:59:58Z", "closed_at": "2023-04-09T22:59:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7128", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7128", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7128.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7128.patch", "merged_at": "2023-04-09T22:59:56Z"}, "body": "https://github.com/pyg-team/pytorch_geometric/issues/7112\r\nrepro.py:\r\n```\r\nimport networkx as nx\r\nfrom torch_geometric.utils import from_networkx\r\nclass MetroNetwork(nx.Graph):\r\n    def __init__(self, debug_mode=False, testing=False, **attr):\r\n        super().__init__(**attr)\r\n        self.num_access = None\r\n        self.num_main = None\r\n        self.num_core = None\r\n        self.num_nodes = None\r\n        self.num_edges = None\r\n        self.max_pp = None\r\n        self.max_ram = None\r\n        self.max_bw = None\r\n        self.max_link_delay = None\r\n        self.max_placement_delay = None\r\n        if testing:\r\n            self.create_network4()\r\n        else:\r\n            self.add_edges_from([(1, 4, {'tier': 0, 'max_bw': 2000., 'remaining_bw': 2000., 'delay': 1.8, 'bw_req': 0})])\r\n    def create_network4(self):\r\n        num_access = 44\r\n        num_main = 6\r\n        num_core = 2\r\n        self.num_access = num_access\r\n        self.num_main = num_main\r\n        self.num_core = num_core\r\n        self.num_nodes = num_access + num_main + num_core\r\n        tier_0_node_attributes = {'max_pp': 4000., 'remaining_pp': 4000., 'pp_req': 0,\r\n                                  'max_ram': 100., 'remaining_ram': 100., 'ram_req': 0,\r\n                                  'tier': 0, 'is_core': 0}\r\n        tier_1_node_attributes = {'max_pp': 6000., 'remaining_pp': 6000., 'pp_req': 0,\r\n                                  'max_ram': 150., 'remaining_ram': 150., 'ram_req': 0,\r\n                                  'tier': 1, 'is_core': 1}\r\n        tier_2_node_attributes = {'max_pp': 12000., 'remaining_pp': 12000., 'pp_req': 0,\r\n                                  'max_ram': 300., 'remaining_ram': 300., 'ram_req': 0,\r\n                                  'tier': 2, 'is_core': 1}\r\n        node_idx = 0\r\n        node_list = [(node_idx + i, tier_0_node_attributes) for i in range(num_core)]\r\n        node_idx += num_core\r\n        node_list.extend([(node_idx + i, tier_1_node_attributes) for i in range(num_main)])\r\n        node_idx += num_main\r\n        node_list.extend([(node_idx + i, tier_2_node_attributes) for i in range(num_access)])\r\n        self.add_nodes_from(node_list)\r\n        tier_0_link_attributes = {'tier': 0, 'max_bw': 2000., 'remaining_bw': 2000., 'delay': 1.8, 'bw_req': 0}\r\n        tier_1_link_attributes = {'tier': 1, 'max_bw': 3000., 'remaining_bw': 3000., 'delay': 4.8, 'bw_req': 0}\r\n        edge_list = [(0, 7, tier_1_link_attributes),\r\n                     (0, 2, tier_1_link_attributes),\r\n                     (0, 3, tier_1_link_attributes),\r\n                     (0, 27, tier_0_link_attributes),\r\n                     (0, 8, tier_0_link_attributes),\r\n                     (0, 44, tier_0_link_attributes),\r\n                     (1, 5, tier_1_link_attributes),\r\n                     (1, 7, tier_1_link_attributes),\r\n                     (1, 30, tier_0_link_attributes),\r\n                     (1, 28, tier_0_link_attributes),\r\n                     (1, 11, tier_0_link_attributes),\r\n                     (1, 50, tier_0_link_attributes),\r\n                     (1, 22, tier_0_link_attributes),\r\n                     (2, 4, tier_1_link_attributes),\r\n                     (2, 37, tier_0_link_attributes),\r\n                     (2, 24, tier_0_link_attributes),\r\n                     (3, 4, tier_1_link_attributes),\r\n                     (3, 7, tier_1_link_attributes),\r\n                     (3, 5, tier_1_link_attributes),\r\n                     (3, 21, tier_0_link_attributes),\r\n                     (3, 20, tier_0_link_attributes),\r\n                     (3, 49, tier_0_link_attributes),\r\n                     (4, 18, tier_0_link_attributes),\r\n                     (4, 10, tier_0_link_attributes),\r\n                     (5, 19, tier_0_link_attributes),\r\n                     (5, 43, tier_0_link_attributes),\r\n                     (5, 11, tier_0_link_attributes),\r\n                     (5, 6, tier_1_link_attributes),\r\n                     (7, 32, tier_0_link_attributes),\r\n                     (7, 33, tier_0_link_attributes),\r\n                     (7, 25, tier_0_link_attributes),\r\n                     (7, 17, tier_0_link_attributes),\r\n                     (8, 44, tier_0_link_attributes),\r\n                     (8, 14, tier_0_link_attributes),\r\n                     (9, 10, tier_0_link_attributes),\r\n                     (10, 40, tier_0_link_attributes),\r\n                     (11, 34, tier_0_link_attributes),\r\n                     (11, 48, tier_0_link_attributes),\r\n                     (12, 39, tier_0_link_attributes),\r\n                     (12, 51, tier_0_link_attributes),\r\n                     (13, 23, tier_0_link_attributes),\r\n                     (13, 27, tier_0_link_attributes),\r\n                     (14, 21, tier_0_link_attributes),\r\n                     (14, 16, tier_0_link_attributes),\r\n                     (14, 42, tier_0_link_attributes),\r\n                     (15, 20, tier_0_link_attributes),\r\n                     (15, 50, tier_0_link_attributes),\r\n                     (15, 51, tier_0_link_attributes),\r\n                     (16, 42, tier_0_link_attributes),\r\n                     (16, 44, tier_0_link_attributes),\r\n                     (17, 42, tier_0_link_attributes),\r\n                     (17, 39, tier_0_link_attributes),\r\n                     (18, 40, tier_0_link_attributes),\r\n                     (22, 41, tier_0_link_attributes),\r\n                     (23, 38, tier_0_link_attributes),\r\n                     (24, 38, tier_0_link_attributes),\r\n                     (24, 49, tier_0_link_attributes),\r\n                     (25, 51, tier_0_link_attributes),\r\n                     (26, 47, tier_0_link_attributes),\r\n                     (28, 30, tier_0_link_attributes),\r\n                     (29, 31, tier_0_link_attributes),\r\n                     (29, 41, tier_0_link_attributes),\r\n                     (31, 34, tier_0_link_attributes),\r\n                     (32, 33, tier_0_link_attributes),\r\n                     (35, 40, tier_0_link_attributes),\r\n                     (36, 37, tier_0_link_attributes),\r\n                     (37, 40, tier_0_link_attributes),\r\n                     (39, 42, tier_0_link_attributes),\r\n                     (43, 47, tier_0_link_attributes),\r\n                     (45, 46, tier_0_link_attributes),\r\n                     (45, 47, tier_0_link_attributes),\r\n                     (46, 48, tier_0_link_attributes),\r\n                     ]\r\n        # Add edges with networkx format\r\n        self.add_edges_from(edge_list)\r\n        self.num_edges = len(edge_list)\r\n        self.max_pp = 12000\r\n        self.max_ram = 300\r\n        self.max_bw = 5000\r\n        self.max_link_delay = 4.8\r\n        self.max_placement_delay = 30\r\nnetwork = MetroNetwork(testing = True)\r\nprint('Ground Truth NetworkX num_edges=', network.num_edges)\r\nfrom_netx = from_networkx(network)\r\nprint('num_edges after convert to PyG=', from_netx.num_edges)\r\nprint(\"PyG to_string=\", from_netx)\r\nprint(\"NetworkX to_string=\", network)\r\n```\r\n\r\ncommand:\r\n`git checkout fromnetworkx-fix;git pull origin fromnetworkx-fix; pip uninstall -y torch-geometric; pip install .; python3 repro.py`\r\n->\r\nw/ fix:\r\n```\r\nGround Truth NetworkX num_edges= 72\r\nnum_edges after convert to PyG= 144\r\n```\r\nw/o fix:\r\n```\r\nGround Truth NetworkX num_edges= 72\r\nnum_edges after convert to PyG= 146\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7128/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7124", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7124/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7124/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7124/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7124", "id": 1655379428, "node_id": "I_kwDOBlHMec5iqxXk", "number": 7124, "title": "Error when loading datasets from the torch_geometric.dataset package", "user": {"login": "TNodeCode", "id": 23740574, "node_id": "MDQ6VXNlcjIzNzQwNTc0", "avatar_url": "https://avatars.githubusercontent.com/u/23740574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TNodeCode", "html_url": "https://github.com/TNodeCode", "followers_url": "https://api.github.com/users/TNodeCode/followers", "following_url": "https://api.github.com/users/TNodeCode/following{/other_user}", "gists_url": "https://api.github.com/users/TNodeCode/gists{/gist_id}", "starred_url": "https://api.github.com/users/TNodeCode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TNodeCode/subscriptions", "organizations_url": "https://api.github.com/users/TNodeCode/orgs", "repos_url": "https://api.github.com/users/TNodeCode/repos", "events_url": "https://api.github.com/users/TNodeCode/events{/privacy}", "received_events_url": "https://api.github.com/users/TNodeCode/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-04-05T10:44:49Z", "updated_at": "2023-04-09T10:02:45Z", "closed_at": "2023-04-09T10:02:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHello community,\r\n\r\nwhen I try to load a dataset from the `torch_geometric.datasets`package I get an error.\r\n\r\nThis is my code:\r\n\r\n```python\r\nfrom torch_geometric.datasets import Planetoid\r\n\r\ndataset = Planetoid(root=\"./data\", name='Cora')\r\n```\r\n\r\nI am using PyTorch version `2.0.0+cu117` and torch_geometric version `2.3.0`\r\n\r\nAnd this is the error I get:\r\n\r\n```\r\nDownloading https://github.com/kimiyoung/planetoid/raw/master/data/ind.cora.x\r\nDownloading https://github.com/kimiyoung/planetoid/raw/master/data/ind.cora.tx\r\nDownloading https://github.com/kimiyoung/planetoid/raw/master/data/ind.cora.allx\r\nDownloading https://github.com/kimiyoung/planetoid/raw/master/data/ind.cora.y\r\nDownloading https://github.com/kimiyoung/planetoid/raw/master/data/ind.cora.ty\r\nDownloading https://github.com/kimiyoung/planetoid/raw/master/data/ind.cora.ally\r\nDownloading https://github.com/kimiyoung/planetoid/raw/master/data/ind.cora.graph\r\nDownloading https://github.com/kimiyoung/planetoid/raw/master/data/ind.cora.test.index\r\nProcessing...\r\n----------------------------------------------------------------\r\nValueError                     Traceback (most recent call last)\r\nInput In [11], in <cell line: 2>()\r\n      1 # Download the 'Cora' dataset and cache it in the local './data' directory\r\n----> 2 dataset = Planetoid(root=\"./data\", name='Cora')\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\torch_geometric\\datasets\\planetoid.py:92, in Planetoid.__init__(self, root, name, split, num_train_per_class, num_val, num_test, transform, pre_transform)\r\n     89 self.split = split.lower()\r\n     90 assert self.split in ['public', 'full', 'geom-gcn', 'random']\r\n---> 92 super().__init__(root, transform, pre_transform)\r\n     93 self.data, self.slices = torch.load(self.processed_paths[0])\r\n     95 if split == 'full':\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\torch_geometric\\data\\in_memory_dataset.py:57, in InMemoryDataset.__init__(self, root, transform, pre_transform, pre_filter, log)\r\n     49 def __init__(\r\n     50     self,\r\n     51     root: Optional[str] = None,\r\n   (...)\r\n     55     log: bool = True,\r\n     56 ):\r\n---> 57     super().__init__(root, transform, pre_transform, pre_filter, log)\r\n     58     self._data = None\r\n     59     self.slices = None\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\torch_geometric\\data\\dataset.py:97, in Dataset.__init__(self, root, transform, pre_transform, pre_filter, log)\r\n     94     self._download()\r\n     96 if self.has_process:\r\n---> 97     self._process()\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\torch_geometric\\data\\dataset.py:230, in Dataset._process(self)\r\n    227     print('Processing...', file=sys.stderr)\r\n    229 makedirs(self.processed_dir)\r\n--> 230 self.process()\r\n    232 path = osp.join(self.processed_dir, 'pre_transform.pt')\r\n    233 torch.save(_repr(self.pre_transform), path)\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\torch_geometric\\datasets\\planetoid.py:150, in Planetoid.process(self)\r\n    149 def process(self):\r\n--> 150     data = read_planetoid_data(self.raw_dir, self.name)\r\n    152     if self.split == 'geom-gcn':\r\n    153         train_masks, val_masks, test_masks = [], [], []\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\torch_geometric\\io\\planetoid.py:21, in read_planetoid_data(folder, prefix)\r\n     19 def read_planetoid_data(folder, prefix):\r\n     20     names = ['x', 'tx', 'allx', 'y', 'ty', 'ally', 'graph', 'test.index']\r\n---> 21     items = [read_file(folder, prefix, name) for name in names]\r\n     22     x, tx, allx, y, ty, ally, graph, test_index = items\r\n     23     train_index = torch.arange(y.size(0), dtype=torch.long)\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\torch_geometric\\io\\planetoid.py:21, in <listcomp>(.0)\r\n     19 def read_planetoid_data(folder, prefix):\r\n     20     names = ['x', 'tx', 'allx', 'y', 'ty', 'ally', 'graph', 'test.index']\r\n---> 21     items = [read_file(folder, prefix, name) for name in names]\r\n     22     x, tx, allx, y, ty, ally, graph, test_index = items\r\n     23     train_index = torch.arange(y.size(0), dtype=torch.long)\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\torch_geometric\\io\\planetoid.py:106, in read_file(folder, prefix, name)\r\n    103     return out\r\n    105 out = out.todense() if hasattr(out, 'todense') else out\r\n--> 106 out = torch.Tensor(out)\r\n    107 return out\r\n\r\nValueError: too many dimensions 'matrix'\r\n```\n\n### Environment\n\n* PyG version: 2.3.0\r\n* PyTorch version: 2.0.0+cu117\r\n* OS: Windows 11\r\n* Python version: 3.10.6\r\n* CUDA/cuDNN version: 11.4\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\ntorch_scatter-2.1.1+pt20cpu\r\ntorch_sparse-0.6.17+pt20cpu\r\ntorch_spline_conv-1.2.2+pt20cpu\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7124/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7116", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7116/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7116/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7116/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7116", "id": 1654072129, "node_id": "I_kwDOBlHMec5ilyNB", "number": 7116, "title": "DataParallel with Multi GPUs doesn't speed up with large graph  data", "user": {"login": "Saibo-creator", "id": 53392976, "node_id": "MDQ6VXNlcjUzMzkyOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/53392976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Saibo-creator", "html_url": "https://github.com/Saibo-creator", "followers_url": "https://api.github.com/users/Saibo-creator/followers", "following_url": "https://api.github.com/users/Saibo-creator/following{/other_user}", "gists_url": "https://api.github.com/users/Saibo-creator/gists{/gist_id}", "starred_url": "https://api.github.com/users/Saibo-creator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Saibo-creator/subscriptions", "organizations_url": "https://api.github.com/users/Saibo-creator/orgs", "repos_url": "https://api.github.com/users/Saibo-creator/repos", "events_url": "https://api.github.com/users/Saibo-creator/events{/privacy}", "received_events_url": "https://api.github.com/users/Saibo-creator/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-04-04T15:03:57Z", "updated_at": "2023-04-21T11:33:56Z", "closed_at": "2023-04-21T11:33:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nHello,\r\n    I am trying to use DataParallel to speed up the training process with large graph data.\r\n    The large graph data here means a list of graphs, each with roughly 10,000 nodes and 100,000 edges.\r\n    I am using HANConv to train the model because the graphs are heterogeneous.\r\n    I tried to use DataParallel to speed up the training process with multiple GPUs.\r\n    However, I found that the training process only shows a very small speedup, e.g., 1.2x with 8 GPUs.\r\n     I am using PyG 2.2.0 and PyTorch 1.12.1+cu116. \r\n\r\n     Below is a minimal example to reproduce the problem.\r\n    On my machine, which is equipped with 8 NVIDIA GeForce GTX TITAN X, running the code below:\r\n- With 1 GPU, the forward-backward pass takes 0.8s, the epoch time is 41s, `python simulate_clean.py --num_gpu 1`, gpu utilization ~ 50%\r\n- With 2 GPUs, the forward-backward pass takes 1.1s, the epoch time is 32s. `python simulate_clean.py --num_gpu 2`\r\n- With 4 GPUs, the forward-backward pass takes 2.1s, the epoch time is 32s. `python simulate_clean.py --num_gpu 4`\r\n- With 6 GPUs, the forward-backward pass takes 4.3s, the epoch time is 45s. `python simulate_clean.py --num_gpu 6`, gpu utilization ~ 20% for each GPU\r\n\r\n    Per_device_bs = 2 for all the experiments, so the batch size is 2, 4, 8, 12 for 1, 2, 4, 6 GPUs respectively.\r\n\r\nMy understanding is that the forward-backward pass should be faster with more GPUs,if the training is compute-bound.\r\nBut in this case, the forward-backward pass is actually slower with more GPUs so the bound must be somewhere else.\r\nMy guess is that the transfer of data between GPUs is the bottleneck. But I am not sure if this is the case.\r\nThe graphs are represented as a list of HeteroData, and each of them is roughly several MB in size. \r\n\r\nIf indeed is the case, how could we overcome this problem?\r\n\uff08Is the slowness cause by the HeteroData representation \uff1f)\r\n   \r\n(I guess in computer vision, the image data could also be large, and we can use DataParallel to speed up the training process. How is that possible?)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n```python\r\nimport os.path as osp\r\nimport time\r\nfrom typing import List\r\n\r\nimport torch\r\nimport torch.nn.functional as F\r\nimport yaml\r\nfrom torch_geometric.data import Batch\r\nfrom torch_geometric.loader import DataListLoader\r\nfrom torch_geometric.nn import DataParallel\r\nfrom torch_geometric.nn.conv import HANConv\r\nfrom torch_geometric.utils.unbatch import unbatch\r\nfrom tqdm import tqdm\r\n\r\nfrom fake_dataset import FakeHeteroDataset\r\n\r\n\r\nclass Net(torch.nn.Module):\r\n    def __init__(self, n_layer, metadata, num_classes):\r\n        super().__init__()\r\n        self.convs = torch.nn.ModuleList()\r\n        for i in range(n_layer):\r\n            self.convs.append(HANConv(in_channels=128, out_channels=128,\r\n                                      heads=4,\r\n                                      metadata=metadata))\r\n        self.lin_dict = torch.nn.ModuleDict()\r\n        self.lin = torch.nn.Linear(128, num_classes)\r\n\r\n    def forward(self, graph):\r\n\r\n        if isinstance(graph, List):\r\n\r\n            graph = Batch.from_data_list(graph)\r\n        else:\r\n            graph = graph\r\n\r\n        for i, conv in enumerate(self.convs):\r\n            nodes_repr_dict = conv(graph.x_dict, graph.edge_index_dict, graph.edge_attr_dict)[0]\r\n            for k in nodes_repr_dict.keys():\r\n                graph.x_dict[k] = nodes_repr_dict[k]\r\n\r\n        x_tuples = unbatch(graph[\"v0\"][\"x\"], graph[\"v0\"][\"batch\"])\r\n        x_select = torch.stack([x[0] for x in x_tuples])\r\n        return F.log_softmax(self.lin(x_select), dim=1)\r\n\r\n\r\ndef main(num_gpu=1, device_ids=None):\r\n\r\n    large_graph_dataset = FakeHeteroDataset(num_graphs=100,\r\n                                            num_node_types=3,\r\n                                            num_edge_types=152,\r\n                                            avg_num_nodes=2700,\r\n                                            avg_degree=1,\r\n                                            avg_num_channels=128,\r\n                                            edge_dim=64,\r\n                                            num_classes=10,\r\n                                            fix_num_channels=True)\r\n\r\n    per_gpu_bs = 2\r\n    bs = per_gpu_bs * num_gpu\r\n\r\n    loader = DataListLoader(large_graph_dataset, batch_size=bs, shuffle=True)\r\n\r\n    metadata = large_graph_dataset.data.metadata()\r\n    model = Net(n_layer=4, metadata=metadata, num_classes=large_graph_dataset.num_classes)\r\n\r\n    device = torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')\r\n    if device.type == 'cuda':\r\n        print(f\"Let's use {num_gpu} GPUs!\")\r\n        device_ids = list(range(num_gpu)) if device_ids is None else device_ids\r\n        model = DataParallel(model, device_ids=device_ids)\r\n        model.to(device_ids[0])\r\n    else:\r\n        model = model.to(device)\r\n    optimizer = torch.optim.Adam(model.parameters(), lr=0.01)\r\n\r\n    for data_list in tqdm(loader):\r\n        optimizer.zero_grad()\r\n        start = time.time()\r\n        output = model(data_list)\r\n        end = time.time()\r\n        print(f'Forward pass time: {end - start}')\r\n        y = torch.cat([data.y for data in data_list]).to(output.device)\r\n        loss = F.nll_loss(output, y)\r\n        loss.backward()\r\n        print(f'Backward pass time: {time.time() - end}')\r\n        # optimizer.step()\r\n\r\n\r\nif __name__ == '__main__':\r\n    import argparse\r\n\r\n    parser = argparse.ArgumentParser()\r\n    parser.add_argument('--num_gpu', type=int, default=1)\r\n    parser.add_argument('--device_ids', type=int, nargs='+', default=None)\r\n    args = parser.parse_args()\r\n\r\n    main(num_gpu=args.num_gpu, device_ids=args.device_ids)\r\n```\r\n\r\n\r\n\r\nYou will also need a python script named `fake_dataset.py`, where I slightly modified the default `FakeHeteroDataset` from PyG to support constant number of channel across different node_types. You find it here\uff1ahttps://gist.github.com/Saibo-creator/7d80681828123721be20b7f37935d44e \r\n\r\n\r\n### Environment\r\n\r\n* PyG version: 2.2.0\r\n* PyTorch version: 1.12.1\r\n* OS: Linux\r\n* Python version: 3.8\r\n* CUDA/cuDNN version: cu116\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip \r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): 2.1.0+pt112cu116\r\n\r\n```SHELL\r\nCUDA=cu116\r\nTORCH=1.12.0\r\npip install pyg-lib torch-scatter torch-sparse -f https://data.pyg.org/whl/torch-${TORCH}+${CUDA}.html\r\npip install torch-geometric\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7116/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7112", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7112/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7112/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7112/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7112", "id": 1652888863, "node_id": "I_kwDOBlHMec5ihRUf", "number": 7112, "title": "`from_networkx` calls the constructor of the `nx.Graph` again", "user": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, {"login": "m4ahmadi", "id": 7686918, "node_id": "MDQ6VXNlcjc2ODY5MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7686918?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m4ahmadi", "html_url": "https://github.com/m4ahmadi", "followers_url": "https://api.github.com/users/m4ahmadi/followers", "following_url": "https://api.github.com/users/m4ahmadi/following{/other_user}", "gists_url": "https://api.github.com/users/m4ahmadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/m4ahmadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m4ahmadi/subscriptions", "organizations_url": "https://api.github.com/users/m4ahmadi/orgs", "repos_url": "https://api.github.com/users/m4ahmadi/repos", "events_url": "https://api.github.com/users/m4ahmadi/events{/privacy}", "received_events_url": "https://api.github.com/users/m4ahmadi/received_events", "type": "User", "site_admin": false}, {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2023-04-03T23:04:18Z", "updated_at": "2023-04-09T22:59:58Z", "closed_at": "2023-04-09T22:59:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nbrought to my attention by [mahdieh.ahmadi88@gmail.com](mailto:mahdieh.ahmadi88@gmail.com) via slack\r\n```\r\nGround Truth NetworkX num_edges= 72\r\nnum_edges after convert to PyG= 144\r\nPyG to_string= Data(edge_index=[2, 144], max_pp=[52], remaining_pp=[52], pp_req=[52], max_ram=[52], remaining_ram=[52], ram_req=[52], tier=[52], is_core=[52], edge_tier=[144], max_bw=[144], remaining_bw=[144], delay=[144], bw_req=[144], num_nodes=52)\r\nNetworkX to_string= MetroNetwork with 52 nodes and 72 edges\r\n```\r\nI made the repro below based on his code snippets:\r\n```\r\nimport networkx as nx\r\nfrom torch_geometric.utils import from_networkx\r\nclass MetroNetwork(nx.Graph):\r\n    def __init__(self, debug_mode=False, testing=False, **attr):\r\n        super().__init__(**attr)\r\n        self.num_access = None\r\n        self.num_main = None\r\n        self.num_core = None\r\n        self.num_nodes = None\r\n        self.num_edges = None\r\n        self.max_pp = None\r\n        self.max_ram = None\r\n        self.max_bw = None\r\n        self.max_link_delay = None\r\n        self.max_placement_delay = None\r\n        self.create_network4()\r\n    def create_network4(self):\r\n        num_access = 44\r\n        num_main = 6\r\n        num_core = 2\r\n        self.num_access = num_access\r\n        self.num_main = num_main\r\n        self.num_core = num_core\r\n        self.num_nodes = num_access + num_main + num_core\r\n\r\n        tier_0_node_attributes = {'max_pp': 4000., 'remaining_pp': 4000., 'pp_req': 0,\r\n                                  'max_ram': 100., 'remaining_ram': 100., 'ram_req': 0,\r\n                                  'tier': 0, 'is_core': 0}\r\n        tier_1_node_attributes = {'max_pp': 6000., 'remaining_pp': 6000., 'pp_req': 0,\r\n                                  'max_ram': 150., 'remaining_ram': 150., 'ram_req': 0,\r\n                                  'tier': 1, 'is_core': 1}\r\n        tier_2_node_attributes = {'max_pp': 12000., 'remaining_pp': 12000., 'pp_req': 0,\r\n                                  'max_ram': 300., 'remaining_ram': 300., 'ram_req': 0,\r\n                                  'tier': 2, 'is_core': 1}\r\n\r\n        node_idx = 0\r\n        node_list = [(node_idx + i, tier_0_node_attributes) for i in range(num_core)]\r\n        node_idx += num_core\r\n        node_list.extend([(node_idx + i, tier_1_node_attributes) for i in range(num_main)])\r\n        node_idx += num_main\r\n        node_list.extend([(node_idx + i, tier_2_node_attributes) for i in range(num_access)])\r\n        self.add_nodes_from(node_list)\r\n\r\n        tier_0_link_attributes = {'tier': 0, 'max_bw': 2000., 'remaining_bw': 2000., 'delay': 1.8, 'bw_req': 0}\r\n        tier_1_link_attributes = {'tier': 1, 'max_bw': 3000., 'remaining_bw': 3000., 'delay': 4.8, 'bw_req': 0}\r\n\r\n        edge_list = [(0, 7, tier_1_link_attributes),\r\n                     (0, 2, tier_1_link_attributes),\r\n                     (0, 3, tier_1_link_attributes),\r\n                     (0, 27, tier_0_link_attributes),\r\n                     (0, 8, tier_0_link_attributes),\r\n                     (0, 44, tier_0_link_attributes),\r\n                     (1, 5, tier_1_link_attributes),\r\n                     (1, 7, tier_1_link_attributes),\r\n                     (1, 30, tier_0_link_attributes),\r\n                     (1, 28, tier_0_link_attributes),\r\n                     (1, 11, tier_0_link_attributes),\r\n                     (1, 50, tier_0_link_attributes),\r\n                     (1, 22, tier_0_link_attributes),\r\n                     (2, 4, tier_1_link_attributes),\r\n                     (2, 37, tier_0_link_attributes),\r\n                     (2, 24, tier_0_link_attributes),\r\n                     (3, 4, tier_1_link_attributes),\r\n                     (3, 7, tier_1_link_attributes),\r\n                     (3, 5, tier_1_link_attributes),\r\n                     (3, 21, tier_0_link_attributes),\r\n                     (3, 20, tier_0_link_attributes),\r\n                     (3, 49, tier_0_link_attributes),\r\n                     (4, 18, tier_0_link_attributes),\r\n                     (4, 10, tier_0_link_attributes),\r\n                     (5, 19, tier_0_link_attributes),\r\n                     (5, 43, tier_0_link_attributes),\r\n                     (5, 11, tier_0_link_attributes),\r\n                     (5, 6, tier_1_link_attributes),\r\n                     (7, 32, tier_0_link_attributes),\r\n                     (7, 33, tier_0_link_attributes),\r\n                     (7, 25, tier_0_link_attributes),\r\n                     (7, 17, tier_0_link_attributes),\r\n                     (8, 44, tier_0_link_attributes),\r\n                     (8, 14, tier_0_link_attributes),\r\n                     (9, 10, tier_0_link_attributes),\r\n                     (10, 40, tier_0_link_attributes),\r\n                     (11, 34, tier_0_link_attributes),\r\n                     (11, 48, tier_0_link_attributes),\r\n                     (12, 39, tier_0_link_attributes),\r\n                     (12, 51, tier_0_link_attributes),\r\n                     (13, 23, tier_0_link_attributes),\r\n                     (13, 27, tier_0_link_attributes),\r\n                     (14, 21, tier_0_link_attributes),\r\n                     (14, 16, tier_0_link_attributes),\r\n                     (14, 42, tier_0_link_attributes),\r\n                     (15, 20, tier_0_link_attributes),\r\n                     (15, 50, tier_0_link_attributes),\r\n                     (15, 51, tier_0_link_attributes),\r\n                     (16, 42, tier_0_link_attributes),\r\n                     (16, 44, tier_0_link_attributes),\r\n                     (17, 42, tier_0_link_attributes),\r\n                     (17, 39, tier_0_link_attributes),\r\n                     (18, 40, tier_0_link_attributes),\r\n                     (22, 41, tier_0_link_attributes),\r\n                     (23, 38, tier_0_link_attributes),\r\n                     (24, 38, tier_0_link_attributes),\r\n                     (24, 49, tier_0_link_attributes),\r\n                     (25, 51, tier_0_link_attributes),\r\n                     (26, 47, tier_0_link_attributes),\r\n                     (28, 30, tier_0_link_attributes),\r\n                     (29, 31, tier_0_link_attributes),\r\n                     (29, 41, tier_0_link_attributes),\r\n                     (31, 34, tier_0_link_attributes),\r\n                     (32, 33, tier_0_link_attributes),\r\n                     (35, 40, tier_0_link_attributes),\r\n                     (36, 37, tier_0_link_attributes),\r\n                     (37, 40, tier_0_link_attributes),\r\n                     (39, 42, tier_0_link_attributes),\r\n                     (43, 47, tier_0_link_attributes),\r\n                     (45, 46, tier_0_link_attributes),\r\n                     (45, 47, tier_0_link_attributes),\r\n                     (46, 48, tier_0_link_attributes),\r\n                     ]\r\n\r\n        # Add edges with networkx format\r\n        self.add_edges_from(edge_list)\r\n        self.num_edges = len(edge_list)\r\n\r\n        self.max_pp = 12000\r\n        self.max_ram = 300\r\n        self.max_bw = 5000\r\n        self.max_link_delay = 4.8\r\n        self.max_placement_delay = 30\r\nnetwork = MetroNetwork()\r\nprint('Ground Truth NetworkX num_edges=', network.num_edges)\r\nfrom_netx = from_networkx(network)\r\nprint('num_edges after convert to PyG=', from_netx.num_edges)\r\nprint(\"PyG to_string=\", from_netx)\r\nprint(\"NetworkX to_string=\", network)\r\n```\r\n\r\n### Environment\r\n\r\n* PyG version:latest\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7112/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7109", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7109/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7109/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7109/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7109", "id": 1652075910, "node_id": "PR_kwDOBlHMec5NfY-n", "number": 7109, "title": "Update datamodule.py", "user": {"login": "JakubPietrakIntel", "id": 97102979, "node_id": "U_kgDOBcmsgw", "avatar_url": "https://avatars.githubusercontent.com/u/97102979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakubPietrakIntel", "html_url": "https://github.com/JakubPietrakIntel", "followers_url": "https://api.github.com/users/JakubPietrakIntel/followers", "following_url": "https://api.github.com/users/JakubPietrakIntel/following{/other_user}", "gists_url": "https://api.github.com/users/JakubPietrakIntel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakubPietrakIntel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakubPietrakIntel/subscriptions", "organizations_url": "https://api.github.com/users/JakubPietrakIntel/orgs", "repos_url": "https://api.github.com/users/JakubPietrakIntel/repos", "events_url": "https://api.github.com/users/JakubPietrakIntel/events{/privacy}", "received_events_url": "https://api.github.com/users/JakubPietrakIntel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "JakubPietrakIntel", "id": 97102979, "node_id": "U_kgDOBcmsgw", "avatar_url": "https://avatars.githubusercontent.com/u/97102979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakubPietrakIntel", "html_url": "https://github.com/JakubPietrakIntel", "followers_url": "https://api.github.com/users/JakubPietrakIntel/followers", "following_url": "https://api.github.com/users/JakubPietrakIntel/following{/other_user}", "gists_url": "https://api.github.com/users/JakubPietrakIntel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakubPietrakIntel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakubPietrakIntel/subscriptions", "organizations_url": "https://api.github.com/users/JakubPietrakIntel/orgs", "repos_url": "https://api.github.com/users/JakubPietrakIntel/repos", "events_url": "https://api.github.com/users/JakubPietrakIntel/events{/privacy}", "received_events_url": "https://api.github.com/users/JakubPietrakIntel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JakubPietrakIntel", "id": 97102979, "node_id": "U_kgDOBcmsgw", "avatar_url": "https://avatars.githubusercontent.com/u/97102979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakubPietrakIntel", "html_url": "https://github.com/JakubPietrakIntel", "followers_url": "https://api.github.com/users/JakubPietrakIntel/followers", "following_url": "https://api.github.com/users/JakubPietrakIntel/following{/other_user}", "gists_url": "https://api.github.com/users/JakubPietrakIntel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakubPietrakIntel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakubPietrakIntel/subscriptions", "organizations_url": "https://api.github.com/users/JakubPietrakIntel/orgs", "repos_url": "https://api.github.com/users/JakubPietrakIntel/repos", "events_url": "https://api.github.com/users/JakubPietrakIntel/events{/privacy}", "received_events_url": "https://api.github.com/users/JakubPietrakIntel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-04-03T13:28:41Z", "updated_at": "2023-04-03T14:02:01Z", "closed_at": "2023-04-03T14:02:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7109", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7109", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7109.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7109.patch", "merged_at": "2023-04-03T14:01:59Z"}, "body": "Bugfix for datamodule.py\r\nShouldn't line 102 say `kwargs.pop('batch_sampler', None)` ?", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7109/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7108", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7108/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7108/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7108/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7108", "id": 1651564066, "node_id": "I_kwDOBlHMec5icN4i", "number": 7108, "title": "Error in modifying GCN code to ddp", "user": {"login": "BearBiscuit05", "id": 55008898, "node_id": "MDQ6VXNlcjU1MDA4ODk4", "avatar_url": "https://avatars.githubusercontent.com/u/55008898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BearBiscuit05", "html_url": "https://github.com/BearBiscuit05", "followers_url": "https://api.github.com/users/BearBiscuit05/followers", "following_url": "https://api.github.com/users/BearBiscuit05/following{/other_user}", "gists_url": "https://api.github.com/users/BearBiscuit05/gists{/gist_id}", "starred_url": "https://api.github.com/users/BearBiscuit05/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BearBiscuit05/subscriptions", "organizations_url": "https://api.github.com/users/BearBiscuit05/orgs", "repos_url": "https://api.github.com/users/BearBiscuit05/repos", "events_url": "https://api.github.com/users/BearBiscuit05/events{/privacy}", "received_events_url": "https://api.github.com/users/BearBiscuit05/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-04-03T08:10:34Z", "updated_at": "2023-04-04T06:18:21Z", "closed_at": "2023-04-04T06:14:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nI simply modified the code of GCN to multi-GPU computing mode. The specific code is as follows\r\n\r\n```\r\nimport copy\r\nimport os\r\n\r\nimport torch\r\nimport torch.distributed as dist\r\nimport torch.multiprocessing as mp\r\nimport torch.nn.functional as F\r\nfrom torch import Tensor\r\nfrom torch.nn.parallel import DistributedDataParallel\r\nfrom tqdm import tqdm\r\nfrom torch_geometric.loader import DataLoader\r\nfrom torch_geometric.datasets import Reddit\r\nfrom torch_geometric.loader import NeighborLoader\r\nfrom torch_geometric.nn import SAGEConv, GCNConv\r\nfrom torch.utils.data.distributed import DistributedSampler\r\nfrom ogb.graphproppred import PygGraphPropPredDataset,Evaluator\r\n\r\nclass GCN(torch.nn.Module):\r\n    def __init__(self, in_channels, hidden_channels, out_channels):\r\n        super().__init__()\r\n        self.conv1 = GCNConv(in_channels, hidden_channels, cached=True)\r\n        self.conv2 = GCNConv(hidden_channels, out_channels, cached=True)\r\n\r\n    def forward(self, data):\r\n        x, edge_index = data.x, data.edge_index\r\n        x = x.to(torch.float)\r\n        x = self.conv1(x, edge_index)\r\n        x = F.relu(x)\r\n        x = F.dropout(x, training=self.training)\r\n        x = self.conv2(x, edge_index)\r\n        return F.log_softmax(x, dim=1)\r\n...\r\n\r\ndef run(rank, world_size, dataset):\r\n    os.environ['MASTER_ADDR'] = 'localhost'\r\n    os.environ['MASTER_PORT'] = '12355'\r\n    dist.init_process_group('nccl', rank=rank, world_size=world_size)\r\n    \r\n    split_idx =dataset.get_idx_split()\r\n    \r\n    train_dataset = dataset[split_idx[\"train\"]]\r\n    train_sampler = DistributedSampler(train_dataset, num_replicas=world_size,rank=rank)\r\n    train_loader = DataLoader(train_dataset, batch_size=128,sampler=train_sampler)\r\n\r\n    torch.manual_seed(12345)\r\n    model = GCN(dataset.num_features, 256, dataset.num_classes).to(rank)\r\n    model = DistributedDataParallel(model, device_ids=[rank])\r\n    optimizer = torch.optim.Adam(model.parameters(), lr=0.001)\r\n    for epoch in range(1, 21):\r\n        model.train()\r\n        for data in train_loader:\r\n            data = data.to(rank)\r\n            optimizer.zero_grad()\r\n            output = model(data)\r\n            loss = F.cross_entropy(output[0:len(data)], data.y.reshape(-1))\r\n            loss.backward()\r\n            optimizer.step()\r\n\r\n        dist.barrier()\r\n\r\n        if rank == 0:\r\n            print(f'Epoch: {epoch:02d}, Loss: {loss:.4f}')\r\n\r\n    dist.destroy_process_group()\r\n\r\nif __name__ == '__main__':\r\n    dataset =PygGraphPropPredDataset(name='ogbg-molhiv')\r\n    world_size = torch.cuda.device_count()\r\n    print('Let\\'s use', world_size, 'GPUs!')\r\n    mp.spawn(run, args=(world_size, dataset), nprocs=world_size, join=True)\r\n\r\n\r\n```\r\nBut this code produces an error while running, I'm not sure where my mistake is, I need some help.\r\nError is here:\r\n```\r\nRuntimeError: CUDA error: device-side assert triggered\r\nCUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.\r\nFor debugging consider passing CUDA_LAUNCH_BLOCKING=1.\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7108/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7107", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7107/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7107/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7107/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7107", "id": 1651471824, "node_id": "PR_kwDOBlHMec5NdWus", "number": 7107, "title": "Fix `Dimenet` with `torch.int32` as an index Tensor for `Dataset`", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-04-03T07:07:00Z", "updated_at": "2023-04-03T07:12:56Z", "closed_at": "2023-04-03T07:12:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7107", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7107", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7107.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7107.patch", "merged_at": "2023-04-03T07:12:55Z"}, "body": "Fix #7099", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7107/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7104", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7104/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7104/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7104/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7104", "id": 1650961277, "node_id": "PR_kwDOBlHMec5Nbt3Z", "number": 7104, "title": "Fix `data.num_edges` for `torch.sparse.Tensor`", "user": {"login": "sisaman", "id": 3238345, "node_id": "MDQ6VXNlcjMyMzgzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/3238345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sisaman", "html_url": "https://github.com/sisaman", "followers_url": "https://api.github.com/users/sisaman/followers", "following_url": "https://api.github.com/users/sisaman/following{/other_user}", "gists_url": "https://api.github.com/users/sisaman/gists{/gist_id}", "starred_url": "https://api.github.com/users/sisaman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sisaman/subscriptions", "organizations_url": "https://api.github.com/users/sisaman/orgs", "repos_url": "https://api.github.com/users/sisaman/repos", "events_url": "https://api.github.com/users/sisaman/events{/privacy}", "received_events_url": "https://api.github.com/users/sisaman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "sisaman", "id": 3238345, "node_id": "MDQ6VXNlcjMyMzgzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/3238345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sisaman", "html_url": "https://github.com/sisaman", "followers_url": "https://api.github.com/users/sisaman/followers", "following_url": "https://api.github.com/users/sisaman/following{/other_user}", "gists_url": "https://api.github.com/users/sisaman/gists{/gist_id}", "starred_url": "https://api.github.com/users/sisaman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sisaman/subscriptions", "organizations_url": "https://api.github.com/users/sisaman/orgs", "repos_url": "https://api.github.com/users/sisaman/repos", "events_url": "https://api.github.com/users/sisaman/events{/privacy}", "received_events_url": "https://api.github.com/users/sisaman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sisaman", "id": 3238345, "node_id": "MDQ6VXNlcjMyMzgzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/3238345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sisaman", "html_url": "https://github.com/sisaman", "followers_url": "https://api.github.com/users/sisaman/followers", "following_url": "https://api.github.com/users/sisaman/following{/other_user}", "gists_url": "https://api.github.com/users/sisaman/gists{/gist_id}", "starred_url": "https://api.github.com/users/sisaman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sisaman/subscriptions", "organizations_url": "https://api.github.com/users/sisaman/orgs", "repos_url": "https://api.github.com/users/sisaman/repos", "events_url": "https://api.github.com/users/sisaman/events{/privacy}", "received_events_url": "https://api.github.com/users/sisaman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-04-02T14:06:44Z", "updated_at": "2023-04-03T06:55:02Z", "closed_at": "2023-04-03T06:55:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7104", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7104", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7104.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7104.patch", "merged_at": "2023-04-03T06:55:01Z"}, "body": "Fixes zero `num_edges` when using native PyTorch sparse tensor (#7103).", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7104/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7103", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7103/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7103/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7103/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7103", "id": 1650958034, "node_id": "I_kwDOBlHMec5iZ57S", "number": 7103, "title": "`data.num_edges` is 0 when using native PyTorch sparse tensor", "user": {"login": "sisaman", "id": 3238345, "node_id": "MDQ6VXNlcjMyMzgzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/3238345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sisaman", "html_url": "https://github.com/sisaman", "followers_url": "https://api.github.com/users/sisaman/followers", "following_url": "https://api.github.com/users/sisaman/following{/other_user}", "gists_url": "https://api.github.com/users/sisaman/gists{/gist_id}", "starred_url": "https://api.github.com/users/sisaman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sisaman/subscriptions", "organizations_url": "https://api.github.com/users/sisaman/orgs", "repos_url": "https://api.github.com/users/sisaman/repos", "events_url": "https://api.github.com/users/sisaman/events{/privacy}", "received_events_url": "https://api.github.com/users/sisaman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-04-02T13:57:28Z", "updated_at": "2023-04-05T16:11:13Z", "closed_at": "2023-04-05T16:11:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhen using the native PyTorch sparse tensor for representing the adjacency matrix, the number of edges reported by the `Data` object is always zero. The following code reproduces the issue:\r\n\r\n```python\r\nimport torch_geometric.transforms as T\r\nfrom torch_geometric.datasets import Planetoid\r\n\r\ntransform = T.ToSparseTensor(layout=torch.sparse_csr)\r\ndataset = Planetoid(\"Planetoid\", name=\"Cora\", transform=transform)\r\ndata = dataset[0]\r\nprint(data.num_edges)\r\n```\n\n### Environment\n\n* PyG version: 2.3.0\r\n* PyTorch version: 2.0.0\r\n* OS: Linux (Debian)\r\n* Python version: 3.10.9\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7103/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7099", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7099/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7099/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7099/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7099", "id": 1650490063, "node_id": "I_kwDOBlHMec5iYHrP", "number": 7099, "title": "IndexError when using dimnet plus plus with pretrained on qm9 dataset (just running the example provided by PYG)", "user": {"login": "AmgadAbdallah", "id": 53411395, "node_id": "MDQ6VXNlcjUzNDExMzk1", "avatar_url": "https://avatars.githubusercontent.com/u/53411395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AmgadAbdallah", "html_url": "https://github.com/AmgadAbdallah", "followers_url": "https://api.github.com/users/AmgadAbdallah/followers", "following_url": "https://api.github.com/users/AmgadAbdallah/following{/other_user}", "gists_url": "https://api.github.com/users/AmgadAbdallah/gists{/gist_id}", "starred_url": "https://api.github.com/users/AmgadAbdallah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AmgadAbdallah/subscriptions", "organizations_url": "https://api.github.com/users/AmgadAbdallah/orgs", "repos_url": "https://api.github.com/users/AmgadAbdallah/repos", "events_url": "https://api.github.com/users/AmgadAbdallah/events{/privacy}", "received_events_url": "https://api.github.com/users/AmgadAbdallah/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-04-01T14:08:59Z", "updated_at": "2023-04-04T21:12:29Z", "closed_at": "2023-04-03T07:12:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI was trying to run the example provided by PYG using dimnet plus plus pretrained on qm9 dataset, the lik for the example: https://github.com/pyg-team/pytorch_geometric/blob/master/examples/qm9_pretrained_dimenet.py\r\n\r\nI didn't change anything in the code, yet it gave me this error:\r\nIndexError: Only slices (':'), list, tuples, torch.tensor and np.ndarray of dtype long or bool are valid indices (got 'Tensor')\r\n\n\n### Environment\n\n* PyG version: 2.3.0\r\n* PyTorch version: 2.0.0+cpu\r\n* OS: Windows-10-10.0.19045-SP0\r\n* Python version: 3.10\r\n* CUDA/cuDNN version: N/A\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7099/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7095", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7095/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7095/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7095/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7095", "id": 1650352815, "node_id": "PR_kwDOBlHMec5NZ0I3", "number": 7095, "title": "Fix `atol` precision tests", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-04-01T07:56:48Z", "updated_at": "2023-04-01T08:05:49Z", "closed_at": "2023-04-01T08:05:48Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7095", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7095", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7095.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7095.patch", "merged_at": "2023-04-01T08:05:48Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7095/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7094", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7094/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7094/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7094/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7094", "id": 1650296688, "node_id": "I_kwDOBlHMec5iXYdw", "number": 7094, "title": "About custom transforms", "user": {"login": "kou18n", "id": 64201392, "node_id": "MDQ6VXNlcjY0MjAxMzky", "avatar_url": "https://avatars.githubusercontent.com/u/64201392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kou18n", "html_url": "https://github.com/kou18n", "followers_url": "https://api.github.com/users/kou18n/followers", "following_url": "https://api.github.com/users/kou18n/following{/other_user}", "gists_url": "https://api.github.com/users/kou18n/gists{/gist_id}", "starred_url": "https://api.github.com/users/kou18n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kou18n/subscriptions", "organizations_url": "https://api.github.com/users/kou18n/orgs", "repos_url": "https://api.github.com/users/kou18n/repos", "events_url": "https://api.github.com/users/kou18n/events{/privacy}", "received_events_url": "https://api.github.com/users/kou18n/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-04-01T04:58:15Z", "updated_at": "2023-04-15T07:32:11Z", "closed_at": "2023-04-15T07:32:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nI wrote a custom transforms, and apply it to dataset, but when I list the dataset object it's very time-consuming.\r\nNormally, list the dataset object is very fast.\r\nCould you help me check my code?\r\nIs there a better way to increase the speed?\r\n\r\nThank you.\r\n\r\n```python\r\nimport torch\r\nimport networkx as nx\r\nfrom torch_geometric.data import Data\r\nfrom torch_geometric.data.datapipes import functional_transform\r\nfrom torch_geometric.transforms import BaseTransform\r\nfrom torch_geometric.utils import degree, to_networkx\r\n\r\n\r\n@functional_transform('distance_to_nodes')\r\nclass DistanceToNodes(BaseTransform):\r\n    r\"\"\"Distance to nodes\r\n    \"\"\"\r\n\r\n    def __init__(self):\r\n        from torch_geometric.nn.aggr.fused import FusedAggregation\r\n        self.aggr = FusedAggregation(['sum', 'min', 'max', 'mean', 'std'])\r\n\r\n    def __call__(self, data: Data) -> Data:\r\n        xs = self.bfs_distances(data)\r\n\r\n        if data.x is not None:\r\n            data.x = data.x.view(-1, 1) if data.x.dim() == 1 else data.x\r\n            data.x = torch.cat([data.x] + xs, dim=-1)\r\n        else:\r\n            data.x = torch.cat(xs, dim=-1)\r\n\r\n        return data\r\n    \r\n    def bfs_distances(self, data: Data):\r\n        graph = to_networkx(data)\r\n        num_nodes = graph.number_of_nodes()\r\n        lengths = []\r\n        indices = []\r\n\r\n        for node in range(num_nodes):\r\n            shortest_path_lengths = nx.single_source_shortest_path_length(\r\n                graph, node)\r\n            node_lengths = torch.tensor(\r\n                [v for k, v in shortest_path_lengths.items() if v != 0])\r\n            lengths.append(node_lengths)\r\n            indices.append(torch.full((node_lengths.size()[0], ), node))\r\n\r\n        length_tensor = torch.cat(lengths, dim=0).reshape(-1, 1)\r\n        index_tensor = torch.cat(indices, dim=0)\r\n\r\n        return self.aggr(length_tensor, index_tensor, dim_size=num_nodes)\r\n```` \r\n\r\n\r\n```python\r\nimport torch\r\nfrom torch_geometric.datasets import MalNetTiny\r\nimport torch_geometric.transforms as T\r\nfrom distance_features.distance_to_nodes import DistanceToNodes\r\n\r\ntransform = T.Compose([ T.RemoveIsolatedNodes() ,T.AddSelfLoops(), DistanceToLeaves()])\r\ndataset = MalNetTiny(root='./data/MalNetTiny', transform=transform)\r\n\r\n# very time-consuming\r\nlist(dataset)\r\n\r\n\r\n```\r\n\r\n\r\n### Environment\r\n\r\n_No response_", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7094/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7088", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7088/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7088/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7088/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7088", "id": 1649053689, "node_id": "I_kwDOBlHMec5iSo_5", "number": 7088, "title": "RuntimeError: Sparse CSR tensors do not have is_contiguous", "user": {"login": "kou18n", "id": 64201392, "node_id": "MDQ6VXNlcjY0MjAxMzky", "avatar_url": "https://avatars.githubusercontent.com/u/64201392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kou18n", "html_url": "https://github.com/kou18n", "followers_url": "https://api.github.com/users/kou18n/followers", "following_url": "https://api.github.com/users/kou18n/following{/other_user}", "gists_url": "https://api.github.com/users/kou18n/gists{/gist_id}", "starred_url": "https://api.github.com/users/kou18n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kou18n/subscriptions", "organizations_url": "https://api.github.com/users/kou18n/orgs", "repos_url": "https://api.github.com/users/kou18n/repos", "events_url": "https://api.github.com/users/kou18n/events{/privacy}", "received_events_url": "https://api.github.com/users/kou18n/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-03-31T09:50:57Z", "updated_at": "2023-03-31T10:43:06Z", "closed_at": "2023-03-31T10:43:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI used python 3.9 and PyTorch 1.13.*  the following code works well, and can make deterministic on the GPU.\r\nBut when I upgrade the PyTorch to 2.0 can not work.\r\n\r\n\r\n```python\r\ndef train():\r\n    model.train()\r\n\r\n    total_loss = 0\r\n    for data in train_loader:\r\n        data = data.to(device)\r\n        optimizer.zero_grad()\r\n\r\n        out = model(data.x, data.adj_t, data.ptr)\r\n\r\n        loss = F.cross_entropy(out, data.y)\r\n        loss.backward()\r\n        optimizer.step()\r\n        total_loss += float(loss) * data.num_graphs\r\n    return total_loss / len(train_loader.dataset)\r\n```\r\n\r\n```\r\n    for batch in train_loader:\r\n  File \"/home/xxxx/miniconda3/envs/malnet/lib/python3.10/site-packages/torch/utils/data/dataloader.py\", line 634, in __next__\r\n    data = self._next_data()\r\n  File \"/home/xxxx/miniconda3/envs/malnet/lib/python3.10/site-packages/torch/utils/data/dataloader.py\", line 678, in _next_data\r\n    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration\r\n  File \"/home/xxxx/miniconda3/envs/malnet/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py\", line 54, in fetch\r\n    return self.collate_fn(data)\r\n  File \"/home/xxxx/miniconda3/envs/malnet/lib/python3.10/site-packages/torch_geometric/loader/dataloader.py\", line 20, in __call__\r\n    return Batch.from_data_list(batch, self.follow_batch,\r\n  File \"/home/xxxx/miniconda3/envs/malnet/lib/python3.10/site-packages/torch_geometric/data/batch.py\", line 76, in from_data_list\r\n    batch, slice_dict, inc_dict = collate(\r\n  File \"/home/xxxx/miniconda3/envs/malnet/lib/python3.10/site-packages/torch_geometric/data/collate.py\", line 84, in collate\r\n    value, slices, incs = _collate(attr, values, data_list, stores,\r\n  File \"/home/xxxx/miniconda3/envs/malnet/lib/python3.10/site-packages/torch_geometric/data/collate.py\", line 155, in _collate\r\n    value = torch.cat(values, dim=cat_dim or 0, out=out)\r\nRuntimeError: Sparse CSR tensors do not have is_contiguous\r\n```\r\n\r\nPyTorch 1.13.*  does not have this warning.\r\n```python\r\nclass Net(torch.nn.Module):\r\n    def __init__(self, in_channels, hidden_channels, out_channels, num_layers):\r\n        super().__init__()\r\n\r\n        self.convs = torch.nn.ModuleList()\r\n        self.batch_norms = torch.nn.ModuleList()\r\n\r\n        for i in range(num_layers):\r\n            mlp = Sequential(\r\n                Linear(in_channels, 2 * hidden_channels),\r\n                BatchNorm(2 * hidden_channels),\r\n                ReLU(),\r\n                Linear(2 * hidden_channels, hidden_channels),\r\n            )\r\n            conv = GINConv(mlp, train_eps=False).jittable()\r\n\r\n            self.convs.append(conv)\r\n            self.batch_norms.append(BatchNorm(hidden_channels))\r\n\r\n            in_channels = hidden_channels\r\n\r\n        self.lin1 = Linear(hidden_channels, hidden_channels)\r\n        self.batch_norm1 = BatchNorm(hidden_channels)\r\n        self.lin2 = Linear(hidden_channels, out_channels)\r\n\r\n    def forward(self, x, adj_t, batch):\r\n        for conv, batch_norm in zip(self.convs, self.batch_norms):\r\n            x = F.relu(batch_norm(conv(x, adj_t)))\r\n        \r\n        #x = global_add_pool(x, batch)\r\n        x = segment_csr(x, batch) \r\n\r\n        x = F.relu(self.batch_norm1(self.lin1(x)))\r\n        x = F.dropout(x, p=0.5, training=self.training)\r\n        x = self.lin2(x)\r\n        return F.log_softmax(x, dim=-1)\r\n    \r\nmodel = Net(train_dataset.num_features, args.hidden_channels, train_dataset.num_classes, args.num_layers).to(device)\r\noptimizer = torch.optim.Adam(model.parameters(), lr=args.lr)\r\n```\r\n\r\n```\r\n[/home/xxxx/miniconda3/envs/malnet/lib/python3.10/site-packages/torch_geometric/utils/sparse.py:176](https://file+.vscode-resource.vscode-cdn.net/home/xxxx/miniconda3/envs/malnet/lib/python3.10/site-packages/torch_geometric/utils/sparse.py:176): UserWarning: Sparse CSR tensor support is in beta state. If you miss a functionality in the sparse tensor support, please submit a feature request to https://github.com/pytorch/pytorch/issues. (Triggered internally at [/opt/conda/conda-bld/pytorch_1678402411778/work/aten/src/ATen/SparseCsrTensorImpl.cpp:54](https://file+.vscode-resource.vscode-cdn.net/opt/conda/conda-bld/pytorch_1678402411778/work/aten/src/ATen/SparseCsrTensorImpl.cpp:54).)\r\n  return adj.to_sparse_csr()\r\n```\r\n\n\n### Environment\n\n* PyG version: 2.3.0\r\n* PyTorch version: 2.0.0\r\n* Python version:3.10.10\r\n* CUDA/cuDNN version:12.1\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda \r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): torch-scatte 2.1.1\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7088/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7087", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7087/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7087/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7087/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7087", "id": 1648990554, "node_id": "PR_kwDOBlHMec5NVTza", "number": 7087, "title": "Fix `HGTLoader` on disconnected graphs", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-03-31T09:06:45Z", "updated_at": "2023-03-31T09:18:28Z", "closed_at": "2023-03-31T09:18:27Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7087", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7087", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7087.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7087.patch", "merged_at": "2023-03-31T09:18:27Z"}, "body": "We still want to maintain all node and edge types, but sample zero nodes/edges.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7087/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7082", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7082/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7082/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7082/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7082", "id": 1647117660, "node_id": "PR_kwDOBlHMec5NPD1p", "number": 7082, "title": "Fix nightly builds", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 1267385339, "node_id": "MDU6TGFiZWwxMjY3Mzg1MzM5", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/installation", "name": "installation", "color": "bfdadc", "default": false, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-30T08:03:27Z", "updated_at": "2023-03-30T11:21:12Z", "closed_at": "2023-03-30T11:21:11Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7082", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7082", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7082.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7082.patch", "merged_at": "2023-03-30T11:21:11Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7082/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7081", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7081/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7081/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7081/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7081", "id": 1647047040, "node_id": "I_kwDOBlHMec5iK_GA", "number": 7081, "title": "RuntimeError in GATconv", "user": {"login": "wuying39", "id": 61900673, "node_id": "MDQ6VXNlcjYxOTAwNjcz", "avatar_url": "https://avatars.githubusercontent.com/u/61900673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wuying39", "html_url": "https://github.com/wuying39", "followers_url": "https://api.github.com/users/wuying39/followers", "following_url": "https://api.github.com/users/wuying39/following{/other_user}", "gists_url": "https://api.github.com/users/wuying39/gists{/gist_id}", "starred_url": "https://api.github.com/users/wuying39/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wuying39/subscriptions", "organizations_url": "https://api.github.com/users/wuying39/orgs", "repos_url": "https://api.github.com/users/wuying39/repos", "events_url": "https://api.github.com/users/wuying39/events{/privacy}", "received_events_url": "https://api.github.com/users/wuying39/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-03-30T07:12:37Z", "updated_at": "2023-03-30T07:13:31Z", "closed_at": "2023-03-30T07:13:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhen I use the GATconv layer, an error has occurred:\r\nFile \"C:\\Users\\admin\\.conda\\envs\\gnmp\\lib\\site-packages\\torch_geometric\\nn\\conv\\gat_conv.py\", line 180, in message\r\n    alpha = softmax(alpha, index, ptr, size_i)``\r\nHowever, other layer such as GCNConv has no problem.\r\n`RuntimeError: nvrtc: error: invalid value for --gpu-architecture (-arch)\r\n\r\nnvrtc compilation failed: \r\n\r\n#define NAN __int_as_float(0x7fffffff)\r\n#define POS_INFINITY __int_as_float(0x7f800000)\r\n#define NEG_INFINITY __int_as_float(0xff800000)\r\n\r\n\r\ntemplate<typename T>\r\n__device__ T maximum(T a, T b) {\r\n  return isnan(a) ? a : (a > b ? a : b);\r\n}\r\n\r\ntemplate<typename T>\r\n__device__ T minimum(T a, T b) {\r\n  return isnan(a) ? a : (a < b ? a : b);\r\n}\r\n\r\nextern \"C\" __global__\r\nvoid func_1(float* t0, float* t1, float* aten_exp_flat) {\r\n{\r\n  if (512 * blockIdx.x + threadIdx.x<53056 ? 1 : 0) {\r\n    float v = __ldg(t0 + 512 * blockIdx.x + threadIdx.x);\r\n    float v_1 = __ldg(t1 + 512 * blockIdx.x + threadIdx.x);\r\n    aten_exp_flat[512 * blockIdx.x + threadIdx.x] = expf(v - v_1);\r\n  }\r\n}\r\n}\r\n`\n\n### Environment\n\n* PyG version: 1.7.0\r\n* PyTorch version: 1.7.0\r\n* OS: windows\r\n* Python version: 3.7\r\n* CUDA/cuDNN version: 11.0\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7081/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7079", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7079/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7079/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7079/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7079", "id": 1646571191, "node_id": "I_kwDOBlHMec5iJK63", "number": 7079, "title": "setup.py was removed now i can't build from source", "user": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-29T21:36:38Z", "updated_at": "2023-03-30T07:20:57Z", "closed_at": "2023-03-30T07:20:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\nafter this commit: [80d4647daf5daac4d8d6733fdddf2eae9cd9ec7a](https://github.com/pyg-team/pytorch_geometric/pull/6880)\r\n```\r\nroot@45bcb33be86c:/opt/pyg/pytorch_geometric# python3 setup.py install\r\npython3: can\u2019t open file \u2018setup.py\u2019: [Errno 2] No such file or directory\r\nroot@45bcb33be86c:/opt/pyg/pytorch_geometric# pip install -e .\r\nLooking in indexes: https://pypi.org/simple, https://pypi.ngc.nvidia.com\r\nObtaining file:///opt/pyg/pytorch_geometric\r\n Installing build dependencies ... done\r\n Getting requirements to build wheel ... done\r\n  Preparing wheel metadata ... done\r\nRequirement already satisfied: scipy in /usr/local/lib/python3.8/dist-packages (from torch_geometric==2.4.0) (1.6.3)\r\nRequirement already satisfied: tqdm in /usr/local/lib/python3.8/dist-packages (from torch_geometric==2.4.0) (4.62.3)\r\nRequirement already satisfied: requests in /usr/local/lib/python3.8/dist-packages (from torch_geometric==2.4.0) (2.28.2)\r\nRequirement already satisfied: psutil>=5.8.0 in /usr/local/lib/python3.8/dist-packages (from torch_geometric==2.4.0) (5.8.0)\r\nRequirement already satisfied: pyparsing in /usr/local/lib/python3.8/dist-packages (from torch_geometric==2.4.0) (3.0.9)\r\nRequirement already satisfied: jinja2 in /usr/local/lib/python3.8/dist-packages (from torch_geometric==2.4.0) (3.1.2)\r\nRequirement already satisfied: numpy in /usr/local/lib/python3.8/dist-packages (from torch_geometric==2.4.0) (1.22.3)\r\nRequirement already satisfied: scikit-learn in /usr/local/lib/python3.8/dist-packages (from torch_geometric==2.4.0) (0.24.2)\r\nRequirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.8/dist-packages (from jinja2->torch_geometric==2.4.0) (2.1.2)\r\nRequirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.8/dist-packages (from requests->torch_geometric==2.4.0) (3.4)\r\nRequirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.8/dist-packages (from requests->torch_geometric==2.4.0) (3.1.0)\r\nRequirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.8/dist-packages (from requests->torch_geometric==2.4.0) (2022.12.7)\r\nRequirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.8/dist-packages (from requests->torch_geometric==2.4.0) (1.26.14)\r\nRequirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.8/dist-packages (from scikit-learn->torch_geometric==2.4.0) (1.2.0)\r\nRequirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.8/dist-packages (from scikit-learn->torch_geometric==2.4.0) (3.1.0)\r\nInstalling collected packages: torch-geometric\r\n Running setup.py develop for torch-geometric\r\n  ERROR: Command errored out with exit status 1:\r\n   command: /usr/bin/python -c \u2018import io, os, sys, setuptools, tokenize; sys.argv[0] = \u2018\u201c\u2019\u201d\u2018/opt/pyg/pytorch_geometric/setup.py\u2019\u201c\u2018\u201d\u2019; __file__=\u2018\u201c\u2019\u201d\u2018/opt/pyg/pytorch_geometric/setup.py\u2019\u201c\u2018\u201d\u2019;f = getattr(tokenize, \u2018\u201c\u2019\u201d\u2018open\u2019\u201c\u2018\u201d\u2019, open)(__file__) if os.path.exists(__file__) else io.StringIO(\u2018\u201c\u2019\u201d\u2018from setuptools import setup; setup()\u2018\u201c\u2019\u201d\u2018);code = f.read().replace(\u2018\u201c\u2019\u201d\u2018\\r\\n\u2019\u201c\u2018\u201d\u2019, \u2018\u201c\u2019\u201d\u2018\\n\u2019\u201c\u2018\u201d\u2019);f.close();exec(compile(code, __file__, \u2018\u201c\u2019\u201d\u2018exec\u2019\u201c\u2018\u201d\u2019))' develop --no-deps\r\n     cwd: /opt/pyg/pytorch_geometric/\r\n  Complete output (14 lines):\r\n  error: Multiple top-level packages discovered in a flat-layout: [\u2018conda\u2019, \u2018docker\u2019, \u2018graphgym\u2019, \u2018torch_geometric\u2019].\r\n   \r\n  To avoid accidental inclusion of unwanted files or directories,\r\n  setuptools will not proceed with this build.\r\n   \r\n  If you are trying to create a single distribution with multiple packages\r\n  on purpose, you should not rely on automatic discovery.\r\n  Instead, consider the following options:\r\n   \r\n  1. set up custom discovery (`find` directive with `include` or `exclude`)\r\n  2. use a `src-layout`\r\n  3. explicitly set `py_modules` or `packages` with a list of names\r\n   \r\n  To find more information, look for \u201cpackage discovery\u201d on setuptools docs.\r\n  ----------------------------------------\r\nERROR: Command errored out with exit status 1: /usr/bin/python -c \u2018import io, os, sys, setuptools, tokenize; sys.argv[0] = \u2018\u201c\u2019\u201d\u2018/opt/pyg/pytorch_geometric/setup.py\u2019\u201c\u2018\u201d\u2019; __file__=\u2018\u201c\u2019\u201d\u2018/opt/pyg/pytorch_geometric/setup.py\u2019\u201c\u2018\u201d\u2019;f = getattr(tokenize, \u2018\u201c\u2019\u201d\u2018open\u2019\u201c\u2018\u201d\u2019, open)(__file__) if os.path.exists(__file__) else io.StringIO(\u2018\u201c\u2019\u201d\u2018from setuptools import setup; setup()\u2018\u201c\u2019\u201d\u2018);code = f.read().replace(\u2018\u201c\u2019\u201d\u2018\\r\\n\u2019\u201c\u2018\u201d\u2019, \u2018\u201c\u2019\u201d\u2018\\n\u2019\u201c\u2018\u201d\u2019);f.close();exec(compile(code, __file__, \u2018\u201c\u2019\u201d\u2018exec\u2019\u201c\u2018\u201d\u2019))' develop --no-deps Check the logs for full command output.\r\n```\r\n\r\n### Environment\r\n\r\n* PyG version: master", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7079/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7078", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7078/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7078/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7078/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7078", "id": 1646472655, "node_id": "I_kwDOBlHMec5iIy3P", "number": 7078, "title": "xxxConv object has no attribute '_user_args'", "user": {"login": "lina-dev", "id": 54722599, "node_id": "MDQ6VXNlcjU0NzIyNTk5", "avatar_url": "https://avatars.githubusercontent.com/u/54722599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lina-dev", "html_url": "https://github.com/lina-dev", "followers_url": "https://api.github.com/users/lina-dev/followers", "following_url": "https://api.github.com/users/lina-dev/following{/other_user}", "gists_url": "https://api.github.com/users/lina-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/lina-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lina-dev/subscriptions", "organizations_url": "https://api.github.com/users/lina-dev/orgs", "repos_url": "https://api.github.com/users/lina-dev/repos", "events_url": "https://api.github.com/users/lina-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/lina-dev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-03-29T20:24:20Z", "updated_at": "2023-03-31T19:00:50Z", "closed_at": "2023-03-31T19:00:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\n     script  torch_geometric/nn/conv/message_passing.py\r\nI got the error '`TransformerConv' object has no attribute '_user_args'`\r\n\r\n    x = self.conv1(x, edge_index)\r\n  File \".../venv/lib/python3.9/site-packages/torch/nn/modules/module.py\", line 1194, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \".../venv/lib/python3.9/site-packages/torch_geometric/nn/conv/transformer_conv.py\", line 177, in forward\r\n    out = self.propagate(edge_index, query=query, key=key, value=value,\r\n  File \".../venv/lib/python3.9/site-packages/torch_geometric/nn/conv/message_passing.py\", line 459, in propagate\r\n    coll_dict = self._collect(self._user_args, edge_index, size,\r\n  File \".../venv/lib/python3.9/site-packages/torch/nn/modules/module.py\", line 1269, in __getattr__\r\n    raise AttributeError(\"'{}' object has no attribute '{}'\".format(\r\nAttributeError: 'TransformerConv' object has no attribute '_user_args'\r\n\r\n      \r\nline 445 (torch-geometric ==**2.3.0**)\r\n```\r\n   if decomposed_layers > 1:\r\n                user_args = **self._user_args**\r\n                decomp_args = {a[:-2] for a in user_args if a[-2:] == '_j'}\r\n                decomp_kwargs = {\r\n                    a: kwargs[a].chunk(decomposed_layers, -1)\r\n                    for a in decomp_args\r\n                }\r\n                decomp_out = []\r\n\r\n            for i in range(decomposed_layers):\r\n                if decomposed_layers > 1:\r\n                    for arg in decomp_args:\r\n                        kwargs[arg] = decomp_kwargs[arg][i]\r\n\r\n                coll_dict = self._collect(**self._user_args**, edge_index, size,\r\n                                          kwargs)\r\n\r\n```\r\n\r\n version **2.2.0** works well, since this version uses correct self.__user_args \r\n\"\"\"line 414\r\n        else:  # Otherwise, run both functions in separation.\r\n            if decomposed_layers > 1:\r\n                user_args = self.__user_args__\r\n                decomp_args = {a[:-2] for a in user_args if a[-2:] == '_j'}\r\n                decomp_kwargs = {\r\n                    a: kwargs[a].chunk(decomposed_layers, -1)\r\n                    for a in decomp_args\r\n                }\r\n                decomp_out = []\r\n\r\n            for i in range(decomposed_layers):\r\n                if decomposed_layers > 1:\r\n                    for arg in decomp_args:\r\n                        kwargs[arg] = decomp_kwargs[arg][i]\r\n\r\n                coll_dict = self.__collect__(self.__user_args__, edge_index,\r\n                                             size, kwargs)\r\n\"\"\"\r\nHow to reproduce the error\r\n```\r\nfrom torch_geometric.nn import GATConv, GCNConv, SAGEConv, TransformerConv\r\nclass GraphormerEncoder(torch.nn.Module):\r\n    \r\n    def __init__(self, embedding_size: int = 768, negative_slope=0.2, dropout=0.6, **kwargs):\r\n        \r\n        super().__init__()\r\n        ...\r\n        self.conv1 = TransformerConv(embedding_size, self.hidden_channels, heads, dropout=dropout)\r\n        self.relu = torch.nn.LeakyReLU(negative_slope=negative_slope)\r\n        self.conv2 = TransformerConv(self.hidden_channels * heads, heads, self.final_channels, dropout=dropout)\r\n        \r\n    def forward(self, x, edge_index):\r\n        \r\n        x = self.embedder(x)\r\n        x = self.conv1(x, edge_index)    #<-the error occurs\r\n        x = self.relu(x)\r\n        x = self.conv2(x, edge_index)\r\n        return x\r\n\r\n\r\n\r\n```\n\n### Environment\n\n* PyG version:\r\n* PyTorch version: \r\n* OS: MAC\r\n* Python version:3.9\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\ntorch==1.13.1\r\nmore_itertools==9.1.0\r\ndatasets==2.10.1\r\njson\r\npillow==8.4.0\r\ntorch-geometric==2.3.0\r\ntransformers==4.27.4\r\nlayout_lm_inference==0.1.143\r\nbotocore==1.29.66\r\nboto3==1.26.66\r\npytorch-lightning==1.9.1\r\ntorch-sparse==0.6.17\r\ntorch-scatter==2.1.1", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7078/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7075", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7075/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7075/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7075/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7075", "id": 1645323602, "node_id": "PR_kwDOBlHMec5NJA5Q", "number": 7075, "title": "Fix hang issue of import pandas", "user": {"login": "yanbing-j", "id": 61222868, "node_id": "MDQ6VXNlcjYxMjIyODY4", "avatar_url": "https://avatars.githubusercontent.com/u/61222868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanbing-j", "html_url": "https://github.com/yanbing-j", "followers_url": "https://api.github.com/users/yanbing-j/followers", "following_url": "https://api.github.com/users/yanbing-j/following{/other_user}", "gists_url": "https://api.github.com/users/yanbing-j/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanbing-j/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanbing-j/subscriptions", "organizations_url": "https://api.github.com/users/yanbing-j/orgs", "repos_url": "https://api.github.com/users/yanbing-j/repos", "events_url": "https://api.github.com/users/yanbing-j/events{/privacy}", "received_events_url": "https://api.github.com/users/yanbing-j/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969902632, "node_id": "LA_kwDOBlHMec7sn-go", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/benchmark", "name": "benchmark", "color": "f9d0c4", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "yanbing-j", "id": 61222868, "node_id": "MDQ6VXNlcjYxMjIyODY4", "avatar_url": "https://avatars.githubusercontent.com/u/61222868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanbing-j", "html_url": "https://github.com/yanbing-j", "followers_url": "https://api.github.com/users/yanbing-j/followers", "following_url": "https://api.github.com/users/yanbing-j/following{/other_user}", "gists_url": "https://api.github.com/users/yanbing-j/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanbing-j/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanbing-j/subscriptions", "organizations_url": "https://api.github.com/users/yanbing-j/orgs", "repos_url": "https://api.github.com/users/yanbing-j/repos", "events_url": "https://api.github.com/users/yanbing-j/events{/privacy}", "received_events_url": "https://api.github.com/users/yanbing-j/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yanbing-j", "id": 61222868, "node_id": "MDQ6VXNlcjYxMjIyODY4", "avatar_url": "https://avatars.githubusercontent.com/u/61222868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanbing-j", "html_url": "https://github.com/yanbing-j", "followers_url": "https://api.github.com/users/yanbing-j/followers", "following_url": "https://api.github.com/users/yanbing-j/following{/other_user}", "gists_url": "https://api.github.com/users/yanbing-j/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanbing-j/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanbing-j/subscriptions", "organizations_url": "https://api.github.com/users/yanbing-j/orgs", "repos_url": "https://api.github.com/users/yanbing-j/repos", "events_url": "https://api.github.com/users/yanbing-j/events{/privacy}", "received_events_url": "https://api.github.com/users/yanbing-j/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-03-29T08:55:22Z", "updated_at": "2023-03-29T10:23:46Z", "closed_at": "2023-03-29T10:23:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7075", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7075", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7075.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7075.patch", "merged_at": "2023-03-29T10:23:45Z"}, "body": "This PR is to change the import location of pandas in `benchmark/utils/utils.py` to fix the hang issue, which is found when using ipex launcher.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7075/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7065", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7065/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7065/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7065/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7065", "id": 1643939418, "node_id": "PR_kwDOBlHMec5NEYj5", "number": 7065, "title": "Make edges in `HeterohilousGraphDataset` undirected", "user": {"login": "OlegPlatonov", "id": 32016523, "node_id": "MDQ6VXNlcjMyMDE2NTIz", "avatar_url": "https://avatars.githubusercontent.com/u/32016523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OlegPlatonov", "html_url": "https://github.com/OlegPlatonov", "followers_url": "https://api.github.com/users/OlegPlatonov/followers", "following_url": "https://api.github.com/users/OlegPlatonov/following{/other_user}", "gists_url": "https://api.github.com/users/OlegPlatonov/gists{/gist_id}", "starred_url": "https://api.github.com/users/OlegPlatonov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OlegPlatonov/subscriptions", "organizations_url": "https://api.github.com/users/OlegPlatonov/orgs", "repos_url": "https://api.github.com/users/OlegPlatonov/repos", "events_url": "https://api.github.com/users/OlegPlatonov/events{/privacy}", "received_events_url": "https://api.github.com/users/OlegPlatonov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637023, "node_id": "LA_kwDOBlHMec7veEaf", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/dataset", "name": "dataset", "color": "7705B6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "OlegPlatonov", "id": 32016523, "node_id": "MDQ6VXNlcjMyMDE2NTIz", "avatar_url": "https://avatars.githubusercontent.com/u/32016523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OlegPlatonov", "html_url": "https://github.com/OlegPlatonov", "followers_url": "https://api.github.com/users/OlegPlatonov/followers", "following_url": "https://api.github.com/users/OlegPlatonov/following{/other_user}", "gists_url": "https://api.github.com/users/OlegPlatonov/gists{/gist_id}", "starred_url": "https://api.github.com/users/OlegPlatonov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OlegPlatonov/subscriptions", "organizations_url": "https://api.github.com/users/OlegPlatonov/orgs", "repos_url": "https://api.github.com/users/OlegPlatonov/repos", "events_url": "https://api.github.com/users/OlegPlatonov/events{/privacy}", "received_events_url": "https://api.github.com/users/OlegPlatonov/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "OlegPlatonov", "id": 32016523, "node_id": "MDQ6VXNlcjMyMDE2NTIz", "avatar_url": "https://avatars.githubusercontent.com/u/32016523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OlegPlatonov", "html_url": "https://github.com/OlegPlatonov", "followers_url": "https://api.github.com/users/OlegPlatonov/followers", "following_url": "https://api.github.com/users/OlegPlatonov/following{/other_user}", "gists_url": "https://api.github.com/users/OlegPlatonov/gists{/gist_id}", "starred_url": "https://api.github.com/users/OlegPlatonov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OlegPlatonov/subscriptions", "organizations_url": "https://api.github.com/users/OlegPlatonov/orgs", "repos_url": "https://api.github.com/users/OlegPlatonov/repos", "events_url": "https://api.github.com/users/OlegPlatonov/events{/privacy}", "received_events_url": "https://api.github.com/users/OlegPlatonov/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-28T13:21:03Z", "updated_at": "2023-03-29T07:26:19Z", "closed_at": "2023-03-29T07:26:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7065", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7065", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7065.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7065.patch", "merged_at": "2023-03-29T07:26:18Z"}, "body": "Hi! The graphs [here](https://github.com/yandex-research/heterophilous-graphs) are meant to be undirected. Since PyG treats all graphs as directed, I've added a call to transforms.ToUndirected to double the edges.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7065/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7060", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7060/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7060/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7060/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7060", "id": 1643495272, "node_id": "PR_kwDOBlHMec5NC33x", "number": 7060, "title": "Fix handling of missing node types in heterogeneous data loaders", "user": {"login": "toenshoff", "id": 15213846, "node_id": "MDQ6VXNlcjE1MjEzODQ2", "avatar_url": "https://avatars.githubusercontent.com/u/15213846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toenshoff", "html_url": "https://github.com/toenshoff", "followers_url": "https://api.github.com/users/toenshoff/followers", "following_url": "https://api.github.com/users/toenshoff/following{/other_user}", "gists_url": "https://api.github.com/users/toenshoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/toenshoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toenshoff/subscriptions", "organizations_url": "https://api.github.com/users/toenshoff/orgs", "repos_url": "https://api.github.com/users/toenshoff/repos", "events_url": "https://api.github.com/users/toenshoff/events{/privacy}", "received_events_url": "https://api.github.com/users/toenshoff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "toenshoff", "id": 15213846, "node_id": "MDQ6VXNlcjE1MjEzODQ2", "avatar_url": "https://avatars.githubusercontent.com/u/15213846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toenshoff", "html_url": "https://github.com/toenshoff", "followers_url": "https://api.github.com/users/toenshoff/followers", "following_url": "https://api.github.com/users/toenshoff/following{/other_user}", "gists_url": "https://api.github.com/users/toenshoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/toenshoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toenshoff/subscriptions", "organizations_url": "https://api.github.com/users/toenshoff/orgs", "repos_url": "https://api.github.com/users/toenshoff/repos", "events_url": "https://api.github.com/users/toenshoff/events{/privacy}", "received_events_url": "https://api.github.com/users/toenshoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "toenshoff", "id": 15213846, "node_id": "MDQ6VXNlcjE1MjEzODQ2", "avatar_url": "https://avatars.githubusercontent.com/u/15213846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toenshoff", "html_url": "https://github.com/toenshoff", "followers_url": "https://api.github.com/users/toenshoff/followers", "following_url": "https://api.github.com/users/toenshoff/following{/other_user}", "gists_url": "https://api.github.com/users/toenshoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/toenshoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toenshoff/subscriptions", "organizations_url": "https://api.github.com/users/toenshoff/orgs", "repos_url": "https://api.github.com/users/toenshoff/repos", "events_url": "https://api.github.com/users/toenshoff/events{/privacy}", "received_events_url": "https://api.github.com/users/toenshoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-28T08:55:03Z", "updated_at": "2023-03-30T14:11:02Z", "closed_at": "2023-03-30T14:11:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7060", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7060", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7060.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7060.patch", "merged_at": "2023-03-30T14:11:01Z"}, "body": "This addresses a bug in heterogeneous data loaders, which crash if a node type from the complete graph is not present in the sampled batch of nodes. This is can easily happen if a graph is disconnected or some node types are simply rare.\r\n\r\nAn unsafe dictionary access in the `filter_hetero_data` raises an exception in this case. I solved this by calling `HeteroData.node_type_subgraph` on the graph before the batch of nodes is filtered. I added a test for `HGTLoader` which covers this case and did not pass previously.\r\n\r\nNote that the behavior of the data loaders now differs slightly from `HeteroData.subgraph`, as the loader will handle missing keys by not including any node of that type in the batch, while the `subgraph` method would retain all of the nodes. However, it seems more convenient for data loading if batches only contain nodes that where actually returned by the underlying sampler.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7060/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7055", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7055/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7055/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7055/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7055", "id": 1643249284, "node_id": "PR_kwDOBlHMec5NCDLR", "number": 7055, "title": "Update minimal required PyTorch version", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 1267385339, "node_id": "MDU6TGFiZWwxMjY3Mzg1MzM5", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/installation", "name": "installation", "color": "bfdadc", "default": false, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-28T05:54:06Z", "updated_at": "2023-03-28T06:06:28Z", "closed_at": "2023-03-28T06:06:26Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7055", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7055", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7055.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7055.patch", "merged_at": "2023-03-28T06:06:26Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7055/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7050", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7050/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7050/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7050/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7050", "id": 1642042890, "node_id": "PR_kwDOBlHMec5M9-9B", "number": 7050, "title": "Fix `FastHGTConv` to correctly call the value module", "user": {"login": "toenshoff", "id": 15213846, "node_id": "MDQ6VXNlcjE1MjEzODQ2", "avatar_url": "https://avatars.githubusercontent.com/u/15213846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toenshoff", "html_url": "https://github.com/toenshoff", "followers_url": "https://api.github.com/users/toenshoff/followers", "following_url": "https://api.github.com/users/toenshoff/following{/other_user}", "gists_url": "https://api.github.com/users/toenshoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/toenshoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toenshoff/subscriptions", "organizations_url": "https://api.github.com/users/toenshoff/orgs", "repos_url": "https://api.github.com/users/toenshoff/repos", "events_url": "https://api.github.com/users/toenshoff/events{/privacy}", "received_events_url": "https://api.github.com/users/toenshoff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "toenshoff", "id": 15213846, "node_id": "MDQ6VXNlcjE1MjEzODQ2", "avatar_url": "https://avatars.githubusercontent.com/u/15213846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toenshoff", "html_url": "https://github.com/toenshoff", "followers_url": "https://api.github.com/users/toenshoff/followers", "following_url": "https://api.github.com/users/toenshoff/following{/other_user}", "gists_url": "https://api.github.com/users/toenshoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/toenshoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toenshoff/subscriptions", "organizations_url": "https://api.github.com/users/toenshoff/orgs", "repos_url": "https://api.github.com/users/toenshoff/repos", "events_url": "https://api.github.com/users/toenshoff/events{/privacy}", "received_events_url": "https://api.github.com/users/toenshoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "toenshoff", "id": 15213846, "node_id": "MDQ6VXNlcjE1MjEzODQ2", "avatar_url": "https://avatars.githubusercontent.com/u/15213846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toenshoff", "html_url": "https://github.com/toenshoff", "followers_url": "https://api.github.com/users/toenshoff/followers", "following_url": "https://api.github.com/users/toenshoff/following{/other_user}", "gists_url": "https://api.github.com/users/toenshoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/toenshoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toenshoff/subscriptions", "organizations_url": "https://api.github.com/users/toenshoff/orgs", "repos_url": "https://api.github.com/users/toenshoff/repos", "events_url": "https://api.github.com/users/toenshoff/events{/privacy}", "received_events_url": "https://api.github.com/users/toenshoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-27T13:23:31Z", "updated_at": "2023-03-27T13:36:40Z", "closed_at": "2023-03-27T13:36:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7050", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7050", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7050.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7050.patch", "merged_at": "2023-03-27T13:36:40Z"}, "body": "This fixes a small bug in the new `fast_hgt_conv` layer, which incorrectly called the module `self.k_rel` instead of `self.v_rel` to generate the value vectors `v`.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7050/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7048", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7048/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7048/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7048/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7048", "id": 1641845343, "node_id": "PR_kwDOBlHMec5M9WQk", "number": 7048, "title": "Fix `bfloat16` conversion in `HeteroData` benchmark scripts", "user": {"login": "yanbing-j", "id": 61222868, "node_id": "MDQ6VXNlcjYxMjIyODY4", "avatar_url": "https://avatars.githubusercontent.com/u/61222868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanbing-j", "html_url": "https://github.com/yanbing-j", "followers_url": "https://api.github.com/users/yanbing-j/followers", "following_url": "https://api.github.com/users/yanbing-j/following{/other_user}", "gists_url": "https://api.github.com/users/yanbing-j/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanbing-j/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanbing-j/subscriptions", "organizations_url": "https://api.github.com/users/yanbing-j/orgs", "repos_url": "https://api.github.com/users/yanbing-j/repos", "events_url": "https://api.github.com/users/yanbing-j/events{/privacy}", "received_events_url": "https://api.github.com/users/yanbing-j/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "yanbing-j", "id": 61222868, "node_id": "MDQ6VXNlcjYxMjIyODY4", "avatar_url": "https://avatars.githubusercontent.com/u/61222868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanbing-j", "html_url": "https://github.com/yanbing-j", "followers_url": "https://api.github.com/users/yanbing-j/followers", "following_url": "https://api.github.com/users/yanbing-j/following{/other_user}", "gists_url": "https://api.github.com/users/yanbing-j/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanbing-j/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanbing-j/subscriptions", "organizations_url": "https://api.github.com/users/yanbing-j/orgs", "repos_url": "https://api.github.com/users/yanbing-j/repos", "events_url": "https://api.github.com/users/yanbing-j/events{/privacy}", "received_events_url": "https://api.github.com/users/yanbing-j/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yanbing-j", "id": 61222868, "node_id": "MDQ6VXNlcjYxMjIyODY4", "avatar_url": "https://avatars.githubusercontent.com/u/61222868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanbing-j", "html_url": "https://github.com/yanbing-j", "followers_url": "https://api.github.com/users/yanbing-j/followers", "following_url": "https://api.github.com/users/yanbing-j/following{/other_user}", "gists_url": "https://api.github.com/users/yanbing-j/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanbing-j/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanbing-j/subscriptions", "organizations_url": "https://api.github.com/users/yanbing-j/orgs", "repos_url": "https://api.github.com/users/yanbing-j/repos", "events_url": "https://api.github.com/users/yanbing-j/events{/privacy}", "received_events_url": "https://api.github.com/users/yanbing-j/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-03-27T10:30:21Z", "updated_at": "2023-03-27T14:28:04Z", "closed_at": "2023-03-27T14:28:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7048", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7048", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7048.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7048.patch", "merged_at": "2023-03-27T14:28:03Z"}, "body": "This PR is to fix the issues:\r\n\r\n1. Re-use `test` function in training benchmark to avoid mismatch between `Data` and `HeteroData` in evaluation mode.\r\n2. `HeteroData` to convert to `bfloat16` datatype in inference and training benchmarks.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7048/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7035", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7035/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7035/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7035/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7035", "id": 1640527130, "node_id": "PR_kwDOBlHMec5M5Hiq", "number": 7035, "title": "Fix `Iterator` types in `DataPipes`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}, {"id": 4611000169, "node_id": "LA_kwDOBlHMec8AAAABEtZHaQ", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/type%20hints", "name": "type hints", "color": "98DBFB", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-25T13:56:28Z", "updated_at": "2023-03-25T14:05:08Z", "closed_at": "2023-03-25T14:05:07Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7035", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7035", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7035.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7035.patch", "merged_at": "2023-03-25T14:05:07Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7035/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7034", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7034/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7034/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7034/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7034", "id": 1640521079, "node_id": "PR_kwDOBlHMec5M5Gat", "number": 7034, "title": "Fix storage warning", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2023-03-25T13:35:02Z", "updated_at": "2023-03-30T07:26:57Z", "closed_at": "2023-03-25T14:05:58Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7034", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7034", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7034.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7034.patch", "merged_at": "2023-03-25T14:05:58Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7034/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7031", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7031/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7031/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7031/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7031", "id": 1639882639, "node_id": "I_kwDOBlHMec5hvp-P", "number": 7031, "title": "data/collate TypedStorage is deprecated.", "user": {"login": "KevinCrp", "id": 70952655, "node_id": "MDQ6VXNlcjcwOTUyNjU1", "avatar_url": "https://avatars.githubusercontent.com/u/70952655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KevinCrp", "html_url": "https://github.com/KevinCrp", "followers_url": "https://api.github.com/users/KevinCrp/followers", "following_url": "https://api.github.com/users/KevinCrp/following{/other_user}", "gists_url": "https://api.github.com/users/KevinCrp/gists{/gist_id}", "starred_url": "https://api.github.com/users/KevinCrp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KevinCrp/subscriptions", "organizations_url": "https://api.github.com/users/KevinCrp/orgs", "repos_url": "https://api.github.com/users/KevinCrp/repos", "events_url": "https://api.github.com/users/KevinCrp/events{/privacy}", "received_events_url": "https://api.github.com/users/KevinCrp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-03-24T18:51:08Z", "updated_at": "2023-03-25T13:38:32Z", "closed_at": "2023-03-25T13:38:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHello\r\n\r\nI have just upgraded PyTorch and Pyg to 2.0.0 and 2.3.0 version\r\n\r\nWhen I launch a training I have the following warning, how can I fix it ?\r\n\r\n```\r\ntorch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated.\r\n It will be removed in the future and UntypedStorage will be the only storage class.\r\n This should only matter to you if you are using storages directly.  \r\nTo access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()\r\n  storage = elem.storage()._new_shared(numel)\r\n```\r\n\r\nThanks\r\nKevin\n\n### Environment\n\n* PyG version: 2.3.0\r\n* PyTorch version: 2.0.0\r\n* OS: Ubuntu\r\n* Python version: 3.8\r\n* CUDA/cuDNN version: 11.7/8\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\npyg                       2.3.0           py38_torch_2.0.0_cu117    pyg\r\npytorch                   2.0.0           py3.8_cuda11.7_cudnn8.5.0_0    pytorch\r\npytorch-cuda              11.7                 h778d358_3    pytorch\r\npytorch-lightning         2.0.0              pyhd8ed1ab_1    conda-forge\r\npytorch-mutex             1.0                        cuda    pytorch\r\ntorchaudio                2.0.0                py38_cu117    pytorch\r\ntorchmetrics              0.11.2           py38hb070fc8_0  \r\ntorchtriton               2.0.0                      py38    pytorch\r\ntorchvision               0.15.0               py38_cu117    pytorch\r\npyg-lib                   0.2.0+pt20cu117          pypi_0    pypi", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7031/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7029", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7029/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7029/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7029/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7029", "id": 1639649363, "node_id": "I_kwDOBlHMec5huxBT", "number": 7029, "title": "tests failed", "user": {"login": "beew", "id": 2100031, "node_id": "MDQ6VXNlcjIxMDAwMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/2100031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beew", "html_url": "https://github.com/beew", "followers_url": "https://api.github.com/users/beew/followers", "following_url": "https://api.github.com/users/beew/following{/other_user}", "gists_url": "https://api.github.com/users/beew/gists{/gist_id}", "starred_url": "https://api.github.com/users/beew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beew/subscriptions", "organizations_url": "https://api.github.com/users/beew/orgs", "repos_url": "https://api.github.com/users/beew/repos", "events_url": "https://api.github.com/users/beew/events{/privacy}", "received_events_url": "https://api.github.com/users/beew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-03-24T15:56:42Z", "updated_at": "2023-03-27T06:15:39Z", "closed_at": "2023-03-27T06:15:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\n24 tests failed\r\n\r\nAfter installing pyg from pip I downloaded the the pyg tar ball and ran the tests and got these failures\r\n\r\nRan pytest -v in the pyg folder\r\n\r\n```\r\n-----------------------------------------------------------\r\n============================================================================================= short test summary info =============================================================================================\r\nFAILED test/nn/conv/test_antisymmetric_conv.py::test_antisymmetric_conv - RuntimeError: Cannot get indices on an uncoalesced tensor, please call .coalesce() first\r\nFAILED test/nn/conv/test_cg_conv.py::test_cg_conv - RuntimeError: Cannot get indices on an uncoalesced tensor, please call .coalesce() first\r\nFAILED test/nn/conv/test_dna_conv.py::test_dna_conv2 - RuntimeError: Cannot get indices on an uncoalesced tensor, please call .coalesce() first\r\nFAILED test/nn/conv/test_edge_conv.py::test_edge_conv_conv - RuntimeError: Cannot get indices on an uncoalesced tensor, please call .coalesce() first\r\nFAILED test/nn/conv/test_eg_conv.py::test_eg_conv - RuntimeError: Cannot get indices on an uncoalesced tensor, please call .coalesce() first\r\nFAILED test/nn/conv/test_fa_conv.py::test_fa_conv - RuntimeError: Cannot get indices on an uncoalesced tensor, please call .coalesce() first\r\nFAILED test/nn/conv/test_gcn_conv.py::test_gcn_conv - RuntimeError: Cannot get indices on an uncoalesced tensor, please call .coalesce() first\r\nFAILED test/nn/conv/test_gin_conv.py::test_gin_conv - RuntimeError: Cannot get indices on an uncoalesced tensor, please call .coalesce() first\r\nFAILED test/nn/conv/test_graph_conv.py::test_graph_conv - RuntimeError: Cannot get indices on an uncoalesced tensor, please call .coalesce() first\r\nFAILED test/nn/conv/test_message_passing.py::test_my_conv - assert False\r\nFAILED test/nn/conv/test_message_passing.py::test_my_conv_jittable - AssertionError: assert [[0.447368443...0861893, ...]] == [[0.447368443...0861893, ...]]\r\nFAILED test/nn/conv/test_message_passing.py::test_my_multiple_aggr_conv[multi_aggr_tuple0] - RuntimeError: Cannot get indices on an uncoalesced tensor, please call .coalesce() first\r\nFAILED test/nn/conv/test_message_passing.py::test_my_multiple_aggr_conv[multi_aggr_tuple1] - RuntimeError: Cannot get indices on an uncoalesced tensor, please call .coalesce() first\r\nFAILED test/nn/conv/test_message_passing.py::test_my_edge_conv - RuntimeError: Cannot get indices on an uncoalesced tensor, please call .coalesce() first\r\nFAILED test/nn/conv/test_message_passing.py::test_my_default_arg_conv - RuntimeError: Cannot get indices on an uncoalesced tensor, please call .coalesce() first\r\nFAILED test/nn/conv/test_sage_conv.py::test_sage_conv[sum-False] - RuntimeError: Cannot get indices on an uncoalesced tensor, please call .coalesce() first\r\nFAILED test/nn/conv/test_sage_conv.py::test_sage_conv[sum-True] - RuntimeError: Cannot get indices on an uncoalesced tensor, please call .coalesce() first\r\nFAILED test/nn/conv/test_sg_conv.py::test_sg_conv - RuntimeError: Cannot get indices on an uncoalesced tensor, please call .coalesce() first\r\nFAILED test/nn/conv/test_ssg_conv.py::test_ssg_conv - RuntimeError: Cannot get indices on an uncoalesced tensor, please call .coalesce() first\r\nFAILED test/nn/conv/test_tag_conv.py::test_tag_conv - RuntimeError: Cannot get indices on an uncoalesced tensor, please call .coalesce() first\r\nFAILED test/nn/conv/test_transformer_conv.py::test_transformer_conv - RuntimeError: Cannot get indices on an uncoalesced tensor, please call .coalesce() first\r\nFAILED test/nn/models/test_linkx.py::test_linkx[1] - RuntimeError: Expected a tensor of dimension 2 and tensor.size[0] == 3 but got: dimension 2 and tensor.size[0] = 4\r\nFAILED test/nn/models/test_linkx.py::test_linkx[2] - RuntimeError: Expected a tensor of dimension 2 and tensor.size[0] == 3 but got: dimension 2 and tensor.size[0] = 4\r\nFAILED test/transforms/test_to_sparse_tensor.py::test_to_sparse_tensor - AssertionError: assert 'ToSparseTens... layout=None)' == 'ToSparseTensor()'\r\n====================================================================== 24 failed, 3692 passed, 519 skipped, 16 warnings in 120.44s (0:02:00) ======================================================================\r\n```\r\nDetailed log attached\r\n[pyg_failed_tests.log](https://github.com/pyg-team/pytorch_geometric/files/11064061/pyg_failed_tests.log)\r\n\r\n\r\n### Environment\r\n\r\ntorch and pyg versions and related packages\r\n\r\n```\r\ntorch                             2.0.0+cpu\r\ntorch-cluster                     1.6.1\r\ntorch-geometric                   2.3.0\r\ntorch-scatter                     2.1.1\r\ntorch-sparse                      0.6.17\r\ntorch-spline-conv                 1.2.2\r\ntorchaudio                        2.0.1+cpu\r\ntorchmetrics                      0.11.4\r\ntorchvision                       0.15.1+cpu\r\n\r\n```\r\nall packages installed via pip\r\nOS is Ubuntu 22.04\r\nthere is no cuda in this system\r\npython 3.10.9\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7029/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7028", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7028/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7028/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7028/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7028", "id": 1638921877, "node_id": "PR_kwDOBlHMec5Mzwej", "number": 7028, "title": "Place message store on correct device in `TGN`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-24T08:10:20Z", "updated_at": "2023-03-24T08:26:54Z", "closed_at": "2023-03-24T08:26:53Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7028", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7028", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7028.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7028.patch", "merged_at": "2023-03-24T08:26:53Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7028/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7027", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7027/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7027/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7027/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7027", "id": 1638766927, "node_id": "PR_kwDOBlHMec5MzPCh", "number": 7027, "title": "Fix typo in introduction tutorial", "user": {"login": "zory233", "id": 17312120, "node_id": "MDQ6VXNlcjE3MzEyMTIw", "avatar_url": "https://avatars.githubusercontent.com/u/17312120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zory233", "html_url": "https://github.com/zory233", "followers_url": "https://api.github.com/users/zory233/followers", "following_url": "https://api.github.com/users/zory233/following{/other_user}", "gists_url": "https://api.github.com/users/zory233/gists{/gist_id}", "starred_url": "https://api.github.com/users/zory233/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zory233/subscriptions", "organizations_url": "https://api.github.com/users/zory233/orgs", "repos_url": "https://api.github.com/users/zory233/repos", "events_url": "https://api.github.com/users/zory233/events{/privacy}", "received_events_url": "https://api.github.com/users/zory233/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "zory233", "id": 17312120, "node_id": "MDQ6VXNlcjE3MzEyMTIw", "avatar_url": "https://avatars.githubusercontent.com/u/17312120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zory233", "html_url": "https://github.com/zory233", "followers_url": "https://api.github.com/users/zory233/followers", "following_url": "https://api.github.com/users/zory233/following{/other_user}", "gists_url": "https://api.github.com/users/zory233/gists{/gist_id}", "starred_url": "https://api.github.com/users/zory233/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zory233/subscriptions", "organizations_url": "https://api.github.com/users/zory233/orgs", "repos_url": "https://api.github.com/users/zory233/repos", "events_url": "https://api.github.com/users/zory233/events{/privacy}", "received_events_url": "https://api.github.com/users/zory233/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zory233", "id": 17312120, "node_id": "MDQ6VXNlcjE3MzEyMTIw", "avatar_url": "https://avatars.githubusercontent.com/u/17312120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zory233", "html_url": "https://github.com/zory233", "followers_url": "https://api.github.com/users/zory233/followers", "following_url": "https://api.github.com/users/zory233/following{/other_user}", "gists_url": "https://api.github.com/users/zory233/gists{/gist_id}", "starred_url": "https://api.github.com/users/zory233/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zory233/subscriptions", "organizations_url": "https://api.github.com/users/zory233/orgs", "repos_url": "https://api.github.com/users/zory233/repos", "events_url": "https://api.github.com/users/zory233/events{/privacy}", "received_events_url": "https://api.github.com/users/zory233/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-03-24T05:53:48Z", "updated_at": "2023-03-24T09:05:27Z", "closed_at": "2023-03-24T07:20:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7027", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7027", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7027.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7027.patch", "merged_at": "2023-03-24T07:20:54Z"}, "body": "fix typo \"accross\" to across", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7027/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7022", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7022/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7022/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7022/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7022", "id": 1637804752, "node_id": "I_kwDOBlHMec5hnurQ", "number": 7022, "title": "`Batch.get_example` fails when using `sparse_coo_tensor` for the tensor values", "user": {"login": "DomInvivo", "id": 47570400, "node_id": "MDQ6VXNlcjQ3NTcwNDAw", "avatar_url": "https://avatars.githubusercontent.com/u/47570400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DomInvivo", "html_url": "https://github.com/DomInvivo", "followers_url": "https://api.github.com/users/DomInvivo/followers", "following_url": "https://api.github.com/users/DomInvivo/following{/other_user}", "gists_url": "https://api.github.com/users/DomInvivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/DomInvivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DomInvivo/subscriptions", "organizations_url": "https://api.github.com/users/DomInvivo/orgs", "repos_url": "https://api.github.com/users/DomInvivo/repos", "events_url": "https://api.github.com/users/DomInvivo/events{/privacy}", "received_events_url": "https://api.github.com/users/DomInvivo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-03-23T15:50:05Z", "updated_at": "2023-03-27T08:36:25Z", "closed_at": "2023-03-27T08:36:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI cannot call `batch[0]` or `batch.get_example(0)` when using `torch.sparse_coo_tensor`, despite the batching working as expected.\r\n\r\n```\r\n# Imports\r\nimport torch\r\nimport torch_geometric\r\nfrom torch_geometric.data import Data, Batch\r\n\r\n# Create some fake graphs with sparse_coo_tensors, and batch them\r\ndata1 = Data(x=torch.sparse_coo_tensor(torch.tensor([[0, 1, 1], [1, 0, 1]]), torch.tensor([1, 2, 3]), (2, 2)))\r\ndata2 = Data(x=torch.sparse_coo_tensor(torch.tensor([[0, 1, 2], [1, 0, 1]]), torch.tensor([4, 5, 6]), (3, 2)))\r\nbatch = Batch.from_data_list([data1, data2])\r\n\r\n# Print the stuff\r\nprint(\"batch.x = \", batch.x) # WORKS\r\nprint(batch[0]) # FAILS\r\nprint(batch.get_example(0)) # FAILS\r\n\r\n--> \r\nbatch.x =  tensor(indices=tensor([[0, 1, 1, 2, 3, 4],\r\n                       [1, 0, 1, 1, 0, 1]]),\r\n       values=tensor([1, 2, 3, 4, 5, 6]),\r\n       size=(5, 2), nnz=6, layout=torch.sparse_coo)\r\n```\r\n\r\nOn ubuntu, I get this error:\r\n```\r\nFile ~/.venv/goli_ipu/lib/python3.8/site-packages/torch_geometric/data/batch.py:154, in Batch.__getitem__(self, idx)\r\n    150 def __getitem__(self, idx: Union[int, np.integer, str, IndexType]) -> Any:\r\n    151     if (isinstance(idx, (int, np.integer))\r\n    152             or (isinstance(idx, Tensor) and idx.dim() == 0)\r\n    153             or (isinstance(idx, np.ndarray) and np.isscalar(idx))):\r\n--> 154         return self.get_example(idx)\r\n    155     elif isinstance(idx, str) or (isinstance(idx, tuple)\r\n    156                                   and isinstance(idx[0], str)):\r\n    157         # Accessing attributes or node/edge types:\r\n    158         return super().__getitem__(idx)\r\n\r\nFile ~/.venv/goli_ipu/lib/python3.8/site-packages/torch_geometric/data/batch.py:103, in Batch.get_example(self, idx)\r\n     98 if not hasattr(self, '_slice_dict'):\r\n     99     raise RuntimeError(\r\n    100         (\"Cannot reconstruct 'Data' object from 'Batch' because \"\r\n    101          \"'Batch' was not created via 'Batch.from_data_list()'\"))\r\n--> 103 data = separate(\r\n    104     cls=self.__class__.__bases__[-1],\r\n    105     batch=self,\r\n    106     idx=idx,\r\n    107     slice_dict=self._slice_dict,\r\n    108     inc_dict=self._inc_dict,\r\n    109     decrement=True,\r\n    110 )\r\n    112 return data\r\n\r\nFile ~/.venv/goli_ipu/lib/python3.8/site-packages/torch_geometric/data/separate.py:37, in separate(cls, batch, idx, slice_dict, inc_dict, decrement)\r\n     35         slices = slice_dict[attr]\r\n     36         incs = inc_dict[attr] if decrement else None\r\n---> 37     data_store[attr] = _separate(attr, batch_store[attr], idx, slices,\r\n     38                                  incs, batch, batch_store, decrement)\r\n     40 # The `num_nodes` attribute needs special treatment, as we cannot infer\r\n     41 # the real number of nodes from the total number of nodes alone:\r\n     42 if hasattr(batch_store, '_num_nodes'):\r\n\r\nFile ~/.venv/goli_ipu/lib/python3.8/site-packages/torch_geometric/data/separate.py:65, in _separate(key, value, idx, slices, incs, batch, store, decrement)\r\n     63 cat_dim = batch.__cat_dim__(key, value, store)\r\n     64 start, end = int(slices[idx]), int(slices[idx + 1])\r\n---> 65 value = value.narrow(cat_dim or 0, start, end - start)\r\n     66 value = value.squeeze(0) if cat_dim is None else value\r\n     67 if decrement and (incs.dim() > 1 or int(incs[idx]) != 0):\r\n\r\nNotImplementedError: Could not run 'aten::as_strided' with arguments from the 'SparseCPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::as_strided' is only available for these backends: [CPU, Meta, QuantizedCPU, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\r\n\r\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\r\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\r\nQuantizedCPU: registered at aten/src/ATen/RegisterQuantizedCPU.cpp:929 [kernel]\r\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\r\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\r\nFuncTorchDynamicLayerBackMode: registered at ../aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\r\nFunctionalize: registered at aten/src/ATen/RegisterFunctionalization_0.cpp:19962 [kernel]\r\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\r\nConjugate: fallthrough registered at ../aten/src/ATen/ConjugateFallback.cpp:22 [kernel]\r\nNegative: fallthrough registered at ../aten/src/ATen/native/NegateFallback.cpp:22 [kernel]\r\nZeroTensor: registered at aten/src/ATen/RegisterZeroTensor.cpp:161 [kernel]\r\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:4822 [kernel]\r\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:14904 [autograd kernel]\r\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:14904 [autograd kernel]\r\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:14904 [autograd kernel]\r\nAutogradHIP: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:14904 [autograd kernel]\r\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:14904 [autograd kernel]\r\nAutogradMPS: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:14904 [autograd kernel]\r\nAutogradIPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:14904 [autograd kernel]\r\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:14904 [autograd kernel]\r\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:14904 [autograd kernel]\r\nAutogradVE: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:14904 [autograd kernel]\r\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:14904 [autograd kernel]\r\nAutogradMeta: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:14904 [autograd kernel]\r\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:14904 [autograd kernel]\r\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:14904 [autograd kernel]\r\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:14904 [autograd kernel]\r\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:14904 [autograd kernel]\r\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:16458 [kernel]\r\nAutocastCPU: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\r\nAutocastCUDA: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\r\nFuncTorchBatched: registered at ../aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:747 [kernel]\r\nFuncTorchVmapMode: fallthrough registered at ../aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\r\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1068 [kernel]\r\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\r\nFuncTorchGradWrapper: registered at ../aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\r\nPythonTLSSnapshot: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\r\nFuncTorchDynamicLayerFrontMode: registered at ../aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\r\nPythonDispatcher: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\r\n```\r\n\r\nOn windows, I get this error:\r\n```File ~\\miniconda3\\envs\\goli\\lib\\site-packages\\torch_geometric\\data\\batch.py:154, in Batch.__getitem__(self, idx)\r\n    150 def __getitem__(self, idx: Union[int, np.integer, str, IndexType]) -> Any:\r\n    151     if (isinstance(idx, (int, np.integer))\r\n    152             or (isinstance(idx, Tensor) and idx.dim() == 0)\r\n    153             or (isinstance(idx, np.ndarray) and np.isscalar(idx))):\r\n--> 154         return self.get_example(idx)\r\n    155     elif isinstance(idx, str) or (isinstance(idx, tuple)\r\n    156                                   and isinstance(idx[0], str)):\r\n    157         # Accessing attributes or node/edge types:\r\n    158         return super().__getitem__(idx)\r\n\r\nFile ~\\miniconda3\\envs\\goli\\lib\\site-packages\\torch_geometric\\data\\batch.py:103, in Batch.get_example(self, idx)\r\n     98 if not hasattr(self, '_slice_dict'):\r\n     99     raise RuntimeError(\r\n    100         (\"Cannot reconstruct 'Data' object from 'Batch' because \"\r\n    101          \"'Batch' was not created via 'Batch.from_data_list()'\"))\r\n--> 103 data = separate(\r\n    104     cls=self.__class__.__bases__[-1],\r\n    105     batch=self,\r\n    106     idx=idx,\r\n    107     slice_dict=self._slice_dict,\r\n    108     inc_dict=self._inc_dict,\r\n    109     decrement=True,\r\n    110 )\r\n    112 return data\r\n\r\nFile ~\\miniconda3\\envs\\goli\\lib\\site-packages\\torch_geometric\\data\\separate.py:37, in separate(cls, batch, idx, slice_dict, inc_dict, decrement)\r\n     35         slices = slice_dict[attr]\r\n     36         incs = inc_dict[attr] if decrement else None\r\n---> 37     data_store[attr] = _separate(attr, batch_store[attr], idx, slices,\r\n     38                                  incs, batch, batch_store, decrement)\r\n     40 # The `num_nodes` attribute needs special treatment, as we cannot infer\r\n     41 # the real number of nodes from the total number of nodes alone:\r\n     42 if hasattr(batch_store, '_num_nodes'):\r\n\r\nFile ~\\miniconda3\\envs\\goli\\lib\\site-packages\\torch_geometric\\data\\separate.py:65, in _separate(key, value, idx, slices, incs, batch, store, decrement)\r\n     63 cat_dim = batch.__cat_dim__(key, value, store)\r\n     64 start, end = int(slices[idx]), int(slices[idx + 1])\r\n---> 65 value = value.narrow(cat_dim or 0, start, end - start)\r\n     66 value = value.squeeze(0) if cat_dim is None else value\r\n     67 if decrement and (incs.dim() > 1 or int(incs[idx]) != 0):\r\n\r\nRuntimeError: Tensors of type SparseTensorImpl do not have strides```\n\n### Environment\n\n* PyG version: 2.3.0.dev20230306, 2.2.0 on Windows\r\n* PyTorch version: 1.13.0+cpu, 1.12.1 on Windows\r\n* OS: Ubuntu 20.04.5 LTS, and Windows 11\r\n* Python version: 3.8.10 on Ubuntu, 3.10.9 on Windows\r\n* CUDA/cuDNN version: Fails on CPU. I haven't tried on GPU.\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): `pip` on Ubuntu, `conda` on Windows\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7022/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7021", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7021/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7021/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7021/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7021", "id": 1637705823, "node_id": "I_kwDOBlHMec5hnWhf", "number": 7021, "title": "Iterating over NeighborLoader returns more nodes than in dataset", "user": {"login": "choosehappy", "id": 9681868, "node_id": "MDQ6VXNlcjk2ODE4Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/9681868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/choosehappy", "html_url": "https://github.com/choosehappy", "followers_url": "https://api.github.com/users/choosehappy/followers", "following_url": "https://api.github.com/users/choosehappy/following{/other_user}", "gists_url": "https://api.github.com/users/choosehappy/gists{/gist_id}", "starred_url": "https://api.github.com/users/choosehappy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/choosehappy/subscriptions", "organizations_url": "https://api.github.com/users/choosehappy/orgs", "repos_url": "https://api.github.com/users/choosehappy/repos", "events_url": "https://api.github.com/users/choosehappy/events{/privacy}", "received_events_url": "https://api.github.com/users/choosehappy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-03-23T14:54:50Z", "updated_at": "2023-03-24T12:31:14Z", "closed_at": "2023-03-24T12:31:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI'm trying to walk my entire set of nodes using NeighborLoader to extract the DL feature vector....after spending a few hours on this i just can't figure out what I'm missing\r\n\r\nThis minimal example shows the issue:\r\n1. i check how many nodes are in my dataset, 238k\r\n2. I would thus expect NeighborLoader to return 238k of them, in an unshuffled manner (shuffle=False), so that i end up with a single feature vector per node. \r\n3. When i do this however, i end up with 245k feature vectors (note that no model is being applied below)\r\n\r\n```python\r\nprint(train_data.num_nodes)\r\n--238817\r\n\r\nneighborloader = NeighborLoader(train_data, batch_size=2048, shuffle=False, \r\n                                num_neighbors=[-1, -1], num_workers=8, directed=True,  persistent_workers=True) \r\n\r\nxs= []\r\nfor data in tqdm.tqdm(neighborloader):\r\n    xs.append(data.x.detach().cpu())\r\nxs=torch.cat(xs, dim=0)\r\n\r\nprint(xs.shape)\r\n--torch.Size([245603, 64])\r\n```\r\n\r\nDigging much deeper, i see that the same ~6k nodes are being computed upon twice. ,Sometimes the resulting feature vector is the same, other times wildly different, so even if i wanted to select one of the duplicates, its not clear to me which one is \"more correct\"\r\n\r\nMy graph is essentially a nearest neighbor based on radius in the euclidian space, so it yields an undirected graph (i.e., if 2 nodes are connected, they are both within a radius K and thus have an edge in both directions) \r\n\r\nAny thoughts would be greatly appreciated!\n\n### Environment\n\n* PyG version: master branch version (see below)\r\n* PyTorch version: 1.13\r\n* OS: WSL linux \r\n* Python version:  3.11\r\n* CUDA/cuDNN version: 11.7\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\npyg-lib==0.2.0+pt113cu117\r\ntorch==1.13.0\r\ntorch-cluster==1.6.0+pt113cu117\r\ntorch-geometric @ git+https://github.com/pyg-team/pytorch_geometric.git@f0c72186286f257778c1d9293cfd0d35472d30bb\r\ntorch-optimizer==0.3.0\r\ntorch-scatter==2.1.0+pt113cu117\r\ntorch-sparse==0.6.16+pt113cu117", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7021/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7007", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7007/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7007/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7007/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7007", "id": 1636077791, "node_id": "PR_kwDOBlHMec5MqMqC", "number": 7007, "title": "Fix full test", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}, {"id": 4601575641, "node_id": "LA_kwDOBlHMec8AAAABEkZ42Q", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/utils", "name": "utils", "color": "DBC48C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-22T16:02:50Z", "updated_at": "2023-03-23T06:05:13Z", "closed_at": "2023-03-23T06:05:12Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7007", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7007", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7007.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7007.patch", "merged_at": "2023-03-23T06:05:12Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7007/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7004", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7004/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7004/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7004/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/7004", "id": 1635538957, "node_id": "I_kwDOBlHMec5hfFgN", "number": 7004, "title": "Cannot run compiled GNNs which rely on min/max aggregation ", "user": {"login": "HekpoMaH", "id": 8327849, "node_id": "MDQ6VXNlcjgzMjc4NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/8327849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HekpoMaH", "html_url": "https://github.com/HekpoMaH", "followers_url": "https://api.github.com/users/HekpoMaH/followers", "following_url": "https://api.github.com/users/HekpoMaH/following{/other_user}", "gists_url": "https://api.github.com/users/HekpoMaH/gists{/gist_id}", "starred_url": "https://api.github.com/users/HekpoMaH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HekpoMaH/subscriptions", "organizations_url": "https://api.github.com/users/HekpoMaH/orgs", "repos_url": "https://api.github.com/users/HekpoMaH/repos", "events_url": "https://api.github.com/users/HekpoMaH/events{/privacy}", "received_events_url": "https://api.github.com/users/HekpoMaH/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-03-22T11:02:07Z", "updated_at": "2023-03-22T11:54:33Z", "closed_at": "2023-03-22T11:22:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nThe bug is exactly what the title says. All my google search only led me to [this](https://github.com/pytorch/pytorch/issues/95791) PyTorch issue.\r\n\r\nHere is a minimal example (adapted from unit tests) using the PNAConv relying on the min/max aggregation:\r\n\r\n```Python\r\nimport torch\r\nimport torch_geometric\r\nimport torch_geometric.nn\r\ndevice='cuda'\r\nx = torch.randn(3, 32, device=device)\r\nedge_index = torch.tensor([[0, 1, 1, 2], [1, 0, 2, 1]], device=device)\r\n\r\nmodel = torch_geometric.nn.PNAConv(32, 32, ['min', 'max'], ['identity'], torch.tensor([1,2,1])).to(device)\r\ncompiled_model = torch_geometric.compile(model)\r\n\r\nexpected = model(x, edge_index)\r\nout = compiled_model(x, edge_index)\r\nassert torch.allclose(out, expected, atol=1e-6)\r\n```\r\n\r\nThe above code fails with the following long list of errors:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/utils.py\", line 1194, in run_node\r\n    return node.target(*args, **kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_ops.py\", line 502, in __call__\r\n    return self._op(*args, **kwargs or {})\r\nRuntimeError: The tensor has a non-zero number of elements, but its data is not allocated yet. Caffe2 uses a lazy allocation, so you will need to call mutable_data() or raw_mutable_data() to actually allocate memory.\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/utils.py\", line 1152, in get_fake_value\r\n    return wrap_fake_exception(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/utils.py\", line 808, in wrap_fake_exception\r\n    return fn()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/utils.py\", line 1153, in <lambda>\r\n    lambda: run_node(tx.output, node, args, kwargs, nnmodule)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/utils.py\", line 1206, in run_node\r\n    raise RuntimeError(\r\nRuntimeError: Failed running call_function torch_scatter.scatter_min(*(FakeTensor(FakeTensor(..., device='meta', size=(4, 1, 32), grad_fn=<StackBackward0>), cuda:0), FakeTensor(FakeTensor(..., device='meta', size=(4,), dtype=torch.int64), cuda:0), 0, None, 3), **{}):\r\nThe tensor has a non-zero number of elements, but its data is not allocated yet. Caffe2 uses a lazy allocation, so you will need to call mutable_data() or raw_mutable_data() to actually allocate memory.\r\n(scroll up for backtrace)\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/dobrik/co-nar/../test4e.py\", line 12, in <module>\r\n    out = compiled_model(x, edge_index)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/nn/modules/module.py\", line 1501, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py\", line 82, in forward\r\n    return self.dynamo_ctx(self._orig_mod.forward)(*args, **kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py\", line 209, in _fn\r\n    return fn(*args, **kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py\", line 337, in catch_errors\r\n    return callback(frame, cache_size, hooks)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py\", line 404, in _convert_frame\r\n    result = inner_convert(frame, cache_size, hooks)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py\", line 104, in _fn\r\n    return fn(*args, **kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py\", line 262, in _convert_frame_assert\r\n    return _compile(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/utils.py\", line 163, in time_wrapper\r\n    r = func(*args, **kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py\", line 324, in _compile\r\n    out_code = transform_code_object(code, transform)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/bytecode_transformation.py\", line 445, in transform_code_object\r\n    transformations(instructions, code_options)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py\", line 311, in transform\r\n    tracer.run()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1726, in run\r\n    super().run()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 576, in run\r\n    and self.step()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 540, in step\r\n    getattr(self, inst.opname)(inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 342, in wrapper\r\n    return inner_fn(self, inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1014, in CALL_FUNCTION_KW\r\n    self.call_function(fn, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 474, in call_function\r\n    self.push(fn.call_function(self, args, kwargs))\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/functions.py\", line 291, in call_function\r\n    return super().call_function(tx, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/functions.py\", line 259, in call_function\r\n    return super().call_function(tx, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/functions.py\", line 92, in call_function\r\n    return tx.inline_user_function_return(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 510, in inline_user_function_return\r\n    result = InliningInstructionTranslator.inline_call(self, fn, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1806, in inline_call\r\n    return cls.inline_call_(parent, func, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1862, in inline_call_\r\n    tracer.run()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 576, in run\r\n    and self.step()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 540, in step\r\n    getattr(self, inst.opname)(inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 342, in wrapper\r\n    return inner_fn(self, inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1014, in CALL_FUNCTION_KW\r\n    self.call_function(fn, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 474, in call_function\r\n    self.push(fn.call_function(self, args, kwargs))\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/functions.py\", line 291, in call_function\r\n    return super().call_function(tx, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/functions.py\", line 259, in call_function\r\n    return super().call_function(tx, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/functions.py\", line 92, in call_function\r\n    return tx.inline_user_function_return(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 510, in inline_user_function_return\r\n    result = InliningInstructionTranslator.inline_call(self, fn, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1806, in inline_call\r\n    return cls.inline_call_(parent, func, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1862, in inline_call_\r\n    tracer.run()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 576, in run\r\n    and self.step()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 540, in step\r\n    getattr(self, inst.opname)(inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 342, in wrapper\r\n    return inner_fn(self, inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1014, in CALL_FUNCTION_KW\r\n    self.call_function(fn, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 474, in call_function\r\n    self.push(fn.call_function(self, args, kwargs))\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/nn_module.py\", line 244, in call_function\r\n    return tx.inline_user_function_return(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 510, in inline_user_function_return\r\n    result = InliningInstructionTranslator.inline_call(self, fn, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1806, in inline_call\r\n    return cls.inline_call_(parent, func, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1862, in inline_call_\r\n    tracer.run()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 576, in run\r\n    and self.step()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 540, in step\r\n    getattr(self, inst.opname)(inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 342, in wrapper\r\n    return inner_fn(self, inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 965, in CALL_FUNCTION\r\n    self.call_function(fn, args, {})\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 474, in call_function\r\n    self.push(fn.call_function(self, args, kwargs))\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/nn_module.py\", line 244, in call_function\r\n    return tx.inline_user_function_return(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 510, in inline_user_function_return\r\n    result = InliningInstructionTranslator.inline_call(self, fn, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1806, in inline_call\r\n    return cls.inline_call_(parent, func, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1862, in inline_call_\r\n    tracer.run()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 576, in run\r\n    and self.step()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 540, in step\r\n    getattr(self, inst.opname)(inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 342, in wrapper\r\n    return inner_fn(self, inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 965, in CALL_FUNCTION\r\n    self.call_function(fn, args, {})\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 474, in call_function\r\n    self.push(fn.call_function(self, args, kwargs))\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/functions.py\", line 92, in call_function\r\n    return tx.inline_user_function_return(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 510, in inline_user_function_return\r\n    result = InliningInstructionTranslator.inline_call(self, fn, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1806, in inline_call\r\n    return cls.inline_call_(parent, func, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1862, in inline_call_\r\n    tracer.run()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 576, in run\r\n    and self.step()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 540, in step\r\n    getattr(self, inst.opname)(inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 342, in wrapper\r\n    return inner_fn(self, inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 965, in CALL_FUNCTION\r\n    self.call_function(fn, args, {})\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 474, in call_function\r\n    self.push(fn.call_function(self, args, kwargs))\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/nn_module.py\", line 244, in call_function\r\n    return tx.inline_user_function_return(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 510, in inline_user_function_return\r\n    result = InliningInstructionTranslator.inline_call(self, fn, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1806, in inline_call\r\n    return cls.inline_call_(parent, func, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1862, in inline_call_\r\n    tracer.run()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 576, in run\r\n    and self.step()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 540, in step\r\n    getattr(self, inst.opname)(inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 342, in wrapper\r\n    return inner_fn(self, inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1014, in CALL_FUNCTION_KW\r\n    self.call_function(fn, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 474, in call_function\r\n    self.push(fn.call_function(self, args, kwargs))\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/functions.py\", line 291, in call_function\r\n    return super().call_function(tx, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/functions.py\", line 259, in call_function\r\n    return super().call_function(tx, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/functions.py\", line 92, in call_function\r\n    return tx.inline_user_function_return(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 510, in inline_user_function_return\r\n    result = InliningInstructionTranslator.inline_call(self, fn, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1806, in inline_call\r\n    return cls.inline_call_(parent, func, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1862, in inline_call_\r\n    tracer.run()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 576, in run\r\n    and self.step()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 540, in step\r\n    getattr(self, inst.opname)(inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 342, in wrapper\r\n    return inner_fn(self, inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 965, in CALL_FUNCTION\r\n    self.call_function(fn, args, {})\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 474, in call_function\r\n    self.push(fn.call_function(self, args, kwargs))\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/functions.py\", line 259, in call_function\r\n    return super().call_function(tx, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/functions.py\", line 92, in call_function\r\n    return tx.inline_user_function_return(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 510, in inline_user_function_return\r\n    result = InliningInstructionTranslator.inline_call(self, fn, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1806, in inline_call\r\n    return cls.inline_call_(parent, func, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1862, in inline_call_\r\n    tracer.run()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 576, in run\r\n    and self.step()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 540, in step\r\n    getattr(self, inst.opname)(inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 342, in wrapper\r\n    return inner_fn(self, inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1014, in CALL_FUNCTION_KW\r\n    self.call_function(fn, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 474, in call_function\r\n    self.push(fn.call_function(self, args, kwargs))\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/functions.py\", line 259, in call_function\r\n    return super().call_function(tx, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/functions.py\", line 92, in call_function\r\n    return tx.inline_user_function_return(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 510, in inline_user_function_return\r\n    result = InliningInstructionTranslator.inline_call(self, fn, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1806, in inline_call\r\n    return cls.inline_call_(parent, func, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1862, in inline_call_\r\n    tracer.run()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 576, in run\r\n    and self.step()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 540, in step\r\n    getattr(self, inst.opname)(inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 342, in wrapper\r\n    return inner_fn(self, inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 965, in CALL_FUNCTION\r\n    self.call_function(fn, args, {})\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 474, in call_function\r\n    self.push(fn.call_function(self, args, kwargs))\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/functions.py\", line 259, in call_function\r\n    return super().call_function(tx, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/functions.py\", line 92, in call_function\r\n    return tx.inline_user_function_return(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 510, in inline_user_function_return\r\n    result = InliningInstructionTranslator.inline_call(self, fn, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1806, in inline_call\r\n    return cls.inline_call_(parent, func, args, kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1862, in inline_call_\r\n    tracer.run()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 576, in run\r\n    and self.step()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 540, in step\r\n    getattr(self, inst.opname)(inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 342, in wrapper\r\n    return inner_fn(self, inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 965, in CALL_FUNCTION\r\n    self.call_function(fn, args, {})\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 474, in call_function\r\n    self.push(fn.call_function(self, args, kwargs))\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/torch.py\", line 548, in call_function\r\n    tensor_variable = wrap_fx_proxy(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/builder.py\", line 754, in wrap_fx_proxy\r\n    return wrap_fx_proxy_cls(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/variables/builder.py\", line 789, in wrap_fx_proxy_cls\r\n    example_value = get_fake_value(proxy.node, tx)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/utils.py\", line 1173, in get_fake_value\r\n    raise TorchRuntimeError() from e\r\ntorch._dynamo.exc.TorchRuntimeError: \r\n\r\nfrom user code:\r\n   File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch_scatter/scatter.py\", line 158, in scatter\r\n    return scatter_min(src, index, dim, out, dim_size)[0]\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch_scatter/scatter.py\", line 65, in scatter_min\r\n    return torch.ops.torch_scatter.scatter_min(src, index, dim, out, dim_size)\r\n\r\nSet torch._dynamo.config.verbose=True for more information\r\n\r\n\r\nYou can suppress this exception and fall back to eager by setting:\r\n    torch._dynamo.config.suppress_errors = True\r\n```\r\n\r\nA custom MPNN model only doing max aggregation also fails with the same error:\r\n```Python\r\nimport torch\r\nfrom torch import Tensor\r\nimport torch.nn as nn\r\nimport torch_geometric\r\nimport torch_geometric.nn\r\nfrom torch_geometric.typing import Adj\r\nclass MPNN(torch_geometric.nn.MessagePassing):\r\n\r\n    def __init__(self, in_channels, out_channels, aggr='mean', bias=False, flow='source_to_target', num_layers=3):\r\n        super(MPNN, self).__init__(aggr=aggr, flow=flow)\r\n        modules = [nn.Linear(2*in_channels, out_channels, bias=bias)]\r\n        for _ in range(num_layers):\r\n            modules.extend([nn.LeakyReLU(),\r\n                            nn.Linear(out_channels, out_channels, bias=bias)])\r\n        self.M = nn.Sequential(*modules)\r\n        self.out_channels = out_channels\r\n\r\n    def forward(self, x: Tensor, edge_index: Adj):\r\n        # propagate_type: (x: Tensor)\r\n        return self.propagate(edge_index, x=x)\r\n\r\n    def message(self, x_i: Tensor, x_j: Tensor):\r\n        return self.M(torch.cat((x_i, x_j), dim=1))\r\n\r\n    def update(self, aggr_out: Tensor, x: Tensor):\r\n        return aggr_out\r\n\r\ndevice='cuda'\r\nx = torch.randn(3, 32, device=device)\r\nedge_index = torch.tensor([[0, 1, 1, 2], [1, 0, 2, 1]], device=device)\r\n\r\n# model = torch_geometric.nn.PNAConv(32, 32, ['min', 'max'], ['identity'], torch.tensor([1,2,1])).to(device)\r\nmodel = MPNN(32, 32, aggr='max', bias=True).to(device)\r\ncompiled_model = torch_geometric.compile(model)\r\n\r\nexpected = model(x, edge_index)\r\nout = compiled_model(x, edge_index)\r\nassert torch.allclose(out, expected, atol=1e-6)\r\n```\r\n\r\n`mean` and `sum` aggregation work just fine with the MPNN model above, though they fail with a different error with PNAConv. For me, it is more critical to have a working max/min aggregation with the MPNN, but for the sake of completeness here is the other error:\r\n```\r\n/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:90: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.\r\n  warnings.warn(\r\nTraceback (most recent call last):\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/output_graph.py\", line 670, in call_user_compiler\r\n    compiled_fn = compiler_fn(gm, self.fake_example_inputs())\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/debug_utils.py\", line 1055, in debug_wrapper\r\n    compiled_gm = compiler_fn(gm, example_inputs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/__init__.py\", line 1390, in __call__\r\n    return compile_fx(model_, inputs_, config_patches=self.config)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_inductor/compile_fx.py\", line 455, in compile_fx\r\n    return aot_autograd(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/backends/common.py\", line 48, in compiler_fn\r\n    cg = aot_module_simplified(gm, example_inputs, **kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_functorch/aot_autograd.py\", line 2805, in aot_module_simplified\r\n    compiled_fn = create_aot_dispatcher_function(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/utils.py\", line 163, in time_wrapper\r\n    r = func(*args, **kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_functorch/aot_autograd.py\", line 2498, in create_aot_dispatcher_function\r\n    compiled_fn = compiler_fn(flat_fn, fake_flat_args, aot_config)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_functorch/aot_autograd.py\", line 1713, in aot_wrapper_dedupe\r\n    return compiler_fn(flat_fn, leaf_flat_args, aot_config)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_functorch/aot_autograd.py\", line 2133, in aot_dispatch_autograd\r\n    compiled_fw_func = aot_config.fw_compiler(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/utils.py\", line 163, in time_wrapper\r\n    r = func(*args, **kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_inductor/compile_fx.py\", line 430, in fw_compiler\r\n    return inner_compile(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/debug_utils.py\", line 595, in debug_wrapper\r\n    compiled_fn = compiler_fn(gm, example_inputs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_inductor/debug.py\", line 239, in inner\r\n    return fn(*args, **kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/contextlib.py\", line 79, in inner\r\n    return func(*args, **kwds)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_inductor/compile_fx.py\", line 177, in compile_fx_inner\r\n    compiled_fn = graph.compile_to_fn()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_inductor/graph.py\", line 586, in compile_to_fn\r\n    return self.compile_to_module().call\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/utils.py\", line 163, in time_wrapper\r\n    r = func(*args, **kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_inductor/graph.py\", line 571, in compile_to_module\r\n    code = self.codegen()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_inductor/graph.py\", line 522, in codegen\r\n    self.scheduler.codegen()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/utils.py\", line 163, in time_wrapper\r\n    r = func(*args, **kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_inductor/scheduler.py\", line 1165, in codegen\r\n    self.codegen_extern_call(node)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_inductor/scheduler.py\", line 1100, in codegen_extern_call\r\n    scheduler_node.allocate()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_inductor/scheduler.py\", line 262, in allocate\r\n    V.graph.wrapper_code.codegen_allocation(self.node)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_inductor/codegen/wrapper.py\", line 393, in codegen_allocation\r\n    assert isinstance(layout.view, ir.ReinterpretView)\r\nAssertionError\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/dobrik/co-nar/../test4e.py\", line 37, in <module>\r\n    out = compiled_model(x, edge_index)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/nn/modules/module.py\", line 1501, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py\", line 82, in forward\r\n    return self.dynamo_ctx(self._orig_mod.forward)(*args, **kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py\", line 209, in _fn\r\n    return fn(*args, **kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py\", line 337, in catch_errors\r\n    return callback(frame, cache_size, hooks)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py\", line 404, in _convert_frame\r\n    result = inner_convert(frame, cache_size, hooks)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py\", line 104, in _fn\r\n    return fn(*args, **kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py\", line 262, in _convert_frame_assert\r\n    return _compile(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/utils.py\", line 163, in time_wrapper\r\n    r = func(*args, **kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py\", line 324, in _compile\r\n    out_code = transform_code_object(code, transform)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/bytecode_transformation.py\", line 445, in transform_code_object\r\n    transformations(instructions, code_options)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py\", line 311, in transform\r\n    tracer.run()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1726, in run\r\n    super().run()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 576, in run\r\n    and self.step()\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 540, in step\r\n    getattr(self, inst.opname)(inst)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py\", line 1792, in RETURN_VALUE\r\n    self.output.compile_subgraph(\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/output_graph.py\", line 517, in compile_subgraph\r\n    self.compile_and_call_fx_graph(tx, list(reversed(stack_values)), root)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/output_graph.py\", line 588, in compile_and_call_fx_graph\r\n    compiled_fn = self.call_user_compiler(gm)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/utils.py\", line 163, in time_wrapper\r\n    r = func(*args, **kwargs)\r\n  File \"/home/dobrik/anaconda3/envs/customenv-pt2/lib/python3.10/site-packages/torch/_dynamo/output_graph.py\", line 675, in call_user_compiler\r\n    raise BackendCompilerFailed(self.compiler_fn, e) from e\r\ntorch._dynamo.exc.BackendCompilerFailed: debug_wrapper raised AssertionError: \r\n\r\nSet torch._dynamo.config.verbose=True for more information\r\n\r\n\r\nYou can suppress this exception and fall back to eager by setting:\r\n    torch._dynamo.config.suppress_errors = True\r\n```\r\n\r\n(adding the verbose flag did not give any different logs)\n\n### Environment\n\n* PyG version: 2.3.0\r\n* PyTorch version: 2.0.0+cu117\r\n* OS: Ubuntu 20.04\r\n* Python version: 3.10.9\r\n* CUDA/cuDNN version: 11.7\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): source\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): `torch_scatter` is 2.1.1 `torch_sparse` is 0.6.17 (both installed from source)\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7004/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7003", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7003/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7003/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7003/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7003", "id": 1635378795, "node_id": "PR_kwDOBlHMec5Mn3IK", "number": 7003, "title": "Always apply attention for destination nodes in `GATConv`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 1267385588, "node_id": "MDU6TGFiZWwxMjY3Mzg1NTg4", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/feature", "name": "feature", "color": "a2eeef", "default": false, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-03-22T09:28:44Z", "updated_at": "2023-03-22T09:30:02Z", "closed_at": "2023-03-22T09:30:02Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7003", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7003", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7003.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7003.patch", "merged_at": null}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7003/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7002", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7002/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7002/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7002/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7002", "id": 1635290892, "node_id": "PR_kwDOBlHMec5Mnj5K", "number": 7002, "title": "`torch.compile(model, dynamic=True)` test", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 4017636777, "node_id": "LA_kwDOBlHMec7veEWp", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/example", "name": "example", "color": "27D88A", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-22T08:37:56Z", "updated_at": "2023-03-22T09:28:18Z", "closed_at": "2023-03-22T09:28:17Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7002", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7002", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7002.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7002.patch", "merged_at": "2023-03-22T09:28:17Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7002/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7001", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7001/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7001/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7001/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7001", "id": 1635234290, "node_id": "PR_kwDOBlHMec5MnX06", "number": 7001, "title": "Fix typo in CPU affinity tutorial", "user": {"login": "JakubPietrakIntel", "id": 97102979, "node_id": "U_kgDOBcmsgw", "avatar_url": "https://avatars.githubusercontent.com/u/97102979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakubPietrakIntel", "html_url": "https://github.com/JakubPietrakIntel", "followers_url": "https://api.github.com/users/JakubPietrakIntel/followers", "following_url": "https://api.github.com/users/JakubPietrakIntel/following{/other_user}", "gists_url": "https://api.github.com/users/JakubPietrakIntel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakubPietrakIntel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakubPietrakIntel/subscriptions", "organizations_url": "https://api.github.com/users/JakubPietrakIntel/orgs", "repos_url": "https://api.github.com/users/JakubPietrakIntel/repos", "events_url": "https://api.github.com/users/JakubPietrakIntel/events{/privacy}", "received_events_url": "https://api.github.com/users/JakubPietrakIntel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-03-22T07:51:32Z", "updated_at": "2023-03-22T08:47:30Z", "closed_at": "2023-03-22T08:47:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/7001", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/7001", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/7001.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/7001.patch", "merged_at": "2023-03-22T08:47:28Z"}, "body": "Fix typo in manual training time **decreased** (was increased)", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/7001/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6998", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6998/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6998/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6998/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6998", "id": 1635119308, "node_id": "PR_kwDOBlHMec5Mm_MK", "number": 6998, "title": "Fix `HeteroDictLinear` documentation", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-22T06:02:39Z", "updated_at": "2023-03-22T06:16:59Z", "closed_at": "2023-03-22T06:16:58Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6998", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6998", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6998.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6998.patch", "merged_at": "2023-03-22T06:16:58Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6998/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6993", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6993/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6993/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6993/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6993", "id": 1634702395, "node_id": "PR_kwDOBlHMec5Mlmsz", "number": 6993, "title": "Update type hints for `HeteroData`", "user": {"login": "binh-vu", "id": 4346739, "node_id": "MDQ6VXNlcjQzNDY3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/4346739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binh-vu", "html_url": "https://github.com/binh-vu", "followers_url": "https://api.github.com/users/binh-vu/followers", "following_url": "https://api.github.com/users/binh-vu/following{/other_user}", "gists_url": "https://api.github.com/users/binh-vu/gists{/gist_id}", "starred_url": "https://api.github.com/users/binh-vu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binh-vu/subscriptions", "organizations_url": "https://api.github.com/users/binh-vu/orgs", "repos_url": "https://api.github.com/users/binh-vu/repos", "events_url": "https://api.github.com/users/binh-vu/events{/privacy}", "received_events_url": "https://api.github.com/users/binh-vu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "binh-vu", "id": 4346739, "node_id": "MDQ6VXNlcjQzNDY3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/4346739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binh-vu", "html_url": "https://github.com/binh-vu", "followers_url": "https://api.github.com/users/binh-vu/followers", "following_url": "https://api.github.com/users/binh-vu/following{/other_user}", "gists_url": "https://api.github.com/users/binh-vu/gists{/gist_id}", "starred_url": "https://api.github.com/users/binh-vu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binh-vu/subscriptions", "organizations_url": "https://api.github.com/users/binh-vu/orgs", "repos_url": "https://api.github.com/users/binh-vu/repos", "events_url": "https://api.github.com/users/binh-vu/events{/privacy}", "received_events_url": "https://api.github.com/users/binh-vu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "binh-vu", "id": 4346739, "node_id": "MDQ6VXNlcjQzNDY3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/4346739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binh-vu", "html_url": "https://github.com/binh-vu", "followers_url": "https://api.github.com/users/binh-vu/followers", "following_url": "https://api.github.com/users/binh-vu/following{/other_user}", "gists_url": "https://api.github.com/users/binh-vu/gists{/gist_id}", "starred_url": "https://api.github.com/users/binh-vu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binh-vu/subscriptions", "organizations_url": "https://api.github.com/users/binh-vu/orgs", "repos_url": "https://api.github.com/users/binh-vu/repos", "events_url": "https://api.github.com/users/binh-vu/events{/privacy}", "received_events_url": "https://api.github.com/users/binh-vu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-21T21:18:48Z", "updated_at": "2023-03-22T05:25:06Z", "closed_at": "2023-03-22T05:25:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6993", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6993", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6993.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6993.patch", "merged_at": "2023-03-22T05:25:05Z"}, "body": "According to [PEP 484](https://peps.python.org/pep-0484/#arbitrary-argument-lists-and-default-argument-values), variable positional arguments (*args) only need to specify the expected value for one such argument.\r\n\r\nThis PR will fix the warning from Pylance (in vscode) when assigning data in HeteroData as follow (code from tutorial):\r\n\r\n```python\r\nfrom torch_geometric.data import HeteroData\r\n\r\ndata = HeteroData()\r\n\r\ndata['paper'].x = ... # Pylance will complain but won't for data[('paper',)].x = . This PR will fix that\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6993/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6991", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6991/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6991/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6991/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6991", "id": 1634285646, "node_id": "PR_kwDOBlHMec5MkNtd", "number": 6991, "title": "Fix CI tests", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-03-21T16:24:42Z", "updated_at": "2023-03-21T18:56:26Z", "closed_at": "2023-03-21T18:56:25Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6991", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6991", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6991.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6991.patch", "merged_at": "2023-03-21T18:56:25Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6991/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6990", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6990/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6990/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6990/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6990", "id": 1633965733, "node_id": "PR_kwDOBlHMec5MjITj", "number": 6990, "title": "Fixed some typos in doc-strings", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}, {"id": 4601575641, "node_id": "LA_kwDOBlHMec8AAAABEkZ42Q", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/utils", "name": "utils", "color": "DBC48C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-03-21T13:47:58Z", "updated_at": "2023-03-21T15:45:17Z", "closed_at": "2023-03-21T15:45:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6990", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6990", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6990.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6990.patch", "merged_at": "2023-03-21T15:45:16Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6990/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6990/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6972", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6972/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6972/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6972/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6972", "id": 1631323006, "node_id": "PR_kwDOBlHMec5MaMki", "number": 6972, "title": "Fix `to_csc` in cugraph models", "user": {"login": "tingyu66", "id": 6955356, "node_id": "MDQ6VXNlcjY5NTUzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/6955356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tingyu66", "html_url": "https://github.com/tingyu66", "followers_url": "https://api.github.com/users/tingyu66/followers", "following_url": "https://api.github.com/users/tingyu66/following{/other_user}", "gists_url": "https://api.github.com/users/tingyu66/gists{/gist_id}", "starred_url": "https://api.github.com/users/tingyu66/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tingyu66/subscriptions", "organizations_url": "https://api.github.com/users/tingyu66/orgs", "repos_url": "https://api.github.com/users/tingyu66/repos", "events_url": "https://api.github.com/users/tingyu66/events{/privacy}", "received_events_url": "https://api.github.com/users/tingyu66/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "tingyu66", "id": 6955356, "node_id": "MDQ6VXNlcjY5NTUzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/6955356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tingyu66", "html_url": "https://github.com/tingyu66", "followers_url": "https://api.github.com/users/tingyu66/followers", "following_url": "https://api.github.com/users/tingyu66/following{/other_user}", "gists_url": "https://api.github.com/users/tingyu66/gists{/gist_id}", "starred_url": "https://api.github.com/users/tingyu66/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tingyu66/subscriptions", "organizations_url": "https://api.github.com/users/tingyu66/orgs", "repos_url": "https://api.github.com/users/tingyu66/repos", "events_url": "https://api.github.com/users/tingyu66/events{/privacy}", "received_events_url": "https://api.github.com/users/tingyu66/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tingyu66", "id": 6955356, "node_id": "MDQ6VXNlcjY5NTUzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/6955356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tingyu66", "html_url": "https://github.com/tingyu66", "followers_url": "https://api.github.com/users/tingyu66/followers", "following_url": "https://api.github.com/users/tingyu66/following{/other_user}", "gists_url": "https://api.github.com/users/tingyu66/gists{/gist_id}", "starred_url": "https://api.github.com/users/tingyu66/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tingyu66/subscriptions", "organizations_url": "https://api.github.com/users/tingyu66/orgs", "repos_url": "https://api.github.com/users/tingyu66/repos", "events_url": "https://api.github.com/users/tingyu66/events{/privacy}", "received_events_url": "https://api.github.com/users/tingyu66/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-20T03:38:38Z", "updated_at": "2023-03-20T15:02:22Z", "closed_at": "2023-03-20T14:42:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6972", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6972", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6972.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6972.patch", "merged_at": "2023-03-20T14:42:14Z"}, "body": "This PR:\r\n- fixes the bug in `to_csc()` when `size` is not given, since PyG uses the same subgraph over all layers.\r\n- absorb `num_src_nodes` into the `csc` tuple to make `get_cugraph` more concise\r\n- misc: no longer allow identity node feature tensor (by setting `x=None`) in RGCN. It is an oversight from me in the previous PR to not remove it, since this is memory-inefficient\r\n\r\nCC: @MatthiasKohl, @puririshi98 ", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6972/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6968", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6968/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6968/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6968/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6968", "id": 1631052212, "node_id": "PR_kwDOBlHMec5MZVNO", "number": 6968, "title": "Let `RandomLinkSplit` work on non-contiguous representations", "user": {"login": "ZihanChen1995", "id": 36064256, "node_id": "MDQ6VXNlcjM2MDY0MjU2", "avatar_url": "https://avatars.githubusercontent.com/u/36064256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZihanChen1995", "html_url": "https://github.com/ZihanChen1995", "followers_url": "https://api.github.com/users/ZihanChen1995/followers", "following_url": "https://api.github.com/users/ZihanChen1995/following{/other_user}", "gists_url": "https://api.github.com/users/ZihanChen1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZihanChen1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZihanChen1995/subscriptions", "organizations_url": "https://api.github.com/users/ZihanChen1995/orgs", "repos_url": "https://api.github.com/users/ZihanChen1995/repos", "events_url": "https://api.github.com/users/ZihanChen1995/events{/privacy}", "received_events_url": "https://api.github.com/users/ZihanChen1995/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052698076, "node_id": "LA_kwDOBlHMec7xj0Pc", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/transform", "name": "transform", "color": "480283", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ZihanChen1995", "id": 36064256, "node_id": "MDQ6VXNlcjM2MDY0MjU2", "avatar_url": "https://avatars.githubusercontent.com/u/36064256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZihanChen1995", "html_url": "https://github.com/ZihanChen1995", "followers_url": "https://api.github.com/users/ZihanChen1995/followers", "following_url": "https://api.github.com/users/ZihanChen1995/following{/other_user}", "gists_url": "https://api.github.com/users/ZihanChen1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZihanChen1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZihanChen1995/subscriptions", "organizations_url": "https://api.github.com/users/ZihanChen1995/orgs", "repos_url": "https://api.github.com/users/ZihanChen1995/repos", "events_url": "https://api.github.com/users/ZihanChen1995/events{/privacy}", "received_events_url": "https://api.github.com/users/ZihanChen1995/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ZihanChen1995", "id": 36064256, "node_id": "MDQ6VXNlcjM2MDY0MjU2", "avatar_url": "https://avatars.githubusercontent.com/u/36064256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZihanChen1995", "html_url": "https://github.com/ZihanChen1995", "followers_url": "https://api.github.com/users/ZihanChen1995/followers", "following_url": "https://api.github.com/users/ZihanChen1995/following{/other_user}", "gists_url": "https://api.github.com/users/ZihanChen1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZihanChen1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZihanChen1995/subscriptions", "organizations_url": "https://api.github.com/users/ZihanChen1995/orgs", "repos_url": "https://api.github.com/users/ZihanChen1995/repos", "events_url": "https://api.github.com/users/ZihanChen1995/events{/privacy}", "received_events_url": "https://api.github.com/users/ZihanChen1995/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-19T17:59:29Z", "updated_at": "2023-03-20T14:24:34Z", "closed_at": "2023-03-20T14:24:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6968", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6968", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6968.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6968.patch", "merged_at": "2023-03-20T14:24:33Z"}, "body": "Hi, this PR aims to fix the unexpected crashes on Google Colab. When using the customized dataset to build the `HeteroData()`, if the edge lists are not contiguous, an unexpected crash will occur without any warning messages. Hence, I added a precheck here. \r\n\r\nMore details can be found in [ISSUE #6925](https://github.com/pyg-team/pytorch_geometric/issues/6925).", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6968/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6965", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6965/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6965/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6965/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6965", "id": 1630843890, "node_id": "I_kwDOBlHMec5hNLPy", "number": 6965, "title": "GIN Classification GPU reproduce with the T.ToSparseTensor().", "user": {"login": "kou18n", "id": 64201392, "node_id": "MDQ6VXNlcjY0MjAxMzky", "avatar_url": "https://avatars.githubusercontent.com/u/64201392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kou18n", "html_url": "https://github.com/kou18n", "followers_url": "https://api.github.com/users/kou18n/followers", "following_url": "https://api.github.com/users/kou18n/following{/other_user}", "gists_url": "https://api.github.com/users/kou18n/gists{/gist_id}", "starred_url": "https://api.github.com/users/kou18n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kou18n/subscriptions", "organizations_url": "https://api.github.com/users/kou18n/orgs", "repos_url": "https://api.github.com/users/kou18n/repos", "events_url": "https://api.github.com/users/kou18n/events{/privacy}", "received_events_url": "https://api.github.com/users/kou18n/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2023-03-19T08:53:37Z", "updated_at": "2023-03-22T05:11:36Z", "closed_at": "2023-03-22T05:11:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nSince the T.ToSparseTensor() can make deterministic on the GPU, I already tested the MUTAG dataset, it seems work.\r\n\r\nBut, on another dataset it does not work.\r\nI used the MalNetTiny dataset and \"T.LocalDegreeProfile(), T.ToSparseTensor()\" to do the graph classifaction task.\r\nThe  results can not reproduce.\r\nCould you help me, thank you very much.\r\n\r\n```\r\nimport os.path as osp\r\nimport numpy as np\r\nimport torch,random,os\r\nimport torch.nn.functional as F\r\nfrom torch.nn import BatchNorm1d, Linear, ReLU, Sequential\r\n\r\nfrom torch_geometric.datasets import MalNetTiny\r\nfrom torch_geometric.loader import DataLoader\r\nfrom torch_geometric.nn import GINConv, global_add_pool\r\nimport torch_geometric.transforms as T\r\n\r\ndef seed_everything(seed=0):                                                  \r\n    random.seed(seed)                                                            \r\n    torch.manual_seed(seed)                                                      \r\n    torch.cuda.manual_seed_all(seed)                                             \r\n    np.random.seed(seed)                                                         \r\n    os.environ['PYTHONHASHSEED'] = str(seed)                                     \r\n    torch.backends.cudnn.deterministic = True                                    \r\n    torch.backends.cudnn.benchmark = False \r\n\r\nseed_everything()\r\n\r\n# %env CUBLAS_WORKSPACE_CONFIG=:4096:8\r\n\r\npre_transform = T.Compose([ T.RemoveIsolatedNodes() ,T.AddSelfLoops(), T.LocalDegreeProfile(), T.ToSparseTensor()])\r\n\r\ntrain_dataset = MalNetTiny(root='/home/xxxx/Datasets/MalNetTiny', split='train', pre_transform=pre_transform)\r\nval_dataset = MalNetTiny(root='/home/xxxx/Datasets/MalNetTiny', split='val', pre_transform=pre_transform)\r\ntest_dataset = MalNetTiny(root='/home/xxxx/Datasets/MalNetTiny', split='test', pre_transform=pre_transform)\r\n\r\nprint('-------------------')\r\nprint(f'Training set   = {len(train_dataset)} graphs')\r\nprint(f'Validation set = {len(val_dataset)} graphs')\r\nprint(f'Test set       = {len(test_dataset)} graphs')\r\n\r\ntrain_loader = DataLoader(train_dataset, 128, shuffle=True, pin_memory=True)\r\nval_loader = DataLoader(val_dataset, 128, shuffle=False)\r\ntest_loader = DataLoader(test_dataset, 128, shuffle=False)\r\n\r\nclass Net(torch.nn.Module):\r\n    def __init__(self, in_channels, dim, out_channels):\r\n        super().__init__()\r\n\r\n        self.conv1 = GINConv(\r\n            Sequential(Linear(in_channels, dim), BatchNorm1d(dim), ReLU(),\r\n                       Linear(dim, dim), ReLU()))\r\n\r\n        self.conv2 = GINConv(\r\n            Sequential(Linear(dim, dim), BatchNorm1d(dim), ReLU(),\r\n                       Linear(dim, dim), ReLU()))\r\n\r\n        self.conv3 = GINConv(\r\n            Sequential(Linear(dim, dim), BatchNorm1d(dim), ReLU(),\r\n                       Linear(dim, dim), ReLU()))\r\n\r\n        self.conv4 = GINConv(\r\n            Sequential(Linear(dim, dim), BatchNorm1d(dim), ReLU(),\r\n                       Linear(dim, dim), ReLU()))\r\n\r\n        self.conv5 = GINConv(\r\n            Sequential(Linear(dim, dim), BatchNorm1d(dim), ReLU(),\r\n                       Linear(dim, dim), ReLU()))\r\n\r\n        self.lin1 = Linear(dim, dim)\r\n        self.lin2 = Linear(dim, out_channels)\r\n\r\n    def forward(self, x, edge_index, batch):\r\n        x = self.conv1(x, edge_index)\r\n        x = self.conv2(x, edge_index)\r\n        x = self.conv3(x, edge_index)\r\n        x = self.conv4(x, edge_index)\r\n        x = self.conv5(x, edge_index)\r\n        x = global_add_pool(x, batch)\r\n        x = self.lin1(x).relu()\r\n        x = F.dropout(x, p=0.5, training=self.training)\r\n        x = self.lin2(x)\r\n        return F.log_softmax(x, dim=-1)\r\n\r\n\r\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\r\nmodel = Net(train_dataset.num_features, 32, train_dataset.num_classes).to(device)\r\noptimizer = torch.optim.Adam(model.parameters(), lr=0.01)\r\n\r\n\r\ndef train():\r\n    model.train()\r\n\r\n    total_loss = 0\r\n    for data in train_loader:\r\n        data = data.to(device)\r\n        optimizer.zero_grad()\r\n        output = model(data.x, data.adj_t, data.batch)\r\n        loss = F.nll_loss(output, data.y)\r\n        loss.backward()\r\n        optimizer.step()\r\n        total_loss += float(loss) * data.num_graphs\r\n    return total_loss / len(train_loader.dataset)\r\n\r\n\r\n@torch.no_grad()\r\ndef test(loader):\r\n    model.eval()\r\n\r\n    total_correct = 0\r\n    for data in loader:\r\n        data = data.to(device)\r\n        out = model(data.x, data.adj_t, data.batch)\r\n        total_correct += int((out.argmax(-1) == data.y).sum())\r\n    return total_correct / len(loader.dataset)\r\n\r\n\r\nfor epoch in range(1, 6):\r\n    loss = train()\r\n    train_acc = test(train_loader)\r\n    test_acc = test(test_loader)\r\n    print(f'Epoch: {epoch:03d}, Loss: {loss:.4f}, Train Acc: {train_acc:.4f} '\r\n          f'Test Acc: {test_acc:.4f}')\r\n\r\n```\r\n### Results\r\n```\r\nEpoch: 001, Loss: 8.3478, Train Acc: 0.4340 Test Acc: 0.4390\r\nEpoch: 002, Loss: 1.5464, Train Acc: 0.4143 Test Acc: 0.4040\r\nEpoch: 003, Loss: 1.5208, Train Acc: 0.4411 Test Acc: 0.4380\r\nEpoch: 004, Loss: 1.4943, Train Acc: 0.3643 Test Acc: 0.3820\r\nEpoch: 005, Loss: 1.5019, Train Acc: 0.4706 Test Acc: 0.4630\r\n```\r\n\r\n```\r\nEpoch: 001, Loss: 8.3515, Train Acc: 0.4311 Test Acc: 0.4310\r\nEpoch: 002, Loss: 1.5483, Train Acc: 0.4160 Test Acc: 0.4060\r\nEpoch: 003, Loss: 1.5173, Train Acc: 0.4017 Test Acc: 0.4100\r\nEpoch: 004, Loss: 1.4961, Train Acc: 0.3634 Test Acc: 0.3750\r\nEpoch: 005, Loss: 1.5024, Train Acc: 0.4411 Test Acc: 0.4310\r\n```\r\n\r\n### Environment\r\n\r\n* PyG version:\r\n* PyTorch version:\r\n* OS:\r\n* Python version:\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6965/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6944", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6944/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6944/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6944/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6944", "id": 1629269990, "node_id": "PR_kwDOBlHMec5MTemr", "number": 6944, "title": "Fix typo in `AddRandomWalkPE` documentation", "user": {"login": "aurorarossi", "id": 65721467, "node_id": "MDQ6VXNlcjY1NzIxNDY3", "avatar_url": "https://avatars.githubusercontent.com/u/65721467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aurorarossi", "html_url": "https://github.com/aurorarossi", "followers_url": "https://api.github.com/users/aurorarossi/followers", "following_url": "https://api.github.com/users/aurorarossi/following{/other_user}", "gists_url": "https://api.github.com/users/aurorarossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/aurorarossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aurorarossi/subscriptions", "organizations_url": "https://api.github.com/users/aurorarossi/orgs", "repos_url": "https://api.github.com/users/aurorarossi/repos", "events_url": "https://api.github.com/users/aurorarossi/events{/privacy}", "received_events_url": "https://api.github.com/users/aurorarossi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "aurorarossi", "id": 65721467, "node_id": "MDQ6VXNlcjY1NzIxNDY3", "avatar_url": "https://avatars.githubusercontent.com/u/65721467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aurorarossi", "html_url": "https://github.com/aurorarossi", "followers_url": "https://api.github.com/users/aurorarossi/followers", "following_url": "https://api.github.com/users/aurorarossi/following{/other_user}", "gists_url": "https://api.github.com/users/aurorarossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/aurorarossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aurorarossi/subscriptions", "organizations_url": "https://api.github.com/users/aurorarossi/orgs", "repos_url": "https://api.github.com/users/aurorarossi/repos", "events_url": "https://api.github.com/users/aurorarossi/events{/privacy}", "received_events_url": "https://api.github.com/users/aurorarossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aurorarossi", "id": 65721467, "node_id": "MDQ6VXNlcjY1NzIxNDY3", "avatar_url": "https://avatars.githubusercontent.com/u/65721467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aurorarossi", "html_url": "https://github.com/aurorarossi", "followers_url": "https://api.github.com/users/aurorarossi/followers", "following_url": "https://api.github.com/users/aurorarossi/following{/other_user}", "gists_url": "https://api.github.com/users/aurorarossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/aurorarossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aurorarossi/subscriptions", "organizations_url": "https://api.github.com/users/aurorarossi/orgs", "repos_url": "https://api.github.com/users/aurorarossi/repos", "events_url": "https://api.github.com/users/aurorarossi/events{/privacy}", "received_events_url": "https://api.github.com/users/aurorarossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-17T12:55:51Z", "updated_at": "2023-03-17T15:17:08Z", "closed_at": "2023-03-17T15:17:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6944", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6944", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6944.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6944.patch", "merged_at": "2023-03-17T15:17:08Z"}, "body": "This PR fix the documentation of `AddRandomWalkPE` where it was written that the default attribute was `\"laplacian_eigenvector_pe\"` which is the one of `AddLaplacianEigenvectorPE`.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6944/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6938", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6938/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6938/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6938/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6938", "id": 1628881498, "node_id": "PR_kwDOBlHMec5MSLfg", "number": 6938, "title": "Fixx nightly tests on Windows", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-17T08:09:50Z", "updated_at": "2023-03-17T08:20:45Z", "closed_at": "2023-03-17T08:20:44Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6938", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6938", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6938.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6938.patch", "merged_at": "2023-03-17T08:20:44Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6938/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6925", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6925/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6925/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6925/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6925", "id": 1626657171, "node_id": "I_kwDOBlHMec5g9NGT", "number": 6925, "title": "LinkNeighborLoader crashed on Google Colab, even when the batch_size = 1.", "user": {"login": "ZihanChen1995", "id": 36064256, "node_id": "MDQ6VXNlcjM2MDY0MjU2", "avatar_url": "https://avatars.githubusercontent.com/u/36064256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZihanChen1995", "html_url": "https://github.com/ZihanChen1995", "followers_url": "https://api.github.com/users/ZihanChen1995/followers", "following_url": "https://api.github.com/users/ZihanChen1995/following{/other_user}", "gists_url": "https://api.github.com/users/ZihanChen1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZihanChen1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZihanChen1995/subscriptions", "organizations_url": "https://api.github.com/users/ZihanChen1995/orgs", "repos_url": "https://api.github.com/users/ZihanChen1995/repos", "events_url": "https://api.github.com/users/ZihanChen1995/events{/privacy}", "received_events_url": "https://api.github.com/users/ZihanChen1995/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-03-16T03:45:27Z", "updated_at": "2023-03-30T03:33:49Z", "closed_at": "2023-03-30T03:33:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nHi, I am trying to run an experiment with `HeteroData()` on Google Colab. First, I load the data and split it into train/val/test using `RandomLinkSplit`. Since my graph is quite large, then I use the `LinkNeighborLoader` for sampling. \r\n\r\n**However, whenever I run the `train_loader = LinkNeighborLoader()`, the session crashes after 2-3 seconds. The crash occurs even I set the batch size as 1. May I ask what causes this to happen, and what can I do to fix it? Thank you!**\r\n\r\n---\r\n\r\nHere are the code details:\r\n\r\n```\r\nimport torch_geometric.transforms as T\r\nimport torch_geometric.utils as U\r\n\r\n# RandomLinkSplit\r\ntransform = T.RandomLinkSplit(\r\n    num_val=0.2,  \r\n    num_test=0.1,  \r\n    disjoint_train_ratio=0.3,  \r\n    neg_sampling_ratio=2.0,  \r\n    add_negative_train_samples=False, \r\n    edge_types=(\"A\",\"a_to_b\",\"B\"),\r\n    rev_edge_types=(\"B\",\"b_to_a\",\"A\"), \r\n)\r\n\r\n# generate train and validation\r\ntrain_data, val_data, test_data = transform(data)\r\n```\r\nTraining data looks like:\r\n```\r\nHeteroData(\r\n  A={\r\n    node_id=[51761],\r\n    x=[51761, 768]  # text emb from BERT\r\n  },\r\n  B={\r\n    node_id=[4913],\r\n    x=[4913, 768]  # text emb from BERT\r\n  },\r\n  (A, a_to_a, A)={ edge_index=[2, 9653294] },\r\n  (B, b_to_b, B)={ edge_index=[2, 3963422] },\r\n  (A, a_to_b, B)={\r\n    edge_index=[2, 16659],\r\n    edge_label=[7139],\r\n    edge_label_index=[2, 7139]\r\n  },\r\n  (B, rev_a_to_b, A)={ edge_index=[2, 29747] },\r\n)\r\n```\r\n**And the following is where the crash occurs every time:**\r\n```\r\nfrom torch_geometric.loader import LinkNeighborLoader\r\n\r\n# Define seed edges:\r\nedge_label_index = train_data[(\"A\", \"a_to_b\", \"B\")].edge_label_index\r\nedge_label = train_data[(\"A\", \"a_to_b\", \"B\")].edge_label\r\n\r\ntrain_loader = LinkNeighborLoader(\r\n    data=train_data,  \r\n    num_neighbors=[10, 5],  \r\n    neg_sampling_ratio=2.0,  \r\n    edge_label_index=((\"A\", \"a_to_b\", \"B\"), edge_label_index), \r\n    edge_label=edge_label,\r\n    batch_size=1,\r\n    shuffle=True,\r\n)\r\n```\r\n\r\nSince my System RAM is 83.5 GB, I guess the memory limit is not the cause? If so, may I ask is there a way to fix it?\r\n\r\nHere is the `app.log` from Colab:\r\n\r\n<img width=\"500\" alt=\"Screenshot 2023-03-15 at 11 42 08 PM\" src=\"https://user-images.githubusercontent.com/36064256/225508540-599c4466-0089-4dfb-ad92-f1f4a8f407a2.png\">\r\n\r\n<img width=\"515\" alt=\"Screenshot 2023-03-16 at 12 00 09 AM\" src=\"https://user-images.githubusercontent.com/36064256/225511001-dadb02cf-5dac-4135-8025-cf77aae8107a.png\">\r\n\r\n### Environment\r\n\r\n* PyG version: 2.3.0\r\n* PyTorch version: 1.13.1\r\n* OS: Google Colab\r\n* Python version: 3.9.16\r\n* CUDA/cuDNN version: cu116\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): !pip install -q torch-scatter -f https://data.pyg.org/whl/torch-${TORCH}.html\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): Google Colab Pro+ (System RAM 51.0 GB)\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6925/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6915", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6915/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6915/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6915/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6915", "id": 1624079575, "node_id": "PR_kwDOBlHMec5MB8WU", "number": 6915, "title": "Fix CUDA error in `GATConv` on empty edges", "user": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2023-03-14T18:27:55Z", "updated_at": "2023-03-21T20:36:34Z", "closed_at": "2023-03-21T20:36:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6915", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6915", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6915.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6915.patch", "merged_at": "2023-03-21T20:36:33Z"}, "body": "```\r\nE         File \"/usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/nn/conv/gat_conv.py\", line 247, in forward\r\nE           alpha = self.edge_updater(edge_index, alpha=alpha, edge_attr=edge_attr)\r\nE         File \"/usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/nn/conv/message_passing.py\", line 508, in edge_updater\r\nE           out = self.edge_update(**edge_kwargs)\r\nE         File \"/usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/nn/conv/gat_conv.py\", line 289, in edge_update\r\nE           alpha = softmax(alpha, index, ptr, size_i)\r\nE         File \"/usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/utils/softmax.py\", line 78, in softmax\r\nE           out_sum = scatter(out, index, dim, dim_size=N, reduce='sum') + 1e-16\r\nE         File \"/usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/utils/scatter.py\", line 74, in scatter\r\nE           return src.new_zeros(size).scatter_add_(dim, index, src)\r\nE       RuntimeError: CUDA error: invalid configuration argument\r\nE       Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.\r\n```\r\n\r\nmy minor change fixes it and training proceeds as expected after", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6915/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6913", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6913/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6913/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6913/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6913", "id": 1623861808, "node_id": "PR_kwDOBlHMec5MBMMX", "number": 6913, "title": "Fix distributed batching example", "user": {"login": "ssmmnn11", "id": 125903433, "node_id": "U_kgDOB4EiSQ", "avatar_url": "https://avatars.githubusercontent.com/u/125903433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssmmnn11", "html_url": "https://github.com/ssmmnn11", "followers_url": "https://api.github.com/users/ssmmnn11/followers", "following_url": "https://api.github.com/users/ssmmnn11/following{/other_user}", "gists_url": "https://api.github.com/users/ssmmnn11/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssmmnn11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssmmnn11/subscriptions", "organizations_url": "https://api.github.com/users/ssmmnn11/orgs", "repos_url": "https://api.github.com/users/ssmmnn11/repos", "events_url": "https://api.github.com/users/ssmmnn11/events{/privacy}", "received_events_url": "https://api.github.com/users/ssmmnn11/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358958308, "node_id": "MDU6TGFiZWwzMzU4OTU4MzA4", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/1%20-%20Priority%20P1", "name": "1 - Priority P1", "color": "FBCA04", "default": false, "description": ""}, {"id": 4017636777, "node_id": "LA_kwDOBlHMec7veEWp", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/example", "name": "example", "color": "27D88A", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ssmmnn11", "id": 125903433, "node_id": "U_kgDOB4EiSQ", "avatar_url": "https://avatars.githubusercontent.com/u/125903433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssmmnn11", "html_url": "https://github.com/ssmmnn11", "followers_url": "https://api.github.com/users/ssmmnn11/followers", "following_url": "https://api.github.com/users/ssmmnn11/following{/other_user}", "gists_url": "https://api.github.com/users/ssmmnn11/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssmmnn11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssmmnn11/subscriptions", "organizations_url": "https://api.github.com/users/ssmmnn11/orgs", "repos_url": "https://api.github.com/users/ssmmnn11/repos", "events_url": "https://api.github.com/users/ssmmnn11/events{/privacy}", "received_events_url": "https://api.github.com/users/ssmmnn11/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ssmmnn11", "id": 125903433, "node_id": "U_kgDOB4EiSQ", "avatar_url": "https://avatars.githubusercontent.com/u/125903433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssmmnn11", "html_url": "https://github.com/ssmmnn11", "followers_url": "https://api.github.com/users/ssmmnn11/followers", "following_url": "https://api.github.com/users/ssmmnn11/following{/other_user}", "gists_url": "https://api.github.com/users/ssmmnn11/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssmmnn11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssmmnn11/subscriptions", "organizations_url": "https://api.github.com/users/ssmmnn11/orgs", "repos_url": "https://api.github.com/users/ssmmnn11/repos", "events_url": "https://api.github.com/users/ssmmnn11/events{/privacy}", "received_events_url": "https://api.github.com/users/ssmmnn11/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-14T16:32:16Z", "updated_at": "2023-03-15T14:46:38Z", "closed_at": "2023-03-15T14:46:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6913", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6913", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6913.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6913.patch", "merged_at": "2023-03-15T14:46:37Z"}, "body": "fix loss computation (output comes only from one task) in distributed batching example following [the tutorial](https://pytorch.org/tutorials/intermediate/FSDP_tutorial.html?utm_source=distr_landing&utm_medium=FSDP_getting_started)\r\n\r\nOutput before:\r\nLet's use 1 GPUs!\r\n.\r\nEpoch: 050, **Loss: 0.0985**, Val: 0.7773, Test: 0.7450\r\n\r\nLet's use 4 GPUs!\r\n.\r\nEpoch: 050, **Loss: 0.0249**, Val: 0.7242, Test: 0.7662\r\n\r\nOutput after fix:\r\nLet's use 1 GPUs!\r\n.\r\nEpoch: 050, **Loss: 0.0977**, Val: 0.7751, Test: 0.7707\r\n\r\nLet's use 4 GPUs!\r\n.\r\nEpoch: 050, **Loss: 0.1002**, Val: 0.7724, Test: 0.7507\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6913/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6907", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6907/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6907/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6907/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6907", "id": 1622053421, "node_id": "PR_kwDOBlHMec5L7HEu", "number": 6907, "title": "Fix `cugraph` tests", "user": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-13T18:42:37Z", "updated_at": "2023-03-13T18:58:19Z", "closed_at": "2023-03-13T18:58:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6907", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6907", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6907.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6907.patch", "merged_at": "2023-03-13T18:58:18Z"}, "body": "need more tolerance for cugraph-ops\r\nalso for cugraph conversion, we NEED to put the cugraph tensor on cpu or tests fail. this is recommended and required by the cugraph engineers\r\n```\r\n>       assert torch.equal(edge_index, cu_edge_index)\r\nE       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument other in method wrapper_CUDA__equal)\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6907/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6907/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6906", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6906/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6906/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6906/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6906", "id": 1621658730, "node_id": "PR_kwDOBlHMec5L5zJZ", "number": 6906, "title": "Bring back `EllipticBitcoinDataset` test", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-03-13T14:53:00Z", "updated_at": "2023-03-13T14:58:48Z", "closed_at": "2023-03-13T14:58:47Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6906", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6906", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6906.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6906.patch", "merged_at": "2023-03-13T14:58:47Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6906/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6906/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6892", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6892/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6892/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6892/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6892", "id": 1618377470, "node_id": "PR_kwDOBlHMec5LvG2x", "number": 6892, "title": "Fix failing `PyGModelHubMixin` tests", "user": {"login": "wsad1", "id": 13963626, "node_id": "MDQ6VXNlcjEzOTYzNjI2", "avatar_url": "https://avatars.githubusercontent.com/u/13963626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsad1", "html_url": "https://github.com/wsad1", "followers_url": "https://api.github.com/users/wsad1/followers", "following_url": "https://api.github.com/users/wsad1/following{/other_user}", "gists_url": "https://api.github.com/users/wsad1/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsad1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsad1/subscriptions", "organizations_url": "https://api.github.com/users/wsad1/orgs", "repos_url": "https://api.github.com/users/wsad1/repos", "events_url": "https://api.github.com/users/wsad1/events{/privacy}", "received_events_url": "https://api.github.com/users/wsad1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "wsad1", "id": 13963626, "node_id": "MDQ6VXNlcjEzOTYzNjI2", "avatar_url": "https://avatars.githubusercontent.com/u/13963626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsad1", "html_url": "https://github.com/wsad1", "followers_url": "https://api.github.com/users/wsad1/followers", "following_url": "https://api.github.com/users/wsad1/following{/other_user}", "gists_url": "https://api.github.com/users/wsad1/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsad1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsad1/subscriptions", "organizations_url": "https://api.github.com/users/wsad1/orgs", "repos_url": "https://api.github.com/users/wsad1/repos", "events_url": "https://api.github.com/users/wsad1/events{/privacy}", "received_events_url": "https://api.github.com/users/wsad1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wsad1", "id": 13963626, "node_id": "MDQ6VXNlcjEzOTYzNjI2", "avatar_url": "https://avatars.githubusercontent.com/u/13963626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsad1", "html_url": "https://github.com/wsad1", "followers_url": "https://api.github.com/users/wsad1/followers", "following_url": "https://api.github.com/users/wsad1/following{/other_user}", "gists_url": "https://api.github.com/users/wsad1/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsad1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsad1/subscriptions", "organizations_url": "https://api.github.com/users/wsad1/orgs", "repos_url": "https://api.github.com/users/wsad1/repos", "events_url": "https://api.github.com/users/wsad1/events{/privacy}", "received_events_url": "https://api.github.com/users/wsad1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-10T05:16:10Z", "updated_at": "2023-03-10T07:16:25Z", "closed_at": "2023-03-10T07:16:24Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6892", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6892", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6892.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6892.patch", "merged_at": "2023-03-10T07:16:24Z"}, "body": "Fixes tests failures due to updates in huggingface_hub see [here](https://github.com/pyg-team/pytorch_geometric/actions/runs/4377729370/jobs/7661571171).", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6892/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6886", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6886/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6886/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6886/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6886", "id": 1617052020, "node_id": "I_kwDOBlHMec5gYkF0", "number": 6886, "title": "`GraphMultisetTransformer` output changes with batch size", "user": {"login": "SantiagoMorandi", "id": 81173602, "node_id": "MDQ6VXNlcjgxMTczNjAy", "avatar_url": "https://avatars.githubusercontent.com/u/81173602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SantiagoMorandi", "html_url": "https://github.com/SantiagoMorandi", "followers_url": "https://api.github.com/users/SantiagoMorandi/followers", "following_url": "https://api.github.com/users/SantiagoMorandi/following{/other_user}", "gists_url": "https://api.github.com/users/SantiagoMorandi/gists{/gist_id}", "starred_url": "https://api.github.com/users/SantiagoMorandi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SantiagoMorandi/subscriptions", "organizations_url": "https://api.github.com/users/SantiagoMorandi/orgs", "repos_url": "https://api.github.com/users/SantiagoMorandi/repos", "events_url": "https://api.github.com/users/SantiagoMorandi/events{/privacy}", "received_events_url": "https://api.github.com/users/SantiagoMorandi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-03-09T11:46:05Z", "updated_at": "2023-03-13T07:47:20Z", "closed_at": "2023-03-13T07:47:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHello, it seems that when using the Graph Multiset Transformer `torch_geometric.nn.aggr.GraphMultisetTransformer` as pooling layer, the GNN predictions vary with the batch size, a behavior that should not occur in principle.  I found this problem while working on my own project (PyG 2.0.3), so what I did was to reproduce the same error with the TUDataset and a generic GNN, using the latest PyG and Pytorch versions. When changing the pooling layer to the simpler global_add_pool, the predictions remain constant with the batch size, as expected.\r\n\r\n``` python\r\nimport torch\r\nimport torch_geometric\r\nimport torch.nn.functional as F\r\nfrom torch_geometric.nn import GCNConv, global_add_pool\r\nfrom torch_geometric.nn.aggr import GraphMultisetTransformer\r\nfrom torch_geometric.datasets import TUDataset\r\nfrom torch_geometric.loader import DataLoader\r\ntorch_geometric.seed_everything(3)\r\ndataset = TUDataset(root='/tmp/ENZYMES', name='ENZYMES')\r\n\r\nclass GNN(torch.nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.conv1 = GCNConv(dataset.num_node_features, 16)\r\n        self.pool_gmt = GraphMultisetTransformer(16, 16, 1, num_heads=1, \r\n                                             num_nodes=300, pool_sequences=[\"GMPool_I\"], \r\n                                             pooling_ratio=0.25, layer_norm=False)\r\n        self.lin = torch.nn.Linear(16, 1)\r\n        self.pool_add = global_add_pool\r\n    def forward(self, data):\r\n        x, edge_index = data.x, data.edge_index\r\n        x = self.conv1(x, edge_index)\r\n        x = F.relu(x)\r\n        x = self.pool_gmt(x, data.batch)   # GMT (comment this line to see difference with add pooling)      \r\n        # # Add pooling layer (uncomment next 3 lines to see difference with gmt)\r\n        # x = F.relu(x)\r\n        # x= self.lin(x)         \r\n        # x = self.pool_add(x, data.batch)        \r\n        return x.view(x.size(0), -1)\r\n\r\nmodel = GNN().eval()\r\ndataloader_bs_1 = DataLoader(dataset, batch_size=1, shuffle=False)\r\ndataloader_bs_16 = DataLoader(dataset, batch_size=16, shuffle=False)\r\npredictions_bs1, predictions_bs16 = [], []\r\nfor batch in dataloader_bs_1:  # Batch size 1\r\n    prediction = model(batch)\r\n    true = batch.y\r\n    for i in range(len(prediction)):\r\n        my_list = [prediction[i].item(), true[i].item()]\r\n        predictions_bs1.append(my_list)\r\nfor batch in dataloader_bs_16:  # Batch size 16\r\n    prediction = model(batch)\r\n    true = batch.y\r\n    for i in range(len(prediction)):\r\n        my_list = [prediction[i].item(), true[i].item()]\r\n        predictions_bs16.append(my_list)\r\n# Results should not vary with batch size, but they change. With global_add_pool, the results are constant with batch size\r\nprint(predictions_bs1[:10] == predictions_bs16[:10])\r\n```\n\n### Environment\n\n* PyG version: 2.2.0\r\n* PyTorch version: 1.13.1\r\n* OS: Ubuntu 20.04.5 LTS\r\n* Python version: 3.9.16\r\n* CUDA/cuDNN version: 11.6/8302\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6886/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6882", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6882/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6882/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6882/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6882", "id": 1615594230, "node_id": "PR_kwDOBlHMec5LlpRJ", "number": 6882, "title": "Respect tuple of `data` objects in `Dataset.num_classes`", "user": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2023-03-08T16:52:56Z", "updated_at": "2023-03-10T07:22:29Z", "closed_at": "2023-03-10T07:22:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6882", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6882", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6882.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6882.patch", "merged_at": "2023-03-10T07:22:28Z"}, "body": "https://github.com/pyg-team/pytorch_geometric/issues/6782#issuecomment-1460485546\r\n\r\n> Traceback (most recent call last):\r\n>   File \"argva_node_clustering.py\", line 130, in <module>\r\n>     plot_points(test_data, colors)\r\n>   File \"/usr/local/lib/python3.8/dist-packages/torch/utils/_contextlib.py\", line 115, in decorate_context\r\n>     return func(*args, **kwargs)\r\n>   File \"argva_node_clustering.py\", line 121, in plot_points\r\n>     for i in range(dataset.num_classes):\r\n>   File \"/usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/data/in_memory_dataset.py\", line 175, in __getattr__\r\n>     raise AttributeError(f\"'{self.__class__.__name__}' object has no \"\r\n> AttributeError: 'Planetoid' object has no attribute 'num_classes'", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6882/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6877", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6877/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6877/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6877/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6877", "id": 1615070704, "node_id": "PR_kwDOBlHMec5Lj4j7", "number": 6877, "title": "Fix `DegreeScaler` to not divide by zero", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-08T10:54:58Z", "updated_at": "2023-03-08T11:02:35Z", "closed_at": "2023-03-08T11:02:34Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6877", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6877", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6877.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6877.patch", "merged_at": "2023-03-08T11:02:34Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6877/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6872", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6872/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6872/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6872/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6872", "id": 1614016236, "node_id": "PR_kwDOBlHMec5LgYL_", "number": 6872, "title": "Solve `cugraph` test failures", "user": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-07T18:47:41Z", "updated_at": "2023-03-08T04:35:47Z", "closed_at": "2023-03-08T04:35:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6872", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6872", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6872.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6872.patch", "merged_at": "2023-03-08T04:35:46Z"}, "body": "address part of https://github.com/pyg-team/pytorch_geometric/issues/6782", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6872/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6866", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6866/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6866/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6866/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6866", "id": 1613105910, "node_id": "PR_kwDOBlHMec5LdQpM", "number": 6866, "title": "Fix GraphGym tests on Windows", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3465159234, "node_id": "LA_kwDOBlHMec7OiiJC", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/graphgym", "name": "graphgym", "color": "BBD6C0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}, {"id": 4601575641, "node_id": "LA_kwDOBlHMec8AAAABEkZ42Q", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/utils", "name": "utils", "color": "DBC48C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-07T10:04:40Z", "updated_at": "2023-03-08T12:08:44Z", "closed_at": "2023-03-08T12:08:43Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6866", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6866", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6866.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6866.patch", "merged_at": "2023-03-08T12:08:43Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6866/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6864", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6864/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6864/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6864/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6864", "id": 1612636727, "node_id": "I_kwDOBlHMec5gHuI3", "number": 6864, "title": "How to find a alternative of dgl.dataloading.MultiLayerFullNeighborSampler in PyG", "user": {"login": "tjb-tech", "id": 56426168, "node_id": "MDQ6VXNlcjU2NDI2MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/56426168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjb-tech", "html_url": "https://github.com/tjb-tech", "followers_url": "https://api.github.com/users/tjb-tech/followers", "following_url": "https://api.github.com/users/tjb-tech/following{/other_user}", "gists_url": "https://api.github.com/users/tjb-tech/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjb-tech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjb-tech/subscriptions", "organizations_url": "https://api.github.com/users/tjb-tech/orgs", "repos_url": "https://api.github.com/users/tjb-tech/repos", "events_url": "https://api.github.com/users/tjb-tech/events{/privacy}", "received_events_url": "https://api.github.com/users/tjb-tech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2023-03-07T03:13:47Z", "updated_at": "2023-03-09T14:46:06Z", "closed_at": "2023-03-09T14:46:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nDear author, I am translate a program written in dgl to PyG, but a problem occur: \r\n```python\r\ndef track_acc(g, args, device):\r\n\r\n    sampler = dgl.dataloading.MultiLayerNeighborSampler(\r\n                [int(fanout) for fanout in args.fan_out.split(',')])\r\n\r\n    train_nid = torch.nonzero(g.ndata['train_mask'], as_tuple=True)[0]\r\n    \r\n    train_dataloader = dgl.dataloading.DataLoader(\r\n        g, train_nid, sampler,\r\n        batch_size=args.batch_size,\r\n        shuffle=True, drop_last=False,\r\n        num_workers=args.num_workers) \r\n```\r\nMay I ask whether I could use NeighborSampler to replace the MultiLayerNeighborSampler? If yes, how I could write the code. If no, may I ask what API I should use? \r\nLooking forward to your reply! \n\n### Environment\n\n* PyG version: \r\n* PyTorch version:\r\n* OS:\r\n* Python version:\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6864/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6863", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6863/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6863/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6863/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6863", "id": 1611631043, "node_id": "PR_kwDOBlHMec5LYUGh", "number": 6863, "title": "Fix `to_hetero` when using an uninitialized submodule without implementing `reset_parameters`", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-06T15:09:43Z", "updated_at": "2023-03-06T15:18:40Z", "closed_at": "2023-03-06T15:18:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6863", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6863", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6863.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6863.patch", "merged_at": "2023-03-06T15:18:38Z"}, "body": "Fix https://github.com/pyg-team/pytorch_geometric/issues/6862.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6863/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6862", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6862/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6862/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6862/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6862", "id": 1611536927, "node_id": "I_kwDOBlHMec5gDhof", "number": 6862, "title": "SubModule not working with HeteroGraphs", "user": {"login": "chrisn-pik", "id": 89135626, "node_id": "MDQ6VXNlcjg5MTM1NjI2", "avatar_url": "https://avatars.githubusercontent.com/u/89135626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisn-pik", "html_url": "https://github.com/chrisn-pik", "followers_url": "https://api.github.com/users/chrisn-pik/followers", "following_url": "https://api.github.com/users/chrisn-pik/following{/other_user}", "gists_url": "https://api.github.com/users/chrisn-pik/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisn-pik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisn-pik/subscriptions", "organizations_url": "https://api.github.com/users/chrisn-pik/orgs", "repos_url": "https://api.github.com/users/chrisn-pik/repos", "events_url": "https://api.github.com/users/chrisn-pik/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisn-pik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-03-06T14:21:50Z", "updated_at": "2023-03-06T15:18:42Z", "closed_at": "2023-03-06T15:18:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWith heterogeneous graphs, I can not use a torch.nn.Module within another torch.nn.Module. When calling ```to_hetero(model, data.metadata(), aggr='sum')```, I get an error of uninitialized parameters.\r\n\r\n```python\r\nfrom torch_geometric.nn import GATConv\r\n\r\nimport torch\r\nfrom torch_geometric.datasets import FakeHeteroDataset\r\nfrom torch_geometric.nn import to_hetero\r\ndataset = FakeHeteroDataset(1, edge_dim=3)\r\ndata = dataset[0]\r\n\r\n\r\nclass GNN(torch.nn.Module):\r\n    def __init__(self, hidden_channels=64, edge_dim=3):\r\n        super().__init__()\r\n        self.conv1 = GNNConv(edge_dim)\r\n        # self.conv1 = GATConv((-1,-1), out_channels=16, add_self_loops=False, edge_dim=edge_dim)\r\n\r\n    def forward(self, x, edge_index, edge_attr):\r\n        x = self.conv1(x, edge_index, edge_attr).relu()\r\n        return x\r\n\r\n\r\nclass GNNConv(torch.nn.Module):\r\n    def __init__(self, edge_dim):\r\n        super(GNNConv, self).__init__()\r\n        self.conv = GATConv((-1, -1), out_channels=16,\r\n                            add_self_loops=False, edge_dim=edge_dim)\r\n\r\n    def forward(self, x, edge_index, edge_attr):\r\n        x = self.conv(x, edge_index, edge_attr=edge_attr)\r\n        return x\r\n\r\n\r\nmodel = GNN()\r\nmodel = to_hetero(model, data.metadata(), aggr='sum')\r\nprint(\"finished\")\r\n```\r\n\r\nIt works, if I directly call ```GATConv(...)``` instead of an own ```GNNConv(...)``` (see commented line)\r\n\r\nThe full error message:\r\n```\r\nException has occurred: ValueError\r\nAttempted to use an uninitialized parameter in <method 'numel' of 'torch._C._TensorBase' objects>. This error happens when you are using a `LazyModule` or explicitly manipulating `torch.nn.parameter.UninitializedParameter` objects. When using LazyModules Call `forward` with a dummy batch to initialize the parameters before calling torch functions\r\n  File \"\", line 33, in <module>\r\n    model = to_hetero(model, data.metadata(), aggr='sum')\r\nValueError: Attempted to use an uninitialized parameter in <method 'numel' of 'torch._C._TensorBase' objects>. This error happens when you are using a `LazyModule` or explicitly manipulating `torch.nn.parameter.UninitializedParameter` objects. When using LazyModules Call `forward` with a dummy batch to initialize the parameters before calling torch functions\r\n```\r\n\r\nIs this by design? What would be a good workaround? I would like to use modified Convs, for example by adding non-linear activations in between.\n\n### Environment\n\n\r\n    PyG version: 2.2.0 (torch-geometric)\r\n    PyTorch version: 1.13.1\r\n    OS: MacOS\r\n    Python version: Python 3.10.9\r\n    CUDA/cuDNN version: no\r\n    How you installed PyTorch and PyG (conda, pip, source): conda and pip\r\n    Any other relevant information (e.g., version of torch-scatter): reproduced the issue on Linux with Python 3.10.0", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6862/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6855", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6855/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6855/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6855/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6855", "id": 1610087069, "node_id": "PR_kwDOBlHMec5LTLrI", "number": 6855, "title": "Fix example CI path", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-03-05T07:17:44Z", "updated_at": "2023-03-05T07:17:59Z", "closed_at": "2023-03-05T07:17:57Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6855", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6855", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6855.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6855.patch", "merged_at": "2023-03-05T07:17:57Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6855/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6844", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6844/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6844/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6844/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6844", "id": 1608293006, "node_id": "PR_kwDOBlHMec5LNTF3", "number": 6844, "title": "Fix tests in case `pyg-lib` is not installed", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-03-03T09:46:08Z", "updated_at": "2023-03-03T09:55:45Z", "closed_at": "2023-03-03T09:55:44Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6844", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6844", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6844.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6844.patch", "merged_at": "2023-03-03T09:55:44Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6844/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6830", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6830/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6830/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6830/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6830", "id": 1605356357, "node_id": "PR_kwDOBlHMec5LDVz5", "number": 6830, "title": "Fix undefined `cat_dim` in `ClusterLoader`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-03-01T17:11:50Z", "updated_at": "2023-03-01T17:18:28Z", "closed_at": "2023-03-01T17:18:27Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6830", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6830", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6830.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6830.patch", "merged_at": "2023-03-01T17:18:27Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6830/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6828", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6828/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6828/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6828/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6828", "id": 1605195761, "node_id": "PR_kwDOBlHMec5LCzGq", "number": 6828, "title": "Fix `pyg_lib.ops.neighbor_sample` return arguments", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}, {"id": 4871834239, "node_id": "LA_kwDOBlHMec8AAAABImJKfw", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/sampler", "name": "sampler", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-03-01T15:34:03Z", "updated_at": "2023-03-01T15:46:51Z", "closed_at": "2023-03-01T15:46:49Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6828", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6828", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6828.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6828.patch", "merged_at": "2023-03-01T15:46:49Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6828/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6827", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6827/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6827/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6827/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6827", "id": 1605154383, "node_id": "I_kwDOBlHMec5frLZP", "number": 6827, "title": "Attempted to use an uninitialized parameter", "user": {"login": "chrisn-pik", "id": 89135626, "node_id": "MDQ6VXNlcjg5MTM1NjI2", "avatar_url": "https://avatars.githubusercontent.com/u/89135626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisn-pik", "html_url": "https://github.com/chrisn-pik", "followers_url": "https://api.github.com/users/chrisn-pik/followers", "following_url": "https://api.github.com/users/chrisn-pik/following{/other_user}", "gists_url": "https://api.github.com/users/chrisn-pik/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisn-pik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisn-pik/subscriptions", "organizations_url": "https://api.github.com/users/chrisn-pik/orgs", "repos_url": "https://api.github.com/users/chrisn-pik/repos", "events_url": "https://api.github.com/users/chrisn-pik/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisn-pik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-03-01T15:10:09Z", "updated_at": "2023-03-06T11:16:19Z", "closed_at": "2023-03-06T11:16:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhen trying to access the params of a model using GATConv and edge dims I get an error: \"Attempted to use an uninitialized parameter\", even though I already did a forward pass. In case of SAGEConv and not using edge features the error message does not occur. The full code to reproduce the issue:\r\n\r\n```python\r\nfrom torch_geometric.nn import SAGEConv, GATConv\r\n\r\nimport torch\r\nfrom torch_geometric.datasets import FakeDataset\r\ndataset = FakeDataset(1, edge_dim=3)\r\ndata = dataset[0]\r\n\r\n\r\nclass GNN_with_edge_dim(torch.nn.Module):\r\n    def __init__(self, hidden_channels=64):\r\n        super().__init__()\r\n        self.conv1 = GATConv((-1, -1), hidden_channels, edge_dim=3)\r\n\r\n    def forward(self, x, edge_index, edge_attr):\r\n        x = self.conv1(x, edge_index, edge_attr).relu()\r\n        return x\r\n\r\n\r\nclass GNN_without_edge_dim(torch.nn.Module):\r\n    def __init__(self, hidden_channels=64):\r\n        super().__init__()\r\n        self.conv1 = SAGEConv((-1, -1), hidden_channels)\r\n\r\n    def forward(self, x, edge_index):\r\n        x = self.conv1(x, edge_index).relu()\r\n        return x\r\n\r\n\r\nmodel_wo_edge_dim = GNN_without_edge_dim()\r\nmodel_with_edge_dim = GNN_with_edge_dim()\r\n\r\nwith torch.no_grad():\r\n    out_wo_edges = model_wo_edge_dim(data.x, data.edge_index)\r\n    out_with_edges = model_with_edge_dim(\r\n        data.x, data.edge_index, data.edge_attr)\r\n\r\ntotal_params = sum([param.nelement()\r\n                   for param in model_wo_edge_dim.parameters()])\r\ntotal_params = sum([param.nelement()\r\n                   for param in model_with_edge_dim.parameters()])\r\n```\r\n\r\nThe final line throws the following error message:\r\n```\r\nAttempted to use an uninitialized parameter in <method 'numel' of 'torch._C._TensorBase' objects>. This error happens when you are using a `LazyModule` or explicitly manipulating `torch.nn.parameter.UninitializedParameter` objects. When using LazyModules Call `forward` with a dummy batch to initialize the parameters before calling torch functions\r\n \r\nValueError: Attempted to use an uninitialized parameter in <method 'numel' of 'torch._C._TensorBase' objects>. This error happens when you are using a `LazyModule` or explicitly manipulating `torch.nn.parameter.UninitializedParameter` objects. When using LazyModules Call `forward` with a dummy batch to initialize the parameters before calling torch functions\r\n```\r\nThe problem occurs for homogeneous and heterogeneous graphs. Perhaps the issue is related to: #3640.\n\n### Environment\n\n* PyG version: 2.2.0 (torch-geometric)\r\n* PyTorch version: 1.13.1\r\n* OS: MacOS\r\n* Python version: Python 3.10.9\r\n* CUDA/cuDNN version: no\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda and pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): reproduced the issue on Linux with Python 3.10.0 \r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6827/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6823", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6823/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6823/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6823/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6823", "id": 1604194066, "node_id": "I_kwDOBlHMec5fng8S", "number": 6823, "title": "Assert in RandomLinkSplit", "user": {"login": "fierval", "id": 987574, "node_id": "MDQ6VXNlcjk4NzU3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/987574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fierval", "html_url": "https://github.com/fierval", "followers_url": "https://api.github.com/users/fierval/followers", "following_url": "https://api.github.com/users/fierval/following{/other_user}", "gists_url": "https://api.github.com/users/fierval/gists{/gist_id}", "starred_url": "https://api.github.com/users/fierval/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fierval/subscriptions", "organizations_url": "https://api.github.com/users/fierval/orgs", "repos_url": "https://api.github.com/users/fierval/repos", "events_url": "https://api.github.com/users/fierval/events{/privacy}", "received_events_url": "https://api.github.com/users/fierval/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2023-03-01T04:03:50Z", "updated_at": "2023-03-01T18:02:51Z", "closed_at": "2023-03-01T17:21:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\n```python\r\ntrain, val, test = \\\r\n          RandomLinkSplit(num_val=0.1, num_test=0.1, neg_sampling_ratio=1, add_negative_train_samples=True) \\\r\n         (dataset)\r\n```\r\n\r\nAsserts in `self._create_label` called from line 231 in `random_link_split.py` , the actual assert is inside the function on line 304:\r\n```python\r\nassert edge_label.size(0) == store.edge_index.size(1)\r\n```\r\nThe data looks like:\r\n```python\r\nData(x=[3306,512], edge_index=[2, 12200],  edge_label=[12200])\r\n```\r\nThe complaint is that the `edge_label` size of the split (\"train\") in this case is not equal to the size of edges in the store. If I set `add_negative_train_samples=False`, the first call to `_create_label` succeeds, because this check is bypassed, but the second one, involving validation edges, fails. \r\n\r\nThe failure seems reasonable, since the number of edges in the store == 12200, i.e. edges of the entire graph, but the split already has fewer edges: 1220 in the case of validation split + there should be 1220 new negative edges. \r\n\r\nSo this assert seems like a bug to me, but maybe I'm missing something?\n\n### Environment\n\n* PyG version: 2.2.0\r\n* PyTorch version:\r\n* OS: Win11\r\n* Python version: 3.9\r\n* CUDA/cuDNN version: 11.7\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6823/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6823/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6793", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6793/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6793/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6793/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6793", "id": 1599530140, "node_id": "I_kwDOBlHMec5fVuSc", "number": 6793, "title": "Error of \"indices out of edge_index\" caused by the way of mini-batch on PairData", "user": {"login": "mgao97", "id": 90015105, "node_id": "MDQ6VXNlcjkwMDE1MTA1", "avatar_url": "https://avatars.githubusercontent.com/u/90015105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgao97", "html_url": "https://github.com/mgao97", "followers_url": "https://api.github.com/users/mgao97/followers", "following_url": "https://api.github.com/users/mgao97/following{/other_user}", "gists_url": "https://api.github.com/users/mgao97/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgao97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgao97/subscriptions", "organizations_url": "https://api.github.com/users/mgao97/orgs", "repos_url": "https://api.github.com/users/mgao97/repos", "events_url": "https://api.github.com/users/mgao97/events{/privacy}", "received_events_url": "https://api.github.com/users/mgao97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2023-02-25T03:33:02Z", "updated_at": "2023-03-03T06:04:22Z", "closed_at": "2023-03-03T06:04:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi! \r\n\r\nWhen I use the PairData batching according to the docs [advanced mini-batching](https://pytorch-geometric.readthedocs.io/en/latest/advanced/batching.html?highlight=pairdata#pairs-of-graphs) have encountered the following problem when I take the **batch.x_s** and **batch.edge_index_s** into a GNN model.\r\n\r\nraise ValueError(\r\nValueError: Found indices in 'edge_index' that are larger than 22353 (got 42712). Please ensure that all indices in 'edge_index' point to valid indices in the interval [0, 22354) in your node feature matrix and try again.\r\n\r\n\r\nHere, the key valid_dataloader is defined as \r\n`pair_data = PairData(edge_index_s, x_s, edge_index_t, x_t)\r\n    datalist3 = [pair_data, pair_data]\r\n    val_loader = DataLoader(datalist3, batch_size=128, shuffle=False, follow_batch=['x_s','x_t'])`\r\n\r\nI am confused about the result, and the indices of edges should be no larger than the indices of the nodes in theory. Specifically, the **x**, and **edge_index** are from the outputs **subset2, and edge_index2** of the k_hop_subgraph function.\r\n\n\n### Environment\n\n* PyG version: 2.2.0\r\n* PyTorch version: 1.13.0\r\n* OS: Linux\r\n* Python version: 3.8.0\r\n* CUDA/cuDNN version: None\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6793/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6790", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6790/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6790/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6790/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6790", "id": 1599324822, "node_id": "PR_kwDOBlHMec5KvLuM", "number": 6790, "title": "`get_mesh_laplacian` fix and `normalization_type` customization", "user": {"login": "daniel-unyi-42", "id": 63173826, "node_id": "MDQ6VXNlcjYzMTczODI2", "avatar_url": "https://avatars.githubusercontent.com/u/63173826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daniel-unyi-42", "html_url": "https://github.com/daniel-unyi-42", "followers_url": "https://api.github.com/users/daniel-unyi-42/followers", "following_url": "https://api.github.com/users/daniel-unyi-42/following{/other_user}", "gists_url": "https://api.github.com/users/daniel-unyi-42/gists{/gist_id}", "starred_url": "https://api.github.com/users/daniel-unyi-42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daniel-unyi-42/subscriptions", "organizations_url": "https://api.github.com/users/daniel-unyi-42/orgs", "repos_url": "https://api.github.com/users/daniel-unyi-42/repos", "events_url": "https://api.github.com/users/daniel-unyi-42/events{/privacy}", "received_events_url": "https://api.github.com/users/daniel-unyi-42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4601575641, "node_id": "LA_kwDOBlHMec8AAAABEkZ42Q", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/utils", "name": "utils", "color": "DBC48C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "daniel-unyi-42", "id": 63173826, "node_id": "MDQ6VXNlcjYzMTczODI2", "avatar_url": "https://avatars.githubusercontent.com/u/63173826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daniel-unyi-42", "html_url": "https://github.com/daniel-unyi-42", "followers_url": "https://api.github.com/users/daniel-unyi-42/followers", "following_url": "https://api.github.com/users/daniel-unyi-42/following{/other_user}", "gists_url": "https://api.github.com/users/daniel-unyi-42/gists{/gist_id}", "starred_url": "https://api.github.com/users/daniel-unyi-42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daniel-unyi-42/subscriptions", "organizations_url": "https://api.github.com/users/daniel-unyi-42/orgs", "repos_url": "https://api.github.com/users/daniel-unyi-42/repos", "events_url": "https://api.github.com/users/daniel-unyi-42/events{/privacy}", "received_events_url": "https://api.github.com/users/daniel-unyi-42/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "daniel-unyi-42", "id": 63173826, "node_id": "MDQ6VXNlcjYzMTczODI2", "avatar_url": "https://avatars.githubusercontent.com/u/63173826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daniel-unyi-42", "html_url": "https://github.com/daniel-unyi-42", "followers_url": "https://api.github.com/users/daniel-unyi-42/followers", "following_url": "https://api.github.com/users/daniel-unyi-42/following{/other_user}", "gists_url": "https://api.github.com/users/daniel-unyi-42/gists{/gist_id}", "starred_url": "https://api.github.com/users/daniel-unyi-42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daniel-unyi-42/subscriptions", "organizations_url": "https://api.github.com/users/daniel-unyi-42/orgs", "repos_url": "https://api.github.com/users/daniel-unyi-42/repos", "events_url": "https://api.github.com/users/daniel-unyi-42/events{/privacy}", "received_events_url": "https://api.github.com/users/daniel-unyi-42/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-24T21:57:37Z", "updated_at": "2023-02-27T12:03:08Z", "closed_at": "2023-02-27T12:03:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6790", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6790", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6790.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6790.patch", "merged_at": "2023-02-27T12:03:07Z"}, "body": "Fixed get_mesh_laplacian, and user can select its normalization type ([#6037](https://github.com/pyg-team/pytorch_geometric/issues/6037))", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6790/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6788", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6788/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6788/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6788/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6788", "id": 1598750848, "node_id": "PR_kwDOBlHMec5KtQFZ", "number": 6788, "title": "Fix `cugraph`-related tests", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-02-24T14:38:27Z", "updated_at": "2023-02-24T14:43:31Z", "closed_at": "2023-02-24T14:43:30Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6788", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6788", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6788.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6788.patch", "merged_at": "2023-02-24T14:43:30Z"}, "body": "Fix #6782.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6788/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6787", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6787/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6787/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6787/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6787", "id": 1598722056, "node_id": "PR_kwDOBlHMec5KtJ1j", "number": 6787, "title": "Fix hard masking in `GNNExplainer` for link prediction tasks", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4020368118, "node_id": "LA_kwDOBlHMec7vofL2", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/explain", "name": "explain", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-24T14:18:39Z", "updated_at": "2023-02-27T09:37:36Z", "closed_at": "2023-02-27T09:37:34Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6787", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6787", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6787.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6787.patch", "merged_at": "2023-02-27T09:37:34Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6787/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6782", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6782/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6782/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6782/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6782", "id": 1597536088, "node_id": "I_kwDOBlHMec5fOHdY", "number": 6782, "title": "new CI fails", "user": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 17, "created_at": "2023-02-23T21:12:11Z", "updated_at": "2023-03-08T19:10:50Z", "closed_at": "2023-03-08T19:10:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\n```\r\n=========================== short test summary info ============================\r\nFAILED test/datasets/test_elliptic.py::test_elliptic_bitcoin_dataset - TypeEr...\r\nFAILED test/utils/test_convert.py::test_to_cugraph[False-True-edge_weight1]\r\nFAILED test/utils/test_convert.py::test_to_cugraph[False-False-edge_weight1]\r\nFAILED test/utils/test_convert.py::test_from_cugraph[True-True-None] - assert...\r\nFAILED test/utils/test_convert.py::test_from_cugraph[True-True-edge_weight1]\r\nFAILED test/utils/test_convert.py::test_from_cugraph[True-False-None] - asser...\r\nFAILED test/utils/test_convert.py::test_from_cugraph[True-False-edge_weight1]\r\nFAILED test/utils/test_convert.py::test_from_cugraph[False-True-None] - asser...\r\nFAILED test/utils/test_convert.py::test_from_cugraph[False-True-edge_weight1]\r\nFAILED test/utils/test_convert.py::test_from_cugraph[False-False-None] - asse...\r\nFAILED test/utils/test_convert.py::test_from_cugraph[False-False-edge_weight1]\r\nFAILED test/utils/test_spmm.py::test_spmm_basic[device1] - AssertionError: as...\r\n==== 12 failed\r\n```\r\n\r\n\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n________________________ test_elliptic_bitcoin_dataset _________________________\r\nget_dataset = functools.partial(<function load_dataset at 0x7f5c16405ee0>, '/tmp/pyg_test_datasets')\r\n    @onlyFullTest\r\n    def test_elliptic_bitcoin_dataset(get_dataset):\r\n>       dataset = get_dataset(name='EllipticBitcoinDataset')\r\ntest/datasets/test_elliptic.py:6: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\ntest/conftest.py:41: in load_dataset\r\n    return EllipticBitcoinDataset(path, *args, **kwargs)\r\n/usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/datasets/elliptic.py:60: in __init__\r\n    super().__init__(root, transform, pre_transform)\r\n/usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/data/in_memory_dataset.py:57: in __init__\r\n    super().__init__(root, transform, pre_transform, pre_filter, log)\r\n/usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/data/dataset.py:97: in __init__\r\n    self._process()\r\n/usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/data/dataset.py:224: in _process\r\n    self.process()\r\n/usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/datasets/elliptic.py:90: in process\r\n    x = torch.from_numpy(df_features.loc[:, 2:].values).to(torch.float)\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexing.py:873: in __getitem__\r\n    return self._getitem_tuple(key)\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexing.py:1055: in _getitem_tuple\r\n    return self._getitem_tuple_same_dim(tup)\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexing.py:750: in _getitem_tuple_same_dim\r\n    retval = getattr(retval, self.name)._getitem_axis(key, axis=i)\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexing.py:1088: in _getitem_axis\r\n    return self._get_slice_axis(key, axis=axis)\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexing.py:1122: in _get_slice_axis\r\n    indexer = labels.slice_indexer(\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexes/base.py:4966: in slice_indexer\r\n    start_slice, end_slice = self.slice_locs(start, end, step=step, kind=kind)\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexes/base.py:5169: in slice_locs\r\n    start_slice = self.get_slice_bound(start, \"left\", kind)\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexes/base.py:5079: in get_slice_bound\r\n    label = self._maybe_cast_slice_bound(label, side, kind)\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexes/base.py:5031: in _maybe_cast_slice_bound\r\n    self._invalid_indexer(\"slice\", label)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nself = Index([     'txId', 'time_step',           2,           3,           4,\r\n                 5,           6,           7, ...        161,\r\n               162,         163,         164,         165,         166],\r\n      dtype='object', length=167)\r\nform = 'slice', key = 2\r\n    def _invalid_indexer(self, form: str_t, key):\r\n        \"\"\"\r\n        Consistent invalid indexer message.\r\n        \"\"\"\r\n>       raise TypeError(\r\n            f\"cannot do {form} indexing on {type(self).__name__} with these \"\r\n            f\"indexers [{key}] of type {type(key).__name__}\"\r\n        )\r\nE       TypeError: cannot do slice indexing on Index with these indexers [2] of type int\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexes/base.py:3267: TypeError\r\n___________________ test_to_cugraph[False-True-edge_weight1] ___________________\r\nedge_weight = tensor([0.4664, 0.3317, 0.4964, 0.4277]), directed = False\r\nrelabel_nodes = True\r\n    @withPackage('cudf')\r\n    @withPackage('cugraph')\r\n    @pytest.mark.parametrize('edge_weight', [None, torch.rand(4)])\r\n    @pytest.mark.parametrize('relabel_nodes', [True, False])\r\n    @pytest.mark.parametrize('directed', [True, False])\r\n    def test_to_cugraph(edge_weight, directed, relabel_nodes):\r\n        import cugraph\r\n    \r\n        if directed:\r\n            edge_index = torch.tensor([[0, 1, 1, 2], [1, 0, 2, 1]])\r\n        else:\r\n            edge_index = torch.tensor([[0, 1], [1, 2]])\r\n    \r\n        if edge_weight is not None:\r\n            edge_weight[:edge_index.size(1)]\r\n    \r\n        graph = to_cugraph(edge_index, edge_weight, relabel_nodes, directed)\r\n        assert isinstance(graph, cugraph.Graph)\r\n        assert graph.number_of_nodes() == 3\r\n    \r\n        edge_list = graph.view_edge_list()\r\n        assert edge_list is not None\r\n    \r\n        edge_list = edge_list.sort_values(by=['src', 'dst'])\r\n    \r\n        cu_edge_index = edge_list[['src', 'dst']].to_pandas().values\r\n        assert edge_index.tolist() == cu_edge_index.T.tolist()\r\n    \r\n        if edge_weight is not None:\r\n            cu_edge_weight = edge_list['weights'].to_pandas().values\r\n>           assert edge_weight.tolist() == cu_edge_weight.tolist()\r\nE           assert [0.4664377570...6652932167053] == [0.4664377570...7101001739502]\r\nE             Left contains 2 more items, first extra item: 0.4963948[726](https://gitlab-master.nvidia.com/dl/dgx/pyg/-/jobs/53984430#L726)654053\r\nE             Use -v to get the full diff\r\ntest/utils/test_convert.py:433: AssertionError\r\n__________________ test_to_cugraph[False-False-edge_weight1] ___________________\r\nedge_weight = tensor([0.4664, 0.3317, 0.4964, 0.4277]), directed = False\r\nrelabel_nodes = False\r\n    @withPackage('cudf')\r\n    @withPackage('cugraph')\r\n    @pytest.mark.parametrize('edge_weight', [None, torch.rand(4)])\r\n    @pytest.mark.parametrize('relabel_nodes', [True, False])\r\n    @pytest.mark.parametrize('directed', [True, False])\r\n    def test_to_cugraph(edge_weight, directed, relabel_nodes):\r\n        import cugraph\r\n    \r\n        if directed:\r\n            edge_index = torch.tensor([[0, 1, 1, 2], [1, 0, 2, 1]])\r\n        else:\r\n            edge_index = torch.tensor([[0, 1], [1, 2]])\r\n    \r\n        if edge_weight is not None:\r\n            edge_weight[:edge_index.size(1)]\r\n    \r\n        graph = to_cugraph(edge_index, edge_weight, relabel_nodes, directed)\r\n        assert isinstance(graph, cugraph.Graph)\r\n        assert graph.number_of_nodes() == 3\r\n    \r\n        edge_list = graph.view_edge_list()\r\n        assert edge_list is not None\r\n    \r\n        edge_list = edge_list.sort_values(by=['src', 'dst'])\r\n    \r\n        cu_edge_index = edge_list[['src', 'dst']].to_pandas().values\r\n        assert edge_index.tolist() == cu_edge_index.T.tolist()\r\n    \r\n        if edge_weight is not None:\r\n            cu_edge_weight = edge_list['weights'].to_pandas().values\r\n>           assert edge_weight.tolist() == cu_edge_weight.tolist()\r\nE           assert [0.4664377570...6652932167053] == [0.4664377570...7101001[739](https://gitlab-master.nvidia.com/dl/dgx/pyg/-/jobs/53984430#L739)502]\r\nE             Left contains 2 more items, first extra item: 0.4963948726654053\r\nE             Use -v to get the full diff\r\ntest/utils/test_convert.py:433: AssertionError\r\n______________________ test_from_cugraph[True-True-None] _______________________\r\nedge_weight = None, directed = True, relabel_nodes = True\r\n    @withPackage('cudf')\r\n    @withPackage('cugraph')\r\n    @pytest.mark.parametrize('edge_weight', [None, torch.randn(4)])\r\n    @pytest.mark.parametrize('directed', [True, False])\r\n    @pytest.mark.parametrize('relabel_nodes', [True, False])\r\n    def test_from_cugraph(edge_weight, directed, relabel_nodes):\r\n        import cudf\r\n        import cugraph\r\n        from torch.utils.dlpack import to_dlpack\r\n    \r\n        if directed:\r\n            edge_index = torch.tensor([[0, 1, 1, 2], [1, 0, 2, 1]])\r\n        else:\r\n            edge_index = torch.tensor([[0, 1], [1, 2]])\r\n    \r\n        if edge_weight is not None:\r\n            edge_weight[:edge_index.size(1)]\r\n    \r\n        G = cugraph.Graph(directed=directed)\r\n        df = cudf.from_dlpack(to_dlpack(edge_index.t()))\r\n        if edge_weight is not None:\r\n            df['2'] = cudf.from_dlpack(to_dlpack(edge_weight))\r\n    \r\n        G.from_cudf_edgelist(\r\n            df,\r\n            source=0,\r\n            destination=1,\r\n            edge_attr='2' if edge_weight is not None else None,\r\n            renumber=relabel_nodes,\r\n        )\r\n    \r\n        cu_edge_index, cu_edge_weight = from_cugraph(G)\r\n    \r\n>       assert cu_edge_index.tolist() == edge_index.tolist()\r\nE       assert [[1, 0, 2, 1], [2, 1, 1, 0]] == [[0, 1, 1, 2], [1, 0, 2, 1]]\r\nE         At index 0 diff: [1, 0, 2, 1] != [0, 1, 1, 2]\r\nE         Use -v to get the full diff\r\ntest/utils/test_convert.py:469: AssertionError\r\n__________________ test_from_cugraph[True-True-edge_weight1] ___________________\r\nedge_weight = tensor([-0.2837,  0.9451, -0.3490,  0.4564]), directed = True\r\nrelabel_nodes = True\r\n    @withPackage('cudf')\r\n    @withPackage('cugraph')\r\n    @pytest.mark.parametrize('edge_weight', [None, torch.randn(4)])\r\n    @pytest.mark.parametrize('directed', [True, False])\r\n    @pytest.mark.parametrize('relabel_nodes', [True, False])\r\n    def test_from_cugraph(edge_weight, directed, relabel_nodes):\r\n        import cudf\r\n        import cugraph\r\n        from torch.utils.dlpack import to_dlpack\r\n    \r\n        if directed:\r\n            edge_index = torch.tensor([[0, 1, 1, 2], [1, 0, 2, 1]])\r\n        else:\r\n            edge_index = torch.tensor([[0, 1], [1, 2]])\r\n    \r\n        if edge_weight is not None:\r\n            edge_weight[:edge_index.size(1)]\r\n    \r\n        G = cugraph.Graph(directed=directed)\r\n        df = cudf.from_dlpack(to_dlpack(edge_index.t()))\r\n        if edge_weight is not None:\r\n            df['2'] = cudf.from_dlpack(to_dlpack(edge_weight))\r\n    \r\n        G.from_cudf_edgelist(\r\n            df,\r\n            source=0,\r\n            destination=1,\r\n            edge_attr='2' if edge_weight is not None else None,\r\n            renumber=relabel_nodes,\r\n        )\r\n    \r\n        cu_edge_index, cu_edge_weight = from_cugraph(G)\r\n    \r\n>       assert cu_edge_index.tolist() == edge_index.tolist()\r\nE       assert [[1, 0, 2, 1], [2, 1, 1, 0]] == [[0, 1, 1, 2], [1, 0, 2, 1]]\r\nE         At index 0 diff: [1, 0, 2, 1] != [0, 1, 1, 2]\r\nE         Use -v to get the full diff\r\ntest/utils/test_convert.py:469: AssertionError\r\n______________________ test_from_cugraph[True-False-None] ______________________\r\nedge_weight = None, directed = False, relabel_nodes = True\r\n    @withPackage('cudf')\r\n    @withPackage('cugraph')\r\n    @pytest.mark.parametrize('edge_weight', [None, torch.randn(4)])\r\n    @pytest.mark.parametrize('directed', [True, False])\r\n    @pytest.mark.parametrize('relabel_nodes', [True, False])\r\n    def test_from_cugraph(edge_weight, directed, relabel_nodes):\r\n        import cudf\r\n        import cugraph\r\n        from torch.utils.dlpack import to_dlpack\r\n    \r\n        if directed:\r\n            edge_index = torch.tensor([[0, 1, 1, 2], [1, 0, 2, 1]])\r\n        else:\r\n            edge_index = torch.tensor([[0, 1], [1, 2]])\r\n    \r\n        if edge_weight is not None:\r\n            edge_weight[:edge_index.size(1)]\r\n    \r\n        G = cugraph.Graph(directed=directed)\r\n        df = cudf.from_dlpack(to_dlpack(edge_index.t()))\r\n        if edge_weight is not None:\r\n            df['2'] = cudf.from_dlpack(to_dlpack(edge_weight))\r\n    \r\n        G.from_cudf_edgelist(\r\n            df,\r\n            source=0,\r\n            destination=1,\r\n            edge_attr='2' if edge_weight is not None else None,\r\n            renumber=relabel_nodes,\r\n        )\r\n    \r\n        cu_edge_index, cu_edge_weight = from_cugraph(G)\r\n    \r\n>       assert cu_edge_index.tolist() == edge_index.tolist()\r\nE       assert [[1, 0], [2, 1]] == [[0, 1], [1, 2]]\r\nE         At index 0 diff: [1, 0] != [0, 1]\r\nE         Use -v to get the full diff\r\ntest/utils/test_convert.py:469: AssertionError\r\n__________________ test_from_cugraph[True-False-edge_weight1] __________________\r\nedge_weight = tensor([-0.2837,  0.9451, -0.3490,  0.4564]), directed = False\r\nrelabel_nodes = True\r\n    @withPackage('cudf')\r\n    @withPackage('cugraph')\r\n    @pytest.mark.parametrize('edge_weight', [None, torch.randn(4)])\r\n    @pytest.mark.parametrize('directed', [True, False])\r\n    @pytest.mark.parametrize('relabel_nodes', [True, False])\r\n    def test_from_cugraph(edge_weight, directed, relabel_nodes):\r\n        import cudf\r\n        import cugraph\r\n        from torch.utils.dlpack import to_dlpack\r\n    \r\n        if directed:\r\n            edge_index = torch.tensor([[0, 1, 1, 2], [1, 0, 2, 1]])\r\n        else:\r\n            edge_index = torch.tensor([[0, 1], [1, 2]])\r\n    \r\n        if edge_weight is not None:\r\n            edge_weight[:edge_index.size(1)]\r\n    \r\n        G = cugraph.Graph(directed=directed)\r\n        df = cudf.from_dlpack(to_dlpack(edge_index.t()))\r\n        if edge_weight is not None:\r\n            df['2'] = cudf.from_dlpack(to_dlpack(edge_weight))\r\n    \r\n        G.from_cudf_edgelist(\r\n            df,\r\n            source=0,\r\n            destination=1,\r\n            edge_attr='2' if edge_weight is not None else None,\r\n            renumber=relabel_nodes,\r\n        )\r\n    \r\n        cu_edge_index, cu_edge_weight = from_cugraph(G)\r\n    \r\n>       assert cu_edge_index.tolist() == edge_index.tolist()\r\nE       assert [[1, 0], [2, 1]] == [[0, 1], [1, 2]]\r\nE         At index 0 diff: [1, 0] != [0, 1]\r\nE         Use -v to get the full diff\r\ntest/utils/test_convert.py:469: AssertionError\r\n______________________ test_from_cugraph[False-True-None] ______________________\r\nedge_weight = None, directed = True, relabel_nodes = False\r\n    @withPackage('cudf')\r\n    @withPackage('cugraph')\r\n    @pytest.mark.parametrize('edge_weight', [None, torch.randn(4)])\r\n    @pytest.mark.parametrize('directed', [True, False])\r\n    @pytest.mark.parametrize('relabel_nodes', [True, False])\r\n    def test_from_cugraph(edge_weight, directed, relabel_nodes):\r\n        import cudf\r\n        import cugraph\r\n        from torch.utils.dlpack import to_dlpack\r\n    \r\n        if directed:\r\n            edge_index = torch.tensor([[0, 1, 1, 2], [1, 0, 2, 1]])\r\n        else:\r\n            edge_index = torch.tensor([[0, 1], [1, 2]])\r\n    \r\n        if edge_weight is not None:\r\n            edge_weight[:edge_index.size(1)]\r\n    \r\n        G = cugraph.Graph(directed=directed)\r\n        df = cudf.from_dlpack(to_dlpack(edge_index.t()))\r\n        if edge_weight is not None:\r\n            df['2'] = cudf.from_dlpack(to_dlpack(edge_weight))\r\n    \r\n        G.from_cudf_edgelist(\r\n            df,\r\n            source=0,\r\n            destination=1,\r\n            edge_attr='2' if edge_weight is not None else None,\r\n            renumber=relabel_nodes,\r\n        )\r\n    \r\n        cu_edge_index, cu_edge_weight = from_cugraph(G)\r\n    \r\n>       assert cu_edge_index.tolist() == edge_index.tolist()\r\nE       assert [[1, 1, 2, 0], [0, 2, 1, 1]] == [[0, 1, 1, 2], [1, 0, 2, 1]]\r\nE         At index 0 diff: [1, 1, 2, 0] != [0, 1, 1, 2]\r\nE         Use -v to get the full diff\r\ntest/utils/test_convert.py:469: AssertionError\r\n__________________ test_from_cugraph[False-True-edge_weight1] __________________\r\nedge_weight = tensor([-0.2837,  0.9451, -0.3490,  0.4564]), directed = True\r\nrelabel_nodes = False\r\n    @withPackage('cudf')\r\n    @withPackage('cugraph')\r\n    @pytest.mark.parametrize('edge_weight', [None, torch.randn(4)])\r\n    @pytest.mark.parametrize('directed', [True, False])\r\n    @pytest.mark.parametrize('relabel_nodes', [True, False])\r\n    def test_from_cugraph(edge_weight, directed, relabel_nodes):\r\n        import cudf\r\n        import cugraph\r\n        from torch.utils.dlpack import to_dlpack\r\n    \r\n        if directed:\r\n            edge_index = torch.tensor([[0, 1, 1, 2], [1, 0, 2, 1]])\r\n        else:\r\n            edge_index = torch.tensor([[0, 1], [1, 2]])\r\n    \r\n        if edge_weight is not None:\r\n            edge_weight[:edge_index.size(1)]\r\n    \r\n        G = cugraph.Graph(directed=directed)\r\n        df = cudf.from_dlpack(to_dlpack(edge_index.t()))\r\n        if edge_weight is not None:\r\n            df['2'] = cudf.from_dlpack(to_dlpack(edge_weight))\r\n    \r\n        G.from_cudf_edgelist(\r\n            df,\r\n            source=0,\r\n            destination=1,\r\n            edge_attr='2' if edge_weight is not None else None,\r\n            renumber=relabel_nodes,\r\n        )\r\n    \r\n        cu_edge_index, cu_edge_weight = from_cugraph(G)\r\n    \r\n>       assert cu_edge_index.tolist() == edge_index.tolist()\r\nE       assert [[1, 1, 2, 0], [0, 2, 1, 1]] == [[0, 1, 1, 2], [1, 0, 2, 1]]\r\nE         At index 0 diff: [1, 1, 2, 0] != [0, 1, 1, 2]\r\nE         Use -v to get the full diff\r\ntest/utils/test_convert.py:469: AssertionError\r\n_____________________ test_from_cugraph[False-False-None] ______________________\r\nedge_weight = None, directed = False, relabel_nodes = False\r\n    @withPackage('cudf')\r\n/usr/local/lib/python3.8/dist-packages/coverage/control.py:836: CoverageWarning: No data was collected. (no-data-collected)\r\n  self._warn(\"No data was collected.\", slug=\"no-data-collected\")\r\n    @withPackage('cugraph')\r\n    @pytest.mark.parametrize('edge_weight', [None, torch.randn(4)])\r\n    @pytest.mark.parametrize('directed', [True, False])\r\n    @pytest.mark.parametrize('relabel_nodes', [True, False])\r\n    def test_from_cugraph(edge_weight, directed, relabel_nodes):\r\n        import cudf\r\n        import cugraph\r\n        from torch.utils.dlpack import to_dlpack\r\n    \r\n        if directed:\r\n            edge_index = torch.tensor([[0, 1, 1, 2], [1, 0, 2, 1]])\r\n        else:\r\n            edge_index = torch.tensor([[0, 1], [1, 2]])\r\n    \r\n        if edge_weight is not None:\r\n            edge_weight[:edge_index.size(1)]\r\n    \r\n        G = cugraph.Graph(directed=directed)\r\n        df = cudf.from_dlpack(to_dlpack(edge_index.t()))\r\n        if edge_weight is not None:\r\n            df['2'] = cudf.from_dlpack(to_dlpack(edge_weight))\r\n    \r\n        G.from_cudf_edgelist(\r\n            df,\r\n            source=0,\r\n            destination=1,\r\n            edge_attr='2' if edge_weight is not None else None,\r\n            renumber=relabel_nodes,\r\n        )\r\n    \r\n        cu_edge_index, cu_edge_weight = from_cugraph(G)\r\n    \r\n>       assert cu_edge_index.tolist() == edge_index.tolist()\r\nE       assert [[1, 0], [2, 1]] == [[0, 1], [1, 2]]\r\nE         At index 0 diff: [1, 0] != [0, 1]\r\nE         Use -v to get the full diff\r\ntest/utils/test_convert.py:469: AssertionError\r\n_________________ test_from_cugraph[False-False-edge_weight1] __________________\r\nedge_weight = tensor([-0.2837,  0.9451, -0.3490,  0.4564]), directed = False\r\nrelabel_nodes = False\r\n    @withPackage('cudf')\r\n    @withPackage('cugraph')\r\n    @pytest.mark.parametrize('edge_weight', [None, torch.randn(4)])\r\n    @pytest.mark.parametrize('directed', [True, False])\r\n    @pytest.mark.parametrize('relabel_nodes', [True, False])\r\n    def test_from_cugraph(edge_weight, directed, relabel_nodes):\r\n        import cudf\r\n        import cugraph\r\n        from torch.utils.dlpack import to_dlpack\r\n    \r\n        if directed:\r\n            edge_index = torch.tensor([[0, 1, 1, 2], [1, 0, 2, 1]])\r\n        else:\r\n            edge_index = torch.tensor([[0, 1], [1, 2]])\r\n    \r\n        if edge_weight is not None:\r\n            edge_weight[:edge_index.size(1)]\r\n    \r\n        G = cugraph.Graph(directed=directed)\r\n        df = cudf.from_dlpack(to_dlpack(edge_index.t()))\r\n        if edge_weight is not None:\r\n            df['2'] = cudf.from_dlpack(to_dlpack(edge_weight))\r\n    \r\n        G.from_cudf_edgelist(\r\n            df,\r\n            source=0,\r\n            destination=1,\r\n            edge_attr='2' if edge_weight is not None else None,\r\n            renumber=relabel_nodes,\r\n        )\r\n    \r\n        cu_edge_index, cu_edge_weight = from_cugraph(G)\r\n    \r\n>       assert cu_edge_index.tolist() == edge_index.tolist()\r\nE       assert [[1, 0], [2, 1]] == [[0, 1], [1, 2]]\r\nE         At index 0 diff: [1, 0] != [0, 1]\r\nE         Use -v to get the full diff\r\ntest/utils/test_convert.py:469: AssertionError\r\n___________________________ test_spmm_basic[device1] ___________________________\r\ndevice = device(type='cuda', index=0)\r\n    @withCUDA\r\n    def test_spmm_basic(device):\r\n        src = torch.randn(5, 4, device=device)\r\n        other = torch.randn(4, 8, device=device)\r\n    \r\n        out1 = src @ other\r\n        out2 = spmm(src.to_sparse(), other, reduce='sum')\r\n        out3 = spmm(SparseTensor.from_dense(src), other, reduce='sum')\r\n        assert out1.size() == (5, 8)\r\n>       assert torch.allclose(out1, out2)\r\nE       AssertionError: assert False\r\nE        +  where False = <built-in method allclose of type object at 0x7f5bcc3dcbc0>(tensor([[ 2.0477, -1.1278, -0.3330,  1.9007,  3.0619,  1.4840,  2.0230, -2.3307],\\n        [ 1.2360,  2.8585, -1.6878, ...8,  1.4510],\\n        [ 0.8829, -2.6074,  0.4[767](https://gitlab-master.nvidia.com/dl/dgx/pyg/-/jobs/53984430#L767),  2.0739,  3.5401,  2.6623,  0.9645, -1.9539]],\\n       device='cuda:0'), tensor([[ 2.0484, -1.1278, -0.3330,  1.9013,  3.0617,  1.4845,  2.0231, -2.3308],\\n        [ 1.2361,  2.8589, -1.6877, ...8,  1.4507],\\n        [ 0.8829, -2.6078,  0.4[768](https://gitlab-master.nvidia.com/dl/dgx/pyg/-/jobs/53984430#L768),  2.0739,  3.5405,  2.6624,  0.9641, -1.[954](https://gitlab-master.nvidia.com/dl/dgx/pyg/-/jobs/53984430#L954)3]],\\n       device='cuda:0'))\r\nE        +    where <built-in method allclose of type object at 0x7f5bcc3dcbc0> = torch.allclose\r\ntest/utils/test_spmm.py:19: AssertionError\r\n=============================== warnings summary ===============================\r\n../../../usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/graphgym/config.py:19\r\n  /usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/graphgym/config.py:19: UserWarning: Could not define global config object. Please install 'yacs' via 'pip install yacs' in order to use GraphGym\r\n    warnings.warn(\"Could not define global config object. Please install \"\r\n../../../usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/graphgym/imports.py:14\r\n  /usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/graphgym/imports.py:14: UserWarning: Please install 'pytorch_lightning' via  'pip install pytorch_lightning' in order to use GraphGym\r\n    warnings.warn(\"Please install 'pytorch_lightning' via  \"\r\n../../../usr/local/lib/python3.8/dist-packages/optuna/storages/_rdb/models.py:35\r\n  /usr/local/lib/python3.8/dist-packages/optuna/storages/_rdb/models.py:35: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)\r\n    BaseModel: Any = declarative_base()\r\ntest/nn/conv/test_lg_conv.py::test_lg_conv\r\n  /usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py:1480: UserWarning: operator() profile_node %570 : int = prim::profile_ivalue(%565)\r\n   does not have profile information (Triggered internally at /opt/pytorch/pytorch/torch/csrc/jit/codegen/cuda/graph_fuser.cpp:105.)\r\n    return forward_call(*args, **kwargs)\r\ntest/nn/models/test_basic_gnn.py: 1 warning\r\ntest/nn/models/test_rev_gnn.py: 20 warnings\r\n  /usr/local/lib/python3.8/dist-packages/torch/storage.py:315: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.\r\n    warnings.warn(message, UserWarning)\r\n-- Docs: https://docs.pytest.org/en/stable/warnings.html\r\n---------- coverage: platform linux, python 3.8.10-final-0 -----------\r\nCoverage XML written to file coverage.xml\r\n=========================== short test summary info ============================\r\nFAILED test/datasets/test_elliptic.py::test_elliptic_bitcoin_dataset - TypeEr...\r\nFAILED test/utils/test_convert.py::test_to_cugraph[False-True-edge_weight1]\r\nFAILED test/utils/test_convert.py::test_to_cugraph[False-False-edge_weight1]\r\nFAILED test/utils/test_convert.py::test_from_cugraph[True-True-None] - assert...\r\nFAILED test/utils/test_convert.py::test_from_cugraph[True-True-edge_weight1]\r\nFAILED test/utils/test_convert.py::test_from_cugraph[True-False-None] - asser...\r\nFAILED test/utils/test_convert.py::test_from_cugraph[True-False-edge_weight1]\r\nFAILED test/utils/test_convert.py::test_from_cugraph[False-True-None] - asser...\r\nFAILED test/utils/test_convert.py::test_from_cugraph[False-True-edge_weight1]\r\nFAILED test/utils/test_convert.py::test_from_cugraph[False-False-None] - asse...\r\nFAILED test/utils/test_convert.py::test_from_cugraph[False-False-edge_weight1]\r\nFAILED test/utils/test_spmm.py::test_spmm_basic[device1] - AssertionError: as...\r\n==== 12 failed, 3723 passed, 493 skipped, 25 warnings in 296.83s (0:04:56) =====\r\n```\n\n### Environment\n\nupdated to latest pyg and pyg-lib after the last issue was addressed\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6782/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6779", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6779/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6779/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6779/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6779", "id": 1596984617, "node_id": "I_kwDOBlHMec5fMA0p", "number": 6779, "title": "DataLoader Error", "user": {"login": "mgao97", "id": 90015105, "node_id": "MDQ6VXNlcjkwMDE1MTA1", "avatar_url": "https://avatars.githubusercontent.com/u/90015105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgao97", "html_url": "https://github.com/mgao97", "followers_url": "https://api.github.com/users/mgao97/followers", "following_url": "https://api.github.com/users/mgao97/following{/other_user}", "gists_url": "https://api.github.com/users/mgao97/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgao97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgao97/subscriptions", "organizations_url": "https://api.github.com/users/mgao97/orgs", "repos_url": "https://api.github.com/users/mgao97/repos", "events_url": "https://api.github.com/users/mgao97/events{/privacy}", "received_events_url": "https://api.github.com/users/mgao97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-02-23T14:38:30Z", "updated_at": "2023-03-03T08:17:06Z", "closed_at": "2023-03-03T08:17:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\n\r\n\r\nHi! I want to use the min-batch function to extract graph data. Here each data is composed of a pair of graph data, like PairData(edge_index_s=[2, 0], x_s=[1, 166], edge_index_t=[2, 0], x_t=[1, 166]).\r\n\r\nI have encountered the following error,\r\nTraceback (most recent call last):\r\n  File \"run_Bitcoin5.py\", line 581, in <module>\r\n    batch = next(iter(train_loader))\r\n  File \"/conda/envs/env_torch13/lib/python3.8/site-packages/torch/utils/data/dataloader.py\", line 628, in __next__\r\n    data = self._next_data()\r\n  File \"/conda/envs/env_torch13/lib/python3.8/site-packages/torch/utils/data/dataloader.py\", line 671, in _next_data\r\n    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration\r\n  File \"/conda/envs/env_torch13/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py\", line 61, in fetch\r\n    return self.collate_fn(data)\r\n  File \"/conda/envs/env_torch13/lib/python3.8/site-packages/torch_geometric/loader/dataloader.py\", line 19, in __call__\r\n    return Batch.from_data_list(batch, self.follow_batch,\r\n  File \"/conda/envs/env_torch13/lib/python3.8/site-packages/torch_geometric/data/batch.py\", line 76, in from_data_list\r\n    batch, slice_dict, inc_dict = collate(\r\n  File \"/conda/envs/env_torch13/lib/python3.8/site-packages/torch_geometric/data/collate.py\", line 84, in collate\r\n    value, slices, incs = _collate(attr, values, data_list, stores,\r\n  File \"/conda/envs/env_torch13/lib/python3.8/site-packages/torch_geometric/data/collate.py\", line 133, in _collate\r\n    incs = get_incs(key, values, data_list, stores)\r\n  File \"/conda/envs/env_torch13/lib/python3.8/site-packages/torch_geometric/data/collate.py\", line 262, in get_incs\r\n    repeats = [\r\n  File \"/conda/envs/env_torch13/lib/python3.8/site-packages/torch_geometric/data/collate.py\", line 263, in <listcomp>\r\n    data.__inc__(key, value, store)\r\nTypeError: __inc__() takes 3 positional arguments but 4 were given\r\n\r\nAny solutions or suggestions to solve it?\r\n\r\nThanks!\n\n### Environment\n\n* PyG version: 2.2.4\r\n* PyTorch version: 1.13.0\r\n* OS: Linux\r\n* Python version: 3.8.0\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6779/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6778", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6778/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6778/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6778/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6778", "id": 1596984349, "node_id": "PR_kwDOBlHMec5KnQDd", "number": 6778, "title": "Fix `ChebConv` within `GNNExplainer`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-02-23T14:38:19Z", "updated_at": "2023-02-23T14:43:33Z", "closed_at": "2023-02-23T14:43:32Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6778", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6778", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6778.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6778.patch", "merged_at": "2023-02-23T14:43:32Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6778/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6772", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6772/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6772/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6772/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6772", "id": 1596136489, "node_id": "I_kwDOBlHMec5fIxwp", "number": 6772, "title": "multiprocessing dataloader collate has error", "user": {"login": "simplehx", "id": 12119381, "node_id": "MDQ6VXNlcjEyMTE5Mzgx", "avatar_url": "https://avatars.githubusercontent.com/u/12119381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simplehx", "html_url": "https://github.com/simplehx", "followers_url": "https://api.github.com/users/simplehx/followers", "following_url": "https://api.github.com/users/simplehx/following{/other_user}", "gists_url": "https://api.github.com/users/simplehx/gists{/gist_id}", "starred_url": "https://api.github.com/users/simplehx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simplehx/subscriptions", "organizations_url": "https://api.github.com/users/simplehx/orgs", "repos_url": "https://api.github.com/users/simplehx/repos", "events_url": "https://api.github.com/users/simplehx/events{/privacy}", "received_events_url": "https://api.github.com/users/simplehx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-02-23T03:03:12Z", "updated_at": "2023-02-23T13:43:45Z", "closed_at": "2023-02-23T13:43:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI want to use nn.Embedding to initialize the x parameter of Graph, when the DataLoader num_worker>0 I encounter an error. If num_worker=0 this error does not occur.\r\n\r\n```\r\nRuntimeError: cat(): functions with out=... arguments don't support automatic differentiation, but one of the arguments requires grad.\r\n```\r\nThe error occurred at line 155 of the torch_geometric/data/collate.py file:\r\n```\r\nvalue = torch.cat(values, dim=cat_dim or 0, out=out)\r\n```\r\n\r\nthis is a sample code:\r\n```python\r\nimport torch\r\nimport torch.nn as nn\r\nfrom torch_geometric.data import Dataset\r\nfrom torch_geometric.loader import DataLoader\r\nfrom torch_geometric.data import Data as GraphData\r\n\r\nclass DatasetTest(Dataset):\r\n    def __init__(self):\r\n        super(DatasetTest, self).__init__()\r\n        self.dataset_len = 1000\r\n        self.embedding = nn.Embedding(1024, 128)\r\n\r\n    def __getitem__(self, index):\r\n        x = self.embedding(torch.randint(0, 1024, (10,)))\r\n        edge_from_list = torch.randint(0, 10, (20,))\r\n        edge_to_list = torch.randint(0, 10, (20,))\r\n        graph = GraphData(x=x, edge_index=torch.stack((edge_from_list, edge_to_list)))\r\n        return graph\r\n    \r\n    def __len__(self):\r\n        return self.dataset_len\r\n\r\nif __name__ == '__main__':\r\n    dataset_test = DatasetTest()\r\n    data_loader = DataLoader(dataset_test, batch_size=10, shuffle=True, num_workers=4, pin_memory=True)\r\n    for data in data_loader:\r\n        print(data)\r\n```\r\n\r\nthis is the full traceback:\r\n```\r\nRuntimeError       (note: full exception trace is shown but execution is paused at: _run_module_as_main)\r\nCaught RuntimeError in DataLoader worker process 0.\r\nOriginal Traceback (most recent call last):\r\n  File \"/opt/conda/envs/NextPOI/lib/python3.9/site-packages/torch/utils/data/_utils/worker.py\", line 302, in _worker_loop\r\n    data = fetcher.fetch(index)\r\n  File \"/opt/conda/envs/NextPOI/lib/python3.9/site-packages/torch/utils/data/_utils/fetch.py\", line 61, in fetch\r\n    return self.collate_fn(data)\r\n  File \"/opt/conda/envs/NextPOI/lib/python3.9/site-packages/torch_geometric/loader/dataloader.py\", line 19, in __call__\r\n    return Batch.from_data_list(batch, self.follow_batch,\r\n  File \"/opt/conda/envs/NextPOI/lib/python3.9/site-packages/torch_geometric/data/batch.py\", line 76, in from_data_list\r\n    batch, slice_dict, inc_dict = collate(\r\n  File \"/opt/conda/envs/NextPOI/lib/python3.9/site-packages/torch_geometric/data/collate.py\", line 84, in collate\r\n    value, slices, incs = _collate(attr, values, data_list, stores,\r\n  File \"/opt/conda/envs/NextPOI/lib/python3.9/site-packages/torch_geometric/data/collate.py\", line 155, in _collate\r\n    value = torch.cat(values, dim=cat_dim or 0, out=out)\r\nRuntimeError: cat(): functions with out=... arguments don't support automatic differentiation, but one of the arguments requires grad.\r\n  File \"/opt/conda/envs/NextPOI/lib/python3.9/site-packages/torch/_utils.py\", line 543, in reraise\r\n    raise exception\r\n  File \"/opt/conda/envs/NextPOI/lib/python3.9/site-packages/torch/utils/data/dataloader.py\", line 1359, in _process_data\r\n    data.reraise()\r\n  File \"/opt/conda/envs/NextPOI/lib/python3.9/site-packages/torch/utils/data/dataloader.py\", line 1333, in _next_data\r\n    return self._process_data(data)\r\n  File \"/opt/conda/envs/NextPOI/lib/python3.9/site-packages/torch/utils/data/dataloader.py\", line 628, in __next__\r\n    data = self._next_data()\r\n  File \"/root/workspace/full/bug.py\", line 26, in <module>\r\n    for data in data_loader:\r\n  File \"/opt/conda/envs/NextPOI/lib/python3.9/runpy.py\", line 87, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/opt/conda/envs/NextPOI/lib/python3.9/runpy.py\", line 197, in _run_module_as_main (Current frame)\r\n    return _run_code(code, main_globals, None,\r\nRuntimeError: Caught RuntimeError in DataLoader worker process 0.\r\nOriginal Traceback (most recent call last):\r\n  File \"/opt/conda/envs/NextPOI/lib/python3.9/site-packages/torch/utils/data/_utils/worker.py\", line 302, in _worker_loop\r\n    data = fetcher.fetch(index)\r\n  File \"/opt/conda/envs/NextPOI/lib/python3.9/site-packages/torch/utils/data/_utils/fetch.py\", line 61, in fetch\r\n    return self.collate_fn(data)\r\n  File \"/opt/conda/envs/NextPOI/lib/python3.9/site-packages/torch_geometric/loader/dataloader.py\", line 19, in __call__\r\n    return Batch.from_data_list(batch, self.follow_batch,\r\n  File \"/opt/conda/envs/NextPOI/lib/python3.9/site-packages/torch_geometric/data/batch.py\", line 76, in from_data_list\r\n    batch, slice_dict, inc_dict = collate(\r\n  File \"/opt/conda/envs/NextPOI/lib/python3.9/site-packages/torch_geometric/data/collate.py\", line 84, in collate\r\n    value, slices, incs = _collate(attr, values, data_list, stores,\r\n  File \"/opt/conda/envs/NextPOI/lib/python3.9/site-packages/torch_geometric/data/collate.py\", line 155, in _collate\r\n    value = torch.cat(values, dim=cat_dim or 0, out=out)\r\nRuntimeError: cat(): functions with out=... arguments don't support automatic differentiation, but one of the arguments requires grad.\r\n```\n\n### Environment\n\n* PyG version: 2.2.0\r\n* PyTorch version: 1.13.1\r\n* OS: Ubuntu 22.04\r\n* Python version: 3.9.16\r\n* CUDA/cuDNN version: 11.7\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6772/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6770", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6770/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6770/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6770/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6770", "id": 1595045418, "node_id": "PR_kwDOBlHMec5Kgsp6", "number": 6770, "title": "Fix tests", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-02-22T12:46:07Z", "updated_at": "2023-02-22T12:54:09Z", "closed_at": "2023-02-22T12:54:08Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6770", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6770", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6770.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6770.patch", "merged_at": "2023-02-22T12:54:08Z"}, "body": "Fixes #6765", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6770/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6769", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6769/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6769/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6769/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6769", "id": 1595012576, "node_id": "PR_kwDOBlHMec5Kgloy", "number": 6769, "title": "Fix `ModuleDict.items()`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-22T12:22:05Z", "updated_at": "2023-02-22T12:29:10Z", "closed_at": "2023-02-22T12:29:08Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6769", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6769", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6769.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6769.patch", "merged_at": "2023-02-22T12:29:08Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6769/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6765", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6765/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6765/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6765/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6765", "id": 1594299731, "node_id": "I_kwDOBlHMec5fBxVT", "number": 6765, "title": "CI Failures", "user": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-22T01:13:53Z", "updated_at": "2023-02-22T12:54:09Z", "closed_at": "2023-02-22T12:54:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\n```\r\n=========================== short test summary info ============================\r\nFAILED test/datasets/test_elliptic.py::test_elliptic_bitcoin_dataset - TypeEr...\r\nFAILED test/explain/metric/test_basic_metric.py::test_groundtruth_metrics - V...\r\nFAILED test/explain/metric/test_basic_metric.py::test_perfect_groundtruth_metrics\r\nFAILED test/explain/metric/test_basic_metric.py::test_groundtruth_true_negative\r\nFAILED test/nn/models/test_basic_gnn.py::test_onnx - ValueError: This ORT bui...\r\n===== 5 failed, 3701 passed, 475 skipped, 36 warnings in 262.64s (0:04:22) =====\r\n```\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n________________________ test_elliptic_bitcoin_dataset _________________________\r\n\r\nget_dataset = functools.partial(<function load_dataset at 0x7fcf7b6f9040>, '/tmp/pyg_test_datasets')\r\n\r\n    @onlyFullTest\r\n    def test_elliptic_bitcoin_dataset(get_dataset):\r\n>       dataset = get_dataset(name='EllipticBitcoinDataset')\r\n\r\ntest/datasets/test_elliptic.py:6: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\ntest/conftest.py:41: in load_dataset\r\n    return EllipticBitcoinDataset(path, *args, **kwargs)\r\n/usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/datasets/elliptic.py:60: in __init__\r\n    super().__init__(root, transform, pre_transform)\r\n/usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/data/in_memory_dataset.py:56: in __init__\r\n    super().__init__(root, transform, pre_transform, pre_filter, log)\r\n/usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/data/dataset.py:94: in __init__\r\n    self._process()\r\n/usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/data/dataset.py:221: in _process\r\n    self.process()\r\n/usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/datasets/elliptic.py:90: in process\r\n    x = torch.from_numpy(df_features.loc[:, 2:].values).to(torch.float)\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexing.py:873: in __getitem__\r\n    return self._getitem_tuple(key)\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexing.py:1055: in _getitem_tuple\r\n    return self._getitem_tuple_same_dim(tup)\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexing.py:750: in _getitem_tuple_same_dim\r\n    retval = getattr(retval, self.name)._getitem_axis(key, axis=i)\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexing.py:1088: in _getitem_axis\r\n    return self._get_slice_axis(key, axis=axis)\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexing.py:1122: in _get_slice_axis\r\n    indexer = labels.slice_indexer(\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexes/base.py:4966: in slice_indexer\r\n    start_slice, end_slice = self.slice_locs(start, end, step=step, kind=kind)\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexes/base.py:5169: in slice_locs\r\n    start_slice = self.get_slice_bound(start, \"left\", kind)\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexes/base.py:5079: in get_slice_bound\r\n    label = self._maybe_cast_slice_bound(label, side, kind)\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexes/base.py:5031: in _maybe_cast_slice_bound\r\n    self._invalid_indexer(\"slice\", label)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = Index([     'txId', 'time_step',           2,           3,           4,\r\n                 5,           6,           7, ...        161,\r\n               162,         163,         164,         165,         166],\r\n      dtype='object', length=167)\r\nform = 'slice', key = 2\r\n\r\n    def _invalid_indexer(self, form: str_t, key):\r\n        \"\"\"\r\n        Consistent invalid indexer message.\r\n        \"\"\"\r\n>       raise TypeError(\r\n            f\"cannot do {form} indexing on {type(self).__name__} with these \"\r\n            f\"indexers [{key}] of type {type(key).__name__}\"\r\n        )\r\nE       TypeError: cannot do slice indexing on Index with these indexers [2] of type int\r\n\r\n/usr/local/lib/python3.8/dist-packages/pandas/core/indexes/base.py:3267: TypeError\r\n___________________________ test_groundtruth_metrics ___________________________\r\n\r\n    def test_groundtruth_metrics():\r\n        pred_mask = torch.rand(10)\r\n        target_mask = torch.rand(10)\r\n    \r\n>       accuracy, recall, precision, f1_score, auroc = groundtruth_metrics(\r\n            pred_mask, target_mask)\r\n\r\ntest/explain/metric/test_basic_metric.py:12: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/explain/metric/basic.py:52: in groundtruth_metrics\r\n    out = fn(pred_mask, target_mask, 'binary', threshold)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\npreds = tensor([0.5783, 0.4249, 0.8071, 0.0037, 0.0704, 0.9466, 0.4047, 0.7245, 0.9427,\r\n        0.4929])\r\ntarget = tensor([ True,  True, False, False,  True,  True, False, False,  True,  True])\r\naverage = 'binary', mdmc_average = 0.5, threshold = 0.5, top_k = None\r\nsubset_accuracy = False, num_classes = None, multiclass = None\r\nignore_index = None\r\n\r\n    def accuracy(\r\n        preds: Tensor,\r\n        target: Tensor,\r\n        average: Optional[str] = \"micro\",\r\n        mdmc_average: Optional[str] = \"global\",\r\n        threshold: float = 0.5,\r\n        top_k: Optional[int] = None,\r\n        subset_accuracy: bool = False,\r\n        num_classes: Optional[int] = None,\r\n        multiclass: Optional[bool] = None,\r\n        ignore_index: Optional[int] = None,\r\n    ) -> Tensor:\r\n        r\"\"\"Computes `Accuracy`_\r\n    \r\n        .. math::\r\n            \\text{Accuracy} = \\frac{1}{N}\\sum_i^N 1(y_i = \\hat{y}_i)\r\n    \r\n        Where :math:`y` is a tensor of target values, and :math:`\\hat{y}` is a\r\n        tensor of predictions.\r\n    \r\n        For multi-class and multi-dimensional multi-class data with probability or logits predictions, the\r\n        parameter ``top_k`` generalizes this metric to a Top-K accuracy metric: for each sample the\r\n        top-K highest probability or logits items are considered to find the correct label.\r\n    \r\n        For multi-label and multi-dimensional multi-class inputs, this metric computes the \"global\"\r\n        accuracy by default, which counts all labels or sub-samples separately. This can be\r\n        changed to subset accuracy (which requires all labels or sub-samples in the sample to\r\n        be correctly predicted) by setting ``subset_accuracy=True``.\r\n    \r\n        Accepts all input types listed in :ref:`pages/classification:input types`.\r\n    \r\n        Args:\r\n            preds: Predictions from model (probabilities, logits or labels)\r\n            target: Ground truth labels\r\n            average:\r\n                Defines the reduction that is applied. Should be one of the following:\r\n    \r\n                - ``'micro'`` [default]: Calculate the metric globally, across all samples and classes.\r\n                - ``'macro'``: Calculate the metric for each class separately, and average the\r\n                  metrics across classes (with equal weights for each class).\r\n                - ``'weighted'``: Calculate the metric for each class separately, and average the\r\n                  metrics across classes, weighting each class by its support (``tp + fn``).\r\n                - ``'none'`` or ``None``: Calculate the metric for each class separately, and return\r\n                  the metric for every class.\r\n                - ``'samples'``: Calculate the metric for each sample, and average the metrics\r\n                  across samples (with equal weights for each sample).\r\n    \r\n                .. note:: What is considered a sample in the multi-dimensional multi-class case\r\n                    depends on the value of ``mdmc_average``.\r\n    \r\n                .. note:: If ``'none'`` and a given class doesn't occur in the ``preds`` or ``target``,\r\n                    the value for the class will be ``nan``.\r\n    \r\n            mdmc_average:\r\n                Defines how averaging is done for multi-dimensional multi-class inputs (on top of the\r\n                ``average`` parameter). Should be one of the following:\r\n    \r\n                - ``None`` [default]: Should be left unchanged if your data is not multi-dimensional multi-class.\r\n    \r\n                - ``'samplewise'``: In this case, the statistics are computed separately for each\r\n                  sample on the ``N`` axis, and then averaged over samples.\r\n                  The computation for each sample is done by treating the flattened extra axes ``...``\r\n                  (see :ref:`pages/classification:input types`) as the ``N`` dimension within the sample,\r\n                  and computing the metric for the sample based on that.\r\n    \r\n                - ``'global'``: In this case the ``N`` and ``...`` dimensions of the inputs\r\n                  (see :ref:`pages/classification:input types`)\r\n                  are flattened into a new ``N_X`` sample axis, i.e. the inputs are treated as if they\r\n                  were ``(N_X, C)``. From here on the ``average`` parameter applies as usual.\r\n    \r\n            num_classes:\r\n                Number of classes. Necessary for ``'macro'``, ``'weighted'`` and ``None`` average methods.\r\n    \r\n            threshold:\r\n                Threshold for transforming probability or logit predictions to binary (0,1) predictions, in the case\r\n                of binary or multi-label inputs. Default value of 0.5 corresponds to input being probabilities.\r\n            top_k:\r\n                Number of the highest probability or logit score predictions considered finding the correct label,\r\n                relevant only for (multi-dimensional) multi-class inputs. The\r\n                default value (``None``) will be interpreted as 1 for these inputs.\r\n    \r\n                Should be left at default (``None``) for all other types of inputs.\r\n            multiclass:\r\n                Used only in certain special cases, where you want to treat inputs as a different type\r\n                than what they appear to be. See the parameter's\r\n                :ref:`documentation section <pages/classification:using the multiclass parameter>`\r\n                for a more detailed explanation and examples.\r\n            ignore_index:\r\n                Integer specifying a target class to ignore. If given, this class index does not contribute\r\n                to the returned score, regardless of reduction method. If an index is ignored, and ``average=None``\r\n                or ``'none'``, the score for the ignored class will be returned as ``nan``.\r\n            subset_accuracy:\r\n                Whether to compute subset accuracy for multi-label and multi-dimensional\r\n                multi-class inputs (has no effect for other input types).\r\n    \r\n                - For multi-label inputs, if the parameter is set to ``True``, then all labels for\r\n                  each sample must be correctly predicted for the sample to count as correct. If it\r\n                  is set to ``False``, then all labels are counted separately - this is equivalent to\r\n                  flattening inputs beforehand (i.e. ``preds = preds.flatten()`` and same for ``target``).\r\n    \r\n                - For multi-dimensional multi-class inputs, if the parameter is set to ``True``, then all\r\n                  sub-sample (on the extra axis) must be correct for the sample to be counted as correct.\r\n                  If it is set to ``False``, then all sub-samples are counter separately - this is equivalent,\r\n                  in the case of label predictions, to flattening the inputs beforehand (i.e.\r\n                  ``preds = preds.flatten()`` and same for ``target``). Note that the ``top_k`` parameter\r\n                  still applies in both cases, if set.\r\n    \r\n        Raises:\r\n            ValueError:\r\n                If ``top_k`` parameter is set for ``multi-label`` inputs.\r\n            ValueError:\r\n                If ``average`` is none of ``\"micro\"``, ``\"macro\"``, ``\"weighted\"``, ``\"samples\"``, ``\"none\"``, ``None``.\r\n            ValueError:\r\n                If ``mdmc_average`` is not one of ``None``, ``\"samplewise\"``, ``\"global\"``.\r\n            ValueError:\r\n                If ``average`` is set but ``num_classes`` is not provided.\r\n            ValueError:\r\n                If ``num_classes`` is set\r\n                and ``ignore_index`` is not in the range ``[0, num_classes)``.\r\n            ValueError:\r\n                If ``top_k`` is not an ``integer`` larger than ``0``.\r\n    \r\n        Example:\r\n            >>> import torch\r\n            >>> from torchmetrics.functional import accuracy\r\n            >>> target = torch.tensor([0, 1, 2, 3])\r\n            >>> preds = torch.tensor([0, 2, 1, 3])\r\n            >>> accuracy(preds, target)\r\n            tensor(0.5000)\r\n    \r\n            >>> target = torch.tensor([0, 1, 2])\r\n            >>> preds = torch.tensor([[0.1, 0.9, 0], [0.3, 0.1, 0.6], [0.2, 0.5, 0.3]])\r\n            >>> accuracy(preds, target, top_k=2)\r\n            tensor(0.6667)\r\n        \"\"\"\r\n        allowed_average = [\"micro\", \"macro\", \"weighted\", \"samples\", \"none\", None]\r\n        if average not in allowed_average:\r\n>           raise ValueError(f\"The `average` has to be one of {allowed_average}, got {average}.\")\r\nE           ValueError: The `average` has to be one of ['micro', 'macro', 'weighted', 'samples', 'none', None], got binary.\r\n\r\n/usr/local/lib/python3.8/dist-packages/torchmetrics/functional/classification/accuracy.py:395: ValueError\r\n_______________________ test_perfect_groundtruth_metrics _______________________\r\n\r\n    def test_perfect_groundtruth_metrics():\r\n        pred_mask = target_mask = torch.rand(10)\r\n    \r\n>       accuracy, recall, precision, f1_score, auroc = groundtruth_metrics(\r\n            pred_mask, target_mask)\r\n\r\ntest/explain/metric/test_basic_metric.py:25: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/explain/metric/basic.py:52: in groundtruth_metrics\r\n    out = fn(pred_mask, target_mask, 'binary', threshold)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\npreds = tensor([0.9914, 0.0506, 0.0854, 0.1119, 0.6376, 0.5309, 0.2076, 0.4813, 0.5845,\r\n        0.2689])\r\ntarget = tensor([ True, False, False, False,  True,  True, False, False,  True, False])\r\naverage = 'binary', mdmc_average = 0.5, threshold = 0.5, top_k = None\r\nsubset_accuracy = False, num_classes = None, multiclass = None\r\nignore_index = None\r\n\r\n    def accuracy(\r\n        preds: Tensor,\r\n        target: Tensor,\r\n        average: Optional[str] = \"micro\",\r\n        mdmc_average: Optional[str] = \"global\",\r\n        threshold: float = 0.5,\r\n        top_k: Optional[int] = None,\r\n        subset_accuracy: bool = False,\r\n        num_classes: Optional[int] = None,\r\n        multiclass: Optional[bool] = None,\r\n        ignore_index: Optional[int] = None,\r\n    ) -> Tensor:\r\n        r\"\"\"Computes `Accuracy`_\r\n    \r\n        .. math::\r\n            \\text{Accuracy} = \\frac{1}{N}\\sum_i^N 1(y_i = \\hat{y}_i)\r\n    \r\n        Where :math:`y` is a tensor of target values, and :math:`\\hat{y}` is a\r\n        tensor of predictions.\r\n    \r\n        For multi-class and multi-dimensional multi-class data with probability or logits predictions, the\r\n        parameter ``top_k`` generalizes this metric to a Top-K accuracy metric: for each sample the\r\n        top-K highest probability or logits items are considered to find the correct label.\r\n    \r\n        For multi-label and multi-dimensional multi-class inputs, this metric computes the \"global\"\r\n        accuracy by default, which counts all labels or sub-samples separately. This can be\r\n        changed to subset accuracy (which requires all labels or sub-samples in the sample to\r\n        be correctly predicted) by setting ``subset_accuracy=True``.\r\n    \r\n        Accepts all input types listed in :ref:`pages/classification:input types`.\r\n    \r\n        Args:\r\n            preds: Predictions from model (probabilities, logits or labels)\r\n            target: Ground truth labels\r\n            average:\r\n                Defines the reduction that is applied. Should be one of the following:\r\n    \r\n                - ``'micro'`` [default]: Calculate the metric globally, across all samples and classes.\r\n                - ``'macro'``: Calculate the metric for each class separately, and average the\r\n                  metrics across classes (with equal weights for each class).\r\n                - ``'weighted'``: Calculate the metric for each class separately, and average the\r\n                  metrics across classes, weighting each class by its support (``tp + fn``).\r\n                - ``'none'`` or ``None``: Calculate the metric for each class separately, and return\r\n                  the metric for every class.\r\n                - ``'samples'``: Calculate the metric for each sample, and average the metrics\r\n                  across samples (with equal weights for each sample).\r\n    \r\n                .. note:: What is considered a sample in the multi-dimensional multi-class case\r\n                    depends on the value of ``mdmc_average``.\r\n    \r\n                .. note:: If ``'none'`` and a given class doesn't occur in the ``preds`` or ``target``,\r\n                    the value for the class will be ``nan``.\r\n    \r\n            mdmc_average:\r\n                Defines how averaging is done for multi-dimensional multi-class inputs (on top of the\r\n                ``average`` parameter). Should be one of the following:\r\n    \r\n                - ``None`` [default]: Should be left unchanged if your data is not multi-dimensional multi-class.\r\n    \r\n                - ``'samplewise'``: In this case, the statistics are computed separately for each\r\n                  sample on the ``N`` axis, and then averaged over samples.\r\n                  The computation for each sample is done by treating the flattened extra axes ``...``\r\n                  (see :ref:`pages/classification:input types`) as the ``N`` dimension within the sample,\r\n                  and computing the metric for the sample based on that.\r\n    \r\n                - ``'global'``: In this case the ``N`` and ``...`` dimensions of the inputs\r\n                  (see :ref:`pages/classification:input types`)\r\n                  are flattened into a new ``N_X`` sample axis, i.e. the inputs are treated as if they\r\n                  were ``(N_X, C)``. From here on the ``average`` parameter applies as usual.\r\n    \r\n            num_classes:\r\n                Number of classes. Necessary for ``'macro'``, ``'weighted'`` and ``None`` average methods.\r\n    \r\n            threshold:\r\n                Threshold for transforming probability or logit predictions to binary (0,1) predictions, in the case\r\n                of binary or multi-label inputs. Default value of 0.5 corresponds to input being probabilities.\r\n            top_k:\r\n                Number of the highest probability or logit score predictions considered finding the correct label,\r\n                relevant only for (multi-dimensional) multi-class inputs. The\r\n                default value (``None``) will be interpreted as 1 for these inputs.\r\n    \r\n                Should be left at default (``None``) for all other types of inputs.\r\n            multiclass:\r\n                Used only in certain special cases, where you want to treat inputs as a different type\r\n                than what they appear to be. See the parameter's\r\n                :ref:`documentation section <pages/classification:using the multiclass parameter>`\r\n                for a more detailed explanation and examples.\r\n            ignore_index:\r\n                Integer specifying a target class to ignore. If given, this class index does not contribute\r\n                to the returned score, regardless of reduction method. If an index is ignored, and ``average=None``\r\n                or ``'none'``, the score for the ignored class will be returned as ``nan``.\r\n            subset_accuracy:\r\n                Whether to compute subset accuracy for multi-label and multi-dimensional\r\n                multi-class inputs (has no effect for other input types).\r\n    \r\n                - For multi-label inputs, if the parameter is set to ``True``, then all labels for\r\n                  each sample must be correctly predicted for the sample to count as correct. If it\r\n                  is set to ``False``, then all labels are counted separately - this is equivalent to\r\n                  flattening inputs beforehand (i.e. ``preds = preds.flatten()`` and same for ``target``).\r\n    \r\n                - For multi-dimensional multi-class inputs, if the parameter is set to ``True``, then all\r\n                  sub-sample (on the extra axis) must be correct for the sample to be counted as correct.\r\n                  If it is set to ``False``, then all sub-samples are counter separately - this is equivalent,\r\n                  in the case of label predictions, to flattening the inputs beforehand (i.e.\r\n                  ``preds = preds.flatten()`` and same for ``target``). Note that the ``top_k`` parameter\r\n                  still applies in both cases, if set.\r\n    \r\n        Raises:\r\n            ValueError:\r\n                If ``top_k`` parameter is set for ``multi-label`` inputs.\r\n            ValueError:\r\n                If ``average`` is none of ``\"micro\"``, ``\"macro\"``, ``\"weighted\"``, ``\"samples\"``, ``\"none\"``, ``None``.\r\n            ValueError:\r\n                If ``mdmc_average`` is not one of ``None``, ``\"samplewise\"``, ``\"global\"``.\r\n            ValueError:\r\n                If ``average`` is set but ``num_classes`` is not provided.\r\n            ValueError:\r\n                If ``num_classes`` is set\r\n                and ``ignore_index`` is not in the range ``[0, num_classes)``.\r\n            ValueError:\r\n                If ``top_k`` is not an ``integer`` larger than ``0``.\r\n    \r\n        Example:\r\n            >>> import torch\r\n            >>> from torchmetrics.functional import accuracy\r\n            >>> target = torch.tensor([0, 1, 2, 3])\r\n            >>> preds = torch.tensor([0, 2, 1, 3])\r\n            >>> accuracy(preds, target)\r\n            tensor(0.5000)\r\n    \r\n            >>> target = torch.tensor([0, 1, 2])\r\n            >>> preds = torch.tensor([[0.1, 0.9, 0], [0.3, 0.1, 0.6], [0.2, 0.5, 0.3]])\r\n            >>> accuracy(preds, target, top_k=2)\r\n            tensor(0.6667)\r\n        \"\"\"\r\n        allowed_average = [\"micro\", \"macro\", \"weighted\", \"samples\", \"none\", None]\r\n        if average not in allowed_average:\r\n>           raise ValueError(f\"The `average` has to be one of {allowed_average}, got {average}.\")\r\nE           ValueError: The `average` has to be one of ['micro', 'macro', 'weighted', 'samples', 'none', None], got binary.\r\n\r\n/usr/local/lib/python3.8/dist-packages/torchmetrics/functional/classification/accuracy.py:395: ValueError\r\n________________________ test_groundtruth_true_negative ________________________\r\n\r\n    def test_groundtruth_true_negative():\r\n        warnings.filterwarnings('ignore', '.*No positive samples in targets.*')\r\n        pred_mask = target_mask = torch.zeros(10)\r\n    \r\n>       accuracy, recall, precision, f1_score, auroc = groundtruth_metrics(\r\n            pred_mask, target_mask)\r\n\r\ntest/explain/metric/test_basic_metric.py:39: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/usr/local/lib/python3.8/dist-packages/torch_geometric-2.3.0-py3.8.egg/torch_geometric/explain/metric/basic.py:52: in groundtruth_metrics\r\n    out = fn(pred_mask, target_mask, 'binary', threshold)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\npreds = tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])\r\ntarget = tensor([False, False, False, False, False, False, False, False, False, False])\r\naverage = 'binary', mdmc_average = 0.5, threshold = 0.5, top_k = None\r\nsubset_accuracy = False, num_classes = None, multiclass = None\r\nignore_index = None\r\n\r\n    def accuracy(\r\n        preds: Tensor,\r\n        target: Tensor,\r\n        average: Optional[str] = \"micro\",\r\n        mdmc_average: Optional[str] = \"global\",\r\n        threshold: float = 0.5,\r\n        top_k: Optional[int] = None,\r\n        subset_accuracy: bool = False,\r\n        num_classes: Optional[int] = None,\r\n        multiclass: Optional[bool] = None,\r\n        ignore_index: Optional[int] = None,\r\n    ) -> Tensor:\r\n        r\"\"\"Computes `Accuracy`_\r\n    \r\n        .. math::\r\n            \\text{Accuracy} = \\frac{1}{N}\\sum_i^N 1(y_i = \\hat{y}_i)\r\n    \r\n        Where :math:`y` is a tensor of target values, and :math:`\\hat{y}` is a\r\n        tensor of predictions.\r\n    \r\n        For multi-class and multi-dimensional multi-class data with probability or logits predictions, the\r\n        parameter ``top_k`` generalizes this metric to a Top-K accuracy metric: for each sample the\r\n        top-K highest probability or logits items are considered to find the correct label.\r\n    \r\n        For multi-label and multi-dimensional multi-class inputs, this metric computes the \"global\"\r\n        accuracy by default, which counts all labels or sub-samples separately. This can be\r\n        changed to subset accuracy (which requires all labels or sub-samples in the sample to\r\n        be correctly predicted) by setting ``subset_accuracy=True``.\r\n    \r\n        Accepts all input types listed in :ref:`pages/classification:input types`.\r\n    \r\n        Args:\r\n            preds: Predictions from model (probabilities, logits or labels)\r\n            target: Ground truth labels\r\n            average:\r\n                Defines the reduction that is applied. Should be one of the following:\r\n    \r\n                - ``'micro'`` [default]: Calculate the metric globally, across all samples and classes.\r\n                - ``'macro'``: Calculate the metric for each class separately, and average the\r\n                  metrics across classes (with equal weights for each class).\r\n                - ``'weighted'``: Calculate the metric for each class separately, and average the\r\n                  metrics across classes, weighting each class by its support (``tp + fn``).\r\n                - ``'none'`` or ``None``: Calculate the metric for each class separately, and return\r\n                  the metric for every class.\r\n                - ``'samples'``: Calculate the metric for each sample, and average the metrics\r\n                  across samples (with equal weights for each sample).\r\n    \r\n                .. note:: What is considered a sample in the multi-dimensional multi-class case\r\n                    depends on the value of ``mdmc_average``.\r\n    \r\n                .. note:: If ``'none'`` and a given class doesn't occur in the ``preds`` or ``target``,\r\n                    the value for the class will be ``nan``.\r\n    \r\n            mdmc_average:\r\n                Defines how averaging is done for multi-dimensional multi-class inputs (on top of the\r\n                ``average`` parameter). Should be one of the following:\r\n    \r\n                - ``None`` [default]: Should be left unchanged if your data is not multi-dimensional multi-class.\r\n    \r\n                - ``'samplewise'``: In this case, the statistics are computed separately for each\r\n                  sample on the ``N`` axis, and then averaged over samples.\r\n                  The computation for each sample is done by treating the flattened extra axes ``...``\r\n                  (see :ref:`pages/classification:input types`) as the ``N`` dimension within the sample,\r\n                  and computing the metric for the sample based on that.\r\n    \r\n                - ``'global'``: In this case the ``N`` and ``...`` dimensions of the inputs\r\n                  (see :ref:`pages/classification:input types`)\r\n                  are flattened into a new ``N_X`` sample axis, i.e. the inputs are treated as if they\r\n                  were ``(N_X, C)``. From here on the ``average`` parameter applies as usual.\r\n    \r\n            num_classes:\r\n                Number of classes. Necessary for ``'macro'``, ``'weighted'`` and ``None`` average methods.\r\n    \r\n            threshold:\r\n                Threshold for transforming probability or logit predictions to binary (0,1) predictions, in the case\r\n                of binary or multi-label inputs. Default value of 0.5 corresponds to input being probabilities.\r\n            top_k:\r\n                Number of the highest probability or logit score predictions considered finding the correct label,\r\n                relevant only for (multi-dimensional) multi-class inputs. The\r\n                default value (``None``) will be interpreted as 1 for these inputs.\r\n    \r\n                Should be left at default (``None``) for all other types of inputs.\r\n            multiclass:\r\n                Used only in certain special cases, where you want to treat inputs as a different type\r\n                than what they appear to be. See the parameter's\r\n                :ref:`documentation section <pages/classification:using the multiclass parameter>`\r\n                for a more detailed explanation and examples.\r\n            ignore_index:\r\n                Integer specifying a target class to ignore. If given, this class index does not contribute\r\n                to the returned score, regardless of reduction method. If an index is ignored, and ``average=None``\r\n                or ``'none'``, the score for the ignored class will be returned as ``nan``.\r\n            subset_accuracy:\r\n                Whether to compute subset accuracy for multi-label and multi-dimensional\r\n                multi-class inputs (has no effect for other input types).\r\n    \r\n                - For multi-label inputs, if the parameter is set to ``True``, then all labels for\r\n                  each sample must be correctly predicted for the sample to count as correct. If it\r\n                  is set to ``False``, then all labels are counted separately - this is equivalent to\r\n                  flattening inputs beforehand (i.e. ``preds = preds.flatten()`` and same for ``target``).\r\n    \r\n                - For multi-dimensional multi-class inputs, if the parameter is set to ``True``, then all\r\n                  sub-sample (on the extra axis) must be correct for the sample to be counted as correct.\r\n                  If it is set to ``False``, then all sub-samples are counter separately - this is equivalent,\r\n                  in the case of label predictions, to flattening the inputs beforehand (i.e.\r\n                  ``preds = preds.flatten()`` and same for ``target``). Note that the ``top_k`` parameter\r\n                  still applies in both cases, if set.\r\n    \r\n        Raises:\r\n            ValueError:\r\n                If ``top_k`` parameter is set for ``multi-label`` inputs.\r\n            ValueError:\r\n                If ``average`` is none of ``\"micro\"``, ``\"macro\"``, ``\"weighted\"``, ``\"samples\"``, ``\"none\"``, ``None``.\r\n            ValueError:\r\n                If ``mdmc_average`` is not one of ``None``, ``\"samplewise\"``, ``\"global\"``.\r\n            ValueError:\r\n                If ``average`` is set but ``num_classes`` is not provided.\r\n            ValueError:\r\n                If ``num_classes`` is set\r\n                and ``ignore_index`` is not in the range ``[0, num_classes)``.\r\n            ValueError:\r\n                If ``top_k`` is not an ``integer`` larger than ``0``.\r\n    \r\n        Example:\r\n            >>> import torch\r\n            >>> from torchmetrics.functional import accuracy\r\n            >>> target = torch.tensor([0, 1, 2, 3])\r\n            >>> preds = torch.tensor([0, 2, 1, 3])\r\n            >>> accuracy(preds, target)\r\n            tensor(0.5000)\r\n    \r\n            >>> target = torch.tensor([0, 1, 2])\r\n            >>> preds = torch.tensor([[0.1, 0.9, 0], [0.3, 0.1, 0.6], [0.2, 0.5, 0.3]])\r\n            >>> accuracy(preds, target, top_k=2)\r\n            tensor(0.6667)\r\n        \"\"\"\r\n        allowed_average = [\"micro\", \"macro\", \"weighted\", \"samples\", \"none\", None]\r\n        if average not in allowed_average:\r\n>           raise ValueError(f\"The `average` has to be one of {allowed_average}, got {average}.\")\r\nE           ValueError: The `average` has to be one of ['micro', 'macro', 'weighted', 'samples', 'none', None], got binary.\r\n\r\n/usr/local/lib/python3.8/dist-packages/torchmetrics/functional/classification/accuracy.py:395: ValueError\r\n__________________________________ test_onnx ___________________________________\r\n\r\n    @withPackage('onnx', 'onnxruntime')\r\n    def test_onnx():\r\n        import onnx\r\n        import onnxruntime as ort\r\n    \r\n        class MyModel(torch.nn.Module):\r\n            def __init__(self):\r\n                super().__init__()\r\n                self.conv1 = SAGEConv(8, 16)\r\n                self.conv2 = SAGEConv(16, 16)\r\n    \r\n            def forward(self, x, edge_index):\r\n                x = self.conv1(x, edge_index).relu()\r\n                x = self.conv2(x, edge_index)\r\n                return x\r\n    \r\n        model = MyModel()\r\n        x = torch.randn(3, 8)\r\n        edge_index = torch.tensor([[0, 1, 2], [1, 0, 2]])\r\n        expected = model(x, edge_index)\r\n        assert expected.size() == (3, 16)\r\n    \r\n        torch.onnx.export(model, (x, edge_index), 'model.onnx',\r\n                          input_names=('x', 'edge_index'), opset_version=16)\r\n    \r\n        model = onnx.load('model.onnx')\r\n        onnx.checker.check_model(model)\r\n    \r\n>       ort_session = ort.InferenceSession('model.onnx')\r\n\r\ntest/nn/models/test_basic_gnn.py:197: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/usr/local/lib/python3.8/dist-packages/onnxruntime/capi/onnxruntime_inference_collection.py:360: in __init__\r\n    self._create_inference_session(providers, provider_options, disabled_optimizers)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <onnxruntime.capi.onnxruntime_inference_collection.InferenceSession object at 0x7fd0d8a18940>\r\nproviders = [], provider_options = [], disabled_optimizers = None\r\n\r\n    def _create_inference_session(self, providers, provider_options, disabled_optimizers=None):\r\n        available_providers = C.get_available_providers()\r\n    \r\n        # Tensorrt can fall back to CUDA. All others fall back to CPU.\r\n        if \"TensorrtExecutionProvider\" in available_providers:\r\n            self._fallback_providers = [\"CUDAExecutionProvider\", \"CPUExecutionProvider\"]\r\n        elif \"MIGraphXExecutionProvider\" in available_providers:\r\n            self._fallback_providers = [\"ROCMExecutionProvider\", \"CPUExecutionProvider\"]\r\n        else:\r\n            self._fallback_providers = [\"CPUExecutionProvider\"]\r\n    \r\n        # validate providers and provider_options before other initialization\r\n        providers, provider_options = check_and_normalize_provider_args(\r\n            providers, provider_options, available_providers\r\n        )\r\n        if providers == [] and len(available_providers) > 1:\r\n            self.disable_fallback()\r\n>           raise ValueError(\r\n                \"This ORT build has {} enabled. \".format(available_providers)\r\n                + \"Since ORT 1.9, you are required to explicitly set \"\r\n                + \"the providers parameter when instantiating InferenceSession. For example, \"\r\n                \"onnxruntime.InferenceSession(..., providers={}, ...)\".format(available_providers)\r\n            )\r\nE           ValueError: This ORT build has ['TensorrtExecutionProvider', 'CUDAExecutionProvider', 'CPUExecutionProvider'] enabled. Since ORT 1.9, you are required to explicitly set the providers parameter when instantiating InferenceSession. For example, onnxruntime.InferenceSession(..., providers=['TensorrtExecutionProvider', 'CUDAExecutionProvider', 'CPUExecutionProvider'], ...)\r\n\r\n/usr/local/lib/python3.8/dist-packages/onnxruntime/capi/onnxruntime_inference_collection.py:388: ValueError\r\n```\n\n### Environment\n\n* PyG/pyg-lib version: latest \r\n* PyTorch version: 2.0\r\n* CUDA: 12\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): source build\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6765/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6764", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6764/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6764/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6764/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6764", "id": 1593814620, "node_id": "I_kwDOBlHMec5e_65c", "number": 6764, "title": "Character substitution \"-\" for \"_\" in pip version of pyg installation instructions", "user": {"login": "agrubertx", "id": 32604335, "node_id": "MDQ6VXNlcjMyNjA0MzM1", "avatar_url": "https://avatars.githubusercontent.com/u/32604335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agrubertx", "html_url": "https://github.com/agrubertx", "followers_url": "https://api.github.com/users/agrubertx/followers", "following_url": "https://api.github.com/users/agrubertx/following{/other_user}", "gists_url": "https://api.github.com/users/agrubertx/gists{/gist_id}", "starred_url": "https://api.github.com/users/agrubertx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agrubertx/subscriptions", "organizations_url": "https://api.github.com/users/agrubertx/orgs", "repos_url": "https://api.github.com/users/agrubertx/repos", "events_url": "https://api.github.com/users/agrubertx/events{/privacy}", "received_events_url": "https://api.github.com/users/agrubertx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-02-21T16:59:51Z", "updated_at": "2023-02-23T14:15:34Z", "closed_at": "2023-02-23T14:15:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi PyG devs,\r\n\r\nI wanted to let you know that I was unable to complete step 3 of the PyG installation using pip and the instructions here:  [https://pytorch-geometric.readthedocs.io/en/latest/install/installation.html#installation-via-pip-wheels](https://pytorch-geometric.readthedocs.io/en/latest/install/installation.html#installation-via-pip-wheels).\r\n\r\nIn particular, running \r\n\r\n`pip install pyg-lib torch-scatter torch-sparse -f https://data.pyg.org/whl/torch-1.13.0+cu117.html`\r\n\r\nproduced the following error:\r\n\r\n`Looking in links: https://data.pyg.org/whl/torch-1.13.0+cu117.html`\r\n`ERROR: Could not find a version that satisfies the requirement pyg-lib (from versions: none)`\r\n`ERROR: No matching distribution found for pyg-lib`\r\n\r\nLooking manually into this webpage, I was able to circumvent this error by substituting \"pyg_lib\" for \"pyg-lib\" in the pip install command, which completed the installation.  Is it possible that there was a transposition error which occurred during the documentation process?  Will you please double-check that page to make sure that others do not have the same issue?\r\n\r\nThanks,\r\nAnthony\n\n### Environment\n\n* PyG version:  2.2.0\r\n* PyTorch version:  1.13.0+cu117\r\n* OS: RHEL 7.9 (Maipo)\r\n* Python version: 3.9.13\r\n* CUDA/cuDNN version: 11.7\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):  pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6764/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6761", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6761/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6761/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6761/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6761", "id": 1593498475, "node_id": "I_kwDOBlHMec5e-ttr", "number": 6761, "title": "RuntimeError: mat1 and mat2 shapes cannot be multiplied (1x0 and 600x768)", "user": {"login": "Serious-H", "id": 30767302, "node_id": "MDQ6VXNlcjMwNzY3MzAy", "avatar_url": "https://avatars.githubusercontent.com/u/30767302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Serious-H", "html_url": "https://github.com/Serious-H", "followers_url": "https://api.github.com/users/Serious-H/followers", "following_url": "https://api.github.com/users/Serious-H/following{/other_user}", "gists_url": "https://api.github.com/users/Serious-H/gists{/gist_id}", "starred_url": "https://api.github.com/users/Serious-H/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Serious-H/subscriptions", "organizations_url": "https://api.github.com/users/Serious-H/orgs", "repos_url": "https://api.github.com/users/Serious-H/repos", "events_url": "https://api.github.com/users/Serious-H/events{/privacy}", "received_events_url": "https://api.github.com/users/Serious-H/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-02-21T13:36:50Z", "updated_at": "2023-02-23T00:03:26Z", "closed_at": "2023-02-23T00:03:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHello, I'm a novice. I encountered this error when reproducing a HGT-related paper. Do you know the reason for this, because I see the error message torch_ Geometric So ask.\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 490, in <module>\r\n    main(args)\r\n  File \"main.py\", line 453, in main\r\n    trainer.fit(model)\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py\", line 608, in fit\r\n    call._call_and_handle_interrupt(\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/trainer/call.py\", line 38, in _call_and_handle_interrupt\r\n    return trainer_fn(*args, **kwargs)\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py\", line 650, in _fit_impl\r\n    self._run(model, ckpt_path=self.ckpt_path)\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py\", line 1112, in _run\r\n    results = self._run_stage()\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py\", line 1191, in _run_stage\r\n    self._run_train()\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py\", line 1214, in _run_train\r\n    self.fit_loop.run()\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/loops/loop.py\", line 199, in run\r\n    self.advance(*args, **kwargs)\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/loops/fit_loop.py\", line 267, in advance\r\n    self._outputs = self.epoch_loop.run(self._data_fetcher)\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/loops/loop.py\", line 199, in run\r\n    self.advance(*args, **kwargs)\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/loops/epoch/training_epoch_loop.py\", line 213, in advance\r\n    batch_output = self.batch_loop.run(kwargs)\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/loops/loop.py\", line 199, in run\r\n    self.advance(*args, **kwargs)\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/loops/batch/training_batch_loop.py\", line 88, in advance\r\n    outputs = self.optimizer_loop.run(optimizers, kwargs)\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/loops/loop.py\", line 199, in run\r\n    self.advance(*args, **kwargs)\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py\", line 202, in advance\r\n    result = self._run_optimization(kwargs, self._optimizers[self.optim_progress.optimizer_position])\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py\", line 241, in _run_optimization\r\n    closure()\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py\", line 149, in __call__\r\n    self._result = self.closure(*args, **kwargs)\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py\", line 135, in closure\r\n    step_output = self._step_fn()\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py\", line 419, in _training_step\r\n    training_step_output = self.trainer._call_strategy_hook(\"training_step\", *kwargs.values())\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py\", line 1494, in _call_strategy_hook\r\n    output = fn(*args, **kwargs)\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/pytorch_lightning/strategies/strategy.py\", line 378, in training_step\r\n    return self.model.training_step(*args, **kwargs)\r\n  File \"main.py\", line 330, in training_step\r\n    loss = self.forward(*batch, is_Train=True)\r\n  File \"main.py\", line 237, in forward\r\n    KHGT_output = self.kg_encoder(hetero_data.x_dict, hetero_data.edge_index_dict)\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 1194, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"/home/ubuntu/Paper_Project/HQ/RT-KGD-Project/RT-KGD/utils/HGT.py\", line 37, in forward\r\n    x_dict[node_type] = self.lin_dict[node_type](x).relu_()     # \u5c06x\u901a\u8fc7\u7ebf\u6027\u5c42\u8f6c\u4e3a\u8bbe\u5b9a\u7684\u7ef4\u5ea6hidden-channels\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 1194, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"/home/ubuntu/anaconda3/envs/hq/lib/python3.8/site-packages/torch_geometric/nn/dense/linear.py\", line 136, in forward\r\n    return F.linear(x, self.weight, self.bias)\r\nRuntimeError: mat1 and mat2 shapes cannot be multiplied (1x0 and 600x768)\r\nEpoch 0:   0%|          | 34/9964 [00:09<48:16,  3.43it/s, loss=8.59, v_num=25]  \n\n### Environment\n\n* PyG version:\r\n* PyTorch version:1.13.1\r\n* OS:Ubuntu 20.04\r\n* Python version:3.8.15\r\n* CUDA/cuDNN version:11.7\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): torch-geometric 2.2.0\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6761/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6760", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6760/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6760/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6760/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6760", "id": 1593483868, "node_id": "PR_kwDOBlHMec5KbhKp", "number": 6760, "title": "Capture `stdout` in CI tests", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}, {"id": 5006699863, "node_id": "LA_kwDOBlHMec8AAAABKmwtVw", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/contrib", "name": "contrib", "color": "09964B", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-02-21T13:26:51Z", "updated_at": "2023-02-21T13:33:03Z", "closed_at": "2023-02-21T13:33:02Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6760", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6760", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6760.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6760.patch", "merged_at": "2023-02-21T13:33:02Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6760/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6758", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6758/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6758/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6758/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6758", "id": 1593353366, "node_id": "PR_kwDOBlHMec5KbFAh", "number": 6758, "title": "Remove adding `num_edges` directly to store in the `Pad` transform", "user": {"login": "bwroblew", "id": 35349367, "node_id": "MDQ6VXNlcjM1MzQ5MzY3", "avatar_url": "https://avatars.githubusercontent.com/u/35349367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwroblew", "html_url": "https://github.com/bwroblew", "followers_url": "https://api.github.com/users/bwroblew/followers", "following_url": "https://api.github.com/users/bwroblew/following{/other_user}", "gists_url": "https://api.github.com/users/bwroblew/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwroblew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwroblew/subscriptions", "organizations_url": "https://api.github.com/users/bwroblew/orgs", "repos_url": "https://api.github.com/users/bwroblew/repos", "events_url": "https://api.github.com/users/bwroblew/events{/privacy}", "received_events_url": "https://api.github.com/users/bwroblew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052698076, "node_id": "LA_kwDOBlHMec7xj0Pc", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/transform", "name": "transform", "color": "480283", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "bwroblew", "id": 35349367, "node_id": "MDQ6VXNlcjM1MzQ5MzY3", "avatar_url": "https://avatars.githubusercontent.com/u/35349367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwroblew", "html_url": "https://github.com/bwroblew", "followers_url": "https://api.github.com/users/bwroblew/followers", "following_url": "https://api.github.com/users/bwroblew/following{/other_user}", "gists_url": "https://api.github.com/users/bwroblew/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwroblew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwroblew/subscriptions", "organizations_url": "https://api.github.com/users/bwroblew/orgs", "repos_url": "https://api.github.com/users/bwroblew/repos", "events_url": "https://api.github.com/users/bwroblew/events{/privacy}", "received_events_url": "https://api.github.com/users/bwroblew/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bwroblew", "id": 35349367, "node_id": "MDQ6VXNlcjM1MzQ5MzY3", "avatar_url": "https://avatars.githubusercontent.com/u/35349367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwroblew", "html_url": "https://github.com/bwroblew", "followers_url": "https://api.github.com/users/bwroblew/followers", "following_url": "https://api.github.com/users/bwroblew/following{/other_user}", "gists_url": "https://api.github.com/users/bwroblew/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwroblew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwroblew/subscriptions", "organizations_url": "https://api.github.com/users/bwroblew/orgs", "repos_url": "https://api.github.com/users/bwroblew/repos", "events_url": "https://api.github.com/users/bwroblew/events{/privacy}", "received_events_url": "https://api.github.com/users/bwroblew/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2023-02-21T12:00:12Z", "updated_at": "2023-02-21T12:23:01Z", "closed_at": "2023-02-21T12:11:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6758", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6758", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6758.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6758.patch", "merged_at": "2023-02-21T12:11:03Z"}, "body": "Handling `num_edges` as an attribute requires couple more changes and doesn't work well with the current implementation. For example, when `num_edges` is set on the `Data` objects and those objects are merged into a `Batch` the `num_edges` attribute is a tensor with values from all the objects. It works well when implemented as a property of `EdgeStorage` and not as a direct attribute, so removing it for now.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6758/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6754", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6754/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6754/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6754/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6754", "id": 1591308177, "node_id": "PR_kwDOBlHMec5KUQRa", "number": 6754, "title": "Fix TorchScript support in `DNAConv` and `FAConv`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-20T07:30:32Z", "updated_at": "2023-02-20T10:50:12Z", "closed_at": "2023-02-20T10:50:11Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6754", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6754", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6754.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6754.patch", "merged_at": "2023-02-20T10:50:11Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6754/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6752", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6752/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6752/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6752/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6752", "id": 1590729110, "node_id": "PR_kwDOBlHMec5KSXVx", "number": 6752, "title": "Fix issues in documentation", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4020368118, "node_id": "LA_kwDOBlHMec7vofL2", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/explain", "name": "explain", "color": "5319e7", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}, {"id": 4601575641, "node_id": "LA_kwDOBlHMec8AAAABEkZ42Q", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/utils", "name": "utils", "color": "DBC48C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-19T15:24:03Z", "updated_at": "2023-02-19T15:31:13Z", "closed_at": "2023-02-19T15:31:12Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6752", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6752", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6752.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6752.patch", "merged_at": "2023-02-19T15:31:12Z"}, "body": "* Wrong rendering\r\n* Missing doc-strings for `deprecated` classes", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6752/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6750", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6750/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6750/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6750/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6750", "id": 1590663721, "node_id": "PR_kwDOBlHMec5KSKhg", "number": 6750, "title": "Fix Slack Button in documentation", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-02-19T12:06:41Z", "updated_at": "2023-02-19T12:11:36Z", "closed_at": "2023-02-19T12:11:35Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6750", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6750", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6750.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6750.patch", "merged_at": "2023-02-19T12:11:35Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6750/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6742", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6742/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6742/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6742/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6742", "id": 1589620414, "node_id": "PR_kwDOBlHMec5KO4TB", "number": 6742, "title": "Fix bug in `benchmark.utils`", "user": {"login": "JakubPietrakIntel", "id": 97102979, "node_id": "U_kgDOBcmsgw", "avatar_url": "https://avatars.githubusercontent.com/u/97102979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakubPietrakIntel", "html_url": "https://github.com/JakubPietrakIntel", "followers_url": "https://api.github.com/users/JakubPietrakIntel/followers", "following_url": "https://api.github.com/users/JakubPietrakIntel/following{/other_user}", "gists_url": "https://api.github.com/users/JakubPietrakIntel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakubPietrakIntel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakubPietrakIntel/subscriptions", "organizations_url": "https://api.github.com/users/JakubPietrakIntel/orgs", "repos_url": "https://api.github.com/users/JakubPietrakIntel/repos", "events_url": "https://api.github.com/users/JakubPietrakIntel/events{/privacy}", "received_events_url": "https://api.github.com/users/JakubPietrakIntel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969902632, "node_id": "LA_kwDOBlHMec7sn-go", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/benchmark", "name": "benchmark", "color": "f9d0c4", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "JakubPietrakIntel", "id": 97102979, "node_id": "U_kgDOBcmsgw", "avatar_url": "https://avatars.githubusercontent.com/u/97102979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakubPietrakIntel", "html_url": "https://github.com/JakubPietrakIntel", "followers_url": "https://api.github.com/users/JakubPietrakIntel/followers", "following_url": "https://api.github.com/users/JakubPietrakIntel/following{/other_user}", "gists_url": "https://api.github.com/users/JakubPietrakIntel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakubPietrakIntel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakubPietrakIntel/subscriptions", "organizations_url": "https://api.github.com/users/JakubPietrakIntel/orgs", "repos_url": "https://api.github.com/users/JakubPietrakIntel/repos", "events_url": "https://api.github.com/users/JakubPietrakIntel/events{/privacy}", "received_events_url": "https://api.github.com/users/JakubPietrakIntel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JakubPietrakIntel", "id": 97102979, "node_id": "U_kgDOBcmsgw", "avatar_url": "https://avatars.githubusercontent.com/u/97102979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakubPietrakIntel", "html_url": "https://github.com/JakubPietrakIntel", "followers_url": "https://api.github.com/users/JakubPietrakIntel/followers", "following_url": "https://api.github.com/users/JakubPietrakIntel/following{/other_user}", "gists_url": "https://api.github.com/users/JakubPietrakIntel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakubPietrakIntel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakubPietrakIntel/subscriptions", "organizations_url": "https://api.github.com/users/JakubPietrakIntel/orgs", "repos_url": "https://api.github.com/users/JakubPietrakIntel/repos", "events_url": "https://api.github.com/users/JakubPietrakIntel/events{/privacy}", "received_events_url": "https://api.github.com/users/JakubPietrakIntel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-02-17T16:25:26Z", "updated_at": "2023-02-17T17:16:57Z", "closed_at": "2023-02-17T17:16:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6742", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6742", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6742.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6742.patch", "merged_at": "2023-02-17T17:16:56Z"}, "body": "I accidentally merged a bug in `benchmark.utils` - this is a fix.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6742/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6741", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6741/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6741/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6741/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6741", "id": 1589383480, "node_id": "PR_kwDOBlHMec5KOEtI", "number": 6741, "title": "Fix broken `GENConv` TorchScript test", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-02-17T13:48:08Z", "updated_at": "2023-02-17T13:48:37Z", "closed_at": "2023-02-17T13:48:36Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6741", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6741", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6741.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6741.patch", "merged_at": "2023-02-17T13:48:36Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6741/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6731", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6731/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6731/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6731/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6731", "id": 1587533829, "node_id": "PR_kwDOBlHMec5KH1cH", "number": 6731, "title": "Allow padding with 0 nodes", "user": {"login": "dsciebu", "id": 35064742, "node_id": "MDQ6VXNlcjM1MDY0NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/35064742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsciebu", "html_url": "https://github.com/dsciebu", "followers_url": "https://api.github.com/users/dsciebu/followers", "following_url": "https://api.github.com/users/dsciebu/following{/other_user}", "gists_url": "https://api.github.com/users/dsciebu/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsciebu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsciebu/subscriptions", "organizations_url": "https://api.github.com/users/dsciebu/orgs", "repos_url": "https://api.github.com/users/dsciebu/repos", "events_url": "https://api.github.com/users/dsciebu/events{/privacy}", "received_events_url": "https://api.github.com/users/dsciebu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052698076, "node_id": "LA_kwDOBlHMec7xj0Pc", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/transform", "name": "transform", "color": "480283", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "dsciebu", "id": 35064742, "node_id": "MDQ6VXNlcjM1MDY0NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/35064742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsciebu", "html_url": "https://github.com/dsciebu", "followers_url": "https://api.github.com/users/dsciebu/followers", "following_url": "https://api.github.com/users/dsciebu/following{/other_user}", "gists_url": "https://api.github.com/users/dsciebu/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsciebu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsciebu/subscriptions", "organizations_url": "https://api.github.com/users/dsciebu/orgs", "repos_url": "https://api.github.com/users/dsciebu/repos", "events_url": "https://api.github.com/users/dsciebu/events{/privacy}", "received_events_url": "https://api.github.com/users/dsciebu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dsciebu", "id": 35064742, "node_id": "MDQ6VXNlcjM1MDY0NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/35064742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsciebu", "html_url": "https://github.com/dsciebu", "followers_url": "https://api.github.com/users/dsciebu/followers", "following_url": "https://api.github.com/users/dsciebu/following{/other_user}", "gists_url": "https://api.github.com/users/dsciebu/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsciebu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsciebu/subscriptions", "organizations_url": "https://api.github.com/users/dsciebu/orgs", "repos_url": "https://api.github.com/users/dsciebu/repos", "events_url": "https://api.github.com/users/dsciebu/events{/privacy}", "received_events_url": "https://api.github.com/users/dsciebu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-16T11:47:59Z", "updated_at": "2023-02-17T14:05:27Z", "closed_at": "2023-02-17T14:05:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6731", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6731", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6731.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6731.patch", "merged_at": "2023-02-17T14:05:25Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6731/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6725", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6725/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6725/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6725/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6725", "id": 1586921239, "node_id": "I_kwDOBlHMec5eln8X", "number": 6725, "title": "ImportError: cannot import name 'RootedEgoNets'", "user": {"login": "mgao97", "id": 90015105, "node_id": "MDQ6VXNlcjkwMDE1MTA1", "avatar_url": "https://avatars.githubusercontent.com/u/90015105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgao97", "html_url": "https://github.com/mgao97", "followers_url": "https://api.github.com/users/mgao97/followers", "following_url": "https://api.github.com/users/mgao97/following{/other_user}", "gists_url": "https://api.github.com/users/mgao97/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgao97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgao97/subscriptions", "organizations_url": "https://api.github.com/users/mgao97/orgs", "repos_url": "https://api.github.com/users/mgao97/repos", "events_url": "https://api.github.com/users/mgao97/events{/privacy}", "received_events_url": "https://api.github.com/users/mgao97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-02-16T03:02:48Z", "updated_at": "2023-02-16T05:31:36Z", "closed_at": "2023-02-16T05:31:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nfrom torch_geometric.transforms import RootedEgoNets\r\n\n\n### Environment\n\n* PyG version:\r\n* PyTorch version:\r\n* OS:\r\n* Python version:\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6725/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6724", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6724/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6724/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6724/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6724", "id": 1586889437, "node_id": "I_kwDOBlHMec5elgLd", "number": 6724, "title": "RemoveIsolatedNodes(): both dimendions of train_mask and data.y still contain the removed isolated points", "user": {"login": "Haoqiu-Yan", "id": 60564876, "node_id": "MDQ6VXNlcjYwNTY0ODc2", "avatar_url": "https://avatars.githubusercontent.com/u/60564876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Haoqiu-Yan", "html_url": "https://github.com/Haoqiu-Yan", "followers_url": "https://api.github.com/users/Haoqiu-Yan/followers", "following_url": "https://api.github.com/users/Haoqiu-Yan/following{/other_user}", "gists_url": "https://api.github.com/users/Haoqiu-Yan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Haoqiu-Yan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Haoqiu-Yan/subscriptions", "organizations_url": "https://api.github.com/users/Haoqiu-Yan/orgs", "repos_url": "https://api.github.com/users/Haoqiu-Yan/repos", "events_url": "https://api.github.com/users/Haoqiu-Yan/events{/privacy}", "received_events_url": "https://api.github.com/users/Haoqiu-Yan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-02-16T02:21:00Z", "updated_at": "2023-02-17T09:34:22Z", "closed_at": "2023-02-17T09:34:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nIn CiteSeer, the isolated points have been removed by transformer, and number of nodes in graph reduces to 3279.\r\nBut the dimendions of mask tensors and data.y still remain the number of 3327.\r\n\r\n```\r\nfrom torch_geometric.datasets import Planetoid\r\nimport torch_geometric.transforms as T\r\n\r\n>>> transform = T.RemoveIsolatedNodes()\r\n>>> dataset = Planetoid(root='~/data',\r\n                            name=\"CiteSeer\", split=\"public\", transform=transform)\r\n>>> data = dataset[0]\r\n>>> data.num_nodes\r\n3279\r\n>>> len(data.x)\r\n3279\r\n\r\n# It seems right up to now, but when I try accessing the others,\r\n# I got dimensions of 3327 instead of 3279 with isolated points removed.\r\n\r\n>>> len(data.train_mask)\r\n3327\r\n>>> len(data.test_mask)\r\n3327\r\n>>> len(data.y)\r\n3327\r\n```\r\n\r\nTp remove isolated points from train_mask, test_mask and data.y, should I do something else after transform? \r\nI have been troubled for days, much thanks for your help :-D\n\n### Environment\n\n* PyG version: 2.2.0\r\n* PyTorch version: 1.12.1\r\n* OS: Linux\r\n* Python version: 3.7\r\n* CUDA/cuDNN version: 11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda or pip,  I don't remember very much.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6724/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6721", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6721/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6721/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6721/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6721", "id": 1586665668, "node_id": "PR_kwDOBlHMec5KE66V", "number": 6721, "title": "Correctly reset parameters of `Aggregation` within `MessagePassing`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-15T22:26:37Z", "updated_at": "2023-02-15T22:40:06Z", "closed_at": "2023-02-15T22:40:05Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6721", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6721", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6721.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6721.patch", "merged_at": "2023-02-15T22:40:05Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6721/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6719", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6719/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6719/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6719/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6719", "id": 1586565815, "node_id": "PR_kwDOBlHMec5KEl5V", "number": 6719, "title": "Fix `pyproject.toml` warnings", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 1267385339, "node_id": "MDU6TGFiZWwxMjY3Mzg1MzM5", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/installation", "name": "installation", "color": "bfdadc", "default": false, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-02-15T21:08:18Z", "updated_at": "2023-02-15T21:13:23Z", "closed_at": "2023-02-15T21:13:22Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6719", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6719", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6719.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6719.patch", "merged_at": "2023-02-15T21:13:22Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6719/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6715", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6715/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6715/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6715/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6715", "id": 1586117481, "node_id": "PR_kwDOBlHMec5KDD7x", "number": 6715, "title": "Fixed `PolBlogs` dataset expected data format", "user": {"login": "bmarenco", "id": 65913136, "node_id": "MDQ6VXNlcjY1OTEzMTM2", "avatar_url": "https://avatars.githubusercontent.com/u/65913136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmarenco", "html_url": "https://github.com/bmarenco", "followers_url": "https://api.github.com/users/bmarenco/followers", "following_url": "https://api.github.com/users/bmarenco/following{/other_user}", "gists_url": "https://api.github.com/users/bmarenco/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmarenco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmarenco/subscriptions", "organizations_url": "https://api.github.com/users/bmarenco/orgs", "repos_url": "https://api.github.com/users/bmarenco/repos", "events_url": "https://api.github.com/users/bmarenco/events{/privacy}", "received_events_url": "https://api.github.com/users/bmarenco/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637023, "node_id": "LA_kwDOBlHMec7veEaf", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/dataset", "name": "dataset", "color": "7705B6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "bmarenco", "id": 65913136, "node_id": "MDQ6VXNlcjY1OTEzMTM2", "avatar_url": "https://avatars.githubusercontent.com/u/65913136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmarenco", "html_url": "https://github.com/bmarenco", "followers_url": "https://api.github.com/users/bmarenco/followers", "following_url": "https://api.github.com/users/bmarenco/following{/other_user}", "gists_url": "https://api.github.com/users/bmarenco/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmarenco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmarenco/subscriptions", "organizations_url": "https://api.github.com/users/bmarenco/orgs", "repos_url": "https://api.github.com/users/bmarenco/repos", "events_url": "https://api.github.com/users/bmarenco/events{/privacy}", "received_events_url": "https://api.github.com/users/bmarenco/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bmarenco", "id": 65913136, "node_id": "MDQ6VXNlcjY1OTEzMTM2", "avatar_url": "https://avatars.githubusercontent.com/u/65913136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmarenco", "html_url": "https://github.com/bmarenco", "followers_url": "https://api.github.com/users/bmarenco/followers", "following_url": "https://api.github.com/users/bmarenco/following{/other_user}", "gists_url": "https://api.github.com/users/bmarenco/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmarenco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmarenco/subscriptions", "organizations_url": "https://api.github.com/users/bmarenco/orgs", "repos_url": "https://api.github.com/users/bmarenco/repos", "events_url": "https://api.github.com/users/bmarenco/events{/privacy}", "received_events_url": "https://api.github.com/users/bmarenco/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-02-15T16:03:52Z", "updated_at": "2023-02-15T21:34:20Z", "closed_at": "2023-02-15T21:34:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6715", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6715", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6715.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6715.patch", "merged_at": "2023-02-15T21:34:20Z"}, "body": "Fixed issue #6714 ", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6715/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6714", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6714/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6714/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6714/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6714", "id": 1586096670, "node_id": "I_kwDOBlHMec5eieoe", "number": 6714, "title": "PolBlogs data format seems to have changed ", "user": {"login": "bmarenco", "id": 65913136, "node_id": "MDQ6VXNlcjY1OTEzMTM2", "avatar_url": "https://avatars.githubusercontent.com/u/65913136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmarenco", "html_url": "https://github.com/bmarenco", "followers_url": "https://api.github.com/users/bmarenco/followers", "following_url": "https://api.github.com/users/bmarenco/following{/other_user}", "gists_url": "https://api.github.com/users/bmarenco/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmarenco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmarenco/subscriptions", "organizations_url": "https://api.github.com/users/bmarenco/orgs", "repos_url": "https://api.github.com/users/bmarenco/repos", "events_url": "https://api.github.com/users/bmarenco/events{/privacy}", "received_events_url": "https://api.github.com/users/bmarenco/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-02-15T15:53:34Z", "updated_at": "2023-02-15T21:34:21Z", "closed_at": "2023-02-15T21:34:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Downloading the PolBlog dataset produces an error:\r\n\r\n```python\r\nfrom torch_geometric.datasets import PolBlogs\r\nblogs_dataset = PolBlogs(root='/tmp/polblogs')\r\n```\r\n\r\nError:\r\n```python-traceback\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/bernardo/.virtualenvs/polblogs-error/lib/python3.8/site-packages/torch_geometric/datasets/polblogs.py\", line 56, in __init__\r\n    super().__init__(root, transform, pre_transform)\r\n  File \"/home/bernardo/.virtualenvs/polblogs-error/lib/python3.8/site-packages/torch_geometric/data/in_memory_dataset.py\", line 55, in __init__\r\n    super().__init__(root, transform, pre_transform, pre_filter, log)\r\n  File \"/home/bernardo/.virtualenvs/polblogs-error/lib/python3.8/site-packages/torch_geometric/data/dataset.py\", line 94, in __init__\r\n    self._process()\r\n  File \"/home/bernardo/.virtualenvs/polblogs-error/lib/python3.8/site-packages/torch_geometric/data/dataset.py\", line 211, in _process\r\n    self.process()\r\n  File \"/home/bernardo/.virtualenvs/polblogs-error/lib/python3.8/site-packages/torch_geometric/datasets/polblogs.py\", line 75, in process\r\n    edge_index = pd.read_csv(self.raw_paths[0], header=None)\r\n  File \"/home/bernardo/.virtualenvs/polblogs-error/lib/python3.8/site-packages/pandas/util/_decorators.py\", line 211, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/home/bernardo/.virtualenvs/polblogs-error/lib/python3.8/site-packages/pandas/util/_decorators.py\", line 331, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/home/bernardo/.virtualenvs/polblogs-error/lib/python3.8/site-packages/pandas/io/parsers/readers.py\", line 950, in read_csv\r\n    return _read(filepath_or_buffer, kwds)\r\n  File \"/home/bernardo/.virtualenvs/polblogs-error/lib/python3.8/site-packages/pandas/io/parsers/readers.py\", line 605, in _read\r\n    parser = TextFileReader(filepath_or_buffer, **kwds)\r\n  File \"/home/bernardo/.virtualenvs/polblogs-error/lib/python3.8/site-packages/pandas/io/parsers/readers.py\", line 1442, in __init__\r\n    self._engine = self._make_engine(f, self.engine)\r\n  File \"/home/bernardo/.virtualenvs/polblogs-error/lib/python3.8/site-packages/pandas/io/parsers/readers.py\", line 1735, in _make_engine\r\n    self.handles = get_handle(\r\n  File \"/home/bernardo/.virtualenvs/polblogs-error/lib/python3.8/site-packages/pandas/io/common.py\", line 856, in get_handle\r\n    handle = open(\r\nFileNotFoundError: [Errno 2] No such file or directory: '/tmp/polblogs/raw/adjacency.csv'\r\n```\r\n\r\nIt seems that the data format in [https://netset.telecom-paris.fr/datasets/polblogs.tar.gz](https://netset.telecom-paris.fr/datasets/polblogs.tar.gz) has changed: files are now .tsv instead of .csv. Also, `adjacency.tsv` now has an extra column (with all its entries being `True`).\r\n\r\nIt's a pretty simple thing to solve, I'm going to create a pull request.\r\n\r\n### Environment\r\n\r\n* PyG version: 2.2.0\r\n* PyTorch version: 1.13.1\r\n* OS: Linux-5.15.0-58-generic-x86_64-with-glibc2.29\r\n* Python version: 3.8.10\r\n* CUDA/cuDNN version: No CUDA\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): `pip`\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): No\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6714/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6713", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6713/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6713/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6713/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6713", "id": 1585921060, "node_id": "PR_kwDOBlHMec5KCZlQ", "number": 6713, "title": "Make `torchmetrics` an optional dependency", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 1267385339, "node_id": "MDU6TGFiZWwxMjY3Mzg1MzM5", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/installation", "name": "installation", "color": "bfdadc", "default": false, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-15T14:05:59Z", "updated_at": "2023-02-15T14:42:12Z", "closed_at": "2023-02-15T14:42:11Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6713", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6713", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6713.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6713.patch", "merged_at": "2023-02-15T14:42:11Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6713/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6690", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6690/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6690/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6690/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6690", "id": 1583281081, "node_id": "PR_kwDOBlHMec5J5hUi", "number": 6690, "title": "fix(sampler): properly compute `num_hops` with default values", "user": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4871834239, "node_id": "LA_kwDOBlHMec8AAAABImJKfw", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/sampler", "name": "sampler", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-14T00:22:20Z", "updated_at": "2023-02-14T05:28:05Z", "closed_at": "2023-02-14T05:28:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6690", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6690", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6690.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6690.patch", "merged_at": "2023-02-14T05:28:04Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6690/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6688", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6688/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6688/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6688/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6688", "id": 1582645352, "node_id": "I_kwDOBlHMec5eVUBo", "number": 6688, "title": "Sending model to GPU causes a system crash", "user": {"login": "tonydavis629", "id": 84199903, "node_id": "MDQ6VXNlcjg0MTk5OTAz", "avatar_url": "https://avatars.githubusercontent.com/u/84199903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tonydavis629", "html_url": "https://github.com/tonydavis629", "followers_url": "https://api.github.com/users/tonydavis629/followers", "following_url": "https://api.github.com/users/tonydavis629/following{/other_user}", "gists_url": "https://api.github.com/users/tonydavis629/gists{/gist_id}", "starred_url": "https://api.github.com/users/tonydavis629/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tonydavis629/subscriptions", "organizations_url": "https://api.github.com/users/tonydavis629/orgs", "repos_url": "https://api.github.com/users/tonydavis629/repos", "events_url": "https://api.github.com/users/tonydavis629/events{/privacy}", "received_events_url": "https://api.github.com/users/tonydavis629/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2023-02-13T16:12:48Z", "updated_at": "2023-02-17T15:55:52Z", "closed_at": "2023-02-17T15:55:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhen I create a clean environment and install the latest torch and pytorch-geometric with pip, then attempt to send a model with both pytorch-geometric and torch.nn attributes to the GPU, it crashes my entire system. What's strange is that it only crashes if I call `torch.cuda.is_available()`, and only with a pip installation.\r\n\r\nSteps to replicate:\r\nIn terminal:\r\n```\r\nconda create -n environment python=3.9\r\nconda activate environment\r\npip install torch\r\npip install pyg-lib torch-scatter torch-sparse torch-cluster torch-spline-conv torch-geometric -f https://data.pyg.org/whl/torch-1.13.0+cu117.html\r\n```\r\n\r\nMinimal example that causes this crash for me:\r\n```\r\nimport torch\r\nfrom torch.nn import Sequential, Linear, ReLU, GRU\r\nfrom torch_geometric.nn import NNConv\r\n\r\nclass example(torch.nn.Module):\r\n    def __init__(self, dim):\r\n        super(example, self).__init__()\r\n\r\n        nn = Sequential(Linear(11, 128), ReLU(), Linear(128, dim * dim)) # 11 edge features\r\n        self.conv = NNConv(dim, dim, nn, aggr='mean', root_weight=False)\r\n        self.gru = GRU(dim, dim)\r\n\r\ndim = 64\r\n\r\nmodel = example(dim)\r\nprint(torch.cuda.is_available())\r\ndevice = torch.device('cuda')\r\nmodel.to(device)\r\n```\r\nIf I do not call `torch.cuda.is_available()`, the code runs normally. \n\n### Environment\n\n* PyG version: 2.2.0\r\n* PyTorch version: 1.13.1\r\n* OS: Ubuntu 22.04\r\n* Python version: 3.9.16\r\n* CUDA/cuDNN version: 11.7\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): No crash occurs with conda installation. `conda install pyg pytorch pytorch-cuda=11.7 -c pytorch -c nvidia -c pyg`\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6688/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6687", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6687/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6687/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6687/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6687", "id": 1582622526, "node_id": "I_kwDOBlHMec5eVOc-", "number": 6687, "title": "Getting attention weights of ONLY one node and its neighbors. k_hop_subgraph producing 'weird' result", "user": {"login": "amjass12", "id": 33659783, "node_id": "MDQ6VXNlcjMzNjU5Nzgz", "avatar_url": "https://avatars.githubusercontent.com/u/33659783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amjass12", "html_url": "https://github.com/amjass12", "followers_url": "https://api.github.com/users/amjass12/followers", "following_url": "https://api.github.com/users/amjass12/following{/other_user}", "gists_url": "https://api.github.com/users/amjass12/gists{/gist_id}", "starred_url": "https://api.github.com/users/amjass12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amjass12/subscriptions", "organizations_url": "https://api.github.com/users/amjass12/orgs", "repos_url": "https://api.github.com/users/amjass12/repos", "events_url": "https://api.github.com/users/amjass12/events{/privacy}", "received_events_url": "https://api.github.com/users/amjass12/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2023-02-13T16:00:17Z", "updated_at": "2023-02-17T14:36:29Z", "closed_at": "2023-02-17T14:36:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nHi!\r\n\r\nI am trying to get attention scores for node 'x' and ALL node that node x is connecting to. I am doing this in this way (and any easier way to do this is greatly appreciated) but think i have come across a bug:\r\n\r\n```\r\nidx = k_hop_subgraph(0, 1, torch_graph.edge_index, relabel_nodes=True)[0]\r\nx = torch_graph.x[idx]# subset node features\r\ny = k_hop_subgraph(0, 1, torch_graph.edge_index, relabel_nodes=True)[1]# node 0 and ONLY one-hop away(neighbors only)\r\nmodel.gat_conv1(x, y, return_attention_weights=True)[1][1]\r\n\r\n```\r\n\r\nThe shape of the edges is 100k (directed) so 50000 unique edges. Now this is confusing to me as node 0 connect to 368 other nodes, and it is only these nodes i want attention scores for (I want self attention for node 0 as well) so 369 weights in total. What is happening however, is that i am getting the subgraph for the edges for nodes that node x is connected and their immediate nodes. \r\n\r\nReproducible example:\r\n```\r\nimport torch\r\nfrom torch.utils import k_hop_subgraph\r\nimport networkx as nx\r\n\r\nedge_index = torch.tensor([[0, 0, 1, 2,3 ,4, 5], [1, 2, 3, 4, 0, 5, 6]])\r\nedge_index = to_undirected(edge_index)\r\nbla = k_hop_subgraph(0, 1, edge_index)\r\nedge_pd = pd.DataFrame(bla[1].numpy().transpose(), columns=['source', 'target'])\r\ngraph = nx.from_pandas_edgelist(edge_pd, source='source', target='target').to_undirected()\r\nprint(graph.edges())\r\n>>> EdgeView([(0, 1), (0, 2), (0, 3), (1, 3)])\r\n```\r\n\r\nas you can see from the reproducible example, when asking for a subgraph of node 0 only - 1 hop away, it has also provided the edge (3, 1) which is not intended. \r\n\r\nIs this a bug? I apologise if i have misunderstood something, but essentially what i need, is to access the attention score that node x is paying ONLY to its neighbours. thank you!", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6687/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6685", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6685/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6685/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6685/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6685", "id": 1582160734, "node_id": "PR_kwDOBlHMec5J1wTO", "number": 6685, "title": "Reset `data_list` cache when accessing `dataset.data`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-13T11:18:58Z", "updated_at": "2023-02-13T11:33:22Z", "closed_at": "2023-02-13T11:33:21Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6685", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6685", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6685.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6685.patch", "merged_at": "2023-02-13T11:33:21Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6685/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6680", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6680/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6680/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6680/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6680", "id": 1580985747, "node_id": "I_kwDOBlHMec5eO-2T", "number": 6680, "title": "Error when using HGTConv operator", "user": {"login": "joaovictorpasseri", "id": 52545961, "node_id": "MDQ6VXNlcjUyNTQ1OTYx", "avatar_url": "https://avatars.githubusercontent.com/u/52545961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joaovictorpasseri", "html_url": "https://github.com/joaovictorpasseri", "followers_url": "https://api.github.com/users/joaovictorpasseri/followers", "following_url": "https://api.github.com/users/joaovictorpasseri/following{/other_user}", "gists_url": "https://api.github.com/users/joaovictorpasseri/gists{/gist_id}", "starred_url": "https://api.github.com/users/joaovictorpasseri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joaovictorpasseri/subscriptions", "organizations_url": "https://api.github.com/users/joaovictorpasseri/orgs", "repos_url": "https://api.github.com/users/joaovictorpasseri/repos", "events_url": "https://api.github.com/users/joaovictorpasseri/events{/privacy}", "received_events_url": "https://api.github.com/users/joaovictorpasseri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-02-11T19:29:34Z", "updated_at": "2023-02-12T07:31:10Z", "closed_at": "2023-02-12T07:31:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI encountered the error when using HGTConv\r\n\r\n\r\n```\r\nfrom torch_geometric.data import HeteroData\r\n\r\nauthor = torch.rand((10,8))\r\npapers = torch.rand((20,40))\r\n\r\nauthors_y = torch.rand(10).round()\r\n\r\nwrite_from = torch.tensor(np.random.choice(10,50, replace=True))\r\nwrite_to = torch.tensor(np.random.choice(20,50, replace=True))\r\nwrite = torch.concat((write_from, write_to)).reshape(-1, 50).long()\r\n\r\ncite_from = torch.tensor(np.random.choice(20, 15, replace=True))\r\ncite_to = torch.tensor(np.random.choice(20, 15, replace=True))\r\ncite = torch.concat((cite_from, cite_to)).reshape(-1, 15).long()\r\n\r\ndata = HeteroData({'author': {'x': author, 'y': authors_y}, 'paper': {'x': papers}},\r\n                  author__write__paper={'edge_index': write}, paper__cite__paper={'edge_index': cite})\r\n\r\ndata\r\n```\r\n```\r\nHeteroData(\r\n  author={\r\n    x=[10, 8],\r\n    y=[10]\r\n  },\r\n  paper={ x=[20, 40] },\r\n  (author, write, paper)={ edge_index=[2, 50] },\r\n  (paper, cite, paper)={ edge_index=[2, 15] }\r\n)\r\n\r\n```\r\nBut, when i use HGTConv this is result:\r\n\r\n```\r\nfrom torch_geometric.nn import HGTConv, Linear\r\nconv = HGTConv(-1, 64, data.metadata(),1, group='sum')\r\nx_dict = conv(data.x_dict, data.edge_index_dict)\r\nx_dict\r\n\r\n```\r\n```\r\n{'author': None,\r\n 'paper': tensor([[ 0.2495,  0.1796, -0.3790,  ...,  0.0123,  0.0693, -0.0596],\r\n         [ 0.1687,  0.1871, -0.1963,  ...,  0.1105,  0.1610, -0.1490],\r\n         [ 0.0658,  0.2102, -0.1070,  ...,  0.1363,  0.0602, -0.1453],\r\n         ...,\r\n         [-0.0860,  0.0194, -0.1750,  ...,  0.1457,  0.0152, -0.0828],\r\n         [ 0.0745,  0.1371, -0.2510,  ...,  0.0546,  0.1179, -0.1241],\r\n         [ 0.0252,  0.1249, -0.2283,  ...,  0.1473,  0.0852, -0.1063]],\r\n        grad_fn=<AddmmBackward0>)}\r\n```\r\n\r\nauthor return empty\n\n### Environment\n\n* PyG version:  2.2.0\r\n* PyTorch version: 1.13\r\n* OS: W11\r\n* Python version: 3.10.7\r\n* CUDA/cuDNN version: cu116\r\n* How you installed PyTorch and PyG: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6680/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6654", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6654/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6654/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6654/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6654", "id": 1578234859, "node_id": "PR_kwDOBlHMec5JovMU", "number": 6654, "title": "Fixed bug in `utils.bipartite_subgraph`", "user": {"login": "toenshoff", "id": 15213846, "node_id": "MDQ6VXNlcjE1MjEzODQ2", "avatar_url": "https://avatars.githubusercontent.com/u/15213846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toenshoff", "html_url": "https://github.com/toenshoff", "followers_url": "https://api.github.com/users/toenshoff/followers", "following_url": "https://api.github.com/users/toenshoff/following{/other_user}", "gists_url": "https://api.github.com/users/toenshoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/toenshoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toenshoff/subscriptions", "organizations_url": "https://api.github.com/users/toenshoff/orgs", "repos_url": "https://api.github.com/users/toenshoff/repos", "events_url": "https://api.github.com/users/toenshoff/events{/privacy}", "received_events_url": "https://api.github.com/users/toenshoff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4601575641, "node_id": "LA_kwDOBlHMec8AAAABEkZ42Q", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/utils", "name": "utils", "color": "DBC48C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "toenshoff", "id": 15213846, "node_id": "MDQ6VXNlcjE1MjEzODQ2", "avatar_url": "https://avatars.githubusercontent.com/u/15213846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toenshoff", "html_url": "https://github.com/toenshoff", "followers_url": "https://api.github.com/users/toenshoff/followers", "following_url": "https://api.github.com/users/toenshoff/following{/other_user}", "gists_url": "https://api.github.com/users/toenshoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/toenshoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toenshoff/subscriptions", "organizations_url": "https://api.github.com/users/toenshoff/orgs", "repos_url": "https://api.github.com/users/toenshoff/repos", "events_url": "https://api.github.com/users/toenshoff/events{/privacy}", "received_events_url": "https://api.github.com/users/toenshoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "toenshoff", "id": 15213846, "node_id": "MDQ6VXNlcjE1MjEzODQ2", "avatar_url": "https://avatars.githubusercontent.com/u/15213846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toenshoff", "html_url": "https://github.com/toenshoff", "followers_url": "https://api.github.com/users/toenshoff/followers", "following_url": "https://api.github.com/users/toenshoff/following{/other_user}", "gists_url": "https://api.github.com/users/toenshoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/toenshoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toenshoff/subscriptions", "organizations_url": "https://api.github.com/users/toenshoff/orgs", "repos_url": "https://api.github.com/users/toenshoff/repos", "events_url": "https://api.github.com/users/toenshoff/events{/privacy}", "received_events_url": "https://api.github.com/users/toenshoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-09T16:42:17Z", "updated_at": "2023-02-13T12:43:28Z", "closed_at": "2023-02-13T12:43:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6654", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6654", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6654.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6654.patch", "merged_at": "2023-02-13T12:43:28Z"}, "body": "The PR fixes a bug in the `utils.bipartite_subgraph` method, which crashes if `src_subset` contains Boolean values but `dst_subset` contains integers.\r\n\r\nConsider the following example:\r\n```python\r\nimport torch\r\nfrom torch_geometric.utils import bipartite_subgraph\r\n\r\nsubset = (torch.tensor([True, True, False]), torch.tensor([0, 3]))\r\nedge_index = torch.tensor([[0, 1, 2], [0, 0, 3]])\r\nsub_edge_index = bipartite_subgraph(subset, edge_index)\r\n```\r\nWith torch_geometric==2.3.0 we obtain the following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/jan/git/gerd/pygtest.py\", line 8, in <module>\r\n    sub_edge_index = bipartite_subgraph(subset, edge_index)\r\n  File \"/home/jan/miniconda3/envs/gerd/lib/python3.9/site-packages/torch_geometric/utils/subgraph.py\", line 178, in bipartite_subgraph\r\n    edge_mask = src_subset[edge_index[0]] & dst_subset[edge_index[1]]\r\nIndexError: index 3 is out of bounds for dimension 0 with size 2\r\n```\r\nThe method determines whether or not a cast of the masks is needed by only checking the dtype of the source mask, which causes this issue.\r\n\r\nWhile this seems like a rare edge case, this issue does cause the `HeteroData.subgraph` method to crash when `subset_dict` uses Boolean masks and does not contain some ntypes as keys, as integer tensors are then added for the missing ntypes.\r\n\r\nSince https://github.com/pyg-team/pytorch_geometric/pull/6218, `HeteroData.subgraph` does retain ntypes that are absent from `subset_dict`. I have also updated the doc string of the method to reflect this change, since it was still describing the previous behavior.\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6654/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6639", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6639/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6639/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6639/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6639", "id": 1575072857, "node_id": "PR_kwDOBlHMec5JeHxd", "number": 6639, "title": "Fix typo in `transforms/RemoveTrainingClasses`", "user": {"login": "karuna-bhaila", "id": 71278219, "node_id": "MDQ6VXNlcjcxMjc4MjE5", "avatar_url": "https://avatars.githubusercontent.com/u/71278219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karuna-bhaila", "html_url": "https://github.com/karuna-bhaila", "followers_url": "https://api.github.com/users/karuna-bhaila/followers", "following_url": "https://api.github.com/users/karuna-bhaila/following{/other_user}", "gists_url": "https://api.github.com/users/karuna-bhaila/gists{/gist_id}", "starred_url": "https://api.github.com/users/karuna-bhaila/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karuna-bhaila/subscriptions", "organizations_url": "https://api.github.com/users/karuna-bhaila/orgs", "repos_url": "https://api.github.com/users/karuna-bhaila/repos", "events_url": "https://api.github.com/users/karuna-bhaila/events{/privacy}", "received_events_url": "https://api.github.com/users/karuna-bhaila/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "karuna-bhaila", "id": 71278219, "node_id": "MDQ6VXNlcjcxMjc4MjE5", "avatar_url": "https://avatars.githubusercontent.com/u/71278219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karuna-bhaila", "html_url": "https://github.com/karuna-bhaila", "followers_url": "https://api.github.com/users/karuna-bhaila/followers", "following_url": "https://api.github.com/users/karuna-bhaila/following{/other_user}", "gists_url": "https://api.github.com/users/karuna-bhaila/gists{/gist_id}", "starred_url": "https://api.github.com/users/karuna-bhaila/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karuna-bhaila/subscriptions", "organizations_url": "https://api.github.com/users/karuna-bhaila/orgs", "repos_url": "https://api.github.com/users/karuna-bhaila/repos", "events_url": "https://api.github.com/users/karuna-bhaila/events{/privacy}", "received_events_url": "https://api.github.com/users/karuna-bhaila/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "karuna-bhaila", "id": 71278219, "node_id": "MDQ6VXNlcjcxMjc4MjE5", "avatar_url": "https://avatars.githubusercontent.com/u/71278219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karuna-bhaila", "html_url": "https://github.com/karuna-bhaila", "followers_url": "https://api.github.com/users/karuna-bhaila/followers", "following_url": "https://api.github.com/users/karuna-bhaila/following{/other_user}", "gists_url": "https://api.github.com/users/karuna-bhaila/gists{/gist_id}", "starred_url": "https://api.github.com/users/karuna-bhaila/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karuna-bhaila/subscriptions", "organizations_url": "https://api.github.com/users/karuna-bhaila/orgs", "repos_url": "https://api.github.com/users/karuna-bhaila/repos", "events_url": "https://api.github.com/users/karuna-bhaila/events{/privacy}", "received_events_url": "https://api.github.com/users/karuna-bhaila/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-02-07T21:50:05Z", "updated_at": "2023-02-08T09:00:42Z", "closed_at": "2023-02-07T21:55:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6639", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6639", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6639.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6639.patch", "merged_at": null}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6639/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6637", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6637/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6637/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6637/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6637", "id": 1574758940, "node_id": "PR_kwDOBlHMec5JdFlV", "number": 6637, "title": "[Code Coverage] `models/test_correct_and_smooth.py`", "user": {"login": "zechengz", "id": 21955420, "node_id": "MDQ6VXNlcjIxOTU1NDIw", "avatar_url": "https://avatars.githubusercontent.com/u/21955420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zechengz", "html_url": "https://github.com/zechengz", "followers_url": "https://api.github.com/users/zechengz/followers", "following_url": "https://api.github.com/users/zechengz/following{/other_user}", "gists_url": "https://api.github.com/users/zechengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zechengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zechengz/subscriptions", "organizations_url": "https://api.github.com/users/zechengz/orgs", "repos_url": "https://api.github.com/users/zechengz/repos", "events_url": "https://api.github.com/users/zechengz/events{/privacy}", "received_events_url": "https://api.github.com/users/zechengz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "zechengz", "id": 21955420, "node_id": "MDQ6VXNlcjIxOTU1NDIw", "avatar_url": "https://avatars.githubusercontent.com/u/21955420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zechengz", "html_url": "https://github.com/zechengz", "followers_url": "https://api.github.com/users/zechengz/followers", "following_url": "https://api.github.com/users/zechengz/following{/other_user}", "gists_url": "https://api.github.com/users/zechengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zechengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zechengz/subscriptions", "organizations_url": "https://api.github.com/users/zechengz/orgs", "repos_url": "https://api.github.com/users/zechengz/repos", "events_url": "https://api.github.com/users/zechengz/events{/privacy}", "received_events_url": "https://api.github.com/users/zechengz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zechengz", "id": 21955420, "node_id": "MDQ6VXNlcjIxOTU1NDIw", "avatar_url": "https://avatars.githubusercontent.com/u/21955420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zechengz", "html_url": "https://github.com/zechengz", "followers_url": "https://api.github.com/users/zechengz/followers", "following_url": "https://api.github.com/users/zechengz/following{/other_user}", "gists_url": "https://api.github.com/users/zechengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zechengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zechengz/subscriptions", "organizations_url": "https://api.github.com/users/zechengz/orgs", "repos_url": "https://api.github.com/users/zechengz/repos", "events_url": "https://api.github.com/users/zechengz/events{/privacy}", "received_events_url": "https://api.github.com/users/zechengz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-07T17:30:21Z", "updated_at": "2023-02-08T04:32:36Z", "closed_at": "2023-02-08T04:32:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6637", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6637", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6637.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6637.patch", "merged_at": "2023-02-08T04:32:36Z"}, "body": "Add tests for `CorrectAndSmooth`\r\nMinor documentation fix\r\nAlso minor fix of `smooth` in `CorrectAndSmooth` to avoid changing the `y_soft` tensor in the `smooth` function", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6637/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6635", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6635/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6635/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6635/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6635", "id": 1574423294, "node_id": "PR_kwDOBlHMec5Jb9ba", "number": 6635, "title": "Fix `gcn_norm` for PyTorch SparseTensor input with gradients", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2023-02-07T14:19:37Z", "updated_at": "2023-02-08T09:25:05Z", "closed_at": "2023-02-08T09:25:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6635", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6635", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6635.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6635.patch", "merged_at": "2023-02-08T09:25:02Z"}, "body": "Test case\r\n```python\r\nimport torch\r\nfrom torch_geometric.nn.conv.gcn_conv import gcn_norm\r\nfrom torch_geometric.utils import to_torch_coo_tensor\r\n\r\nedge_index = torch.tensor([[0, 1, 2], [3, 4, 5]])\r\nedge_weight = torch.ones(3).requires_grad_()\r\nadj = to_torch_coo_tensor(edge_index, edge_weight)\r\n\r\nadj.requires_grad\r\n>>> True\r\n\r\ngcn_norm(adj)[0].requires_grad\r\n>>> True", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6635/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6622", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6622/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6622/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6622/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6622", "id": 1573468459, "node_id": "I_kwDOBlHMec5dyTkr", "number": 6622, "title": "failing test_graph_norm", "user": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2023-02-06T23:55:40Z", "updated_at": "2023-02-08T09:16:19Z", "closed_at": "2023-02-08T09:16:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\n```\r\n_______________________________ test_graph_norm ________________________________\r\n    def test_graph_norm():\r\n        x = torch.randn(200, 16)\r\n        batch = torch.arange(4).view(-1, 1).repeat(1, 50).view(-1)\r\n    \r\n        norm = GraphNorm(16)\r\n        assert norm.__repr__() == 'GraphNorm(16)'\r\n    \r\n        if is_full_test():\r\n            torch.jit.script(norm)\r\n    \r\n        out = norm(x)\r\n        assert out.size() == (200, 16)\r\n        assert torch.allclose(out.mean(dim=0), torch.zeros(16), atol=1e-6)\r\n        assert torch.allclose(out.std(dim=0, unbiased=False), torch.ones(16),\r\n                              atol=1e-6)\r\n    \r\n        out = norm(x, batch)\r\n        assert out.size() == (200, 16)\r\n        assert torch.allclose(out[:50].mean(dim=0), torch.zeros(16), atol=1e-6)\r\n>       assert torch.allclose(out[:50].std(dim=0, unbiased=False), torch.ones(16),\r\n                              atol=1e-6)\r\nE       assert False\r\nE        +  where False = <built-in method allclose of type object at 0x7fdfae261bc0>(tensor([1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,\\n        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000],\\n       grad_fn=<StdBackward0>), tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), atol=1e-06)\r\nE        +    where <built-in method allclose of type object at 0x7fdfae261bc0> = torch.allclose\r\nE        +    and   tensor([1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,\\n        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000],\\n       grad_fn=<StdBackward0>) = <built-in method std of Tensor object at 0x7fe10b57b680>(dim=0, unbiased=False)\r\nE        +      where <built-in method std of Tensor object at 0x7fe10b57b680> = tensor([[ 1.3152,  2.1180, -0.2363, -0.0826, -1.7864, -1.6540,  0.3225, -0.5138,\\n          0.4043, -0.9715,  0.0435,  ...03,\\n          0.3199,  0.8352,  0.2442, -0.6816, -1.4514,  1.5867, -0.0306,  0.6499]],\\n       grad_fn=<SliceBackward0>).std\r\nE        +    and   tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]) = <built-in method ones of type object at 0x7fdfae261bc0>(16)\r\nE        +      where <built-in method ones of type object at 0x7fdfae261bc0> = torch.ones\r\ntest/nn/norm/test_graph_norm.py:26: AssertionError\r\n```\n\n### Environment\n\n* PyG version: latest build\r\n* CUDA/cuDNN version: 12\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6622/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6620", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6620/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6620/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6620/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6620", "id": 1573166228, "node_id": "I_kwDOBlHMec5dxJyU", "number": 6620, "title": "PGExplainer error - RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument mat2 in method wrapper_mm) ", "user": {"login": "Peter-obi", "id": 52758657, "node_id": "MDQ6VXNlcjUyNzU4NjU3", "avatar_url": "https://avatars.githubusercontent.com/u/52758657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Peter-obi", "html_url": "https://github.com/Peter-obi", "followers_url": "https://api.github.com/users/Peter-obi/followers", "following_url": "https://api.github.com/users/Peter-obi/following{/other_user}", "gists_url": "https://api.github.com/users/Peter-obi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Peter-obi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Peter-obi/subscriptions", "organizations_url": "https://api.github.com/users/Peter-obi/orgs", "repos_url": "https://api.github.com/users/Peter-obi/repos", "events_url": "https://api.github.com/users/Peter-obi/events{/privacy}", "received_events_url": "https://api.github.com/users/Peter-obi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-02-06T19:40:03Z", "updated_at": "2023-02-23T04:44:25Z", "closed_at": "2023-02-07T07:48:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nI trained a GCN model on Goggle collab for multi-class classification and was trying to get explanations for the edge values using the PGExplainer. All the code runs well while training the model on GPU but when I want to run the PGExplainer, for some reason some of the tensors are on the cpu despite adding the '.to(device)' to all inputs. Kindly find code below\r\n```\r\nfrom torch_geometric.nn import GCNConv\r\nfrom torch_geometric.nn import global_mean_pool\r\nimport torch.nn.functional as F\r\nimport torch.nn as nn\r\n\r\nclass GCN(nn.Module):\r\n    def __init__(self, input_dim, hidden_channels):\r\n        super(GCN, self).__init__()\r\n        torch.manual_seed(42)\r\n        self.conv1 = GCNConv(input_dim, hidden_channels)\r\n        self.conv2 = GCNConv(hidden_channels, hidden_channels)\r\n        self.conv3 = GCNConv(hidden_channels, hidden_channels)\r\n        self.lin = nn.Linear(hidden_channels, 3)\r\n\r\n    def forward(self, x, edge_index, batch):\r\n        x = self.conv1(x, edge_index)\r\n        x = F.relu(x)\r\n        x = self.conv2(x, edge_index)\r\n        x = F.relu(x)\r\n        x = self.conv3(x, edge_index)\r\n        x = gnn.global_mean_pool(x, batch)\r\n        x = self.lin(x)\r\n        return x\r\ndevice = torch.device(\"cuda\")\r\n# Define criterion and optimizer\r\nmodel = GCN(input_dim = 3, hidden_channels = 256)\r\ncriterion = nn.CrossEntropyLoss()\r\noptimizer = torch.optim.Adam(model.parameters(), lr=0.001)\r\nnum_epochs = 10\r\nmodel = model.to(device)\r\nmodel = model.double()\r\n# Train and evaluate the model\r\nfor epoch in range(num_epochs):\r\n    model.train()\r\n    correct = 0\r\n    for data in train_dataloader:\r\n        optimizer.zero_grad()\r\n        out = model(data.x.to(device), data.edge_index.to(device).long(), data.batch.to(device))\r\n        loss = criterion(out, data.y.to(device))\r\n        loss.backward()\r\n        optimizer.step()\r\n        pred = out.argmax(dim=1)\r\n        correct += int((pred == data.y.to(device)).sum())\r\n        #print(correct)\r\n    train_acc = correct / len(train_dataloader.dataset)\r\n    model.eval()\r\n    correct = 0\r\n    for data in val_dataloader:\r\n        out = model(data.x.to(device), data.edge_index.to(device).long(), data.batch.to(device))\r\n        pred = out.argmax(dim=1)\r\n        correct += int((pred == data.y.to(device)).sum())\r\n    val_acc = correct / len(val_dataloader.dataset)\r\n    print(f'Epoch: {epoch}, Train Accuracy: {train_acc:.4f}, Validation Accuracy: {val_acc:.4f}')\r\n```\r\nImplement and run PGExplainer\r\n```\r\nfrom torch_geometric.explain import Explainer, PGExplainer\r\nexplainer = Explainer(\r\n    model=model,\r\n    algorithm=PGExplainer(epochs=10, lr=0.003),\r\n    explanation_type='phenomenon',\r\n    edge_mask_type='object',\r\n    model_config=dict(\r\n        mode='multiclass_classification',\r\n        task_level='graph',\r\n        return_type='raw',\r\n    ),\r\n    # Include only the top 10 most important edges:\r\n    threshold_config=dict(threshold_type='topk', value=10),\r\n)\r\n# PGExplainer needs to be trained separately since it is a parametric\r\n# explainer i.e it uses a neural network to generate explanations:\r\nfor epoch in range(10):\r\n    for data in val_dataloader:\r\n        # Move the data to the chosen device\r\n        data = data.to(device)\r\n        x = data.x\r\n        x = x.to(device)\r\n\r\n        edge_index = data.edge_index\r\n        edge_index = edge_index.to(device)\r\n\r\n        target = data.y\r\n        target = target.to(device)\r\n\r\n        batch = data.batch\r\n        batch = batch.to(device)\r\n\r\n        # Pass the data to the model's train method\r\n        loss = explainer.algorithm.train(epoch, model, x, edge_index, target=target, batch=batch)\r\n# Generate the explanation for a particular graph:\r\nexplanation = explainer(dataset[0].x, dataset[0].edge_index)\r\nprint(explanation.edge_mask)\r\n```\r\nFull traceback\r\n```\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n[<ipython-input-37-42a83a465a91>](https://u3a1yjs3ki-496ff2e9c6d22116-0-colab.googleusercontent.com/outputframe.html?vrz=colab-20230202-060047-RC00_506569794#) in <module>\r\n     35 \r\n     36         # Pass the data to the model's train method\r\n---> 37         loss = explainer.algorithm.train(epoch, model, x, edge_index, target=target, batch=batch)\r\n     38 # Generate the explanation for a particular graph:\r\n     39 explanation = explainer(dataset[0].x, dataset[0].edge_index)\r\n\r\n4 frames\r\n[/usr/local/lib/python3.8/dist-packages/torch_geometric/explain/algorithm/pg_explainer.py](https://u3a1yjs3ki-496ff2e9c6d22116-0-colab.googleusercontent.com/outputframe.html?vrz=colab-20230202-060047-RC00_506569794#) in train(self, epoch, model, x, edge_index, target, index, **kwargs)\r\n    127 \r\n    128         inputs = self._get_inputs(z, edge_index, index)\r\n--> 129         logits = self.mlp(inputs).view(-1)\r\n    130         edge_mask = self._concrete_sample(logits, temperature)\r\n    131         set_masks(model, edge_mask, edge_index, apply_sigmoid=True)\r\n\r\n[/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py](https://u3a1yjs3ki-496ff2e9c6d22116-0-colab.googleusercontent.com/outputframe.html?vrz=colab-20230202-060047-RC00_506569794#) in _call_impl(self, *input, **kwargs)\r\n   1192         if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks\r\n   1193                 or _global_forward_hooks or _global_forward_pre_hooks):\r\n-> 1194             return forward_call(*input, **kwargs)\r\n   1195         # Do not call functions when jit is used\r\n   1196         full_backward_hooks, non_full_backward_hooks = [], []\r\n\r\n[/usr/local/lib/python3.8/dist-packages/torch/nn/modules/container.py](https://u3a1yjs3ki-496ff2e9c6d22116-0-colab.googleusercontent.com/outputframe.html?vrz=colab-20230202-060047-RC00_506569794#) in forward(self, input)\r\n    202     def forward(self, input):\r\n    203         for module in self:\r\n--> 204             input = module(input)\r\n    205         return input\r\n    206 \r\n\r\n[/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py](https://u3a1yjs3ki-496ff2e9c6d22116-0-colab.googleusercontent.com/outputframe.html?vrz=colab-20230202-060047-RC00_506569794#) in _call_impl(self, *input, **kwargs)\r\n   1210             input = bw_hook.setup_input_hook(input)\r\n   1211 \r\n-> 1212         result = forward_call(*input, **kwargs)\r\n   1213         if _global_forward_hooks or self._forward_hooks:\r\n   1214             for hook in (*_global_forward_hooks.values(), *self._forward_hooks.values()):\r\n\r\n[/usr/local/lib/python3.8/dist-packages/torch_geometric/nn/dense/linear.py](https://u3a1yjs3ki-496ff2e9c6d22116-0-colab.googleusercontent.com/outputframe.html?vrz=colab-20230202-060047-RC00_506569794#) in forward(self, x)\r\n    129             x (torch.Tensor): The input features.\r\n    130         \"\"\"\r\n--> 131         return F.linear(x, self.weight, self.bias)\r\n    132 \r\n    133     @torch.no_grad()\r\n\r\nRuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument mat1 in method wrapper_addmm)\r\n```\r\n\r\n### Environment\r\n\r\n* PyG version:2.3.0\r\n* PyTorch version:1.13.1\r\n* OS:Linux\r\n* Python version:3.8.10\r\n* CUDA/cuDNN version:cuda_11.6\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): source\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):Torch scatter: 2.1.0\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6620/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6616", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6616/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6616/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6616/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6616", "id": 1572860254, "node_id": "PR_kwDOBlHMec5JWs7W", "number": 6616, "title": "Treat `ModelHubMixin` as an optional dependency", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-06T16:12:22Z", "updated_at": "2023-02-06T16:40:52Z", "closed_at": "2023-02-06T16:40:50Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6616", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6616", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6616.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6616.patch", "merged_at": "2023-02-06T16:40:50Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6616/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6613", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6613/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6613/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6613/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6613", "id": 1572686026, "node_id": "PR_kwDOBlHMec5JWHhE", "number": 6613, "title": "Fixing Subgraph Methods", "user": {"login": "toenshoff", "id": 15213846, "node_id": "MDQ6VXNlcjE1MjEzODQ2", "avatar_url": "https://avatars.githubusercontent.com/u/15213846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toenshoff", "html_url": "https://github.com/toenshoff", "followers_url": "https://api.github.com/users/toenshoff/followers", "following_url": "https://api.github.com/users/toenshoff/following{/other_user}", "gists_url": "https://api.github.com/users/toenshoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/toenshoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toenshoff/subscriptions", "organizations_url": "https://api.github.com/users/toenshoff/orgs", "repos_url": "https://api.github.com/users/toenshoff/repos", "events_url": "https://api.github.com/users/toenshoff/events{/privacy}", "received_events_url": "https://api.github.com/users/toenshoff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "toenshoff", "id": 15213846, "node_id": "MDQ6VXNlcjE1MjEzODQ2", "avatar_url": "https://avatars.githubusercontent.com/u/15213846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toenshoff", "html_url": "https://github.com/toenshoff", "followers_url": "https://api.github.com/users/toenshoff/followers", "following_url": "https://api.github.com/users/toenshoff/following{/other_user}", "gists_url": "https://api.github.com/users/toenshoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/toenshoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toenshoff/subscriptions", "organizations_url": "https://api.github.com/users/toenshoff/orgs", "repos_url": "https://api.github.com/users/toenshoff/repos", "events_url": "https://api.github.com/users/toenshoff/events{/privacy}", "received_events_url": "https://api.github.com/users/toenshoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "toenshoff", "id": 15213846, "node_id": "MDQ6VXNlcjE1MjEzODQ2", "avatar_url": "https://avatars.githubusercontent.com/u/15213846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toenshoff", "html_url": "https://github.com/toenshoff", "followers_url": "https://api.github.com/users/toenshoff/followers", "following_url": "https://api.github.com/users/toenshoff/following{/other_user}", "gists_url": "https://api.github.com/users/toenshoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/toenshoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toenshoff/subscriptions", "organizations_url": "https://api.github.com/users/toenshoff/orgs", "repos_url": "https://api.github.com/users/toenshoff/repos", "events_url": "https://api.github.com/users/toenshoff/events{/privacy}", "received_events_url": "https://api.github.com/users/toenshoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-06T14:36:07Z", "updated_at": "2023-02-07T12:31:25Z", "closed_at": "2023-02-07T12:31:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6613", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6613", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6613.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6613.patch", "merged_at": "2023-02-07T12:31:24Z"}, "body": "This pull request addresses a bug in both ```Data.subgraph``` and ```HeteroData.subgraph```,  which yield incorrect results when an unsorted list of integers is used to select a subgraph. In this case, the attributes of nodes are reordered according to the given list of integers, but the ids used in ```edge_index``` are *not*. Therefore, the node features will be distributed incorrectly in the output subgraph.\r\nNote that ```Data.subgraph``` does use the ```utils.subgraph``` method with the ```relabel_nodes=True``` option to compute the reduced edge list. However, this is insufficient to ensure a correct output, as this only shifts node ids downward to ensure consecutive ids. It has no effect on the actual order of nodes, which causes this problem.\r\n\r\nConsider the following example:\r\n```python\r\nimport torch\r\nfrom torch_geometric.data import Data\r\n\r\ndata = Data(x=torch.tensor([0, 0, 1, 1]), edge_index=torch.tensor([[0, 2], [1, 3]]))\r\nsub = data.subgraph(torch.tensor([0, 2, 1]))\r\nprint(sub.x)\r\nprint(sub.edge_index)\r\n```\r\nWith torch_geometric==2.3.0 (current nightly) we obtain the following output:\r\n```\r\nx: [0 1 0]\r\nEdge Idx:\r\n [[0]\r\n [1]]\r\n```\r\nNote that in the original graph each edge has a source and destination with the same node label. In the subgraph, the remaining edge has a source with label 0 and a destination with label 1. This is therefore not a valid subgraph.\r\n\r\nI have addressed this bug by re-mapping the node ids in ```edge_index``` to their correct new index if the input is indeed an unsorted integer list. ```HeteroData.subgraph``` had the same issue with an analog solution. I also extended the tests to cover these issues.\r\n\r\nBeyond this, I was wondering what the behaviour of ```Data.subgraph``` should be if the argument is a list of  integers with duplicate entries. Should the method raise an Exception, ignore duplicates or create duplicate vertices? I have not implemented anything in this regard yet, but I do think this should be specified.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6613/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6609", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6609/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6609/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6609/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6609", "id": 1572255532, "node_id": "PR_kwDOBlHMec5JUqR4", "number": 6609, "title": "Fix bugs in `PNAConv` and `DegreeScalerAggregation`", "user": {"login": "zechengz", "id": 21955420, "node_id": "MDQ6VXNlcjIxOTU1NDIw", "avatar_url": "https://avatars.githubusercontent.com/u/21955420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zechengz", "html_url": "https://github.com/zechengz", "followers_url": "https://api.github.com/users/zechengz/followers", "following_url": "https://api.github.com/users/zechengz/following{/other_user}", "gists_url": "https://api.github.com/users/zechengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zechengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zechengz/subscriptions", "organizations_url": "https://api.github.com/users/zechengz/orgs", "repos_url": "https://api.github.com/users/zechengz/repos", "events_url": "https://api.github.com/users/zechengz/events{/privacy}", "received_events_url": "https://api.github.com/users/zechengz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "zechengz", "id": 21955420, "node_id": "MDQ6VXNlcjIxOTU1NDIw", "avatar_url": "https://avatars.githubusercontent.com/u/21955420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zechengz", "html_url": "https://github.com/zechengz", "followers_url": "https://api.github.com/users/zechengz/followers", "following_url": "https://api.github.com/users/zechengz/following{/other_user}", "gists_url": "https://api.github.com/users/zechengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zechengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zechengz/subscriptions", "organizations_url": "https://api.github.com/users/zechengz/orgs", "repos_url": "https://api.github.com/users/zechengz/repos", "events_url": "https://api.github.com/users/zechengz/events{/privacy}", "received_events_url": "https://api.github.com/users/zechengz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zechengz", "id": 21955420, "node_id": "MDQ6VXNlcjIxOTU1NDIw", "avatar_url": "https://avatars.githubusercontent.com/u/21955420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zechengz", "html_url": "https://github.com/zechengz", "followers_url": "https://api.github.com/users/zechengz/followers", "following_url": "https://api.github.com/users/zechengz/following{/other_user}", "gists_url": "https://api.github.com/users/zechengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zechengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zechengz/subscriptions", "organizations_url": "https://api.github.com/users/zechengz/orgs", "repos_url": "https://api.github.com/users/zechengz/repos", "events_url": "https://api.github.com/users/zechengz/events{/privacy}", "received_events_url": "https://api.github.com/users/zechengz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-06T09:54:55Z", "updated_at": "2023-02-06T11:07:12Z", "closed_at": "2023-02-06T11:07:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6609", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6609", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6609.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6609.patch", "merged_at": "2023-02-06T11:07:11Z"}, "body": "Some fixes, including bugs fixes and minor documentation fixes\r\n\r\n### `torch_geometric/nn/aggr/scaler.py`\r\nThe `deg` tensor should be clamped during the `inverse_linear` computation and thus avoid division by zero (in case the `deg` tensor contains a zero degree value). Previous implementation will make the zero degree value equal to two in the `amplification` and `attenuation` cases where we also add one directly. Though I am not sure whether this way is correct and whether we also need to `clamp(1)` in the `linear` scaler.\r\n\r\n### `torch_geometric/nn/conv/pna_conv.py`\r\nThe previous implementation utilized two for loops to compute the `deg_histogram` tensor. The first loop calculates the `max_degree`, while the second loop updates the `deg_histogram` by adding each `bincount`, with a `minlength` of `max_degree + 1`. However, for certain loaders (e.g. the `NeighborLoader`), the degree in the second loop may exceed the `max_degree` computed in the first loop and thus raise following error. Also, current implementation that replaces the two loops with one loop may potentially improve computation speed, although I don't verify this...\r\n```\r\n    deg_histogram += torch.bincount(d, minlength=deg_histogram.numel())\r\nRuntimeError: The size of tensor a (17) must match the size of tensor b (19) at non-singleton dimension 0\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6609/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6607", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6607/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6607/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6607/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6607", "id": 1572108277, "node_id": "PR_kwDOBlHMec5JULgp", "number": 6607, "title": "Fix `threshold_type` in documentation", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-06T08:09:33Z", "updated_at": "2023-02-06T08:14:49Z", "closed_at": "2023-02-06T08:14:47Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6607", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6607", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6607.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6607.patch", "merged_at": "2023-02-06T08:14:47Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6607/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6601", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6601/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6601/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6601/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6601", "id": 1571444582, "node_id": "I_kwDOBlHMec5dqldm", "number": 6601, "title": "NNConv layer : MPGNN layer ?", "user": {"login": "Forbu", "id": 11457947, "node_id": "MDQ6VXNlcjExNDU3OTQ3", "avatar_url": "https://avatars.githubusercontent.com/u/11457947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Forbu", "html_url": "https://github.com/Forbu", "followers_url": "https://api.github.com/users/Forbu/followers", "following_url": "https://api.github.com/users/Forbu/following{/other_user}", "gists_url": "https://api.github.com/users/Forbu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Forbu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Forbu/subscriptions", "organizations_url": "https://api.github.com/users/Forbu/orgs", "repos_url": "https://api.github.com/users/Forbu/repos", "events_url": "https://api.github.com/users/Forbu/events{/privacy}", "received_events_url": "https://api.github.com/users/Forbu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-02-05T13:57:03Z", "updated_at": "2023-02-06T12:51:40Z", "closed_at": "2023-02-06T12:47:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nThis issue does not really concern a \"bug\" but a interrogation about a custom graph neural network operator : the NNconv operator (https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.NNConv).\r\n\r\nThere is possibly an issue concerning this layer (but I perhaps misunderstood something). Basicly in the paper Neural Message Passing for Quantum Chemistry (https://arxiv.org/abs/1704.01212) (NNconv is the layer that reproduce the architecture of the paper) we have two operations : \r\n![image](https://user-images.githubusercontent.com/11457947/216823400-323317cb-b5cc-4e8f-8b53-f665eca97dd9.png)\r\n\r\nBasicly we have the message passing that if a function of the edge_attrib  and the 2 other nodes and we have the preprocessing  of the message with the node information.\r\n\r\nBut when I look at the code of the NNconv layer it doesn't seem to represent those operations (the def message method) it doesn't seems to do that (https://pytorch-geometric.readthedocs.io/en/latest/_modules/torch_geometric/nn/conv/nn_conv.html#NNConv):\r\n```python\r\n    def message(self, x_j: Tensor, edge_attr: Tensor) -> Tensor:\r\n        weight = self.nn(edge_attr)\r\n        weight = weight.view(-1, self.in_channels_l, self.out_channels)\r\n        return torch.matmul(x_j.unsqueeze(1), weight).squeeze(1)\r\n```\r\n\r\n\r\n\r\n\r\n### Environment\r\n\r\n* PyG version: 2.2\r\n* PyTorch version:\r\n* OS:\r\n* Python version:\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6601/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6598", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6598/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6598/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6598/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6598", "id": 1571221463, "node_id": "PR_kwDOBlHMec5JRi25", "number": 6598, "title": "Fix `download` and `process` in `torch_geometric.data.Dataset` when using a duplicated class name `Dataset`", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-05T03:40:47Z", "updated_at": "2023-02-06T08:55:05Z", "closed_at": "2023-02-06T08:55:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6598", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6598", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6598.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6598.patch", "merged_at": "2023-02-06T08:55:03Z"}, "body": "To fix https://github.com/pyg-team/pytorch_geometric/issues/6582. Not sure if it is a \"bug\" and should be fixed.\r\n\r\n\r\n### test example\r\n```python\r\nimport torch_geometric\r\nclass Dataset(torch_geometric.data.Dataset):\r\n    def __init__(self):\r\n        self.enter_download = False\r\n        self.enter_process = False\r\n        super().__init__()\r\n\r\n    def _download(self):\r\n        self.enter_download = True\r\n\r\n    def _process(self):\r\n        self.enter_process = True\r\n\r\n    def download(self):\r\n        pass\r\n\r\n    def process(self):\r\n        pass\r\n\r\nds = Dataset()\r\nassert ds.enter_download\r\nassert ds.enter_process\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6598/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6595", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6595/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6595/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6595/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6595", "id": 1571011427, "node_id": "PR_kwDOBlHMec5JQ5IN", "number": 6595, "title": "Fixed a bug in `AsymmetricConv`", "user": {"login": "gravins", "id": 32573406, "node_id": "MDQ6VXNlcjMyNTczNDA2", "avatar_url": "https://avatars.githubusercontent.com/u/32573406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gravins", "html_url": "https://github.com/gravins", "followers_url": "https://api.github.com/users/gravins/followers", "following_url": "https://api.github.com/users/gravins/following{/other_user}", "gists_url": "https://api.github.com/users/gravins/gists{/gist_id}", "starred_url": "https://api.github.com/users/gravins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gravins/subscriptions", "organizations_url": "https://api.github.com/users/gravins/orgs", "repos_url": "https://api.github.com/users/gravins/repos", "events_url": "https://api.github.com/users/gravins/events{/privacy}", "received_events_url": "https://api.github.com/users/gravins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "gravins", "id": 32573406, "node_id": "MDQ6VXNlcjMyNTczNDA2", "avatar_url": "https://avatars.githubusercontent.com/u/32573406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gravins", "html_url": "https://github.com/gravins", "followers_url": "https://api.github.com/users/gravins/followers", "following_url": "https://api.github.com/users/gravins/following{/other_user}", "gists_url": "https://api.github.com/users/gravins/gists{/gist_id}", "starred_url": "https://api.github.com/users/gravins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gravins/subscriptions", "organizations_url": "https://api.github.com/users/gravins/orgs", "repos_url": "https://api.github.com/users/gravins/repos", "events_url": "https://api.github.com/users/gravins/events{/privacy}", "received_events_url": "https://api.github.com/users/gravins/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gravins", "id": 32573406, "node_id": "MDQ6VXNlcjMyNTczNDA2", "avatar_url": "https://avatars.githubusercontent.com/u/32573406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gravins", "html_url": "https://github.com/gravins", "followers_url": "https://api.github.com/users/gravins/followers", "following_url": "https://api.github.com/users/gravins/following{/other_user}", "gists_url": "https://api.github.com/users/gravins/gists{/gist_id}", "starred_url": "https://api.github.com/users/gravins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gravins/subscriptions", "organizations_url": "https://api.github.com/users/gravins/orgs", "repos_url": "https://api.github.com/users/gravins/repos", "events_url": "https://api.github.com/users/gravins/events{/privacy}", "received_events_url": "https://api.github.com/users/gravins/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-02-04T16:14:32Z", "updated_at": "2023-02-04T17:03:15Z", "closed_at": "2023-02-04T17:03:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6595", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6595", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6595.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6595.patch", "merged_at": "2023-02-04T17:03:14Z"}, "body": "Hi, \r\nI fixed a bug in antisymmetric_conv.\r\nSpecifically, I changed the definition of `self.eye` (gradients don't need to be computed for this Tensor) and fixed the doc.\r\n\r\nBest,\r\nAlessio", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6595/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6593", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6593/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6593/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6593/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6593", "id": 1570959576, "node_id": "PR_kwDOBlHMec5JQu1x", "number": 6593, "title": "`onlyLinux` decorator", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 1267385588, "node_id": "MDU6TGFiZWwxMjY3Mzg1NTg4", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/feature", "name": "feature", "color": "a2eeef", "default": false, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}, {"id": 4601575641, "node_id": "LA_kwDOBlHMec8AAAABEkZ42Q", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/utils", "name": "utils", "color": "DBC48C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-04T14:10:39Z", "updated_at": "2023-02-04T14:28:20Z", "closed_at": "2023-02-04T14:28:19Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6593", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6593", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6593.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6593.patch", "merged_at": "2023-02-04T14:28:19Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6593/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6592", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6592/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6592/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6592/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6592", "id": 1570953079, "node_id": "PR_kwDOBlHMec5JQtmJ", "number": 6592, "title": "Doc-fixes for `AntiSymmetricConv`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-02-04T13:53:42Z", "updated_at": "2023-02-04T13:54:03Z", "closed_at": "2023-02-04T13:54:03Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6592", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6592", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6592.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6592.patch", "merged_at": "2023-02-04T13:54:02Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6592/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6585", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6585/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6585/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6585/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6585", "id": 1570263012, "node_id": "I_kwDOBlHMec5dmE_k", "number": 6585, "title": "PyG CI failures:`test_cpu_affinity_neighbor_loader[1-loader_cores1]` & `test_profile`", "user": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2023-02-03T18:19:51Z", "updated_at": "2023-02-06T23:54:20Z", "closed_at": "2023-02-06T23:54:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nlog attached\r\n[pyg_failures.txt](https://github.com/pyg-team/pytorch_geometric/files/10581661/pyg_failures.txt)\r\n\n\n### Environment\n\n* PyG version: master branch build\r\n* PyTorch version: 2.0\r\n* CUDA version: 12\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6585/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6584", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6584/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6584/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6584/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6584", "id": 1570226142, "node_id": "I_kwDOBlHMec5dl7_e", "number": 6584, "title": "Conda package is missing `tabulate` dependency", "user": {"login": "amotta", "id": 256037, "node_id": "MDQ6VXNlcjI1NjAzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/256037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amotta", "html_url": "https://github.com/amotta", "followers_url": "https://api.github.com/users/amotta/followers", "following_url": "https://api.github.com/users/amotta/following{/other_user}", "gists_url": "https://api.github.com/users/amotta/gists{/gist_id}", "starred_url": "https://api.github.com/users/amotta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amotta/subscriptions", "organizations_url": "https://api.github.com/users/amotta/orgs", "repos_url": "https://api.github.com/users/amotta/repos", "events_url": "https://api.github.com/users/amotta/events{/privacy}", "received_events_url": "https://api.github.com/users/amotta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-02-03T17:50:24Z", "updated_at": "2023-02-03T19:29:29Z", "closed_at": "2023-02-03T19:29:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI've installed PyTorch Geometric with\r\n\r\n```bash\r\nNAME=debug\r\nconda create --name $NAME python=3.9 numpy\r\nconda install --name $NAME --channel pytorch pytorch cpuonly\r\nconda install --name $NAME --channel pyg pyg\r\n```\r\n\r\nThen, following the \"Introduction by Example\" in the PyTorch Geometric docs, I created a `Dataset` with:\r\n```python\r\nfrom torch_geometric.datasets import TUDataset\r\ndataset = TUDataset(root='/tmp/ENZYMES', name='ENZYMES')\r\ndataset\r\n```\r\n\r\nThis prints `ENZYMES(600)`, as expected.\r\n\r\nHowever, the call to `dataset.print_summary()` fails with the following backtrace:\r\n```python\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/amotta/.miniconda/envs/debug/lib/python3.9/site-packages/torch_geometric/data/dataset.py\", line 309, in print_summary\r\n    return str(self.get_summary())\r\n  File \"/home/amotta/.miniconda/envs/debug/lib/python3.9/site-packages/torch_geometric/data/summary.py\", line 81, in __repr__\r\n    from tabulate import tabulate\r\nModuleNotFoundError: No module named 'tabulate'\r\n```\r\n\r\nI am not very familiar with packaging for PyPI or conda, but I have noticed that\r\n- `tabulate` is listed as a dependency in `setup.py`,\r\n- but that `tabulate` is missing from the dependencies of the [conda packages](https://anaconda.org/pyg/pyg/files)\n\n### Environment\n\n* PyG version: 2.2.0\r\n* PyTorch version: 1.13.1\r\n* OS: Linux 6.1.9\r\n* Python version: 3.9.16\r\n* CUDA/cuDNN version: cpu only\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): see bug report\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6584/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6582", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6582/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6582/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6582/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6582", "id": 1569751364, "node_id": "I_kwDOBlHMec5dkIFE", "number": 6582, "title": "The `process` and `download` methods are not called for `Dataset` descendant named `Dataset`", "user": {"login": "amotta", "id": 256037, "node_id": "MDQ6VXNlcjI1NjAzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/256037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amotta", "html_url": "https://github.com/amotta", "followers_url": "https://api.github.com/users/amotta/followers", "following_url": "https://api.github.com/users/amotta/following{/other_user}", "gists_url": "https://api.github.com/users/amotta/gists{/gist_id}", "starred_url": "https://api.github.com/users/amotta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amotta/subscriptions", "organizations_url": "https://api.github.com/users/amotta/orgs", "repos_url": "https://api.github.com/users/amotta/repos", "events_url": "https://api.github.com/users/amotta/events{/privacy}", "received_events_url": "https://api.github.com/users/amotta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-02-03T12:15:17Z", "updated_at": "2023-02-06T08:55:05Z", "closed_at": "2023-02-06T08:55:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhen creating a `Dataset` class that is named `Dataset` itself, then the `process` and `download` methods are not executed.\r\n\r\n```python\r\nimport torch_geometric\r\n\r\nclass Dataset(torch_geometric.data.InMemoryDataset):\r\n    def __init__(self, root, transform=None, pre_transform=None, pre_filter=None):\r\n        self.did_download = self.did_process = False\r\n        super().__init__(root, transform, pre_transform, pre_filter, log=False)\r\n\r\n        print(\"download called: \" + str(self.did_download))\r\n        print(\"process called: \" + str(self.did_process))\r\n\r\n        # Because `download` and `processed` are not called by the\r\n        # parent constructors, the files at `self.processed_paths`\r\n        # do not exist at this point. Thus, the following attempt\r\n        # to load the data will fail.\r\n\r\n        # self.data, self.slices = torch.load(self.processed_paths[0])\r\n\r\n    @property\r\n    def raw_file_names(self):\r\n        return ['trigger-download']\r\n\r\n    @property\r\n    def processed_file_names(self):\r\n        return ['trigger-processing']\r\n\r\n    def download(self):\r\n        print(f\"{__class__.__name__}.download\")\r\n        self.did_download = True\r\n\r\n    def process(self):\r\n        print(f\"{__class__.__name__}.process\")\r\n        self.did_process = True\r\n\r\nDataset('/path/to/root')\r\n```\r\n\r\nRunning the above produces the following output:\r\n```\r\ndownload called: False\r\nprocess called: False\r\n```\r\n\r\nThe expected behavior can be triggered by changing the class name from `Dataset` to anything else (e.g., `MyDataset`):\r\n\r\n```python\r\nclass MyDataset(torch_geometric.data.InMemoryDataset):\r\n    def __init__(self, root, transform=None, pre_transform=None, pre_filter=None):\r\n        self.did_download = self.did_process = False\r\n        super().__init__(root, transform, pre_transform, pre_filter, log=False)\r\n\r\n    @property\r\n    def raw_file_names(self):\r\n        return ['trigger-download']\r\n\r\n    @property\r\n    def processed_file_names(self):\r\n        return ['trigger-processing']\r\n\r\n    def download(self):\r\n        print(f\"{__class__.__name__}.download\")\r\n        self.did_download = True\r\n\r\n    def process(self):\r\n        print(f\"{__class__.__name__}.process\")\r\n        self.did_process = True\r\n\r\nMyDataset('/path/to/root')\r\n```\r\n\r\nThis produces the following output (before failing because `self.processed_dir` does not exist):\r\n```\r\nMyDataset.download\r\nMyDataset.process\r\n```\r\n\r\nThis \"bug\" (in the sense of unexpected behavior) is caused by following if conditions in the constructor of `torch_geometric.data.Dataset`:\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/ab3efed107ed76a38a59b11dfd6744eace5e7204/torch_geometric/data/dataset.py#L90-L94\r\n\r\nThe problematic conditions were introduced in commit 4200bb83d20b3ce0a03d64c4f095ce92f560c710 as part of pull request #4586 (to address issue #4567).\n\n### Environment\n\n* PyG version: 2.2.0\r\n* PyTorch version: 1.13.1\r\n* OS: Linux 6.1.9\r\n* Python version: 3.9.16\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): `conda` (including `cpuonly`)\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6582/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6580", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6580/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6580/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6580/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6580", "id": 1568977297, "node_id": "I_kwDOBlHMec5dhLGR", "number": 6580, "title": "Dataloader Error", "user": {"login": "ande8331", "id": 1146852, "node_id": "MDQ6VXNlcjExNDY4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1146852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ande8331", "html_url": "https://github.com/ande8331", "followers_url": "https://api.github.com/users/ande8331/followers", "following_url": "https://api.github.com/users/ande8331/following{/other_user}", "gists_url": "https://api.github.com/users/ande8331/gists{/gist_id}", "starred_url": "https://api.github.com/users/ande8331/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ande8331/subscriptions", "organizations_url": "https://api.github.com/users/ande8331/orgs", "repos_url": "https://api.github.com/users/ande8331/repos", "events_url": "https://api.github.com/users/ande8331/events{/privacy}", "received_events_url": "https://api.github.com/users/ande8331/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-02-03T00:30:04Z", "updated_at": "2023-02-03T01:09:31Z", "closed_at": "2023-02-03T01:09:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhen I try to use the torch_geometic.data.Dataloader, I get a \"KeyError: 0\" exception. I tried using the same Dataloader on one of the tutorial projects I'm using as a guide and got the same issue there (see code snippet below). I'm kind of new to this, so not sure if there is a bug or if I'm doing something fundamentally wrong... Any help would be greatly appreciated!\r\n\r\n```python\r\n# Code originated from: https://colab.research.google.com/github/AntonioLonga/PytorchGeometricTutorial/blob/main/Tutorial6/Tutorial6.ipynb#scrollTo=NzF99T5X2nGs\r\nfrom torch_geometric.datasets import Planetoid\r\nimport torch_geometric.transforms as T\r\nfrom torch_geometric.utils import train_test_split_edges\r\nfrom torch_geometric.data import DataLoader\r\nfrom tqdm.auto import tqdm\r\n\r\ndataset = Planetoid(\"\\..\", \"CiteSeer\", transform=T.NormalizeFeatures())\r\ndata = dataset[0]\r\n\r\nloader = DataLoader(data, batch_size=50)\r\n# Error occurs with TQDM:\r\nfor batch in tqdm(loader):\r\n    print(batch.x)\r\n# Also confirmed its independent of TQDM:\r\n#for idx in enumerate(loader):\r\n#    print(idx)\r\ndata = train_test_split_edges(data)\r\n```\n\n### Environment\n\n* PyG version: 2.2.0\r\n* PyTorch version: 1.13.1+cu117\r\n* OS: Ubuntu 20.04\r\n* Python version: 3.8.10\r\n* CUDA/cuDNN version: 11.6\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): \r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6580/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6579", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6579/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6579/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6579/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6579", "id": 1568929314, "node_id": "I_kwDOBlHMec5dg_Yi", "number": 6579, "title": "GNN Explainer in the example file cannot work", "user": {"login": "ZihanChen1995", "id": 36064256, "node_id": "MDQ6VXNlcjM2MDY0MjU2", "avatar_url": "https://avatars.githubusercontent.com/u/36064256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZihanChen1995", "html_url": "https://github.com/ZihanChen1995", "followers_url": "https://api.github.com/users/ZihanChen1995/followers", "following_url": "https://api.github.com/users/ZihanChen1995/following{/other_user}", "gists_url": "https://api.github.com/users/ZihanChen1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZihanChen1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZihanChen1995/subscriptions", "organizations_url": "https://api.github.com/users/ZihanChen1995/orgs", "repos_url": "https://api.github.com/users/ZihanChen1995/repos", "events_url": "https://api.github.com/users/ZihanChen1995/events{/privacy}", "received_events_url": "https://api.github.com/users/ZihanChen1995/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-02-02T23:24:07Z", "updated_at": "2023-02-03T16:19:15Z", "closed_at": "2023-02-03T16:19:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nHi, I am running the `gnn_explainer.py` file in the [examples](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/gnn_explainer.py). However, when I try to load the explainer, the following error appears. (Since I am running the file on Google Colab, my torch version is `1.13.1+cu116`.)\r\n```\r\nexplainer = Explainer(\r\n    model=model,\r\n    algorithm=GNNExplainer(epochs=200),\r\n    explanation_type='model',\r\n    node_mask_type='attributes',\r\n    edge_mask_type='object',\r\n    model_config=dict(\r\n        mode='multiclass_classification',\r\n        task_level='node',\r\n        return_type='log_probs',\r\n    ),\r\n)\r\n\r\n>>> \r\n--------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n[<ipython-input-6-7c4636ee1dc4>](https://localhost:8080/#) in <module>\r\n----> 1 explainer = Explainer(\r\n      2     model=model,\r\n      3     algorithm=GNNExplainer(epochs=200),\r\n      4     explanation_type='model',\r\n      5     node_mask_type='attributes',\r\n\r\nTypeError: __init__() got an unexpected keyword argument 'explanation_type'\r\n```\r\n\r\nI am not sure whether this issue is caused by PyG version, so I try to install PyG both from `wheels` and `source`. However, none of them work. Can you help me with this? Thank you!\r\n\r\n```\r\n# from source\r\n!pip install git+https://github.com/pyg-team/pyg-lib.git\r\n!pip install torch-scatter \r\n!pip install torch-sparse \r\n!pip install torch-geometric \r\n\r\n# from wheels\r\npip install pyg-lib torch-scatter torch-sparse -f https://data.pyg.org/whl/torch-1.13.1+cu116.html\r\npip install torch-geometric\r\n```\r\n\r\n### Environment\r\n\r\n* PyG version:\r\n* PyTorch version: 1.13.1\r\n* OS:\r\n* Python version: \r\n* CUDA/cuDNN version: 116\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): Google Colab\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6579/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6570", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6570/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6570/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6570/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6570", "id": 1567823320, "node_id": "PR_kwDOBlHMec5JGRHs", "number": 6570, "title": "Fix `pyg-nightly` workflow", "user": {"login": "jreniecki", "id": 13555312, "node_id": "MDQ6VXNlcjEzNTU1MzEy", "avatar_url": "https://avatars.githubusercontent.com/u/13555312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreniecki", "html_url": "https://github.com/jreniecki", "followers_url": "https://api.github.com/users/jreniecki/followers", "following_url": "https://api.github.com/users/jreniecki/following{/other_user}", "gists_url": "https://api.github.com/users/jreniecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreniecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreniecki/subscriptions", "organizations_url": "https://api.github.com/users/jreniecki/orgs", "repos_url": "https://api.github.com/users/jreniecki/repos", "events_url": "https://api.github.com/users/jreniecki/events{/privacy}", "received_events_url": "https://api.github.com/users/jreniecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 1267385339, "node_id": "MDU6TGFiZWwxMjY3Mzg1MzM5", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/installation", "name": "installation", "color": "bfdadc", "default": false, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "jreniecki", "id": 13555312, "node_id": "MDQ6VXNlcjEzNTU1MzEy", "avatar_url": "https://avatars.githubusercontent.com/u/13555312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreniecki", "html_url": "https://github.com/jreniecki", "followers_url": "https://api.github.com/users/jreniecki/followers", "following_url": "https://api.github.com/users/jreniecki/following{/other_user}", "gists_url": "https://api.github.com/users/jreniecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreniecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreniecki/subscriptions", "organizations_url": "https://api.github.com/users/jreniecki/orgs", "repos_url": "https://api.github.com/users/jreniecki/repos", "events_url": "https://api.github.com/users/jreniecki/events{/privacy}", "received_events_url": "https://api.github.com/users/jreniecki/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jreniecki", "id": 13555312, "node_id": "MDQ6VXNlcjEzNTU1MzEy", "avatar_url": "https://avatars.githubusercontent.com/u/13555312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreniecki", "html_url": "https://github.com/jreniecki", "followers_url": "https://api.github.com/users/jreniecki/followers", "following_url": "https://api.github.com/users/jreniecki/following{/other_user}", "gists_url": "https://api.github.com/users/jreniecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreniecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreniecki/subscriptions", "organizations_url": "https://api.github.com/users/jreniecki/orgs", "repos_url": "https://api.github.com/users/jreniecki/repos", "events_url": "https://api.github.com/users/jreniecki/events{/privacy}", "received_events_url": "https://api.github.com/users/jreniecki/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-02T11:01:44Z", "updated_at": "2023-02-02T14:24:10Z", "closed_at": "2023-02-02T14:24:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6570", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6570", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6570.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6570.patch", "merged_at": "2023-02-02T14:24:01Z"}, "body": "The following error shows up when trying to install pyg-nightly:\r\n`Requested pyg-nightly==2.3.0.dev20230130  has inconsistent version: expected '2.3.0.dev20230130', but metadata has '2.3.0'`\r\n\r\nThis change should solve the problem.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6570/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6567", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6567/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6567/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6567/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6567", "id": 1567661350, "node_id": "I_kwDOBlHMec5dcJ0m", "number": 6567, "title": "ImportError: cannot import name 'VirtualNode'", "user": {"login": "mgao97", "id": 90015105, "node_id": "MDQ6VXNlcjkwMDE1MTA1", "avatar_url": "https://avatars.githubusercontent.com/u/90015105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgao97", "html_url": "https://github.com/mgao97", "followers_url": "https://api.github.com/users/mgao97/followers", "following_url": "https://api.github.com/users/mgao97/following{/other_user}", "gists_url": "https://api.github.com/users/mgao97/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgao97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgao97/subscriptions", "organizations_url": "https://api.github.com/users/mgao97/orgs", "repos_url": "https://api.github.com/users/mgao97/repos", "events_url": "https://api.github.com/users/mgao97/events{/privacy}", "received_events_url": "https://api.github.com/users/mgao97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-02-02T09:31:06Z", "updated_at": "2023-02-20T12:19:26Z", "closed_at": "2023-02-20T12:19:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHey! I have encountered the following question when I tried to add a virtual node to a pyg graph data:\r\n`from torch_geometric.transforms import VirtualNode \r\nImportError: cannot import name 'VirtualNode'`\n\n### Environment\n\n* PyG version: 2.0.3\r\n* PyTorch version: 1.10.0\r\n* OS: Linux\r\n* Python version: 3.8\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6567/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6564", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6564/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6564/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6564/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6564", "id": 1566635768, "node_id": "PR_kwDOBlHMec5JCRjE", "number": 6564, "title": "Fix `index_sort` handling", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}, {"id": 4601575641, "node_id": "LA_kwDOBlHMec8AAAABEkZ42Q", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/utils", "name": "utils", "color": "DBC48C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-02-01T18:56:26Z", "updated_at": "2023-02-01T19:00:51Z", "closed_at": "2023-02-01T19:00:50Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6564", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6564", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6564.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6564.patch", "merged_at": "2023-02-01T19:00:50Z"}, "body": "Enable TorchScript support", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6564/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6563", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6563/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6563/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6563/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6563", "id": 1566390655, "node_id": "I_kwDOBlHMec5dXTl_", "number": 6563, "title": "E   RuntimeError: No such operator pyg::index_sort", "user": {"login": "LukeLIN-web", "id": 60426396, "node_id": "MDQ6VXNlcjYwNDI2Mzk2", "avatar_url": "https://avatars.githubusercontent.com/u/60426396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukeLIN-web", "html_url": "https://github.com/LukeLIN-web", "followers_url": "https://api.github.com/users/LukeLIN-web/followers", "following_url": "https://api.github.com/users/LukeLIN-web/following{/other_user}", "gists_url": "https://api.github.com/users/LukeLIN-web/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukeLIN-web/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukeLIN-web/subscriptions", "organizations_url": "https://api.github.com/users/LukeLIN-web/orgs", "repos_url": "https://api.github.com/users/LukeLIN-web/repos", "events_url": "https://api.github.com/users/LukeLIN-web/events{/privacy}", "received_events_url": "https://api.github.com/users/LukeLIN-web/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2023-02-01T16:07:08Z", "updated_at": "2023-02-02T07:34:59Z", "closed_at": "2023-02-01T18:57:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\n\r\n```\r\npytest test_profile_utils.py \r\nImportError while loading conftest '/root/share/pytorch_geometric/test/conftest.py'.\r\n../conftest.py:7: in <module>\r\n    from torch_geometric.data import Dataset\r\n../../torch_geometric/__init__.py:1: in <module>\r\n    import torch_geometric.utils\r\n../../torch_geometric/utils/__init__.py:2: in <module>\r\n    from .sort import index_sort\r\n../../torch_geometric/utils/sort.py:7: in <module>\r\n    WITH_INDEX_SORT = WITH_PYG_LIB and hasattr(torch.ops.pyg, 'index_sort')\r\n/opt/conda/lib/python3.8/site-packages/torch/_ops.py:167: in __getattr__\r\n    op = torch._C._jit_get_operation(qualified_op_name)\r\nE   RuntimeError: No such operator pyg::index_sort\r\n```\r\n\r\n### Environment\r\n\r\n```\r\nPyTorch version: 1.11.0\r\nIs debug build: False\r\nCUDA used to build PyTorch: 11.3\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Ubuntu 18.04.6 LTS (x86_64)\r\nGCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\r\nClang version: Could not collect\r\nCMake version: Could not collect\r\nLibc version: glibc-2.27\r\n\r\nPython version: 3.8.12 (default, Oct 12 2021, 13:49:34)  [GCC 7.5.0] (64-bit runtime)\r\nPython platform: Linux-4.15.0-167-generic-x86_64-with-glibc2.17\r\nIs CUDA available: True\r\nCUDA runtime version: 11.3.109\r\nCUDA_MODULE_LOADING set to: \r\nGPU models and configuration: \r\nGPU 0: Tesla V100-SXM2-16GB\r\nGPU 1: Tesla V100-SXM2-16GB\r\nGPU 2: Tesla V100-SXM2-16GB\r\n\r\nNvidia driver version: 515.65.01\r\ncuDNN version: \r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.8.2.0\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.23.5\r\n[pip3] pytorch-lightning==1.9.0\r\n[pip3] pytorch-memlab==0.2.4\r\n[pip3] torch==1.11.0\r\n[pip3] torch-geometric==2.3.0\r\n[pip3] torch-scatter==2.1.0\r\n[pip3] torch-sparse==0.6.16\r\n[pip3] torchelastic==0.2.2\r\n[pip3] torchmetrics==0.11.0\r\n[pip3] torchtext==0.12.0\r\n[pip3] torchvision==0.12.0\r\n[conda] blas                      1.0                         mkl  \r\n[conda] cudatoolkit               11.3.1               ha36c431_9    nvidia\r\n[conda] numpy                     1.23.5                   pypi_0    pypi\r\n[conda] pytorch                   1.11.0          py3.8_cuda11.3_cudnn8.2.0_0    pytorch\r\n[conda] pytorch-lightning         1.9.0                    pypi_0    pypi\r\n[conda] pytorch-memlab            0.2.4                    pypi_0    pypi\r\n[conda] pytorch-mutex             1.0                        cuda    pytorch\r\n[conda] torch-geometric           2.3.0                     dev_0    <develop>\r\n[conda] torch-scatter             2.1.0                    pypi_0    pypi\r\n[conda] torch-sparse              0.6.16                   pypi_0    pypi\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6563/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6562", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6562/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6562/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6562/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6562", "id": 1566150647, "node_id": "PR_kwDOBlHMec5JArJc", "number": 6562, "title": "Fix `reset_parameters` in `DimeNet`", "user": {"login": "jaypmorgan", "id": 4302288, "node_id": "MDQ6VXNlcjQzMDIyODg=", "avatar_url": "https://avatars.githubusercontent.com/u/4302288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaypmorgan", "html_url": "https://github.com/jaypmorgan", "followers_url": "https://api.github.com/users/jaypmorgan/followers", "following_url": "https://api.github.com/users/jaypmorgan/following{/other_user}", "gists_url": "https://api.github.com/users/jaypmorgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaypmorgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaypmorgan/subscriptions", "organizations_url": "https://api.github.com/users/jaypmorgan/orgs", "repos_url": "https://api.github.com/users/jaypmorgan/repos", "events_url": "https://api.github.com/users/jaypmorgan/events{/privacy}", "received_events_url": "https://api.github.com/users/jaypmorgan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "jaypmorgan", "id": 4302288, "node_id": "MDQ6VXNlcjQzMDIyODg=", "avatar_url": "https://avatars.githubusercontent.com/u/4302288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaypmorgan", "html_url": "https://github.com/jaypmorgan", "followers_url": "https://api.github.com/users/jaypmorgan/followers", "following_url": "https://api.github.com/users/jaypmorgan/following{/other_user}", "gists_url": "https://api.github.com/users/jaypmorgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaypmorgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaypmorgan/subscriptions", "organizations_url": "https://api.github.com/users/jaypmorgan/orgs", "repos_url": "https://api.github.com/users/jaypmorgan/repos", "events_url": "https://api.github.com/users/jaypmorgan/events{/privacy}", "received_events_url": "https://api.github.com/users/jaypmorgan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jaypmorgan", "id": 4302288, "node_id": "MDQ6VXNlcjQzMDIyODg=", "avatar_url": "https://avatars.githubusercontent.com/u/4302288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaypmorgan", "html_url": "https://github.com/jaypmorgan", "followers_url": "https://api.github.com/users/jaypmorgan/followers", "following_url": "https://api.github.com/users/jaypmorgan/following{/other_user}", "gists_url": "https://api.github.com/users/jaypmorgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaypmorgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaypmorgan/subscriptions", "organizations_url": "https://api.github.com/users/jaypmorgan/orgs", "repos_url": "https://api.github.com/users/jaypmorgan/repos", "events_url": "https://api.github.com/users/jaypmorgan/events{/privacy}", "received_events_url": "https://api.github.com/users/jaypmorgan/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-01T13:49:52Z", "updated_at": "2023-02-01T14:01:06Z", "closed_at": "2023-02-01T14:01:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6562", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6562", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6562.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6562.patch", "merged_at": "2023-02-01T14:01:05Z"}, "body": "I've fixed the duplicated for-loop by specifying the correct variable (see issue #6561).", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6562/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6561", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6561/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6561/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6561/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6561", "id": 1566145832, "node_id": "I_kwDOBlHMec5dWX0o", "number": 6561, "title": "Some layer parameters are not reset", "user": {"login": "jaypmorgan", "id": 4302288, "node_id": "MDQ6VXNlcjQzMDIyODg=", "avatar_url": "https://avatars.githubusercontent.com/u/4302288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaypmorgan", "html_url": "https://github.com/jaypmorgan", "followers_url": "https://api.github.com/users/jaypmorgan/followers", "following_url": "https://api.github.com/users/jaypmorgan/following{/other_user}", "gists_url": "https://api.github.com/users/jaypmorgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaypmorgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaypmorgan/subscriptions", "organizations_url": "https://api.github.com/users/jaypmorgan/orgs", "repos_url": "https://api.github.com/users/jaypmorgan/repos", "events_url": "https://api.github.com/users/jaypmorgan/events{/privacy}", "received_events_url": "https://api.github.com/users/jaypmorgan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-02-01T13:46:32Z", "updated_at": "2023-02-01T14:15:50Z", "closed_at": "2023-02-01T14:15:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nFor the file: `torch_geometric/nn/models/dimenet.py`\r\n\r\nIn `reset_parameters()` of `InteractionPPBlock`, `self.layers_before_skip` is reset twice, and `self.layers_after_skip` is not reset at all.\r\n\r\nThis is the current version:\r\n\r\n```python\r\nfor res_layer in self.layers_before_skip:\r\n            res_layer.reset_parameters()\r\n...\r\nfor res_layer in self.layers_before_skip:\r\n    res_layer.reset_parameters()\r\n```\r\n\r\nBut I think it should be:\r\n\r\n```python\r\nfor res_layer in self.layers_before_skip:\r\n            res_layer.reset_parameters()\r\n...\r\nfor res_layer in self.layers_after_skip:\r\n    res_layer.reset_parameters()\r\n```\r\n\r\nThis second (fixed) version is consistent with the rest of the classes in this file.\n\n### Environment\n\n* PyG version:\r\n* PyTorch version:\r\n* OS:\r\n* Python version:\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6561/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6560", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6560/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6560/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6560/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6560", "id": 1565898393, "node_id": "PR_kwDOBlHMec5I_z5s", "number": 6560, "title": "`EquilibriumAggregation`: Padding tensor was not created on correct device", "user": {"login": "HelgeS", "id": 1895238, "node_id": "MDQ6VXNlcjE4OTUyMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1895238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HelgeS", "html_url": "https://github.com/HelgeS", "followers_url": "https://api.github.com/users/HelgeS/followers", "following_url": "https://api.github.com/users/HelgeS/following{/other_user}", "gists_url": "https://api.github.com/users/HelgeS/gists{/gist_id}", "starred_url": "https://api.github.com/users/HelgeS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HelgeS/subscriptions", "organizations_url": "https://api.github.com/users/HelgeS/orgs", "repos_url": "https://api.github.com/users/HelgeS/repos", "events_url": "https://api.github.com/users/HelgeS/events{/privacy}", "received_events_url": "https://api.github.com/users/HelgeS/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "HelgeS", "id": 1895238, "node_id": "MDQ6VXNlcjE4OTUyMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1895238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HelgeS", "html_url": "https://github.com/HelgeS", "followers_url": "https://api.github.com/users/HelgeS/followers", "following_url": "https://api.github.com/users/HelgeS/following{/other_user}", "gists_url": "https://api.github.com/users/HelgeS/gists{/gist_id}", "starred_url": "https://api.github.com/users/HelgeS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HelgeS/subscriptions", "organizations_url": "https://api.github.com/users/HelgeS/orgs", "repos_url": "https://api.github.com/users/HelgeS/repos", "events_url": "https://api.github.com/users/HelgeS/events{/privacy}", "received_events_url": "https://api.github.com/users/HelgeS/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "HelgeS", "id": 1895238, "node_id": "MDQ6VXNlcjE4OTUyMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1895238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HelgeS", "html_url": "https://github.com/HelgeS", "followers_url": "https://api.github.com/users/HelgeS/followers", "following_url": "https://api.github.com/users/HelgeS/following{/other_user}", "gists_url": "https://api.github.com/users/HelgeS/gists{/gist_id}", "starred_url": "https://api.github.com/users/HelgeS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HelgeS/subscriptions", "organizations_url": "https://api.github.com/users/HelgeS/orgs", "repos_url": "https://api.github.com/users/HelgeS/repos", "events_url": "https://api.github.com/users/HelgeS/events{/privacy}", "received_events_url": "https://api.github.com/users/HelgeS/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-01T11:00:32Z", "updated_at": "2023-02-01T12:51:40Z", "closed_at": "2023-02-01T12:51:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6560", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6560", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6560.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6560.patch", "merged_at": "2023-02-01T12:51:40Z"}, "body": "In the `forward` method of the equilibrium aggregation, if `dim_size > index_size` a new tensor is created for padding, but without specification of the target device.\r\nI added the device to be the same as `self.lamb.device` like it is done in the `init_output` method.\r\n\r\nExample to reproduce:\r\n\r\n```\r\nimport torch\r\nfrom torch_geometric.nn.aggr import EquilibriumAggregation\r\n\r\nprint(\"Has cuda:\", torch.cuda.is_available())\r\n\r\nx = torch.rand(8, 4)\r\nindex = torch.tensor([0, 0, 0, 0, 2, 2, 2, 2])\r\n\r\naggr = EquilibriumAggregation(4, 4, [8])\r\n\r\nprint(\r\n    \"This works\",\r\n    aggr(x.to(torch.device(\"cpu\")), index=index, dim_size=3).shape\r\n    == torch.Size([3, 4]),\r\n)\r\nprint(\r\n    \"This crashes\",\r\n    aggr(x.to(torch.device(\"cuda\")), index=index, dim_size=3).shape\r\n    == torch.Size([3, 4]),\r\n)\r\n```\r\n\r\nError message:\r\n```\r\ntorch_geometric/nn/aggr/equilibrium.py\", line 39, in forward\r\n    inp = torch.cat([x, y[index]], dim=1)\r\nRuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument tensors in method wrapper_cat)\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6560/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6557", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6557/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6557/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6557/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6557", "id": 1565094956, "node_id": "PR_kwDOBlHMec5I9G7H", "number": 6557, "title": "Update pycodestyle link in `CONTRIBUTING.md`", "user": {"login": "JinL0", "id": 29108275, "node_id": "MDQ6VXNlcjI5MTA4Mjc1", "avatar_url": "https://avatars.githubusercontent.com/u/29108275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JinL0", "html_url": "https://github.com/JinL0", "followers_url": "https://api.github.com/users/JinL0/followers", "following_url": "https://api.github.com/users/JinL0/following{/other_user}", "gists_url": "https://api.github.com/users/JinL0/gists{/gist_id}", "starred_url": "https://api.github.com/users/JinL0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JinL0/subscriptions", "organizations_url": "https://api.github.com/users/JinL0/orgs", "repos_url": "https://api.github.com/users/JinL0/repos", "events_url": "https://api.github.com/users/JinL0/events{/privacy}", "received_events_url": "https://api.github.com/users/JinL0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "JinL0", "id": 29108275, "node_id": "MDQ6VXNlcjI5MTA4Mjc1", "avatar_url": "https://avatars.githubusercontent.com/u/29108275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JinL0", "html_url": "https://github.com/JinL0", "followers_url": "https://api.github.com/users/JinL0/followers", "following_url": "https://api.github.com/users/JinL0/following{/other_user}", "gists_url": "https://api.github.com/users/JinL0/gists{/gist_id}", "starred_url": "https://api.github.com/users/JinL0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JinL0/subscriptions", "organizations_url": "https://api.github.com/users/JinL0/orgs", "repos_url": "https://api.github.com/users/JinL0/repos", "events_url": "https://api.github.com/users/JinL0/events{/privacy}", "received_events_url": "https://api.github.com/users/JinL0/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JinL0", "id": 29108275, "node_id": "MDQ6VXNlcjI5MTA4Mjc1", "avatar_url": "https://avatars.githubusercontent.com/u/29108275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JinL0", "html_url": "https://github.com/JinL0", "followers_url": "https://api.github.com/users/JinL0/followers", "following_url": "https://api.github.com/users/JinL0/following{/other_user}", "gists_url": "https://api.github.com/users/JinL0/gists{/gist_id}", "starred_url": "https://api.github.com/users/JinL0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JinL0/subscriptions", "organizations_url": "https://api.github.com/users/JinL0/orgs", "repos_url": "https://api.github.com/users/JinL0/repos", "events_url": "https://api.github.com/users/JinL0/events{/privacy}", "received_events_url": "https://api.github.com/users/JinL0/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-01-31T22:32:05Z", "updated_at": "2023-02-01T12:40:54Z", "closed_at": "2023-02-01T12:40:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6557", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6557", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6557.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6557.patch", "merged_at": "2023-02-01T12:40:53Z"}, "body": "Hi pyg team, \r\nI am a student from CS 224W and noticed there is a typo error in `CONTRIBUTING.md`. Not sure if that was intended, if it was, just ignore my PR.\r\nThe new readme link https://github.com/JinL0/pytorch_geometric/blob/jinl/fix_contribution_readme/CONTRIBUTING.md\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6557/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6550", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6550/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6550/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6550/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6550", "id": 1563641818, "node_id": "PR_kwDOBlHMec5I4P6D", "number": 6550, "title": "Fix `bipartite_sage_unsup` example ", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017636777, "node_id": "LA_kwDOBlHMec7veEWp", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/example", "name": "example", "color": "27D88A", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-01-31T04:40:38Z", "updated_at": "2023-01-31T05:46:07Z", "closed_at": "2023-01-31T05:46:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6550", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6550", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6550.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6550.patch", "merged_at": "2023-01-31T05:46:06Z"}, "body": "Fixes #6549 ", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6550/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6549", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6549/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6549/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6549/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6549", "id": 1563493987, "node_id": "I_kwDOBlHMec5dMQZj", "number": 6549, "title": "Classification metrics can't handle a mix of binary and continuous targets", "user": {"login": "tirzak", "id": 47579342, "node_id": "MDQ6VXNlcjQ3NTc5MzQy", "avatar_url": "https://avatars.githubusercontent.com/u/47579342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirzak", "html_url": "https://github.com/tirzak", "followers_url": "https://api.github.com/users/tirzak/followers", "following_url": "https://api.github.com/users/tirzak/following{/other_user}", "gists_url": "https://api.github.com/users/tirzak/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirzak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirzak/subscriptions", "organizations_url": "https://api.github.com/users/tirzak/orgs", "repos_url": "https://api.github.com/users/tirzak/repos", "events_url": "https://api.github.com/users/tirzak/events{/privacy}", "received_events_url": "https://api.github.com/users/tirzak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-01-31T02:07:12Z", "updated_at": "2023-01-31T05:46:07Z", "closed_at": "2023-01-31T05:46:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI was trying to run the [pytorch_geometric](https://github.com/pyg-team/pytorch_geometric)/[examples](https://github.com/pyg-team/pytorch_geometric/tree/master/examples)/[hetero](https://github.com/pyg-team/pytorch_geometric/tree/master/examples/hetero)/bipartite_sage_unsup.py . I received the following error in the training loop. The error happened after the test() function was called\r\n\r\n## Error\r\n```\r\nValueError                                Traceback (most recent call last)\r\n[<ipython-input-7-449d394a8262>](https://localhost:8080/#) in <module>\r\n     54 for epoch in range(1, 21):\r\n     55     loss = train()\r\n---> 56     val_acc, val_prec, val_rec, val_f1 = test(val_loader)\r\n     57     test_acc, test_prec, test_rec, test_f1 = test(test_loader)\r\n     58 \r\n\r\n3 frames\r\n[/usr/local/lib/python3.8/dist-packages/sklearn/metrics/_classification.py](https://localhost:8080/#) in _check_targets(y_true, y_pred)\r\n     91 \r\n     92     if len(y_type) > 1:\r\n---> 93         raise ValueError(\r\n     94             \"Classification metrics can't handle a mix of {0} and {1} targets\".format(\r\n     95                 type_true, type_pred\r\n\r\nValueError: Classification metrics can't handle a mix of binary and continuous targets\r\n```\r\n## Code modifications\r\n```\r\n@torch.no_grad()\r\ndef test(loader):\r\n    model.eval()\r\n\r\n    preds, targets = [], []\r\n    for batch in tqdm.tqdm(loader):\r\n        batch = batch.to(device)\r\n\r\n        pred = model(\r\n            batch.x_dict,\r\n            batch.edge_index_dict,\r\n            batch['user', 'item'].edge_label_index,\r\n        ).sigmoid().view(-1).cpu()\r\n        target = batch['user', 'item'].edge_label.long().cpu()\r\n\r\n        preds.append(pred)\r\n        targets.append(target) #I assumed it was a typo in the original example\r\n\r\n    pred = torch.cat(preds, dim=0).numpy()\r\n    target = torch.cat(targets, dim=0).numpy() #I assumed it was a typo in the original example\r\n\r\n    acc = accuracy_score(target, pred)\r\n    prec = precision_score(target, pred)\r\n    rec = recall_score(target, pred)\r\n    f1 = f1_score(target, pred)\r\n\r\n    return acc, prec, rec, f1\r\n```\n\n### Environment\n\n* PyG version: \r\n* PyTorch version: 1.13.0\r\n* OS: Linux(Colab)\r\n* Python version: 3.8.10\r\n* CUDA/cuDNN version: 11.6\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): \r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6549/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6531", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6531/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6531/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6531/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6531", "id": 1559772681, "node_id": "PR_kwDOBlHMec5IrXEM", "number": 6531, "title": "Fix `pyg-nightly` metadata", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 1267385339, "node_id": "MDU6TGFiZWwxMjY3Mzg1MzM5", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/installation", "name": "installation", "color": "bfdadc", "default": false, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-01-27T13:28:09Z", "updated_at": "2023-01-27T13:35:59Z", "closed_at": "2023-01-27T13:35:58Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6531", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6531", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6531.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6531.patch", "merged_at": "2023-01-27T13:35:58Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6531/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6529", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6529/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6529/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6529/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6529", "id": 1559722243, "node_id": "PR_kwDOBlHMec5IrL-U", "number": 6529, "title": "Clear `_cached_attr` on modification in `Storage`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-01-27T12:52:35Z", "updated_at": "2023-01-27T13:05:37Z", "closed_at": "2023-01-27T13:05:36Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6529", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6529", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6529.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6529.patch", "merged_at": "2023-01-27T13:05:36Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6529/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6527", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6527/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6527/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6527/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6527", "id": 1559431909, "node_id": "PR_kwDOBlHMec5IqMvf", "number": 6527, "title": "Backward compatibility for `_cached_attr`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-01-27T09:25:16Z", "updated_at": "2023-01-27T09:29:39Z", "closed_at": "2023-01-27T09:29:38Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6527", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6527", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6527.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6527.patch", "merged_at": "2023-01-27T09:29:38Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6527/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6525", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6525/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6525/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6525/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6525", "id": 1558948202, "node_id": "I_kwDOBlHMec5c66lq", "number": 6525, "title": "Can't construct custom dataset: object has no attribute 'processed_paths'", "user": {"login": "manavkulshrestha", "id": 22210338, "node_id": "MDQ6VXNlcjIyMjEwMzM4", "avatar_url": "https://avatars.githubusercontent.com/u/22210338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manavkulshrestha", "html_url": "https://github.com/manavkulshrestha", "followers_url": "https://api.github.com/users/manavkulshrestha/followers", "following_url": "https://api.github.com/users/manavkulshrestha/following{/other_user}", "gists_url": "https://api.github.com/users/manavkulshrestha/gists{/gist_id}", "starred_url": "https://api.github.com/users/manavkulshrestha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manavkulshrestha/subscriptions", "organizations_url": "https://api.github.com/users/manavkulshrestha/orgs", "repos_url": "https://api.github.com/users/manavkulshrestha/repos", "events_url": "https://api.github.com/users/manavkulshrestha/events{/privacy}", "received_events_url": "https://api.github.com/users/manavkulshrestha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-01-26T23:52:58Z", "updated_at": "2023-01-27T19:48:09Z", "closed_at": "2023-01-27T19:48:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Bug\r\nHello,\r\n\r\nI'm trying to create a custom dataset for my purposes using this guide: https://pytorch-geometric.readthedocs.io/en/latest/notes/create_dataset.html. My code for this is as follows:\r\n\r\n```\r\nfrom torch_geometric.data import Data, InMemoryDataset\r\n\r\nclass SubstructureNet(InMemoryDataset):\r\n    def __init__(self, root, transform=None, pre_transform=None, pre_filter=None, down_size=2000):\r\n        super().__init__(root, transform, pre_transform, pre_filter)\r\n        self.data, self.slices = torch.load(self.processed_paths[0])\r\n        self.root = root\r\n        self.down_size = down_size\r\n\r\n    @property\r\n    def raw_file_names(self):\r\n        return [f'{i}.csv' for i in range(1000)]\r\n\r\n    @property\r\n    def processed_file_names(self):\r\n        return [f'data-{self.down_size}.pt']\r\n\r\n    def download(self):\r\n        pass\r\n    \r\n    def process_filenames(self, root):\r\n        data_list = []\r\n        \r\n        for filename in os.listdir(root):\r\n            posy = np.loadtxt(root+'0.csv', delimiter=',')\r\n            \r\n            #filter table points\r\n            posy = posy[posy[:,-1] != 0]\r\n            # downsample to less points\r\n            posy = posy[np.random.choice(len(posy), replace=False, size=self.down_size)]\r\n            \r\n            pos = torch.from_numpy(posy[:,:3])\r\n            y = torch.from_numpy(posy[:,-1]).type(torch.long)\r\n            \r\n            data = Data(pos=pos, y=y)\r\n            data_list.append(data)\r\n            \r\n        return data_list\r\n\r\n    def process(self):\r\n        # Read data into huge `Data` list.\r\n        data_list = process_files(self.root)\r\n\r\n        if self.pre_filter is not None:\r\n            data_list = [data for data in data_list if self.pre_filter(data)]\r\n\r\n        if self.pre_transform is not None:\r\n            data_list = [self.pre_transform(data) for data in data_list]\r\n\r\n        data, slices = self.collate(data_list)\r\n        torch.save((data, slices), self.processed_paths[0])\r\n```\r\nMy path provided for initialization is '../data/SubstructureNet/' where that directory has form 'SubstructureNet/raw/[0-999].csv'. That is, 'SubstructureNet' has a directory called 'raw' which contains 1000 files named 0-999.csv.\r\n\r\nHowever, when I initialize this dataset, I get the following error:\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n/tmp/ipykernel_33690/31152218.py in <module>\r\n      3 pre_transform = T.NormalizeScale()\r\n      4 \r\n----> 5 dataset = SubstructureNet(path, transform=transform,\r\n      6                          pre_transform=pre_transform, down_size=2000)\r\n      7 \r\n\r\n/tmp/ipykernel_33690/3619967263.py in __init__(self, root, transform, pre_transform, pre_filter, down_size)\r\n      3 class SubstructureNet(InMemoryDataset):\r\n      4     def __init__(self, root, transform=None, pre_transform=None, pre_filter=None, down_size=2000):\r\n----> 5         super().__init__(root, transform, pre_transform, pre_filter)\r\n      6         self.data, self.slices = torch.load(self.processed_paths[0])\r\n      7         self.root = root\r\n\r\n~/anaconda3/envs/pn/lib/python3.8/site-packages/torch_geometric/data/in_memory_dataset.py in __init__(self, root, transform, pre_transform, pre_filter, log)\r\n     54         log: bool = True,\r\n     55     ):\r\n---> 56         super().__init__(root, transform, pre_transform, pre_filter, log)\r\n     57         self._data = None\r\n     58         self.slices = None\r\n\r\n~/anaconda3/envs/pn/lib/python3.8/site-packages/torch_geometric/data/dataset.py in __init__(self, root, transform, pre_transform, pre_filter, log)\r\n     92 \r\n     93         if self.process.__qualname__.split('.')[0] != 'Dataset':\r\n---> 94             self._process()\r\n     95 \r\n     96     def indices(self) -> Sequence:\r\n\r\n~/anaconda3/envs/pn/lib/python3.8/site-packages/torch_geometric/data/dataset.py in _process(self)\r\n    202                 \"delete '{self.processed_dir}' first\")\r\n    203 \r\n--> 204         if files_exist(self.processed_paths):  # pragma: no cover\r\n    205             return\r\n    206 \r\n\r\n~/anaconda3/envs/pn/lib/python3.8/site-packages/torch_geometric/data/in_memory_dataset.py in __getattr__(self, key)\r\n    152                 return Batch.from_data_list(data_list)[key]\r\n    153 \r\n--> 154         raise AttributeError(f\"'{self.__class__.__name__}' object has no \"\r\n    155                              f\"attribute '{key}'\")\r\n    156 \r\n\r\nAttributeError: 'SubstructureNet' object has no attribute 'processed_paths'\r\n```\r\nFrom what I can see, the Dataset class has a property for processed_paths which uses the processed_file_names property I define, so this should not be happening. Is my directory structure incorrect or maybe it has to do with my python version?\r\n\r\n### Environment\r\n\r\n* PyG version: 2.3.0\r\n* PyTorch version: 1.13.1\r\n* OS: Ubuntu 20.04\r\n* Python version: 3.8.16\r\n* CUDA/cuDNN version: 11.7\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): `!pip3 install git+https://github.com/pyg-team/pytorch_geometric.git`\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): scatter, sparse, cluster installed using pip3 with https://data.pyg.org/whl/torch-1.13.1+cu117.html\r\n\r\nThanks!", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6525/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6522", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6522/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6522/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6522/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6522", "id": 1558076334, "node_id": "PR_kwDOBlHMec5Ilm1S", "number": 6522, "title": "Index select fixes in `data.to_heterogeneous()`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4020368118, "node_id": "LA_kwDOBlHMec7vofL2", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/explain", "name": "explain", "color": "5319e7", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}, {"id": 4052698076, "node_id": "LA_kwDOBlHMec7xj0Pc", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/transform", "name": "transform", "color": "480283", "default": false, "description": ""}, {"id": 5006699863, "node_id": "LA_kwDOBlHMec8AAAABKmwtVw", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/contrib", "name": "contrib", "color": "09964B", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-01-26T12:36:45Z", "updated_at": "2023-01-26T12:59:25Z", "closed_at": "2023-01-26T12:59:24Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6522", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6522", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6522.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6522.patch", "merged_at": "2023-01-26T12:59:24Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6522/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6520", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6520/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6520/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6520/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6520", "id": 1557576077, "node_id": "PR_kwDOBlHMec5Ij87c", "number": 6520, "title": "Fix xlabel issue in `Explanation.visualize_feature_importance` for pandas>=1.5", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4020368118, "node_id": "LA_kwDOBlHMec7vofL2", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/explain", "name": "explain", "color": "5319e7", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-01-26T03:15:43Z", "updated_at": "2023-01-26T06:03:25Z", "closed_at": "2023-01-26T06:03:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6520", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6520", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6520.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6520.patch", "merged_at": "2023-01-26T06:03:24Z"}, "body": "This bug was caused by pandas and has been fixed in pandas>=1.5. It works fine with an older pandas version specifying `xlabel` or `ylabel`.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6520/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6516", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6516/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6516/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6516/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6516", "id": 1556976289, "node_id": "I_kwDOBlHMec5czZKh", "number": 6516, "title": "The saved feature importance in explainer, has the x-axis labelled wrongly as Feature Label", "user": {"login": "amirtha255", "id": 10433985, "node_id": "MDQ6VXNlcjEwNDMzOTg1", "avatar_url": "https://avatars.githubusercontent.com/u/10433985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amirtha255", "html_url": "https://github.com/amirtha255", "followers_url": "https://api.github.com/users/amirtha255/followers", "following_url": "https://api.github.com/users/amirtha255/following{/other_user}", "gists_url": "https://api.github.com/users/amirtha255/gists{/gist_id}", "starred_url": "https://api.github.com/users/amirtha255/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amirtha255/subscriptions", "organizations_url": "https://api.github.com/users/amirtha255/orgs", "repos_url": "https://api.github.com/users/amirtha255/repos", "events_url": "https://api.github.com/users/amirtha255/events{/privacy}", "received_events_url": "https://api.github.com/users/amirtha255/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-01-25T16:56:11Z", "updated_at": "2023-01-26T11:21:18Z", "closed_at": "2023-01-26T11:21:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\n![Screenshot 2023-01-25 115534](https://user-images.githubusercontent.com/10433985/214628187-2d221580-b79b-4e96-a206-a791a75f70c5.png)\r\n\r\nThe y-axis label should have been 'feature label'\n\n### Environment\n\n* PyG version:\r\n* PyTorch version:\r\n* OS:\r\n* Python version:\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6516/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6513", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6513/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6513/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6513/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6513", "id": 1556436198, "node_id": "I_kwDOBlHMec5cxVTm", "number": 6513, "title": "conda installation from official channels fails with undefined symbol (_ZN5torch3jit17parseSchemaOrNameERKSs)", "user": {"login": "mrceresa", "id": 524047, "node_id": "MDQ6VXNlcjUyNDA0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/524047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrceresa", "html_url": "https://github.com/mrceresa", "followers_url": "https://api.github.com/users/mrceresa/followers", "following_url": "https://api.github.com/users/mrceresa/following{/other_user}", "gists_url": "https://api.github.com/users/mrceresa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrceresa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrceresa/subscriptions", "organizations_url": "https://api.github.com/users/mrceresa/orgs", "repos_url": "https://api.github.com/users/mrceresa/repos", "events_url": "https://api.github.com/users/mrceresa/events{/privacy}", "received_events_url": "https://api.github.com/users/mrceresa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-01-25T10:51:08Z", "updated_at": "2023-01-26T17:09:46Z", "closed_at": "2023-01-26T17:09:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nDear all,\r\nI read all the similar threads that I could find, and they all say that this is due to an ABI incompability and to solve it by using default channles or by building from source.\r\nHowever, even after installing everything from official channel, I cannot get binary compatibility with pyg:\r\n\r\n```\r\n$ conda create --prefix /scratch/ceresma/envs/j2 python=3.10\r\n$ mamba install pytorch-gpu cudatoolkit -c pytorch\r\n$ mamba install pyg -c pyg\r\n$ python\r\nPython 3.10.8 | packaged by conda-forge | (main, Nov 22 2022, 08:26:04) [GCC 10.4.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from torch_scatter import scatter_mean\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/scratch/ceresma/envs/j2/lib/python3.10/site-packages/torch_scatter/__init__.py\", line 16, in <module>\r\n    torch.ops.load_library(spec.origin)\r\n  File \"/scratch/ceresma/envs/j2/lib/python3.10/site-packages/torch/_ops.py\", line 255, in load_library\r\n    ctypes.CDLL(path)\r\n  File \"/scratch/ceresma/envs/j2/lib/python3.10/ctypes/__init__.py\", line 374, in __init__\r\n    self._handle = _dlopen(self._name, mode)\r\nOSError: /scratch/ceresma/envs/j2/lib/python3.10/site-packages/torch_scatter/_version_cuda.so: undefined symbol: _ZN5torch3jit17parseSchemaOrNameERKSs\r\n```\n\n### Environment\n\n* PyG version: 2.1.0\r\n* PyTorch version: 1.12\r\n* OS: linux\r\n* Python version: 3.10\r\n* CUDA/cuDNN version: 11.6/8.4.1\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6513/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6510", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6510/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6510/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6510/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6510", "id": 1556133448, "node_id": "PR_kwDOBlHMec5IfIF2", "number": 6510, "title": "Fix fidelity metric and assigning edge masks as tensors", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4020368118, "node_id": "LA_kwDOBlHMec7vofL2", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/explain", "name": "explain", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-01-25T06:41:38Z", "updated_at": "2023-01-25T07:41:33Z", "closed_at": "2023-01-25T07:41:32Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6510", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6510", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6510.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6510.patch", "merged_at": "2023-01-25T07:41:32Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6510/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6509", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6509/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6509/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6509/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6509", "id": 1555671332, "node_id": "I_kwDOBlHMec5cuakk", "number": 6509, "title": "Batch not working with HeteroData", "user": {"login": "florpi", "id": 15879020, "node_id": "MDQ6VXNlcjE1ODc5MDIw", "avatar_url": "https://avatars.githubusercontent.com/u/15879020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florpi", "html_url": "https://github.com/florpi", "followers_url": "https://api.github.com/users/florpi/followers", "following_url": "https://api.github.com/users/florpi/following{/other_user}", "gists_url": "https://api.github.com/users/florpi/gists{/gist_id}", "starred_url": "https://api.github.com/users/florpi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florpi/subscriptions", "organizations_url": "https://api.github.com/users/florpi/orgs", "repos_url": "https://api.github.com/users/florpi/repos", "events_url": "https://api.github.com/users/florpi/events{/privacy}", "received_events_url": "https://api.github.com/users/florpi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-01-24T21:09:51Z", "updated_at": "2023-01-25T06:43:45Z", "closed_at": "2023-01-25T06:43:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "There seems to be an issue when using a DataLoader with a list of HeteroData objects. I've pinned it down to Batch not storing the batch argument as you can see in this code snippet\r\n\r\n ```python  import torch\r\nfrom torch_geometric.data.batch import Batch\r\nfrom torch_geometric.data import Data, HeteroData\r\n\r\n\r\ndef generate_data():\r\n    edge_index = torch.tensor([[0, 1, 1, 2], [1, 0, 2, 1]], dtype=torch.long)\r\n    return Data(\r\n        x=torch.rand((10, 3)),\r\n        edge_index=edge_index,\r\n    ) \r\n\r\n\r\ndef generate_hetero_data():\r\n    data = HeteroData()\r\n\r\n    data[\"paper\"].x = torch.randn(10, 2)\r\n    data[\"author\"].x = torch.randn(20, 3)\r\n    data[\"author\", \"writes\", \"paper\"].edge_index = torch.tensor(\r\n        [[0, 1, 1, 2], [1, 0, 2, 1]], dtype=torch.long\r\n    )\r\n    return data\r\n\r\n\r\nprint(Batch.from_data_list([generate_data(), generate_data()]).batch)\r\nprint(Batch.from_data_list([generate_hetero_data(), generate_hetero_data()]).batch)\r\n```\r\n\r\nThis is the output I get\r\n\r\n```\r\ntensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])\r\nTraceback (most recent call last):\r\n  File \"/n/home11/ccuestalazaro/GRACE/Notebooks/data/issue.py\", line 26, in <module>\r\n    print(Batch.from_data_list([generate_hetero_data(), generate_hetero_data()]).batch)\r\n  File \"/n/home11/ccuestalazaro/.conda/envs/geometric/lib/python3.10/site-packages/torch_geometric/data/hetero_data.py\", line 133, in __getattr__\r\n    raise AttributeError(f\"'{self.__class__.__name__}' has no \"\r\nAttributeError: 'HeteroDataBatch' has no attribute 'batch'\r\n```\r\n\r\nIs there a reason why HeteroDataBatch wouldn't have a batch attribute?\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6509/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6508", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6508/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6508/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6508/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6508", "id": 1555539694, "node_id": "I_kwDOBlHMec5ct6bu", "number": 6508, "title": "Fidelity calculation requires '_edge_mask' as parameter ", "user": {"login": "svwe", "id": 32566119, "node_id": "MDQ6VXNlcjMyNTY2MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/32566119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svwe", "html_url": "https://github.com/svwe", "followers_url": "https://api.github.com/users/svwe/followers", "following_url": "https://api.github.com/users/svwe/following{/other_user}", "gists_url": "https://api.github.com/users/svwe/gists{/gist_id}", "starred_url": "https://api.github.com/users/svwe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svwe/subscriptions", "organizations_url": "https://api.github.com/users/svwe/orgs", "repos_url": "https://api.github.com/users/svwe/repos", "events_url": "https://api.github.com/users/svwe/events{/privacy}", "received_events_url": "https://api.github.com/users/svwe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-01-24T19:21:54Z", "updated_at": "2023-01-25T07:41:33Z", "closed_at": "2023-01-25T07:41:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nHi there,\r\n\r\nI tried to calculate fidelity for the GNNExplainer example (https://github.com/pyg-team/pytorch_geometric/blob/master/examples/gnn_explainer.py). In doing that, I got the following error:\r\n\r\nraise TypeError(\"cannot assign '{}' as parameter '{}' \"\r\nTypeError: cannot assign 'torch.FloatTensor' as parameter '_edge_mask' (torch.nn.Parameter or None expected)\r\n\r\nCode:\r\n```python\r\nimport os.path as osp\r\n\r\nimport torch\r\nimport torch.nn.functional as F\r\n\r\nfrom torch_geometric.datasets import Planetoid\r\nfrom torch_geometric.explain import Explainer, GNNExplainer, metric\r\nfrom torch_geometric.nn import GCNConv\r\n\r\ndataset = 'Cora'\r\npath = osp.join(osp.dirname(osp.realpath(__file__)), '..', 'data', 'Planetoid')\r\ndataset = Planetoid(path, dataset)\r\ndata = dataset[0]\r\n\r\n\r\nclass Net(torch.nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.conv1 = GCNConv(dataset.num_features, 16)\r\n        self.conv2 = GCNConv(16, dataset.num_classes)\r\n\r\n    def forward(self, x, edge_index):\r\n        x = F.relu(self.conv1(x, edge_index))\r\n        x = F.dropout(x, training=self.training)\r\n        x = self.conv2(x, edge_index)\r\n        return F.log_softmax(x, dim=1)\r\n\r\n\r\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\r\nmodel = Net().to(device)\r\ndata = data.to(device)\r\noptimizer = torch.optim.Adam(model.parameters(), lr=0.01, weight_decay=5e-4)\r\n\r\nfor epoch in range(1, 10):\r\n    model.train()\r\n    optimizer.zero_grad()\r\n    out = model(data.x, data.edge_index)\r\n    loss = F.nll_loss(out[data.train_mask], data.y[data.train_mask])\r\n    loss.backward()\r\n    optimizer.step()\r\n\r\nexplainer = Explainer(\r\n    model=model,\r\n    algorithm=GNNExplainer(epochs=100),\r\n    explanation_type='model',\r\n    node_mask_type='attributes',\r\n    edge_mask_type='object',\r\n    model_config=dict(\r\n        mode='multiclass_classification',\r\n        task_level='node',\r\n        return_type='log_probs',\r\n    ),\r\n)\r\nnode_index = 10\r\nexplanation = explainer(data.x, data.edge_index, index=node_index)\r\nprint(f'Generated explanations in {explanation.available_explanations}')\r\n\r\nprint(metric.fidelity(explainer, explanation))\r\n```\r\n\r\n### Environment\r\n\r\n* PyG version:\r\n* PyTorch version:\r\n* OS:\r\n* Python version:\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6508/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6506", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6506/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6506/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6506/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6506", "id": 1555221115, "node_id": "I_kwDOBlHMec5cssp7", "number": 6506, "title": "InMemoryDataset.collate depends on the order of the data", "user": {"login": "GianlucaDeStefano", "id": 36605283, "node_id": "MDQ6VXNlcjM2NjA1Mjgz", "avatar_url": "https://avatars.githubusercontent.com/u/36605283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GianlucaDeStefano", "html_url": "https://github.com/GianlucaDeStefano", "followers_url": "https://api.github.com/users/GianlucaDeStefano/followers", "following_url": "https://api.github.com/users/GianlucaDeStefano/following{/other_user}", "gists_url": "https://api.github.com/users/GianlucaDeStefano/gists{/gist_id}", "starred_url": "https://api.github.com/users/GianlucaDeStefano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GianlucaDeStefano/subscriptions", "organizations_url": "https://api.github.com/users/GianlucaDeStefano/orgs", "repos_url": "https://api.github.com/users/GianlucaDeStefano/repos", "events_url": "https://api.github.com/users/GianlucaDeStefano/events{/privacy}", "received_events_url": "https://api.github.com/users/GianlucaDeStefano/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-01-24T15:45:42Z", "updated_at": "2023-01-25T07:52:04Z", "closed_at": "2023-01-25T07:52:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nHi all, I just noticed a behavior that I believe is a bug. \r\nI have multiple HeteroData objects, among which some miss a particular edge type. \r\nBy collating them all together with the InMemoryDataset.collate function I obtain a graph that presents or not this edge type depending if this edge was present in the first HeteroData in the list. \r\n\r\nFor example, executing:\r\n```\r\nimport torch\r\nfrom torch_geometric.data import HeteroData, InMemoryDataset\r\n\r\ndef get_heterodata():\r\n\r\n    h = HeteroData()\r\n\r\n    h['node_1'] = torch.arange(10)\r\n    h['node_2'] = torch.arange(10)\r\n\r\n    h['node_1', 'edge_1', 'node_2'].edge_index = torch.stack(\r\n        (torch.randint(0, 9, (5,)), torch.randint(0, 9, (5,))), dim=1)\r\n    h['node_1', 'edge_2', 'node_2'].edge_index = torch.stack(\r\n        (torch.randint(0, 9, (5,)), torch.randint(0, 9, (5,))), dim=1)\r\n\r\n    return h\r\n\r\nh1 = get_heterodata()\r\nh2 = get_heterodata()\r\n\r\ndel h2['node_1', 'edge_1', 'node_2']\r\n\r\nres1 = InMemoryDataset.collate([h1,h2])\r\nres2 = InMemoryDataset.collate([h2,h1])\r\n\r\nprint(\"Res1:\")\r\nprint(res1)\r\n\r\nprint(\"Res2:\")\r\nprint(res2)\r\n```\r\n\r\nReturns: \r\n\r\n```\r\nRes1:\r\n(HeteroData(\r\n  node_1=[20],\r\n  node_2=[20],\r\n  (node_1, edge_1, node_2)={ edge_index=[5, 2] },\r\n  (node_1, edge_2, node_2)={ edge_index=[5, 4] }\r\n), defaultdict(<class 'dict'>, {'node_1': tensor([ 0, 10, 20]), 'node_2': tensor([ 0, 10, 20]), ('node_1', 'edge_1', 'node_2'): {'edge_index': tensor([0, 2])}, ('node_1', 'edge_2', 'node_2'): {'edge_index': tensor([0, 2, 4])}}))\r\nRes2:\r\n(HeteroData(\r\n  node_1=[20],\r\n  node_2=[20],\r\n  (node_1, edge_2, node_2)={ edge_index=[5, 4] }\r\n), defaultdict(<class 'dict'>, {'node_1': tensor([ 0, 10, 20]), 'node_2': tensor([ 0, 10, 20]), ('node_1', 'edge_2', 'node_2'): {'edge_index': tensor([0, 2, 4])}}))\r\n```\r\n\r\nAs you can see, res1 contains the edge 'edge_1'  while res2 doesn't, even if the data fed into collate is exactly the same.\r\nShould the order of the data objects matter in the final result of the collate function?\r\n\r\n\r\n\r\n\r\n### Environment\r\n\r\n* PyG version: b78a67ea13a1096ba20071957be5acb9b790f81d (installed from source)\r\n* PyTorch version: 1.13.1\r\n* OS: IOS Ventura 13.1\r\n* Python version: 3.9.6\r\n* CUDA/cuDNN version: \\\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): 2.1.0\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6506/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6502", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6502/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6502/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6502/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6502", "id": 1554617054, "node_id": "I_kwDOBlHMec5cqZLe", "number": 6502, "title": "Data.update() fails with 'TypeError: 'list' object is not callable'", "user": {"login": "j-mesnil", "id": 21977965, "node_id": "MDQ6VXNlcjIxOTc3OTY1", "avatar_url": "https://avatars.githubusercontent.com/u/21977965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j-mesnil", "html_url": "https://github.com/j-mesnil", "followers_url": "https://api.github.com/users/j-mesnil/followers", "following_url": "https://api.github.com/users/j-mesnil/following{/other_user}", "gists_url": "https://api.github.com/users/j-mesnil/gists{/gist_id}", "starred_url": "https://api.github.com/users/j-mesnil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j-mesnil/subscriptions", "organizations_url": "https://api.github.com/users/j-mesnil/orgs", "repos_url": "https://api.github.com/users/j-mesnil/repos", "events_url": "https://api.github.com/users/j-mesnil/events{/privacy}", "received_events_url": "https://api.github.com/users/j-mesnil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-01-24T09:26:27Z", "updated_at": "2023-01-24T13:13:43Z", "closed_at": "2023-01-24T13:13:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nThe [data.Data.update()](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.data.Data.html#torch_geometric.data.Data.update) method fails in the following minimal example.\r\n\r\n```python\r\nimport torch\r\nfrom torch_geometric.data import Data\r\n\r\nx1 = torch.Tensor([[1.0, 0.0]])\r\nx2 = torch.Tensor([[0.0, 1.0]])\r\nd1 = Data(x=x1)\r\nd2 = Data(x=x2)\r\nd2.update(d1)\r\n\r\n```\r\n\r\nThe following exception is thrown:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"(/path/to/minimal_example.py)\", line 8, in <module>\r\n    d2.update(d1)\r\n  File \"/usr/lib/python3.8/_collections_abc.py\", line 834, in update\r\n    for key in other.keys():\r\nTypeError: 'list' object is not callable\r\n```\r\n\r\nThe `update` method in `_collections_abc.py` will run\r\n```python\r\nelif hasattr(other, \"keys\"):\r\n    for key in other.keys():\r\n        self[key] = other[key]\r\n```\r\nThe `Data` class from PyG has a list of keys `keys`, so the call to `other.keys()` fails here.\n\n### Environment\n\n* PyG version: 2.2.0\r\n* PyTorch version: 1.12.1+cu113\r\n* OS: Linux\r\n* Python version: 3.8\r\n* CUDA/cuDNN version: 11.1\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): `pip`\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6502/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6500", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6500/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6500/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6500/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6500", "id": 1554312739, "node_id": "I_kwDOBlHMec5cpO4j", "number": 6500, "title": "Training the network gives an edge_index error", "user": {"login": "Aster77", "id": 123436560, "node_id": "U_kgDOB1t-EA", "avatar_url": "https://avatars.githubusercontent.com/u/123436560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aster77", "html_url": "https://github.com/Aster77", "followers_url": "https://api.github.com/users/Aster77/followers", "following_url": "https://api.github.com/users/Aster77/following{/other_user}", "gists_url": "https://api.github.com/users/Aster77/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aster77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aster77/subscriptions", "organizations_url": "https://api.github.com/users/Aster77/orgs", "repos_url": "https://api.github.com/users/Aster77/repos", "events_url": "https://api.github.com/users/Aster77/events{/privacy}", "received_events_url": "https://api.github.com/users/Aster77/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2023-01-24T04:46:26Z", "updated_at": "2023-03-02T10:44:14Z", "closed_at": "2023-03-01T14:14:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Trying to Train a GCN network on Custom Dataset gives an edge_index error suggesting that it isnt pointing to valid indices\r\n\r\nI have been trying to use Pyg on my Custom Dataset and have used a simple pytorch dataloader to load Data objects(which contains a single graph for each data object). When I try to train the network, after a couple of batches I get the error\r\n```\r\n\r\n\r\n\r\nclass GCN(torch.nn.Module):\r\n    def __init__(self, in_channels, hidden_channels, out_channels):\r\n        super().__init__()\r\n        self.conv1 = GCNConv(in_channels, hidden_channels, cached=True\r\n                            )\r\n        self.conv2 = GCNConv(hidden_channels, out_channels, cached=True,)\r\n\r\n    def forward(self, x, edge_index, edge_weight=None):\r\n        x = F.dropout(x, p=0.5, training=self.training)\r\n        x = self.conv1(x, edge_index, edge_weight).relu()\r\n        x = F.dropout(x, p=0.5, training=self.training)\r\n        x = self.conv2(x, edge_index, edge_weight)\r\n        return x\r\nmodel = GCN(nfeat, nhid, nclass).to(device)\r\ntrain_loader = DataLoader(dataset,batch_size=1,shuffle=True)\r\ntest_loader = DataLoader(test_dataset, batch_size=4,shuffle=True)\r\ncriterion = CrossEntropyLoss()\r\noptimizer = torch.optim.Adam(model.parameters(), lr=0.01, weight_decay=5e-4)\r\n\r\n\r\ndef training(model,train_loader,test=True):\r\n    for epoch in range(num_epochs):\r\n\r\n        running_loss =0.0\r\n        step=0\r\n        for num, batch in enumerate((train_loader)):\r\n            model.train()\r\n            batch.to(device)\r\n            optimizer.zero_grad()\r\n            model.to(device)\r\n            print(torch.max(batch.edge_index))\r\n            print(torch.min(batch.edge_index))\r\n            print(len(batch.x))\r\n            pred=model(batch.x.float(),batch.edge_index)\r\n            loss=criterion(pred,batch.y)\r\n            loss.backward()\r\n            optimizer.step()\r\n            running_loss += loss.item()\r\n```\r\n\r\n```\r\nValueError: Encountered a CUDA error. Please ensure that all indices in 'edge_index' point to valid indices in the interval [0, 7) in your node feature matrix and try again.\r\n```\r\nEach graph contains unique num_nodes and edge_index. Ive made sure that the max index of edge_index is well within the num_nodes. Can anyone explain why this is an issue?\r\n\r\n### Environment\r\n\r\n* PyG version: 2.2.0\r\n* PyTorch version: 1.12.1\r\n* OS: WSL\r\n* Python version: 3.8\r\n\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6500/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6495", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6495/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6495/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6495/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6495", "id": 1553192745, "node_id": "PR_kwDOBlHMec5IVQGn", "number": 6495, "title": "Fix the use of removed numpy types", "user": {"login": "bwroblew", "id": 35349367, "node_id": "MDQ6VXNlcjM1MzQ5MzY3", "avatar_url": "https://avatars.githubusercontent.com/u/35349367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwroblew", "html_url": "https://github.com/bwroblew", "followers_url": "https://api.github.com/users/bwroblew/followers", "following_url": "https://api.github.com/users/bwroblew/following{/other_user}", "gists_url": "https://api.github.com/users/bwroblew/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwroblew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwroblew/subscriptions", "organizations_url": "https://api.github.com/users/bwroblew/orgs", "repos_url": "https://api.github.com/users/bwroblew/repos", "events_url": "https://api.github.com/users/bwroblew/events{/privacy}", "received_events_url": "https://api.github.com/users/bwroblew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "bwroblew", "id": 35349367, "node_id": "MDQ6VXNlcjM1MzQ5MzY3", "avatar_url": "https://avatars.githubusercontent.com/u/35349367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwroblew", "html_url": "https://github.com/bwroblew", "followers_url": "https://api.github.com/users/bwroblew/followers", "following_url": "https://api.github.com/users/bwroblew/following{/other_user}", "gists_url": "https://api.github.com/users/bwroblew/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwroblew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwroblew/subscriptions", "organizations_url": "https://api.github.com/users/bwroblew/orgs", "repos_url": "https://api.github.com/users/bwroblew/repos", "events_url": "https://api.github.com/users/bwroblew/events{/privacy}", "received_events_url": "https://api.github.com/users/bwroblew/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bwroblew", "id": 35349367, "node_id": "MDQ6VXNlcjM1MzQ5MzY3", "avatar_url": "https://avatars.githubusercontent.com/u/35349367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwroblew", "html_url": "https://github.com/bwroblew", "followers_url": "https://api.github.com/users/bwroblew/followers", "following_url": "https://api.github.com/users/bwroblew/following{/other_user}", "gists_url": "https://api.github.com/users/bwroblew/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwroblew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwroblew/subscriptions", "organizations_url": "https://api.github.com/users/bwroblew/orgs", "repos_url": "https://api.github.com/users/bwroblew/repos", "events_url": "https://api.github.com/users/bwroblew/events{/privacy}", "received_events_url": "https://api.github.com/users/bwroblew/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-01-23T14:24:17Z", "updated_at": "2023-01-23T14:35:19Z", "closed_at": "2023-01-23T14:35:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6495", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6495", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6495.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6495.patch", "merged_at": "2023-01-23T14:35:18Z"}, "body": "Both `np.bool` and `np.unicode` were [deprecated in numpy 1.20.0](https://numpy.org/doc/stable/release/1.20.0-notes.html#:~:text=Deprecations-,Using%20the%20aliases%20of%20builtin%20types,-like%20np.int%20is%20deprecated%23) and [removed in numpy 1.24.0](https://numpy.org/doc/stable/release/1.24.0-notes.html#:~:text=The-,deprecation,-for%20the%20aliases).\r\nSince [release notes of 1.20.0](https://numpy.org/doc/stable/release/1.20.0-notes.html#:~:text=Deprecations-,Using%20the%20aliases%20of%20builtin%20types,-like%20np.int%20is%20deprecated%23) say that `np.bool` is identical to `bool` and `np.unicode` is identical to `str`, I changed them that way.\r\n\r\nConfirmed using numpy 1.23.5:\r\n```\r\n>>> np.__version__\r\n'1.23.5'\r\n>>> np.unicode is str\r\n<stdin>:1: DeprecationWarning: `np.unicode` is a deprecated alias for `np.compat.unicode`. To silence this warning, use `np.compat.unicode` by itself. In the likely event your code does not need to work on Python 2 you can use the builtin `str` for which `np.compat.unicode` is itself an alias. Doing this will not modify any behaviour and is safe. If you specifically wanted the numpy scalar type, use `np.str_` here.\r\nDeprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\r\nTrue\r\n>>> np.bool is bool\r\n<stdin>:1: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.\r\nDeprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\r\nTrue\r\n```\r\nIn numpy 1.24.0 both types don't exist anymore:\r\n```\r\n>>> np.__version__\r\n'1.24.0'\r\n>>> np.unicode       \r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"[...]/python3.8/site-packages/numpy/__init__.py\", line 284, in __getattr__\r\n    raise AttributeError(\"module {!r} has no attribute \"\r\nAttributeError: module 'numpy' has no attribute 'unicode'\r\n>>> np.bool\r\n<stdin>:1: FutureWarning: In the future `np.bool` will be defined as the corresponding NumPy scalar.  (This may have returned Python scalars in past versions.\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"[...]/python3.8/site-packages/numpy/__init__.py\", line 284, in __getattr__\r\n    raise AttributeError(\"module {!r} has no attribute \"\r\nAttributeError: module 'numpy' has no attribute 'bool'\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6495/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6494", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6494/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6494/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6494/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6494", "id": 1553035805, "node_id": "PR_kwDOBlHMec5IUuFH", "number": 6494, "title": "Changelog: Fix link", "user": {"login": "bwroblew", "id": 35349367, "node_id": "MDQ6VXNlcjM1MzQ5MzY3", "avatar_url": "https://avatars.githubusercontent.com/u/35349367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwroblew", "html_url": "https://github.com/bwroblew", "followers_url": "https://api.github.com/users/bwroblew/followers", "following_url": "https://api.github.com/users/bwroblew/following{/other_user}", "gists_url": "https://api.github.com/users/bwroblew/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwroblew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwroblew/subscriptions", "organizations_url": "https://api.github.com/users/bwroblew/orgs", "repos_url": "https://api.github.com/users/bwroblew/repos", "events_url": "https://api.github.com/users/bwroblew/events{/privacy}", "received_events_url": "https://api.github.com/users/bwroblew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "bwroblew", "id": 35349367, "node_id": "MDQ6VXNlcjM1MzQ5MzY3", "avatar_url": "https://avatars.githubusercontent.com/u/35349367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwroblew", "html_url": "https://github.com/bwroblew", "followers_url": "https://api.github.com/users/bwroblew/followers", "following_url": "https://api.github.com/users/bwroblew/following{/other_user}", "gists_url": "https://api.github.com/users/bwroblew/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwroblew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwroblew/subscriptions", "organizations_url": "https://api.github.com/users/bwroblew/orgs", "repos_url": "https://api.github.com/users/bwroblew/repos", "events_url": "https://api.github.com/users/bwroblew/events{/privacy}", "received_events_url": "https://api.github.com/users/bwroblew/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bwroblew", "id": 35349367, "node_id": "MDQ6VXNlcjM1MzQ5MzY3", "avatar_url": "https://avatars.githubusercontent.com/u/35349367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwroblew", "html_url": "https://github.com/bwroblew", "followers_url": "https://api.github.com/users/bwroblew/followers", "following_url": "https://api.github.com/users/bwroblew/following{/other_user}", "gists_url": "https://api.github.com/users/bwroblew/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwroblew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwroblew/subscriptions", "organizations_url": "https://api.github.com/users/bwroblew/orgs", "repos_url": "https://api.github.com/users/bwroblew/repos", "events_url": "https://api.github.com/users/bwroblew/events{/privacy}", "received_events_url": "https://api.github.com/users/bwroblew/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-01-23T12:46:28Z", "updated_at": "2023-01-23T13:15:45Z", "closed_at": "2023-01-23T13:15:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6494", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6494", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6494.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6494.patch", "merged_at": "2023-01-23T13:15:45Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6494/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6489", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6489/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6489/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6489/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6489", "id": 1552044519, "node_id": "PR_kwDOBlHMec5IResY", "number": 6489, "title": "Fix typo in `ToHeteroModule`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-01-22T08:41:06Z", "updated_at": "2023-01-22T08:41:29Z", "closed_at": "2023-01-22T08:41:28Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6489", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6489", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6489.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6489.patch", "merged_at": "2023-01-22T08:41:28Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6489/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6481", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6481/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6481/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6481/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6481", "id": 1550659356, "node_id": "I_kwDOBlHMec5cbS8c", "number": 6481, "title": "'from_netwrokx' doesn't work with my 'group_node_attrs'", "user": {"login": "irisferrazzo", "id": 86296192, "node_id": "MDQ6VXNlcjg2Mjk2MTky", "avatar_url": "https://avatars.githubusercontent.com/u/86296192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irisferrazzo", "html_url": "https://github.com/irisferrazzo", "followers_url": "https://api.github.com/users/irisferrazzo/followers", "following_url": "https://api.github.com/users/irisferrazzo/following{/other_user}", "gists_url": "https://api.github.com/users/irisferrazzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/irisferrazzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irisferrazzo/subscriptions", "organizations_url": "https://api.github.com/users/irisferrazzo/orgs", "repos_url": "https://api.github.com/users/irisferrazzo/repos", "events_url": "https://api.github.com/users/irisferrazzo/events{/privacy}", "received_events_url": "https://api.github.com/users/irisferrazzo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-01-20T10:54:25Z", "updated_at": "2023-01-31T17:39:08Z", "closed_at": "2023-01-31T17:39:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nHi,\r\n\r\nI' trying to convert a NetwrokX graph into the pyg format to feed it to a GCN.\r\n\r\n- from_networkx(G) works without problems\r\n\r\n- from_networkx(G, group_node_attrs='x') doesn't work, and I get the following error:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/iris/PycharmProjects/GNN/input_preprocessing.py\", line 126, in <module>\r\n    pyg_graph1 = from_networkx(G1, group_node_attrs='x_1')\r\n  File \"/home/iris/venv/GNN/lib/python3.10/site-packages/torch_geometric/utils/convert.py\", line 262, in from_networkx\r\n    x = data[key]\r\n  File \"/home/iris/venv/GNN/lib/python3.10/site-packages/torch_geometric/data/data.py\", line 444, in __getitem__\r\n    return self._store[key]\r\n  File \"/home/iris/venv/GNN/lib/python3.10/site-packages/torch_geometric/data/storage.py\", line 85, in __getitem__\r\n    return self._mapping[key]\r\nKeyError: 'x'\r\n\r\nMy 'x' looks like this:\r\n\r\ntensor([[ 0.3818, -1.3873, -0.8542,  ..., -1.0018, -0.1969, -0.3482],\r\n        [-0.1424,  0.3124,  2.0222,  ..., -0.6686, -0.1507, -0.8110],\r\n        [ 2.1959,  0.0281,  0.0663,  ..., -1.7057, -1.4785, -0.8781],\r\n        [ 0.5917,  0.2848,  0.9729,  ..., -1.0171, -1.7088, -1.2153]])\r\n\r\nIt is a tensor with each row representing a node embedding (bert).\r\n\r\nCan you please help me understand how the format of my 'x' should be?\r\n\r\nThank you very much in advance :)\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6481/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6479", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6479/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6479/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6479/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6479", "id": 1550432536, "node_id": "PR_kwDOBlHMec5IMQ1W", "number": 6479, "title": "Fix `deprecated` decorator for classes", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-01-20T07:44:05Z", "updated_at": "2023-01-20T07:49:32Z", "closed_at": "2023-01-20T07:49:31Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6479", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6479", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6479.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6479.patch", "merged_at": "2023-01-20T07:49:31Z"}, "body": "We need to copy/inherit the class before modifying `__init__`.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6479/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6478", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6478/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6478/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6478/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6478", "id": 1550382003, "node_id": "PR_kwDOBlHMec5IMGQn", "number": 6478, "title": "fix examples `mnist_voxel_gri`d add keyword parameter", "user": {"login": "forest1040", "id": 127030, "node_id": "MDQ6VXNlcjEyNzAzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/127030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/forest1040", "html_url": "https://github.com/forest1040", "followers_url": "https://api.github.com/users/forest1040/followers", "following_url": "https://api.github.com/users/forest1040/following{/other_user}", "gists_url": "https://api.github.com/users/forest1040/gists{/gist_id}", "starred_url": "https://api.github.com/users/forest1040/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/forest1040/subscriptions", "organizations_url": "https://api.github.com/users/forest1040/orgs", "repos_url": "https://api.github.com/users/forest1040/repos", "events_url": "https://api.github.com/users/forest1040/events{/privacy}", "received_events_url": "https://api.github.com/users/forest1040/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017636777, "node_id": "LA_kwDOBlHMec7veEWp", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/example", "name": "example", "color": "27D88A", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "forest1040", "id": 127030, "node_id": "MDQ6VXNlcjEyNzAzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/127030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/forest1040", "html_url": "https://github.com/forest1040", "followers_url": "https://api.github.com/users/forest1040/followers", "following_url": "https://api.github.com/users/forest1040/following{/other_user}", "gists_url": "https://api.github.com/users/forest1040/gists{/gist_id}", "starred_url": "https://api.github.com/users/forest1040/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/forest1040/subscriptions", "organizations_url": "https://api.github.com/users/forest1040/orgs", "repos_url": "https://api.github.com/users/forest1040/repos", "events_url": "https://api.github.com/users/forest1040/events{/privacy}", "received_events_url": "https://api.github.com/users/forest1040/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "forest1040", "id": 127030, "node_id": "MDQ6VXNlcjEyNzAzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/127030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/forest1040", "html_url": "https://github.com/forest1040", "followers_url": "https://api.github.com/users/forest1040/followers", "following_url": "https://api.github.com/users/forest1040/following{/other_user}", "gists_url": "https://api.github.com/users/forest1040/gists{/gist_id}", "starred_url": "https://api.github.com/users/forest1040/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/forest1040/subscriptions", "organizations_url": "https://api.github.com/users/forest1040/orgs", "repos_url": "https://api.github.com/users/forest1040/repos", "events_url": "https://api.github.com/users/forest1040/events{/privacy}", "received_events_url": "https://api.github.com/users/forest1040/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-01-20T06:47:14Z", "updated_at": "2023-01-26T05:00:06Z", "closed_at": "2023-01-20T17:26:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6478", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6478", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6478.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6478.patch", "merged_at": "2023-01-20T17:26:01Z"}, "body": "A sample `mnist_voxel_grid.py`, but I added it because it requires a keyword parameter in the `voxel_grid()` argument.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6478/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6470", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6470/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6470/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6470/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6470", "id": 1549184860, "node_id": "PR_kwDOBlHMec5IIEJ9", "number": 6470, "title": "Fix `BitcoinOTC` processing", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637023, "node_id": "LA_kwDOBlHMec7veEaf", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/dataset", "name": "dataset", "color": "7705B6", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-01-19T13:41:15Z", "updated_at": "2023-01-19T13:41:47Z", "closed_at": "2023-01-19T13:41:46Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6470", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6470", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6470.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6470.patch", "merged_at": "2023-01-19T13:41:46Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6470/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6468", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6468/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6468/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6468/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6468", "id": 1549074139, "node_id": "PR_kwDOBlHMec5IHryP", "number": 6468, "title": "Fix BitcoinOTC dataset", "user": {"login": "andrinr", "id": 13176078, "node_id": "MDQ6VXNlcjEzMTc2MDc4", "avatar_url": "https://avatars.githubusercontent.com/u/13176078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrinr", "html_url": "https://github.com/andrinr", "followers_url": "https://api.github.com/users/andrinr/followers", "following_url": "https://api.github.com/users/andrinr/following{/other_user}", "gists_url": "https://api.github.com/users/andrinr/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrinr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrinr/subscriptions", "organizations_url": "https://api.github.com/users/andrinr/orgs", "repos_url": "https://api.github.com/users/andrinr/repos", "events_url": "https://api.github.com/users/andrinr/events{/privacy}", "received_events_url": "https://api.github.com/users/andrinr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637023, "node_id": "LA_kwDOBlHMec7veEaf", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/dataset", "name": "dataset", "color": "7705B6", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "andrinr", "id": 13176078, "node_id": "MDQ6VXNlcjEzMTc2MDc4", "avatar_url": "https://avatars.githubusercontent.com/u/13176078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrinr", "html_url": "https://github.com/andrinr", "followers_url": "https://api.github.com/users/andrinr/followers", "following_url": "https://api.github.com/users/andrinr/following{/other_user}", "gists_url": "https://api.github.com/users/andrinr/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrinr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrinr/subscriptions", "organizations_url": "https://api.github.com/users/andrinr/orgs", "repos_url": "https://api.github.com/users/andrinr/repos", "events_url": "https://api.github.com/users/andrinr/events{/privacy}", "received_events_url": "https://api.github.com/users/andrinr/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "andrinr", "id": 13176078, "node_id": "MDQ6VXNlcjEzMTc2MDc4", "avatar_url": "https://avatars.githubusercontent.com/u/13176078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrinr", "html_url": "https://github.com/andrinr", "followers_url": "https://api.github.com/users/andrinr/followers", "following_url": "https://api.github.com/users/andrinr/following{/other_user}", "gists_url": "https://api.github.com/users/andrinr/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrinr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrinr/subscriptions", "organizations_url": "https://api.github.com/users/andrinr/orgs", "repos_url": "https://api.github.com/users/andrinr/repos", "events_url": "https://api.github.com/users/andrinr/events{/privacy}", "received_events_url": "https://api.github.com/users/andrinr/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2023-01-19T12:38:35Z", "updated_at": "2023-01-19T13:45:17Z", "closed_at": "2023-01-19T13:45:17Z", "author_association": "NONE", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6468", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6468", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6468.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6468.patch", "merged_at": null}, "body": "Raw dataset has integer values as edge attributes, therefore using int() instead of float() is safe.\r\n\r\nfixes: https://github.com/pyg-team/pytorch_geometric/issues/6467", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6468/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6467", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6467/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6467/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6467/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6467", "id": 1548872266, "node_id": "I_kwDOBlHMec5cUepK", "number": 6467, "title": "BitcoinOTC Dataset not working", "user": {"login": "andrinr", "id": 13176078, "node_id": "MDQ6VXNlcjEzMTc2MDc4", "avatar_url": "https://avatars.githubusercontent.com/u/13176078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrinr", "html_url": "https://github.com/andrinr", "followers_url": "https://api.github.com/users/andrinr/followers", "following_url": "https://api.github.com/users/andrinr/following{/other_user}", "gists_url": "https://api.github.com/users/andrinr/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrinr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrinr/subscriptions", "organizations_url": "https://api.github.com/users/andrinr/orgs", "repos_url": "https://api.github.com/users/andrinr/repos", "events_url": "https://api.github.com/users/andrinr/events{/privacy}", "received_events_url": "https://api.github.com/users/andrinr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-01-19T10:20:09Z", "updated_at": "2023-01-19T13:56:34Z", "closed_at": "2023-01-19T13:41:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nRo reproduce: \r\n\r\n```\r\nfrom torch_geometric.datasets import BitcoinOTC\r\n\r\nBitcoinOTC(root=\"src/data\")\r\n```\r\n\r\nError message:\r\n\r\n> Processing...\r\n> Traceback (most recent call last):\r\n>   File \"/home/ar/projects/sign-prediction/src/tests.py\", line 10, in <module>\r\n>     BitcoinOTC(root=\"src/data\")\r\n>   File \"/home/ar/miniconda3/envs/gnn/lib/python3.10/site-packages/torch_geometric/datasets/bitcoin_otc.py\", line 42, in __init__\r\n>     super().__init__(root, transform, pre_transform)\r\n>   File \"/home/ar/miniconda3/envs/gnn/lib/python3.10/site-packages/torch_geometric/data/in_memory_dataset.py\", line 56, in __init__\r\n>     super().__init__(root, transform, pre_transform, pre_filter, log)\r\n>   File \"/home/ar/miniconda3/envs/gnn/lib/python3.10/site-packages/torch_geometric/data/dataset.py\", line 94, in __init__\r\n>     self._process()\r\n>   File \"/home/ar/miniconda3/envs/gnn/lib/python3.10/site-packages/torch_geometric/data/dataset.py\", line 211, in _process\r\n>     self.process()\r\n>   File \"/home/ar/miniconda3/envs/gnn/lib/python3.10/site-packages/torch_geometric/datasets/bitcoin_otc.py\", line 74, in process\r\n>     edge_attr = torch.tensor(edge_attr, dtype=torch.long)\r\n> TypeError: 'float' object cannot be interpreted as an integer\n\n### Environment\n\n* PyG version: pyg-nightly 2.2.0.dev2023011\r\n* PyTorch version: torch 1.12.1\r\n* OS: WSL Ubuntu 20.04\r\n* Python version: Python 3.10.8\r\n* CUDA/cuDNN version: =\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6467/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6466", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6466/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6466/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6466/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6466", "id": 1548867624, "node_id": "PR_kwDOBlHMec5IG-ZR", "number": 6466, "title": "Changelog: allow indices with any integer type", "user": {"login": "bartekxk", "id": 38502616, "node_id": "MDQ6VXNlcjM4NTAyNjE2", "avatar_url": "https://avatars.githubusercontent.com/u/38502616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartekxk", "html_url": "https://github.com/bartekxk", "followers_url": "https://api.github.com/users/bartekxk/followers", "following_url": "https://api.github.com/users/bartekxk/following{/other_user}", "gists_url": "https://api.github.com/users/bartekxk/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartekxk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartekxk/subscriptions", "organizations_url": "https://api.github.com/users/bartekxk/orgs", "repos_url": "https://api.github.com/users/bartekxk/repos", "events_url": "https://api.github.com/users/bartekxk/events{/privacy}", "received_events_url": "https://api.github.com/users/bartekxk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "bartekxk", "id": 38502616, "node_id": "MDQ6VXNlcjM4NTAyNjE2", "avatar_url": "https://avatars.githubusercontent.com/u/38502616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartekxk", "html_url": "https://github.com/bartekxk", "followers_url": "https://api.github.com/users/bartekxk/followers", "following_url": "https://api.github.com/users/bartekxk/following{/other_user}", "gists_url": "https://api.github.com/users/bartekxk/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartekxk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartekxk/subscriptions", "organizations_url": "https://api.github.com/users/bartekxk/orgs", "repos_url": "https://api.github.com/users/bartekxk/repos", "events_url": "https://api.github.com/users/bartekxk/events{/privacy}", "received_events_url": "https://api.github.com/users/bartekxk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bartekxk", "id": 38502616, "node_id": "MDQ6VXNlcjM4NTAyNjE2", "avatar_url": "https://avatars.githubusercontent.com/u/38502616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartekxk", "html_url": "https://github.com/bartekxk", "followers_url": "https://api.github.com/users/bartekxk/followers", "following_url": "https://api.github.com/users/bartekxk/following{/other_user}", "gists_url": "https://api.github.com/users/bartekxk/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartekxk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartekxk/subscriptions", "organizations_url": "https://api.github.com/users/bartekxk/orgs", "repos_url": "https://api.github.com/users/bartekxk/repos", "events_url": "https://api.github.com/users/bartekxk/events{/privacy}", "received_events_url": "https://api.github.com/users/bartekxk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-01-19T10:17:16Z", "updated_at": "2023-01-19T11:04:22Z", "closed_at": "2023-01-19T11:04:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6466", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6466", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6466.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6466.patch", "merged_at": "2023-01-19T11:04:21Z"}, "body": "Sorry, forgot to update", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6466/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6456", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6456/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6456/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6456/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6456", "id": 1537677315, "node_id": "PR_kwDOBlHMec5Hm9bz", "number": 6456, "title": "Fix `eval_loader_kwargs` in lightning modules", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-01-18T09:32:53Z", "updated_at": "2023-01-18T09:40:48Z", "closed_at": "2023-01-18T09:40:47Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6456", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6456", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6456.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6456.patch", "merged_at": "2023-01-18T09:40:47Z"}, "body": "Need to `copy` the dictionary before modifying it.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6456/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6439", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6439/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6439/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6439/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6439", "id": 1535659709, "node_id": "PR_kwDOBlHMec5HgS_N", "number": 6439, "title": "Fix typo in heterogeneous graph tutorial", "user": {"login": "binlee52", "id": 24227863, "node_id": "MDQ6VXNlcjI0MjI3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/24227863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binlee52", "html_url": "https://github.com/binlee52", "followers_url": "https://api.github.com/users/binlee52/followers", "following_url": "https://api.github.com/users/binlee52/following{/other_user}", "gists_url": "https://api.github.com/users/binlee52/gists{/gist_id}", "starred_url": "https://api.github.com/users/binlee52/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binlee52/subscriptions", "organizations_url": "https://api.github.com/users/binlee52/orgs", "repos_url": "https://api.github.com/users/binlee52/repos", "events_url": "https://api.github.com/users/binlee52/events{/privacy}", "received_events_url": "https://api.github.com/users/binlee52/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "binlee52", "id": 24227863, "node_id": "MDQ6VXNlcjI0MjI3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/24227863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binlee52", "html_url": "https://github.com/binlee52", "followers_url": "https://api.github.com/users/binlee52/followers", "following_url": "https://api.github.com/users/binlee52/following{/other_user}", "gists_url": "https://api.github.com/users/binlee52/gists{/gist_id}", "starred_url": "https://api.github.com/users/binlee52/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binlee52/subscriptions", "organizations_url": "https://api.github.com/users/binlee52/orgs", "repos_url": "https://api.github.com/users/binlee52/repos", "events_url": "https://api.github.com/users/binlee52/events{/privacy}", "received_events_url": "https://api.github.com/users/binlee52/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "binlee52", "id": 24227863, "node_id": "MDQ6VXNlcjI0MjI3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/24227863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binlee52", "html_url": "https://github.com/binlee52", "followers_url": "https://api.github.com/users/binlee52/followers", "following_url": "https://api.github.com/users/binlee52/following{/other_user}", "gists_url": "https://api.github.com/users/binlee52/gists{/gist_id}", "starred_url": "https://api.github.com/users/binlee52/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binlee52/subscriptions", "organizations_url": "https://api.github.com/users/binlee52/orgs", "repos_url": "https://api.github.com/users/binlee52/repos", "events_url": "https://api.github.com/users/binlee52/events{/privacy}", "received_events_url": "https://api.github.com/users/binlee52/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-01-17T01:31:25Z", "updated_at": "2023-01-17T04:53:45Z", "closed_at": "2023-01-17T04:53:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6439", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6439", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6439.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6439.patch", "merged_at": "2023-01-17T04:53:45Z"}, "body": "Typo fix in docs/source/tutorial/heterogeneous.rst: inidividual -> individual", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6439/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6434", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6434/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6434/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6434/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6434", "id": 1535195142, "node_id": "I_kwDOBlHMec5bgTgG", "number": 6434, "title": "RGCNConv and FastRGCNConv doesn't work for other datatypes than torch.int64", "user": {"login": "bartekxk", "id": 38502616, "node_id": "MDQ6VXNlcjM4NTAyNjE2", "avatar_url": "https://avatars.githubusercontent.com/u/38502616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartekxk", "html_url": "https://github.com/bartekxk", "followers_url": "https://api.github.com/users/bartekxk/followers", "following_url": "https://api.github.com/users/bartekxk/following{/other_user}", "gists_url": "https://api.github.com/users/bartekxk/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartekxk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartekxk/subscriptions", "organizations_url": "https://api.github.com/users/bartekxk/orgs", "repos_url": "https://api.github.com/users/bartekxk/repos", "events_url": "https://api.github.com/users/bartekxk/events{/privacy}", "received_events_url": "https://api.github.com/users/bartekxk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-01-16T16:21:13Z", "updated_at": "2023-01-17T14:05:11Z", "closed_at": "2023-01-17T14:05:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "RGCNConv and FastRGCNConv doesn't work for other datatypes than torch.int64 (RuntimeError). torch.int64 is default datatype if data is None. Reproducer with data created by torch.arrange (modified examples/rgcn.py) :\r\n```python\r\nimport argparse\r\nimport os.path as osp\r\n\r\nfrom numpy import arange\r\n\r\nimport torch\r\nimport torch.nn.functional as F\r\n\r\nfrom torch_geometric.datasets import Entities\r\nfrom torch_geometric.nn import FastRGCNConv, RGCNConv\r\nfrom torch_geometric.utils import k_hop_subgraph\r\n\r\nparser = argparse.ArgumentParser()\r\nparser.add_argument('--dataset', type=str, default='AIFB',\r\n                    choices=['AIFB', 'MUTAG', 'BGS', 'AM'])\r\nargs = parser.parse_args()\r\n\r\n# Trade memory consumption for faster computation.\r\nif args.dataset in ['AIFB', 'MUTAG']:\r\n    RGCNConv = FastRGCNConv\r\n\r\npath = osp.join(osp.dirname(osp.realpath(__file__)), '..', 'data', 'Entities')\r\ndataset = Entities(path, args.dataset)\r\ndata = dataset[0]\r\n\r\n# BGS and AM graphs are too big to process them in a full-batch fashion.\r\n# Since our model does only make use of a rather small receptive field, we\r\n# filter the graph to only contain the nodes that are at most 2-hop neighbors\r\n# away from any training/test node.\r\nnode_idx = torch.cat([data.train_idx, data.test_idx], dim=0)\r\nnode_idx, edge_index, mapping, edge_mask = k_hop_subgraph(\r\n    node_idx, 2, data.edge_index, relabel_nodes=True)\r\n\r\ndata.num_nodes = node_idx.size(0)\r\ndata.edge_index = edge_index\r\ndata.edge_type = data.edge_type[edge_mask]\r\ndata.train_idx = mapping[:data.train_idx.size(0)]\r\ndata.test_idx = mapping[data.train_idx.size(0):]\r\n\r\n\r\nclass Net(torch.nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.conv1 = RGCNConv(data.num_nodes, 16, dataset.num_relations,\r\n                              num_bases=30)\r\n        self.conv2 = RGCNConv(16, dataset.num_classes, dataset.num_relations,\r\n                              num_bases=30)\r\n\r\n    def forward(self, x, edge_index, edge_type):\r\n        x = F.relu(self.conv1(x, edge_index, edge_type))\r\n        x = self.conv2(x, edge_index, edge_type)\r\n        return F.log_softmax(x, dim=1)\r\n\r\n\r\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\r\ndevice = torch.device('cpu') if args.dataset == 'AM' else device\r\nmodel, data = Net().to(device), data.to(device)\r\noptimizer = torch.optim.Adam(model.parameters(), lr=0.01, weight_decay=0.0005)\r\n\r\n\r\ndef train():\r\n    model.train()\r\n    optimizer.zero_grad()\r\n    x = torch.arange(data.num_nodes, dtype=torch.float)\r\n    out = model(x, data.edge_index, data.edge_type)\r\n    loss = F.nll_loss(out[data.train_idx], data.train_y)\r\n    loss.backward()\r\n    optimizer.step()\r\n    return float(loss)\r\n\r\n\r\n@torch.no_grad()\r\ndef test():\r\n    model.eval()\r\n    x = torch.arange(data.num_nodes, dtype=torch.float)\r\n    pred = model(x, data.edge_index, data.edge_type).argmax(dim=-1)\r\n    train_acc = float((pred[data.train_idx] == data.train_y).float().mean())\r\n    test_acc = float((pred[data.test_idx] == data.test_y).float().mean())\r\n    return train_acc, test_acc\r\n\r\n\r\nfor epoch in range(1, 51):\r\n    loss = train()\r\n    train_acc, test_acc = test()\r\n    print(f'Epoch: {epoch:02d}, Loss: {loss:.4f}, Train: {train_acc:.4f} '\r\n          f'Test: {test_acc:.4f}')\r\n\r\n```\r\nThis causes the following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/pytorch_geometric/examples/rgcn.py\", line 83, in <module>\r\n    loss = train()\r\n  File \"/pytorch_geometric/examples/rgcn.py\", line 65, in train\r\n    out = model(x, data.edge_index, data.edge_type)\r\n  File \"/python3.8/site-packages/torch/nn/modules/module.py\", line 1190, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"/pytorch_geometric/examples/rgcn.py\", line 50, in forward\r\n    x = F.relu(self.conv1(x, edge_index, edge_type))\r\n  File \"/python3.8/site-packages/torch/nn/modules/module.py\", line 1190, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"/python3.8/site-packages/torch_geometric/nn/conv/rgcn_conv.py\", line 297, in forward\r\n    out = self.propagate(edge_index, x=x_l, edge_type=edge_type, size=size)\r\n  File \"/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py\", line 439, in propagate\r\n    out = self.message(**msg_kwargs)\r\n  File \"/python3.8/site-packages/torch_geometric/nn/conv/rgcn_conv.py\", line 334, in message\r\n    return torch.bmm(x_j.unsqueeze(-2), weight[edge_type]).squeeze(-2)\r\nRuntimeError: batch1 must be a 3D tensor\r\n```\r\n\r\n### Environment\r\n\r\n* PyG version:  @ git+https://github.com/pyg-team/pytorch_geometric@f343295f7711e0d148e6ca937c68de41338b708c\r\n* PyTorch version: 1.13.0\r\n* OS: Ubuntu 18\r\n* Python version: 3.8.\r\n* CUDA/cuDNN version: -\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):-\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6434/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6427", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6427/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6427/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6427/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6427", "id": 1533411031, "node_id": "PR_kwDOBlHMec5HY0aU", "number": 6427, "title": "Fix temporal `neg_sample` logic in `LinkNeighborLoader`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}, {"id": 4871834239, "node_id": "LA_kwDOBlHMec8AAAABImJKfw", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/sampler", "name": "sampler", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-01-14T18:23:15Z", "updated_at": "2023-01-14T18:38:00Z", "closed_at": "2023-01-14T18:38:00Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6427", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6427", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6427.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6427.patch", "merged_at": "2023-01-14T18:38:00Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6427/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6426", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6426/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6426/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6426/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6426", "id": 1533354221, "node_id": "PR_kwDOBlHMec5HYoQA", "number": 6426, "title": "Minor doc fixes", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-01-14T16:40:27Z", "updated_at": "2023-01-14T16:40:51Z", "closed_at": "2023-01-14T16:40:50Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6426", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6426", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6426.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6426.patch", "merged_at": "2023-01-14T16:40:50Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6426/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6413", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6413/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6413/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6413/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6413", "id": 1531291304, "node_id": "I_kwDOBlHMec5bRaao", "number": 6413, "title": "Segmentation fault when constructing KNNGraph from empty graph", "user": {"login": "Vuenc", "id": 26114194, "node_id": "MDQ6VXNlcjI2MTE0MTk0", "avatar_url": "https://avatars.githubusercontent.com/u/26114194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vuenc", "html_url": "https://github.com/Vuenc", "followers_url": "https://api.github.com/users/Vuenc/followers", "following_url": "https://api.github.com/users/Vuenc/following{/other_user}", "gists_url": "https://api.github.com/users/Vuenc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vuenc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vuenc/subscriptions", "organizations_url": "https://api.github.com/users/Vuenc/orgs", "repos_url": "https://api.github.com/users/Vuenc/repos", "events_url": "https://api.github.com/users/Vuenc/events{/privacy}", "received_events_url": "https://api.github.com/users/Vuenc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-01-12T20:08:51Z", "updated_at": "2023-01-13T15:15:05Z", "closed_at": "2023-01-13T15:15:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhen I try to construct a KNNGraph from a graph that has `pos` tensor of shape (0, d), i.e. an empty graph, the `KNNGraph` transform crashes with a segmentation fault:\r\n\r\n```python\r\nimport torch\r\nimport torch_geometric\r\ndata = torch_geometric.data.Data(pos=torch.zeros(0,3))\r\ntorch_geometric.transforms.KNNGraph(k=5)(data)  #  Segmentation fault\r\n```\r\nExpected behavior: KNNGraph should return a graph with an empty `edge_index` (i.e. of shape (2, 0))\r\n\r\nTraceback when I enable `faulthandler`:\r\n\r\n```\r\nCurrent thread 0x00007fd7fc1933c0 (most recent call first):\r\n  File \"/home/username/miniconda3/envs/myenv/lib/python3.9/site-packages/torch_geometric/nn/pool/__init__.py\", line 128 in knn_graph\r\n  File \"/home/username/miniconda3/envs/myenv/lib/python3.9/site-packages/torch_geometric/transforms/knn_graph.py\", line 33 in __call__\r\n  File \"<string>\", line 5 in <module>\r\nSegmentation fault (core dumped)\r\n```\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.10.2\r\n* OS: Ubuntu\r\n* Python version: 3.9.12\r\n* CUDA/cuDNN version: 11.6\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6413/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6409", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6409/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6409/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6409/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6409", "id": 1530607053, "node_id": "PR_kwDOBlHMec5HPY9R", "number": 6409, "title": "Fix `EGConv` failing test", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-01-12T12:11:25Z", "updated_at": "2023-01-12T12:11:46Z", "closed_at": "2023-01-12T12:11:35Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6409", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6409", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6409.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6409.patch", "merged_at": "2023-01-12T12:11:35Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6409/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6401", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6401/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6401/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6401/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6401", "id": 1529443839, "node_id": "I_kwDOBlHMec5bKXX_", "number": 6401, "title": "`test_temporal_hetero_link_neighbor_loader` failing", "user": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2023-01-11T17:47:43Z", "updated_at": "2023-01-14T18:43:23Z", "closed_at": "2023-01-14T18:38:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\n```\r\n__________________ test_temporal_hetero_link_neighbor_loader ___________________\r\n    @withPackage('pyg_lib')\r\n    def test_temporal_hetero_link_neighbor_loader():\r\n        data = HeteroData()\r\n    \r\n        data['paper'].x = torch.arange(100)\r\n        data['paper'].time = torch.arange(data['paper'].num_nodes) - 200\r\n        data['author'].x = torch.arange(100, 300)\r\n        data['author'].time = torch.arange(data['author'].num_nodes)\r\n    \r\n        data['paper', 'paper'].edge_index = get_edge_index(100, 100, 500)\r\n        data['paper', 'author'].edge_index = get_edge_index(100, 200, 1000)\r\n        data['author', 'paper'].edge_index = get_edge_index(200, 100, 1000)\r\n    \r\n        with pytest.raises(ValueError, match=r\"'edge_label_time' is not set\"):\r\n            loader = LinkNeighborLoader(\r\n                data,\r\n                num_neighbors=[-1] * 2,\r\n                edge_label_index=('paper', 'paper'),\r\n                batch_size=32,\r\n                time_attr='time',\r\n            )\r\n    \r\n        # With edge_time:\r\n        edge_time = torch.arange(data['paper', 'paper'].edge_index.size(1))\r\n        loader = LinkNeighborLoader(\r\n            data,\r\n            num_neighbors=[-1] * 2,\r\n            edge_label_index=('paper', 'paper'),\r\n            edge_label_time=edge_time,\r\n            batch_size=32,\r\n            time_attr='time',\r\n            neg_sampling_ratio=0.5,\r\n            drop_last=True,\r\n        )\r\n>       for batch in loader:\r\ntest/loader/test_link_neighbor_loader.py:216: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/usr/local/lib/python3.8/dist-packages/torch_geometric-2.2.0-py3.8.egg/torch_geometric/loader/base.py:36: in __next__\r\n    return self.transform_fn(next(self.iterator))\r\n/usr/local/lib/python3.8/dist-packages/torch/utils/data/dataloader.py:635: in __next__\r\n    data = self._next_data()\r\n/usr/local/lib/python3.8/dist-packages/torch/utils/data/dataloader.py:679: in _next_data\r\n    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration\r\n/usr/local/lib/python3.8/dist-packages/torch/utils/data/_utils/fetch.py:61: in fetch\r\n    return self.collate_fn(data)\r\n/usr/local/lib/python3.8/dist-packages/torch_geometric-2.2.0-py3.8.egg/torch_geometric/loader/link_loader.py:181: in collate_fn\r\n    out = self.link_sampler.sample_from_edges(\r\n/usr/local/lib/python3.8/dist-packages/torch_geometric-2.2.0-py3.8.egg/torch_geometric/sampler/neighbor_sampler.py:166: in sample_from_edges\r\n    return edge_sample(inputs, self._sample, self.num_nodes, self.disjoint,\r\n/usr/local/lib/python3.8/dist-packages/torch_geometric-2.2.0-py3.8.egg/torch_geometric/sampler/neighbor_sampler.py:381: in edge_sample\r\n    src_neg = neg_sample(src, neg_sampling, num_src_nodes, src_time,\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nseed = tensor([99, 45, 54, 89, 24, 96, 37, 84, 75,  7, 60, 83, 40, 18, 77, 59, 51, 59,\r\n        26, 40, 96, 92, 61, 70, 48, 15,  1, 81, 84, 29, 35, 22])\r\nneg_sampling = NegativeSampling(mode=<NegativeSamplingMode.binary: 'binary'>, amount=0.5, weight=None)\r\nnum_nodes = 100\r\nseed_time = tensor([[ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\r\n         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]])\r\nnode_time = tensor([-200, -199, -198, -197, -196, -195, -194, -193, -192, -191, -190, -189,\r\n        -188, -187, -186, -185, -184, ... -117,\r\n        -116, -115, -114, -113, -112, -111, -110, -109, -108, -107, -106, -105,\r\n        -104, -103, -102, -101])\r\n    def neg_sample(seed: Tensor, neg_sampling: NegativeSampling, num_nodes: int,\r\n                   seed_time: Optional[Tensor],\r\n                   node_time: Optional[Tensor]) -> Tensor:\r\n        num_neg = math.ceil(seed.numel() * neg_sampling.amount)\r\n    \r\n        # TODO: Do not sample false negatives.\r\n        if node_time is None:\r\n            return neg_sampling.sample(num_neg, num_nodes)\r\n    \r\n        # If we are in a temporal-sampling scenario, we need to respect the\r\n        # timestamp of the given nodes we can use as negative examples.\r\n        # That is, we can only sample nodes for which `node_time < seed_time`.\r\n        # For now, we use a greedy algorithm which randomly samples negative\r\n        # nodes and discard any which do not respect the temporal constraint.\r\n        # We iteratively repeat this process until we have sampled a valid node for\r\n        # each seed.\r\n        # TODO See if this greedy algorithm here can be improved.\r\n        assert seed_time is not None\r\n        num_samples = math.ceil(neg_sampling.amount)\r\n        seed_time = seed_time.view(1, -1).expand(num_samples, -1)\r\n    \r\n        out = neg_sampling.sample(num_neg, num_nodes)\r\n         print(out.shape)\r\n         print(num_samples)\r\n         print(seed.numel())\r\n>       out = out.view(num_samples, seed.numel())\r\nE       RuntimeError: shape '[1, 32]' is invalid for input of size 16\r\n```\r\n\r\n\r\n```\r\nout.shape -> torch.Size([16])\r\nnum_samples -> 1\r\nseed.numel() -> 32\r\n```\r\n### Environment\r\n\r\n* PyG version: build from source, github master branch\r\n* PyTorch version: 1.14.0a0+44dac51\r\n* OS: Linux\r\n* Python version: 3.8.10\r\n* CUDA version: 12", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6401/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6393", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6393/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6393/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6393/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6393", "id": 1528654755, "node_id": "PR_kwDOBlHMec5HIwl0", "number": 6393, "title": "Fix `NodeLoader.input_id` for PyTorch Lightning", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-01-11T08:52:00Z", "updated_at": "2023-01-11T08:56:34Z", "closed_at": "2023-01-11T08:56:33Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6393", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6393", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6393.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6393.patch", "merged_at": "2023-01-11T08:56:33Z"}, "body": "Since PyTorch Lightning duplicates the loader, the `input_id` is mistakenly set to `None` :(", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6393/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6392", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6392/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6392/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6392/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6392", "id": 1528559764, "node_id": "I_kwDOBlHMec5bG_iU", "number": 6392, "title": "MessagePassing.propagate Error", "user": {"login": "himil48", "id": 102516553, "node_id": "U_kgDOBhxHSQ", "avatar_url": "https://avatars.githubusercontent.com/u/102516553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/himil48", "html_url": "https://github.com/himil48", "followers_url": "https://api.github.com/users/himil48/followers", "following_url": "https://api.github.com/users/himil48/following{/other_user}", "gists_url": "https://api.github.com/users/himil48/gists{/gist_id}", "starred_url": "https://api.github.com/users/himil48/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/himil48/subscriptions", "organizations_url": "https://api.github.com/users/himil48/orgs", "repos_url": "https://api.github.com/users/himil48/repos", "events_url": "https://api.github.com/users/himil48/events{/privacy}", "received_events_url": "https://api.github.com/users/himil48/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-01-11T07:28:31Z", "updated_at": "2023-01-11T12:45:53Z", "closed_at": "2023-01-11T12:45:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi, \r\n \r\nAfter executing the code \r\n\r\n```\r\nclass Model(torch.nn.Module):\r\n    def __init__(self, hidden_channels):\r\n        super().__init__()\r\n        self.encoder = GNNEncoder(hidden_channels, hidden_channels)\r\n        self.encoder = to_hetero(self.encoder, data.metadata(), aggr='sum')\r\n        self.decoder = EdgeDecoder(hidden_channels)\r\n    def forward(self, x_dict, edge_index_dict, edge_label_index):\r\n        z_dict = self.encoder(x_dict, edge_index_dict)\r\n        return self.decoder(z_dict, edge_label_index) \r\n\r\n\r\nmodel = Model(hidden_channels=64).to(device)\r\nmodel(data.x_dict, data.edge_index_dict,\r\n                 edge_label_index)\r\n\r\n\r\n```\r\n\r\nI receive an error \r\n`ValueError: `MessagePassing.propagate` only supports `torch.LongTensor` of shape `[2, num_messages]` or `torch_sparse.SparseTensor` for argument `edge_index``\r\n\r\n```\r\n>>> data.edge_index_dict[('patient','has','condition')].shape\r\ntorch.Size([2, 6990])\r\n>>> data.edge_index_dict[('patient','has','condition')].dtype\r\ntorch.int64\r\n>>> edge_label_index.shape\r\ntorch.Size([2, 123])\r\n>>> edge_label_index.dtype\r\ntorch.int64\r\n```\r\n\r\nMay you please assist me with what the problem might be.\r\nThank you\n\n### Environment\n\n* PyG version:2.1.0.post1\r\n* PyTorch version: 1.13\r\n* OS: MacOS\r\n* Python version: 3.9\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\ntorch-cluster         1.6.0\r\ntorch-geometric       2.1.0.post1\r\ntorch-scatter         2.0.9\r\ntorch-sparse          0.6.15\r\ntorch-spline-conv     1.2.1\r\ntorchvision           0.14.0\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6392/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6376", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6376/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6376/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6376/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6376", "id": 1525801242, "node_id": "PR_kwDOBlHMec5G_N_g", "number": 6376, "title": "Change mutable default arguments to `None`", "user": {"login": "bwroblew", "id": 35349367, "node_id": "MDQ6VXNlcjM1MzQ5MzY3", "avatar_url": "https://avatars.githubusercontent.com/u/35349367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwroblew", "html_url": "https://github.com/bwroblew", "followers_url": "https://api.github.com/users/bwroblew/followers", "following_url": "https://api.github.com/users/bwroblew/following{/other_user}", "gists_url": "https://api.github.com/users/bwroblew/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwroblew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwroblew/subscriptions", "organizations_url": "https://api.github.com/users/bwroblew/orgs", "repos_url": "https://api.github.com/users/bwroblew/repos", "events_url": "https://api.github.com/users/bwroblew/events{/privacy}", "received_events_url": "https://api.github.com/users/bwroblew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "bwroblew", "id": 35349367, "node_id": "MDQ6VXNlcjM1MzQ5MzY3", "avatar_url": "https://avatars.githubusercontent.com/u/35349367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwroblew", "html_url": "https://github.com/bwroblew", "followers_url": "https://api.github.com/users/bwroblew/followers", "following_url": "https://api.github.com/users/bwroblew/following{/other_user}", "gists_url": "https://api.github.com/users/bwroblew/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwroblew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwroblew/subscriptions", "organizations_url": "https://api.github.com/users/bwroblew/orgs", "repos_url": "https://api.github.com/users/bwroblew/repos", "events_url": "https://api.github.com/users/bwroblew/events{/privacy}", "received_events_url": "https://api.github.com/users/bwroblew/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bwroblew", "id": 35349367, "node_id": "MDQ6VXNlcjM1MzQ5MzY3", "avatar_url": "https://avatars.githubusercontent.com/u/35349367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwroblew", "html_url": "https://github.com/bwroblew", "followers_url": "https://api.github.com/users/bwroblew/followers", "following_url": "https://api.github.com/users/bwroblew/following{/other_user}", "gists_url": "https://api.github.com/users/bwroblew/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwroblew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwroblew/subscriptions", "organizations_url": "https://api.github.com/users/bwroblew/orgs", "repos_url": "https://api.github.com/users/bwroblew/repos", "events_url": "https://api.github.com/users/bwroblew/events{/privacy}", "received_events_url": "https://api.github.com/users/bwroblew/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-01-09T15:19:24Z", "updated_at": "2023-01-09T16:21:06Z", "closed_at": "2023-01-09T16:21:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6376", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6376", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6376.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6376.patch", "merged_at": "2023-01-09T16:21:06Z"}, "body": "Reading PyG code I accidently saw that class and noticed that it uses mutable default arguments what is generally considered a bad practice and can lead to a lot of problems. I believe it's not a desired behaviour (am I wrong?).\r\n\r\nProblems can occur when the class is extended in the future such that it changes the value of any of those lists, the default value for new instances of this class would also be affected. The other possibility is that user changes any of the `follow_batch`, `exclude_keys` fields (those doesn't start with an underscore, so it's kinda possible) after the object is initialized, what's also going to change the default value for new instances.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6376/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6374", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6374/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6374/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6374/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6374", "id": 1525697158, "node_id": "PR_kwDOBlHMec5G-3CZ", "number": 6374, "title": "Fix `ImbalancedSampler` on sliced `InMemoryDataset`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-01-09T14:26:20Z", "updated_at": "2023-01-09T14:27:52Z", "closed_at": "2023-01-09T14:27:51Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6374", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6374", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6374.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6374.patch", "merged_at": "2023-01-09T14:27:50Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6374/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6371", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6371/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6371/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6371/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6371", "id": 1524999057, "node_id": "I_kwDOBlHMec5a5aOR", "number": 6371, "title": "Autograd error after conv with sparse adjacency mat instead of `edge_index`", "user": {"login": "ArchieGertsman", "id": 20342690, "node_id": "MDQ6VXNlcjIwMzQyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/20342690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArchieGertsman", "html_url": "https://github.com/ArchieGertsman", "followers_url": "https://api.github.com/users/ArchieGertsman/followers", "following_url": "https://api.github.com/users/ArchieGertsman/following{/other_user}", "gists_url": "https://api.github.com/users/ArchieGertsman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArchieGertsman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArchieGertsman/subscriptions", "organizations_url": "https://api.github.com/users/ArchieGertsman/orgs", "repos_url": "https://api.github.com/users/ArchieGertsman/repos", "events_url": "https://api.github.com/users/ArchieGertsman/events{/privacy}", "received_events_url": "https://api.github.com/users/ArchieGertsman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-01-09T06:16:16Z", "updated_at": "2023-01-10T08:06:14Z", "closed_at": "2023-01-09T18:13:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nI am getting an autograd error when calling `backward` on data that has been fed through a simple graph conv network using a `SparseTensor` adjacency matrix. If I instead feed the original `edge_index` into the network, then autograd works fine.\r\n\r\n```python\r\nimport torch\r\nfrom torch.nn import Linear\r\nfrom torch_geometric.nn import MessagePassing\r\nfrom torch_sparse import matmul, SparseTensor\r\n\r\n# fix random seed for reproducibility\r\ntorch.random.manual_seed(42)\r\n\r\n\r\n# simple graph conv\r\nclass MyConv(MessagePassing):\r\n    def __init__(self, in_ch, out_ch):\r\n        super().__init__(aggr=\"add\")\r\n        self.lin = Linear(in_ch, out_ch)\r\n\r\n    def forward(self, x, edge_index):\r\n        x = self.lin(x)\r\n        return self.propagate(edge_index, x=x)\r\n\r\n    def message_and_aggregate(self, adj_t, x):\r\n        return matmul(adj_t, x, reduce=self.aggr)\r\n\r\nconv = MyConv(5, 8)\r\n\r\n\r\n# generate data\r\nx = torch.rand(6, 5)\r\n\r\nedge_index = torch.tensor([\r\n    [0,  1,  2,  3,  4],\r\n    [2,  2,  3,  4,  5]\r\n])\r\n\r\nadj = SparseTensor(\r\n    row=edge_index[0], \r\n    col=edge_index[1])\r\n\r\n\r\n# feed data forward both ways\r\nx1 = conv(x, edge_index) \r\nprint(x1)\r\n\r\nx2 = conv(x, adj.t())\r\nprint(x2)\r\n\r\nassert (x1 == x2).all()\r\n\r\n\r\n# compute grads\r\nx1.sum().backward() # works!\r\nx2.sum().backward() # error!\r\n```\r\n\r\nout:\r\n```\r\ntensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],\r\n        [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],\r\n        [ 1.4300,  1.2338,  2.0123, -0.3427, -1.3851,  0.2302, -0.9762, -0.2997],\r\n        [ 0.7890,  0.6861,  1.0525, -0.4021, -0.9543, -0.1364, -0.3217, -0.2653],\r\n        [ 0.3662,  0.4613,  0.7512, -0.2890, -0.8049, -0.2556, -0.4350,  0.0790],\r\n        [ 0.4926,  0.3874,  0.8244, -0.1239, -0.4223,  0.0178, -0.5007, -0.0089]],\r\n       grad_fn=<ScatterAddBackward0>)\r\ntensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],\r\n        [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],\r\n        [ 1.4300,  1.2338,  2.0123, -0.3427, -1.3851,  0.2302, -0.9762, -0.2997],\r\n        [ 0.7890,  0.6861,  1.0525, -0.4021, -0.9543, -0.1364, -0.3217, -0.2653],\r\n        [ 0.3662,  0.4613,  0.7512, -0.2890, -0.8049, -0.2556, -0.4350,  0.0790],\r\n        [ 0.4926,  0.3874,  0.8244, -0.1239, -0.4223,  0.0178, -0.5007, -0.0089]],\r\n       grad_fn=<CppNode<SPMMSum>>)\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\nCell In[40], line 52\r\n     50 # compute grads\r\n     51 x1.sum().backward() # works!\r\n---> 52 x2.sum().backward()\r\n\r\nFile ~/anaconda3/envs/py39/lib/python3.9/site-packages/torch/_tensor.py:488, in Tensor.backward(self, gradient, retain_graph, create_graph, inputs)\r\n    478 if has_torch_function_unary(self):\r\n    479     return handle_torch_function(\r\n    480         Tensor.backward,\r\n    481         (self,),\r\n   (...)\r\n    486         inputs=inputs,\r\n    487     )\r\n--> 488 torch.autograd.backward(\r\n    489     self, gradient, retain_graph, create_graph, inputs=inputs\r\n    490 )\r\n\r\nFile ~/anaconda3/envs/py39/lib/python3.9/site-packages/torch/autograd/__init__.py:197, in backward(tensors, grad_tensors, retain_graph, create_graph, grad_variables, inputs)\r\n    192     retain_graph = create_graph\r\n    194 # The reason we repeat same the comment below is that\r\n    195 # some Python versions print out the first line of a multi-line function\r\n    196 # calls in the traceback and some print out the last line\r\n--> 197 Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass\r\n    198     tensors, grad_tensors_, retain_graph, create_graph, inputs,\r\n    199     allow_unreachable=True, accumulate_grad=True)\r\n\r\nRuntimeError: Function torch::autograd::CppNode<SPMMSum> returned an invalid gradient at index 6 - got [5, 8] but expected shape compatible with [6, 8]\r\n```\r\n\r\n### Environment\r\n\r\n* PyG version: 2.2.0\r\n* PyTorch version: 1.13.1\r\n* OS: CentOS Linux 7 (Core)\r\n* Python version: 3.9.12\r\n* CUDA/cuDNN version: 11.7\r\n* How you installed PyTorch and PyG: `conda`\r\n* `torch_sparse` version: 0.6.16 \r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6371/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6353", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6353/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6353/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6353/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6353", "id": 1522131771, "node_id": "PR_kwDOBlHMec5Gy6Jy", "number": 6353, "title": "Fix Test CI for PyTorch 2.0", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-01-06T07:51:09Z", "updated_at": "2023-01-06T08:11:14Z", "closed_at": "2023-01-06T08:11:13Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6353", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6353", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6353.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6353.patch", "merged_at": "2023-01-06T08:11:13Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6353/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6352", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6352/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6352/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6352/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6352", "id": 1521558086, "node_id": "I_kwDOBlHMec5asSJG", "number": 6352, "title": "CI Failure: `test_lr_scheduler_resolver[scheduler_args5]` & `test_add_weighted_metapaths`", "user": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2023-01-05T22:39:57Z", "updated_at": "2023-01-06T08:11:14Z", "closed_at": "2023-01-06T08:11:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\n```\r\n====================================================================================================== FAILURES ======================================================================================================\r\n____________________________________________________________________________________ test_lr_scheduler_resolver[scheduler_args5] _____________________________________________________________________________________\r\n\r\nscheduler_args = ('constant', <class 'torch.optim.lr_scheduler.ConstantLR'>)\r\n\r\n    @pytest.mark.parametrize('scheduler_args', [\r\n        (\"constant_with_warmup\", LambdaLR),\r\n        (\"linear_with_warmup\", LambdaLR),\r\n        (\"cosine_with_warmup\", LambdaLR),\r\n        (\"cosine_with_warmup_restarts\", LambdaLR),\r\n        (\"polynomial_with_warmup\", LambdaLR),\r\n        (\"constant\", ConstantLR),\r\n        ('ReduceLROnPlateau', ReduceLROnPlateau),\r\n    ])\r\n    def test_lr_scheduler_resolver(scheduler_args):\r\n        scheduler_name, scheduler_cls = scheduler_args\r\n    \r\n        model = torch.nn.Linear(10, 5)\r\n        optimizer = torch.optim.Adam(model.parameters(), lr=0.01)\r\n    \r\n>       lr_scheduler = lr_scheduler_resolver(\r\n            scheduler_name,\r\n            optimizer,\r\n            num_training_steps=100,\r\n        )\r\n\r\ntest/nn/test_resolver.py:76: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nquery = 'constant'\r\noptimizer = Adam (\r\nParameter Group 0\r\n    amsgrad: False\r\n    betas: (0.9, 0.999)\r\n    capturable: False\r\n    differentiable: False\r\n    eps: 1e-08\r\n    foreach: None\r\n    fused: False\r\n    lr: 0.01\r\n    maximize: False\r\n    weight_decay: 0\r\n)\r\nwarmup_ratio_or_steps = 0.1, num_training_steps = 100, kwargs = {}, warmup_steps = 10\r\nclasses = [<class 'torch.optim.lr_scheduler._LRScheduler'>, <class 'torch.optim.lr_scheduler.ReduceLROnPlateau'>, <class 'torch_...metric.nn.lr_scheduler.CosineWithWarmupLR'>, <class 'torch_geometric.nn.lr_scheduler.CosineWithWarmupRestartsLR'>, ...]\r\ncustomized_lr_schedulers = [<class 'torch_geometric.nn.lr_scheduler.ConstantWithWarmupLR'>, <class 'torch_geometric.nn.lr_scheduler.LinearWithWar...ometric.nn.lr_scheduler.CosineWithWarmupRestartsLR'>, <class 'torch_geometric.nn.lr_scheduler.PolynomialWithWarmupLR'>]\r\nquery_repr = 'constant', base_cls_repr = 'lr', cls = <class 'torch_geometric.nn.lr_scheduler.PolynomialWithWarmupLR'>, cls_repr = 'polynomialwithwarmuplr'\r\n\r\n    def lr_scheduler_resolver(\r\n        query: Union[Any, str],\r\n        optimizer: Optimizer,\r\n        warmup_ratio_or_steps: Optional[Union[float, int]] = 0.1,\r\n        num_training_steps: Optional[int] = None,\r\n        **kwargs,\r\n    ) -> Union[_LRScheduler, ReduceLROnPlateau]:\r\n        r\"\"\"A resolver to obtain a learning rate scheduler implemented in either\r\n        PyG or PyTorch from its name or type.\r\n    \r\n        Args:\r\n            query (Any or str): The query name of the learning rate scheduler.\r\n            optimizer (Optimizer): The optimizer to be scheduled.\r\n            warmup_ratio_or_steps (float or int, optional): The number of warmup\r\n                steps. If given as a `float`, it will act as a ratio that gets\r\n                multiplied with the number of training steps to obtain the number\r\n                of warmup steps. Only required for warmup-based LR schedulers.\r\n                (default: :obj:`0.1`)\r\n            num_training_steps (int, optional): The total number of training steps.\r\n                (default: :obj:`None`)\r\n            **kwargs (optional): Additional arguments of the LR scheduler.\r\n        \"\"\"\r\n        if not isinstance(query, str):\r\n            return query\r\n    \r\n        if isinstance(warmup_ratio_or_steps, float):\r\n            if warmup_ratio_or_steps < 0 or warmup_ratio_or_steps > 1:\r\n                raise ValueError(f\"`warmup_ratio_or_steps` needs to be between \"\r\n                                 f\"0.0 and 1.0 when given as a floating point \"\r\n                                 f\"number (got {warmup_ratio_or_steps}).\")\r\n            if num_training_steps is not None:\r\n                warmup_steps = round(warmup_ratio_or_steps * num_training_steps)\r\n        elif isinstance(warmup_ratio_or_steps, int):\r\n            if warmup_ratio_or_steps < 0:\r\n                raise ValueError(f\"`warmup_ratio_or_steps` needs to be positive \"\r\n                                 f\"when given as an integer \"\r\n                                 f\"(got {warmup_ratio_or_steps}).\")\r\n            warmup_steps = warmup_ratio_or_steps\r\n        else:\r\n            raise ValueError(f\"Found invalid type of `warmup_ratio_or_steps` \"\r\n                             f\"(got {type(warmup_ratio_or_steps)})\")\r\n    \r\n        base_cls = _LRScheduler\r\n        classes = [\r\n            scheduler for scheduler in vars(torch.optim.lr_scheduler).values()\r\n            if isinstance(scheduler, type) and issubclass(scheduler, base_cls)\r\n        ] + [ReduceLROnPlateau]\r\n    \r\n        customized_lr_schedulers = [\r\n            ConstantWithWarmupLR,\r\n            LinearWithWarmupLR,\r\n            CosineWithWarmupLR,\r\n            CosineWithWarmupRestartsLR,\r\n            PolynomialWithWarmupLR,\r\n        ]\r\n        classes += customized_lr_schedulers\r\n    \r\n        query_repr = normalize_string(query)\r\n        base_cls_repr = normalize_string('LR')\r\n    \r\n        for cls in classes:\r\n            cls_repr = normalize_string(cls.__name__)\r\n            if query_repr in [cls_repr, cls_repr.replace(base_cls_repr, '')]:\r\n                if inspect.isclass(cls):\r\n                    if cls in customized_lr_schedulers:\r\n                        cls_keys = inspect.signature(cls).parameters.keys()\r\n                        if 'num_warmup_steps' in cls_keys:\r\n                            kwargs['num_warmup_steps'] = warmup_steps\r\n                        if 'num_training_steps' in cls_keys:\r\n                            kwargs['num_training_steps'] = num_training_steps\r\n                    obj = cls(optimizer, **kwargs)\r\n                    return obj\r\n                return cls\r\n    \r\n        choices = set(cls.__name__ for cls in classes)\r\n>       raise ValueError(f\"Could not resolve '{query}' among choices {choices}\")\r\nE       ValueError: Could not resolve 'constant' among choices {'ReduceLROnPlateau', 'PolynomialWithWarmupLR', '_LRScheduler', 'LinearWithWarmupLR', 'CosineWithWarmupRestartsLR', 'CosineWithWarmupLR', 'ConstantWithWarmupLR'}\r\n\r\n/usr/local/lib/python3.8/dist-packages/torch_geometric-2.2.0-py3.8.egg/torch_geometric/nn/resolver.py:192: ValueError\r\n____________________________________________________________________________________________ test_add_weighted_metapaths _____________________________________________________________________________________________\r\n\r\n    def test_add_weighted_metapaths():\r\n        torch.manual_seed(12345)\r\n    \r\n        data = HeteroData()\r\n        data['a'].num_nodes = 2\r\n        data['b'].num_nodes = 3\r\n        data['c'].num_nodes = 2\r\n        data['d'].num_nodes = 2\r\n        data['a', 'b'].edge_index = tensor([[0, 1, 1], [0, 1, 2]])\r\n        data['b', 'a'].edge_index = data['a', 'b'].edge_index.flip([0])\r\n        data['b', 'c'].edge_index = tensor([[0, 1, 2], [0, 1, 1]])\r\n        data['c', 'b'].edge_index = data['b', 'c'].edge_index.flip([0])\r\n        data['c', 'd'].edge_index = tensor([[0, 1], [0, 0]])\r\n        data['d', 'c'].edge_index = data['c', 'd'].edge_index.flip([0])\r\n    \r\n        metapaths = [\r\n            [('a', 'b'), ('b', 'c')],\r\n            [('a', 'b'), ('b', 'c'), ('c', 'd')],\r\n            [('a', 'b'), ('b', 'c'), ('c', 'd'), ('d', 'c'), ('c', 'b'),\r\n             ('b', 'a')],\r\n        ]\r\n        transform = AddMetaPaths(metapaths, weighted=True)\r\n        metapath_data = transform(copy.copy(data))\r\n    \r\n        # Make sure manually added metapaths compute the correct number of edges\r\n        assert metapath_data['a', 'c'].edge_weight.tolist() == [1, 2]\r\n        assert metapath_data['a', 'd'].edge_weight.tolist() == [1, 2]\r\n>       assert metapath_data['a', 'a'].edge_weight.tolist() == [1, 2, 2, 4]\r\nE       assert [2.0, 1.0, 4.0, 2.0] == [1, 2, 2, 4]\r\nE         At index 0 diff: 2.0 != 1\r\nE         Use -v to get more diff\r\n\r\ntest/transforms/test_add_metapaths.py:115: AssertionError\r\n```\r\n\r\n### Environment\r\n\r\n* Versions: \r\ntorch                   1.14.0a0+44dac51\r\ntorch-cluster           1.6.0\r\ntorch-geometric         2.2.0\r\ntorch-scatter           2.1.0\r\ntorch-sparse            0.6.16\r\ntorch-spline-conv       1.2.1\r\n* OS: Ubuntu\r\n* Python version: 3.8.10\r\n* CUDA 12\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): source\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6352/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6330", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6330/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6330/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6330/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6330", "id": 1517244625, "node_id": "PR_kwDOBlHMec5GiHbV", "number": 6330, "title": "`from_nested_tensor` autograd check", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4601575641, "node_id": "LA_kwDOBlHMec8AAAABEkZ42Q", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/utils", "name": "utils", "color": "DBC48C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-01-03T11:12:06Z", "updated_at": "2023-01-03T11:17:45Z", "closed_at": "2023-01-03T11:17:45Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6330", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6330", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6330.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6330.patch", "merged_at": "2023-01-03T11:17:45Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6330/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6312", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6312/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6312/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6312/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6312", "id": 1513763174, "node_id": "PR_kwDOBlHMec5GWZaP", "number": 6312, "title": "Fixed a bug in which `distributed_sampling_loader.py` mistakenly not split data", "user": {"login": "LukeLIN-web", "id": 60426396, "node_id": "MDQ6VXNlcjYwNDI2Mzk2", "avatar_url": "https://avatars.githubusercontent.com/u/60426396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukeLIN-web", "html_url": "https://github.com/LukeLIN-web", "followers_url": "https://api.github.com/users/LukeLIN-web/followers", "following_url": "https://api.github.com/users/LukeLIN-web/following{/other_user}", "gists_url": "https://api.github.com/users/LukeLIN-web/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukeLIN-web/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukeLIN-web/subscriptions", "organizations_url": "https://api.github.com/users/LukeLIN-web/orgs", "repos_url": "https://api.github.com/users/LukeLIN-web/repos", "events_url": "https://api.github.com/users/LukeLIN-web/events{/privacy}", "received_events_url": "https://api.github.com/users/LukeLIN-web/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017636777, "node_id": "LA_kwDOBlHMec7veEWp", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/example", "name": "example", "color": "27D88A", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "LukeLIN-web", "id": 60426396, "node_id": "MDQ6VXNlcjYwNDI2Mzk2", "avatar_url": "https://avatars.githubusercontent.com/u/60426396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukeLIN-web", "html_url": "https://github.com/LukeLIN-web", "followers_url": "https://api.github.com/users/LukeLIN-web/followers", "following_url": "https://api.github.com/users/LukeLIN-web/following{/other_user}", "gists_url": "https://api.github.com/users/LukeLIN-web/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukeLIN-web/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukeLIN-web/subscriptions", "organizations_url": "https://api.github.com/users/LukeLIN-web/orgs", "repos_url": "https://api.github.com/users/LukeLIN-web/repos", "events_url": "https://api.github.com/users/LukeLIN-web/events{/privacy}", "received_events_url": "https://api.github.com/users/LukeLIN-web/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "LukeLIN-web", "id": 60426396, "node_id": "MDQ6VXNlcjYwNDI2Mzk2", "avatar_url": "https://avatars.githubusercontent.com/u/60426396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukeLIN-web", "html_url": "https://github.com/LukeLIN-web", "followers_url": "https://api.github.com/users/LukeLIN-web/followers", "following_url": "https://api.github.com/users/LukeLIN-web/following{/other_user}", "gists_url": "https://api.github.com/users/LukeLIN-web/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukeLIN-web/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukeLIN-web/subscriptions", "organizations_url": "https://api.github.com/users/LukeLIN-web/orgs", "repos_url": "https://api.github.com/users/LukeLIN-web/repos", "events_url": "https://api.github.com/users/LukeLIN-web/events{/privacy}", "received_events_url": "https://api.github.com/users/LukeLIN-web/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-12-29T14:00:16Z", "updated_at": "2022-12-29T15:04:46Z", "closed_at": "2022-12-29T15:04:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6312", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6312", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6312.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6312.patch", "merged_at": "2022-12-29T15:04:30Z"}, "body": "I am sorry that I made a mistake in that we don't split data into each GPU. Now I fixed it and tested it.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6312/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6308", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6308/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6308/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6308/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6308", "id": 1512556847, "node_id": "PR_kwDOBlHMec5GSUfh", "number": 6308, "title": "Fix filtering of node features in `transforms.RemoveIsolatedNodes`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052698076, "node_id": "LA_kwDOBlHMec7xj0Pc", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/transform", "name": "transform", "color": "480283", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-12-28T08:42:51Z", "updated_at": "2022-12-28T08:47:40Z", "closed_at": "2022-12-28T08:47:39Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6308", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6308", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6308.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6308.patch", "merged_at": "2022-12-28T08:47:39Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6308/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6306", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6306/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6306/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6306/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6306", "id": 1511922135, "node_id": "PR_kwDOBlHMec5GQNbg", "number": 6306, "title": "Fix to save best models instead of worst", "user": {"login": "anton-bushuiev", "id": 67932762, "node_id": "MDQ6VXNlcjY3OTMyNzYy", "avatar_url": "https://avatars.githubusercontent.com/u/67932762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anton-bushuiev", "html_url": "https://github.com/anton-bushuiev", "followers_url": "https://api.github.com/users/anton-bushuiev/followers", "following_url": "https://api.github.com/users/anton-bushuiev/following{/other_user}", "gists_url": "https://api.github.com/users/anton-bushuiev/gists{/gist_id}", "starred_url": "https://api.github.com/users/anton-bushuiev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anton-bushuiev/subscriptions", "organizations_url": "https://api.github.com/users/anton-bushuiev/orgs", "repos_url": "https://api.github.com/users/anton-bushuiev/repos", "events_url": "https://api.github.com/users/anton-bushuiev/events{/privacy}", "received_events_url": "https://api.github.com/users/anton-bushuiev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017636777, "node_id": "LA_kwDOBlHMec7veEWp", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/example", "name": "example", "color": "27D88A", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "anton-bushuiev", "id": 67932762, "node_id": "MDQ6VXNlcjY3OTMyNzYy", "avatar_url": "https://avatars.githubusercontent.com/u/67932762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anton-bushuiev", "html_url": "https://github.com/anton-bushuiev", "followers_url": "https://api.github.com/users/anton-bushuiev/followers", "following_url": "https://api.github.com/users/anton-bushuiev/following{/other_user}", "gists_url": "https://api.github.com/users/anton-bushuiev/gists{/gist_id}", "starred_url": "https://api.github.com/users/anton-bushuiev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anton-bushuiev/subscriptions", "organizations_url": "https://api.github.com/users/anton-bushuiev/orgs", "repos_url": "https://api.github.com/users/anton-bushuiev/repos", "events_url": "https://api.github.com/users/anton-bushuiev/events{/privacy}", "received_events_url": "https://api.github.com/users/anton-bushuiev/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "anton-bushuiev", "id": 67932762, "node_id": "MDQ6VXNlcjY3OTMyNzYy", "avatar_url": "https://avatars.githubusercontent.com/u/67932762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anton-bushuiev", "html_url": "https://github.com/anton-bushuiev", "followers_url": "https://api.github.com/users/anton-bushuiev/followers", "following_url": "https://api.github.com/users/anton-bushuiev/following{/other_user}", "gists_url": "https://api.github.com/users/anton-bushuiev/gists{/gist_id}", "starred_url": "https://api.github.com/users/anton-bushuiev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anton-bushuiev/subscriptions", "organizations_url": "https://api.github.com/users/anton-bushuiev/orgs", "repos_url": "https://api.github.com/users/anton-bushuiev/repos", "events_url": "https://api.github.com/users/anton-bushuiev/events{/privacy}", "received_events_url": "https://api.github.com/users/anton-bushuiev/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-12-27T15:41:02Z", "updated_at": "2022-12-27T16:06:05Z", "closed_at": "2022-12-27T16:06:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6306", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6306", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6306.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6306.patch", "merged_at": "2022-12-27T16:06:05Z"}, "body": "This PR Fixes a minor bug in PyTorchLightning examples. Currently, the worst models are saved instead of the best ones. See the [documentation of `pl.callbacks.ModelCheckpoint`](https://pytorch-lightning.readthedocs.io/en/stable/api/pytorch_lightning.callbacks.ModelCheckpoint.html#pytorch_lightning.callbacks.ModelCheckpoint.params.mode)", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6306/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6305", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6305/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6305/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6305/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6305", "id": 1511758483, "node_id": "PR_kwDOBlHMec5GPpxN", "number": 6305, "title": "Fix `DimeNet` output dimension mismatch", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-12-27T12:29:45Z", "updated_at": "2022-12-27T12:36:13Z", "closed_at": "2022-12-27T12:36:13Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6305", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6305", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6305.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6305.patch", "merged_at": "2022-12-27T12:36:13Z"}, "body": "Fixes https://github.com/pyg-team/pytorch_geometric/discussions/6217", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6305/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6304", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6304/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6304/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6304/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6304", "id": 1511739804, "node_id": "PR_kwDOBlHMec5GPlsS", "number": 6304, "title": "Fix `Data.to_heterogeneous()` with empty `edge_index`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4020368118, "node_id": "LA_kwDOBlHMec7vofL2", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/explain", "name": "explain", "color": "5319e7", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-12-27T12:05:14Z", "updated_at": "2022-12-27T12:19:41Z", "closed_at": "2022-12-27T12:19:40Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6304", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6304", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6304.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6304.patch", "merged_at": "2022-12-27T12:19:40Z"}, "body": "Also fixes https://github.com/pyg-team/pytorch_geometric/issues/6299.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6304/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6299", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6299/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6299/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6299/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6299", "id": 1510800452, "node_id": "I_kwDOBlHMec5aDPxE", "number": 6299, "title": "Unexpected assignment of `ptr` when using `HeteroDataBatch.to_homogeneous()`", "user": {"login": "ekosman", "id": 10260165, "node_id": "MDQ6VXNlcjEwMjYwMTY1", "avatar_url": "https://avatars.githubusercontent.com/u/10260165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ekosman", "html_url": "https://github.com/ekosman", "followers_url": "https://api.github.com/users/ekosman/followers", "following_url": "https://api.github.com/users/ekosman/following{/other_user}", "gists_url": "https://api.github.com/users/ekosman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ekosman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ekosman/subscriptions", "organizations_url": "https://api.github.com/users/ekosman/orgs", "repos_url": "https://api.github.com/users/ekosman/repos", "events_url": "https://api.github.com/users/ekosman/events{/privacy}", "received_events_url": "https://api.github.com/users/ekosman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-12-26T09:53:06Z", "updated_at": "2022-12-27T13:49:28Z", "closed_at": "2022-12-27T12:19:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nI try to convert a heterogeneous batch into a homogeneous one, but I encounter the following behavior:\r\n\r\n```python\r\nfrom torch_geometric.data import Batch, HeteroData\r\nimport torch\r\n\r\ndata = []\r\nfor i in range(2):\r\n    data_ = HeteroData()\r\n    data_[\"a\"].x = torch.randn(3,3)\r\n    data_[\"b\"].x = torch.randn(3,3)\r\n    data.append(data_)\r\n\r\nb = Batch.from_data_list(data).to_homogeneous()\r\n\r\nprint(\"Batch:\", b.batch)\r\nprint(\"ptr: \", b.ptr)\r\n```\r\n\r\nOutput:\r\n```\r\nBatch: tensor([0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1])\r\nptr:  tensor([0, 3, 6, 0, 3, 6])\r\n```\r\n\r\nThe resulting `ptr` relates to the batch indices of the original hetero data batch, not the new one.\r\n\r\n### Environment\r\n\r\n* PyG version: 2.1.0\r\n* PyTorch version: 1.11.0\r\n* OS: ubuntu\r\n* Python version: 3.8\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6299/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6288", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6288/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6288/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6288/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6288", "id": 1509171616, "node_id": "PR_kwDOBlHMec5GHFvu", "number": 6288, "title": "Fix broken tests due to `torch-sparse==0.6.16` release", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-12-23T10:28:46Z", "updated_at": "2022-12-23T10:33:04Z", "closed_at": "2022-12-23T10:33:03Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6288", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6288", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6288.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6288.patch", "merged_at": "2022-12-23T10:33:03Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6288/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6243", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6243/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6243/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6243/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6243", "id": 1498542402, "node_id": "I_kwDOBlHMec5ZUfFC", "number": 6243, "title": "Model expects dict instead of tensor?", "user": {"login": "LaurentBerder", "id": 19341543, "node_id": "MDQ6VXNlcjE5MzQxNTQz", "avatar_url": "https://avatars.githubusercontent.com/u/19341543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LaurentBerder", "html_url": "https://github.com/LaurentBerder", "followers_url": "https://api.github.com/users/LaurentBerder/followers", "following_url": "https://api.github.com/users/LaurentBerder/following{/other_user}", "gists_url": "https://api.github.com/users/LaurentBerder/gists{/gist_id}", "starred_url": "https://api.github.com/users/LaurentBerder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LaurentBerder/subscriptions", "organizations_url": "https://api.github.com/users/LaurentBerder/orgs", "repos_url": "https://api.github.com/users/LaurentBerder/repos", "events_url": "https://api.github.com/users/LaurentBerder/events{/privacy}", "received_events_url": "https://api.github.com/users/LaurentBerder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-12-15T14:30:20Z", "updated_at": "2023-01-17T08:47:30Z", "closed_at": "2023-01-17T08:47:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi,\r\n\r\nI'm trying to apply the example you kindly made [here](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/hetero/hetero_link_pred.py) to some data of mine for an edge property prediction problem (here I'm trying to predict one variable on edge between \"booking\" and \"container\" nodes) .\r\n\r\nMy heterogeneous graph (which I transformed with `ToUndirected()`) looks like this:\r\n```python\r\nHeteroData(\r\n  booking={ x=[9755, 5] },\r\n  container={ x=[10076, 1] },\r\n  shipper={ x=[5508, 2] },\r\n  consignee={ x=[5300, 2] },\r\n  (booking, has, container)={\r\n    edge_index=[2, 7115],\r\n    edge_attr=[7115, 22],\r\n    y=[7115, 1],\r\n    edge_label=[14230],\r\n    edge_label_index=[2, 14230]\r\n  },\r\n  (shipper, sends, booking)={\r\n    edge_index=[2, 10163],\r\n    edge_attr=[10163, 2]\r\n  },\r\n  (consignee, receives, booking)={\r\n    edge_index=[2, 10163],\r\n    edge_attr=[10163, 2]\r\n  },\r\n  (container, rev_has, booking)={\r\n    edge_index=[2, 7115],\r\n    edge_attr=[7115, 22],\r\n    y=[7115, 1]\r\n  },\r\n  (booking, rev_sends, shipper)={\r\n    edge_index=[2, 10163],\r\n    edge_attr=[10163, 2]\r\n  },\r\n  (booking, rev_receives, consignee)={\r\n    edge_index=[2, 10163],\r\n    edge_attr=[10163, 2]\r\n  }\r\n)\r\n```\r\nI then applied a `RandomLinkSplit` based on `edge_types=('booking', 'has', 'container')` and its reverse.\r\n\r\nAfterwards, I adapted the code below for the model:\r\n\r\n```python\r\nimport torch\r\nimport torch.nn.functional as F\r\nfrom torch_geometric.data import HeteroData\r\nimport torch_geometric.transforms as T\r\nfrom torch_geometric.nn import HeteroConv, Linear, SAGEConv, to_hetero\r\n\r\ndef weighted_mse_loss(pred, target, weight=None):\r\n    weight = 1. if weight is None else weight[target].to(pred.dtype)\r\n    return (weight * (pred - target.to(pred.dtype)).pow(2)).mean()\r\n\r\nweight = None\r\n\r\nclass GNNEncoder(torch.nn.Module):\r\n    def __init__(self, hidden_channels, out_channels):\r\n        super().__init__()\r\n        self.conv1 = SAGEConv((-1, -1), hidden_channels)\r\n        self.conv2 = SAGEConv((-1, -1), out_channels)\r\n\r\n    def forward(self, x, edge_index):\r\n        x = self.conv1(x, edge_index).relu()\r\n        x = self.conv2(x, edge_index)\r\n        return x\r\n\r\n\r\nclass EdgeDecoder(torch.nn.Module):\r\n    def __init__(self, hidden_channels):\r\n        super().__init__()\r\n        self.lin1 = Linear(2 * hidden_channels, hidden_channels)\r\n        self.lin2 = Linear(hidden_channels, 1)\r\n\r\n    def forward(self, z_dict, edge_label_index):\r\n        row, col = edge_label_index\r\n        z = torch.cat([z_dict['booking'][row], z_dict['container'][col]], dim=-1)\r\n\r\n        z = self.lin1(z).relu()\r\n        z = self.lin2(z)\r\n        return z.view(-1)\r\n\r\n\r\nclass Model(torch.nn.Module):\r\n    def __init__(self, hidden_channels):\r\n        super().__init__()\r\n        self.encoder = GNNEncoder(hidden_channels, hidden_channels)\r\n        self.encoder = to_hetero(self.encoder, data.metadata(), aggr='sum')\r\n        self.decoder = EdgeDecoder(hidden_channels)\r\n\r\n    def forward(self, x_dict, edge_index_dict, edge_label_index):\r\n        z_dict = self.encoder(x_dict, edge_index_dict)\r\n        return self.decoder(z_dict, edge_label_index)\r\n\r\n\r\nmodel = Model(hidden_channels=32).to(device)\r\ntrain_data = train_data.to(device)\r\nval_data = val_data.to(device)\r\ntest_data = test_data.to(device)\r\n```\r\n\r\nNow I'm able to run the train/test loop:\r\n```python\r\n# Due to lazy initialization, we need to run one model step so the number\r\n# of parameters can be inferred:\r\nwith torch.no_grad():\r\n    model.encoder(train_data.x_dict, train_data.edge_index_dict)\r\n\r\noptimizer = torch.optim.Adam(model.parameters(), lr=0.01)\r\n\r\n\r\ndef train():\r\n    model.train()\r\n    optimizer.zero_grad()\r\n    pred = model(train_data.x_dict, train_data.edge_index_dict,\r\n                 train_data['booking', 'container'].edge_label_index)\r\n    target = train_data['booking', 'container'].edge_label\r\n    loss = weighted_mse_loss(pred, target, weight)\r\n    loss.backward()\r\n    optimizer.step()\r\n    return float(loss)\r\n\r\n\r\n@torch.no_grad()\r\ndef test(data):\r\n    model.eval()\r\n    pred = model(data.x_dict, data.edge_index_dict,\r\n                 data['booking', 'container'].edge_label_index)\r\n    pred = pred.clamp(min=0, max=5)\r\n    target = data['booking', 'container'].edge_label.float()\r\n    rmse = F.mse_loss(pred, target).sqrt()\r\n    return float(rmse)\r\n\r\n\r\nfor epoch in tqdm(range(1, 10)):\r\n    loss = train()\r\n    train_rmse = test(train_data)\r\n    val_rmse = test(val_data)\r\n    test_rmse = test(test_data)\r\n    print(f'Epoch: {epoch:03d}, Loss: {loss:.4f}, Train: {train_rmse:.4f}, '\r\n          f'Val: {val_rmse:.4f}, Test: {test_rmse:.4f}')\r\n```\r\nHowever, that only returns NaNs:\r\n```python\r\n22%|\u2588\u2588\u258f       | 2/9 [00:00<00:00, 14.44it/s]\r\nEpoch: 001, Loss: nan, Train: nan, Val: nan, Test: nan\r\nEpoch: 002, Loss: nan, Train: nan, Val: nan, Test: nan\r\nEpoch: 003, Loss: nan, Train: nan, Val: nan, Test: nan\r\n 67%|\u2588\u2588\u2588\u2588\u2588\u2588\u258b   | 6/9 [00:00<00:00, 14.77it/s]\r\nEpoch: 004, Loss: nan, Train: nan, Val: nan, Test: nan\r\nEpoch: 005, Loss: nan, Train: nan, Val: nan, Test: nan\r\nEpoch: 006, Loss: nan, Train: nan, Val: nan, Test: nan\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 9/9 [00:00<00:00, 14.33it/s]\r\nEpoch: 007, Loss: nan, Train: nan, Val: nan, Test: nan\r\nEpoch: 008, Loss: nan, Train: nan, Val: nan, Test: nan\r\nEpoch: 009, Loss: nan, Train: nan, Val: nan, Test: nan\r\n\r\n```\r\n\r\nSo I tried to investigate the insides of the model with that line:\r\n\r\n```python\r\nmodel.encoder(train_data.x_dict, train_data['booking', 'container'].edge_label_index)\r\n```\r\nBut I get this error:\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/opt/dataiku/code-env/lib/python3.7/site-packages/torch/fx/graph_module.py\", line 267, in __call__\r\n    return super(self.cls, obj).__call__(*args, **kwargs)  # type: ignore[misc]\r\n  File \"/opt/dataiku/code-env/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 1130, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"<eval_with_key>.10\", line 11, in forward\r\n    edge_index__booking__has__container = edge_index_dict.get(('booking', 'has', 'container'), None)\r\nAttributeError: 'Tensor' object has no attribute 'get'\r\n\r\nCall using an FX-traced Module, line 11 of the traced Module's generated forward function:\r\n    edge_index_dict = torch_geometric_nn_to_hetero_transformer_get_dict(edge_index);  edge_index = None\r\n    edge_index__booking__has__container = edge_index_dict.get(('booking', 'has', 'container'), None)\r\n\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE\r\n    edge_index__shipper__sends__booking = edge_index_dict.get(('shipper', 'sends', 'booking'), None)\r\n\r\n    edge_index__consignee__receives__booking = edge_index_dict.get(('consignee', 'receives', 'booking'), None)\r\n\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-144-305668f4e805> in <module>\r\n----> 1 model.encoder(train_data.x_dict, train_data['booking', 'container'].edge_label_index)\r\n\r\n/opt/dataiku/code-env/lib/python3.7/site-packages/torch/fx/graph_module.py in call_wrapped(self, *args, **kwargs)\r\n    650 \r\n    651         def call_wrapped(self, *args, **kwargs):\r\n--> 652             return self._wrapped_call(self, *args, **kwargs)\r\n    653 \r\n    654         cls.__call__ = call_wrapped\r\n\r\n/opt/dataiku/code-env/lib/python3.7/site-packages/torch/fx/graph_module.py in __call__(self, obj, *args, **kwargs)\r\n    273                 print(_WrappedCall._generate_error_message(topmost_framesummary),\r\n    274                       file=sys.stderr)\r\n--> 275                 raise e.with_traceback(None)\r\n    276             else:\r\n    277                 raise e\r\n\r\nAttributeError: 'Tensor' object has no attribute 'get'\r\n```\r\n\r\nIt seems like the model expects my `edge_label_index` to be a dict, but it's a tensor.\r\n\r\nWhat am I doing wrong?\r\n\n\n### Environment\n\n* PyG version: 2.20\r\n* PyTorch version: 1.12.1+cu116\r\n* OS: Linux\r\n* Python version: 3.7\r\n* CUDA/cuDNN version: 1.16\r\n* How you installed PyTorch and PyG: pip\r\n* Torch-Scatter version: 2.1.0+pt112cu116\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6243/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6241", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6241/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6241/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6241/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6241", "id": 1498504720, "node_id": "I_kwDOBlHMec5ZUV4Q", "number": 6241, "title": "Approximate PPR implementation in the GDC transform expects the graph to not have isolated nodes", "user": {"login": "marekdedic", "id": 3134692, "node_id": "MDQ6VXNlcjMxMzQ2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3134692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marekdedic", "html_url": "https://github.com/marekdedic", "followers_url": "https://api.github.com/users/marekdedic/followers", "following_url": "https://api.github.com/users/marekdedic/following{/other_user}", "gists_url": "https://api.github.com/users/marekdedic/gists{/gist_id}", "starred_url": "https://api.github.com/users/marekdedic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marekdedic/subscriptions", "organizations_url": "https://api.github.com/users/marekdedic/orgs", "repos_url": "https://api.github.com/users/marekdedic/repos", "events_url": "https://api.github.com/users/marekdedic/events{/privacy}", "received_events_url": "https://api.github.com/users/marekdedic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-12-15T14:08:15Z", "updated_at": "2023-01-03T13:29:19Z", "closed_at": "2023-01-03T13:29:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi, the approximate implementation of the PPR algorithm that is present in the GDC transform expects the graph to not have any isolated nodes and crashes if it has. This is not documented in the docs or in the code (where there is a mention of coalesced edge index, but I believe that is a slightly different thing).\r\n\r\nExample:\r\n```python\r\nfrom copy import deepcopy\r\nfrom torch_geometric.data.data import Data\r\nfrom torch_geometric.datasets import KarateClub\r\nfrom torch_geometric.transforms import GDC\r\n\r\ngdc = GDC(\r\n    self_loop_weight = 0,\r\n    normalization_in = \"sym\",\r\n    normalization_out = \"col\",\r\n    diffusion_kwargs = dict(method = \"ppr\", alpha = 0.15, eps = 1e-2),\r\n    sparsification_kwargs = dict(method = \"threshold\", eps = 1e-4),\r\n    exact = False\r\n)\r\n\r\ndata: Data = KarateClub()[0]\r\n\r\n# Run GDC on a graph without isolated nodes, works fine\r\ndata2 = gdc(deepcopy(data))\r\n\r\n# Remove all edges leading to/from node 3\r\ndata.edge_index = data.edge_index[:, data.edge_index[0, :] != 3]\r\ndata.edge_index = data.edge_index[:, data.edge_index[1, :] != 3]\r\n\r\n# Run GDC on graph with an isolated node, doesn't work\r\ndata3 = gdc(deepcopy(data))\r\n```\r\nThe last line is where the problem lies. It may not manifest right away (in fact, with this minimal example it does not for me) because some o the code is JITed with numba. However, if I comment out line\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/01482d424bd04be2ca58fb921467d6b3933cc08b/torch_geometric/transforms/gdc.py#L545\r\n\r\nI get:\r\n```python\r\n\u276f python example.py\r\nTraceback (most recent call last):\r\n  File \"/home/user/pytorch_geometric/example.py\", line 25, in <module>\r\n    data3 = gdc(deepcopy(data))\r\n  File \"/opt/miniconda3/envs/pytorch_geometric/lib/python3.9/site-packages/torch/autograd/grad_mode.py\", line 27, in decorate_context\r\n    return func(*args, **kwargs)\r\n  File \"/home/user/pytorch_geometric/torch_geometric/transforms/gdc.py\", line 125, in __call__\r\n    edge_index, edge_weight = self.diffusion_matrix_approx(\r\n  File \"/home/user/pytorch_geometric/torch_geometric/transforms/gdc.py\", line 312, in diffusion_matrix_approx\r\n    neighbors, neighbor_weights = self.__calc_ppr__(\r\n  File \"/home/user/torch_geometric/transforms/gdc.py\", line 596, in calc_ppr\r\n    if res_vnode >= alpha_eps * out_degree[vnode]:\r\nIndexError: index 33 is out of bounds for axis 0 with size 33\r\n```\r\n\r\nIf numba is enabled, the issue manifests as a total process freeze for more complicated examples.\n\n### Environment\n\n* PyG version: 01482d424bd04be2ca58fb921467d6b3933cc08b\r\n* PyTorch version: 1.13.0\r\n* OS: Debian testing\r\n* Python version: 3.9\r\n* CUDA/cuDNN version: CPU only\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): PyG from source, everything else with conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): torch-scatter 2.1.0, torch-sparse 0.6.15\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6241/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6237", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6237/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6237/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6237/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6237", "id": 1496006856, "node_id": "PR_kwDOBlHMec5FamJd", "number": 6237, "title": "Add missing imports for the `GNNExplainer` example in the CI", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017636777, "node_id": "LA_kwDOBlHMec7veEWp", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/example", "name": "example", "color": "27D88A", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-12-14T08:05:08Z", "updated_at": "2022-12-14T08:10:17Z", "closed_at": "2022-12-14T08:10:16Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6237", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6237", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6237.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6237.patch", "merged_at": "2022-12-14T08:10:16Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6237/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6233", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6233/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6233/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6233/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6233", "id": 1494650543, "node_id": "PR_kwDOBlHMec5FV3vO", "number": 6233, "title": "Update `filter_*_store_()` returns in loader utils", "user": {"login": "JakubPietrakIntel", "id": 97102979, "node_id": "U_kgDOBcmsgw", "avatar_url": "https://avatars.githubusercontent.com/u/97102979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakubPietrakIntel", "html_url": "https://github.com/JakubPietrakIntel", "followers_url": "https://api.github.com/users/JakubPietrakIntel/followers", "following_url": "https://api.github.com/users/JakubPietrakIntel/following{/other_user}", "gists_url": "https://api.github.com/users/JakubPietrakIntel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakubPietrakIntel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakubPietrakIntel/subscriptions", "organizations_url": "https://api.github.com/users/JakubPietrakIntel/orgs", "repos_url": "https://api.github.com/users/JakubPietrakIntel/repos", "events_url": "https://api.github.com/users/JakubPietrakIntel/events{/privacy}", "received_events_url": "https://api.github.com/users/JakubPietrakIntel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358958730, "node_id": "MDU6TGFiZWwzMzU4OTU4NzMw", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/2%20-%20Priority%20P2", "name": "2 - Priority P2", "color": "006B75", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}, {"id": 4601575641, "node_id": "LA_kwDOBlHMec8AAAABEkZ42Q", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/utils", "name": "utils", "color": "DBC48C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "JakubPietrakIntel", "id": 97102979, "node_id": "U_kgDOBcmsgw", "avatar_url": "https://avatars.githubusercontent.com/u/97102979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakubPietrakIntel", "html_url": "https://github.com/JakubPietrakIntel", "followers_url": "https://api.github.com/users/JakubPietrakIntel/followers", "following_url": "https://api.github.com/users/JakubPietrakIntel/following{/other_user}", "gists_url": "https://api.github.com/users/JakubPietrakIntel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakubPietrakIntel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakubPietrakIntel/subscriptions", "organizations_url": "https://api.github.com/users/JakubPietrakIntel/orgs", "repos_url": "https://api.github.com/users/JakubPietrakIntel/repos", "events_url": "https://api.github.com/users/JakubPietrakIntel/events{/privacy}", "received_events_url": "https://api.github.com/users/JakubPietrakIntel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JakubPietrakIntel", "id": 97102979, "node_id": "U_kgDOBcmsgw", "avatar_url": "https://avatars.githubusercontent.com/u/97102979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakubPietrakIntel", "html_url": "https://github.com/JakubPietrakIntel", "followers_url": "https://api.github.com/users/JakubPietrakIntel/followers", "following_url": "https://api.github.com/users/JakubPietrakIntel/following{/other_user}", "gists_url": "https://api.github.com/users/JakubPietrakIntel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakubPietrakIntel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakubPietrakIntel/subscriptions", "organizations_url": "https://api.github.com/users/JakubPietrakIntel/orgs", "repos_url": "https://api.github.com/users/JakubPietrakIntel/repos", "events_url": "https://api.github.com/users/JakubPietrakIntel/events{/privacy}", "received_events_url": "https://api.github.com/users/JakubPietrakIntel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-12-13T16:34:35Z", "updated_at": "2023-01-27T17:10:54Z", "closed_at": "2022-12-13T16:44:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6233", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6233", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6233.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6233.patch", "merged_at": "2022-12-13T16:44:51Z"}, "body": "Remove `return store` from `filter_node_store_` and `filter_edge_store_` as these values are not modified by the function, so the return can be `None`.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6233/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6223", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6223/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6223/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6223/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6223", "id": 1493629807, "node_id": "PR_kwDOBlHMec5FSX7q", "number": 6223, "title": "Fix `GNNExplainer` example", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017636777, "node_id": "LA_kwDOBlHMec7veEWp", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/example", "name": "example", "color": "27D88A", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-12-13T07:54:30Z", "updated_at": "2022-12-13T07:54:59Z", "closed_at": "2022-12-13T07:54:58Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6223", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6223", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6223.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6223.patch", "merged_at": "2022-12-13T07:54:58Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6223/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6212", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6212/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6212/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6212/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6212", "id": 1491002890, "node_id": "I_kwDOBlHMec5Y3uYK", "number": 6212, "title": "google colab crash when running \"import torch_geometric\"", "user": {"login": "lithostark", "id": 37433550, "node_id": "MDQ6VXNlcjM3NDMzNTUw", "avatar_url": "https://avatars.githubusercontent.com/u/37433550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lithostark", "html_url": "https://github.com/lithostark", "followers_url": "https://api.github.com/users/lithostark/followers", "following_url": "https://api.github.com/users/lithostark/following{/other_user}", "gists_url": "https://api.github.com/users/lithostark/gists{/gist_id}", "starred_url": "https://api.github.com/users/lithostark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lithostark/subscriptions", "organizations_url": "https://api.github.com/users/lithostark/orgs", "repos_url": "https://api.github.com/users/lithostark/repos", "events_url": "https://api.github.com/users/lithostark/events{/privacy}", "received_events_url": "https://api.github.com/users/lithostark/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2022-12-12T05:23:13Z", "updated_at": "2023-01-08T02:34:15Z", "closed_at": "2023-01-08T02:34:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI have successfully installed torch_geometric by runnign following scripts in google colab:\r\n!pip install torch-sparse==0.6.13 -f https://pytorch-geometric.com/whl/torch-1.10.0+cu113.html\r\n!pip install torch_scatter==2.1.0\r\n!pip install torch_geometric==2.2.0\r\n\r\nHowever, the session crashes when I run \"import torch_geometric\".\n\n### Environment\n\n* PyG version:\r\n* PyTorch version:\r\n* OS:\r\n* Python version:\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6212/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6211", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6211/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6211/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6211/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6211", "id": 1490926880, "node_id": "I_kwDOBlHMec5Y3b0g", "number": 6211, "title": "Questions about propagate function in PYG ", "user": {"login": "HelloWorldLTY", "id": 43333475, "node_id": "MDQ6VXNlcjQzMzMzNDc1", "avatar_url": "https://avatars.githubusercontent.com/u/43333475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HelloWorldLTY", "html_url": "https://github.com/HelloWorldLTY", "followers_url": "https://api.github.com/users/HelloWorldLTY/followers", "following_url": "https://api.github.com/users/HelloWorldLTY/following{/other_user}", "gists_url": "https://api.github.com/users/HelloWorldLTY/gists{/gist_id}", "starred_url": "https://api.github.com/users/HelloWorldLTY/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HelloWorldLTY/subscriptions", "organizations_url": "https://api.github.com/users/HelloWorldLTY/orgs", "repos_url": "https://api.github.com/users/HelloWorldLTY/repos", "events_url": "https://api.github.com/users/HelloWorldLTY/events{/privacy}", "received_events_url": "https://api.github.com/users/HelloWorldLTY/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-12-12T04:33:33Z", "updated_at": "2022-12-13T18:52:43Z", "closed_at": "2022-12-13T18:52:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi, I found such an error message in the function self.propagate (now forward):\r\n\r\nValueError: Expected 'edge_index' to be of type 'torch.long' (got 'torch.float32')\r\n\r\nHowever, my tensor can be used to perform forwarding and the codes are:\r\n\r\n        train_pos_edge_index = graph.edge_index.long()\r\n        \r\n        z = gene_encoder(x, train_pos_edge_index, graph.show_index)\r\n        \r\n        preg = loss_fun_preg.soft_cross_entropy(\r\n            F.softmax(\r\n                gene_encoder.propagate(x, train_pos_edge_index, graph.show_index),\r\n                dim=1\r\n            ),\r\n            F.softmax(\r\n                gene_encoder(x, train_pos_edge_index, graph.show_index),\r\n                dim=1\r\n            )\r\n        )\r\n\r\nCould you please help me address the problem in propagate? Thanks.\n\n### Environment\n\n* PyG version:  2.1.0\r\n* PyTorch version: 1.11.0\r\n* OS: linux\r\n* Python version: 3.8\r\n* CUDA/cuDNN version: 11.7+8.0\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6211/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6207", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6207/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6207/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6207/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6207", "id": 1489620107, "node_id": "PR_kwDOBlHMec5FEQzT", "number": 6207, "title": "Fix nightly JIT tests and `GNNExplainer` import", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-12-11T07:51:06Z", "updated_at": "2022-12-11T07:59:15Z", "closed_at": "2022-12-11T07:59:14Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6207", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6207", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6207.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6207.patch", "merged_at": "2022-12-11T07:59:14Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6207/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6202", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6202/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6202/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6202/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6202", "id": 1488509240, "node_id": "PR_kwDOBlHMec5FAN2s", "number": 6202, "title": "Fix TorchScript support in GNN layers with `cache` support", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-12-10T13:56:02Z", "updated_at": "2022-12-10T14:05:44Z", "closed_at": "2022-12-10T14:05:43Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6202", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6202", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6202.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6202.patch", "merged_at": "2022-12-10T14:05:43Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6202/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6200", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6200/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6200/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6200/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6200", "id": 1487969577, "node_id": "I_kwDOBlHMec5YsJ0p", "number": 6200, "title": "Questions about using pyg to construct parameter dict", "user": {"login": "HelloWorldLTY", "id": 43333475, "node_id": "MDQ6VXNlcjQzMzMzNDc1", "avatar_url": "https://avatars.githubusercontent.com/u/43333475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HelloWorldLTY", "html_url": "https://github.com/HelloWorldLTY", "followers_url": "https://api.github.com/users/HelloWorldLTY/followers", "following_url": "https://api.github.com/users/HelloWorldLTY/following{/other_user}", "gists_url": "https://api.github.com/users/HelloWorldLTY/gists{/gist_id}", "starred_url": "https://api.github.com/users/HelloWorldLTY/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HelloWorldLTY/subscriptions", "organizations_url": "https://api.github.com/users/HelloWorldLTY/orgs", "repos_url": "https://api.github.com/users/HelloWorldLTY/repos", "events_url": "https://api.github.com/users/HelloWorldLTY/events{/privacy}", "received_events_url": "https://api.github.com/users/HelloWorldLTY/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-12-10T05:08:48Z", "updated_at": "2022-12-10T13:53:06Z", "closed_at": "2022-12-10T13:53:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nfrom torch_geometric.nn.module_dict import ModuleDict\r\nfrom torch_geometric.nn.parameter_dict import ParameterDict\r\n\r\nI cannot run the above codes, and I will receive such errors:\r\nModuleNotFoundError                       Traceback (most recent call last)\r\nCell In [21], line 1\r\n----> 1 from torch_geometric.nn.module_dict import ModuleDict\r\n      2 from torch_geometric.nn.parameter_dict import ParameterDict\r\n\r\nModuleNotFoundError: No module named 'torch_geometric.nn.module_dict'\r\n\r\nI found such codes based on this example:\r\nhttps://pytorch-geometric.readthedocs.io/en/latest/_modules/torch_geometric/nn/conv/hgt_conv.html\r\n\r\nI intend to use the data structure similar to nn.Paramdict. How can I use it in pyg? Thanks.\r\n\r\n\r\n### Environment\r\n\r\n* PyG version: 2.1\r\n* PyTorch version: 1.11\r\n* OS: linux\r\n* Python version: 3.8\r\n* CUDA/cuDNN version: 11.7\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6200/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6199", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6199/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6199/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6199/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6199", "id": 1487163253, "node_id": "I_kwDOBlHMec5YpE91", "number": 6199, "title": "Inconsistent output of HeteroLinear when '\"is_sorted=False\"", "user": {"login": "toenshoff", "id": 15213846, "node_id": "MDQ6VXNlcjE1MjEzODQ2", "avatar_url": "https://avatars.githubusercontent.com/u/15213846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toenshoff", "html_url": "https://github.com/toenshoff", "followers_url": "https://api.github.com/users/toenshoff/followers", "following_url": "https://api.github.com/users/toenshoff/following{/other_user}", "gists_url": "https://api.github.com/users/toenshoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/toenshoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toenshoff/subscriptions", "organizations_url": "https://api.github.com/users/toenshoff/orgs", "repos_url": "https://api.github.com/users/toenshoff/repos", "events_url": "https://api.github.com/users/toenshoff/events{/privacy}", "received_events_url": "https://api.github.com/users/toenshoff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-12-09T17:49:05Z", "updated_at": "2022-12-12T06:59:43Z", "closed_at": "2022-12-12T06:59:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nHey,\r\n\r\nwhile working with the HeteroLinear Module we observed some unexpected output behavior when using the \"is_sorted=False\" option.\r\n\r\nSpecifically, when pyg-lib is installed the forward pass of HeteroLinear internally sorts the vertices by type before before applying its transformation. However, the original vertex ordering is not restored before the output is returned. Instead, the updated vertex embeddings are returned in a new order sorted by type.\r\nThis seems like undesirable output behavior, since the permutation of the sorting is not returned and can also not be safely recovered by the user as the used sorting method is not stable.\r\n\r\nImportantly, this change in vertex order does not happen when pyg-lib is not installed, since then no sorting is used in the forward pass. Therefore, this behavior is inconsistent between different installations.\r\n\r\nHere is a minimal example to reproduce this:\r\n\r\n```python\r\nimport torch\r\nfrom torch_geometric.nn import HeteroLinear\r\n\r\nlin = HeteroLinear(1, 1, num_types=2, bias=False, is_sorted=False)\r\n\r\nx = torch.tensor([0.0, 1.0, 0.0]).view(-1, 1)\r\ntype_vec = torch.tensor([0, 1, 0])\r\n\r\ny = lin(x, type_vec)\r\nprint(y.detach().flatten().numpy())\r\n```\r\nWith pyg-lib installed we obtain:\r\n```\r\n[ 0.          0.         -0.76703763]\r\n```\r\n\r\nWithout pyg-lib installed we obtain:\r\n```\r\n[0.         0.58155024 0.        ]\r\n```\r\n\r\nNote that we did not fix a seed here, but crucially the order of the output is different in each case.\r\n\r\nIf this behavior is intended, it should be clearly specified in the documentation.\r\nOtherwise, we have created a pull request (https://github.com/pyg-team/pytorch_geometric/pull/6198) which returns nodes to their original order when pyg-lib is installed and \"is_sorted=False\": \r\n\r\nKind Regards,\r\nJan\r\n\r\n### Environment\r\n\r\n* PyG version: 2.2.0\r\n* PyTorch version: 1.13.0\r\n* OS: Ubuntu 22.04 LTS\r\n* Python version: 3.10\r\n* CUDA/cuDNN version: 11.7\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):  pyg-lib-0.1.0 was installed\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6199/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6198", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6198/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6198/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6198/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6198", "id": 1487157760, "node_id": "PR_kwDOBlHMec5E7Ynr", "number": 6198, "title": "Restore correct order in the output of `HeteroLinear` in case of `is_sorted=False`", "user": {"login": "toenshoff", "id": 15213846, "node_id": "MDQ6VXNlcjE1MjEzODQ2", "avatar_url": "https://avatars.githubusercontent.com/u/15213846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toenshoff", "html_url": "https://github.com/toenshoff", "followers_url": "https://api.github.com/users/toenshoff/followers", "following_url": "https://api.github.com/users/toenshoff/following{/other_user}", "gists_url": "https://api.github.com/users/toenshoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/toenshoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toenshoff/subscriptions", "organizations_url": "https://api.github.com/users/toenshoff/orgs", "repos_url": "https://api.github.com/users/toenshoff/repos", "events_url": "https://api.github.com/users/toenshoff/events{/privacy}", "received_events_url": "https://api.github.com/users/toenshoff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "toenshoff", "id": 15213846, "node_id": "MDQ6VXNlcjE1MjEzODQ2", "avatar_url": "https://avatars.githubusercontent.com/u/15213846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toenshoff", "html_url": "https://github.com/toenshoff", "followers_url": "https://api.github.com/users/toenshoff/followers", "following_url": "https://api.github.com/users/toenshoff/following{/other_user}", "gists_url": "https://api.github.com/users/toenshoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/toenshoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toenshoff/subscriptions", "organizations_url": "https://api.github.com/users/toenshoff/orgs", "repos_url": "https://api.github.com/users/toenshoff/repos", "events_url": "https://api.github.com/users/toenshoff/events{/privacy}", "received_events_url": "https://api.github.com/users/toenshoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "toenshoff", "id": 15213846, "node_id": "MDQ6VXNlcjE1MjEzODQ2", "avatar_url": "https://avatars.githubusercontent.com/u/15213846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toenshoff", "html_url": "https://github.com/toenshoff", "followers_url": "https://api.github.com/users/toenshoff/followers", "following_url": "https://api.github.com/users/toenshoff/following{/other_user}", "gists_url": "https://api.github.com/users/toenshoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/toenshoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toenshoff/subscriptions", "organizations_url": "https://api.github.com/users/toenshoff/orgs", "repos_url": "https://api.github.com/users/toenshoff/repos", "events_url": "https://api.github.com/users/toenshoff/events{/privacy}", "received_events_url": "https://api.github.com/users/toenshoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-12-09T17:45:22Z", "updated_at": "2022-12-12T06:59:42Z", "closed_at": "2022-12-12T06:59:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6198", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6198", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6198.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6198.patch", "merged_at": "2022-12-12T06:59:42Z"}, "body": "If \"is_sorted=False\", the output of the forward pass will be unsorted to the original vertex order of the input.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6198/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6192", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6192/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6192/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6192/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6192", "id": 1486238675, "node_id": "PR_kwDOBlHMec5E4Loh", "number": 6192, "title": "Fix `num_nodes` computation in `FeatureStore`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}, {"id": 4871834239, "node_id": "LA_kwDOBlHMec8AAAABImJKfw", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/sampler", "name": "sampler", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-12-09T07:41:10Z", "updated_at": "2022-12-09T07:45:02Z", "closed_at": "2022-12-09T07:45:01Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6192", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6192", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6192.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6192.patch", "merged_at": "2022-12-09T07:45:01Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6192/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6185", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6185/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6185/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6185/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6185", "id": 1484713136, "node_id": "I_kwDOBlHMec5Yfuyw", "number": 6185, "title": "AttributeError: 'function' object has no attribute 'compatibility'", "user": {"login": "LaurentBerder", "id": 19341543, "node_id": "MDQ6VXNlcjE5MzQxNTQz", "avatar_url": "https://avatars.githubusercontent.com/u/19341543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LaurentBerder", "html_url": "https://github.com/LaurentBerder", "followers_url": "https://api.github.com/users/LaurentBerder/followers", "following_url": "https://api.github.com/users/LaurentBerder/following{/other_user}", "gists_url": "https://api.github.com/users/LaurentBerder/gists{/gist_id}", "starred_url": "https://api.github.com/users/LaurentBerder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LaurentBerder/subscriptions", "organizations_url": "https://api.github.com/users/LaurentBerder/orgs", "repos_url": "https://api.github.com/users/LaurentBerder/repos", "events_url": "https://api.github.com/users/LaurentBerder/events{/privacy}", "received_events_url": "https://api.github.com/users/LaurentBerder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-12-08T14:04:19Z", "updated_at": "2022-12-13T12:27:20Z", "closed_at": "2022-12-13T12:27:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nHi,\r\n\r\nI'm beginning to discover your package, and enjoying your nicely done documentation, and tutorial videos on youtube.\r\n\r\nI was quite interested in the video on Heterogeneous graph learning, but I somehow can't reproduce part of the code.\r\n\r\nSpecifically, the part that doesn't work is the transformation of a homogeneous model to hetero:\r\n\r\n```python\r\nimport torch_geometric.transforms as T\r\nfrom torch_geometric.datasets import OGB_MAG\r\nfrom torch_geometric.nn import SAGEConv, to_hetero\r\n\r\n\r\ndataset = OGB_MAG(root='./data', preprocess='metapath2vec', transform=T.ToUndirected())\r\ndata = dataset[0]\r\n\r\nclass GNN(torch.nn.Module):\r\n    def __init__(self, hidden_channels, out_channels):\r\n        super().__init__()\r\n        self.conv1 = SAGEConv((-1, -1), hidden_channels)\r\n        self.conv2 = SAGEConv((-1, -1), out_channels)\r\n\r\n    def forward(self, x, edge_index):\r\n        x = self.conv1(x, edge_index).relu()\r\n        x = self.conv2(x, edge_index)\r\n        return x\r\n\r\n\r\nmodel = GNN(hidden_channels=64, out_channels=dataset.num_classes)\r\nmodel = to_hetero(model, data.metadata(), aggr='sum')\r\n```\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-131-7012c91bda3b> in <module>\r\n     20 \r\n     21 model = GNN(hidden_channels=64, out_channels=dataset.num_classes)\r\n---> 22 model = to_hetero(model, data.metadata(), aggr='sum')\r\n\r\n/srv/dataiku/data/code-envs/python/P3_7-ETX-0_1-Torch/lib/python3.7/site-packages/torch_geometric/nn/to_hetero_transformer.py in to_hetero(module, metadata, aggr, input_map, debug)\r\n    116             transformation in debug mode. (default: :obj:`False`)\r\n    117     \"\"\"\r\n--> 118     transformer = ToHeteroTransformer(module, metadata, aggr, input_map, debug)\r\n    119     return transformer.transform()\r\n    120 \r\n\r\n/srv/dataiku/data/code-envs/python/P3_7-ETX-0_1-Torch/lib/python3.7/site-packages/torch_geometric/nn/to_hetero_transformer.py in __init__(self, module, metadata, aggr, input_map, debug)\r\n    140         debug: bool = False,\r\n    141     ):\r\n--> 142         super().__init__(module, input_map, debug)\r\n    143 \r\n    144         self.metadata = metadata\r\n\r\n/srv/dataiku/data/code-envs/python/P3_7-ETX-0_1-Torch/lib/python3.7/site-packages/torch_geometric/nn/fx.py in __init__(self, module, input_map, debug)\r\n     71     ):\r\n     72         self.module = module\r\n---> 73         self.gm = symbolic_trace(module)\r\n     74         self.input_map = input_map\r\n     75         self.debug = debug\r\n\r\n/srv/dataiku/data/code-envs/python/P3_7-ETX-0_1-Torch/lib/python3.7/site-packages/torch_geometric/nn/fx.py in symbolic_trace(module, concrete_args)\r\n    270     from torch_geometric.nn import Aggregation\r\n    271 \r\n--> 272     class Tracer(torch.fx.Tracer):\r\n    273         def is_leaf_module(self, module: Module, *args, **kwargs) -> bool:\r\n    274             # TODO We currently only trace top-level modules.\r\n\r\n/srv/dataiku/data/code-envs/python/P3_7-ETX-0_1-Torch/lib/python3.7/site-packages/torch_geometric/nn/fx.py in Tracer()\r\n    280         # details on the rationale\r\n    281         # TODO: Revisit https://github.com/pyg-team/pytorch_geometric/pull/5021\r\n--> 282         @st.compatibility(is_backward_compatible=True)\r\n    283         def trace(self, root: st.Union[torch.nn.Module, st.Callable[..., Any]],\r\n    284                   concrete_args: Optional[Dict[str, Any]] = None) -> Graph:\r\n\r\nAttributeError: 'function' object has no attribute 'compatibility'\r\n``` \r\n\r\nIs that a problem of version? Because I know I'm using the exact same code as your example.\r\nI notice that there are some `TODO`s in the trace, and am wondering if it has anything to do with the errors.\r\n\r\n### Environment\r\n\r\n* PyG version: 2.2.0\r\n* PyTorch version: 1.9.1+cu111\r\n* OS: Ubuntu\r\n* Python version: 3.7\r\n* CUDA/cuDNN version: 11.1\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* torch-scatter version: 2.0.9\r\n* torch-cluster version: 1.5.9\r\n* torch-spline-conv: 1.2.1\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6185/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6183", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6183/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6183/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6183/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6183", "id": 1484255348, "node_id": "PR_kwDOBlHMec5ExMnI", "number": 6183, "title": "Fix type hint in DataLoader", "user": {"login": "edwag", "id": 3901193, "node_id": "MDQ6VXNlcjM5MDExOTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3901193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwag", "html_url": "https://github.com/edwag", "followers_url": "https://api.github.com/users/edwag/followers", "following_url": "https://api.github.com/users/edwag/following{/other_user}", "gists_url": "https://api.github.com/users/edwag/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwag/subscriptions", "organizations_url": "https://api.github.com/users/edwag/orgs", "repos_url": "https://api.github.com/users/edwag/repos", "events_url": "https://api.github.com/users/edwag/events{/privacy}", "received_events_url": "https://api.github.com/users/edwag/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}, {"id": 4611000169, "node_id": "LA_kwDOBlHMec8AAAABEtZHaQ", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/type%20hints", "name": "type hints", "color": "98DBFB", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "edwag", "id": 3901193, "node_id": "MDQ6VXNlcjM5MDExOTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3901193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwag", "html_url": "https://github.com/edwag", "followers_url": "https://api.github.com/users/edwag/followers", "following_url": "https://api.github.com/users/edwag/following{/other_user}", "gists_url": "https://api.github.com/users/edwag/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwag/subscriptions", "organizations_url": "https://api.github.com/users/edwag/orgs", "repos_url": "https://api.github.com/users/edwag/repos", "events_url": "https://api.github.com/users/edwag/events{/privacy}", "received_events_url": "https://api.github.com/users/edwag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "edwag", "id": 3901193, "node_id": "MDQ6VXNlcjM5MDExOTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3901193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwag", "html_url": "https://github.com/edwag", "followers_url": "https://api.github.com/users/edwag/followers", "following_url": "https://api.github.com/users/edwag/following{/other_user}", "gists_url": "https://api.github.com/users/edwag/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwag/subscriptions", "organizations_url": "https://api.github.com/users/edwag/orgs", "repos_url": "https://api.github.com/users/edwag/repos", "events_url": "https://api.github.com/users/edwag/events{/privacy}", "received_events_url": "https://api.github.com/users/edwag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-12-08T10:11:40Z", "updated_at": "2022-12-09T07:32:11Z", "closed_at": "2022-12-09T07:32:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6183", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6183", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6183.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6183.patch", "merged_at": "2022-12-09T07:32:11Z"}, "body": "Move from the invariant `List` generic to the covariant `Sequence` generic, to support passing a `List[Data]` or a `List[HeteroData]` to `DataLoader` without failing type checking.\r\n\r\nProposed fix for #6182 ", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6183/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6182", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6182/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6182/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6182/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6182", "id": 1484202248, "node_id": "I_kwDOBlHMec5YdyEI", "number": 6182, "title": "Possible incorrect type hint in DataLoader", "user": {"login": "edwag", "id": 3901193, "node_id": "MDQ6VXNlcjM5MDExOTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3901193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwag", "html_url": "https://github.com/edwag", "followers_url": "https://api.github.com/users/edwag/followers", "following_url": "https://api.github.com/users/edwag/following{/other_user}", "gists_url": "https://api.github.com/users/edwag/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwag/subscriptions", "organizations_url": "https://api.github.com/users/edwag/orgs", "repos_url": "https://api.github.com/users/edwag/repos", "events_url": "https://api.github.com/users/edwag/events{/privacy}", "received_events_url": "https://api.github.com/users/edwag/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-12-08T09:50:56Z", "updated_at": "2022-12-09T11:04:47Z", "closed_at": "2022-12-09T11:04:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nThe documentation for `torch_geometric.loader.DataLoader` says that \"Data objects can be either of type `torch_geometric.data.Data` or `torch_geometric.data.HeteroData`\". But if you pass a `List[Data]` or a `List[HeteroData]`  to `DataLoader`, your type checker will complain. \r\n\r\nFor example, Pylance complains about the final line of the following code (when configured with `\"python.analysis.typeCheckingMode\": \"basic\"`):\r\n\r\n```python\r\nfrom torch_geometric.data import Data\r\nfrom torch_geometric.loader import DataLoader\r\n\r\ndataset = [Data()]\r\nloader = DataLoader(dataset)\r\n```\r\n\r\nThe type hint for the `dataset` argument says that it has to be of type `Union[Dataset, List[BaseData]]` (this is line 63 of `torch_geometric/loader/dataloader.py`). The problem here is that the generic type `List` is invariant, so a `List[Data]` is _not_ a `List[BaseData]`.\r\n\r\nI suspect that the correct fix here is to change the type hint on `dataset` to use a _covariant_ type, probably `typing.Sequence`. `Sequence` certainly satisfies the type checker, since a `Sequence[Data]` _is_ a `Sequence[BaseData]`. A `Sequence` is supposed to be immutable, so this is definitely _not_ the right fix if the `dataset` list needs to be mutated, but I don't think it does?\n\n### Environment\n\nPylance version: 2022.11.40\r\nVSCode version: 1.73.1\r\nPython version: 3.9\r\nPyG version: 2.2.0", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6182/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6180", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6180/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6180/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6180/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6180", "id": 1483921538, "node_id": "PR_kwDOBlHMec5EwAjG", "number": 6180, "title": "Fix `timestamp is not None` check ", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}, {"id": 4871834239, "node_id": "LA_kwDOBlHMec8AAAABImJKfw", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/sampler", "name": "sampler", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-12-08T07:28:41Z", "updated_at": "2022-12-08T07:32:49Z", "closed_at": "2022-12-08T07:32:48Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6180", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6180", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6180.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6180.patch", "merged_at": "2022-12-08T07:32:48Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6180/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6164", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6164/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6164/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6164/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6164", "id": 1480905698, "node_id": "PR_kwDOBlHMec5ElS5e", "number": 6164, "title": "Infer correct CUDA device ID in `profileit` decorator", "user": {"login": "venomouscyanide", "id": 14299839, "node_id": "MDQ6VXNlcjE0Mjk5ODM5", "avatar_url": "https://avatars.githubusercontent.com/u/14299839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/venomouscyanide", "html_url": "https://github.com/venomouscyanide", "followers_url": "https://api.github.com/users/venomouscyanide/followers", "following_url": "https://api.github.com/users/venomouscyanide/following{/other_user}", "gists_url": "https://api.github.com/users/venomouscyanide/gists{/gist_id}", "starred_url": "https://api.github.com/users/venomouscyanide/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/venomouscyanide/subscriptions", "organizations_url": "https://api.github.com/users/venomouscyanide/orgs", "repos_url": "https://api.github.com/users/venomouscyanide/repos", "events_url": "https://api.github.com/users/venomouscyanide/events{/privacy}", "received_events_url": "https://api.github.com/users/venomouscyanide/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969902632, "node_id": "LA_kwDOBlHMec7sn-go", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/benchmark", "name": "benchmark", "color": "f9d0c4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "venomouscyanide", "id": 14299839, "node_id": "MDQ6VXNlcjE0Mjk5ODM5", "avatar_url": "https://avatars.githubusercontent.com/u/14299839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/venomouscyanide", "html_url": "https://github.com/venomouscyanide", "followers_url": "https://api.github.com/users/venomouscyanide/followers", "following_url": "https://api.github.com/users/venomouscyanide/following{/other_user}", "gists_url": "https://api.github.com/users/venomouscyanide/gists{/gist_id}", "starred_url": "https://api.github.com/users/venomouscyanide/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/venomouscyanide/subscriptions", "organizations_url": "https://api.github.com/users/venomouscyanide/orgs", "repos_url": "https://api.github.com/users/venomouscyanide/repos", "events_url": "https://api.github.com/users/venomouscyanide/events{/privacy}", "received_events_url": "https://api.github.com/users/venomouscyanide/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "venomouscyanide", "id": 14299839, "node_id": "MDQ6VXNlcjE0Mjk5ODM5", "avatar_url": "https://avatars.githubusercontent.com/u/14299839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/venomouscyanide", "html_url": "https://github.com/venomouscyanide", "followers_url": "https://api.github.com/users/venomouscyanide/followers", "following_url": "https://api.github.com/users/venomouscyanide/following{/other_user}", "gists_url": "https://api.github.com/users/venomouscyanide/gists{/gist_id}", "starred_url": "https://api.github.com/users/venomouscyanide/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/venomouscyanide/subscriptions", "organizations_url": "https://api.github.com/users/venomouscyanide/orgs", "repos_url": "https://api.github.com/users/venomouscyanide/repos", "events_url": "https://api.github.com/users/venomouscyanide/events{/privacy}", "received_events_url": "https://api.github.com/users/venomouscyanide/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-12-07T04:27:38Z", "updated_at": "2022-12-07T06:33:44Z", "closed_at": "2022-12-07T06:33:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6164", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6164", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6164.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6164.patch", "merged_at": "2022-12-07T06:33:44Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6164/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6161", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6161/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6161/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6161/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6161", "id": 1479754518, "node_id": "PR_kwDOBlHMec5EhLeN", "number": 6161, "title": "Render `nn.summary` correctly in the documentation", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-12-06T17:50:24Z", "updated_at": "2022-12-06T18:00:19Z", "closed_at": "2022-12-06T18:00:18Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6161", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6161", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6161.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6161.patch", "merged_at": "2022-12-06T18:00:18Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6161/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6160", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6160/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6160/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6160/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6160", "id": 1479720588, "node_id": "PR_kwDOBlHMec5EhDrm", "number": 6160, "title": "Downgrade CI tests to Python 3.7", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 1267385339, "node_id": "MDU6TGFiZWwxMjY3Mzg1MzM5", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/installation", "name": "installation", "color": "bfdadc", "default": false, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-12-06T17:35:41Z", "updated_at": "2022-12-06T17:42:43Z", "closed_at": "2022-12-06T17:42:43Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6160", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6160", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6160.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6160.patch", "merged_at": "2022-12-06T17:42:43Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6160/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6159", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6159/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6159/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6159/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6159", "id": 1479319500, "node_id": "PR_kwDOBlHMec5Efn5l", "number": 6159, "title": "Correctly use edge weights in `GDC` example", "user": {"login": "dongyukang1", "id": 95728473, "node_id": "U_kgDOBbSzWQ", "avatar_url": "https://avatars.githubusercontent.com/u/95728473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dongyukang1", "html_url": "https://github.com/dongyukang1", "followers_url": "https://api.github.com/users/dongyukang1/followers", "following_url": "https://api.github.com/users/dongyukang1/following{/other_user}", "gists_url": "https://api.github.com/users/dongyukang1/gists{/gist_id}", "starred_url": "https://api.github.com/users/dongyukang1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dongyukang1/subscriptions", "organizations_url": "https://api.github.com/users/dongyukang1/orgs", "repos_url": "https://api.github.com/users/dongyukang1/repos", "events_url": "https://api.github.com/users/dongyukang1/events{/privacy}", "received_events_url": "https://api.github.com/users/dongyukang1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017636777, "node_id": "LA_kwDOBlHMec7veEWp", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/example", "name": "example", "color": "27D88A", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "dongyukang1", "id": 95728473, "node_id": "U_kgDOBbSzWQ", "avatar_url": "https://avatars.githubusercontent.com/u/95728473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dongyukang1", "html_url": "https://github.com/dongyukang1", "followers_url": "https://api.github.com/users/dongyukang1/followers", "following_url": "https://api.github.com/users/dongyukang1/following{/other_user}", "gists_url": "https://api.github.com/users/dongyukang1/gists{/gist_id}", "starred_url": "https://api.github.com/users/dongyukang1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dongyukang1/subscriptions", "organizations_url": "https://api.github.com/users/dongyukang1/orgs", "repos_url": "https://api.github.com/users/dongyukang1/repos", "events_url": "https://api.github.com/users/dongyukang1/events{/privacy}", "received_events_url": "https://api.github.com/users/dongyukang1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dongyukang1", "id": 95728473, "node_id": "U_kgDOBbSzWQ", "avatar_url": "https://avatars.githubusercontent.com/u/95728473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dongyukang1", "html_url": "https://github.com/dongyukang1", "followers_url": "https://api.github.com/users/dongyukang1/followers", "following_url": "https://api.github.com/users/dongyukang1/following{/other_user}", "gists_url": "https://api.github.com/users/dongyukang1/gists{/gist_id}", "starred_url": "https://api.github.com/users/dongyukang1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dongyukang1/subscriptions", "organizations_url": "https://api.github.com/users/dongyukang1/orgs", "repos_url": "https://api.github.com/users/dongyukang1/repos", "events_url": "https://api.github.com/users/dongyukang1/events{/privacy}", "received_events_url": "https://api.github.com/users/dongyukang1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-12-06T15:02:07Z", "updated_at": "2022-12-07T06:24:37Z", "closed_at": "2022-12-07T06:24:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6159", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6159", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6159.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6159.patch", "merged_at": "2022-12-07T06:24:36Z"}, "body": "If you want to use GDC,you will find accuracy drop,because T.GDC( ) save the calculated edge weight in data.edge_ attr,not data.edge_weight.\r\n\r\nI directly change 'model(data.x, data.edge_index, data.edge_weight)' to 'model(data.x, data.edge_index, data.edge_attr)' in function train() and test().\r\nWhen data.edge_weight is None ,like Cora,it's right.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6159/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6154", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6154/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6154/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6154/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6154", "id": 1478187641, "node_id": "PR_kwDOBlHMec5EbqwR", "number": 6154, "title": "Add `inputs_channels` back in training benchmark", "user": {"login": "yanbing-j", "id": 61222868, "node_id": "MDQ6VXNlcjYxMjIyODY4", "avatar_url": "https://avatars.githubusercontent.com/u/61222868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanbing-j", "html_url": "https://github.com/yanbing-j", "followers_url": "https://api.github.com/users/yanbing-j/followers", "following_url": "https://api.github.com/users/yanbing-j/following{/other_user}", "gists_url": "https://api.github.com/users/yanbing-j/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanbing-j/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanbing-j/subscriptions", "organizations_url": "https://api.github.com/users/yanbing-j/orgs", "repos_url": "https://api.github.com/users/yanbing-j/repos", "events_url": "https://api.github.com/users/yanbing-j/events{/privacy}", "received_events_url": "https://api.github.com/users/yanbing-j/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969902632, "node_id": "LA_kwDOBlHMec7sn-go", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/benchmark", "name": "benchmark", "color": "f9d0c4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "yanbing-j", "id": 61222868, "node_id": "MDQ6VXNlcjYxMjIyODY4", "avatar_url": "https://avatars.githubusercontent.com/u/61222868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanbing-j", "html_url": "https://github.com/yanbing-j", "followers_url": "https://api.github.com/users/yanbing-j/followers", "following_url": "https://api.github.com/users/yanbing-j/following{/other_user}", "gists_url": "https://api.github.com/users/yanbing-j/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanbing-j/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanbing-j/subscriptions", "organizations_url": "https://api.github.com/users/yanbing-j/orgs", "repos_url": "https://api.github.com/users/yanbing-j/repos", "events_url": "https://api.github.com/users/yanbing-j/events{/privacy}", "received_events_url": "https://api.github.com/users/yanbing-j/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yanbing-j", "id": 61222868, "node_id": "MDQ6VXNlcjYxMjIyODY4", "avatar_url": "https://avatars.githubusercontent.com/u/61222868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanbing-j", "html_url": "https://github.com/yanbing-j", "followers_url": "https://api.github.com/users/yanbing-j/followers", "following_url": "https://api.github.com/users/yanbing-j/following{/other_user}", "gists_url": "https://api.github.com/users/yanbing-j/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanbing-j/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanbing-j/subscriptions", "organizations_url": "https://api.github.com/users/yanbing-j/orgs", "repos_url": "https://api.github.com/users/yanbing-j/repos", "events_url": "https://api.github.com/users/yanbing-j/events{/privacy}", "received_events_url": "https://api.github.com/users/yanbing-j/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-12-06T04:48:19Z", "updated_at": "2022-12-06T07:19:38Z", "closed_at": "2022-12-06T07:19:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6154", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6154", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6154.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6154.patch", "merged_at": "2022-12-06T07:19:38Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6154/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6153", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6153/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6153/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6153/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6153", "id": 1478114600, "node_id": "I_kwDOBlHMec5YGj0o", "number": 6153, "title": "What's the difference between the example directory and benchmark directory inside pytorhc_geometric", "user": {"login": "PPGGG", "id": 11624203, "node_id": "MDQ6VXNlcjExNjI0MjAz", "avatar_url": "https://avatars.githubusercontent.com/u/11624203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PPGGG", "html_url": "https://github.com/PPGGG", "followers_url": "https://api.github.com/users/PPGGG/followers", "following_url": "https://api.github.com/users/PPGGG/following{/other_user}", "gists_url": "https://api.github.com/users/PPGGG/gists{/gist_id}", "starred_url": "https://api.github.com/users/PPGGG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PPGGG/subscriptions", "organizations_url": "https://api.github.com/users/PPGGG/orgs", "repos_url": "https://api.github.com/users/PPGGG/repos", "events_url": "https://api.github.com/users/PPGGG/events{/privacy}", "received_events_url": "https://api.github.com/users/PPGGG/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-12-06T03:59:34Z", "updated_at": "2022-12-06T09:43:32Z", "closed_at": "2022-12-06T09:43:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "What's the difference between the example directory and benchmark directory inside pytorhc_geometric ? \r\n\r\nIt's seems that the model inside the `benchmark/kernel` is good enough to start a training process, except for the missing of dataset.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6153/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6126", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6126/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6126/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6126/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6126", "id": 1473932935, "node_id": "PR_kwDOBlHMec5EMvqM", "number": 6126, "title": "Fix CPU affinity test on machines with GPU devices", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-12-03T11:21:50Z", "updated_at": "2022-12-03T11:43:12Z", "closed_at": "2022-12-03T11:43:12Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6126", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6126", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6126.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6126.patch", "merged_at": "2022-12-03T11:43:12Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6126/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6120", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6120/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6120/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6120/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6120", "id": 1472543136, "node_id": "I_kwDOBlHMec5XxTmg", "number": 6120, "title": "Error \u2018Process finished with exit code 139 (interrupted by signal 11: SIGSEGV)' after updating the pytorch version", "user": {"login": "Jerry-jwz", "id": 61156501, "node_id": "MDQ6VXNlcjYxMTU2NTAx", "avatar_url": "https://avatars.githubusercontent.com/u/61156501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jerry-jwz", "html_url": "https://github.com/Jerry-jwz", "followers_url": "https://api.github.com/users/Jerry-jwz/followers", "following_url": "https://api.github.com/users/Jerry-jwz/following{/other_user}", "gists_url": "https://api.github.com/users/Jerry-jwz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jerry-jwz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jerry-jwz/subscriptions", "organizations_url": "https://api.github.com/users/Jerry-jwz/orgs", "repos_url": "https://api.github.com/users/Jerry-jwz/repos", "events_url": "https://api.github.com/users/Jerry-jwz/events{/privacy}", "received_events_url": "https://api.github.com/users/Jerry-jwz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-12-02T09:09:20Z", "updated_at": "2022-12-02T09:24:46Z", "closed_at": "2022-12-02T09:24:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nAfter I updated torch from 1.10.0 to 1.12.1, and reinstall pyg following the guideline in pyg website:\r\n```\r\npip install pyg-lib torch-scatter torch-sparse torch-cluster torch-spline-conv torch-geometric -f https://data.pyg.org/whl/torch-1.12.0+cu113.html\r\n```\r\nI found that adding the code\r\n```python\r\nimport torch.geometric \r\n```\r\nto any scripts will trigger the following error message:\r\n```\r\nProcess finished with exit code 139 (interrupted by signal 11: SIGSEGV)\r\n```\r\n\r\nI guess there are some contradiction among the dependencies of different packages, but I don't know where the problem is. Hope anyone can help\uff01\r\n\r\n### Environment\r\n\r\n* PyG version:2.1.0\r\n* PyTorch version:1.12.1\r\n* OS:CentOS Linux release 7.9.2009 (Core)\r\n* Python version:3.8\r\n* CUDA/cuDNN version:11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):pip\r\n* torch_cluster:1.6.0\r\n* torch_scatter:2.0.9\r\n* torch_spline_conv:1.2.1\r\n* gcc & g++: 9.4.0\r\n\r\n\r\nOther useful information is listed below:\r\n```\r\nPyTorch version: 1.12.1+cu113\r\nIs debug build: False\r\nCUDA used to build PyTorch: 11.3\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: CentOS Linux release 7.9.2009 (Core) (x86_64)\r\nGCC version: (GCC) 8.3.1 20190311 (Red Hat 8.3.1-3)\r\nClang version: Could not collect\r\nCMake version: version 3.15.5\r\nLibc version: glibc-2.17\r\n\r\nPython version: 3.8.0 (default, Nov  6 2019, 21:49:08)  [GCC 7.3.0] (64-bit runtime)\r\nPython platform: Linux-3.10.0-1160.66.1.el7.x86_64-x86_64-with-glibc2.10\r\nIs CUDA available: True\r\nCUDA runtime version: 11.7.64\r\nCUDA_MODULE_LOADING set to: \r\nGPU models and configuration: \r\nGPU 0: NVIDIA GeForce RTX 3090\r\nGPU 1: NVIDIA GeForce RTX 3090\r\nGPU 2: NVIDIA GeForce RTX 3090\r\nGPU 3: NVIDIA GeForce RTX 3090\r\n\r\nNvidia driver version: 515.48.07\r\ncuDNN version: Could not collect\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\nIs XNNPACK available: True\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.23.3\r\n[pip3] pytorch-lightning==1.8.0.post1\r\n[pip3] torch==1.12.1+cu113\r\n[pip3] torch-cluster==1.6.0\r\n[pip3] torch-geometric==2.1.0.post1\r\n[pip3] torch-scatter==2.0.9\r\n[pip3] torch-sparse==0.6.13\r\n[pip3] torch-spline-conv==1.2.1\r\n[pip3] torchaudio==0.10.0\r\n[pip3] torchmetrics==0.10.2\r\n[pip3] torchvision==0.11.0\r\n[conda] blas                      1.0                         mkl    defaults\r\n[conda] mkl                       2019.0                      118    defaults\r\n[conda] mkl-service               1.1.2            py37h90e4bf4_5    defaults\r\n[conda] mkl_fft                   1.0.4            py37h4414c95_1    defaults\r\n[conda] mkl_random                1.0.1            py37h4414c95_1    defaults\r\n[conda] numpy                     1.15.1           py37h1d66e8a_0    defaults\r\n[conda] numpy-base                1.15.1           py37h81de0dd_0    defaults\r\n[conda] numpydoc                  0.8.0                    py37_0    defaults\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6120/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6110", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6110/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6110/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6110/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6110", "id": 1470984885, "node_id": "I_kwDOBlHMec5XrXK1", "number": 6110, "title": "index_select does not select data.y subset", "user": {"login": "j-adamczyk", "id": 50807718, "node_id": "MDQ6VXNlcjUwODA3NzE4", "avatar_url": "https://avatars.githubusercontent.com/u/50807718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j-adamczyk", "html_url": "https://github.com/j-adamczyk", "followers_url": "https://api.github.com/users/j-adamczyk/followers", "following_url": "https://api.github.com/users/j-adamczyk/following{/other_user}", "gists_url": "https://api.github.com/users/j-adamczyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/j-adamczyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j-adamczyk/subscriptions", "organizations_url": "https://api.github.com/users/j-adamczyk/orgs", "repos_url": "https://api.github.com/users/j-adamczyk/repos", "events_url": "https://api.github.com/users/j-adamczyk/events{/privacy}", "received_events_url": "https://api.github.com/users/j-adamczyk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2022-12-01T09:36:07Z", "updated_at": "2023-01-04T14:13:05Z", "closed_at": "2022-12-30T17:51:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nI am trying to extract subsets of graphs and `y` vector for graph classification. However, it seems like `.index_select()` does not select subset of `y` vector.\r\n\r\nUsing OGB for data loading:\r\n```\r\nfrom ogb.graphproppred import PygGraphPropPredDataset\r\n\r\n\r\ndataset = PygGraphPropPredDataset(name=\"ogbg-molhiv\")\r\nsplits_idxs = dataset.get_idx_split()\r\n\r\ntrain = dataset.index_select(splits_idxs[\"train\"])\r\nvalid = dataset.index_select(splits_idxs[\"valid\"])\r\ntest = dataset.index_select(splits_idxs[\"test\"])\r\n\r\ntrain_num_graphs = len([None for _ in train])\r\nvalid_num_graphs = len([None for _ in valid])\r\ntest_num_graphs = len([None for _ in test])\r\n\r\nprint(train_num_graphs, len(train.data.y))\r\nprint(valid_num_graphs, len(valid.data.y))\r\nprint(test_num_graphs, len(test.data.y))\r\n```\r\n\r\nThis results in:\r\n```\r\n32901 41127\r\n4113 41127\r\n4113 41127\r\n```\r\n\r\nDoing this manually works:\r\n```\r\ntrain = dataset.index_select(splits_idxs[\"train\"])\r\ny_train = train.data.y[splits_idxs[\"train\"]]\r\n\r\nvalid = dataset.index_select(splits_idxs[\"valid\"])\r\ny_valid = valid.data.y[splits_idxs[\"valid\"]]\r\n\r\ntest = dataset.index_select(splits_idxs[\"test\"])\r\ny_test = test.data.y[splits_idxs[\"test\"]]\r\n\r\ntrain_num_graphs = len([None for _ in train])\r\nvalid_num_graphs = len([None for _ in valid])\r\ntest_num_graphs = len([None for _ in test])\r\n\r\nprint(train_num_graphs, len(y_train))\r\nprint(valid_num_graphs, len(y_valid))\r\nprint(test_num_graphs, len(y_test))\r\n```\r\n\r\nOutput:\r\n```\r\n32901 32901\r\n4113 4113\r\n4113 4113\r\n```\r\n\r\n### Environment\r\n\r\n* PyG version: 2.2.0\r\n* PyTorch version: 1.13.0+cpu\r\n* OS: Ubuntu 20.04\r\n* Python version: 3.9.15\r\n* CUDA/cuDNN version: -\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): OGB version 1.3.5\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6110/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6103", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6103/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6103/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6103/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6103", "id": 1470413778, "node_id": "I_kwDOBlHMec5XpLvS", "number": 6103, "title": "index out of range while using to_dense_batch", "user": {"login": "konyul", "id": 70498916, "node_id": "MDQ6VXNlcjcwNDk4OTE2", "avatar_url": "https://avatars.githubusercontent.com/u/70498916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/konyul", "html_url": "https://github.com/konyul", "followers_url": "https://api.github.com/users/konyul/followers", "following_url": "https://api.github.com/users/konyul/following{/other_user}", "gists_url": "https://api.github.com/users/konyul/gists{/gist_id}", "starred_url": "https://api.github.com/users/konyul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/konyul/subscriptions", "organizations_url": "https://api.github.com/users/konyul/orgs", "repos_url": "https://api.github.com/users/konyul/repos", "events_url": "https://api.github.com/users/konyul/events{/privacy}", "received_events_url": "https://api.github.com/users/konyul/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2022-12-01T00:31:02Z", "updated_at": "2022-12-03T10:53:55Z", "closed_at": "2022-12-01T16:51:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nWhen I use this function, I get index out of range error\r\n```python\r\npytorch_geometric.to_dense_batch\r\n\r\ndef to_dense_batch(x, batch,\r\n                   fill_value, max_num_nodes,\r\n                   batch_size):\r\n    r\"\"\"Given a sparse batch of node features\r\n    :math:`\\mathbf{X} \\in \\mathbb{R}^{(N_1 + \\ldots + N_B) \\times F}` (with\r\n    :math:`N_i` indicating the number of nodes in graph :math:`i`), creates a\r\n    dense node feature tensor\r\n    :math:`\\mathbf{X} \\in \\mathbb{R}^{B \\times N_{\\max} \\times F}` (with\r\n    :math:`N_{\\max} = \\max_i^B N_i`).\r\n    In addition, a mask of shape :math:`\\mathbf{M} \\in \\{ 0, 1 \\}^{B \\times\r\n    N_{\\max}}` is returned, holding information about the existence of\r\n    fake-nodes in the dense representation.\r\n\r\n    Args:\r\n        x (Tensor): Node feature matrix\r\n            :math:`\\mathbf{X} \\in \\mathbb{R}^{(N_1 + \\ldots + N_B) \\times F}`.\r\n        batch (LongTensor, optional): Batch vector\r\n            :math:`\\mathbf{b} \\in {\\{ 0, \\ldots, B-1\\}}^N`, which assigns each\r\n            node to a specific example. Must be ordered. (default: :obj:`None`)\r\n        fill_value (float, optional): The value for invalid entries in the\r\n            resulting dense output tensor. (default: :obj:`0`)\r\n        max_num_nodes (int, optional): The size of the output node dimension.\r\n            (default: :obj:`None`)\r\n        batch_size (int, optional) The batch size. (default: :obj:`None`)\r\n\r\n    :rtype: (:class:`Tensor`, :class:`BoolTensor`)\r\n    \"\"\"\r\n    if batch is None and max_num_nodes is None:\r\n        mask = torch.ones(1, x.size(0), dtype=torch.bool, device=x.device)\r\n        return x.unsqueeze(0), mask\r\n\r\n    if batch is None:\r\n        batch = x.new_zeros(x.size(0), dtype=torch.long)\r\n\r\n    if batch_size is None:\r\n        batch_size = int(batch.max()) + 1\r\n\r\n    num_nodes = scatter_add(batch.new_ones(x.size(0)), batch, dim=0)#,\r\n                            #dim_size=batch_size) # num_points_in_pillars\r\n    cum_nodes = torch.cat([batch.new_zeros(1), num_nodes.cumsum(dim=0)]) # num_nodes\uc758 \ucd95\uc801\uac12\r\n\r\n    if max_num_nodes is None:\r\n        max_num_nodes = int(num_nodes.max())\r\n    idx = torch.arange(batch.size(0), dtype=torch.long, device=x.device)\r\n    idx = (idx - cum_nodes[batch]) + (batch * max_num_nodes)\r\n\r\n    size = [batch_size * max_num_nodes] + list(x.size())[1:]\r\n    out = x.new_full(size, fill_value)\r\n    if idx.max() >= out.shape[0]:\r\n        import pdb;pdb.set_trace()\r\n    out[idx] = x\r\n\r\n    out = out.view([batch_size, max_num_nodes] + list(x.size())[1:])\r\n\r\n    mask = torch.zeros(batch_size * max_num_nodes, dtype=torch.bool,\r\n                       device=x.device)\r\n    mask[idx] = 1\r\n    mask = mask.view(batch_size, max_num_nodes)\r\n\r\n    return out, mask\r\n```\r\nidx.max() exceeds the shape of out.\r\n\r\nthis happens intermittently.\r\n\r\n![image](https://user-images.githubusercontent.com/70498916/204937007-1671c0b8-0f79-48b7-96e7-66b267e13f47.png)\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6103/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6076", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6076/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6076/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6076/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6076", "id": 1465247874, "node_id": "I_kwDOBlHMec5XVeiC", "number": 6076, "title": "ModuleNotFoundError: No module named 'torch_geometric.explain'", "user": {"login": "yhliu2022", "id": 112567657, "node_id": "U_kgDOBrWlaQ", "avatar_url": "https://avatars.githubusercontent.com/u/112567657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yhliu2022", "html_url": "https://github.com/yhliu2022", "followers_url": "https://api.github.com/users/yhliu2022/followers", "following_url": "https://api.github.com/users/yhliu2022/following{/other_user}", "gists_url": "https://api.github.com/users/yhliu2022/gists{/gist_id}", "starred_url": "https://api.github.com/users/yhliu2022/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yhliu2022/subscriptions", "organizations_url": "https://api.github.com/users/yhliu2022/orgs", "repos_url": "https://api.github.com/users/yhliu2022/repos", "events_url": "https://api.github.com/users/yhliu2022/events{/privacy}", "received_events_url": "https://api.github.com/users/yhliu2022/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-26T20:24:04Z", "updated_at": "2022-11-26T20:26:35Z", "closed_at": "2022-11-26T20:26:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI can import other modules, such as \r\n\r\nimport torch_geometric.transforms as T\r\nfrom torch_geometric.datasets import Planetoid\r\nfrom torch_geometric.nn import GCNConv\r\n\r\nBut, when I try:\r\n\r\nfrom torch_geometric.explain import Explainer, GNNExplainer\r\n\r\nI got this error\r\n\r\n\n\n### Environment\n\n* PyG version:\r\n* PyTorch version: 1.13\r\n* OS:\r\n* Python version: 3.8\r\n* CUDA/cuDNN version: 11.7\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* conda install pyg -c pyg\r\n* pip install torch-scatter -f https://data.pyg.org/whl/torch-1.13.0+cu117.html\r\n* pip install torch-sparse -f https://data.pyg.org/whl/torch-1.13.0+cu117.html\r\n* pip install torch-geometric\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6076/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6071", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6071/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6071/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6071/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6071", "id": 1464899476, "node_id": "PR_kwDOBlHMec5DugFA", "number": 6071, "title": "Fix `worker_init_fn` duplicate keyword argument", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-11-25T20:07:35Z", "updated_at": "2022-11-25T20:52:04Z", "closed_at": "2022-11-25T20:52:03Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6071", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6071", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6071.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6071.patch", "merged_at": "2022-11-25T20:52:03Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6071/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6070", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6070/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6070/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6070/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6070", "id": 1464895043, "node_id": "PR_kwDOBlHMec5DufJS", "number": 6070, "title": "Fix training benchmark `device` issue", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969902632, "node_id": "LA_kwDOBlHMec7sn-go", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/benchmark", "name": "benchmark", "color": "f9d0c4", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-11-25T19:59:35Z", "updated_at": "2022-12-06T09:51:01Z", "closed_at": "2022-11-25T20:02:07Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6070", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6070", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6070.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6070.patch", "merged_at": "2022-11-25T20:02:07Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6070/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6044", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6044/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6044/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6044/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6044", "id": 1462158239, "node_id": "PR_kwDOBlHMec5DlWRz", "number": 6044, "title": "Move `HeteroData` type warnings to `to_hetero()`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-11-23T17:38:29Z", "updated_at": "2022-11-23T17:56:20Z", "closed_at": "2022-11-23T17:56:19Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6044", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6044", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6044.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6044.patch", "merged_at": "2022-11-23T17:56:19Z"}, "body": "The current warnings are too restrictive for `HeteroData` as they are only needed for `to_hetero()`.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6044/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6043", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6043/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6043/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6043/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6043", "id": 1461993683, "node_id": "PR_kwDOBlHMec5DkyTX", "number": 6043, "title": "Minor fix for `mask_feature`", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}, {"id": 4601575641, "node_id": "LA_kwDOBlHMec8AAAABEkZ42Q", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/utils", "name": "utils", "color": "DBC48C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-11-23T15:47:22Z", "updated_at": "2022-11-23T16:01:14Z", "closed_at": "2022-11-23T16:01:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/6043", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/6043", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/6043.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/6043.patch", "merged_at": "2022-11-23T16:01:13Z"}, "body": "A careless error - it should be `rand_like` instead of `randn_like`.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6043/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6037", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6037/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6037/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6037/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6037", "id": 1460056678, "node_id": "I_kwDOBlHMec5XBrJm", "number": 6037, "title": "get_mesh_laplacian: summation row-wise is non-zero", "user": {"login": "xieweiyi", "id": 20675588, "node_id": "MDQ6VXNlcjIwNjc1NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/20675588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xieweiyi", "html_url": "https://github.com/xieweiyi", "followers_url": "https://api.github.com/users/xieweiyi/followers", "following_url": "https://api.github.com/users/xieweiyi/following{/other_user}", "gists_url": "https://api.github.com/users/xieweiyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/xieweiyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xieweiyi/subscriptions", "organizations_url": "https://api.github.com/users/xieweiyi/orgs", "repos_url": "https://api.github.com/users/xieweiyi/repos", "events_url": "https://api.github.com/users/xieweiyi/events{/privacy}", "received_events_url": "https://api.github.com/users/xieweiyi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-11-22T15:09:33Z", "updated_at": "2023-02-27T12:46:15Z", "closed_at": "2023-02-27T12:46:15Z", "author_association": "NONE", "active_lock_reason": null, "body": " #4187  \r\n\r\nrow-wise summation of the laplacian matrix computed by get_mesh_laplacian is non-zero.\r\n\r\n```\r\nfrom torch_geometric.data import Data\r\nfrom torch_geometric.utils import get_mesh_laplacian\r\nface = torch.tensor([[0, 2, 3, 0], [1, 1, 2, 2], [2, 4, 4, 3]], dtype=torch.long)\r\npos = torch.tensor([[0, 1, 0], [1, 0, 0], [1, 1, 0], [1, 2, 0], [2, 1, 0]], dtype=torch.float)\r\n\r\ndata = Data(pos=pos, face=face)\r\nedge_index, edge_weights = get_mesh_laplacian(data.pos, data.face)\r\nrow, col = edge_index\r\nrow_wise_sum = scatter_add(edge_weights, row, dim=0, dim_size=5)\r\nassert torch.all(row_wise_sum == 0), \"row_wise summation is non_zero\"\r\n```\r\n\r\n### Environment\r\n\r\n* PyG version: 2.1.0.post1\r\n* PyTorch version: 1.12.1\r\n* OS: windows 11\r\n* Python version: 3.9\r\n* CUDA/cuDNN version: cpu\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* torch-scatter: 2.0.9\r\n* torch-sparse: 0.6.15\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6037/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6032", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6032/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6032/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6032/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6032", "id": 1459315522, "node_id": "I_kwDOBlHMec5W-2NC", "number": 6032, "title": "CUDA error: initialization error CUDA kernel errors might be asynchronously reported at some other API call", "user": {"login": "LukeLIN-web", "id": 60426396, "node_id": "MDQ6VXNlcjYwNDI2Mzk2", "avatar_url": "https://avatars.githubusercontent.com/u/60426396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukeLIN-web", "html_url": "https://github.com/LukeLIN-web", "followers_url": "https://api.github.com/users/LukeLIN-web/followers", "following_url": "https://api.github.com/users/LukeLIN-web/following{/other_user}", "gists_url": "https://api.github.com/users/LukeLIN-web/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukeLIN-web/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukeLIN-web/subscriptions", "organizations_url": "https://api.github.com/users/LukeLIN-web/orgs", "repos_url": "https://api.github.com/users/LukeLIN-web/repos", "events_url": "https://api.github.com/users/LukeLIN-web/events{/privacy}", "received_events_url": "https://api.github.com/users/LukeLIN-web/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-22T07:43:24Z", "updated_at": "2022-11-25T20:02:23Z", "closed_at": "2022-11-25T20:02:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nIt has been reported at https://github.com/pyg-team/pytorch_geometric/issues/5340 \r\nWhen I try [benchmark/training/training_benchmark](https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/training/training_benchmark.py) \r\nI also meet this problem : \r\n\r\nDataset: ogbn-mag\r\nConfiguration of ogbn-mag + edge_cnn not supported. Skipping.\r\nConfiguration of ogbn-mag + gat not supported. Skipping.\r\nConfiguration of ogbn-mag + gcn not supported. Skipping.\r\nConfiguration of ogbn-mag + pna not supported. Skipping.\r\nTraining bench for rgat:\r\n\r\nBatch size=512, Layers amount=2, Num_neighbors=[10, 10], Hidden features size=64, Sparse tensor=False\r\nRuntimeError: CUDA error: initialization error\r\nCUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.\r\nFor debugging consider passing CUDA_LAUNCH_BLOCKING=1.\r\n\r\n\r\n### Environment\r\n\r\n* PyG version:2.1.0.post1\r\n* PyTorch version:1.10.0\r\n* OS:Ubuntu 18.04.6 LTS\r\n* Python version:3.7.11\r\n* CUDA/cuDNN version:cu113\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip \r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): \r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6032/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6030", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6030/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6030/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6030/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6030", "id": 1458996616, "node_id": "I_kwDOBlHMec5W9oWI", "number": 6030, "title": "Ubuntu18.4 openMVG+openMVS", "user": {"login": "code110110", "id": 100213224, "node_id": "U_kgDOBfkh6A", "avatar_url": "https://avatars.githubusercontent.com/u/100213224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/code110110", "html_url": "https://github.com/code110110", "followers_url": "https://api.github.com/users/code110110/followers", "following_url": "https://api.github.com/users/code110110/following{/other_user}", "gists_url": "https://api.github.com/users/code110110/gists{/gist_id}", "starred_url": "https://api.github.com/users/code110110/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/code110110/subscriptions", "organizations_url": "https://api.github.com/users/code110110/orgs", "repos_url": "https://api.github.com/users/code110110/repos", "events_url": "https://api.github.com/users/code110110/events{/privacy}", "received_events_url": "https://api.github.com/users/code110110/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-22T03:51:01Z", "updated_at": "2022-11-22T04:19:05Z", "closed_at": "2022-11-22T04:19:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nwhen trying to setup openMVG on my ubuntu18.4\r\n passed Cmake -DCMAKE_BUILD_TYPE=RELEASE ../src/\r\nbut when Cmake --build . --target install\r\nwill return the  error:\r\n[ 42%]\r\n#error The SparseCholesky module has nothing to offer in MPL2 only mode\u3002\u3002\u3002\r\nerror: \u2018AMDOrdering\u2019 does not name a type; did you mean \u2018COLAMDOrdering\u2019?\r\ntemplate<typename _MatrixType, int _UpLo = Lower, typename _Ordering = AMDOrdering<typename _MatrixType::StorageIndex> > class SimplicialLLT;\u3002\u3002\r\nerror: expected \u2018>\u2019 before \u2018<\u2019 token\r\ntemplate<typename _MatrixType, int _UpLo = Lower, typename _Ordering = AMDOrdering<typename _MatrixType::StorageIndex> > class SimplicialLLT;\r\nerror: \u2018AMDOrdering\u2019 does not name a type; did you mean \u2018COLAMDOrdering\u2019?\r\ntemplate<typename _MatrixType, int _UpLo = Lower, typename _Ordering = AMDOrdering<typename _MatrixType::StorageIndex> > class SimplicialLD\r\n\r\nsome other methods notice my Engin version doesn't match but I checked my Engin version is 3.3.4 should match the need.\r\nso I can't solve the problem , please someone help me.\n\n### Environment\n\n\r\n* PyTorch version:\r\n* OS: ubuntu 18.4\r\n* Python version: base environment 2.7\r\n* CUDA/cuDNN version:cuda 11.8/8.3\r\n*\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6030/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6022", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6022/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6022/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6022/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6022", "id": 1457244125, "node_id": "I_kwDOBlHMec5W28fd", "number": 6022, "title": "Problems in importing dataset", "user": {"login": "vegetablelearning", "id": 100191632, "node_id": "U_kgDOBfjNkA", "avatar_url": "https://avatars.githubusercontent.com/u/100191632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vegetablelearning", "html_url": "https://github.com/vegetablelearning", "followers_url": "https://api.github.com/users/vegetablelearning/followers", "following_url": "https://api.github.com/users/vegetablelearning/following{/other_user}", "gists_url": "https://api.github.com/users/vegetablelearning/gists{/gist_id}", "starred_url": "https://api.github.com/users/vegetablelearning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vegetablelearning/subscriptions", "organizations_url": "https://api.github.com/users/vegetablelearning/orgs", "repos_url": "https://api.github.com/users/vegetablelearning/repos", "events_url": "https://api.github.com/users/vegetablelearning/events{/privacy}", "received_events_url": "https://api.github.com/users/vegetablelearning/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-11-21T03:33:35Z", "updated_at": "2022-11-22T03:37:23Z", "closed_at": "2022-11-22T03:37:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nfrom torch_geometric.datasets import KarateClub\r\n\r\ndataset = KarateClub()\r\nprint(f'Dataset: {dataset}:')\r\nprint('---------------')\r\nprint(f'Number of graphs:{len(dataset)}')\r\n\r\n##When I import a dataset, it will report an error to me\uff0cthe error is \u2018TypeError: 'type' object is not subscriptable\u2019\uff0cI'm sure the ##version of the scatter sparse and other packages is correct\n\n### Environment\n\n* PyG version:2.1.0.post1\r\n* PyTorch version:1.6.0\r\n* OS:\r\n* Python version:3.7.1\r\n* CUDA/cuDNN version:10.1\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6022/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6020", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6020/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6020/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6020/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6020", "id": 1456839270, "node_id": "I_kwDOBlHMec5W1Zpm", "number": 6020, "title": "RandomNodeLoader missing in module", "user": {"login": "MohsenFazaeli", "id": 37497177, "node_id": "MDQ6VXNlcjM3NDk3MTc3", "avatar_url": "https://avatars.githubusercontent.com/u/37497177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MohsenFazaeli", "html_url": "https://github.com/MohsenFazaeli", "followers_url": "https://api.github.com/users/MohsenFazaeli/followers", "following_url": "https://api.github.com/users/MohsenFazaeli/following{/other_user}", "gists_url": "https://api.github.com/users/MohsenFazaeli/gists{/gist_id}", "starred_url": "https://api.github.com/users/MohsenFazaeli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MohsenFazaeli/subscriptions", "organizations_url": "https://api.github.com/users/MohsenFazaeli/orgs", "repos_url": "https://api.github.com/users/MohsenFazaeli/repos", "events_url": "https://api.github.com/users/MohsenFazaeli/events{/privacy}", "received_events_url": "https://api.github.com/users/MohsenFazaeli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-11-20T09:53:27Z", "updated_at": "2022-11-22T11:36:33Z", "closed_at": "2022-11-22T11:36:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nRunning example  at\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/master/examples/ogbn_proteins_deepgcn.py\r\nline 8:\r\nfrom torch_geometric.loader import RandomNodeLoader\r\n\r\nraises following error: \r\nImportError: cannot import name 'RandomNodeLoader' from 'torch_geometric.loader'\r\n\r\nthe code runs after creating class locally. I could not locate the class in module. So, I decided to inform you.\r\n\r\nThank you helpfull repo.\n\n### Environment\n\n* PyG version: 2.1.0.post1\r\n* PyTorch version: 1.12.1\r\n* OS: win 10\r\n* Python version: 3.8\r\n* CUDA/cuDNN version: cpu \r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6020/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6017", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6017/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6017/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6017/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/6017", "id": 1456624958, "node_id": "I_kwDOBlHMec5W0lU-", "number": 6017, "title": "torch sparse CUDA error", "user": {"login": "yecohn", "id": 61619195, "node_id": "MDQ6VXNlcjYxNjE5MTk1", "avatar_url": "https://avatars.githubusercontent.com/u/61619195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yecohn", "html_url": "https://github.com/yecohn", "followers_url": "https://api.github.com/users/yecohn/followers", "following_url": "https://api.github.com/users/yecohn/following{/other_user}", "gists_url": "https://api.github.com/users/yecohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/yecohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yecohn/subscriptions", "organizations_url": "https://api.github.com/users/yecohn/orgs", "repos_url": "https://api.github.com/users/yecohn/repos", "events_url": "https://api.github.com/users/yecohn/events{/privacy}", "received_events_url": "https://api.github.com/users/yecohn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-11-19T19:09:41Z", "updated_at": "2022-11-23T21:29:01Z", "closed_at": "2022-11-23T21:29:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi everyone,\r\n\r\nI installed torch_sparse module, using: \r\n\r\n`conda install pytorch-sparse -c pyg -y\r\npip install torch-geometric \r\n`\r\n\r\n\r\nI am trying to run a simple GCN on a GPU and i am getting this issue: \r\n\r\n> >---------------------------------------------------------------------------\r\n> RuntimeError                              Traceback (most recent call last)\r\n> /tmp/ipykernel_5721/91717404.py in <module>\r\n>      11 \r\n>      12   for epoch in range(1, 1 + args[\"epochs\"]):\r\n> ---> 13     loss = train(model, data, train_idx, optimizer, loss_fn)\r\n>      14     result = test(model, data, split_idx, evaluator)\r\n>      15     train_acc, valid_acc, test_acc = result\r\n> \r\n> /tmp/ipykernel_5721/2336097427.py in train(model, data, train_idx, optimizer, loss_fn)\r\n>       3     # using the given optimizer and loss_fn.\r\n>       4     model.train()\r\n> ----> 5     input, adj, label = data.x[train_idx], data.adj_t[train_idx],  data.y[train_idx]\r\n>       6     output = model(input, adj)\r\n>       7     loss = loss_fn(output, label)\r\n> \r\n> ~/anaconda3/envs/drug_torch/lib/python3.8/site-packages/torch_sparse/tensor.py in __getitem__(self, index)\r\n>     583                 dim += 1\r\n>     584             elif item.dtype == torch.long:\r\n> --> 585                 out = out.index_select(dim, item)\r\n>     586                 dim += 1\r\n>     587         elif item == Ellipsis:\r\n> \r\n> ~/anaconda3/envs/drug_torch/lib/python3.8/site-packages/torch_sparse/index_select.py in <lambda>(self, dim, idx)\r\n>      96 \r\n> ...\r\n> --> 442         return self._op(*args, **kwargs or {})\r\n>     443 \r\n>     444     # TODO: use this to make a __dir__\r\n> \r\n> RuntimeError: Not compiled with CUDA support\r\n\r\n\r\nI tried different installation of torch sparse like so: \r\n```\r\npip install torch-scatter     -f https://pytorch-geometric.com/whl/torch-{TORCH}+{CUDA}.html\r\npip install torch-sparse      -f https://pytorch-geometric.com/whl/torch-{TORCH}+{CUDA}.html\r\npip install torch-cluster     -f https://pytorch-geometric.com/whl/torch-{TORCH}+{CUDA}.html\r\npip install torch-spline-conv -f https://pytorch-geometric.com/whl/torch-{TORCH}+{CUDA}.html\r\npip install torch-geometric \r\n```\r\nbut still obtain the same problem.\r\nI am using CUDA 11.7: \r\n\r\n> nvcc: NVIDIA (R) Cuda compiler driver\r\n> Copyright (c) 2005-2022 NVIDIA Corporation\r\n> Built on Wed_Jun__8_16:49:14_PDT_2022\r\n> Cuda compilation tools, release 11.7, V11.7.99\r\n> Build cuda_11.7.r11.7/compiler.31442593_0\r\n\r\n\r\nand pytorch 1.13.0\r\n\r\nHad anyone encontered this issue ? \r\n\r\nThanks\r\n\n\n### Environment\n\n* PyG version:\r\n* PyTorch version:\r\n* OS:\r\n* Python version:\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/6017/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5989", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5989/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5989/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5989/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5989", "id": 1450580828, "node_id": "I_kwDOBlHMec5Wdhtc", "number": 5989, "title": "latest update to linkneighborloader causes major oversamplinge", "user": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-11-16T00:08:39Z", "updated_at": "2022-11-16T17:18:18Z", "closed_at": "2022-11-16T17:18:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nI have no idea why but the clones added [here](https://github.com/pyg-team/pytorch_geometric/commit/c9608f124521b0121e02e8b2aed4efc89f34f633) causes major oversampling.\r\n\r\nExample:\r\n```\r\ndef pyg_num_work():\r\n    num_work = None\r\n    if hasattr(os, \"sched_getaffinity\"):\r\n        try:\r\n            num_work = len(os.sched_getaffinity(0)) / 2\r\n        except Exception:\r\n            pass\r\n    if num_work is None:\r\n        num_work = os.cpu_count() / 2\r\n    return int(num_work)\r\n\r\ndata = FakeHeteroDataset(avg_num_nodes=50000).data\r\n\r\nLinkNeighborLoader w/ batch_size=1024, num_neighbors=[50,50], num_workers=pyg_num_work()\r\n```\r\n\r\n->\r\n\r\n```\r\nFull graph:\r\nHeteroData(\r\n  targeted_edge_type=[3],\r\n  v0={\r\n    x=[58918, 79],\r\n    y=[58918]\r\n  },\r\n  v1={ x=[61489, 68] },\r\n  v2={ x=[54150, 53] },\r\n  (v1, e0, v0)={ edge_index=[2, 614829] },\r\n  (v2, e0, v0)={ edge_index=[2, 541453] },\r\n  (v2, e0, v1)={ edge_index=[2, 541465] },\r\n  (v2, e0, v2)={ edge_index=[2, 541451] },\r\n  (v0, e0, v0)={ edge_index=[2, 589139] },\r\n  (v0, e0, v2)={ edge_index=[2, 589135] }\r\n)\r\n\r\nMiniBatch:\r\nHeteroData(\r\n  targeted_edge_type=[3],\r\n  labeled_node_type='v0',\r\n  v0={\r\n    x=[58899, 79],\r\n    y=[58899],\r\n    num_nodes=58899,\r\n    n_id=[58899]\r\n  },\r\n  v1={\r\n    x=[58623, 68],\r\n    num_nodes=58623,\r\n    n_id=[58623]\r\n  },\r\n  v2={\r\n    x=[54135, 53],\r\n    num_nodes=54135,\r\n    n_id=[54135]\r\n  },\r\n  (v1, e0, v0)={\r\n    edge_index=[2, 905300],\r\n    e_id=[905300]\r\n  },\r\n  (v2, e0, v0)={\r\n    edge_index=[2, 905150],\r\n    e_id=[905150]\r\n  },\r\n  (v2, e0, v1)={\r\n    edge_index=[2, 100600],\r\n    e_id=[100600],\r\n    input_id=[1024],\r\n    edge_label_index=[2, 2048],\r\n    edge_label=[2048]\r\n  },\r\n  (v2, e0, v2)={\r\n    edge_index=[2, 1399400],\r\n    e_id=[1399400]\r\n  },\r\n  (v0, e0, v0)={\r\n    edge_index=[2, 905350],\r\n    e_id=[905350]\r\n  },\r\n  (v0, e0, v2)={\r\n    edge_index=[2, 1399550],\r\n    e_id=[1399550]\r\n  }\r\n)\r\n```\r\n\r\nThe error is occuring in one of the CI for our GNN tool using FakeHeteroDataset. Because we have ~2x more edges in the minibatch than in the full graph, we OOM on the first batch. Isolated repro attached in the comments below\r\n\r\n### Environment\r\n\r\nlatest github master branches for PyG and pyg-lib built from source\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5989/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5988", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5988/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5988/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5988/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5988", "id": 1449780077, "node_id": "PR_kwDOBlHMec5C7eBZ", "number": 5988, "title": "Fix `NeighborLoader` tests on Windows", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-11-15T13:23:42Z", "updated_at": "2022-11-15T13:29:16Z", "closed_at": "2022-11-15T13:29:15Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5988", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5988", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5988.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5988.patch", "merged_at": "2022-11-15T13:29:15Z"}, "body": "`pyg-lib` is not yet available on Windows, so `dtype` tests do not pass.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5988/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5978", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5978/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5978/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5978/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5978", "id": 1448707100, "node_id": "PR_kwDOBlHMec5C33HF", "number": 5978, "title": "Fix `LinkNeighborLoader` within `multiprocessing.spawn`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-11-14T20:30:35Z", "updated_at": "2022-11-14T20:34:46Z", "closed_at": "2022-11-14T20:34:45Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5978", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5978", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5978.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5978.patch", "merged_at": "2022-11-14T20:34:45Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5978/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5978/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5970", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5970/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5970/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5970/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5970", "id": 1447908627, "node_id": "PR_kwDOBlHMec5C1Jt9", "number": 5970, "title": "Fix docstring in `nn.ARGA`", "user": {"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-11-14T11:43:38Z", "updated_at": "2022-11-14T11:55:36Z", "closed_at": "2022-11-14T11:46:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5970", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5970", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5970.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5970.patch", "merged_at": "2022-11-14T11:46:13Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5970/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5969", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5969/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5969/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5969/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5969", "id": 1447704990, "node_id": "PR_kwDOBlHMec5C0dW0", "number": 5969, "title": "Fix typo in docs of `nn.ARGVA`", "user": {"login": "seemanne", "id": 3380606, "node_id": "MDQ6VXNlcjMzODA2MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/3380606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seemanne", "html_url": "https://github.com/seemanne", "followers_url": "https://api.github.com/users/seemanne/followers", "following_url": "https://api.github.com/users/seemanne/following{/other_user}", "gists_url": "https://api.github.com/users/seemanne/gists{/gist_id}", "starred_url": "https://api.github.com/users/seemanne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seemanne/subscriptions", "organizations_url": "https://api.github.com/users/seemanne/orgs", "repos_url": "https://api.github.com/users/seemanne/repos", "events_url": "https://api.github.com/users/seemanne/events{/privacy}", "received_events_url": "https://api.github.com/users/seemanne/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "seemanne", "id": 3380606, "node_id": "MDQ6VXNlcjMzODA2MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/3380606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seemanne", "html_url": "https://github.com/seemanne", "followers_url": "https://api.github.com/users/seemanne/followers", "following_url": "https://api.github.com/users/seemanne/following{/other_user}", "gists_url": "https://api.github.com/users/seemanne/gists{/gist_id}", "starred_url": "https://api.github.com/users/seemanne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seemanne/subscriptions", "organizations_url": "https://api.github.com/users/seemanne/orgs", "repos_url": "https://api.github.com/users/seemanne/repos", "events_url": "https://api.github.com/users/seemanne/events{/privacy}", "received_events_url": "https://api.github.com/users/seemanne/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "seemanne", "id": 3380606, "node_id": "MDQ6VXNlcjMzODA2MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/3380606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seemanne", "html_url": "https://github.com/seemanne", "followers_url": "https://api.github.com/users/seemanne/followers", "following_url": "https://api.github.com/users/seemanne/following{/other_user}", "gists_url": "https://api.github.com/users/seemanne/gists{/gist_id}", "starred_url": "https://api.github.com/users/seemanne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seemanne/subscriptions", "organizations_url": "https://api.github.com/users/seemanne/orgs", "repos_url": "https://api.github.com/users/seemanne/repos", "events_url": "https://api.github.com/users/seemanne/events{/privacy}", "received_events_url": "https://api.github.com/users/seemanne/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-11-14T09:32:06Z", "updated_at": "2022-11-14T09:36:03Z", "closed_at": "2022-11-14T09:36:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5969", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5969", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5969.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5969.patch", "merged_at": "2022-11-14T09:36:03Z"}, "body": "Fixes a small typo of the docstring of `nn.ARGVA`", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5969/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5957", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5957/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5957/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5957/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5957", "id": 1445642697, "node_id": "PR_kwDOBlHMec5Ctk0F", "number": 5957, "title": "add `num_nodes` to `filter_custom_store`", "user": {"login": "vid-koci", "id": 20406224, "node_id": "MDQ6VXNlcjIwNDA2MjI0", "avatar_url": "https://avatars.githubusercontent.com/u/20406224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vid-koci", "html_url": "https://github.com/vid-koci", "followers_url": "https://api.github.com/users/vid-koci/followers", "following_url": "https://api.github.com/users/vid-koci/following{/other_user}", "gists_url": "https://api.github.com/users/vid-koci/gists{/gist_id}", "starred_url": "https://api.github.com/users/vid-koci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vid-koci/subscriptions", "organizations_url": "https://api.github.com/users/vid-koci/orgs", "repos_url": "https://api.github.com/users/vid-koci/repos", "events_url": "https://api.github.com/users/vid-koci/events{/privacy}", "received_events_url": "https://api.github.com/users/vid-koci/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "vid-koci", "id": 20406224, "node_id": "MDQ6VXNlcjIwNDA2MjI0", "avatar_url": "https://avatars.githubusercontent.com/u/20406224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vid-koci", "html_url": "https://github.com/vid-koci", "followers_url": "https://api.github.com/users/vid-koci/followers", "following_url": "https://api.github.com/users/vid-koci/following{/other_user}", "gists_url": "https://api.github.com/users/vid-koci/gists{/gist_id}", "starred_url": "https://api.github.com/users/vid-koci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vid-koci/subscriptions", "organizations_url": "https://api.github.com/users/vid-koci/orgs", "repos_url": "https://api.github.com/users/vid-koci/repos", "events_url": "https://api.github.com/users/vid-koci/events{/privacy}", "received_events_url": "https://api.github.com/users/vid-koci/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "vid-koci", "id": 20406224, "node_id": "MDQ6VXNlcjIwNDA2MjI0", "avatar_url": "https://avatars.githubusercontent.com/u/20406224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vid-koci", "html_url": "https://github.com/vid-koci", "followers_url": "https://api.github.com/users/vid-koci/followers", "following_url": "https://api.github.com/users/vid-koci/following{/other_user}", "gists_url": "https://api.github.com/users/vid-koci/gists{/gist_id}", "starred_url": "https://api.github.com/users/vid-koci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vid-koci/subscriptions", "organizations_url": "https://api.github.com/users/vid-koci/orgs", "repos_url": "https://api.github.com/users/vid-koci/repos", "events_url": "https://api.github.com/users/vid-koci/events{/privacy}", "received_events_url": "https://api.github.com/users/vid-koci/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-11-11T15:34:24Z", "updated_at": "2022-11-12T00:19:20Z", "closed_at": "2022-11-11T17:15:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5957", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5957", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5957.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5957.patch", "merged_at": "2022-11-11T17:15:41Z"}, "body": "Resolve a bug where custom stores came without node_num information.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5957/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5921", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5921/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5921/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5921/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5921", "id": 1439655535, "node_id": "I_kwDOBlHMec5Vz2Zv", "number": 5921, "title": "ONNX exported model output different values.", "user": {"login": "huhk-sysu", "id": 14769033, "node_id": "MDQ6VXNlcjE0NzY5MDMz", "avatar_url": "https://avatars.githubusercontent.com/u/14769033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huhk-sysu", "html_url": "https://github.com/huhk-sysu", "followers_url": "https://api.github.com/users/huhk-sysu/followers", "following_url": "https://api.github.com/users/huhk-sysu/following{/other_user}", "gists_url": "https://api.github.com/users/huhk-sysu/gists{/gist_id}", "starred_url": "https://api.github.com/users/huhk-sysu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huhk-sysu/subscriptions", "organizations_url": "https://api.github.com/users/huhk-sysu/orgs", "repos_url": "https://api.github.com/users/huhk-sysu/repos", "events_url": "https://api.github.com/users/huhk-sysu/events{/privacy}", "received_events_url": "https://api.github.com/users/huhk-sysu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-11-08T07:42:02Z", "updated_at": "2022-11-17T09:11:05Z", "closed_at": "2022-11-16T12:27:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI export a model with ONNX, but its output is different from the one from pytorch model.\r\n\r\nHere's a simple code, modify from [test/nn/models/test_basic_gnn.py](https://github.com/pyg-team/pytorch_geometric/blob/master/test/nn/models/test_basic_gnn.py#L170-L203)\r\n\r\n```python\r\nimport torch\r\nimport onnx\r\nimport onnxruntime as ort\r\nfrom torch_geometric.nn import SAGEConv\r\nimport os\r\n\r\nclass MyModel(torch.nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.conv1 = SAGEConv(8, 16)\r\n        self.conv2 = SAGEConv(16, 16)\r\n\r\n    def forward(self, x, edge_index):\r\n        x = self.conv1(x, edge_index).relu()\r\n        x = self.conv2(x, edge_index)\r\n        return x\r\n\r\nmodel = MyModel()\r\nx = torch.randn(3, 8)\r\nedge_index = torch.tensor([[0, 1, 1, 2], [1, 0, 2, 1]])\r\n\r\ntorch_output = model(x, edge_index).detach().numpy()\r\n\r\ntorch.onnx.export(model, (x, edge_index), 'model.onnx',\r\n                    input_names=('x', 'edge_index'))\r\n\r\nmodel = onnx.load('model.onnx')\r\nonnx.checker.check_model(model)\r\n\r\nort_session = ort.InferenceSession('model.onnx')\r\n\r\nonnx_output = ort_session.run(None, {\r\n    'x': x.numpy(),\r\n    'edge_index': edge_index.numpy()\r\n})[0]\r\nassert onnx_output.shape == (3, 16)\r\n\r\n# it should be closed to 0\r\nprint(\"edge_index=\", edge_index)\r\nprint(\"difference=\", (onnx_output-torch_output).sum())\r\n\r\nos.remove('model.onnx')\r\n```\r\nAnd here's the output.\r\n```\r\nedge_index= tensor([[0, 1, 1, 2],\r\n        [1, 0, 2, 1]])\r\ndifference= -1.766824\r\n```\r\nThere may be something wrong related with `edge_index`, I have some trials and different `edge_index` come with different result.\r\nFor example, with `edge_index = torch.tensor([[0, 1, 1], [1, 0, 2]])` (remove the last edge), the output is closed to 0, which is  expected.\r\n```\r\nedge_index= tensor([[0, 1, 1],\r\n        [1, 0, 2]])\r\ndifference= -4.3958426e-07\r\n```\r\nHowever, with `edge_index = torch.tensor([[0, 1, 2], [1, 0, 0]])`, the difference is much larger.\r\n ```\r\nedge_index= tensor([[0, 1, 2],\r\n        [1, 0, 0]])\r\ndifference= -0.42195135\r\n```\n\n### Environment\n\n* PyG version: 2.1.0.post1\r\n* PyTorch version: 1.12.1\r\n* OS: Windows\r\n* Python version: 3.10.0\r\n* CUDA/cuDNN version: None(cpu)\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\ntorch-cluster==1.6.0\r\ntorch-scatter==2.0.9\r\ntorch-sparse==0.6.15\r\ntorch-spline-conv ==1.2.1", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5921/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5921/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5920", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5920/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5920/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5920/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5920", "id": 1439272346, "node_id": "PR_kwDOBlHMec5CX-G4", "number": 5920, "title": "Remove duplicated entry for `SEAL` in `README`", "user": {"login": "rfdavid", "id": 31427, "node_id": "MDQ6VXNlcjMxNDI3", "avatar_url": "https://avatars.githubusercontent.com/u/31427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfdavid", "html_url": "https://github.com/rfdavid", "followers_url": "https://api.github.com/users/rfdavid/followers", "following_url": "https://api.github.com/users/rfdavid/following{/other_user}", "gists_url": "https://api.github.com/users/rfdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfdavid/subscriptions", "organizations_url": "https://api.github.com/users/rfdavid/orgs", "repos_url": "https://api.github.com/users/rfdavid/repos", "events_url": "https://api.github.com/users/rfdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/rfdavid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rfdavid", "id": 31427, "node_id": "MDQ6VXNlcjMxNDI3", "avatar_url": "https://avatars.githubusercontent.com/u/31427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfdavid", "html_url": "https://github.com/rfdavid", "followers_url": "https://api.github.com/users/rfdavid/followers", "following_url": "https://api.github.com/users/rfdavid/following{/other_user}", "gists_url": "https://api.github.com/users/rfdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfdavid/subscriptions", "organizations_url": "https://api.github.com/users/rfdavid/orgs", "repos_url": "https://api.github.com/users/rfdavid/repos", "events_url": "https://api.github.com/users/rfdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/rfdavid/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rfdavid", "id": 31427, "node_id": "MDQ6VXNlcjMxNDI3", "avatar_url": "https://avatars.githubusercontent.com/u/31427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfdavid", "html_url": "https://github.com/rfdavid", "followers_url": "https://api.github.com/users/rfdavid/followers", "following_url": "https://api.github.com/users/rfdavid/following{/other_user}", "gists_url": "https://api.github.com/users/rfdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfdavid/subscriptions", "organizations_url": "https://api.github.com/users/rfdavid/orgs", "repos_url": "https://api.github.com/users/rfdavid/repos", "events_url": "https://api.github.com/users/rfdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/rfdavid/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-11-08T01:21:45Z", "updated_at": "2022-11-09T21:40:35Z", "closed_at": "2022-11-08T09:11:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5920", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5920", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5920.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5920.patch", "merged_at": "2022-11-08T09:11:07Z"}, "body": "This is a simple update to remove the duplicated entry for SEAL in the README file (line 292 and 299).", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5920/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5903", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5903/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5903/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5903/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5903", "id": 1436377469, "node_id": "PR_kwDOBlHMec5COe0Y", "number": 5903, "title": "Fix `cached_property` import on Python <3.8", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637023, "node_id": "LA_kwDOBlHMec7veEaf", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/dataset", "name": "dataset", "color": "7705B6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-11-04T16:58:34Z", "updated_at": "2022-11-05T07:04:04Z", "closed_at": "2022-11-05T07:04:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5903", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5903", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5903.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5903.patch", "merged_at": "2022-11-05T07:04:03Z"}, "body": "Related to https://github.com/pyg-team/pytorch_geometric/pull/5902, https://github.com/pyg-team/pytorch_geometric/pull/5537, https://github.com/pyg-team/pytorch_geometric/discussions/5901", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5903/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5902", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5902/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5902/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5902/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5902", "id": 1436348965, "node_id": "PR_kwDOBlHMec5COYze", "number": 5902, "title": "Fix `cached_property` import on Python 3.7", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637023, "node_id": "LA_kwDOBlHMec7veEaf", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/dataset", "name": "dataset", "color": "7705B6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2022-11-04T16:36:47Z", "updated_at": "2022-11-07T07:06:41Z", "closed_at": "2022-11-04T16:38:46Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5902", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5902", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5902.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5902.patch", "merged_at": "2022-11-04T16:38:46Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5902/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5891", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5891/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5891/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5891/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5891", "id": 1435125343, "node_id": "I_kwDOBlHMec5VikZf", "number": 5891, "title": "No node attributes 'x' for PROTEINS dataset", "user": {"login": "StevanStanovic", "id": 61746436, "node_id": "MDQ6VXNlcjYxNzQ2NDM2", "avatar_url": "https://avatars.githubusercontent.com/u/61746436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StevanStanovic", "html_url": "https://github.com/StevanStanovic", "followers_url": "https://api.github.com/users/StevanStanovic/followers", "following_url": "https://api.github.com/users/StevanStanovic/following{/other_user}", "gists_url": "https://api.github.com/users/StevanStanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/StevanStanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StevanStanovic/subscriptions", "organizations_url": "https://api.github.com/users/StevanStanovic/orgs", "repos_url": "https://api.github.com/users/StevanStanovic/repos", "events_url": "https://api.github.com/users/StevanStanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/StevanStanovic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-03T18:54:07Z", "updated_at": "2022-11-04T06:59:17Z", "closed_at": "2022-11-04T06:59:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHello,\r\n\r\nI downloaded and loaded the PROTEINS dataset with TUDataset class. The problem is that the node attributes 'x' are empty. Normally, each node represent a one hot encoder representing in which category the node is classified.\r\nThe problem occurs for PyG 2.1.0 and, for now, just for PROTEINS.\r\nThank you in advance for you answer.\r\n\r\nStevan\n\n### Environment\n\n* PyG version: 2.1.0\r\n* PyTorch version: 1.11.0\r\n* OS: linux ubuntu 20.04\r\n* Python version: 3.9.7\r\n* CUDA/cuDNN version: 11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda environment and pip install\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\ntorch-cluster      1.6.0\r\ntorch-scatter      2.0.9\r\ntorch-sparse       0.6.15\r\ntorch-spline-conv  1.2.1", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5891/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5876", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5876/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5876/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5876/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5876", "id": 1431788044, "node_id": "PR_kwDOBlHMec5B_Fnw", "number": 5876, "title": "Fix `TypeError` in `from_networkx`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3465159234, "node_id": "LA_kwDOBlHMec7OiiJC", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/graphgym", "name": "graphgym", "color": "BBD6C0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}, {"id": 4601575641, "node_id": "LA_kwDOBlHMec8AAAABEkZ42Q", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/utils", "name": "utils", "color": "DBC48C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-11-01T17:15:00Z", "updated_at": "2022-11-01T18:10:58Z", "closed_at": "2022-11-01T18:10:57Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5876", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5876", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5876.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5876.patch", "merged_at": "2022-11-01T18:10:57Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5876/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5863", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5863/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5863/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5863/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5863", "id": 1430826802, "node_id": "I_kwDOBlHMec5VSK8y", "number": 5863, "title": "Error while running examples/proteins_topk_pool.py", "user": {"login": "vardaan123", "id": 17354381, "node_id": "MDQ6VXNlcjE3MzU0Mzgx", "avatar_url": "https://avatars.githubusercontent.com/u/17354381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vardaan123", "html_url": "https://github.com/vardaan123", "followers_url": "https://api.github.com/users/vardaan123/followers", "following_url": "https://api.github.com/users/vardaan123/following{/other_user}", "gists_url": "https://api.github.com/users/vardaan123/gists{/gist_id}", "starred_url": "https://api.github.com/users/vardaan123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vardaan123/subscriptions", "organizations_url": "https://api.github.com/users/vardaan123/orgs", "repos_url": "https://api.github.com/users/vardaan123/repos", "events_url": "https://api.github.com/users/vardaan123/events{/privacy}", "received_events_url": "https://api.github.com/users/vardaan123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-11-01T03:59:16Z", "updated_at": "2022-11-08T04:41:41Z", "closed_at": "2022-11-08T04:41:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nI get the following error while running the example `proteins_topk_pool.py`:\r\n```\r\nTraceback (most recent call last):\r\n  File \"proteins_topk_pool.py\", line 103, in <module>\r\n    loss = train(epoch)\r\n  File \"proteins_topk_pool.py\", line 83, in train\r\n    output = model(data)\r\n  File \"/home/pahuja.9/miniconda3/envs/pyg_3.7/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 1130, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"proteins_topk_pool.py\", line 49, in forward\r\n    x = F.relu(self.conv1(x, edge_index))\r\n  File \"/home/pahuja.9/miniconda3/envs/pyg_3.7/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 1130, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"/home/pahuja.9/miniconda3/envs/pyg_3.7/lib/python3.7/site-packages/torch_geometric/nn/conv/graph_conv.py\", line 85, in forward\r\n    out += self.lin_root(x_r)\r\nRuntimeError: output with shape [128] doesn't match the broadcast shape [2239, 128]\r\n```\r\nIt happens for every batch\r\n\r\n### Environment\r\n\r\n* PyG version: 2.1.0.post1\r\n* PyTorch version: 1.12.0+cu102\r\n* OS: Ubuntu\r\n* Python version: 3.7.13\r\n* CUDA/cuDNN version: 10.2\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\ntorch-scatter version: 2.0.9\r\ntorch-sparse version: 0.6.15\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5863/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5855", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5855/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5855/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5855/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5855", "id": 1428532387, "node_id": "I_kwDOBlHMec5VJayj", "number": 5855, "title": "AssertionError in GNNExplainer ", "user": {"login": "alzaia", "id": 14980394, "node_id": "MDQ6VXNlcjE0OTgwMzk0", "avatar_url": "https://avatars.githubusercontent.com/u/14980394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alzaia", "html_url": "https://github.com/alzaia", "followers_url": "https://api.github.com/users/alzaia/followers", "following_url": "https://api.github.com/users/alzaia/following{/other_user}", "gists_url": "https://api.github.com/users/alzaia/gists{/gist_id}", "starred_url": "https://api.github.com/users/alzaia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alzaia/subscriptions", "organizations_url": "https://api.github.com/users/alzaia/orgs", "repos_url": "https://api.github.com/users/alzaia/repos", "events_url": "https://api.github.com/users/alzaia/events{/privacy}", "received_events_url": "https://api.github.com/users/alzaia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-10-30T00:59:41Z", "updated_at": "2022-10-30T19:19:13Z", "closed_at": "2022-10-30T19:19:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI am trying to run the GNNExplainer on top of my user-defined GAT model. It throws the following error:\r\n\r\n```\r\nFile ~/.conda/envs/pfp_venv/lib/python3.8/site-packages/torch_geometric/nn/models/gnn_explainer.py:231, in GNNExplainer.explain_node(self, node_idx, x, edge_index, **kwargs)\r\n    229 optimizer.zero_grad()\r\n    230 h = x * self.node_feat_mask.sigmoid()\r\n--> 231 out = self.model(x=h, edge_index=edge_index, **kwargs)\r\n    232 loss = self.get_loss(out, prediction, mapping)\r\n    233 loss.backward()\r\n\r\nFile ~/.conda/envs/pfp_venv/lib/python3.8/site-packages/torch/nn/modules/module.py:1110, in Module._call_impl(self, *input, **kwargs)\r\n   1106 # If we don't have any hooks, we want to skip the rest of the logic in\r\n   1107 # this function, and just call forward.\r\n   1108 if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks\r\n   1109         or _global_forward_hooks or _global_forward_pre_hooks):\r\n-> 1110     return forward_call(*input, **kwargs)\r\n   1111 # Do not call functions when jit is used\r\n   1112 full_backward_hooks, non_full_backward_hooks = [], []\r\n...\r\n--> 495 assert inputs.size(self.node_dim) == edge_mask.size(0)\r\n    497 size = [1] * inputs.dim()\r\n    498 size[self.node_dim] = -1\r\n\r\nAssertionError:\r\n```\r\nThe code I run is the following:\r\n\r\n```\r\nnode_idx = 100\r\nexplainer = GNNExplainer(model, epochs=200, return_type='regression')\r\nnode_feat_mask, edge_mask = explainer.explain_node(node_idx=node_idx, x=data.x, edge_index=data.edge_index, batch=data)\r\n```\r\nWhere `model` is a multi-layer GAT model that has `n` node features and `m` edge features and that performs a node regression task. Let me know if you need more details.\r\n\r\n\r\n\n\n### Environment\n\n* PyG version: 2.1.0.post1\r\n* PyTorch version: 1.11.0\r\n* OS: MacOS\r\n* Python version: 3.8\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip install -U torch_geometric", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5855/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5850", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5850/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5850/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5850/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5850", "id": 1428137001, "node_id": "I_kwDOBlHMec5VH6Qp", "number": 5850, "title": "Getting CUDA error on Tesla V100", "user": {"login": "wyq-carol", "id": 70304620, "node_id": "MDQ6VXNlcjcwMzA0NjIw", "avatar_url": "https://avatars.githubusercontent.com/u/70304620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wyq-carol", "html_url": "https://github.com/wyq-carol", "followers_url": "https://api.github.com/users/wyq-carol/followers", "following_url": "https://api.github.com/users/wyq-carol/following{/other_user}", "gists_url": "https://api.github.com/users/wyq-carol/gists{/gist_id}", "starred_url": "https://api.github.com/users/wyq-carol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wyq-carol/subscriptions", "organizations_url": "https://api.github.com/users/wyq-carol/orgs", "repos_url": "https://api.github.com/users/wyq-carol/repos", "events_url": "https://api.github.com/users/wyq-carol/events{/privacy}", "received_events_url": "https://api.github.com/users/wyq-carol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-10-29T07:35:20Z", "updated_at": "2022-10-29T16:54:06Z", "closed_at": "2022-10-29T16:54:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi! I am using PyG with my school's HPC (Tesla V100). I got this CUDA error `RuntimeError: CUDA error: no kernel image is available for execution on the device.`  when I run `python gat.py` in the `.../pytorch_geometric/examples/` directory.\r\n## Additional context\r\n```\r\nTraceback (most recent call last):\r\n  File \"gat.py\", line 74, in <module>\r\n    loss = train()\r\n  File \"gat.py\", line 54, in train\r\n    out = model(data.x, data.edge_index)\r\n  File \"/root/anaconda3/envs/env_gnn/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 1130, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"gat.py\", line 40, in forward\r\n    x = F.elu(self.conv1(x, edge_index))\r\n  File \"/root/anaconda3/envs/env_gnn/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 1130, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"/home/pytorch_geometric/torch_geometric/nn/conv/gat_conv.py\", line 243, in forward\r\n    alpha = self.edge_updater(edge_index, alpha=alpha, edge_attr=edge_attr)\r\n  File \"/home/pytorch_geometric/torch_geometric/nn/conv/message_passing.py\", line 472, in edge_updater\r\n    out = self.edge_update(**edge_kwargs)\r\n  File \"/home/pytorch_geometric/torch_geometric/nn/conv/gat_conv.py\", line 280, in edge_update\r\n    alpha = softmax(alpha, index, ptr, size_i)\r\n  File \"/home/pytorch_geometric/torch_geometric/utils/softmax.py\", line 62, in softmax\r\n    src_max = scatter(src, index, dim, dim_size=N, reduce='max')\r\n  File \"/root/anaconda3/envs/env_gnn/lib/python3.8/site-packages/torch_scatter/scatter.py\", line 160, in scatter\r\n    return scatter_max(src, index, dim, out, dim_size)[0]\r\n  File \"/root/anaconda3/envs/env_gnn/lib/python3.8/site-packages/torch_scatter/scatter.py\", line 72, in scatter_max\r\n    return torch.ops.torch_scatter.scatter_max(src, index, dim, out, dim_size)\r\n  File \"/root/anaconda3/envs/env_gnn/lib/python3.8/site-packages/torch/_ops.py\", line 143, in __call__\r\n    return self._op(*args, **kwargs or {})\r\nRuntimeError: CUDA error: no kernel image is available for execution on the device\r\n```\n\n### Environment\n\n* PyG version: 2.1.0\r\n* PyTorch version: 1.12.0a0+git664058f\r\n* OS: ubuntu 18.04\r\n* Python version: 3.8\r\n* CUDA/cuDNN version: cuda 10.2 cudnn 7\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): source\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): torch-scatter 2.0.9 torch-sparse 0.6.15\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5850/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5846", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5846/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5846/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5846/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5846", "id": 1427873583, "node_id": "I_kwDOBlHMec5VG58v", "number": 5846, "title": "NeighborLoader with isolated nodes", "user": {"login": "RX28666", "id": 113497575, "node_id": "U_kgDOBsPV5w", "avatar_url": "https://avatars.githubusercontent.com/u/113497575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RX28666", "html_url": "https://github.com/RX28666", "followers_url": "https://api.github.com/users/RX28666/followers", "following_url": "https://api.github.com/users/RX28666/following{/other_user}", "gists_url": "https://api.github.com/users/RX28666/gists{/gist_id}", "starred_url": "https://api.github.com/users/RX28666/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RX28666/subscriptions", "organizations_url": "https://api.github.com/users/RX28666/orgs", "repos_url": "https://api.github.com/users/RX28666/repos", "events_url": "https://api.github.com/users/RX28666/events{/privacy}", "received_events_url": "https://api.github.com/users/RX28666/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-10-28T21:46:38Z", "updated_at": "2022-10-29T16:57:42Z", "closed_at": "2022-10-29T16:57:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHello, I tried to use NeighborLoader on some datasets with isolated nodes, and then use `to_scipy_sparse_matrix` to covert edge_index to adj matrix, like following:\r\n```\r\ndata = dataset[0]\r\ndata.edge_index = to_undirected(data.edge_index)\r\ndata = data.to(device)\r\ndata.n_id = torch.arange(data.num_nodes)\r\nkwargs = {'batch_size': 3327, 'num_workers': 0, 'persistent_workers': False}\r\ntrain_loader = NeighborLoader(data, input_nodes=None,\r\n                              num_neighbors=[-1], shuffle=True, **kwargs)\r\nfor i in range(500):\r\n    for batch in train_loader:\r\n        print(torch_geometric.utils.to_scipy_sparse_matrix(batch.edge_index).shape)\r\n```\r\nI am using Citeseer, I put all 3327 nodes into one batch for verifying firstly, but the output of the above code not always 3327, sometimes becomes 3326, like following:\r\n```\r\n(3327, 3327)\r\n(3327, 3327)\r\n(3327, 3327)\r\n(3327, 3327)\r\n(3327, 3327)\r\n(3326, 3326)\r\n(3327, 3327)\r\n(3327, 3327)\r\n(3327, 3327)\r\n```\r\nI tried the method you mentioned in #5827, but this problem still happened. \r\nI was wondering if If it's because of isolated nodes, but sometimes the result is correct(3327), sometimes is wrong(3326).\r\nAny help would be appreciated.\n\n### Environment\n\n* PyG version:2.1.0\r\n* PyTorch version:1.12\r\n* OS: colab\r\n* Python version:3\r\n* CUDA/cuDNN version:11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5846/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5845", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5845/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5845/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5845/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5845", "id": 1427442019, "node_id": "I_kwDOBlHMec5VFQlj", "number": 5845, "title": "TUDataset proteins", "user": {"login": "cxw-droid", "id": 62969142, "node_id": "MDQ6VXNlcjYyOTY5MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/62969142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxw-droid", "html_url": "https://github.com/cxw-droid", "followers_url": "https://api.github.com/users/cxw-droid/followers", "following_url": "https://api.github.com/users/cxw-droid/following{/other_user}", "gists_url": "https://api.github.com/users/cxw-droid/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxw-droid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxw-droid/subscriptions", "organizations_url": "https://api.github.com/users/cxw-droid/orgs", "repos_url": "https://api.github.com/users/cxw-droid/repos", "events_url": "https://api.github.com/users/cxw-droid/events{/privacy}", "received_events_url": "https://api.github.com/users/cxw-droid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-10-28T15:39:54Z", "updated_at": "2022-10-29T16:58:38Z", "closed_at": "2022-10-29T16:58:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhen I load proteins dataset using TUDataset(), I found the data.x.shape[1] is 0. i.e., the feature dimension is 0. Possibly it should be 3? Did you changed TUDataset() recently? I remember the proteins dataset worked normally before.\r\n\r\nI am using torch-geometric 2.1.0\n\n### Environment\n\n* PyG version: 2.1.0\r\n* PyTorch version: 1.10\r\n* OS: Ubuntu 20.04\r\n* Python version:\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5845/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5844", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5844/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5844/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5844/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5844", "id": 1426939826, "node_id": "I_kwDOBlHMec5VDV-y", "number": 5844, "title": "About HypergraphConv", "user": {"login": "280777510", "id": 71584135, "node_id": "MDQ6VXNlcjcxNTg0MTM1", "avatar_url": "https://avatars.githubusercontent.com/u/71584135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/280777510", "html_url": "https://github.com/280777510", "followers_url": "https://api.github.com/users/280777510/followers", "following_url": "https://api.github.com/users/280777510/following{/other_user}", "gists_url": "https://api.github.com/users/280777510/gists{/gist_id}", "starred_url": "https://api.github.com/users/280777510/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/280777510/subscriptions", "organizations_url": "https://api.github.com/users/280777510/orgs", "repos_url": "https://api.github.com/users/280777510/repos", "events_url": "https://api.github.com/users/280777510/events{/privacy}", "received_events_url": "https://api.github.com/users/280777510/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-10-28T09:04:43Z", "updated_at": "2022-10-28T12:17:33Z", "closed_at": "2022-10-28T12:17:33Z", "author_association": "NONE", "active_lock_reason": null, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5844/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5838", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5838/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5838/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5838/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5838", "id": 1425454621, "node_id": "I_kwDOBlHMec5U9rYd", "number": 5838, "title": "Meaningless operations can lead to inconsistent performance", "user": {"login": "MTandHJ", "id": 60973303, "node_id": "MDQ6VXNlcjYwOTczMzAz", "avatar_url": "https://avatars.githubusercontent.com/u/60973303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MTandHJ", "html_url": "https://github.com/MTandHJ", "followers_url": "https://api.github.com/users/MTandHJ/followers", "following_url": "https://api.github.com/users/MTandHJ/following{/other_user}", "gists_url": "https://api.github.com/users/MTandHJ/gists{/gist_id}", "starred_url": "https://api.github.com/users/MTandHJ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MTandHJ/subscriptions", "organizations_url": "https://api.github.com/users/MTandHJ/orgs", "repos_url": "https://api.github.com/users/MTandHJ/repos", "events_url": "https://api.github.com/users/MTandHJ/events{/privacy}", "received_events_url": "https://api.github.com/users/MTandHJ/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-10-27T11:07:14Z", "updated_at": "2022-10-30T08:21:23Z", "closed_at": "2022-10-30T08:21:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\n```\r\nimport torch\r\nfrom torch_geometric.nn import LGConv\r\n\r\nclass LightGCN(torch.nn.Module):\r\n\r\n    def __init__(\r\n        self, tokenizer: Tokenizer, \r\n        graph: Data,\r\n        num_layers: int = 3\r\n    ) -> None:\r\n        super().__init__()\r\n\r\n        self.tokenizer = tokenizer\r\n        self.conv = LGConv()\r\n        self.num_layers = num_layers\r\n        self.graph = graph\r\n\r\n        self.User, self.Item = self.tokenizer[USER, ID], self.tokenizer[ITEM, ID]\r\n\r\n        self.initialize()\r\n\r\n    @property\r\n    def graph(self):\r\n        return self.__graph\r\n\r\n    @graph.setter\r\n    def graph(self, graph: Data):\r\n        self.__graph = graph\r\n        T.ToSparseTensor()(self.__graph)\r\n\r\n    def to(\r\n        self, device: Optional[Union[int, torch.device]] = None, \r\n        dtype: Optional[Union[torch.dtype, str]] = None, \r\n        non_blocking: bool = False\r\n    ):\r\n        if device:\r\n            self.graph.to(device)\r\n        return super().to(device, dtype, non_blocking)\r\n\r\n    def forward(\r\n        self, users: Optional[Dict[str, torch.Tensor]] = None, \r\n        items: Optional[Dict[str, torch.Tensor]] = None\r\n    ):\r\n        userEmbs = self.User.embeddings.weight\r\n        itemEmbs = self.Item.embeddings.weight\r\n        features = torch.cat((userEmbs, itemEmbs), dim=0).flatten(1) # N x D\r\n        avgFeats = features / (self.num_layers + 1)\r\n        for _ in range(self.num_layers):\r\n            features = self.conv(features, self.graph.adj_t)\r\n            avgFeats += features / (self.num_layers + 1)\r\n        userFeats, itemFeats = torch.split(avgFeats, (self.User.count, self.Item.count))\r\n\r\n        if self.training: # Batch\r\n            users, items = users[self.User.name], items[self.Item.name]\r\n            userFeats = userFeats[users] # B x 1 x D\r\n            itemFeats = itemFeats[items] # B x n x D\r\n            userEmbs = self.User.look_up(users) # B x 1 x D\r\n            itemEmbs = self.Item.look_up(items) # B x n x D\r\n            return torch.mul(userFeats, itemFeats).sum(-1), userEmbs, itemEmbs\r\n        else:\r\n            return userFeats, itemFeats\r\n```\r\n\r\nI tried to reproduce LightGCN on Gowalla dataset using codes above. However, it did not work well all the time.\r\nSometimes the loss starts from `0.68` and struggles to decrease. Unexpectedly, without changing any code but adding a line of `print(\"???\")` at the beginning will make it work again; that is, the loss decreases from `0.44` and finally achieves NDCG@20: 0.1540. Moreover, `seed` is set by\r\n\r\n```\r\ndef set_seed(seed: int) -> int:\r\n    \"\"\"Set seed.\r\n\r\n    Parameters:\r\n    seed: int\r\n        - `-1`: Set a seed from 0 to 2048 randomly.\r\n        - `int`: Set a seed of `int`.\r\n\r\n    Returns:\r\n    seed: int\r\n    \"\"\"\r\n    if seed == -1:\r\n        seed = random.randint(0, 2048)\r\n    random.seed(seed)\r\n    np.random.seed(seed)\r\n    torch.manual_seed(seed)\r\n    torch.cuda.manual_seed(seed)\r\n    torch.cuda.manual_seed_all(seed)\r\n    return seed\r\n```\r\n \r\n\r\nI also observe the same loss in the first few mini-batches but without the `nan` values during training. Is there anything wrong with my implementation?\r\n\r\nThanks !\r\n\r\n\r\n\r\n\r\n\n\n### Environment\n\n* PyG version:  2.1.0\r\n* PyTorch version: 1.12.1\r\n* OS: Ubuntu 16.04.5\r\n* Python version: 3.9\r\n* CUDA/cuDNN version: 10.2/10.2\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5838/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5837", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5837/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5837/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5837/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5837", "id": 1425234886, "node_id": "I_kwDOBlHMec5U81vG", "number": 5837, "title": "   about HGconv(torch_geometric\\nn\\conv\\hypergraph_conv.py)", "user": {"login": "280777510", "id": 71584135, "node_id": "MDQ6VXNlcjcxNTg0MTM1", "avatar_url": "https://avatars.githubusercontent.com/u/71584135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/280777510", "html_url": "https://github.com/280777510", "followers_url": "https://api.github.com/users/280777510/followers", "following_url": "https://api.github.com/users/280777510/following{/other_user}", "gists_url": "https://api.github.com/users/280777510/gists{/gist_id}", "starred_url": "https://api.github.com/users/280777510/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/280777510/subscriptions", "organizations_url": "https://api.github.com/users/280777510/orgs", "repos_url": "https://api.github.com/users/280777510/repos", "events_url": "https://api.github.com/users/280777510/events{/privacy}", "received_events_url": "https://api.github.com/users/280777510/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-10-27T08:26:21Z", "updated_at": "2022-10-28T12:17:57Z", "closed_at": "2022-10-27T09:08:51Z", "author_association": "NONE", "active_lock_reason": null, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5837/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5827", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5827/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5827/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5827/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5827", "id": 1423316426, "node_id": "I_kwDOBlHMec5U1hXK", "number": 5827, "title": "The size of edge_Index becomes zero when using NeighborLoader", "user": {"login": "RX28666", "id": 113497575, "node_id": "U_kgDOBsPV5w", "avatar_url": "https://avatars.githubusercontent.com/u/113497575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RX28666", "html_url": "https://github.com/RX28666", "followers_url": "https://api.github.com/users/RX28666/followers", "following_url": "https://api.github.com/users/RX28666/following{/other_user}", "gists_url": "https://api.github.com/users/RX28666/gists{/gist_id}", "starred_url": "https://api.github.com/users/RX28666/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RX28666/subscriptions", "organizations_url": "https://api.github.com/users/RX28666/orgs", "repos_url": "https://api.github.com/users/RX28666/repos", "events_url": "https://api.github.com/users/RX28666/events{/privacy}", "received_events_url": "https://api.github.com/users/RX28666/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-10-26T01:49:58Z", "updated_at": "2022-10-28T21:41:51Z", "closed_at": "2022-10-28T14:19:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHello, I am using NeighborLoader to do sampling on ogb-arxiv dataset (the total number of nodes=169343), when I set batch_size=169343, num_neighbors=[-1], everything is fine, but when I set batch_size=169343, num_neighbors=[25, 10], after several epochs, the bug appeared, the matrix of adj matrix becomes (169342, 169342), which is just one less than the number it should be(169343), then I set batch_size=32, num_neighbors=[-1], same bug appeared, the shape of edge_index becomes 0 this time, the error message is here:\r\naddmm: Argument #3 (dense): Expected dim 0 size 0, got 32\r\n\r\nMy codes runs well on other datasets, like Cora, Citeseer\r\n\r\nI print the size of that batch:\r\n     batch.x.shape: torch.Size([32, 128])\r\n     batch.edge_index.shape: torch.Size([2, 0])\r\n     batch.edge_index: tensor([], device='cuda:0', size=(2, 0), dtype=torch.int64)\r\n     adj.shape: (0, 0)\r\n\r\nthe following is my training function:\r\n\r\ndef train(data):\r\n    model.train()\r\n    for batch in train_loader:\r\n        optimizer.zero_grad()\r\n        adj_train = torch_geometric.utils.to_scipy_sparse_matrix(to_undirected(batch.edge_index))\r\n        print(\"batch_train\", batch.x.shape)\r\n        print(\"edge_train\", batch.edge_index.shape)\r\n        print(\"edge_train\", batch.edge_index)\r\n        print(\"adj_train\", adj_train.shape)\r\n        train = train_mask[batch.n_id][:batch.batch_size]\r\n        y = batch.y.squeeze(1)[:batch.batch_size][train]\r\n        out = model(batch.x, adj_train, batch.n_id)[:batch.batch_size][train]\r\n        loss = F.cross_entropy(out, y)\r\n        loss.backward(retain_graph=True)\r\n        optimizer.step()\r\n    return float(loss)\r\n\r\nAnd the following is my train_loader:\r\nkwargs = {'batch_size': 32, 'num_workers': 2, 'persistent_workers': False}\r\ntrain_loader = NeighborLoader(data, input_nodes=None,\r\n                              num_neighbors=[25, 10], shuffle=True, **kwargs)\r\n\r\nDatasets:\r\ndataset = PygNodePropPredDataset(name='ogbn-arxiv')\r\ndevice = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\r\ndata = dataset[0]\r\ndata = data.to(device)\r\nsplit_idx = dataset.get_idx_split()\r\ntrain_idx = split_idx['train'].to(device)\r\nevaluator = Evaluator(name='ogbn-arxiv')\r\ntrain_mask = torch.zeros(data.num_nodes, dtype=torch.bool)\r\ntrain_mask[train_idx.long()] = True  #similar as planetoid\r\n\r\nThanks for your help!\n\n### Environment\n\n* PyG version:2.1.0\r\n* PyTorch version: 1.12\r\n* OS: google colab\r\n* Python version:3\r\n* CUDA/cuDNN version:11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):none\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5827/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5819", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5819/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5819/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5819/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5819", "id": 1421925243, "node_id": "PR_kwDOBlHMec5BeNUG", "number": 5819, "title": "Fix: `VirtualNode` mistakenly treats node features as edge features", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052698076, "node_id": "LA_kwDOBlHMec7xj0Pc", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/transform", "name": "transform", "color": "480283", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-10-25T06:23:57Z", "updated_at": "2022-10-25T06:54:16Z", "closed_at": "2022-10-25T06:54:15Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5819", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5819", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5819.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5819.patch", "merged_at": "2022-10-25T06:54:15Z"}, "body": "Fixes https://github.com/pyg-team/pytorch_geometric/issues/5818", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5819/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5818", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5818/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5818/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5818/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5818", "id": 1421686834, "node_id": "I_kwDOBlHMec5UvTgy", "number": 5818, "title": "Adding a virtual node expands mini-batched Data's `batch` attribute incorrectly", "user": {"login": "amtseng", "id": 5652408, "node_id": "MDQ6VXNlcjU2NTI0MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5652408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amtseng", "html_url": "https://github.com/amtseng", "followers_url": "https://api.github.com/users/amtseng/followers", "following_url": "https://api.github.com/users/amtseng/following{/other_user}", "gists_url": "https://api.github.com/users/amtseng/gists{/gist_id}", "starred_url": "https://api.github.com/users/amtseng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amtseng/subscriptions", "organizations_url": "https://api.github.com/users/amtseng/orgs", "repos_url": "https://api.github.com/users/amtseng/repos", "events_url": "https://api.github.com/users/amtseng/events{/privacy}", "received_events_url": "https://api.github.com/users/amtseng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-10-25T01:09:05Z", "updated_at": "2022-10-25T17:33:59Z", "closed_at": "2022-10-25T06:54:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\n### Overview of the bug\r\n\r\nUsing `torch_geometric.loader.DataLoader`, resulting Data objects are mini-batched and include a `batch` attribute which denotes the source graph for each node (i.e. `batch` is a vector of length equal to the number of nodes in the graph).\r\n\r\nWhen adding a virtual node using `torch_geometric.transforms.VirtualNode`, a new node is added which has an edge to every other node in the batch. This means that attributes such as `data.x`, `data.edge_index`, and `data.batch` need to be expanded to accommodate the new node.\r\n\r\nUnfortunately, `data.batch` is expanded incorrectly. In particular, `data.batch` is usually not altered at all (when in reality it should be extended by 1 extra entry). Even more sinister, if the number of nodes and the number of edges is the same in the batch, then `data.batch` is extended by twice the number of nodes/edges, which is arguably worse.\r\n\r\n### Minimal reproducing example\r\n\r\n```python\r\nprint(\"torch \" + torch.__version__)\r\nprint(\"torch_geometric \" + torch_geometric.__version__)\r\nprint()\r\n\r\nprint(\"Number of nodes != number of edges:\")\r\nx = torch.randn(10, 1)\r\nedge_index = torch.randint(10, size=(2, 9))\r\nbatch = torch.zeros(10)\r\ndata = torch_geometric.data.Data(x=x, edge_index=edge_index, batch=batch)\r\nprint(\"Before VN: %s\" % data)\r\ntorch_geometric.transforms.VirtualNode()(data)\r\nprint(\"After VN: %s\" % data)\r\nprint()\r\n\r\nprint(\"Number of nodes == number of edges:\")\r\nx = torch.randn(10, 1)\r\nedge_index = torch.randint(10, size=(2, 10))\r\nbatch = torch.zeros(10)\r\ndata = torch_geometric.data.Data(x=x, edge_index=edge_index, batch=batch)\r\nprint(\"Before VN: %s\" % data)\r\ntorch_geometric.transforms.VirtualNode()(data)\r\nprint(\"After VN: %s\" % data)\r\n```\r\n\r\nOutput:\r\n```\r\ntorch 1.11.0\r\ntorch_geometric 2.1.0\r\n\r\nNumber of nodes != number of edges:\r\nBefore VN: Data(x=[10, 1], edge_index=[2, 9], batch=[10])\r\nAfter VN: Data(x=[11, 1], edge_index=[2, 29], batch=[10], edge_type=[29])\r\n\r\nNumber of nodes == number of edges:\r\nBefore VN: Data(x=[10, 1], edge_index=[2, 10], batch=[10])\r\nAfter VN: Data(x=[11, 1], edge_index=[2, 30], batch=[30], edge_type=[30])\r\n```\r\n\r\n### Explanation for why the bug occurs\r\n\r\n[When a virtual node is added](https://github.com/pyg-team/pytorch_geometric/blob/c8e1cdb4665d408dd2d5de3fbe0fb2fdb0bfbd1d/torch_geometric/transforms/virtual_node.py#L38), it loops through each of the Data-object attributes, classifies it as a node attribute or an edge attribute, and extends the attribute's tensor in turn. Node attributes are supposed to be extended by 1. Edge attributes are supposed to be extended by 2n, where n is the number of nodes. Special treatment is given to `data.edge_index`, `data.edge_type`, and `data.edge_weight`.\r\n\r\nThis loop, however, will directly modify `data` _after each iteration_. At least in my environment, `x` is encountered first in the loop. After this `x` iteration of the loop, the number of nodes has increased by 1. Upon the next iteration when we encounter `batch`, as a result of [how `is_node_attr` and `is_edge_attr` are defined](https://github.com/pyg-team/pytorch_geometric/blob/344b143ce5df74ef6ef277f18f1c2d8f8299c41b/torch_geometric/data/storage.py#L475), `batch` will be incorrectly classified. Usually, this means that `batch` will not be classified as a node or edge attribute (the number of nodes has recently increased so its size no longer batches the number of nodes). In the case that the number of nodes and edges start out being equal, `batch` will be misclassified as an edge attribute (the [check for `num_nodes != num_edges`](https://github.com/pyg-team/pytorch_geometric/blob/344b143ce5df74ef6ef277f18f1c2d8f8299c41b/torch_geometric/data/storage.py#L497) no longer works because the number of nodes has changed).\r\n\r\nAs a result, `batch` is usually not altered at all, or if the number of nodes and edges were the same to begin with, it is accidentally treated as an edge attribute.\r\n\r\n### Proposed fix\r\n\r\nThe most obvious fix is to perform all compute the updates to the Data-object attributes in the loop, and then update them all once the loop has completed. This would ostensibly fix the issue above.\r\n\r\nHowever, I also suggest that when `data.batch` is extended, it should be extended by an entry that is not also an index for another graph in the batch (including 0). For example, the new entry could be 1 greater than the largest batch index. In order to do this, I believe `batch` should also receive special treatment, along with `edge_weight` and the like.\r\n\r\nI will hold off on writing the change and submitting a pull request for now, in view of the suggested design change (i.e. extending `data.batch` by something other than 0).\r\n\r\n### Environment\r\n\r\n* PyG version: 2.1.0\r\n* PyTorch version: 1.11.0\r\n* OS: Linux\r\n* Python version: 3.8.13\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): `conda`\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5818/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5815", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5815/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5815/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5815/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5815", "id": 1420773194, "node_id": "PR_kwDOBlHMec5BaWGP", "number": 5815, "title": "`BaseStorage`: Fix `setter` and `getter`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-10-24T12:44:58Z", "updated_at": "2022-10-24T12:50:44Z", "closed_at": "2022-10-24T12:50:43Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5815", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5815", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5815.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5815.patch", "merged_at": "2022-10-24T12:50:43Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5815/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5788", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5788/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5788/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5788/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5788", "id": 1417057941, "node_id": "PR_kwDOBlHMec5BOAUR", "number": 5788, "title": "Fix broken Windows tests", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-10-20T18:16:37Z", "updated_at": "2022-10-20T18:44:43Z", "closed_at": "2022-10-20T18:44:42Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5788", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5788", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5788.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5788.patch", "merged_at": "2022-10-20T18:44:42Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5788/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5784", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5784/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5784/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5784/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5784", "id": 1416435571, "node_id": "PR_kwDOBlHMec5BL3xG", "number": 5784, "title": "Sort local neighborhoods according to time via `np.lexsort`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-10-20T11:17:36Z", "updated_at": "2022-10-20T11:22:10Z", "closed_at": "2022-10-20T11:22:09Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5784", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5784", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5784.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5784.patch", "merged_at": "2022-10-20T11:22:08Z"}, "body": "In order to avoid numerical instabilities.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5784/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5782", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5782/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5782/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5782/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5782", "id": 1415728290, "node_id": "I_kwDOBlHMec5UYkyi", "number": 5782, "title": "Unexpected segmentation fault encountered in worker when using Pytorch Geometric to load dataset", "user": {"login": "sunhongmin225", "id": 49382227, "node_id": "MDQ6VXNlcjQ5MzgyMjI3", "avatar_url": "https://avatars.githubusercontent.com/u/49382227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunhongmin225", "html_url": "https://github.com/sunhongmin225", "followers_url": "https://api.github.com/users/sunhongmin225/followers", "following_url": "https://api.github.com/users/sunhongmin225/following{/other_user}", "gists_url": "https://api.github.com/users/sunhongmin225/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunhongmin225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunhongmin225/subscriptions", "organizations_url": "https://api.github.com/users/sunhongmin225/orgs", "repos_url": "https://api.github.com/users/sunhongmin225/repos", "events_url": "https://api.github.com/users/sunhongmin225/events{/privacy}", "received_events_url": "https://api.github.com/users/sunhongmin225/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-10-20T00:16:14Z", "updated_at": "2023-03-27T23:34:02Z", "closed_at": "2023-03-27T23:34:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI encounter the following error when using DataLoader workers to load data.\r\nI am using [NeighborSampler in PyG](https://github.com/pyg-team/pytorch_geometric/blob/master/torch_geometric/loader/neighbor_sampler.py) as \"loader\" in run_main.py line 152 to load custom dataset, and use `num_workers` of `os.cpu_count()`.\r\n\r\n```\r\nERROR: Unexpected segmentation fault encountered in worker.\r\nTraceback (most recent call last):\r\n  File \"/home/user/.local/lib/python3.8/site-packages/torch/utils/data/dataloader.py\", line 1134, in _try_get_data\r\n    data = self._data_queue.get(timeout=timeout)\r\n  File \"/usr/lib/python3.8/multiprocessing/queues.py\", line 107, in get\r\n    if not self._poll(timeout):\r\n  File \"/usr/lib/python3.8/multiprocessing/connection.py\", line 257, in poll\r\n    return self._poll(timeout)\r\n  File \"/usr/lib/python3.8/multiprocessing/connection.py\", line 424, in _poll\r\n    r = wait([self], timeout)\r\n  File \"/usr/lib/python3.8/multiprocessing/connection.py\", line 931, in wait\r\n    ready = selector.select(timeout)\r\n  File \"/usr/lib/python3.8/selectors.py\", line 415, in select\r\n    fd_event_list = self._selector.poll(timeout)\r\n  File \"/home/user/.local/lib/python3.8/site-packages/torch/utils/data/_utils/signal_handling.py\", line 66, in handler\r\n    _error_if_any_worker_fails()\r\nRuntimeError: DataLoader worker (pid 1096707) is killed by signal: Segmentation fault.\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"run_main.py\", line 152, in train\r\n    for step, _ in enumerate(loader):\r\n  File \"/home/user/.local/lib/python3.8/site-packages/torch/utils/data/dataloader.py\", line 652, in __next__\r\n    data = self._next_data()\r\n  File \"/home/user/.local/lib/python3.8/site-packages/torch/utils/data/dataloader.py\", line 1330, in _next_data\r\n    idx, data = self._get_data()\r\n  File \"/home/user/.local/lib/python3.8/site-packages/torch/utils/data/dataloader.py\", line 1296, in _get_data\r\n    success, data = self._try_get_data()\r\n  File \"/home/user/.local/lib/python3.8/site-packages/torch/utils/data/dataloader.py\", line 1147, in _try_get_data\r\n    raise RuntimeError('DataLoader worker (pid(s) {}) exited unexpectedly'.format(pids_str)) from e\r\nRuntimeError: DataLoader worker (pid(s) 1096707) exited unexpectedly\r\n```\r\n\r\nI've searched a lot for this error, and found following solutions. However, they were all unhelpful.\r\n- Using `num_workers` of 0 or 1. When I run with `num_workers` of 0, it results in \"corrupted double-linked list\" error. When I set `num_workers` as 1, the same error (Unexpected segmentation fault encountered in worker) still occurs. Actually, I don't want to lessen `num_workers`, because I am working on a pretty large dataset and lessening `num_workers` is a much slower option.\r\n- Increasing shared memory size. I've done this by adding `none /dev/shm tmpfs defaults,size=MY_SIZEG 0 0` line in `/etc/fstab` and running `mount -o remount /dev/shm`. I've set MY_SIZE exactly as the size of main memory (which was previously 50% of main memory).\r\n- Changing Python version to <= 3.6.9. I've tried this, but the same error still occurs.\r\n- Checking that Python and dataset are mounted on the same disk. I've already verified that they are mounted on the same disk.\r\n\r\nI've been struggling to fix this issue for several days, but I can't find the right solution, and it really makes me frustrated. Could you please help me out?\r\n\n\n### Environment\n\n```\r\nuser@desktop:~/work$ python3 collect_env.py\r\nCollecting environment information...\r\nPyTorch version: 1.12.0+cu116\r\nIs debug build: False\r\nCUDA used to build PyTorch: 11.6\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Ubuntu 20.04.5 LTS (x86_64)\r\nGCC version: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\r\nClang version: Could not collect\r\nCMake version: version 3.24.0\r\nLibc version: glibc-2.31\r\n\r\nPython version: 3.8.10 (default, Jun 22 2022, 20:18:18)  [GCC 9.4.0] (64-bit runtime)\r\nPython platform: Linux-5.15.0-50-generic-x86_64-with-glibc2.29\r\nIs CUDA available: True\r\nCUDA runtime version: 11.6.124\r\nCUDA_MODULE_LOADING set to:\r\nGPU models and configuration: GPU 0: NVIDIA TITAN Xp\r\nNvidia driver version: 515.65.01\r\ncuDNN version: Could not collect\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\nIs XNNPACK available: True\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.23.1\r\n[pip3] torch==1.12.0+cu116\r\n[pip3] torch-cluster==1.6.0\r\n[pip3] torch-geometric==2.0.4\r\n[pip3] torch-scatter==2.0.9\r\n[pip3] torch-sparse==0.6.14\r\n[pip3] torch-spline-conv==1.2.1\r\n[pip3] torchaudio==0.12.0+cu116\r\n[pip3] torchvision==0.13.0+cu116\r\n[conda] Could not collect\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5782/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5777", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5777/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5777/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5777/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5777", "id": 1414959601, "node_id": "I_kwDOBlHMec5UVpHx", "number": 5777, "title": "global_mean_pool failed with to_hetero()", "user": {"login": "gaspard-quenard", "id": 56832250, "node_id": "MDQ6VXNlcjU2ODMyMjUw", "avatar_url": "https://avatars.githubusercontent.com/u/56832250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaspard-quenard", "html_url": "https://github.com/gaspard-quenard", "followers_url": "https://api.github.com/users/gaspard-quenard/followers", "following_url": "https://api.github.com/users/gaspard-quenard/following{/other_user}", "gists_url": "https://api.github.com/users/gaspard-quenard/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaspard-quenard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaspard-quenard/subscriptions", "organizations_url": "https://api.github.com/users/gaspard-quenard/orgs", "repos_url": "https://api.github.com/users/gaspard-quenard/repos", "events_url": "https://api.github.com/users/gaspard-quenard/events{/privacy}", "received_events_url": "https://api.github.com/users/gaspard-quenard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-10-19T13:17:59Z", "updated_at": "2022-10-20T07:12:33Z", "closed_at": "2022-10-20T07:12:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nConverting the following model to heterogeneous graph with the function to hetero:\r\n\r\n```python\r\nclass GCN(torch.nn.Module):\r\n    def __init__(self, hidden_channels):\r\n        super(GCN, self).__init__()\r\n        torch.manual_seed(12345)\r\n        self.conv1 = GCNConv(dataset.num_node_features, hidden_channels)\r\n        self.conv2 = GCNConv(hidden_channels, hidden_channels)\r\n        self.conv3 = GCNConv(hidden_channels, hidden_channels)\r\n        self.lin = Linear(hidden_channels, dataset.num_classes)\r\n\r\n    def forward(self, x, edge_index, batch):\r\n        # 1. Obtain node embeddings \r\n        x = self.conv1(x, edge_index)\r\n        x = x.relu()\r\n        x = self.conv2(x, edge_index)\r\n        x = x.relu()\r\n        x = self.conv3(x, edge_index)\r\n\r\n        # 2. Readout layer\r\n        x = global_mean_pool(x, batch)  # [batch_size, hidden_channels]\r\n\r\n        # 3. Apply a final classifier\r\n        x = F.dropout(x, p=0.5, training=self.training)\r\n        x = self.lin(x)\r\n        \r\n        return x\r\n\r\nmodel = GCN(hidden_channels=64)\r\nmodel = to_hetero(model, data.metadata(), aggr='sum')\r\n```\r\n\r\nyield the following error:\r\n\r\n```bash\r\n  File \"/lib/python3.10/site-packages/torch_geometric/nn/pool/glob.py\", line 57, in global_mean_pool\r\n    size = int(batch.max().item() + 1) if size is None else size\r\nTypeError: int() argument must be a string, a bytes-like object or a real number, not 'Proxy'\r\n```\r\n\r\nIs it possible to apply graph pooling to an heterogeneous graph ? \n\n### Environment\n\n* PyG version: 2.1.0\r\n* PyTorch version: 1.13.0.dev20220929+cu117\r\n* OS: Linux\r\n* Python version: 3.10.6\r\n* CUDA/cuDNN version: 11.7\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip/source\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): 2.0.9\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5777/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5771", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5771/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5771/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5771/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5771", "id": 1413897333, "node_id": "PR_kwDOBlHMec5BDT8u", "number": 5771, "title": "Add `temporal_strategy` to the `LightningNodeData`", "user": {"login": "zechengz", "id": 21955420, "node_id": "MDQ6VXNlcjIxOTU1NDIw", "avatar_url": "https://avatars.githubusercontent.com/u/21955420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zechengz", "html_url": "https://github.com/zechengz", "followers_url": "https://api.github.com/users/zechengz/followers", "following_url": "https://api.github.com/users/zechengz/following{/other_user}", "gists_url": "https://api.github.com/users/zechengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zechengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zechengz/subscriptions", "organizations_url": "https://api.github.com/users/zechengz/orgs", "repos_url": "https://api.github.com/users/zechengz/repos", "events_url": "https://api.github.com/users/zechengz/events{/privacy}", "received_events_url": "https://api.github.com/users/zechengz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "zechengz", "id": 21955420, "node_id": "MDQ6VXNlcjIxOTU1NDIw", "avatar_url": "https://avatars.githubusercontent.com/u/21955420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zechengz", "html_url": "https://github.com/zechengz", "followers_url": "https://api.github.com/users/zechengz/followers", "following_url": "https://api.github.com/users/zechengz/following{/other_user}", "gists_url": "https://api.github.com/users/zechengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zechengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zechengz/subscriptions", "organizations_url": "https://api.github.com/users/zechengz/orgs", "repos_url": "https://api.github.com/users/zechengz/repos", "events_url": "https://api.github.com/users/zechengz/events{/privacy}", "received_events_url": "https://api.github.com/users/zechengz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zechengz", "id": 21955420, "node_id": "MDQ6VXNlcjIxOTU1NDIw", "avatar_url": "https://avatars.githubusercontent.com/u/21955420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zechengz", "html_url": "https://github.com/zechengz", "followers_url": "https://api.github.com/users/zechengz/followers", "following_url": "https://api.github.com/users/zechengz/following{/other_user}", "gists_url": "https://api.github.com/users/zechengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zechengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zechengz/subscriptions", "organizations_url": "https://api.github.com/users/zechengz/orgs", "repos_url": "https://api.github.com/users/zechengz/repos", "events_url": "https://api.github.com/users/zechengz/events{/privacy}", "received_events_url": "https://api.github.com/users/zechengz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-10-18T22:02:20Z", "updated_at": "2022-10-19T06:21:12Z", "closed_at": "2022-10-19T06:17:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5771", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5771", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5771.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5771.patch", "merged_at": "2022-10-19T06:17:58Z"}, "body": "Add `temporal_strategy` to the `LightningNodeData`.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5771/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5721", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5721/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5721/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5721/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5721", "id": 1410176177, "node_id": "I_kwDOBlHMec5UDZSx", "number": 5721, "title": "CUDA error: device-side assert triggered while `RandomLinkSplit()`ing data", "user": {"login": "Newiz430", "id": 75777601, "node_id": "MDQ6VXNlcjc1Nzc3NjAx", "avatar_url": "https://avatars.githubusercontent.com/u/75777601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Newiz430", "html_url": "https://github.com/Newiz430", "followers_url": "https://api.github.com/users/Newiz430/followers", "following_url": "https://api.github.com/users/Newiz430/following{/other_user}", "gists_url": "https://api.github.com/users/Newiz430/gists{/gist_id}", "starred_url": "https://api.github.com/users/Newiz430/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Newiz430/subscriptions", "organizations_url": "https://api.github.com/users/Newiz430/orgs", "repos_url": "https://api.github.com/users/Newiz430/repos", "events_url": "https://api.github.com/users/Newiz430/events{/privacy}", "received_events_url": "https://api.github.com/users/Newiz430/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2022-10-15T14:00:37Z", "updated_at": "2022-10-19T15:48:09Z", "closed_at": "2022-10-19T15:48:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI'm encountering a CUDA error with `RandomLinkSplit()` on PubMed and some Non-Planetoid datasets like Amazon-Photo and WikiCS:\r\n~~~python\r\nimport torch_geometric.transforms as T\r\n\r\ndataset = get_dataset(path, args.dataset) # returns `torch_geometric.datasets.SomeDataset()`\r\ndata = dataset[0]\r\n...\r\n# splitting data\r\nsplit = T.RandomLinkSplit(num_val=0., num_test=0., is_undirected=True, add_negative_train_samples=False)\r\ntrain_data = split(data)[0] # line 122\r\n~~~\r\nWhen I run my training code on CUDA, assertion errors like \"index out of bounds\" occur:\r\n~~~\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [465,0,0], thread: [36,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [465,0,0], thread: [37,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [465,0,0], thread: [38,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [465,0,0], thread: [39,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [465,0,0], thread: [40,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [465,0,0], thread: [41,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [465,0,0], thread: [42,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [16,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [17,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [18,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [64,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [65,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [66,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [67,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [68,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [69,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [70,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [71,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [72,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [73,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [74,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [464,0,0], thread: [57,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [464,0,0], thread: [58,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [464,0,0], thread: [59,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [464,0,0], thread: [103,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [464,0,0], thread: [104,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [464,0,0], thread: [105,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [464,0,0], thread: [106,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [464,0,0], thread: [107,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [464,0,0], thread: [108,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [464,0,0], thread: [109,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [464,0,0], thread: [110,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [464,0,0], thread: [111,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [464,0,0], thread: [112,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [464,0,0], thread: [113,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [464,0,0], thread: [114,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [464,0,0], thread: [115,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [62,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [63,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [123,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [124,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [125,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [126,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [232,0,0], thread: [127,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\nTraceback (most recent call last):\r\n  File \".../train.py\", line 318, in <module>\r\n    res = test(epoch)\r\n  File \".../train.py\", line 122, in test\r\n    train_data = split(data)[0]\r\nFile \"/home/dhc/anaconda3/lib/python3.8/site-packages/torch_geometric/transforms/random_link_split.py\", line 116, in __call__\r\n  add_self_loops(data.edge_index)[0], num_nodes=data.num_nodes,\r\nFile \"/home/dhc/anaconda3/lib/python3.8/site-packages/torch_geometric/utils/loop.py\", line 82, in add_self_loops\r\n  N = maybe_num_nodes(edge_index, num_nodes)\r\nFile \"/home/dhc/anaconda3/lib/python3.8/site-packages/torch_geometric/utils/num_nodes.py\", line 25, in maybe_num_nodes\r\n  return int(edge_index.max()) + 1 if edge_index.numel() > 0 else 0\r\nRuntimeError: CUDA error: device-side assert triggered\r\n~~~\r\nThis is weird for me cause no errors pumping out and code proceeds successfully when I set `device='cpu'`, or use Cora / Citeseer on CUDA.\r\nI've pip-upgraded PyG to 2.1.0.post1 and the issue still exists, but at `negative_sampling.py` this time:\r\n~~~\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [100,0,0], thread: [0,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [100,0,0], thread: [1,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [100,0,0], thread: [2,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [100,0,0], thread: [3,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\n......\r\n/opt/conda/conda-bld/pytorch_1616554793803/work/aten/src/ATen/native/cuda/IndexKernel.cu:142: operator(): block: [44,0,0], thread: [63,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && \"index out of bounds\"` failed.\r\nTraceback (most recent call last):\r\n  File \"/home/dhc/new_ch/GCA/train.py\", line 318, in <module>\r\n    res = test(epoch)\r\n  File \"/home/dhc/new_ch/GCA/train.py\", line 122, in test\r\n    train_data = split(data)[0]\r\n  File \"/home/dhc/anaconda3/lib/python3.8/site-packages/torch_geometric/transforms/random_link_split.py\", line 207, in __call__\r\n    neg_edge_index = negative_sampling(edge_index, size,\r\n  File \"/home/dhc/anaconda3/lib/python3.8/site-packages/torch_geometric/utils/negative_sampling.py\", line 50, in negative_sampling\r\n    idx, population = edge_index_to_vector(edge_index, size, bipartite,\r\n  File \"/home/dhc/anaconda3/lib/python3.8/site-packages/torch_geometric/utils/negative_sampling.py\", line 277, in edge_index_to_vector\r\n    row, col = row[mask], col[mask]\r\nRuntimeError: CUDA error: device-side assert triggered\r\n~~~\r\nI'd appreciate a solution available for PyG==2.0.1. Huge thanks to anyone helping :hearts:\n\n### Environment\n\n* PyG version: 2.0.1, 2.1.0.post1 (I've tried on both versions)\r\n* PyTorch version: 1.8.1\r\n* OS: Ubuntu 16.04.7 LTS\r\n* Python version: 3.8\r\n* CUDA/cuDNN version: 11.1\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): `pip`", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5721/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5720", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5720/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5720/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5720/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5720", "id": 1410166942, "node_id": "I_kwDOBlHMec5UDXCe", "number": 5720, "title": "Expand_as RuntimeError in torch_scatter!!!", "user": {"login": "tjb-tech", "id": 56426168, "node_id": "MDQ6VXNlcjU2NDI2MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/56426168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjb-tech", "html_url": "https://github.com/tjb-tech", "followers_url": "https://api.github.com/users/tjb-tech/followers", "following_url": "https://api.github.com/users/tjb-tech/following{/other_user}", "gists_url": "https://api.github.com/users/tjb-tech/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjb-tech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjb-tech/subscriptions", "organizations_url": "https://api.github.com/users/tjb-tech/orgs", "repos_url": "https://api.github.com/users/tjb-tech/repos", "events_url": "https://api.github.com/users/tjb-tech/events{/privacy}", "received_events_url": "https://api.github.com/users/tjb-tech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-10-15T13:25:52Z", "updated_at": "2022-10-18T09:36:30Z", "closed_at": "2022-10-17T08:31:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi, I am inheritanting Messagepassing in pytorch_geometric to create my own graph conv, but I face the error below. To be exact, it occurs in function `propagate`, and I sent `edge_index`(shape: 2, edge_num) and `x` (shape: num_node, 128) into `propagate`. And I try my code on both linux and win. And they occurred the same problems. Note that I use the famous dataset Cora use the code `dataset = Planetoid(path, 'Cora', transform=T.NormalizeFeatures())`\r\n\r\nmy code: \r\n\r\n```python\r\nclass GATConv(MessagePassing):\r\n   \r\n    def __init__(self, in_channels, out_channels, heads=1, concat=True,\r\n                 negative_slope=0.2, reparam_mode=None, prior_mode=None,\r\n                 struct_dropout_mode=None, sample_size=1,\r\n                 val_use_mean=True,\r\n                 bias=True,\r\n                 **kwargs):\r\n        super(GATConv, self).__init__(aggr='add', **kwargs)\r\n\r\n    def forward(self, x, edge_index, size=None):\r\n        \"\"\"\"\"\"\r\n        if size is None and torch.is_tensor(x) and not self.skip_editing_edge_index:\r\n            edge_index, _ = remove_self_loops(edge_index)\r\n            edge_index, _ = add_self_loops(edge_index,\r\n                                           num_nodes=x.size(self.node_dim))\r\n\r\n        if torch.is_tensor(x):\r\n            x = torch.matmul(x, self.weight)\r\n        else:\r\n            x = (None if x[0] is None else torch.matmul(x[0], self.weight),\r\n                 None if x[1] is None else torch.matmul(x[1], self.weight))\r\n\r\n        out = self.propagate(edge_index, size=size, x=x)\r\n```\r\n\r\nimag of bug:\r\n\r\non linux:\r\n![J4U6NM5}) )(0RA2LZBQG8K](https://user-images.githubusercontent.com/56426168/195988616-084d5abd-d4bc-4719-b0d6-9ced31b75728.png)\r\non win\r\n![L9~ GBZ1WKSA{{0S1W M08Q](https://user-images.githubusercontent.com/56426168/195988620-77e96e4a-29be-4b77-872e-97130d4db50e.png)\r\n\r\n\n\n### Environment\n\n* PyG version: 2.0.3\r\n* PyTorch version: 1.9.1\r\n* OS: Ubuntu x86_64\r\n* Python version: 3.8.12\r\n* CUDA/cuDNN version: 11.1\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): source\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): torch-scatter: 2.0.9; torch-sparse: 0.6.12\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5720/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5697", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5697/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5697/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5697/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5697", "id": 1409325588, "node_id": "PR_kwDOBlHMec5A0Nj-", "number": 5697, "title": "Fix `pyg-lib` `hetero_neighbor_sampler` usage", "user": {"login": "mszarma", "id": 28142714, "node_id": "MDQ6VXNlcjI4MTQyNzE0", "avatar_url": "https://avatars.githubusercontent.com/u/28142714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mszarma", "html_url": "https://github.com/mszarma", "followers_url": "https://api.github.com/users/mszarma/followers", "following_url": "https://api.github.com/users/mszarma/following{/other_user}", "gists_url": "https://api.github.com/users/mszarma/gists{/gist_id}", "starred_url": "https://api.github.com/users/mszarma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mszarma/subscriptions", "organizations_url": "https://api.github.com/users/mszarma/orgs", "repos_url": "https://api.github.com/users/mszarma/repos", "events_url": "https://api.github.com/users/mszarma/events{/privacy}", "received_events_url": "https://api.github.com/users/mszarma/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mszarma", "id": 28142714, "node_id": "MDQ6VXNlcjI4MTQyNzE0", "avatar_url": "https://avatars.githubusercontent.com/u/28142714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mszarma", "html_url": "https://github.com/mszarma", "followers_url": "https://api.github.com/users/mszarma/followers", "following_url": "https://api.github.com/users/mszarma/following{/other_user}", "gists_url": "https://api.github.com/users/mszarma/gists{/gist_id}", "starred_url": "https://api.github.com/users/mszarma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mszarma/subscriptions", "organizations_url": "https://api.github.com/users/mszarma/orgs", "repos_url": "https://api.github.com/users/mszarma/repos", "events_url": "https://api.github.com/users/mszarma/events{/privacy}", "received_events_url": "https://api.github.com/users/mszarma/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mszarma", "id": 28142714, "node_id": "MDQ6VXNlcjI4MTQyNzE0", "avatar_url": "https://avatars.githubusercontent.com/u/28142714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mszarma", "html_url": "https://github.com/mszarma", "followers_url": "https://api.github.com/users/mszarma/followers", "following_url": "https://api.github.com/users/mszarma/following{/other_user}", "gists_url": "https://api.github.com/users/mszarma/gists{/gist_id}", "starred_url": "https://api.github.com/users/mszarma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mszarma/subscriptions", "organizations_url": "https://api.github.com/users/mszarma/orgs", "repos_url": "https://api.github.com/users/mszarma/repos", "events_url": "https://api.github.com/users/mszarma/events{/privacy}", "received_events_url": "https://api.github.com/users/mszarma/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-10-14T13:05:14Z", "updated_at": "2022-10-15T06:30:03Z", "closed_at": "2022-10-15T06:30:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5697", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5697", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5697.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5697.patch", "merged_at": "2022-10-15T06:30:03Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5697/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5677", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5677/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5677/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5677/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5677", "id": 1407408595, "node_id": "PR_kwDOBlHMec5Atxji", "number": 5677, "title": "Fix `auto_select_gpus` in GraphGym", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3465159234, "node_id": "LA_kwDOBlHMec7OiiJC", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/graphgym", "name": "graphgym", "color": "BBD6C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-10-13T08:54:31Z", "updated_at": "2022-10-13T09:03:17Z", "closed_at": "2022-10-13T09:03:17Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5677", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5677", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5677.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5677.patch", "merged_at": "2022-10-13T09:03:17Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5677/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5671", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5671/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5671/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5671/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5671", "id": 1406949489, "node_id": "I_kwDOBlHMec5T3Fhx", "number": 5671, "title": "Aborted (core dumped) on import torch_geometric", "user": {"login": "bryanjohns", "id": 87665089, "node_id": "MDQ6VXNlcjg3NjY1MDg5", "avatar_url": "https://avatars.githubusercontent.com/u/87665089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryanjohns", "html_url": "https://github.com/bryanjohns", "followers_url": "https://api.github.com/users/bryanjohns/followers", "following_url": "https://api.github.com/users/bryanjohns/following{/other_user}", "gists_url": "https://api.github.com/users/bryanjohns/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryanjohns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryanjohns/subscriptions", "organizations_url": "https://api.github.com/users/bryanjohns/orgs", "repos_url": "https://api.github.com/users/bryanjohns/repos", "events_url": "https://api.github.com/users/bryanjohns/events{/privacy}", "received_events_url": "https://api.github.com/users/bryanjohns/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-10-13T00:13:54Z", "updated_at": "2022-10-13T20:41:05Z", "closed_at": "2022-10-13T20:41:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nI installed torch_geometric using this command:\r\n\r\n```\r\npip install torch-scatter torch-sparse torch-geometric -f https://data.pyg.org/whl/torch-1.12.1+cu116.html\r\n```\r\n\r\nIn the python interpreter I get\r\n\r\n```\r\n>>> import torch_geometric\r\nfree(): invalid pointer\r\nAborted (core dumped)\r\n```\r\n\r\nversions:\r\n```\r\n>>> import torch\r\n>>> torch.__version__\r\n'1.12.1+cu116'\r\n>>> torch.cuda.is_available()\r\nTrue\r\n>> torch.version.cuda\r\n'11.6'\r\n>>> import torch_sparse\r\n>>> torch_spare.__version__\r\n'0.6.15'\r\n>>> import torch_scatter\r\n>>> torch_scatter.__version__\r\n'2.0.9'\r\n```\r\n\r\n### Environment\r\n\r\n* PyG version: `2.1.0.post1`\r\n* PyTorch version: `1.12.1+cu116`\r\n* OS: `Ubuntu 20.04.5 LTS`\r\n* Python version: `3.8.10`\r\n* CUDA/cuDNN version: `11.6`\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): `pip`\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): see above\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5671/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5670", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5670/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5670/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5670/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5670", "id": 1406912783, "node_id": "I_kwDOBlHMec5T28kP", "number": 5670, "title": "test_mask_feature CI failure", "user": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-10-12T23:22:07Z", "updated_at": "2022-10-13T04:53:13Z", "closed_at": "2022-10-13T04:53:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\n```\r\n======================================================= FAILURES =======================================================\r\n__________________________________________________ test_mask_feature ___________________________________________________\r\n\r\n    def test_mask_feature():\r\n        x = torch.tensor([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]],\r\n                         dtype=torch.float)\r\n\r\n        out = mask_feature(x, training=False)\r\n        assert out[0].tolist() == x.tolist()\r\n        assert torch.all(out[1])\r\n\r\n        torch.manual_seed(4)\r\n        out = mask_feature(x)\r\n        assert out[0].tolist() == [[1.0, 2.0, 0.0, 0.0], [5.0, 6.0, 0.0, 0.0],\r\n                                   [9.0, 10.0, 0.0, 0.0]]\r\n        assert out[1].tolist() == [[True, True, False, False]]\r\n\r\n        torch.manual_seed(5)\r\n        out = mask_feature(x, mode='row')\r\n        assert out[0].tolist() == [[1.0, 2.0, 3.0, 4.0], [0.0, 0.0, 0.0, 0.0],\r\n                                   [9.0, 10.0, 11.0, 12.0]]\r\n        assert out[1].tolist() == [[True], [False], [True]]\r\n\r\n        torch.manual_seed(7)\r\n        out = mask_feature(x, mode='all')\r\n>       assert out[0].tolist() == [[1.0, 0.0, 0.0, 4.0], [5.0, 6.0, 7.0, 0.0],\r\n                                   [9.0, 10.0, 0.0, 12.0]]\r\nE       assert [[1.0, 2.0, 0..., 11.0, 12.0]] == [[1.0, 0.0, 0...0, 0.0, 12.0]]\r\nE         At index 0 diff: [1.0, 2.0, 0.0, 0.0] != [1.0, 0.0, 0.0, 4.0]\r\nE         Use -v to get the full diff\r\n\r\ntest/utils/test_augmentation.py:57: AssertionError\r\n```\r\n\r\n### Environment\r\n\r\nlatest pyg and pyg-lib", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5670/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5656", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5656/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5656/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5656/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5656", "id": 1405338417, "node_id": "I_kwDOBlHMec5Tw8Mx", "number": 5656, "title": "Exporting to ONNX doesn't yield any errors, but also doesn't generate an output file", "user": {"login": "Wantcha", "id": 64153611, "node_id": "MDQ6VXNlcjY0MTUzNjEx", "avatar_url": "https://avatars.githubusercontent.com/u/64153611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wantcha", "html_url": "https://github.com/Wantcha", "followers_url": "https://api.github.com/users/Wantcha/followers", "following_url": "https://api.github.com/users/Wantcha/following{/other_user}", "gists_url": "https://api.github.com/users/Wantcha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wantcha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wantcha/subscriptions", "organizations_url": "https://api.github.com/users/Wantcha/orgs", "repos_url": "https://api.github.com/users/Wantcha/repos", "events_url": "https://api.github.com/users/Wantcha/events{/privacy}", "received_events_url": "https://api.github.com/users/Wantcha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358958308, "node_id": "MDU6TGFiZWwzMzU4OTU4MzA4", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/1%20-%20Priority%20P1", "name": "1 - Priority P1", "color": "FBCA04", "default": false, "description": ""}, {"id": 4580361871, "node_id": "LA_kwDOBlHMec8AAAABEQLGjw", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/deployment", "name": "deployment", "color": "EA4F59", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-10-11T23:14:19Z", "updated_at": "2022-10-16T19:27:38Z", "closed_at": "2022-10-16T19:27:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI'm running a pretty standard GNN model and I'm trying to export it to ONNX using:\r\n\r\n```python\r\ninput_values = (g.x, g.edge_index, g.edge_attr)\r\ninput_names = ['node_attr', 'edge_index', 'edge_attr']\r\ntorch.onnx.export(model, input_values, \"physics_model.onnx\", opset_version=16, input_names=input_names,\r\n                        output_names=['coords'], dynamic_axes={'node_attr':{0:'num_nodes'}, 'edge_index':{1:'num_edges'}, 'edge_attr':{0:'num_edges'}}, verbose=True)\r\nprint('done')\r\n```\r\nBut the 'done' is never reached. The console outputs some tensors, then suddenly stops the execution of the rest of the program. I've run the model myself before and it works fine. What could be the reason? I found this similar issue: https://github.com/ultralytics/yolov5/issues/9630 , but I couldn't understand how to implement the author's solution.\n\n### Environment\n\n* PyG version: 2.1\r\n* PyTorch version: 1.12.1\r\n* OS: Windows 10\r\n* Python version: 3.9.13\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5656/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5621", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5621/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5621/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5621/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5621", "id": 1400623998, "node_id": "PR_kwDOBlHMec5AXamZ", "number": 5621, "title": "Fix typo in `aggr/base.py`.", "user": {"login": "BuddhiWathsala", "id": 18663444, "node_id": "MDQ6VXNlcjE4NjYzNDQ0", "avatar_url": "https://avatars.githubusercontent.com/u/18663444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BuddhiWathsala", "html_url": "https://github.com/BuddhiWathsala", "followers_url": "https://api.github.com/users/BuddhiWathsala/followers", "following_url": "https://api.github.com/users/BuddhiWathsala/following{/other_user}", "gists_url": "https://api.github.com/users/BuddhiWathsala/gists{/gist_id}", "starred_url": "https://api.github.com/users/BuddhiWathsala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BuddhiWathsala/subscriptions", "organizations_url": "https://api.github.com/users/BuddhiWathsala/orgs", "repos_url": "https://api.github.com/users/BuddhiWathsala/repos", "events_url": "https://api.github.com/users/BuddhiWathsala/events{/privacy}", "received_events_url": "https://api.github.com/users/BuddhiWathsala/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "BuddhiWathsala", "id": 18663444, "node_id": "MDQ6VXNlcjE4NjYzNDQ0", "avatar_url": "https://avatars.githubusercontent.com/u/18663444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BuddhiWathsala", "html_url": "https://github.com/BuddhiWathsala", "followers_url": "https://api.github.com/users/BuddhiWathsala/followers", "following_url": "https://api.github.com/users/BuddhiWathsala/following{/other_user}", "gists_url": "https://api.github.com/users/BuddhiWathsala/gists{/gist_id}", "starred_url": "https://api.github.com/users/BuddhiWathsala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BuddhiWathsala/subscriptions", "organizations_url": "https://api.github.com/users/BuddhiWathsala/orgs", "repos_url": "https://api.github.com/users/BuddhiWathsala/repos", "events_url": "https://api.github.com/users/BuddhiWathsala/events{/privacy}", "received_events_url": "https://api.github.com/users/BuddhiWathsala/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "BuddhiWathsala", "id": 18663444, "node_id": "MDQ6VXNlcjE4NjYzNDQ0", "avatar_url": "https://avatars.githubusercontent.com/u/18663444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BuddhiWathsala", "html_url": "https://github.com/BuddhiWathsala", "followers_url": "https://api.github.com/users/BuddhiWathsala/followers", "following_url": "https://api.github.com/users/BuddhiWathsala/following{/other_user}", "gists_url": "https://api.github.com/users/BuddhiWathsala/gists{/gist_id}", "starred_url": "https://api.github.com/users/BuddhiWathsala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BuddhiWathsala/subscriptions", "organizations_url": "https://api.github.com/users/BuddhiWathsala/orgs", "repos_url": "https://api.github.com/users/BuddhiWathsala/repos", "events_url": "https://api.github.com/users/BuddhiWathsala/events{/privacy}", "received_events_url": "https://api.github.com/users/BuddhiWathsala/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-10-07T05:03:35Z", "updated_at": "2022-10-07T14:46:35Z", "closed_at": "2022-10-07T07:33:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5621", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5621", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5621.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5621.patch", "merged_at": "2022-10-07T07:33:26Z"}, "body": "Since it has index values with 0, 1, and 2, the output shape should be [3, 64]. Running this example code will give you [3, 64] output.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5621/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5614", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5614/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5614/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5614/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5614", "id": 1398332752, "node_id": "PR_kwDOBlHMec5APjCr", "number": 5614, "title": "Fixing TorchScript support in `BatchNorm`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-10-05T20:20:36Z", "updated_at": "2022-10-05T20:27:32Z", "closed_at": "2022-10-05T20:27:31Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5614", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5614", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5614.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5614.patch", "merged_at": "2022-10-05T20:27:31Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5614/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5610", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5610/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5610/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5610/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5610", "id": 1397230586, "node_id": "PR_kwDOBlHMec5AL3oU", "number": 5610, "title": "Fix `RGCN+pyg-lib` for `LongTensor` input ", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4017636777, "node_id": "LA_kwDOBlHMec7veEWp", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/example", "name": "example", "color": "27D88A", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-10-05T04:59:24Z", "updated_at": "2022-10-05T05:00:32Z", "closed_at": "2022-10-05T05:00:31Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5610", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5610", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5610.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5610.patch", "merged_at": "2022-10-05T05:00:31Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5610/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5608", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5608/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5608/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5608/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5608", "id": 1397100140, "node_id": "I_kwDOBlHMec5TRg5s", "number": 5608, "title": "`segment_matmul` in `RGCNConv` throws RuntimeError", "user": {"login": "isratnisa", "id": 18449426, "node_id": "MDQ6VXNlcjE4NDQ5NDI2", "avatar_url": "https://avatars.githubusercontent.com/u/18449426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isratnisa", "html_url": "https://github.com/isratnisa", "followers_url": "https://api.github.com/users/isratnisa/followers", "following_url": "https://api.github.com/users/isratnisa/following{/other_user}", "gists_url": "https://api.github.com/users/isratnisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/isratnisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isratnisa/subscriptions", "organizations_url": "https://api.github.com/users/isratnisa/orgs", "repos_url": "https://api.github.com/users/isratnisa/repos", "events_url": "https://api.github.com/users/isratnisa/events{/privacy}", "received_events_url": "https://api.github.com/users/isratnisa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-10-05T02:44:28Z", "updated_at": "2022-10-05T19:40:30Z", "closed_at": "2022-10-05T05:00:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\nInstalled `pyg_lib` and ran:\r\n```\r\n$cd pytorch_geometric\r\n$python examples/rgcn.py --dataset BGS\r\n```\r\n\r\nGot the following error:\r\n```Traceback (most recent call last):\r\n  File \"examples/rgcn.py\", line 79, in <module>\r\n    loss = train()\r\n  File \"examples/rgcn.py\", line 62, in train\r\n    out = model(data.edge_index, data.edge_type)\r\n  File \"/home/ubuntu/.local/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 1130, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"examples/rgcn.py\", line 48, in forward\r\n    x = F.relu(self.conv1(None, edge_index, edge_type))\r\n  File \"/home/ubuntu/.local/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 1130, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"/usr/local/lib/python3.8/dist-packages/torch_geometric-2.1.0-py3.8.egg/torch_geometric/nn/conv/rgcn_conv.py\", line 235, in forward\r\n    out = self.propagate(edge_index, x=x_l,\r\n  File \"/usr/local/lib/python3.8/dist-packages/torch_geometric-2.1.0-py3.8.egg/torch_geometric/nn/conv/message_passing.py\", line 409, in propagate\r\n    out = self.message(**msg_kwargs)\r\n  File \"/usr/local/lib/python3.8/dist-packages/torch_geometric-2.1.0-py3.8.egg/torch_geometric/nn/conv/rgcn_conv.py\", line 264, in message\r\n    return segment_matmul(x_j, edge_type_ptr, self.weight)\r\n  File \"/home/ubuntu/.local/lib/python3.8/site-packages/pyg_lib/ops/__init__.py\", line 125, in segment_matmul\r\n    return SegmentMatmul.apply(inputs, ptr, other)\r\n  File \"/home/ubuntu/.local/lib/python3.8/site-packages/pyg_lib/ops/__init__.py\", line 11, in forward\r\n    return torch.ops.pyg.segment_matmul(inputs, ptr, other)\r\n  File \"/home/ubuntu/.local/lib/python3.8/site-packages/torch/_ops.py\", line 143, in __call__\r\n    return self._op(*args, **kwargs or {})\r\nRuntimeError: expected scalar type Float but found Long\r\n```\r\nTried to fix the issue with type casting but no luck.  When `pyg_lib` is disabled the code works fine.\r\n\r\n### Environment\r\n\r\n* PyG version: 2.1.0\r\n* PyTorch version: 1.12\r\n* OS: Ubuntu\r\n* Python version: 3.8\r\n* CUDA/cuDNN version: 11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5608/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5602", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5602/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5602/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5602/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5602", "id": 1395537309, "node_id": "PR_kwDOBlHMec5AGQQ7", "number": 5602, "title": "Fix `LinkNeighborLoader` with sorted timestamps", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-10-04T01:16:51Z", "updated_at": "2022-10-04T13:25:45Z", "closed_at": "2022-10-04T13:25:45Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5602", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5602", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5602.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5602.patch", "merged_at": "2022-10-04T13:25:45Z"}, "body": "`pyg-lib.neighbor_sample` introduced the `seed_time` argument, which allows us to override the timestamp for the given set of seed nodes. This PR introduces the change to PyG, allowing link neighbor loader tests to pass again.\r\n\r\ncc @wsad1 ", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5602/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5601", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5601/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5601/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5601/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5601", "id": 1395071129, "node_id": "PR_kwDOBlHMec5AEswq", "number": 5601, "title": "Avoid modifying `mode_kwargs` in `MultiAggregation`", "user": {"login": "lightaime", "id": 23632352, "node_id": "MDQ6VXNlcjIzNjMyMzUy", "avatar_url": "https://avatars.githubusercontent.com/u/23632352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lightaime", "html_url": "https://github.com/lightaime", "followers_url": "https://api.github.com/users/lightaime/followers", "following_url": "https://api.github.com/users/lightaime/following{/other_user}", "gists_url": "https://api.github.com/users/lightaime/gists{/gist_id}", "starred_url": "https://api.github.com/users/lightaime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lightaime/subscriptions", "organizations_url": "https://api.github.com/users/lightaime/orgs", "repos_url": "https://api.github.com/users/lightaime/repos", "events_url": "https://api.github.com/users/lightaime/events{/privacy}", "received_events_url": "https://api.github.com/users/lightaime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "lightaime", "id": 23632352, "node_id": "MDQ6VXNlcjIzNjMyMzUy", "avatar_url": "https://avatars.githubusercontent.com/u/23632352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lightaime", "html_url": "https://github.com/lightaime", "followers_url": "https://api.github.com/users/lightaime/followers", "following_url": "https://api.github.com/users/lightaime/following{/other_user}", "gists_url": "https://api.github.com/users/lightaime/gists{/gist_id}", "starred_url": "https://api.github.com/users/lightaime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lightaime/subscriptions", "organizations_url": "https://api.github.com/users/lightaime/orgs", "repos_url": "https://api.github.com/users/lightaime/repos", "events_url": "https://api.github.com/users/lightaime/events{/privacy}", "received_events_url": "https://api.github.com/users/lightaime/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lightaime", "id": 23632352, "node_id": "MDQ6VXNlcjIzNjMyMzUy", "avatar_url": "https://avatars.githubusercontent.com/u/23632352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lightaime", "html_url": "https://github.com/lightaime", "followers_url": "https://api.github.com/users/lightaime/followers", "following_url": "https://api.github.com/users/lightaime/following{/other_user}", "gists_url": "https://api.github.com/users/lightaime/gists{/gist_id}", "starred_url": "https://api.github.com/users/lightaime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lightaime/subscriptions", "organizations_url": "https://api.github.com/users/lightaime/orgs", "repos_url": "https://api.github.com/users/lightaime/repos", "events_url": "https://api.github.com/users/lightaime/events{/privacy}", "received_events_url": "https://api.github.com/users/lightaime/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-10-03T17:22:01Z", "updated_at": "2022-10-03T18:35:02Z", "closed_at": "2022-10-03T18:34:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5601", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5601", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5601.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5601.patch", "merged_at": "2022-10-03T18:34:58Z"}, "body": "This PR avoids modifying `mode_kwargs` in `MultiAggregation` which is helpful if we want to share a `mode_kwargs` dict for different `MultiAggregation` layers.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5601/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5598", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5598/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5598/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5598/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5598", "id": 1394693574, "node_id": "PR_kwDOBlHMec5ADbe1", "number": 5598, "title": "Fix C++ example compilation by linking cusparse", "user": {"login": "geekLucian", "id": 79909456, "node_id": "MDQ6VXNlcjc5OTA5NDU2", "avatar_url": "https://avatars.githubusercontent.com/u/79909456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geekLucian", "html_url": "https://github.com/geekLucian", "followers_url": "https://api.github.com/users/geekLucian/followers", "following_url": "https://api.github.com/users/geekLucian/following{/other_user}", "gists_url": "https://api.github.com/users/geekLucian/gists{/gist_id}", "starred_url": "https://api.github.com/users/geekLucian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geekLucian/subscriptions", "organizations_url": "https://api.github.com/users/geekLucian/orgs", "repos_url": "https://api.github.com/users/geekLucian/repos", "events_url": "https://api.github.com/users/geekLucian/events{/privacy}", "received_events_url": "https://api.github.com/users/geekLucian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 1267385339, "node_id": "MDU6TGFiZWwxMjY3Mzg1MzM5", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/installation", "name": "installation", "color": "bfdadc", "default": false, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "geekLucian", "id": 79909456, "node_id": "MDQ6VXNlcjc5OTA5NDU2", "avatar_url": "https://avatars.githubusercontent.com/u/79909456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geekLucian", "html_url": "https://github.com/geekLucian", "followers_url": "https://api.github.com/users/geekLucian/followers", "following_url": "https://api.github.com/users/geekLucian/following{/other_user}", "gists_url": "https://api.github.com/users/geekLucian/gists{/gist_id}", "starred_url": "https://api.github.com/users/geekLucian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geekLucian/subscriptions", "organizations_url": "https://api.github.com/users/geekLucian/orgs", "repos_url": "https://api.github.com/users/geekLucian/repos", "events_url": "https://api.github.com/users/geekLucian/events{/privacy}", "received_events_url": "https://api.github.com/users/geekLucian/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "geekLucian", "id": 79909456, "node_id": "MDQ6VXNlcjc5OTA5NDU2", "avatar_url": "https://avatars.githubusercontent.com/u/79909456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geekLucian", "html_url": "https://github.com/geekLucian", "followers_url": "https://api.github.com/users/geekLucian/followers", "following_url": "https://api.github.com/users/geekLucian/following{/other_user}", "gists_url": "https://api.github.com/users/geekLucian/gists{/gist_id}", "starred_url": "https://api.github.com/users/geekLucian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geekLucian/subscriptions", "organizations_url": "https://api.github.com/users/geekLucian/orgs", "repos_url": "https://api.github.com/users/geekLucian/repos", "events_url": "https://api.github.com/users/geekLucian/events{/privacy}", "received_events_url": "https://api.github.com/users/geekLucian/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-10-03T13:00:08Z", "updated_at": "2022-10-03T15:01:13Z", "closed_at": "2022-10-03T15:01:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5598", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5598", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5598.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5598.patch", "merged_at": "2022-10-03T15:01:13Z"}, "body": "I followed instructions in [examples/cpp/README.md](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/cpp/README.md) to build C++ example, and I encountered errors as below:\r\n\r\n```bash\r\n$ cmake --build .\r\n[ 50%] Building CXX object CMakeFiles/hello-world.dir/main.cpp.o\r\n[100%] Linking CXX executable hello-world\r\n/usr/bin/ld: /usr/local/lib/libtorchsparse.so: undefined reference to `cusparseDcsrgemm2_bufferSizeExt'\r\n/usr/bin/ld: /usr/local/lib/libtorchsparse.so: undefined reference to `cusparseXcsrgemm2Nnz'\r\n/usr/bin/ld: /usr/local/lib/libtorchsparse.so: undefined reference to `cusparseScsrgemm2_bufferSizeExt'\r\n/usr/bin/ld: /usr/local/lib/libtorchsparse.so: undefined reference to `cusparseDcsrgemm2'\r\n/usr/bin/ld: /usr/local/lib/libtorchsparse.so: undefined reference to `cusparseScsrgemm2'\r\ncollect2: error: ld returned 1 exit status\r\nmake[2]: *** [CMakeFiles/hello-world.dir/build.make:114: hello-world] Error 1\r\nmake[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/hello-world.dir/all] Error 2\r\nmake: *** [Makefile:91: all] Error 2\r\n```\r\n\r\nIt seems that the linker cannot find lib `cusparse`. Adding `cusparse` in target link libraries fix this for me.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5598/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5590", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5590/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5590/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5590/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5590", "id": 1393619827, "node_id": "I_kwDOBlHMec5TEPNz", "number": 5590, "title": "A question about Dataloader", "user": {"login": "ZhaoYuTJPU", "id": 86563793, "node_id": "MDQ6VXNlcjg2NTYzNzkz", "avatar_url": "https://avatars.githubusercontent.com/u/86563793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZhaoYuTJPU", "html_url": "https://github.com/ZhaoYuTJPU", "followers_url": "https://api.github.com/users/ZhaoYuTJPU/followers", "following_url": "https://api.github.com/users/ZhaoYuTJPU/following{/other_user}", "gists_url": "https://api.github.com/users/ZhaoYuTJPU/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZhaoYuTJPU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZhaoYuTJPU/subscriptions", "organizations_url": "https://api.github.com/users/ZhaoYuTJPU/orgs", "repos_url": "https://api.github.com/users/ZhaoYuTJPU/repos", "events_url": "https://api.github.com/users/ZhaoYuTJPU/events{/privacy}", "received_events_url": "https://api.github.com/users/ZhaoYuTJPU/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-10-02T02:40:45Z", "updated_at": "2022-10-03T11:37:33Z", "closed_at": "2022-10-03T11:37:33Z", "author_association": "NONE", "active_lock_reason": null, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5590/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5584", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5584/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5584/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5584/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5584", "id": 1392432169, "node_id": "I_kwDOBlHMec5S_tQp", "number": 5584, "title": "a bug about Backpropagation", "user": {"login": "ZhaoYuTJPU", "id": 86563793, "node_id": "MDQ6VXNlcjg2NTYzNzkz", "avatar_url": "https://avatars.githubusercontent.com/u/86563793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZhaoYuTJPU", "html_url": "https://github.com/ZhaoYuTJPU", "followers_url": "https://api.github.com/users/ZhaoYuTJPU/followers", "following_url": "https://api.github.com/users/ZhaoYuTJPU/following{/other_user}", "gists_url": "https://api.github.com/users/ZhaoYuTJPU/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZhaoYuTJPU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZhaoYuTJPU/subscriptions", "organizations_url": "https://api.github.com/users/ZhaoYuTJPU/orgs", "repos_url": "https://api.github.com/users/ZhaoYuTJPU/repos", "events_url": "https://api.github.com/users/ZhaoYuTJPU/events{/privacy}", "received_events_url": "https://api.github.com/users/ZhaoYuTJPU/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-09-30T13:19:46Z", "updated_at": "2022-10-03T11:37:19Z", "closed_at": "2022-10-02T02:27:44Z", "author_association": "NONE", "active_lock_reason": null, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5584/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5581", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5581/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5581/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5581/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5581", "id": 1392188150, "node_id": "I_kwDOBlHMec5S-xr2", "number": 5581, "title": "RandomLinkSplit gives no `neg_edge_label` on dense graphs", "user": {"login": "andreimargeloiu", "id": 18227298, "node_id": "MDQ6VXNlcjE4MjI3Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/18227298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreimargeloiu", "html_url": "https://github.com/andreimargeloiu", "followers_url": "https://api.github.com/users/andreimargeloiu/followers", "following_url": "https://api.github.com/users/andreimargeloiu/following{/other_user}", "gists_url": "https://api.github.com/users/andreimargeloiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreimargeloiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreimargeloiu/subscriptions", "organizations_url": "https://api.github.com/users/andreimargeloiu/orgs", "repos_url": "https://api.github.com/users/andreimargeloiu/repos", "events_url": "https://api.github.com/users/andreimargeloiu/events{/privacy}", "received_events_url": "https://api.github.com/users/andreimargeloiu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358958730, "node_id": "MDU6TGFiZWwzMzU4OTU4NzMw", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/2%20-%20Priority%20P2", "name": "2 - Priority P2", "color": "006B75", "default": false, "description": ""}, {"id": 4052698076, "node_id": "LA_kwDOBlHMec7xj0Pc", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/transform", "name": "transform", "color": "480283", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2022-09-30T10:00:32Z", "updated_at": "2022-10-10T23:57:44Z", "closed_at": "2022-10-10T23:57:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\n**Context:** I'm programmatically creating undirected graphs for training a Graph Autoencoder (GAE). Some graphs are very dense, containing 90% of all possible edges. \r\n\r\nTraining the GAE requires sampling missing edges as follows:\r\n```T.RandomLinkSplit(num_val=0.15, num_test=0, is_undirected=True, split_labels=True, add_negative_train_samples=True, neg_sampling_ratio=1.0)```\r\n\r\n**Issue:** Because the graphs are too dense, there aren't enough missing edges to sample negative edges. Consider a graph with 100 nodes and 9000 edges (from a maximum of 9900 edges). There are only 900 missing edges to sample as negative edges, but because I'm setting `neg_sampling_ratio=1.0`, PyG expected to find 9000 missing edges.\r\n\r\n**The issue is that PyG doesn't check there aren't enough missing edges, and it creates training datasets without setting `neg_edge_label`.** When creating the [training data](https://github.com/pyg-team/pytorch_geometric/blob/d8800b64ce42a8d0f8ab3a1cf22b935d445a826c/torch_geometric/transforms/random_link_split.py#L217), the current code doesn't assign any `neg_edge_index` to the training data. See below the train/valid/test data.\r\n\r\n```\r\n(Data(x=[141, 141], edge_index=[2, 16072], pos_edge_label=[8036], pos_edge_label_index=[2, 8036]), # Train; notice no negative edges\r\n Data(x=[141, 141], edge_index=[2, 16072], pos_edge_label=[1417], pos_edge_label_index=[2, 1417], neg_edge_label=[834], neg_edge_label_index=[2, 834]), # Validation\r\n Data(x=[141, 141], edge_index=[2, 18906], pos_edge_label=[0], pos_edge_label_index=[2, 0])) # Test\r\n```\r\n\r\n**Error:** When creating a dataloader comes the `KeyError: 'neg_edge_label'` because the training data is missing this key.\r\n\r\n```\r\ngnn_dataloader = tg.loader.DataLoader(graphs_dataset, batch_size=len(graphs_dataset), shuffle=True)\r\ngnn_batch_train, _, _ = next(iter(gnn_dataloader))\r\n```\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n/tmp/ipykernel_175984/1912375602.py in <module>\r\n      1 gnn_dataloader = tg.loader.DataLoader(graphs_dataset, batch_size=len(graphs_dataset), shuffle=True) # exclude_keys=['neg_edge_label']\r\n----> 2 gnn_batch_train, _, _ = next(iter(gnn_dataloader))\r\n\r\n~/miniconda3/envs/low-data/lib/python3.7/site-packages/torch/utils/data/dataloader.py in __next__(self)\r\n    519             if self._sampler_iter is None:\r\n    520                 self._reset()\r\n--> 521             data = self._next_data()\r\n    522             self._num_yielded += 1\r\n    523             if self._dataset_kind == _DatasetKind.Iterable and \\\r\n\r\n~/miniconda3/envs/low-data/lib/python3.7/site-packages/torch/utils/data/dataloader.py in _next_data(self)\r\n    559     def _next_data(self):\r\n    560         index = self._next_index()  # may raise StopIteration\r\n--> 561         data = self._dataset_fetcher.fetch(index)  # may raise StopIteration\r\n    562         if self._pin_memory:\r\n    563             data = _utils.pin_memory.pin_memory(data)\r\n\r\n~/miniconda3/envs/low-data/lib/python3.7/site-packages/torch/utils/data/_utils/fetch.py in fetch(self, possibly_batched_index)\r\n     50         else:\r\n     51             data = self.dataset[possibly_batched_index]\r\n---> 52         return self.collate_fn(data)\r\n\r\n~/miniconda3/envs/low-data/lib/python3.7/site-packages/torch_geometric/loader/dataloader.py in __call__(self, batch)\r\n     32             return type(elem)(*(self(s) for s in zip(*batch)))\r\n     33         elif isinstance(elem, Sequence) and not isinstance(elem, str):\r\n---> 34             return [self(s) for s in zip(*batch)]\r\n     35 \r\n     36         raise TypeError(f'DataLoader found invalid type: {type(elem)}')\r\n\r\n~/miniconda3/envs/low-data/lib/python3.7/site-packages/torch_geometric/loader/dataloader.py in <listcomp>(.0)\r\n     32             return type(elem)(*(self(s) for s in zip(*batch)))\r\n     33         elif isinstance(elem, Sequence) and not isinstance(elem, str):\r\n---> 34             return [self(s) for s in zip(*batch)]\r\n     35 \r\n     36         raise TypeError(f'DataLoader found invalid type: {type(elem)}')\r\n\r\n~/miniconda3/envs/low-data/lib/python3.7/site-packages/torch_geometric/loader/dataloader.py in __call__(self, batch)\r\n     18         if isinstance(elem, BaseData):\r\n     19             return Batch.from_data_list(batch, self.follow_batch,\r\n---> 20                                         self.exclude_keys)\r\n     21         elif isinstance(elem, torch.Tensor):\r\n     22             return default_collate(batch)\r\n\r\n~/miniconda3/envs/low-data/lib/python3.7/site-packages/torch_geometric/data/batch.py in from_data_list(cls, data_list, follow_batch, exclude_keys)\r\n     72             add_batch=not isinstance(data_list[0], Batch),\r\n     73             follow_batch=follow_batch,\r\n---> 74             exclude_keys=exclude_keys,\r\n     75         )\r\n     76 \r\n\r\n~/miniconda3/envs/low-data/lib/python3.7/site-packages/torch_geometric/data/collate.py in collate(cls, data_list, increment, add_batch, follow_batch, exclude_keys)\r\n     68                 continue\r\n     69 \r\n---> 70             values = [store[attr] for store in stores]\r\n     71 \r\n     72             # The `num_nodes` attribute needs special treatment, as we need to\r\n\r\n~/miniconda3/envs/low-data/lib/python3.7/site-packages/torch_geometric/data/collate.py in <listcomp>(.0)\r\n     68                 continue\r\n     69 \r\n---> 70             values = [store[attr] for store in stores]\r\n     71 \r\n     72             # The `num_nodes` attribute needs special treatment, as we need to\r\n\r\n~/miniconda3/envs/low-data/lib/python3.7/site-packages/torch_geometric/data/storage.py in __getitem__(self, key)\r\n     68 \r\n     69     def __getitem__(self, key: str) -> Any:\r\n---> 70         return self._mapping[key]\r\n     71 \r\n     72     def __setitem__(self, key: str, value: Any):\r\n\r\nKeyError: 'neg_edge_label'\r\n```\r\n\r\n**Suggested solution:** I suggest a two-step solution:\r\n1. Raise a Warning that there aren't enough missing edges to sample negative edges\r\n2. If one of train/valid/test contains the keys `neg_edge_label` and `neg_edge_label_index`, then all three datasets shall contain it. In the above example, valid/test contain these keys, but the training dataset doesn't.\r\n\n\n### Environment\n\n* PyG version: 2.1.0\r\n* PyTorch version: 1.10.1\r\n* Python version: 3.7.9\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5581/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5580", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5580/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5580/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5580/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5580", "id": 1392113813, "node_id": "PR_kwDOBlHMec4_697F", "number": 5580, "title": "Fix a typo in `gini` doc-string", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-09-30T09:05:20Z", "updated_at": "2022-09-30T10:27:07Z", "closed_at": "2022-09-30T10:27:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5580", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5580", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5580.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5580.patch", "merged_at": "2022-09-30T10:27:07Z"}, "body": "To address https://github.com/pyg-team/pytorch_geometric/issues/5579", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5580/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5578", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5578/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5578/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5578/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5578", "id": 1391885366, "node_id": "PR_kwDOBlHMec4_6MuG", "number": 5578, "title": "Do not remove labels when matching files are reverted", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-09-30T06:11:28Z", "updated_at": "2022-09-30T06:12:48Z", "closed_at": "2022-09-30T06:12:48Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5578", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5578", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5578.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5578.patch", "merged_at": "2022-09-30T06:12:48Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5578/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5532", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5532/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5532/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5532/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5532", "id": 1385107406, "node_id": "I_kwDOBlHMec5Sjw_O", "number": 5532, "title": "When calling MedianAggregation, RuntimeError: Expected all tensors to be on the same device", "user": {"login": "Sikun-Skyler-Guo", "id": 82078317, "node_id": "MDQ6VXNlcjgyMDc4MzE3", "avatar_url": "https://avatars.githubusercontent.com/u/82078317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sikun-Skyler-Guo", "html_url": "https://github.com/Sikun-Skyler-Guo", "followers_url": "https://api.github.com/users/Sikun-Skyler-Guo/followers", "following_url": "https://api.github.com/users/Sikun-Skyler-Guo/following{/other_user}", "gists_url": "https://api.github.com/users/Sikun-Skyler-Guo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sikun-Skyler-Guo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sikun-Skyler-Guo/subscriptions", "organizations_url": "https://api.github.com/users/Sikun-Skyler-Guo/orgs", "repos_url": "https://api.github.com/users/Sikun-Skyler-Guo/repos", "events_url": "https://api.github.com/users/Sikun-Skyler-Guo/events{/privacy}", "received_events_url": "https://api.github.com/users/Sikun-Skyler-Guo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-09-25T17:39:17Z", "updated_at": "2022-09-29T13:31:17Z", "closed_at": "2022-09-26T05:03:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhen I use the MedianAggregation and put x and edge_index to GPU, I encountered the RuntimeError below. It seems self.q in quantile.py is on CPU, but count  and cumsum are on GPU. It can be easily fixed when we set self.q to GPU. When edge_index and x are both on CPU, I won't encounter this error.\r\n\r\n```python\r\nimport torch\r\nfrom torch_geometric.nn import aggr\r\nfrom torch_geometric.datasets import Planetoid\r\n\r\npyg_data = Planetoid(root='pyg_data/'+'Planetoid/Cora', name='Cora')\r\nx = pyg_data.data.x\r\nedge_index = pyg_data.data.edge_index\r\n\r\naggr_median = aggr.MedianAggregation()\r\nx = x.to('cuda')\r\nedge_index = edge_index.to('cuda')\r\nx_median = aggr_median(x[edge_index[1]], edge_index[0])\r\n```\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\nCell In [1], line 21\r\n     19 x = x.to('cuda')\r\n     20 edge_index = edge_index.to('cuda')\r\n---> 21 x_median = aggr_median(x[edge_index[1]], edge_index[0])\r\n     22 x_median\r\n\r\nFile ~/.conda/envs/gnn/lib/python3.9/site-packages/torch_geometric/nn/aggr/base.py:114, in Aggregation.__call__(self, x, index, ptr, dim_size, dim, **kwargs)\r\n    109     elif index.numel() > 0 and dim_size <= int(index.max()):\r\n    110         raise ValueError(f\"Encountered invalid 'dim_size' (got \"\r\n    111                          f\"'{dim_size}' but expected \"\r\n    112                          f\">= '{int(index.max()) + 1}')\")\r\n--> 114 return super().__call__(x, index, ptr, dim_size, dim, **kwargs)\r\n\r\nFile ~/.conda/envs/gnn/lib/python3.9/site-packages/torch/nn/modules/module.py:1110, in Module._call_impl(self, *input, **kwargs)\r\n   1106 # If we don't have any hooks, we want to skip the rest of the logic in\r\n   1107 # this function, and just call forward.\r\n   1108 if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks\r\n   1109         or _global_forward_hooks or _global_forward_pre_hooks):\r\n-> 1110     return forward_call(*input, **kwargs)\r\n   1111 # Do not call functions when jit is used\r\n   1112 full_backward_hooks, non_full_backward_hooks = [], []\r\n\r\nFile ~/.conda/envs/gnn/lib/python3.9/site-packages/torch_geometric/nn/aggr/quantile.py:85, in QuantileAggregation.forward(self, x, index, ptr, dim_size, dim)\r\n     79 cumsum = torch.cumsum(count, dim=0) - count\r\n     81 #print(f\"count.device: {count.device}\")\r\n     82 #print(f\"cumsum.device: {cumsum.device}\")\r\n     83 #self.q = self.q.to(count.device)\r\n     84 #print(f\"self.q.device: {self.q.device}\")\r\n---> 85 q_point = self.q * (count - 1) + cumsum\r\n     86 q_point = q_point.t().reshape(-1)\r\n     88 shape = [1] * x.dim()\r\n\r\nRuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!\r\n```\n\n### Environment\n\n* PyG version: 2.1.0\r\n* PyTorch version: 1.11.0\r\n* OS: CentOS Linux\r\n* Python version: 3.9.7\r\n* CUDA/cuDNN version: 11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): version of `torch-scatter`: 2.0.9\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5532/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5515", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5515/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5515/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5515/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5515", "id": 1383610558, "node_id": "PR_kwDOBlHMec4_fRKs", "number": 5515, "title": "Fixed a bug when applying several scalers with `PNAConv`", "user": {"login": "adrianjav", "id": 25713831, "node_id": "MDQ6VXNlcjI1NzEzODMx", "avatar_url": "https://avatars.githubusercontent.com/u/25713831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrianjav", "html_url": "https://github.com/adrianjav", "followers_url": "https://api.github.com/users/adrianjav/followers", "following_url": "https://api.github.com/users/adrianjav/following{/other_user}", "gists_url": "https://api.github.com/users/adrianjav/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrianjav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrianjav/subscriptions", "organizations_url": "https://api.github.com/users/adrianjav/orgs", "repos_url": "https://api.github.com/users/adrianjav/repos", "events_url": "https://api.github.com/users/adrianjav/events{/privacy}", "received_events_url": "https://api.github.com/users/adrianjav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "adrianjav", "id": 25713831, "node_id": "MDQ6VXNlcjI1NzEzODMx", "avatar_url": "https://avatars.githubusercontent.com/u/25713831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrianjav", "html_url": "https://github.com/adrianjav", "followers_url": "https://api.github.com/users/adrianjav/followers", "following_url": "https://api.github.com/users/adrianjav/following{/other_user}", "gists_url": "https://api.github.com/users/adrianjav/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrianjav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrianjav/subscriptions", "organizations_url": "https://api.github.com/users/adrianjav/orgs", "repos_url": "https://api.github.com/users/adrianjav/repos", "events_url": "https://api.github.com/users/adrianjav/events{/privacy}", "received_events_url": "https://api.github.com/users/adrianjav/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adrianjav", "id": 25713831, "node_id": "MDQ6VXNlcjI1NzEzODMx", "avatar_url": "https://avatars.githubusercontent.com/u/25713831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrianjav", "html_url": "https://github.com/adrianjav", "followers_url": "https://api.github.com/users/adrianjav/followers", "following_url": "https://api.github.com/users/adrianjav/following{/other_user}", "gists_url": "https://api.github.com/users/adrianjav/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrianjav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrianjav/subscriptions", "organizations_url": "https://api.github.com/users/adrianjav/orgs", "repos_url": "https://api.github.com/users/adrianjav/repos", "events_url": "https://api.github.com/users/adrianjav/events{/privacy}", "received_events_url": "https://api.github.com/users/adrianjav/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-09-23T10:37:59Z", "updated_at": "2022-09-23T10:50:41Z", "closed_at": "2022-09-23T10:49:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5515", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5515", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5515.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5515.patch", "merged_at": "2022-09-23T10:49:25Z"}, "body": "Fixes issue #5514 by not reusing the same variable within the for loop of the scalers.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5515/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5514", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5514/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5514/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5514/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5514", "id": 1383494356, "node_id": "I_kwDOBlHMec5SdnLU", "number": 5514, "title": "Bug in PNAConv implementation", "user": {"login": "adrianjav", "id": 25713831, "node_id": "MDQ6VXNlcjI1NzEzODMx", "avatar_url": "https://avatars.githubusercontent.com/u/25713831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrianjav", "html_url": "https://github.com/adrianjav", "followers_url": "https://api.github.com/users/adrianjav/followers", "following_url": "https://api.github.com/users/adrianjav/following{/other_user}", "gists_url": "https://api.github.com/users/adrianjav/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrianjav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrianjav/subscriptions", "organizations_url": "https://api.github.com/users/adrianjav/orgs", "repos_url": "https://api.github.com/users/adrianjav/repos", "events_url": "https://api.github.com/users/adrianjav/events{/privacy}", "received_events_url": "https://api.github.com/users/adrianjav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-09-23T08:56:17Z", "updated_at": "2022-09-23T10:49:26Z", "closed_at": "2022-09-23T10:49:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhen aggregating messages in PNAConv, scalers are applied one after the other and then stacked, but the variable used on the for loop is the **same one always**. That is, scalers are applied to the same variable one after the other, instead of applying each scaler independently to the same base variable.\r\n\r\nThis is the latest code in the repository:\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/8bcc77c6f36b44f7be0ca7dc11f4dc3faecd31ed/torch_geometric/nn/aggr/scaler.py#L68-L90\r\nand the variable `out` is reused over the entire loop.\r\n\r\n## Proposed solution\r\n\r\nThe solution is as simple as using a different variable name within the for loop and do, e.g., `out_i = out` at the start of the loop in line 77. Since it is such a simple change, I am happy to open a pull request if requested.\r\n\r\nI might be wrong here, so please correct me if that's the case, but looking at the original paper and the official implementation, I think this is a bug:\r\nhttps://github.com/lukecavabarrett/pna/blob/0c630c2e2d88bb1ef784c850dd8f3a069fcd9489/models/pytorch_geometric/pna.py#L158\n\n### Environment\n\n* PyG version:\r\n* PyTorch version:\r\n* OS:\r\n* Python version:\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5514/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5513", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5513/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5513/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5513/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5513", "id": 1383415618, "node_id": "PR_kwDOBlHMec4_eoA6", "number": 5513, "title": "Quick fix for `dropout_node` when `training=False`", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052698076, "node_id": "LA_kwDOBlHMec7xj0Pc", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/transform", "name": "transform", "color": "480283", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-09-23T07:42:27Z", "updated_at": "2022-09-23T07:45:49Z", "closed_at": "2022-09-23T07:45:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5513", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5513", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5513.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5513.patch", "merged_at": "2022-09-23T07:45:48Z"}, "body": "Still my careless error in dealing with `egde_mask` and `node_mask`, which should indicate which edges/nodes are retained, not masked.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5513/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5510", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5510/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5510/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5510/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5510", "id": 1383108685, "node_id": "PR_kwDOBlHMec4_do0s", "number": 5510, "title": "Minor fix for `pyg-lib` usage in `HeteroLinear` and `RGCNConv`", "user": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "puririshi98", "id": 20074092, "node_id": "MDQ6VXNlcjIwMDc0MDky", "avatar_url": "https://avatars.githubusercontent.com/u/20074092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puririshi98", "html_url": "https://github.com/puririshi98", "followers_url": "https://api.github.com/users/puririshi98/followers", "following_url": "https://api.github.com/users/puririshi98/following{/other_user}", "gists_url": "https://api.github.com/users/puririshi98/gists{/gist_id}", "starred_url": "https://api.github.com/users/puririshi98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puririshi98/subscriptions", "organizations_url": "https://api.github.com/users/puririshi98/orgs", "repos_url": "https://api.github.com/users/puririshi98/repos", "events_url": "https://api.github.com/users/puririshi98/events{/privacy}", "received_events_url": "https://api.github.com/users/puririshi98/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2022-09-22T23:03:35Z", "updated_at": "2022-10-12T13:39:43Z", "closed_at": "2022-10-12T13:39:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5510", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5510", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5510.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5510.patch", "merged_at": "2022-10-12T13:39:42Z"}, "body": "pyg_lib pathway is chosen if cuda is available and pyg_lib is available. but if the input is not cuda we should not be using the pyg_lib pathway. simple fix\r\n\r\nwithout this a ton of CI fails for testing rgcnconv and heterolinear w/ cpu inputs\r\n\r\n[errors.txt](https://github.com/pyg-team/pytorch_geometric/files/9629902/errors.txt)\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5510/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5507", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5507/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5507/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5507/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5507", "id": 1382857906, "node_id": "PR_kwDOBlHMec4_c0Ym", "number": 5507, "title": "Fix `None` case of `sampler` or `batch_sampler`", "user": {"login": "RBendias", "id": 29600676, "node_id": "MDQ6VXNlcjI5NjAwNjc2", "avatar_url": "https://avatars.githubusercontent.com/u/29600676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RBendias", "html_url": "https://github.com/RBendias", "followers_url": "https://api.github.com/users/RBendias/followers", "following_url": "https://api.github.com/users/RBendias/following{/other_user}", "gists_url": "https://api.github.com/users/RBendias/gists{/gist_id}", "starred_url": "https://api.github.com/users/RBendias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RBendias/subscriptions", "organizations_url": "https://api.github.com/users/RBendias/orgs", "repos_url": "https://api.github.com/users/RBendias/repos", "events_url": "https://api.github.com/users/RBendias/events{/privacy}", "received_events_url": "https://api.github.com/users/RBendias/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "RBendias", "id": 29600676, "node_id": "MDQ6VXNlcjI5NjAwNjc2", "avatar_url": "https://avatars.githubusercontent.com/u/29600676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RBendias", "html_url": "https://github.com/RBendias", "followers_url": "https://api.github.com/users/RBendias/followers", "following_url": "https://api.github.com/users/RBendias/following{/other_user}", "gists_url": "https://api.github.com/users/RBendias/gists{/gist_id}", "starred_url": "https://api.github.com/users/RBendias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RBendias/subscriptions", "organizations_url": "https://api.github.com/users/RBendias/orgs", "repos_url": "https://api.github.com/users/RBendias/repos", "events_url": "https://api.github.com/users/RBendias/events{/privacy}", "received_events_url": "https://api.github.com/users/RBendias/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "RBendias", "id": 29600676, "node_id": "MDQ6VXNlcjI5NjAwNjc2", "avatar_url": "https://avatars.githubusercontent.com/u/29600676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RBendias", "html_url": "https://github.com/RBendias", "followers_url": "https://api.github.com/users/RBendias/followers", "following_url": "https://api.github.com/users/RBendias/following{/other_user}", "gists_url": "https://api.github.com/users/RBendias/gists{/gist_id}", "starred_url": "https://api.github.com/users/RBendias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RBendias/subscriptions", "organizations_url": "https://api.github.com/users/RBendias/orgs", "repos_url": "https://api.github.com/users/RBendias/repos", "events_url": "https://api.github.com/users/RBendias/events{/privacy}", "received_events_url": "https://api.github.com/users/RBendias/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-09-22T18:34:47Z", "updated_at": "2022-09-23T05:41:13Z", "closed_at": "2022-09-23T05:41:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5507", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5507", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5507.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5507.patch", "merged_at": "2022-09-23T05:41:12Z"}, "body": "Passing `sampler=None` to LightningNodeData currently results in no shuffling. \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5507/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5502", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5502/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5502/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5502/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5502", "id": 1382297602, "node_id": "PR_kwDOBlHMec4_a_gf", "number": 5502, "title": "Fix typo in `PositionalEncoding`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-09-22T11:32:36Z", "updated_at": "2022-09-22T11:32:52Z", "closed_at": "2022-09-22T11:32:50Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5502", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5502", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5502.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5502.patch", "merged_at": "2022-09-22T11:32:50Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5502/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5494", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5494/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5494/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5494/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5494", "id": 1380996715, "node_id": "PR_kwDOBlHMec4_Ws09", "number": 5494, "title": "Allow `.` in `ParameterDict` key names", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-09-21T14:07:24Z", "updated_at": "2022-09-21T14:17:36Z", "closed_at": "2022-09-21T14:17:36Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5494", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5494", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5494.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5494.patch", "merged_at": "2022-09-21T14:17:36Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5494/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5476", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5476/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5476/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5476/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5476", "id": 1379055952, "node_id": "PR_kwDOBlHMec4_Qa2X", "number": 5476, "title": "Fix `to_dense_adj` with empty `edge_index`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-09-20T08:53:55Z", "updated_at": "2022-09-20T09:32:16Z", "closed_at": "2022-09-20T09:00:16Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5476", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5476", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5476.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5476.patch", "merged_at": "2022-09-20T09:00:16Z"}, "body": "Fixes #5475 ", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5476/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5475", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5475/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5475/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5475/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5475", "id": 1378773471, "node_id": "I_kwDOBlHMec5SLmnf", "number": 5475, "title": "The ERROR of to_dense_adj: ''RuntimeError: max(): Expected reduction dim to be specified for input.numel() == 0. Specify the reduction dim with the 'dim' argument.''", "user": {"login": "jiaruHithub", "id": 56715103, "node_id": "MDQ6VXNlcjU2NzE1MTAz", "avatar_url": "https://avatars.githubusercontent.com/u/56715103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiaruHithub", "html_url": "https://github.com/jiaruHithub", "followers_url": "https://api.github.com/users/jiaruHithub/followers", "following_url": "https://api.github.com/users/jiaruHithub/following{/other_user}", "gists_url": "https://api.github.com/users/jiaruHithub/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiaruHithub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiaruHithub/subscriptions", "organizations_url": "https://api.github.com/users/jiaruHithub/orgs", "repos_url": "https://api.github.com/users/jiaruHithub/repos", "events_url": "https://api.github.com/users/jiaruHithub/events{/privacy}", "received_events_url": "https://api.github.com/users/jiaruHithub/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-09-20T03:43:10Z", "updated_at": "2022-09-20T09:00:16Z", "closed_at": "2022-09-20T09:00:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nmy code is \r\n```\r\ndataset = MoleculeDataset(\"dataset/\" + args.dataset, dataset=args.dataset)\r\nsmiles_list = pd.read_csv('dataset/' + args.dataset + '/processed/smiles.csv', header=None)[0].tolist()\r\ntrain_dataset, valid_dataset, test_dataset = scaffold_split(dataset, smiles_list, null_value=0, frac_train=0.8,frac_valid=0.1, frac_test=0.1)\r\n\r\nclass_graphs, y_idxs = split_class_graphs(train_dataset)\r\n```\r\n\r\nthe ```MoleculeDataset`` code\r\n```\r\nclass MoleculeDataset(InMemoryDataset):\r\n    def __init__(self,\r\n                 root,\r\n                 #data = None,\r\n                 #slices = None,\r\n                 transform=None,\r\n                 pre_transform=None,\r\n                 pre_filter=None,\r\n                 dataset='zinc250k',\r\n                 empty=False):\r\n        \"\"\"\r\n        Adapted from qm9.py. Disabled the download functionality\r\n        :param root: directory of the dataset, containing a raw and processed\r\n        dir. The raw dir should contain the file containing the smiles, and the\r\n        processed dir can either empty or a previously processed file\r\n        :param dataset: name of the dataset. Currently only implemented for\r\n        zinc250k, chembl_with_labels, tox21, hiv, bace, bbbp, clintox, esol,\r\n        freesolv, lipophilicity, muv, pcba, sider, toxcast\r\n        :param empty: if True, then will not load any data obj. For\r\n        initializing empty dataset\r\n        \"\"\"\r\n        self.dataset = dataset\r\n        self.root = root\r\n\r\n        super(MoleculeDataset, self).__init__(root, transform, pre_transform,\r\n                                                 pre_filter)\r\n        self.transform, self.pre_transform, self.pre_filter = transform, pre_transform, pre_filter\r\n\r\n        if not empty:\r\n            self.data, self.slices = torch.load(self.processed_paths[0])\r\n\r\n\r\n    def get(self, idx):\r\n        data = Data()\r\n        for key in self.data.keys:\r\n            item, slices = self.data[key], self.slices[key]\r\n            s = list(repeat(slice(None), item.dim()))\r\n            s[data.__cat_dim__(key, item)] = slice(slices[idx],\r\n                                                    slices[idx + 1])\r\n            data[key] = item[s]\r\n        return data\r\n\r\n\r\n    @property\r\n    def raw_file_names(self):\r\n        file_name_list = os.listdir(self.raw_dir)\r\n        # assert len(file_name_list) == 1     # currently assume we have a\r\n        # # single raw file\r\n        return file_name_list\r\n\r\n    @property\r\n    def processed_file_names(self):\r\n        return 'geometric_data_processed.pt'\r\n\r\n    def download(self):\r\n        raise NotImplementedError('Must indicate valid location of raw data. '\r\n                                  'No download allowed')\r\n\r\n    def process(self):\r\n        data_smiles_list = []\r\n        data_list = []\r\n\r\n        if self.dataset == 'zinc_standard_agent':\r\n            input_path = self.raw_paths[0]\r\n            input_df = pd.read_csv(input_path, sep=',', compression='gzip',\r\n                                   dtype='str')\r\n            smiles_list = list(input_df['smiles'])\r\n            zinc_id_list = list(input_df['zinc_id'])\r\n            for i in range(len(smiles_list)):\r\n                s = smiles_list[i]\r\n                # each example contains a single species\r\n                try:\r\n                    rdkit_mol = AllChem.MolFromSmiles(s)\r\n                    if rdkit_mol != None:  # ignore invalid mol objects\r\n                        # # convert aromatic bonds to double bonds\r\n                        # Chem.SanitizeMol(rdkit_mol,\r\n                        #                  sanitizeOps=Chem.SanitizeFlags.SANITIZE_KEKULIZE)\r\n                        data = mol_to_graph_data_obj_simple(rdkit_mol)\r\n                        # manually add mol id\r\n                        id = int(zinc_id_list[i].split('ZINC')[1].lstrip('0'))\r\n                        data.id = torch.tensor(\r\n                            [id])  # id here is zinc id value, stripped of\r\n                        # leading zeros\r\n                        data_list.append(data)\r\n                        data_smiles_list.append(smiles_list[i])\r\n                except:\r\n                    continue\r\n        \r\n        elif self.dataset == \"zinc_sample\":\r\n            input_path = self.raw_paths[0]\r\n            with open(input_path, \"r\") as f:\r\n                data = f.readlines()\r\n            all_data = [x.strip() for x in data]\r\n            data_smiles_list = []\r\n            data_list = []\r\n            for i, item in enumerate(all_data):\r\n                s = item\r\n                try:\r\n                    rdkit_mol = AllChem.MolFromSmiles(s)\r\n                    if rdkit_mol != None:\r\n                        data = mol_to_graph_data_obj_simple(rdkit_mol)\r\n                        # manually add mol id\r\n                        id = i\r\n                        data.id = torch.tensor([id])  # id here is zinc id value, stripped of\r\n                        # leading zeros\r\n                        data_list.append(data)\r\n                        data_smiles_list.append(s)\r\n                except:\r\n                    continue\r\n\r\n        elif self.dataset == 'chembl_filtered':\r\n            ### get downstream test molecules.\r\n            from splitters import scaffold_split\r\n\r\n            ### \r\n            downstream_dir = [\r\n            'dataset/bace',\r\n            'dataset/bbbp',\r\n            'dataset/clintox',\r\n            'dataset/esol',\r\n            'dataset/freesolv',\r\n            'dataset/hiv',\r\n            'dataset/lipophilicity',\r\n            'dataset/muv',\r\n            # 'dataset/pcba/processed/smiles.csv',\r\n            'dataset/sider',\r\n            'dataset/tox21',\r\n            'dataset/toxcast'\r\n            ]\r\n\r\n            downstream_inchi_set = set()\r\n            for d_path in downstream_dir:\r\n                print(d_path)\r\n                dataset_name = d_path.split('/')[1]\r\n                downstream_dataset = MoleculeDataset(d_path, dataset=dataset_name)\r\n                downstream_smiles = pd.read_csv(os.path.join(d_path,\r\n                                                             'processed', 'smiles.csv'),\r\n                                                header=None)[0].tolist()\r\n\r\n                assert len(downstream_dataset) == len(downstream_smiles)\r\n\r\n                _, _, _, (train_smiles, valid_smiles, test_smiles) = scaffold_split(downstream_dataset, downstream_smiles, task_idx=None, null_value=0,\r\n                                   frac_train=0.8,frac_valid=0.1, frac_test=0.1,\r\n                                   return_smiles=True)\r\n\r\n                ### remove both test and validation molecules\r\n                remove_smiles = test_smiles + valid_smiles\r\n\r\n                downstream_inchis = []\r\n                for smiles in remove_smiles:\r\n                    species_list = smiles.split('.')\r\n                    for s in species_list:  # record inchi for all species, not just\r\n                     # largest (by default in create_standardized_mol_id if input has\r\n                     # multiple species)\r\n                        inchi = create_standardized_mol_id(s)\r\n                        downstream_inchis.append(inchi)\r\n                downstream_inchi_set.update(downstream_inchis)\r\n\r\n            smiles_list, rdkit_mol_objs, folds, labels = \\\r\n                _load_chembl_with_labels_dataset(os.path.join(self.root, 'raw'))\r\n\r\n            print('processing')\r\n            for i in range(len(rdkit_mol_objs)):\r\n                rdkit_mol = rdkit_mol_objs[i]\r\n                if rdkit_mol != None:\r\n                    # # convert aromatic bonds to double bonds\r\n                    # Chem.SanitizeMol(rdkit_mol,\r\n                    #                  sanitizeOps=Chem.SanitizeFlags.SANITIZE_KEKULIZE)\r\n                    mw = Descriptors.MolWt(rdkit_mol)\r\n                    if 50 <= mw <= 900:\r\n                        inchi = create_standardized_mol_id(smiles_list[i])\r\n                        if inchi != None and inchi not in downstream_inchi_set:\r\n                            data = mol_to_graph_data_obj_simple(rdkit_mol)\r\n                            # manually add mol id\r\n                            data.id = torch.tensor(\r\n                                [i])  # id here is the index of the mol in\r\n                            # the dataset\r\n                            data.y = torch.tensor(labels[i, :])\r\n                            # fold information\r\n                            if i in folds[0]:\r\n                                data.fold = torch.tensor([0])\r\n                            elif i in folds[1]:\r\n                                data.fold = torch.tensor([1])\r\n                            else:\r\n                                data.fold = torch.tensor([2])\r\n                            data_list.append(data)\r\n                            data_smiles_list.append(smiles_list[i])\r\n\r\n        elif self.dataset == 'tox21':\r\n            smiles_list, rdkit_mol_objs, labels = \\\r\n                _load_tox21_dataset(self.raw_paths[0])\r\n            for i in range(len(smiles_list)):\r\n                rdkit_mol = rdkit_mol_objs[i]\r\n                ## convert aromatic bonds to double bonds\r\n                #Chem.SanitizeMol(rdkit_mol,\r\n                                 #sanitizeOps=Chem.SanitizeFlags.SANITIZE_KEKULIZE)\r\n                data = mol_to_graph_data_obj_simple(rdkit_mol)\r\n                # manually add mol id\r\n                data.id = torch.tensor(\r\n                    [i])  # id here is the index of the mol in\r\n                # the dataset\r\n                data.y = torch.tensor(labels[i, :])\r\n                data_list.append(data)\r\n                data_smiles_list.append(smiles_list[i])\r\n\r\n        elif self.dataset == 'hiv':\r\n            smiles_list, rdkit_mol_objs, labels = \\\r\n                _load_hiv_dataset(self.raw_paths[0])\r\n            for i in range(len(smiles_list)):\r\n                rdkit_mol = rdkit_mol_objs[i]\r\n                # # convert aromatic bonds to double bonds\r\n                # Chem.SanitizeMol(rdkit_mol,\r\n                #                  sanitizeOps=Chem.SanitizeFlags.SANITIZE_KEKULIZE)\r\n                data = mol_to_graph_data_obj_simple(rdkit_mol)\r\n                # manually add mol id\r\n                data.id = torch.tensor(\r\n                    [i])  # id here is the index of the mol in\r\n                # the dataset\r\n                data.y = torch.tensor([labels[i]])\r\n                data_list.append(data)\r\n                data_smiles_list.append(smiles_list[i])\r\n\r\n        elif self.dataset == 'bace':\r\n            smiles_list, rdkit_mol_objs, folds, labels = \\\r\n                _load_bace_dataset(self.raw_paths[0])\r\n            for i in range(len(smiles_list)):\r\n                rdkit_mol = rdkit_mol_objs[i]\r\n                # # convert aromatic bonds to double bonds\r\n                # Chem.SanitizeMol(rdkit_mol,\r\n                #                  sanitizeOps=Chem.SanitizeFlags.SANITIZE_KEKULIZE)\r\n                data = mol_to_graph_data_obj_simple(rdkit_mol)\r\n                # manually add mol id\r\n                data.id = torch.tensor(\r\n                    [i])  # id here is the index of the mol in\r\n                # the dataset\r\n                data.y = torch.tensor([labels[i]])\r\n                data.fold = torch.tensor([folds[i]])\r\n                data_list.append(data)\r\n                data_smiles_list.append(smiles_list[i])\r\n\r\n        elif self.dataset == 'bbbp':\r\n            smiles_list, rdkit_mol_objs, labels = \\\r\n                _load_bbbp_dataset(self.raw_paths[0])\r\n            for i in range(len(smiles_list)):\r\n                rdkit_mol = rdkit_mol_objs[i]\r\n                if rdkit_mol != None:\r\n                    # # convert aromatic bonds to double bonds\r\n                    # Chem.SanitizeMol(rdkit_mol,\r\n                    #                  sanitizeOps=Chem.SanitizeFlags.SANITIZE_KEKULIZE)\r\n                    data = mol_to_graph_data_obj_simple(rdkit_mol)\r\n                    # manually add mol id\r\n                    data.id = torch.tensor(\r\n                        [i])  # id here is the index of the mol in\r\n                    # the dataset\r\n                    data.y = torch.tensor([labels[i]])\r\n                    data_list.append(data)\r\n                    data_smiles_list.append(smiles_list[i])\r\n\r\n        elif self.dataset == 'clintox':\r\n            smiles_list, rdkit_mol_objs, labels = \\\r\n                _load_clintox_dataset(self.raw_paths[0])\r\n            for i in range(len(smiles_list)):\r\n                rdkit_mol = rdkit_mol_objs[i]\r\n                if rdkit_mol != None:\r\n                    # # convert aromatic bonds to double bonds\r\n                    # Chem.SanitizeMol(rdkit_mol,\r\n                    #                  sanitizeOps=Chem.SanitizeFlags.SANITIZE_KEKULIZE)\r\n                    data = mol_to_graph_data_obj_simple(rdkit_mol)\r\n                    # manually add mol id\r\n                    data.id = torch.tensor(\r\n                        [i])  # id here is the index of the mol in\r\n                    # the dataset\r\n                    data.y = torch.tensor(labels[i, :])\r\n                    data_list.append(data)\r\n                    data_smiles_list.append(smiles_list[i])\r\n\r\n        elif self.dataset == 'esol':\r\n            smiles_list, rdkit_mol_objs, labels = \\\r\n                _load_esol_dataset(self.raw_paths[0])\r\n            for i in range(len(smiles_list)):\r\n                rdkit_mol = rdkit_mol_objs[i]\r\n                # # convert aromatic bonds to double bonds\r\n                # Chem.SanitizeMol(rdkit_mol,\r\n                #                  sanitizeOps=Chem.SanitizeFlags.SANITIZE_KEKULIZE)\r\n                data = mol_to_graph_data_obj_simple(rdkit_mol)\r\n                # manually add mol id\r\n                data.id = torch.tensor(\r\n                    [i])  # id here is the index of the mol in\r\n                # the dataset\r\n                data.y = torch.tensor([labels[i]])\r\n                data_list.append(data)\r\n                data_smiles_list.append(smiles_list[i])\r\n\r\n        elif self.dataset == 'freesolv':\r\n            smiles_list, rdkit_mol_objs, labels = \\\r\n                _load_freesolv_dataset(self.raw_paths[0])\r\n            for i in range(len(smiles_list)):\r\n                rdkit_mol = rdkit_mol_objs[i]\r\n                # # convert aromatic bonds to double bonds\r\n                # Chem.SanitizeMol(rdkit_mol,\r\n                #                  sanitizeOps=Chem.SanitizeFlags.SANITIZE_KEKULIZE)\r\n                data = mol_to_graph_data_obj_simple(rdkit_mol)\r\n                # manually add mol id\r\n                data.id = torch.tensor(\r\n                    [i])  # id here is the index of the mol in\r\n                # the dataset\r\n                data.y = torch.tensor([labels[i]])\r\n                data_list.append(data)\r\n                data_smiles_list.append(smiles_list[i])\r\n\r\n        elif self.dataset == 'lipophilicity':\r\n            smiles_list, rdkit_mol_objs, labels = \\\r\n                _load_lipophilicity_dataset(self.raw_paths[0])\r\n            for i in range(len(smiles_list)):\r\n                rdkit_mol = rdkit_mol_objs[i]\r\n                # # convert aromatic bonds to double bonds\r\n                # Chem.SanitizeMol(rdkit_mol,\r\n                #                  sanitizeOps=Chem.SanitizeFlags.SANITIZE_KEKULIZE)\r\n                data = mol_to_graph_data_obj_simple(rdkit_mol)\r\n                # manually add mol id\r\n                data.id = torch.tensor(\r\n                    [i])  # id here is the index of the mol in\r\n                # the dataset\r\n                data.y = torch.tensor([labels[i]])\r\n                data_list.append(data)\r\n                data_smiles_list.append(smiles_list[i])\r\n\r\n        elif self.dataset == 'muv':\r\n            smiles_list, rdkit_mol_objs, labels = \\\r\n                _load_muv_dataset(self.raw_paths[0])\r\n            for i in range(len(smiles_list)):\r\n                rdkit_mol = rdkit_mol_objs[i]\r\n                # # convert aromatic bonds to double bonds\r\n                # Chem.SanitizeMol(rdkit_mol,\r\n                #                  sanitizeOps=Chem.SanitizeFlags.SANITIZE_KEKULIZE)\r\n                data = mol_to_graph_data_obj_simple(rdkit_mol)\r\n                # manually add mol id\r\n                data.id = torch.tensor(\r\n                    [i])  # id here is the index of the mol in\r\n                # the dataset\r\n                data.y = torch.tensor(labels[i, :])\r\n                data_list.append(data)\r\n                data_smiles_list.append(smiles_list[i])\r\n\r\n        elif self.dataset == 'pcba':\r\n            smiles_list, rdkit_mol_objs, labels = \\\r\n                _load_pcba_dataset(self.raw_paths[0])\r\n            for i in range(len(smiles_list)):\r\n                rdkit_mol = rdkit_mol_objs[i]\r\n                # # convert aromatic bonds to double bonds\r\n                # Chem.SanitizeMol(rdkit_mol,\r\n                #                  sanitizeOps=Chem.SanitizeFlags.SANITIZE_KEKULIZE)\r\n                data = mol_to_graph_data_obj_simple(rdkit_mol)\r\n                # manually add mol id\r\n                data.id = torch.tensor(\r\n                    [i])  # id here is the index of the mol in\r\n                # the dataset\r\n                data.y = torch.tensor(labels[i, :])\r\n                data_list.append(data)\r\n                data_smiles_list.append(smiles_list[i])\r\n\r\n        elif self.dataset == 'pcba_pretrain':\r\n            smiles_list, rdkit_mol_objs, labels = \\\r\n                _load_pcba_dataset(self.raw_paths[0])\r\n            downstream_inchi = set(pd.read_csv(os.path.join(self.root,\r\n                                                            'downstream_mol_inchi_may_24_2019'),\r\n                                               sep=',', header=None)[0])\r\n            for i in range(len(smiles_list)):\r\n                if '.' not in smiles_list[i]:   # remove examples with\r\n                    # multiples species\r\n                    rdkit_mol = rdkit_mol_objs[i]\r\n                    mw = Descriptors.MolWt(rdkit_mol)\r\n                    if 50 <= mw <= 900:\r\n                        inchi = create_standardized_mol_id(smiles_list[i])\r\n                        if inchi != None and inchi not in downstream_inchi:\r\n                            # # convert aromatic bonds to double bonds\r\n                            # Chem.SanitizeMol(rdkit_mol,\r\n                            #                  sanitizeOps=Chem.SanitizeFlags.SANITIZE_KEKULIZE)\r\n                            data = mol_to_graph_data_obj_simple(rdkit_mol)\r\n                            # manually add mol id\r\n                            data.id = torch.tensor(\r\n                                [i])  # id here is the index of the mol in\r\n                            # the dataset\r\n                            data.y = torch.tensor(labels[i, :])\r\n                            data_list.append(data)\r\n                            data_smiles_list.append(smiles_list[i])\r\n\r\n        # elif self.dataset == ''\r\n\r\n        elif self.dataset == 'sider':\r\n            smiles_list, rdkit_mol_objs, labels = \\\r\n                _load_sider_dataset(self.raw_paths[0])\r\n            for i in range(len(smiles_list)):\r\n                rdkit_mol = rdkit_mol_objs[i]\r\n                # # convert aromatic bonds to double bonds\r\n                # Chem.SanitizeMol(rdkit_mol,\r\n                #                  sanitizeOps=Chem.SanitizeFlags.SANITIZE_KEKULIZE)\r\n                data = mol_to_graph_data_obj_simple(rdkit_mol)\r\n                # manually add mol id\r\n                data.id = torch.tensor(\r\n                    [i])  # id here is the index of the mol in\r\n                # the dataset\r\n                data.y = torch.tensor(labels[i, :])\r\n                data_list.append(data)\r\n                data_smiles_list.append(smiles_list[i])\r\n\r\n        elif self.dataset == 'toxcast':\r\n            smiles_list, rdkit_mol_objs, labels = \\\r\n                _load_toxcast_dataset(self.raw_paths[0])\r\n            for i in range(len(smiles_list)):\r\n                rdkit_mol = rdkit_mol_objs[i]\r\n                if rdkit_mol != None:\r\n                    # # convert aromatic bonds to double bonds\r\n                    # Chem.SanitizeMol(rdkit_mol,\r\n                    #                  sanitizeOps=Chem.SanitizeFlags.SANITIZE_KEKULIZE)\r\n                    data = mol_to_graph_data_obj_simple(rdkit_mol)\r\n                    # manually add mol id\r\n                    data.id = torch.tensor(\r\n                        [i])  # id here is the index of the mol in\r\n                    # the dataset\r\n                    data.y = torch.tensor(labels[i, :])\r\n                    data_list.append(data)\r\n                    data_smiles_list.append(smiles_list[i])\r\n\r\n        elif self.dataset == 'ptc_mr':\r\n            input_path = self.raw_paths[0]\r\n            input_df = pd.read_csv(input_path, sep=',', header=None, names=['id', 'label', 'smiles'])\r\n            smiles_list = input_df['smiles']\r\n            labels = input_df['label'].values\r\n            for i in range(len(smiles_list)):\r\n                s = smiles_list[i]\r\n                rdkit_mol = AllChem.MolFromSmiles(s)\r\n                if rdkit_mol != None:  # ignore invalid mol objects\r\n                    # # convert aromatic bonds to double bonds\r\n                    # Chem.SanitizeMol(rdkit_mol,\r\n                    #                  sanitizeOps=Chem.SanitizeFlags.SANITIZE_KEKULIZE)\r\n                    data = mol_to_graph_data_obj_simple(rdkit_mol)\r\n                    # manually add mol id\r\n                    data.id = torch.tensor(\r\n                        [i])\r\n                    data.y = torch.tensor([labels[i]])\r\n                    data_list.append(data)\r\n                    data_smiles_list.append(smiles_list[i])\r\n\r\n        elif self.dataset == 'mutag':\r\n            smiles_path = os.path.join(self.root, 'raw', 'mutag_188_data.can')\r\n            # smiles_path = 'dataset/mutag/raw/mutag_188_data.can'\r\n            labels_path = os.path.join(self.root, 'raw', 'mutag_188_target.txt')\r\n            # labels_path = 'dataset/mutag/raw/mutag_188_target.txt'\r\n            smiles_list = pd.read_csv(smiles_path, sep=' ', header=None)[0]\r\n            labels = pd.read_csv(labels_path, header=None)[0].values\r\n            for i in range(len(smiles_list)):\r\n                s = smiles_list[i]\r\n                rdkit_mol = AllChem.MolFromSmiles(s)\r\n                if rdkit_mol != None:  # ignore invalid mol objects\r\n                    # # convert aromatic bonds to double bonds\r\n                    # Chem.SanitizeMol(rdkit_mol,\r\n                    #                  sanitizeOps=Chem.SanitizeFlags.SANITIZE_KEKULIZE)\r\n                    data = mol_to_graph_data_obj_simple(rdkit_mol)\r\n                    # manually add mol id\r\n                    data.id = torch.tensor(\r\n                        [i])\r\n                    data.y = torch.tensor([labels[i]])\r\n                    data_list.append(data)\r\n                    data_smiles_list.append(smiles_list[i])\r\n                    \r\n\r\n        else:\r\n            raise ValueError('Invalid dataset name')\r\n\r\n        if self.pre_filter is not None:\r\n            data_list = [data for data in data_list if self.pre_filter(data)]\r\n\r\n        if self.pre_transform is not None:\r\n            data_list = [self.pre_transform(data) for data in data_list]\r\n\r\n        # write data_smiles_list in processed paths\r\n        data_smiles_series = pd.Series(data_smiles_list)\r\n        data_smiles_series.to_csv(os.path.join(self.processed_dir,\r\n                                               'smiles.csv'), index=False,\r\n                                  header=False)\r\n\r\n        data, slices = self.collate(data_list)\r\n        torch.save((data, slices), self.processed_paths[0])\r\n```\r\n\r\nthe ```scaffold_split``` code is\r\n```\r\ndef scaffold_split(dataset, smiles_list, task_idx=None, null_value=0,\r\n                   frac_train=0.8, frac_valid=0.1, frac_test=0.1,\r\n                   return_smiles=False):\r\n    \"\"\"\r\n    Adapted from https://github.com/deepchem/deepchem/blob/master/deepchem/splits/splitters.py\r\n    Split dataset by Bemis-Murcko scaffolds\r\n    This function can also ignore examples containing null values for a\r\n    selected task when splitting. Deterministic split\r\n    :param dataset: pytorch geometric dataset obj\r\n    :param smiles_list: list of smiles corresponding to the dataset obj\r\n    :param task_idx: column idx of the data.y tensor. Will filter out\r\n    examples with null value in specified task column of the data.y tensor\r\n    prior to splitting. If None, then no filtering\r\n    :param null_value: float that specifies null value in data.y to filter if\r\n    task_idx is provided\r\n    :param frac_train:\r\n    :param frac_valid:\r\n    :param frac_test:\r\n    :param return_smiles:\r\n    :return: train, valid, test slices of the input dataset obj. If\r\n    return_smiles = True, also returns ([train_smiles_list],\r\n    [valid_smiles_list], [test_smiles_list])\r\n    \"\"\"\r\n    np.testing.assert_almost_equal(frac_train + frac_valid + frac_test, 1.0)\r\n\r\n    if task_idx != None:\r\n        # filter based on null values in task_idx\r\n        # get task array\r\n        y_task = np.array([data.y[task_idx].item() for data in dataset])\r\n        # boolean array that correspond to non null values\r\n        non_null = y_task != null_value\r\n        smiles_list = list(compress(enumerate(smiles_list), non_null))\r\n    else:\r\n        non_null = np.ones(len(dataset)) == 1\r\n        smiles_list = list(compress(enumerate(smiles_list), non_null))\r\n\r\n    # create dict of the form {scaffold_i: [idx1, idx....]}\r\n    all_scaffolds = {}\r\n    for i, smiles in smiles_list:\r\n        scaffold = generate_scaffold(smiles, include_chirality=True)\r\n        if scaffold not in all_scaffolds:\r\n            all_scaffolds[scaffold] = [i]\r\n        else:\r\n            all_scaffolds[scaffold].append(i)\r\n\r\n    # sort from largest to smallest sets\r\n    all_scaffolds = {key: sorted(value) for key, value in all_scaffolds.items()}\r\n    all_scaffold_sets = [\r\n        scaffold_set for (scaffold, scaffold_set) in sorted(\r\n            all_scaffolds.items(), key=lambda x: (len(x[1]), x[1][0]), reverse=True)\r\n    ]\r\n\r\n    # get train, valid test indices\r\n    train_cutoff = frac_train * len(smiles_list)\r\n    valid_cutoff = (frac_train + frac_valid) * len(smiles_list)\r\n    train_idx, valid_idx, test_idx = [], [], []\r\n    for scaffold_set in all_scaffold_sets:\r\n        if len(train_idx) + len(scaffold_set) > train_cutoff:\r\n            if len(train_idx) + len(valid_idx) + len(scaffold_set) > valid_cutoff:\r\n                test_idx.extend(scaffold_set)\r\n            else:\r\n                valid_idx.extend(scaffold_set)\r\n        else:\r\n            train_idx.extend(scaffold_set)\r\n\r\n    assert len(set(train_idx).intersection(set(valid_idx))) == 0\r\n    assert len(set(test_idx).intersection(set(valid_idx))) == 0\r\n\r\n    train_dataset = dataset[torch.tensor(train_idx)]\r\n    valid_dataset = dataset[torch.tensor(valid_idx)]\r\n    test_dataset = dataset[torch.tensor(test_idx)]\r\n\r\n    if not return_smiles:\r\n        return train_dataset, valid_dataset, test_dataset\r\n    else:\r\n        train_smiles = [smiles_list[i][1] for i in train_idx]\r\n        valid_smiles = [smiles_list[i][1] for i in valid_idx]\r\n        test_smiles = [smiles_list[i][1] for i in test_idx]\r\n        return train_dataset, valid_dataset, test_dataset, (train_smiles,\r\n                                                            valid_smiles,\r\n                                                            test_smiles)\r\n\r\ndef random_scaffold_split(dataset, smiles_list, task_idx=None, null_value=0,\r\n                   frac_train=0.8, frac_valid=0.1, frac_test=0.1, seed=0):\r\n    \"\"\"\r\n    Adapted from https://github.com/pfnet-research/chainer-chemistry/blob/master/chainer_chemistry/dataset/splitters/scaffold_splitter.py\r\n    Split dataset by Bemis-Murcko scaffolds\r\n    This function can also ignore examples containing null values for a\r\n    selected task when splitting. Deterministic split\r\n    :param dataset: pytorch geometric dataset obj\r\n    :param smiles_list: list of smiles corresponding to the dataset obj\r\n    :param task_idx: column idx of the data.y tensor. Will filter out\r\n    examples with null value in specified task column of the data.y tensor\r\n    prior to splitting. If None, then no filtering\r\n    :param null_value: float that specifies null value in data.y to filter if\r\n    task_idx is provided\r\n    :param frac_train:\r\n    :param frac_valid:\r\n    :param frac_test:\r\n    :param seed;\r\n    :return: train, valid, test slices of the input dataset obj\r\n    \"\"\"\r\n\r\n    np.testing.assert_almost_equal(frac_train + frac_valid + frac_test, 1.0)\r\n\r\n    if task_idx != None:\r\n        # filter based on null values in task_idx\r\n        # get task array\r\n        y_task = np.array([data.y[task_idx].item() for data in dataset])\r\n        # boolean array that correspond to non null values\r\n        non_null = y_task != null_value\r\n        smiles_list = list(compress(enumerate(smiles_list), non_null))\r\n    else:\r\n        non_null = np.ones(len(dataset)) == 1\r\n        smiles_list = list(compress(enumerate(smiles_list), non_null))\r\n\r\n    rng = np.random.RandomState(seed)\r\n\r\n    scaffolds = defaultdict(list)\r\n    for ind, smiles in smiles_list:\r\n        scaffold = generate_scaffold(smiles, include_chirality=True)\r\n        scaffolds[scaffold].append(ind)\r\n\r\n    scaffold_sets = rng.permutation(list(scaffolds.values()))\r\n\r\n    n_total_valid = int(np.floor(frac_valid * len(dataset)))\r\n    n_total_test = int(np.floor(frac_test * len(dataset)))\r\n\r\n    train_idx = []\r\n    valid_idx = []\r\n    test_idx = []\r\n\r\n    for scaffold_set in scaffold_sets:\r\n        if len(valid_idx) + len(scaffold_set) <= n_total_valid:\r\n            valid_idx.extend(scaffold_set)\r\n        elif len(test_idx) + len(scaffold_set) <= n_total_test:\r\n            test_idx.extend(scaffold_set)\r\n        else:\r\n            train_idx.extend(scaffold_set)\r\n\r\n    train_dataset = dataset[torch.tensor(train_idx)]\r\n    valid_dataset = dataset[torch.tensor(valid_idx)]\r\n    test_dataset = dataset[torch.tensor(test_idx)]\r\n\r\n    return train_dataset, valid_dataset, test_dataset\r\n```\r\n\r\nthe ```split_class_graphs``` code is:\r\n```\r\ndef split_class_graphs(dataset):\r\n\r\n    y_list = []\r\n    for data in dataset:\r\n        y_list.append(tuple(data.y.tolist()))   \r\n    num_classes = len(set(y_list))\r\n    \r\n    y_cetos = set(y_list)\r\n    y_idxs = []\r\n    for y_ceto in y_cetos:\r\n        y_idxs.append([idx for idx, y in enumerate(y_list) if y == y_ceto])\r\n    # for i in y_idxs:\r\n    #     print(len(i))\r\n    #print(y_list)\r\n\r\n    all_graphs_list = []\r\n    for graph in dataset:\r\n        adj = to_dense_adj(graph.edge_index)[0].numpy()\r\n        #print(adj)\r\n        all_graphs_list.append(adj)\r\n\r\n    class_graphs = []\r\n    for class_label in set(y_list):\r\n        c_graph_list = [all_graphs_list[i] for i in range(len(y_list)) if y_list[i] == class_label]\r\n        print(len(c_graph_list))\r\n        class_graphs.append( ( np.array(class_label), c_graph_list ) )\r\n\r\n    return class_graphs, y_idxs\r\n```\r\n\r\nand report the error:\r\n\r\n```\r\n[03:31:05] WARNING: not removing hydrogen atom without neighbors\r\n[03:31:05] WARNING: not removing hydrogen atom without neighbors\r\n[03:31:06] WARNING: not removing hydrogen atom without neighbors\r\n[03:31:06] WARNING: not removing hydrogen atom without neighbors\r\n[03:31:06] WARNING: not removing hydrogen atom without neighbors\r\n[03:31:06] WARNING: not removing hydrogen atom without neighbors\r\n[03:31:06] WARNING: not removing hydrogen atom without neighbors\r\n[03:31:06] WARNING: not removing hydrogen atom without neighbors\r\n[03:31:06] WARNING: not removing hydrogen atom without neighbors\r\n[03:31:06] WARNING: not removing hydrogen atom without neighbors\r\n[03:31:06] WARNING: not removing hydrogen atom without neighbors\r\n[03:31:07] WARNING: not removing hydrogen atom without neighbors\r\n[03:31:07] WARNING: not removing hydrogen atom without neighbors\r\nTraceback (most recent call last):\r\n  File \"graohon_get.py\", line 208, in <module>\r\n    class_graphs, y_idxs = split_class_graphs(train_dataset)\r\n  File \"graohon_get.py\", line 64, in split_class_graphs\r\n    adj = to_dense_adj(graph.edge_index)[0].numpy()\r\n  File \"/opt/conda/lib/python3.7/site-packages/torch_geometric/utils/to_dense_adj.py\", line 22, in to_dense_adj\r\n    batch = edge_index.new_zeros(edge_index.max().item() + 1)\r\nRuntimeError: max(): Expected reduction dim to be specified for input.numel() == 0. Specify the reduction dim with the 'dim' argument.\r\n```\r\nThe dataset is contained in MoleculeNet, I download in ```http://snap.stanford.edu/gnn-pretrain/data/chem_dataset.zip```\r\nif run with ``` Tox21 ToxCast SIDER ClinTox MUV``` datasets will report this error, but datasets ```BACE BBBP HIV``` will not reported.\r\nCould you help me ?\r\nthanks!\r\n\r\n### Environment\r\n\r\n* PyG version: 2.0.4\r\n* PyTorch version:1.9.0\r\n* OS:centos7\r\n* Python version:3.7.4\r\n* CUDA/cuDNN version:20.2\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\ntorch                   1.9.0\r\ntorch-cluster           1.6.0\r\ntorch-geometric         2.0.4\r\ntorch-points-kernels    0.6.10\r\ntorch-scatter           2.0.9\r\ntorch-sparse            0.6.12\r\ntorch-spline-conv       1.2.1", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5475/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5474", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5474/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5474/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5474/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5474", "id": 1378120509, "node_id": "PR_kwDOBlHMec4_NTqm", "number": 5474, "title": "Fix broken url in `MD17` dataset", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637023, "node_id": "LA_kwDOBlHMec7veEaf", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/dataset", "name": "dataset", "color": "7705B6", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-09-19T15:14:26Z", "updated_at": "2022-09-20T00:20:52Z", "closed_at": "2022-09-19T19:43:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5474", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5474", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5474.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5474.patch", "merged_at": "2022-09-19T19:43:09Z"}, "body": "This PR is to fix the broken URL in `benzene` and `benzene FHI-aims` datasets as the dataset URLs are changed now:\r\n```python\r\nfrom torch_geometric.datasets import MD17\r\ndataset = MD17(\"data/MD17/\", \"benzene\")\r\n# HTTPError: HTTP Error 404: Not Found\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5474/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5465", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5465/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5465/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5465/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5465", "id": 1376791289, "node_id": "PR_kwDOBlHMec4_JEHk", "number": 5465, "title": "Fix `__repr__` in `Summary` when `progress_bar=True`", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-09-17T14:42:53Z", "updated_at": "2022-09-18T01:02:53Z", "closed_at": "2022-09-17T21:03:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5465", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5465", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5465.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5465.patch", "merged_at": "2022-09-17T21:03:13Z"}, "body": "This PR is to fix `__repr__` method in `Summary` when `progress_bar=True`. `dataset.__class__.__name__` would retrieve the class `tqdm` instead of dataset class.\r\n\r\n+ Before\r\n```python\r\n>>> QM9(root=\"~/data/pyg/QM9\").get_summary()\r\n\r\ntqdm (#graphs=130831):\r\n+------------+----------+----------+\r\n|            |   #nodes |   #edges |\r\n|------------+----------+----------|\r\n| mean       |     18   |     37.3 |\r\n| std        |      2.9 |      6.3 |\r\n| min        |      3   |      4   |\r\n| quantile25 |     16   |     34   |\r\n| median     |     18   |     38   |\r\n| quantile75 |     20   |     42   |\r\n| max        |     29   |     56   |\r\n+------------+----------+----------+\r\n```\r\n\r\n+ After\r\n```python\r\n>>> QM9(root=\"~/data/pyg/QM9\").get_summary()\r\n\r\nQM9 (#graphs=130831):\r\n+------------+----------+----------+\r\n|            |   #nodes |   #edges |\r\n|------------+----------+----------|\r\n| mean       |     18   |     37.3 |\r\n| std        |      2.9 |      6.3 |\r\n| min        |      3   |      4   |\r\n| quantile25 |     16   |     34   |\r\n| median     |     18   |     38   |\r\n| quantile75 |     20   |     42   |\r\n| max        |     29   |     56   |\r\n+------------+----------+----------+\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5465/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5457", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5457/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5457/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5457/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5457", "id": 1375807524, "node_id": "PR_kwDOBlHMec4_F6hC", "number": 5457, "title": "Set `shuffle=False` in case a `sampler` is given", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-09-16T11:20:24Z", "updated_at": "2022-09-16T11:22:50Z", "closed_at": "2022-09-16T11:22:49Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5457", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5457", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5457.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5457.patch", "merged_at": "2022-09-16T11:22:49Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5457/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5455", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5455/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5455/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5455/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5455", "id": 1375437571, "node_id": "PR_kwDOBlHMec4_Erp1", "number": 5455, "title": "Fix `IndexToMask` transform for `edge_index` attribute", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052698076, "node_id": "LA_kwDOBlHMec7xj0Pc", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/transform", "name": "transform", "color": "480283", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-09-16T05:40:25Z", "updated_at": "2022-09-16T05:41:01Z", "closed_at": "2022-09-16T05:40:58Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5455", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5455", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5455.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5455.patch", "merged_at": "2022-09-16T05:40:58Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5455/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5451", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5451/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5451/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5451/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5451", "id": 1374574391, "node_id": "PR_kwDOBlHMec4_BzNc", "number": 5451, "title": "Fix some typos in docstrings code blocks", "user": {"login": "yuanx749", "id": 47032563, "node_id": "MDQ6VXNlcjQ3MDMyNTYz", "avatar_url": "https://avatars.githubusercontent.com/u/47032563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuanx749", "html_url": "https://github.com/yuanx749", "followers_url": "https://api.github.com/users/yuanx749/followers", "following_url": "https://api.github.com/users/yuanx749/following{/other_user}", "gists_url": "https://api.github.com/users/yuanx749/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuanx749/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuanx749/subscriptions", "organizations_url": "https://api.github.com/users/yuanx749/orgs", "repos_url": "https://api.github.com/users/yuanx749/repos", "events_url": "https://api.github.com/users/yuanx749/events{/privacy}", "received_events_url": "https://api.github.com/users/yuanx749/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "yuanx749", "id": 47032563, "node_id": "MDQ6VXNlcjQ3MDMyNTYz", "avatar_url": "https://avatars.githubusercontent.com/u/47032563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuanx749", "html_url": "https://github.com/yuanx749", "followers_url": "https://api.github.com/users/yuanx749/followers", "following_url": "https://api.github.com/users/yuanx749/following{/other_user}", "gists_url": "https://api.github.com/users/yuanx749/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuanx749/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuanx749/subscriptions", "organizations_url": "https://api.github.com/users/yuanx749/orgs", "repos_url": "https://api.github.com/users/yuanx749/repos", "events_url": "https://api.github.com/users/yuanx749/events{/privacy}", "received_events_url": "https://api.github.com/users/yuanx749/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yuanx749", "id": 47032563, "node_id": "MDQ6VXNlcjQ3MDMyNTYz", "avatar_url": "https://avatars.githubusercontent.com/u/47032563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuanx749", "html_url": "https://github.com/yuanx749", "followers_url": "https://api.github.com/users/yuanx749/followers", "following_url": "https://api.github.com/users/yuanx749/following{/other_user}", "gists_url": "https://api.github.com/users/yuanx749/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuanx749/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuanx749/subscriptions", "organizations_url": "https://api.github.com/users/yuanx749/orgs", "repos_url": "https://api.github.com/users/yuanx749/repos", "events_url": "https://api.github.com/users/yuanx749/events{/privacy}", "received_events_url": "https://api.github.com/users/yuanx749/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-09-15T13:57:18Z", "updated_at": "2022-09-15T14:47:40Z", "closed_at": "2022-09-15T14:38:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5451", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5451", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5451.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5451.patch", "merged_at": "2022-09-15T14:38:03Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5451/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5450", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5450/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5450/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5450/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5450", "id": 1374395834, "node_id": "PR_kwDOBlHMec4_BMav", "number": 5450, "title": "Fix a typo in the `GENConv` doc-string", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-09-15T11:43:33Z", "updated_at": "2022-09-15T11:43:50Z", "closed_at": "2022-09-15T11:43:42Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5450", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5450", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5450.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5450.patch", "merged_at": "2022-09-15T11:43:42Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5450/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5444", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5444/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5444/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5444/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5444", "id": 1373244102, "node_id": "PR_kwDOBlHMec4-9XKu", "number": 5444, "title": "Ensure equal lenghts of `num_neighbors` across edge types in `NeighborLoader`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-09-14T16:06:36Z", "updated_at": "2022-09-14T16:22:38Z", "closed_at": "2022-09-14T16:22:37Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5444", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5444", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5444.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5444.patch", "merged_at": "2022-09-14T16:22:37Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5444/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5443", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5443/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5443/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5443/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5443", "id": 1373212468, "node_id": "I_kwDOBlHMec5R2Y80", "number": 5443, "title": "cannot import the aggregation module", "user": {"login": "LiuCMU", "id": 60156077, "node_id": "MDQ6VXNlcjYwMTU2MDc3", "avatar_url": "https://avatars.githubusercontent.com/u/60156077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LiuCMU", "html_url": "https://github.com/LiuCMU", "followers_url": "https://api.github.com/users/LiuCMU/followers", "following_url": "https://api.github.com/users/LiuCMU/following{/other_user}", "gists_url": "https://api.github.com/users/LiuCMU/gists{/gist_id}", "starred_url": "https://api.github.com/users/LiuCMU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LiuCMU/subscriptions", "organizations_url": "https://api.github.com/users/LiuCMU/orgs", "repos_url": "https://api.github.com/users/LiuCMU/repos", "events_url": "https://api.github.com/users/LiuCMU/events{/privacy}", "received_events_url": "https://api.github.com/users/LiuCMU/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-09-14T15:43:14Z", "updated_at": "2022-09-15T13:15:29Z", "closed_at": "2022-09-15T13:15:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi, I tried to import `SumAggregation`, but it always yielded `ImportError`.  I can import other packages, though. Here is an example:\r\n\r\n```{Python}\r\n(py39) liucmu@storm:~/reaction_prediction$ ipython\r\nPython 3.9.12 (main, Jun  1 2022, 11:38:51) \r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 8.3.0 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: from torch_geometric.nn import aggr\r\n---------------------------------------------------------------------------\r\nImportError                               Traceback (most recent call last)\r\nInput In [1], in <cell line: 1>()\r\n----> 1 from torch_geometric.nn import aggr\r\n\r\nImportError: cannot import name 'aggr' from 'torch_geometric.nn' (/home/liucmu/miniconda3/envs/py39/lib/python3.9/site-packages/torch_geometric/nn/__init__.py)\r\n\r\nIn [2]: from torch_geometric.nn import Set2Set\r\n\r\nIn [3]: import torch_geometric.nn.aggr\r\n---------------------------------------------------------------------------\r\nModuleNotFoundError                       Traceback (most recent call last)\r\nInput In [3], in <cell line: 1>()\r\n----> 1 import torch_geometric.nn.aggr\r\n\r\nModuleNotFoundError: No module named 'torch_geometric.nn.aggr'\r\n\r\nIn [4]: import torch_geometric.data\r\n\r\nIn [5]: \r\n\r\n```\r\n\r\nCould you please take a look? Thank you!\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.11.0\r\n* OS: Ubuntu 18.04.5 LTS\r\n* Python version: 3.9.12\r\n* CUDA/cuDNN version: 11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): N/A\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5443/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5441", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5441/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5441/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5441/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5441", "id": 1372764607, "node_id": "PR_kwDOBlHMec4-7viB", "number": 5441, "title": "Fix `node_attributes` shape in `read_tu_data`", "user": {"login": "flandolfi", "id": 7069487, "node_id": "MDQ6VXNlcjcwNjk0ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/7069487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flandolfi", "html_url": "https://github.com/flandolfi", "followers_url": "https://api.github.com/users/flandolfi/followers", "following_url": "https://api.github.com/users/flandolfi/following{/other_user}", "gists_url": "https://api.github.com/users/flandolfi/gists{/gist_id}", "starred_url": "https://api.github.com/users/flandolfi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flandolfi/subscriptions", "organizations_url": "https://api.github.com/users/flandolfi/orgs", "repos_url": "https://api.github.com/users/flandolfi/repos", "events_url": "https://api.github.com/users/flandolfi/events{/privacy}", "received_events_url": "https://api.github.com/users/flandolfi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637023, "node_id": "LA_kwDOBlHMec7veEaf", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/dataset", "name": "dataset", "color": "7705B6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "flandolfi", "id": 7069487, "node_id": "MDQ6VXNlcjcwNjk0ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/7069487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flandolfi", "html_url": "https://github.com/flandolfi", "followers_url": "https://api.github.com/users/flandolfi/followers", "following_url": "https://api.github.com/users/flandolfi/following{/other_user}", "gists_url": "https://api.github.com/users/flandolfi/gists{/gist_id}", "starred_url": "https://api.github.com/users/flandolfi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flandolfi/subscriptions", "organizations_url": "https://api.github.com/users/flandolfi/orgs", "repos_url": "https://api.github.com/users/flandolfi/repos", "events_url": "https://api.github.com/users/flandolfi/events{/privacy}", "received_events_url": "https://api.github.com/users/flandolfi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "flandolfi", "id": 7069487, "node_id": "MDQ6VXNlcjcwNjk0ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/7069487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flandolfi", "html_url": "https://github.com/flandolfi", "followers_url": "https://api.github.com/users/flandolfi/followers", "following_url": "https://api.github.com/users/flandolfi/following{/other_user}", "gists_url": "https://api.github.com/users/flandolfi/gists{/gist_id}", "starred_url": "https://api.github.com/users/flandolfi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flandolfi/subscriptions", "organizations_url": "https://api.github.com/users/flandolfi/orgs", "repos_url": "https://api.github.com/users/flandolfi/repos", "events_url": "https://api.github.com/users/flandolfi/events{/privacy}", "received_events_url": "https://api.github.com/users/flandolfi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-09-14T10:43:53Z", "updated_at": "2022-09-14T16:47:10Z", "closed_at": "2022-09-14T15:11:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5441", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5441", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5441.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5441.patch", "merged_at": "2022-09-14T15:11:48Z"}, "body": "Hi, this should fix #5411. `node_attributes` were not reshaped if `ndim == 1`.\r\n\r\nFrancesco", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5441/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5440", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5440/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5440/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5440/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5440", "id": 1372735645, "node_id": "PR_kwDOBlHMec4-7pKm", "number": 5440, "title": "Set `num_workers=0` for Windows OS in `node2vec` example", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358958730, "node_id": "MDU6TGFiZWwzMzU4OTU4NzMw", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/2%20-%20Priority%20P2", "name": "2 - Priority P2", "color": "006B75", "default": false, "description": ""}, {"id": 4017636777, "node_id": "LA_kwDOBlHMec7veEWp", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/example", "name": "example", "color": "27D88A", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-09-14T10:22:37Z", "updated_at": "2022-09-14T16:15:38Z", "closed_at": "2022-09-14T16:13:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5440", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5440", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5440.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5440.patch", "merged_at": "2022-09-14T16:13:46Z"}, "body": "This PR is to fix the bug in the node2vec example on a Windows machine, as discussed in [this discussion](https://github.com/pyg-team/pytorch_geometric/discussions/5428). Actually, this is a bug of PyTorch Dataloader rather than PyG. Also, it is not common (only on Windows OS) and I think it might not be necessary to fix.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5440/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5431", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5431/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5431/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5431/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5431", "id": 1371633360, "node_id": "PR_kwDOBlHMec4-3-Of", "number": 5431, "title": "fix: support `fx` functionality for older PyTorch versions", "user": {"login": "CaypoH", "id": 23395417, "node_id": "MDQ6VXNlcjIzMzk1NDE3", "avatar_url": "https://avatars.githubusercontent.com/u/23395417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CaypoH", "html_url": "https://github.com/CaypoH", "followers_url": "https://api.github.com/users/CaypoH/followers", "following_url": "https://api.github.com/users/CaypoH/following{/other_user}", "gists_url": "https://api.github.com/users/CaypoH/gists{/gist_id}", "starred_url": "https://api.github.com/users/CaypoH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CaypoH/subscriptions", "organizations_url": "https://api.github.com/users/CaypoH/orgs", "repos_url": "https://api.github.com/users/CaypoH/repos", "events_url": "https://api.github.com/users/CaypoH/events{/privacy}", "received_events_url": "https://api.github.com/users/CaypoH/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "CaypoH", "id": 23395417, "node_id": "MDQ6VXNlcjIzMzk1NDE3", "avatar_url": "https://avatars.githubusercontent.com/u/23395417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CaypoH", "html_url": "https://github.com/CaypoH", "followers_url": "https://api.github.com/users/CaypoH/followers", "following_url": "https://api.github.com/users/CaypoH/following{/other_user}", "gists_url": "https://api.github.com/users/CaypoH/gists{/gist_id}", "starred_url": "https://api.github.com/users/CaypoH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CaypoH/subscriptions", "organizations_url": "https://api.github.com/users/CaypoH/orgs", "repos_url": "https://api.github.com/users/CaypoH/repos", "events_url": "https://api.github.com/users/CaypoH/events{/privacy}", "received_events_url": "https://api.github.com/users/CaypoH/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "CaypoH", "id": 23395417, "node_id": "MDQ6VXNlcjIzMzk1NDE3", "avatar_url": "https://avatars.githubusercontent.com/u/23395417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CaypoH", "html_url": "https://github.com/CaypoH", "followers_url": "https://api.github.com/users/CaypoH/followers", "following_url": "https://api.github.com/users/CaypoH/following{/other_user}", "gists_url": "https://api.github.com/users/CaypoH/gists{/gist_id}", "starred_url": "https://api.github.com/users/CaypoH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CaypoH/subscriptions", "organizations_url": "https://api.github.com/users/CaypoH/orgs", "repos_url": "https://api.github.com/users/CaypoH/repos", "events_url": "https://api.github.com/users/CaypoH/events{/privacy}", "received_events_url": "https://api.github.com/users/CaypoH/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-09-13T15:24:45Z", "updated_at": "2022-09-13T15:30:57Z", "closed_at": "2022-09-13T15:30:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5431", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5431", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5431.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5431.patch", "merged_at": "2022-09-13T15:30:56Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5431/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5425", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5425/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5425/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5425/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5425", "id": 1371320595, "node_id": "PR_kwDOBlHMec4-26uv", "number": 5425, "title": "Keep `edge_index` with `SparseTensor` data representation for `PNA` model", "user": {"login": "JakubPietrakIntel", "id": 97102979, "node_id": "U_kgDOBcmsgw", "avatar_url": "https://avatars.githubusercontent.com/u/97102979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakubPietrakIntel", "html_url": "https://github.com/JakubPietrakIntel", "followers_url": "https://api.github.com/users/JakubPietrakIntel/followers", "following_url": "https://api.github.com/users/JakubPietrakIntel/following{/other_user}", "gists_url": "https://api.github.com/users/JakubPietrakIntel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakubPietrakIntel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakubPietrakIntel/subscriptions", "organizations_url": "https://api.github.com/users/JakubPietrakIntel/orgs", "repos_url": "https://api.github.com/users/JakubPietrakIntel/repos", "events_url": "https://api.github.com/users/JakubPietrakIntel/events{/privacy}", "received_events_url": "https://api.github.com/users/JakubPietrakIntel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358958308, "node_id": "MDU6TGFiZWwzMzU4OTU4MzA4", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/1%20-%20Priority%20P1", "name": "1 - Priority P1", "color": "FBCA04", "default": false, "description": ""}, {"id": 3969902632, "node_id": "LA_kwDOBlHMec7sn-go", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/benchmark", "name": "benchmark", "color": "f9d0c4", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "JakubPietrakIntel", "id": 97102979, "node_id": "U_kgDOBcmsgw", "avatar_url": "https://avatars.githubusercontent.com/u/97102979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakubPietrakIntel", "html_url": "https://github.com/JakubPietrakIntel", "followers_url": "https://api.github.com/users/JakubPietrakIntel/followers", "following_url": "https://api.github.com/users/JakubPietrakIntel/following{/other_user}", "gists_url": "https://api.github.com/users/JakubPietrakIntel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakubPietrakIntel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakubPietrakIntel/subscriptions", "organizations_url": "https://api.github.com/users/JakubPietrakIntel/orgs", "repos_url": "https://api.github.com/users/JakubPietrakIntel/repos", "events_url": "https://api.github.com/users/JakubPietrakIntel/events{/privacy}", "received_events_url": "https://api.github.com/users/JakubPietrakIntel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JakubPietrakIntel", "id": 97102979, "node_id": "U_kgDOBcmsgw", "avatar_url": "https://avatars.githubusercontent.com/u/97102979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakubPietrakIntel", "html_url": "https://github.com/JakubPietrakIntel", "followers_url": "https://api.github.com/users/JakubPietrakIntel/followers", "following_url": "https://api.github.com/users/JakubPietrakIntel/following{/other_user}", "gists_url": "https://api.github.com/users/JakubPietrakIntel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakubPietrakIntel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakubPietrakIntel/subscriptions", "organizations_url": "https://api.github.com/users/JakubPietrakIntel/orgs", "repos_url": "https://api.github.com/users/JakubPietrakIntel/repos", "events_url": "https://api.github.com/users/JakubPietrakIntel/events{/privacy}", "received_events_url": "https://api.github.com/users/JakubPietrakIntel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-09-13T11:47:43Z", "updated_at": "2022-09-13T12:25:54Z", "closed_at": "2022-09-13T12:25:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5425", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5425", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5425.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5425.patch", "merged_at": "2022-09-13T12:25:53Z"}, "body": "PNAConv calculates a degree for each node to obtain a scaling factor in [get_degree_histogram()](https://github.com/pyg-team/pytorch_geometric/blob/8bcc77c6f36b44f7be0ca7dc11f4dc3faecd31ed/torch_geometric/nn/conv/pna_conv.py#L191-L203)\r\nIn the benchmark using torch_geometric.transforms.ToSparseTensor by default removes edge_index from the transformed tensor, which will lead to test failing on `TypeError: 'NoneType' object is not subscriptable` with input `--models pna --use-sparse-tensor`\r\nTherefore a conditioning is added to keep edge_index in sparse transformed tensor if 'pna' is among tested benchmark models.\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5425/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5424", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5424/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5424/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5424/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5424", "id": 1370991843, "node_id": "PR_kwDOBlHMec4-10L4", "number": 5424, "title": "Only run labeleler CI on non-forks", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-09-13T07:31:31Z", "updated_at": "2022-09-13T07:32:01Z", "closed_at": "2022-09-13T07:32:00Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5424", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5424", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5424.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5424.patch", "merged_at": "2022-09-13T07:32:00Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5424/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5423", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5423/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5423/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5423/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5423", "id": 1370985981, "node_id": "PR_kwDOBlHMec4-1y9w", "number": 5423, "title": "Only run labeler CI on non-forks", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-09-13T07:26:20Z", "updated_at": "2022-09-13T07:26:52Z", "closed_at": "2022-09-13T07:26:51Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5423", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5423", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5423.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5423.patch", "merged_at": "2022-09-13T07:26:51Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5423/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5421", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5421/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5421/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5421/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5421", "id": 1370759101, "node_id": "I_kwDOBlHMec5RtB-9", "number": 5421, "title": "ASAPooling: jit.save function model export failed", "user": {"login": "huang229", "id": 29627190, "node_id": "MDQ6VXNlcjI5NjI3MTkw", "avatar_url": "https://avatars.githubusercontent.com/u/29627190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huang229", "html_url": "https://github.com/huang229", "followers_url": "https://api.github.com/users/huang229/followers", "following_url": "https://api.github.com/users/huang229/following{/other_user}", "gists_url": "https://api.github.com/users/huang229/gists{/gist_id}", "starred_url": "https://api.github.com/users/huang229/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huang229/subscriptions", "organizations_url": "https://api.github.com/users/huang229/orgs", "repos_url": "https://api.github.com/users/huang229/repos", "events_url": "https://api.github.com/users/huang229/events{/privacy}", "received_events_url": "https://api.github.com/users/huang229/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-09-13T02:24:18Z", "updated_at": "2022-09-20T18:17:31Z", "closed_at": "2022-09-20T18:17:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nASAPooling: jit.save function model export failed. I need your help, thank you very much!\r\n\r\n```python\r\nclass ASAP(torch.nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n\r\n        self.asapooling = ASAPooling(128, ratio=0.25, dropout=0.0).jittable()\r\n\r\n    def forward(self, x, edge_index):\r\n\r\n        edge_weight = None\r\n        batch = torch.zeros((x.shape[0])).cuda().long()\r\n        x, edge_index, edge_weight, batch, _ = self.asapooling(\r\n            x=x, edge_index=edge_index, edge_weight=edge_weight,\r\n            batch=batch)\r\n\r\n        return x\r\nmodel = ASAP()\r\nmm = torch.jit.script(model)\r\ntorch.jit.save(mm,\"asapooling.pt\")\r\n```\r\n#error \r\nTraceback (most recent call last):\r\n  File \"D:\\pycharm\\PyCharm Community Edition 2020.3.5\\plugins\\python-ce\\helpers\\pydev\\pydevd.py\", line 1477, in _exec\r\n    pydev_imports.execfile(file, globals, locals)  # execute the script\r\n  File \"D:\\pycharm\\PyCharm Community Edition 2020.3.5\\plugins\\python-ce\\helpers\\pydev\\_pydev_imps\\_pydev_execfile.py\", line 18, in execfile\r\n    exec(compile(contents+\"\\n\", file, 'exec'), glob, loc)\r\n  File \"E:/python_program/mesh_gcn/teeth_classfication/net/jit_model.py\", line 210, in <module>\r\n    torch.jit.save(mm,\"asapooling.pt\")\r\n  File \"D:\\Anaconda3\\envs\\teeth_deploy\\lib\\site-packages\\torch\\jit\\_serialization.py\", line 81, in save\r\n    m.save(f, _extra_files=_extra_files)\r\n  File \"D:\\Anaconda3\\envs\\teeth_deploy\\lib\\site-packages\\torch\\jit\\_script.py\", line 693, in save\r\n    return self._c.save(str(f), **kwargs)\r\nRuntimeError: \r\nCould not export Python function call '<python_value>'. Remove calls to Python functions before export. Did you forget to add @script or @script_method annotation? If this is a nn.ModuleList, add it to __constants__:\r\n  File \"E:\\python_program\\mesh_gcn\\teeth_classfication\\torch_geometric\\utils\\scatter.py\", line 66\r\n            out: Optional[Tensor] = None, dim_size: Optional[int] = None,\r\n            reduce: str = 'sum') -> Tensor:\r\n    return _scatter_impl(src, index, dim, out, dim_size, reduce)\r\n           ~~~~~~~~~~~~~ <--- HERE\r\n\r\n\r\nProcess finished with exit code -1\r\n\r\n\r\n\r\n\r\n### Environment\r\n\r\nPyG version:2.04\r\nPyTorch version:1.11.0\r\nOS: windows\r\nPython version:3.7.0\r\nCUDA/cuDNN version: cuda=11.3.1 cudnn not have\r\nHow you installed PyTorch and PyG (conda, pip, source): conda\r\nAny other relevant information (e.g., version of torch-scatter):\r\npytorch-scatter==2.0.9\r\npytorch-sparse==0.6.13\r\npytorch-cluster==1.6.0\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5421/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5420", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5420/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5420/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5420/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5420", "id": 1370745250, "node_id": "I_kwDOBlHMec5Rs-mi", "number": 5420, "title": "adj_t cannot be arranged by InMemoryDataset", "user": {"login": "boliqq07", "id": 39477388, "node_id": "MDQ6VXNlcjM5NDc3Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/39477388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boliqq07", "html_url": "https://github.com/boliqq07", "followers_url": "https://api.github.com/users/boliqq07/followers", "following_url": "https://api.github.com/users/boliqq07/following{/other_user}", "gists_url": "https://api.github.com/users/boliqq07/gists{/gist_id}", "starred_url": "https://api.github.com/users/boliqq07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boliqq07/subscriptions", "organizations_url": "https://api.github.com/users/boliqq07/orgs", "repos_url": "https://api.github.com/users/boliqq07/repos", "events_url": "https://api.github.com/users/boliqq07/events{/privacy}", "received_events_url": "https://api.github.com/users/boliqq07/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-09-13T02:09:11Z", "updated_at": "2022-09-13T03:33:50Z", "closed_at": "2022-09-13T03:33:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nFor ``Data`` with ``adj_t``, The InMemoryDataset report a bug, and This could be from ``torch_geometrics.data.separate``.\r\n\r\ncase:\r\n```python\r\ndataset = InMemoryDataset(root=\".\", pre_transform=T.ToSparseTensor()) # just for data with adj_t\r\ndataloader = DataLoader(dataset,batch_size = 128, shuffle= False)\r\nfor datai in dataloader:\r\n    batch= datai.batch\r\n```\r\nAnd I try to back to the old version, the bug is solved.\r\n\r\ntorch_geometrics.data.separate line: 98-112\r\n```python\r\n\r\n    # new version 2.1.0 post1\r\n    # elif (isinstance(value, Sequence) and isinstance(value[0], Sequence)\r\n    #       and not isinstance(value[0], str) and len(value[0]) > 0\r\n    #       and isinstance(value[0][0], (Tensor, SparseTensor))):\r\n    #     # Recursively separate elements of lists of lists.\r\n    #     return [elem[idx] for elem in value]\r\n    # \r\n    # elif (isinstance(value, Sequence) and not isinstance(value, str)\r\n    #       and isinstance(value[0], (Tensor, SparseTensor))):\r\n    #     # Recursively separate elements of lists of Tensors/SparseTensors.\r\n    #     return [\r\n    #         _separate(key, elem, idx, slices[i],\r\n    #                   incs[i] if decrement else None, batch, store, decrement)\r\n    #         for i, elem in enumerate(value)\r\n    #     ]\r\n\r\n    # old version\r\n    elif (isinstance(value, Sequence) and isinstance(value[0], Sequence)\r\n          and not isinstance(value[0], str)\r\n          and isinstance(value[0][0], (Tensor, SparseTensor))):\r\n        # Recursively separate elements of lists of lists.\r\n        return [\r\n            _separate(key, elem, idx, slices[i],\r\n                      incs[i] if decrement else None, batch, store, decrement)\r\n            for i, elem in enumerate(value)\r\n        ]\r\n    ...........\r\n\r\n```\r\n\n\n### Environment\n\n* PyG version: 2.1.0.post1\r\n* PyTorch version: 1.11.0\r\n* OS: linux, windows\r\n* Python version: 3.9\r\n* CUDA/cuDNN version: 11.4\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5420/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5417", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5417/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5417/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5417/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5417", "id": 1370025165, "node_id": "I_kwDOBlHMec5RqOzN", "number": 5417, "title": "number of edges is zero for shapenet data", "user": {"login": "weiminw", "id": 3841400, "node_id": "MDQ6VXNlcjM4NDE0MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/3841400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiminw", "html_url": "https://github.com/weiminw", "followers_url": "https://api.github.com/users/weiminw/followers", "following_url": "https://api.github.com/users/weiminw/following{/other_user}", "gists_url": "https://api.github.com/users/weiminw/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiminw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiminw/subscriptions", "organizations_url": "https://api.github.com/users/weiminw/orgs", "repos_url": "https://api.github.com/users/weiminw/repos", "events_url": "https://api.github.com/users/weiminw/events{/privacy}", "received_events_url": "https://api.github.com/users/weiminw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-09-12T14:39:44Z", "updated_at": "2022-09-13T10:26:27Z", "closed_at": "2022-09-13T10:26:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nimport torch\r\nimport torch_geometric\r\nfrom torch_geometric.datasets import TUDataset, ShapeNet\r\ndataset = ShapeNet(root=\"./pytorch-geometric-datasets/SHAPENET\")\r\nprint(f\"PyG version: {torch_geometric.__version__}\")\r\nprint(f\"PyTorch version: {torch.__version__}\")\r\nprint()\r\nprint(f'Dataset: {dataset}:')\r\nprint('====================')\r\nprint(f'Number of graphs: {len(dataset)}')\r\nprint(f'Number of features: {dataset.num_features}')\r\nprint(f'Number of classes: {dataset.num_classes}')\r\n\r\ndata = dataset[0]  # Get the first graph object.\r\n\r\nprint()\r\nprint(data)\r\nprint('=============================================================')\r\n\r\nprint(f'Number of nodes: {data.num_nodes}')\r\n**print(f'Number of edges: {data.num_edges}') ```#we expect num_edges should not be 0 but  get 0 ```** \r\nprint(f'Average node degree: {data.num_edges / data.num_nodes:.2f}')\r\n\r\n```# NOTE: the bug is that data.num_edges should not be zero```\n\n### Environment\n\n* PyG version:2.1.0\r\n* PyTorch version: 1.12.1\r\n* OS: Mac OS\r\n* Python version: 3.9\r\n* CUDA/cuDNN version: None\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5417/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5411", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5411/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5411/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5411/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5411", "id": 1368868011, "node_id": "I_kwDOBlHMec5Rl0Sr", "number": 5411, "title": "The the feature dim of data.x is zero in Proteins dataset with the pyg version after 2.0.5", "user": {"login": "chaojiewang94", "id": 16972919, "node_id": "MDQ6VXNlcjE2OTcyOTE5", "avatar_url": "https://avatars.githubusercontent.com/u/16972919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaojiewang94", "html_url": "https://github.com/chaojiewang94", "followers_url": "https://api.github.com/users/chaojiewang94/followers", "following_url": "https://api.github.com/users/chaojiewang94/following{/other_user}", "gists_url": "https://api.github.com/users/chaojiewang94/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaojiewang94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaojiewang94/subscriptions", "organizations_url": "https://api.github.com/users/chaojiewang94/orgs", "repos_url": "https://api.github.com/users/chaojiewang94/repos", "events_url": "https://api.github.com/users/chaojiewang94/events{/privacy}", "received_events_url": "https://api.github.com/users/chaojiewang94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-09-11T08:07:51Z", "updated_at": "2022-09-14T15:11:49Z", "closed_at": "2022-09-14T15:11:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nThe main reason is in line 136 of tu_dataset.py\r\n\r\nit is strange that the value of num_edge_attributes is larger than the feature dimension of self.data.x in proteins, which leads to the resulting dimension of self.data.x is num_nodes*0\r\n\n\n### Environment\n\n* PyG version:\r\n* PyTorch version:\r\n* OS:\r\n* Python version:\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5411/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5410", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5410/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5410/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5410/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5410", "id": 1368658238, "node_id": "PR_kwDOBlHMec4-uHGr", "number": 5410, "title": "Fix potentially overridden key `batch` and `ptr` in `ShaDowKHopSampler`", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-09-10T15:44:35Z", "updated_at": "2022-09-11T15:08:53Z", "closed_at": "2022-09-11T12:46:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5410", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5410", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5410.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5410.patch", "merged_at": "2022-09-11T12:46:39Z"}, "body": "This PR is to fix the bug mentioned in [this issue](https://github.com/pyg-team/pytorch_geometric/issues/5409) when `ShaDowKHopSampler` accepts `DataBatch` as inputs. This bug was caused by the duplicated key `'batch'` each sampled batch in the `ShaDowKHopSampler` data loader would be potentially overridden by the input `DataBatch`.\r\n\r\nCurrently, my solution is to exclude the key `'batch'` when iterating `self.data`.\r\n+ Before\r\n```python\r\n        for k, v in self.data:\r\n            if k in ['edge_index', 'adj_t', 'num_nodes']:\r\n                continue\r\n```\r\n+ After\r\n```python\r\n        for k, v in self.data:\r\n            if k in ['edge_index', 'adj_t', 'num_nodes', 'batch', 'ptr']:\r\n                continue\r\n```\r\nI also excluded the key `ptr` to avoid the same problem.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5410/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5409", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5409/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5409/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5409/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5409", "id": 1368602645, "node_id": "I_kwDOBlHMec5RkzgV", "number": 5409, "title": "ShaDowKHopSampler creates incorrect data.batch when using Batch graph", "user": {"login": "cvanea", "id": 17099087, "node_id": "MDQ6VXNlcjE3MDk5MDg3", "avatar_url": "https://avatars.githubusercontent.com/u/17099087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cvanea", "html_url": "https://github.com/cvanea", "followers_url": "https://api.github.com/users/cvanea/followers", "following_url": "https://api.github.com/users/cvanea/following{/other_user}", "gists_url": "https://api.github.com/users/cvanea/gists{/gist_id}", "starred_url": "https://api.github.com/users/cvanea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cvanea/subscriptions", "organizations_url": "https://api.github.com/users/cvanea/orgs", "repos_url": "https://api.github.com/users/cvanea/repos", "events_url": "https://api.github.com/users/cvanea/events{/privacy}", "received_events_url": "https://api.github.com/users/cvanea/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-09-10T12:08:54Z", "updated_at": "2022-09-11T11:20:04Z", "closed_at": "2022-09-11T11:20:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nHello! Firstly, thank you for this fantastic library.\r\n\r\nI am trying to run various scalable GNNs on custom data but I am having an issue with shaDow.\r\n\r\nOn this line in the shaDow model definition (as per the example):\r\n`x = torch.cat([x[root_n_id], global_mean_pool(x, batch)], dim=-1)`\r\nThis error is thrown:\r\n`RuntimeError: Sizes of tensors must match except in dimension 1. Expected size 1024 but got size 1 for tensor number 1 in the list.`\r\nWhere 1024 is the batch size.\r\n\r\nI've found this is only a problem when the graph dataset is composed into a disjointed `Batch` graph.\r\n\r\nTo reproduce the problem, run the code from `examples/shadow.py` but change the data object into a `Batch` object:\r\n\r\n```\r\nfrom torch_geometric.data import Batch\r\ndataset = Flickr(path)\r\ndatas = [dataset[0]]\r\ndata = Batch.from_data_list(datas)\r\n```\r\n\r\nThank you for any help!\r\n\r\n\r\n### Environment\r\n\r\n* PyG version: 2.1.0.post1\r\n* PyTorch version: 1.11.0+cu113\r\n* OS: Ubuntu 20.04.2 (WSL) and macOS 11.1\r\n* Python version: 3.7.2\r\n* CUDA/cuDNN version: 11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): \r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5409/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5403", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5403/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5403/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5403/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5403", "id": 1368037822, "node_id": "PR_kwDOBlHMec4-sJ1R", "number": 5403, "title": "Fix bug in `gnn_explainer_ba_shapes` example", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017636777, "node_id": "LA_kwDOBlHMec7veEWp", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/example", "name": "example", "color": "27D88A", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-09-09T16:09:25Z", "updated_at": "2022-09-11T10:43:15Z", "closed_at": "2022-09-11T10:30:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5403", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5403", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5403.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5403.patch", "merged_at": "2022-09-11T10:30:58Z"}, "body": "This PR aims to fix the bug mentioned in [this issue](https://github.com/pyg-team/pytorch_geometric/issues/5391).", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5403/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5392", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5392/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5392/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5392/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5392", "id": 1367180119, "node_id": "PR_kwDOBlHMec4-pS5j", "number": 5392, "title": "fix(sampler): use `pyg-lib` for `num_neighbors = {}`", "user": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358958308, "node_id": "MDU6TGFiZWwzMzU4OTU4MzA4", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/1%20-%20Priority%20P1", "name": "1 - Priority P1", "color": "FBCA04", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-09-09T01:59:49Z", "updated_at": "2022-09-09T06:06:18Z", "closed_at": "2022-09-09T06:06:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5392", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5392", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5392.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5392.patch", "merged_at": "2022-09-09T06:06:18Z"}, "body": "Depends on https://github.com/pyg-team/pyg-lib/pull/99/, to be merged after that PR has landed.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5392/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5391", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5391/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5391/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5391/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5391", "id": 1366718366, "node_id": "I_kwDOBlHMec5Rdnee", "number": 5391, "title": "GNNExplainer runtime error", "user": {"login": "cxw-droid", "id": 62969142, "node_id": "MDQ6VXNlcjYyOTY5MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/62969142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxw-droid", "html_url": "https://github.com/cxw-droid", "followers_url": "https://api.github.com/users/cxw-droid/followers", "following_url": "https://api.github.com/users/cxw-droid/following{/other_user}", "gists_url": "https://api.github.com/users/cxw-droid/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxw-droid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxw-droid/subscriptions", "organizations_url": "https://api.github.com/users/cxw-droid/orgs", "repos_url": "https://api.github.com/users/cxw-droid/repos", "events_url": "https://api.github.com/users/cxw-droid/events{/privacy}", "received_events_url": "https://api.github.com/users/cxw-droid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-09-08T17:18:25Z", "updated_at": "2022-09-09T15:53:01Z", "closed_at": "2022-09-09T07:41:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhen I run example/gnn_explainer.py, there is an error as follows,\r\n\r\n`RuntimeError: The size of tensor a (13264) must match the size of tensor b (19) at non-singleton dimension 0`\r\n\r\nIt threw error finally here:\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/40ad1afc96a9cf1b39571549f37de983ca6100d8/examples/gnn_explainer.py#L25\r\n\r\nThe error was traced back to:\r\n https://github.com/pyg-team/pytorch_geometric/blob/40ad1afc96a9cf1b39571549f37de983ca6100d8/examples/gnn_explainer.py#L47\r\n\r\nI debugged and found here the length of `edge_index` and the length `edge_weight` do not match. The length of `edge_index` was reduced to 19 while the `edge_weight` was still 13264 inside the `explain_node()`\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.10.1\r\n* OS: Ubuntu 18.04\r\n* Python version: 3.9.12\r\n* CUDA/cuDNN version: 10.2\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5391/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5385", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5385/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5385/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5385/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5385", "id": 1365774280, "node_id": "I_kwDOBlHMec5RaA_I", "number": 5385, "title": "ASAPooling :  torch.jit.script export failed", "user": {"login": "huang229", "id": 29627190, "node_id": "MDQ6VXNlcjI5NjI3MTkw", "avatar_url": "https://avatars.githubusercontent.com/u/29627190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huang229", "html_url": "https://github.com/huang229", "followers_url": "https://api.github.com/users/huang229/followers", "following_url": "https://api.github.com/users/huang229/following{/other_user}", "gists_url": "https://api.github.com/users/huang229/gists{/gist_id}", "starred_url": "https://api.github.com/users/huang229/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huang229/subscriptions", "organizations_url": "https://api.github.com/users/huang229/orgs", "repos_url": "https://api.github.com/users/huang229/repos", "events_url": "https://api.github.com/users/huang229/events{/privacy}", "received_events_url": "https://api.github.com/users/huang229/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-09-08T08:23:15Z", "updated_at": "2022-09-09T07:32:42Z", "closed_at": "2022-09-09T07:32:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nASAPooling :  torch.jit.script export failed.  I hope to get help. Thank you.\r\n\r\n\r\n#code\r\n\r\ncconv2=ASAPooling(128, ratio=0.25, dropout=0.0)\r\nconv2 = torch.jit.script(conv2)\r\n\r\n#error\r\nModule 'LEConv' has no attribute 'inspector' (This attribute exists on the Python module, but we failed to convert Python type: 'torch_geometric.nn.conv.utils.inspector.Inspector' to a TorchScript type. Only tensors and (possibly nested) tuples of tensors, lists, or dictsare supported as inputs or outputs of traced functions, but instead got value of type Inspector.. Its type was inferred; try adding a type annotation for the attribute.):\r\n  File \"D:\\huangchaolin\\teeth_classfication_train\\torch_geometric\\nn\\conv\\message_passing.py\", line 470\r\n    \r\n        self._explain = explain\r\n        self.inspector.inspect(self.explain_message, pop_first=True)\r\n        ~~~~~~~~~~~~~~ <--- HERE\r\n        self.__user_args__ = self.inspector.keys(methods).difference(\r\n            self.special_args)\r\n\r\npython-BaseException\r\n\r\n\r\n\r\n### Environment\r\n\r\n* PyG version:2.04\r\n* PyTorch version:1.11.0\r\n* OS: windows\r\n* Python version:3.7.0\r\n* CUDA/cuDNN version:  cuda=11.3.1   cudnn not have\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): \r\n* pytorch-scatter==2.0.9\r\n* pytorch-sparse==0.6.13\r\n* pytorch-cluster==1.6.0\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5385/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5369", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5369/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5369/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5369/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5369", "id": 1364824671, "node_id": "I_kwDOBlHMec5RWZJf", "number": 5369, "title": "Example custom dataset yields TypeError", "user": {"login": "do-lania", "id": 111395301, "node_id": "U_kgDOBqPB5Q", "avatar_url": "https://avatars.githubusercontent.com/u/111395301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/do-lania", "html_url": "https://github.com/do-lania", "followers_url": "https://api.github.com/users/do-lania/followers", "following_url": "https://api.github.com/users/do-lania/following{/other_user}", "gists_url": "https://api.github.com/users/do-lania/gists{/gist_id}", "starred_url": "https://api.github.com/users/do-lania/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/do-lania/subscriptions", "organizations_url": "https://api.github.com/users/do-lania/orgs", "repos_url": "https://api.github.com/users/do-lania/repos", "events_url": "https://api.github.com/users/do-lania/events{/privacy}", "received_events_url": "https://api.github.com/users/do-lania/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-09-07T15:12:35Z", "updated_at": "2022-09-07T15:16:11Z", "closed_at": "2022-09-07T15:16:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhen using the example custom dataset from [documentation](https://pytorch-geometric.readthedocs.io/en/latest/notes/create_dataset.html), I get a TypeError, when I create the dataset.\r\n\r\n```\r\nimport torch\r\nfrom torch_geometric.data import InMemoryDataset, download_url\r\n\r\n\r\nclass MyOwnDataset(InMemoryDataset):\r\n    def __init__(self, root, transform=None, pre_transform=None, pre_filter=None):\r\n        super().__init__(root, transform, pre_transform, pre_filter)\r\n        self.data, self.slices = torch.load(self.processed_paths[0])\r\n\r\n    @property\r\n    def raw_file_names(self):\r\n        return [\"some_file_1\", \"some_file_2\", ...]\r\n\r\n    @property\r\n    def processed_file_names(self):\r\n        return [\"data.pt\"]\r\n\r\n    def download(self):\r\n        # Download to `self.raw_dir`.\r\n        download_url(url, self.raw_dir)\r\n        ...\r\n\r\n    def process(self):\r\n        # Read data into huge `Data` list.\r\n        data_list = [...]\r\n\r\n        if self.pre_filter is not None:\r\n            data_list = [data for data in data_list if self.pre_filter(data)]\r\n\r\n        if self.pre_transform is not None:\r\n            data_list = [self.pre_transform(data) for data in data_list]\r\n\r\n        data, slices = self.collate(data_list)\r\n        torch.save((data, slices), self.processed_paths[0])\r\n```\r\n\r\n```dataset = MyOwnDataset(root=\"/home/ubuntu/data/\")```\r\n\r\n```\r\nException has occurred: TypeError\r\njoin() argument must be str, bytes, or os.PathLike object, not 'ellipsis'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\n  File \"/home/ubuntu/kcn/dataset.py\", line 33, in __init__\r\n    super().__init__(root, transform, pre_transform, pre_filter)\r\n  File \"/home/ubuntu/kcn/dataset.py\", line 64, in <module>\r\n    dataset = MyOwnDataset(root=\"/home/ubuntu/data/\")\r\n```\n\n### Environment\n\n* PyG version: 2.1.0.post1\r\n* PyTorch version: 1.12.1\r\n* OS: Ubuntu 22.04\r\n* Python version: 3.10.5\r\n* CUDA/cuDNN version: 11.6\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5369/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5363", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5363/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5363/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5363/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5363", "id": 1363461960, "node_id": "PR_kwDOBlHMec4-cvaS", "number": 5363, "title": "Revert PR #5233 for missing test labels in `HBGDataset`", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637023, "node_id": "LA_kwDOBlHMec7veEaf", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/dataset", "name": "dataset", "color": "7705B6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-09-06T15:26:41Z", "updated_at": "2022-09-07T06:59:20Z", "closed_at": "2022-09-07T06:52:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5363", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5363", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5363.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5363.patch", "merged_at": null}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5363/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5361", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5361/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5361/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5361/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5361", "id": 1363423275, "node_id": "PR_kwDOBlHMec4-cnHv", "number": 5361, "title": "Fix condition to re-process `TUDataset` in PyG 2.1", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637023, "node_id": "LA_kwDOBlHMec7veEaf", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/dataset", "name": "dataset", "color": "7705B6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-09-06T14:58:43Z", "updated_at": "2022-09-06T14:59:07Z", "closed_at": "2022-09-06T14:59:03Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5361", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5361", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5361.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5361.patch", "merged_at": "2022-09-06T14:59:03Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5361/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5360", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5360/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5360/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5360/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5360", "id": 1363279314, "node_id": "I_kwDOBlHMec5RQf3S", "number": 5360, "title": "Bug on line 132 in the 'tudataset.py' file", "user": {"login": "StevanStanovic", "id": 61746436, "node_id": "MDQ6VXNlcjYxNzQ2NDM2", "avatar_url": "https://avatars.githubusercontent.com/u/61746436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StevanStanovic", "html_url": "https://github.com/StevanStanovic", "followers_url": "https://api.github.com/users/StevanStanovic/followers", "following_url": "https://api.github.com/users/StevanStanovic/following{/other_user}", "gists_url": "https://api.github.com/users/StevanStanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/StevanStanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StevanStanovic/subscriptions", "organizations_url": "https://api.github.com/users/StevanStanovic/orgs", "repos_url": "https://api.github.com/users/StevanStanovic/repos", "events_url": "https://api.github.com/users/StevanStanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/StevanStanovic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-09-06T13:21:03Z", "updated_at": "2022-09-06T14:59:35Z", "closed_at": "2022-09-06T14:59:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHello,\r\n\r\nThere is a bug on line 132 in the 'tudataset.py' file for the 2.1.0 version of Pytorch Geometric.\r\nThe message error is:\r\nValueError: not enough values to unpack (expected 3, got 2)\r\n\r\nI fixed it by removing the 'self.sizes' part and replacing the 'num node_labels', 'num_node attributes', 'num_edge_labels' and 'num_edge attributes' methods with those from version 2.0.4.\r\n\r\nI have attached a screenshot (PNG image) of my solution. I hope this will be useful.\r\n\r\nStevan Stanovic\r\n\r\n \r\n![screenshot](https://user-images.githubusercontent.com/61746436/188644398-5690a4a6-a9db-48d2-bb51-cd75d3e74288.png)\r\n\n\n### Environment\n\n* PyG version: 2.1.0\r\n* PyTorch version: 1.12.1\r\n* OS: Linux\r\n* Python version: 3.9.12\r\n* CUDA/cuDNN version: 11.6\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): \r\n  conda create -n test python=3.9.12\r\n  conda activate test\r\n  pip3 install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu116\r\n  pip install torch-scatter torch-sparse torch-cluster torch-spline-conv torch-geometric -f https://data.pyg.org/whl/torch-1.12.0+cu116.html\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\ntorch                         1.12.1+cu116\r\ntorch-cluster             1.6.0\r\ntorch-geometric        2.1.0.post1\r\ntorch-scatter             2.0.9\r\ntorch-sparse             0.6.15\r\ntorch-spline-conv     1.2.1\r\ntorchaudio               0.12.1+cu116\r\ntorchvision              0.13.1+cu116\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5360/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5359", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5359/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5359/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5359/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5359", "id": 1362771028, "node_id": "PR_kwDOBlHMec4-ab0R", "number": 5359, "title": "`Explainer`: bug fix.", "user": {"login": "wsad1", "id": 13963626, "node_id": "MDQ6VXNlcjEzOTYzNjI2", "avatar_url": "https://avatars.githubusercontent.com/u/13963626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsad1", "html_url": "https://github.com/wsad1", "followers_url": "https://api.github.com/users/wsad1/followers", "following_url": "https://api.github.com/users/wsad1/following{/other_user}", "gists_url": "https://api.github.com/users/wsad1/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsad1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsad1/subscriptions", "organizations_url": "https://api.github.com/users/wsad1/orgs", "repos_url": "https://api.github.com/users/wsad1/repos", "events_url": "https://api.github.com/users/wsad1/events{/privacy}", "received_events_url": "https://api.github.com/users/wsad1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 4020368118, "node_id": "LA_kwDOBlHMec7vofL2", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/explain", "name": "explain", "color": "5319e7", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "wsad1", "id": 13963626, "node_id": "MDQ6VXNlcjEzOTYzNjI2", "avatar_url": "https://avatars.githubusercontent.com/u/13963626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsad1", "html_url": "https://github.com/wsad1", "followers_url": "https://api.github.com/users/wsad1/followers", "following_url": "https://api.github.com/users/wsad1/following{/other_user}", "gists_url": "https://api.github.com/users/wsad1/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsad1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsad1/subscriptions", "organizations_url": "https://api.github.com/users/wsad1/orgs", "repos_url": "https://api.github.com/users/wsad1/repos", "events_url": "https://api.github.com/users/wsad1/events{/privacy}", "received_events_url": "https://api.github.com/users/wsad1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wsad1", "id": 13963626, "node_id": "MDQ6VXNlcjEzOTYzNjI2", "avatar_url": "https://avatars.githubusercontent.com/u/13963626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsad1", "html_url": "https://github.com/wsad1", "followers_url": "https://api.github.com/users/wsad1/followers", "following_url": "https://api.github.com/users/wsad1/following{/other_user}", "gists_url": "https://api.github.com/users/wsad1/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsad1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsad1/subscriptions", "organizations_url": "https://api.github.com/users/wsad1/orgs", "repos_url": "https://api.github.com/users/wsad1/repos", "events_url": "https://api.github.com/users/wsad1/events{/privacy}", "received_events_url": "https://api.github.com/users/wsad1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-09-06T06:28:43Z", "updated_at": "2022-09-06T08:14:10Z", "closed_at": "2022-09-06T08:14:10Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5359", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5359", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5359.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5359.patch", "merged_at": "2022-09-06T08:14:10Z"}, "body": "Fixes #5356.\r\nIn pooling models the `edge_attr` comes before `batch` see [here](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.pool.TopKPooling.forward). The `Explainer.get_model_prediction` assumed `batch` comes right after `x` and `edge_index`, this PR fixes that.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5359/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5347", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5347/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5347/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5347/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5347", "id": 1360783153, "node_id": "PR_kwDOBlHMec4-T9lD", "number": 5347, "title": "Fix `HeteroLinear` with `segment_matmul`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-09-03T07:18:26Z", "updated_at": "2022-09-03T07:19:16Z", "closed_at": "2022-09-03T07:19:15Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5347", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5347", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5347.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5347.patch", "merged_at": "2022-09-03T07:19:15Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5347/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5342", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5342/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5342/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5342/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5342", "id": 1360108231, "node_id": "PR_kwDOBlHMec4-Rw6w", "number": 5342, "title": "PyTorch nightly `fx` tracing fix", "user": {"login": "JakubPietrakIntel", "id": 97102979, "node_id": "U_kgDOBcmsgw", "avatar_url": "https://avatars.githubusercontent.com/u/97102979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakubPietrakIntel", "html_url": "https://github.com/JakubPietrakIntel", "followers_url": "https://api.github.com/users/JakubPietrakIntel/followers", "following_url": "https://api.github.com/users/JakubPietrakIntel/following{/other_user}", "gists_url": "https://api.github.com/users/JakubPietrakIntel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakubPietrakIntel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakubPietrakIntel/subscriptions", "organizations_url": "https://api.github.com/users/JakubPietrakIntel/orgs", "repos_url": "https://api.github.com/users/JakubPietrakIntel/repos", "events_url": "https://api.github.com/users/JakubPietrakIntel/events{/privacy}", "received_events_url": "https://api.github.com/users/JakubPietrakIntel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "JakubPietrakIntel", "id": 97102979, "node_id": "U_kgDOBcmsgw", "avatar_url": "https://avatars.githubusercontent.com/u/97102979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakubPietrakIntel", "html_url": "https://github.com/JakubPietrakIntel", "followers_url": "https://api.github.com/users/JakubPietrakIntel/followers", "following_url": "https://api.github.com/users/JakubPietrakIntel/following{/other_user}", "gists_url": "https://api.github.com/users/JakubPietrakIntel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakubPietrakIntel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakubPietrakIntel/subscriptions", "organizations_url": "https://api.github.com/users/JakubPietrakIntel/orgs", "repos_url": "https://api.github.com/users/JakubPietrakIntel/repos", "events_url": "https://api.github.com/users/JakubPietrakIntel/events{/privacy}", "received_events_url": "https://api.github.com/users/JakubPietrakIntel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JakubPietrakIntel", "id": 97102979, "node_id": "U_kgDOBcmsgw", "avatar_url": "https://avatars.githubusercontent.com/u/97102979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakubPietrakIntel", "html_url": "https://github.com/JakubPietrakIntel", "followers_url": "https://api.github.com/users/JakubPietrakIntel/followers", "following_url": "https://api.github.com/users/JakubPietrakIntel/following{/other_user}", "gists_url": "https://api.github.com/users/JakubPietrakIntel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakubPietrakIntel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakubPietrakIntel/subscriptions", "organizations_url": "https://api.github.com/users/JakubPietrakIntel/orgs", "repos_url": "https://api.github.com/users/JakubPietrakIntel/repos", "events_url": "https://api.github.com/users/JakubPietrakIntel/events{/privacy}", "received_events_url": "https://api.github.com/users/JakubPietrakIntel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-09-02T12:10:00Z", "updated_at": "2022-09-05T06:12:45Z", "closed_at": "2022-09-05T06:12:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5342", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5342", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5342.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5342.patch", "merged_at": "2022-09-05T06:12:45Z"}, "body": "Fix for inference_benchmark.py failing with an error:\r\n```\r\nreturn self._module_getattr(attr, attr_val,parameter_proxy_cache)\r\nAttributeError: 'Tracer' object has no attribute '_module_getattr'\r\n```\r\nReplace not implemented Tracer._module_getattr with Tracer.getattr to return the value of nn.Module attr.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5342/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5341", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5341/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5341/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5341/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5341", "id": 1359955830, "node_id": "PR_kwDOBlHMec4-RQJ6", "number": 5341, "title": "Fix inference benchmark", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969902632, "node_id": "LA_kwDOBlHMec7sn-go", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/benchmark", "name": "benchmark", "color": "f9d0c4", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-09-02T09:43:17Z", "updated_at": "2022-09-02T09:53:56Z", "closed_at": "2022-09-02T09:53:55Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5341", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5341", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5341.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5341.patch", "merged_at": "2022-09-02T09:53:55Z"}, "body": "The `dtype` was not properly passed to `model.inference`.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5341/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5332", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5332/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5332/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5332/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5332", "id": 1358222584, "node_id": "PR_kwDOBlHMec4-LbLs", "number": 5332, "title": "Fix `PointTransformerConv` aggregation from `mean` to `sum`", "user": {"login": "saedrna", "id": 3850191, "node_id": "MDQ6VXNlcjM4NTAxOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3850191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saedrna", "html_url": "https://github.com/saedrna", "followers_url": "https://api.github.com/users/saedrna/followers", "following_url": "https://api.github.com/users/saedrna/following{/other_user}", "gists_url": "https://api.github.com/users/saedrna/gists{/gist_id}", "starred_url": "https://api.github.com/users/saedrna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saedrna/subscriptions", "organizations_url": "https://api.github.com/users/saedrna/orgs", "repos_url": "https://api.github.com/users/saedrna/repos", "events_url": "https://api.github.com/users/saedrna/events{/privacy}", "received_events_url": "https://api.github.com/users/saedrna/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "saedrna", "id": 3850191, "node_id": "MDQ6VXNlcjM4NTAxOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3850191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saedrna", "html_url": "https://github.com/saedrna", "followers_url": "https://api.github.com/users/saedrna/followers", "following_url": "https://api.github.com/users/saedrna/following{/other_user}", "gists_url": "https://api.github.com/users/saedrna/gists{/gist_id}", "starred_url": "https://api.github.com/users/saedrna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saedrna/subscriptions", "organizations_url": "https://api.github.com/users/saedrna/orgs", "repos_url": "https://api.github.com/users/saedrna/repos", "events_url": "https://api.github.com/users/saedrna/events{/privacy}", "received_events_url": "https://api.github.com/users/saedrna/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "saedrna", "id": 3850191, "node_id": "MDQ6VXNlcjM4NTAxOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3850191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saedrna", "html_url": "https://github.com/saedrna", "followers_url": "https://api.github.com/users/saedrna/followers", "following_url": "https://api.github.com/users/saedrna/following{/other_user}", "gists_url": "https://api.github.com/users/saedrna/gists{/gist_id}", "starred_url": "https://api.github.com/users/saedrna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saedrna/subscriptions", "organizations_url": "https://api.github.com/users/saedrna/orgs", "repos_url": "https://api.github.com/users/saedrna/repos", "events_url": "https://api.github.com/users/saedrna/events{/privacy}", "received_events_url": "https://api.github.com/users/saedrna/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-09-01T04:11:13Z", "updated_at": "2022-09-02T11:57:18Z", "closed_at": "2022-09-02T09:23:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5332", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5332", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5332.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5332.patch", "merged_at": "2022-09-02T09:23:12Z"}, "body": "The message in PointTransformerConv is already softmax, which sum to one. The aggregation should be `add` rather `mean`.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5332/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5327", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5327/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5327/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5327/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5327", "id": 1357346062, "node_id": "I_kwDOBlHMec5Q53UO", "number": 5327, "title": "Bug - HeteroData Model building issue in message_passing.py \"IndexError: index out of range in self\"", "user": {"login": "sriakhil25", "id": 45402417, "node_id": "MDQ6VXNlcjQ1NDAyNDE3", "avatar_url": "https://avatars.githubusercontent.com/u/45402417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sriakhil25", "html_url": "https://github.com/sriakhil25", "followers_url": "https://api.github.com/users/sriakhil25/followers", "following_url": "https://api.github.com/users/sriakhil25/following{/other_user}", "gists_url": "https://api.github.com/users/sriakhil25/gists{/gist_id}", "starred_url": "https://api.github.com/users/sriakhil25/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sriakhil25/subscriptions", "organizations_url": "https://api.github.com/users/sriakhil25/orgs", "repos_url": "https://api.github.com/users/sriakhil25/repos", "events_url": "https://api.github.com/users/sriakhil25/events{/privacy}", "received_events_url": "https://api.github.com/users/sriakhil25/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2022-08-31T13:32:04Z", "updated_at": "2022-09-05T09:48:23Z", "closed_at": "2022-09-05T09:48:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nHi Pyg Team,\r\n\r\nMy HeteroData Object appears as below:\r\nHeteroData(\r\n  patient={ x=[480, 3] },\r\n  condition={\r\n    x=[10128, 1],\r\n    y=[10128],\r\n    train_mask=[10128],\r\n    test_mask=[10128],\r\n    val_mask=[10128]\r\n  },\r\n  (patient, has, condition)={ edge_index=[2, 10128] }\r\n)\r\n\r\n`torch.save(data, 'HetroData.pt')`\r\npt file of this HeteroData can be downloaded from below URL:\r\nhttps://github.com/sriakhil25/GraphNN_Research/blob/main/HetroData.pt\r\n\r\nModel looks like below\r\nHGT(\r\n  (lin_dict): ModuleDict(\r\n    (patient): Linear(-1, 64, bias=True)\r\n    (condition): Linear(-1, 64, bias=True)\r\n  )\r\n  (convs): ModuleList(\r\n    (0): HGTConv(-1, 64, heads=2)\r\n  )\r\n  (lin): Linear(64, 4, bias=True)\r\n)\r\n\r\n\r\nI am building a simple node classification task on 'condition' using HGT or HeteroGNN by referring the example code DBLP dataset.\r\n\r\nwhile running the following code :\r\nwith torch.no_grad():  # Initialize lazy modules.\r\n    out = model(data.x_dict, data.edge_index_dict)\r\n\r\nI am getting index error in  message_passing.py \"IndexError: index out of range in self\". Complete error is as follows:\r\n\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n~\\AppData\\Local\\Temp\\ipykernel_7996\\418962991.py in <module>\r\n      1 with torch.no_grad():  # Initialize lazy modules.\r\n----> 2     out = model(data.x_dict, data.edge_index_dict)\r\n\r\n~\\.conda\\envs\\gnn\\lib\\site-packages\\torch\\nn\\modules\\module.py in _call_impl(self, *input, **kwargs)\r\n   1108         if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks\r\n   1109                 or _global_forward_hooks or _global_forward_pre_hooks):\r\n-> 1110             return forward_call(*input, **kwargs)\r\n   1111         # Do not call functions when jit is used\r\n   1112         full_backward_hooks, non_full_backward_hooks = [], []\r\n\r\n~\\AppData\\Local\\Temp\\ipykernel_7996\\1550241237.py in forward(self, x_dict, edge_index_dict)\r\n     22 \r\n     23         for conv in self.convs:\r\n---> 24             x_dict = conv(x_dict, edge_index_dict)\r\n     25 \r\n     26         return self.lin(x_dict['condition'])\r\n\r\n~\\.conda\\envs\\gnn\\lib\\site-packages\\torch\\nn\\modules\\module.py in _call_impl(self, *input, **kwargs)\r\n   1108         if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks\r\n   1109                 or _global_forward_hooks or _global_forward_pre_hooks):\r\n-> 1110             return forward_call(*input, **kwargs)\r\n   1111         # Do not call functions when jit is used\r\n   1112         full_backward_hooks, non_full_backward_hooks = [], []\r\n\r\n~\\.conda\\envs\\gnn\\lib\\site-packages\\torch_geometric\\nn\\conv\\hgt_conv.py in forward(self, x_dict, edge_index_dict)\r\n    158             # propagate_type: (k: Tensor, q: Tensor, v: Tensor, rel: Tensor)\r\n    159             out = self.propagate(edge_index, k=k, q=q_dict[dst_type], v=v,\r\n--> 160                                  rel=self.p_rel[edge_type], size=None)\r\n    161             out_dict[dst_type].append(out)\r\n    162 \r\n\r\n~\\.conda\\envs\\gnn\\lib\\site-packages\\torch_geometric\\nn\\conv\\message_passing.py in propagate(self, edge_index, size, **kwargs)\r\n    308 \r\n    309                 coll_dict = self.__collect__(self.__user_args__, edge_index,\r\n--> 310                                              size, kwargs)\r\n    311 \r\n    312                 msg_kwargs = self.inspector.distribute('message', coll_dict)\r\n\r\n~\\.conda\\envs\\gnn\\lib\\site-packages\\torch_geometric\\nn\\conv\\message_passing.py in __collect__(self, args, edge_index, size, kwargs)\r\n    200                 if isinstance(data, Tensor):\r\n    201                     self.__set_size__(size, dim, data)\r\n--> 202                     data = self.__lift__(data, edge_index, dim)\r\n    203 \r\n    204                 out[arg] = data\r\n\r\n~\\.conda\\envs\\gnn\\lib\\site-packages\\torch_geometric\\nn\\conv\\message_passing.py in __lift__(self, src, edge_index, dim)\r\n    170         if isinstance(edge_index, Tensor):\r\n    171             index = edge_index[dim]\r\n--> 172             return src.index_select(self.node_dim, index)\r\n    173         elif isinstance(edge_index, SparseTensor):\r\n    174             if dim == 1:\r\n\r\nIndexError: index out of range in self\r\n\r\n\r\n\r\n### Environment\r\n\r\n* PyG version:  2.0.4\r\n* PyTorch version: 1.11.0\r\n* OS: Windows10 \r\n* Python version: 3.7.9\r\n* CUDA/cuDNN version: CPU\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): Conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\ntorch_scatter 2.0.9", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5327/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5323", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5323/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5323/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5323/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5323", "id": 1357001239, "node_id": "I_kwDOBlHMec5Q4jIX", "number": 5323, "title": "Bug: fail to filter hetero data due to nonexistent node types in `node_dict`", "user": {"login": "WilliamCCHuang", "id": 33038038, "node_id": "MDQ6VXNlcjMzMDM4MDM4", "avatar_url": "https://avatars.githubusercontent.com/u/33038038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WilliamCCHuang", "html_url": "https://github.com/WilliamCCHuang", "followers_url": "https://api.github.com/users/WilliamCCHuang/followers", "following_url": "https://api.github.com/users/WilliamCCHuang/following{/other_user}", "gists_url": "https://api.github.com/users/WilliamCCHuang/gists{/gist_id}", "starred_url": "https://api.github.com/users/WilliamCCHuang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WilliamCCHuang/subscriptions", "organizations_url": "https://api.github.com/users/WilliamCCHuang/orgs", "repos_url": "https://api.github.com/users/WilliamCCHuang/repos", "events_url": "https://api.github.com/users/WilliamCCHuang/events{/privacy}", "received_events_url": "https://api.github.com/users/WilliamCCHuang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-08-31T08:38:14Z", "updated_at": "2022-09-02T11:33:39Z", "closed_at": "2022-09-02T11:33:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nThis error occurs when `HGTLoader` is used to sample subgraphs from `OGB_MAG`:\r\n\r\n```\r\nfrom torch_geometric.datasets import OGB_MAG\r\nfrom torch_geometric.loader import HGTLoader\r\n\r\nhetero_data = OGB_MAG(OGB_MAG_PATH)[0]\r\n    \r\nloader = HGTLoader(\r\n    hetero_data,\r\n    # Sample 512 nodes per type and per iteration for 4 iterations\r\n    num_samples={key: [512] * 4 for key in hetero_data.node_types},\r\n    # Use a batch size of 128 for sampling training nodes of type paper\r\n    batch_size=128,\r\n    input_nodes=('paper', hetero_data['paper'].train_mask),\r\n)\r\n\r\nfor _ in loader:\r\n    pass\r\n```\r\n\r\nThe following is the error message:\r\n\r\n```\r\ndata = HeteroData(\r\n  paper={\r\n    x=[736389, 128],\r\n    year=[736389],\r\n    y=[736389],\r\n    train_mask=[736389],\r\n    val...tes, paper)={ edge_index=[2, 5416271] },\r\n  (paper, has_topic, field_of_study)={ edge_index=[2, 7505078] }\r\n)\r\nnode_dict = {'author': tensor([1119617,   62263,  146356,  ...,  271833,  893211,  386123]), 'paper': tensor([     0,      1,      2,  ..., 583178, 679168, 674183])}\r\nrow_dict = {'author__writes__paper': tensor([1431, 1114,  797,  ..., 1496,   95,  978]), 'paper__cites__paper': tensor([  88,  129,  152,  ...,  839,  679, 1717])}\r\ncol_dict = {'author__writes__paper': tensor([   0,    0,    0,  ..., 2173, 2174, 2174]), 'paper__cites__paper': tensor([   0,    0,    1,  ..., 2174, 2174, 2174])}\r\nedge_dict = {'author__writes__paper': tensor([     11,      24,      28,  ..., 4769469, 6150509, 6150512]), 'paper__cites__paper': tensor([      0,       1,       2,  ..., 5307982, 5307986, 5307987])}\r\nperm_dict = {'author__affiliated_with__institution': tensor([ 170916,  195456,  208497,  ..., 1034292, 1034306, 1042358]), 'author...4, 5341200]), 'paper__has_topic__field_of_study': tensor([2310560, 3840174, 4471810,  ...,  394029, 5329783, 3472471])}\r\n\r\n    def filter_hetero_data(\r\n        data: HeteroData,\r\n        node_dict: Dict[str, Tensor],\r\n        row_dict: Dict[str, Tensor],\r\n        col_dict: Dict[str, Tensor],\r\n        edge_dict: Dict[str, Tensor],\r\n        perm_dict: Dict[str, OptTensor],\r\n    ) -> HeteroData:\r\n        # Filters a heterogeneous data object to only hold nodes in `node` and\r\n        # edges in `edge` for each node and edge type, respectively:\r\n        out = copy.copy(data)\r\n    \r\n        for node_type in data.node_types:\r\n            filter_node_store_(data[node_type], out[node_type],\r\n>                              node_dict[node_type])\r\nE           KeyError: 'institution'\r\n```\r\n\r\nThe cause may be that there are some nonexistent node types in `node_dict` because sometimes the sampled subgraph doesn't include any node of type `'institution '`. Also I saw similar errors when calling `filter_edge_store_`.\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.10.0+cu113\r\n* OS: Linux\r\n* Python version: 3.7.7\r\n* CUDA/cuDNN version: 11.6\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5323/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5318", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5318/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5318/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5318/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5318", "id": 1356563505, "node_id": "PR_kwDOBlHMec4-Fyrt", "number": 5318, "title": "hotfix(loader): check node types independently in `remote_backend_utils`", "user": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-08-31T00:56:16Z", "updated_at": "2022-08-31T05:31:02Z", "closed_at": "2022-08-31T02:37:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5318", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5318", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5318.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5318.patch", "merged_at": "2022-08-31T02:37:27Z"}, "body": "Updates `num_nodes` in `remote_backend_utils` to support obtaining sizes of edges without hitting the feature store.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5318/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5310", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5310/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5310/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5310/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5310", "id": 1355126343, "node_id": "I_kwDOBlHMec5QxZZH", "number": 5310, "title": "AttributeError when getting a variable from `Data` with the value of `None`", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-08-30T03:49:38Z", "updated_at": "2022-08-30T14:15:28Z", "closed_at": "2022-08-30T14:15:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nFor some reason, I need to specify a variable in `Data` and I initialized it with `None`. But I got an `AttributeError` when trying to get the value of this variable:\r\n```python\r\nfrom torch_geometric.data import Data\r\ndata = Data()\r\ndata.a_variable = None\r\ndata.a_variable\r\n# AttributeError: 'GlobalStorage' object has no attribute 'a_variable'\r\n```\n\n### Environment\n\n* PyG version: master\r\n* PyTorch version:\r\n* OS:\r\n* Python version:\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5310/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5299", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5299/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5299/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5299/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5299", "id": 1354009152, "node_id": "PR_kwDOBlHMec499H8O", "number": 5299, "title": "Fix separating a list of `SparseTensor`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-08-29T09:52:08Z", "updated_at": "2022-08-29T10:23:55Z", "closed_at": "2022-08-29T10:23:54Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5299", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5299", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5299.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5299.patch", "merged_at": "2022-08-29T10:23:54Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5299/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5285", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5285/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5285/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5285/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5285", "id": 1352134997, "node_id": "I_kwDOBlHMec5Ql_FV", "number": 5285, "title": "TypeError: 'type' object is not subscriptable", "user": {"login": "good-demo", "id": 90243359, "node_id": "MDQ6VXNlcjkwMjQzMzU5", "avatar_url": "https://avatars.githubusercontent.com/u/90243359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/good-demo", "html_url": "https://github.com/good-demo", "followers_url": "https://api.github.com/users/good-demo/followers", "following_url": "https://api.github.com/users/good-demo/following{/other_user}", "gists_url": "https://api.github.com/users/good-demo/gists{/gist_id}", "starred_url": "https://api.github.com/users/good-demo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/good-demo/subscriptions", "organizations_url": "https://api.github.com/users/good-demo/orgs", "repos_url": "https://api.github.com/users/good-demo/repos", "events_url": "https://api.github.com/users/good-demo/events{/privacy}", "received_events_url": "https://api.github.com/users/good-demo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-08-26T11:23:48Z", "updated_at": "2022-09-12T11:04:42Z", "closed_at": "2022-08-26T14:36:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nFile \"/home/data1/yxd/envs/gns/lib/python3.7/site-packages/torch_geometric/loader/dynamic_batch_sampler.py\", line 9, in <module>\r\n    class DynamicBatchSampler(torch.utils.data.sampler.Sampler[List[int]]):\r\nTypeError: 'type' object is not subscriptable\n\n### Environment\n\ntorch                 1.4.0+cu100\r\ntorch-cluster         1.5.2\r\ntorch-geometric       2.1.0\r\ntorch-scatter         2.0.4\r\ntorch-sparse          0.5.1\r\ntorch-spline-conv     1.2.0\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5285/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5276", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5276/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5276/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5276/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5276", "id": 1350392209, "node_id": "PR_kwDOBlHMec49xNuY", "number": 5276, "title": "Fail gracefully on `GLIBC` errors within `torch-spline-conv", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-08-25T06:31:49Z", "updated_at": "2022-08-25T06:38:14Z", "closed_at": "2022-08-25T06:38:13Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5276", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5276", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5276.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5276.patch", "merged_at": "2022-08-25T06:38:13Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5276/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5274", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5274/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5274/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5274/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5274", "id": 1349438064, "node_id": "PR_kwDOBlHMec49uBsp", "number": 5274, "title": "Fix `Dataset.num_classes` in case a transform modifies `data.y`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637023, "node_id": "LA_kwDOBlHMec7veEaf", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/dataset", "name": "dataset", "color": "7705B6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-08-24T13:19:57Z", "updated_at": "2022-08-24T13:28:02Z", "closed_at": "2022-08-24T13:28:02Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5274", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5274", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5274.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5274.patch", "merged_at": "2022-08-24T13:28:02Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5274/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5270", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5270/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5270/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5270/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5270", "id": 1348785799, "node_id": "PR_kwDOBlHMec49r35Y", "number": 5270, "title": "feat(graphstore): support `num_nodes`, enabling `Tuple[FeatureStore, GraphStore]` in `LightningLinkData`", "user": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-08-24T03:09:45Z", "updated_at": "2022-08-26T08:23:09Z", "closed_at": "2022-08-26T08:22:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5270", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5270", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5270.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5270.patch", "merged_at": "2022-08-26T08:22:53Z"}, "body": "There is still cleanup work to be done around `LightningNodeData`, `LightningLinkData`, and how we fetch `num_nodes`. This is simply a hotfix to have functionality working, the cleanup will happen shortly.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5270/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5264", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5264/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5264/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5264/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5264", "id": 1347639813, "node_id": "PR_kwDOBlHMec49oEPM", "number": 5264, "title": "Do not fill `InMemoryDataset` cache on `dataset.num_features`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637023, "node_id": "LA_kwDOBlHMec7veEaf", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/dataset", "name": "dataset", "color": "7705B6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-08-23T09:36:25Z", "updated_at": "2022-08-23T09:42:39Z", "closed_at": "2022-08-23T09:42:38Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5264", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5264", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5264.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5264.patch", "merged_at": "2022-08-23T09:42:38Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5264/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5261", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5261/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5261/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5261/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5261", "id": 1347340258, "node_id": "I_kwDOBlHMec5QTsfi", "number": 5261, "title": "num_features property of TUDataset is inconsistent after modifying data.x", "user": {"login": "xuhongzuo", "id": 37388323, "node_id": "MDQ6VXNlcjM3Mzg4MzIz", "avatar_url": "https://avatars.githubusercontent.com/u/37388323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xuhongzuo", "html_url": "https://github.com/xuhongzuo", "followers_url": "https://api.github.com/users/xuhongzuo/followers", "following_url": "https://api.github.com/users/xuhongzuo/following{/other_user}", "gists_url": "https://api.github.com/users/xuhongzuo/gists{/gist_id}", "starred_url": "https://api.github.com/users/xuhongzuo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xuhongzuo/subscriptions", "organizations_url": "https://api.github.com/users/xuhongzuo/orgs", "repos_url": "https://api.github.com/users/xuhongzuo/repos", "events_url": "https://api.github.com/users/xuhongzuo/events{/privacy}", "received_events_url": "https://api.github.com/users/xuhongzuo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-08-23T05:02:25Z", "updated_at": "2022-08-23T09:42:50Z", "closed_at": "2022-08-23T09:42:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi, \r\n\r\nI encountered a problem in `torch_geometric==2.0.0`.\r\nAs some graph datasets (e.g., Tox21) may have inconsistent numbers of node features in the training and testing sets, I use zero padding, but the `num_features` property is still the old number after modification. This incurs the following problem in the data loader during training. \r\n\r\n```\r\nRuntimeError: Sizes of tensors must match except in dimension 0. Expected size 51 but got size 54 for tensor number 1 in the list.\r\n```\r\n\r\n**my code:**\r\n\r\n```python\r\ndataset_root = '/'\r\ndataset_name = 'Tox21_HSE'\r\n\r\ngraphs_train = TUDataset(os.path.join(dataset_root, dataset_name + '_training'), name=dataset_name + '_training')\r\ngraphs_test = TUDataset(os.path.join(dataset_root, dataset_name + '_testing'), name=dataset_name + '_testing')\r\n\r\n# some graph datasets may have inconsistent features in training and testing sets. \r\nif graphs_test.num_features != graphs_train.num_features:\r\n    print('padding')\r\n    if graphs_train.num_features > graphs_test.num_features:\r\n        padding_dim = graphs_train.num_features - graphs_test.num_features\r\n        n_test = graphs_test.data.x.shape[0]\r\n        graphs_test.data.x = torch.cat([graphs_test.data.x, torch.zeros(n_test, padding_dim)], dim=1)\r\n    else:\r\n        padding_dim = graphs_test.num_features - graphs_train.num_features\r\n        n_train = graphs_train.data.x.shape[0]\r\n        graphs_train.data.x = torch.cat([graphs_train.data.x, torch.zeros(n_train, padding_dim)], dim=1)\r\n\r\nprint(graphs_train.data.x.size(), graphs_test.data.x.size()) # this will be right number of features after modification\r\nprint(graphs_test.num_features) # however, this is still the old number of features\r\n```\r\n\r\n\n\n### Environment\n\n* PyG version: 2.0.0\r\n* PyTorch version: 1.10.1\r\n* OS: Linux\r\n* Python version: 3.8\r\n* CUDA/cuDNN version: 11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5261/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5257", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5257/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5257/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5257/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5257", "id": 1346015852, "node_id": "PR_kwDOBlHMec49iny5", "number": 5257, "title": "Fix broken `DBLP` link", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-08-22T08:23:58Z", "updated_at": "2022-08-22T08:24:23Z", "closed_at": "2022-08-22T08:24:22Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5257", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5257", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5257.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5257.patch", "merged_at": "2022-08-22T08:24:22Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5257/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5256", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5256/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5256/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5256/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5256", "id": 1346003215, "node_id": "PR_kwDOBlHMec49ilGg", "number": 5256, "title": "Ensure that `*.jinja` files are found upon installation", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 1267385339, "node_id": "MDU6TGFiZWwxMjY3Mzg1MzM5", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/installation", "name": "installation", "color": "bfdadc", "default": false, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-08-22T08:15:17Z", "updated_at": "2022-08-22T08:24:33Z", "closed_at": "2022-08-22T08:24:33Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5256", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5256", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5256.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5256.patch", "merged_at": "2022-08-22T08:24:32Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5256/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5251", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5251/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5251/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5251/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5251", "id": 1345102717, "node_id": "I_kwDOBlHMec5QLKN9", "number": 5251, "title": "`dblp` dataset download link is broken", "user": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637023, "node_id": "LA_kwDOBlHMec7veEaf", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/dataset", "name": "dataset", "color": "7705B6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-08-20T09:12:45Z", "updated_at": "2022-08-23T09:53:48Z", "closed_at": "2022-08-23T08:49:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nThe `dblp` dataset is currently broken as the dropbox [link](https://www.dropbox.com/s/yh4grpeks87ugr2/DBLP_processed.zip?dl=1) is no longer live. This was showing up in failing CI tests for all PRs.\r\n\r\nPossible fixes:\r\n- Find another source of the same data (or upload the same if we have it anywhere).\r\n- Recreate the data from the dataset which is available [here](https://dblp.org/faq/How+can+I+download+the+whole+dblp+dataset.html).\r\n\r\nNote that we have added a skipped test [here](https://github.com/pyg-team/pytorch_geometric/pull/5250/files#r950671979) which should be re-enabled once this dataset is fixed.\r\n\r\nNote there is a temporary fix: https://github.com/pyg-team/pytorch_geometric/pull/5250\r\n\r\n### Environment\r\n\r\n* PyG version: 2.1.0\r\n* PyTorch version: 1.12\r\n* OS: CI\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5251/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5250", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5250/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5250/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5250/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5250", "id": 1345088181, "node_id": "PR_kwDOBlHMec49fti3", "number": 5250, "title": "Rewrite tests to not depend on currently broken `dblp` dataset", "user": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637023, "node_id": "LA_kwDOBlHMec7veEaf", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/dataset", "name": "dataset", "color": "7705B6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-08-20T07:57:24Z", "updated_at": "2022-08-20T09:19:26Z", "closed_at": "2022-08-20T09:19:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5250", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5250", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5250.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5250.patch", "merged_at": "2022-08-20T09:19:25Z"}, "body": "This PR changes tests that were using the `dblp` as it seems to be currently broken. ", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5250/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5241", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5241/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5241/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5241/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5241", "id": 1344370506, "node_id": "PR_kwDOBlHMec49dWNH", "number": 5241, "title": "Fix test on PyTorch < 1.12", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-08-19T12:22:59Z", "updated_at": "2022-08-19T12:27:27Z", "closed_at": "2022-08-19T12:27:27Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5241", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5241", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5241.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5241.patch", "merged_at": "2022-08-19T12:27:27Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5241/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5220", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5220/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5220/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5220/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5220", "id": 1341438295, "node_id": "PR_kwDOBlHMec49TmYC", "number": 5220, "title": "Prevent absolute paths in `egg-info`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 1267385339, "node_id": "MDU6TGFiZWwxMjY3Mzg1MzM5", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/installation", "name": "installation", "color": "bfdadc", "default": false, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-08-17T09:17:44Z", "updated_at": "2022-08-17T09:20:07Z", "closed_at": "2022-08-17T09:20:06Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5220", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5220", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5220.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5220.patch", "merged_at": "2022-08-17T09:20:06Z"}, "body": "Related to https://github.com/rusty1s/pytorch_cluster/pull/142.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5220/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5210", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5210/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5210/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5210/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5210", "id": 1340448328, "node_id": "PR_kwDOBlHMec49QY3S", "number": 5210, "title": "Remove `MutableMapping` base class in `FeatureStore`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-08-16T14:31:13Z", "updated_at": "2022-08-17T10:29:49Z", "closed_at": "2022-08-17T10:29:49Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5210", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5210", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5210.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5210.patch", "merged_at": "2022-08-17T10:29:48Z"}, "body": "Ideally, we want to let `FeatureStore` inherit from`MutableMapping` to clearly indicate its behavior and usage to the user. However, having `MutableMapping` as a base class leads to strange behavior in combination with PyTorch and PyTorch Lightning, in particular since these libraries use customized logic during mini-batch for `Mapping` base classes.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5210/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5207", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5207/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5207/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5207/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5207", "id": 1340110171, "node_id": "PR_kwDOBlHMec49PQDo", "number": 5207, "title": "Fix device mismatch bug in `metapath2vec` example", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017636777, "node_id": "LA_kwDOBlHMec7veEWp", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/example", "name": "example", "color": "27D88A", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-08-16T10:02:03Z", "updated_at": "2022-08-16T11:32:24Z", "closed_at": "2022-08-16T10:07:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5207", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5207", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5207.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5207.patch", "merged_at": "2022-08-16T10:07:26Z"}, "body": "This PR fixes the device mismatch bug in [metapath2vec example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/hetero/metapath2vec.py). This bug was also mentioned in [this discussion](https://torchgeometricco.slack.com/archives/CRAR9HK2P/p1660639673925579).", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5207/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5202", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5202/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5202/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5202/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5202", "id": 1339701573, "node_id": "PR_kwDOBlHMec49N5MJ", "number": 5202, "title": "Fix tensor creation in `EquilibirumAggregation` to respect model device", "user": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-08-16T01:38:00Z", "updated_at": "2022-08-16T05:09:31Z", "closed_at": "2022-08-16T05:09:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5202", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5202", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5202.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5202.patch", "merged_at": "2022-08-16T05:09:31Z"}, "body": "Addresses https://github.com/pyg-team/pytorch_geometric/issues/5199#event-7191100584\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5202/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5199", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5199/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5199/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5199/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5199", "id": 1339405616, "node_id": "I_kwDOBlHMec5P1bUw", "number": 5199, "title": "EquilibriumAggregation fails when model is trained on GPU, and EA used as an aggregation layer only", "user": {"login": "pgniewko", "id": 31355874, "node_id": "MDQ6VXNlcjMxMzU1ODc0", "avatar_url": "https://avatars.githubusercontent.com/u/31355874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pgniewko", "html_url": "https://github.com/pgniewko", "followers_url": "https://api.github.com/users/pgniewko/followers", "following_url": "https://api.github.com/users/pgniewko/following{/other_user}", "gists_url": "https://api.github.com/users/pgniewko/gists{/gist_id}", "starred_url": "https://api.github.com/users/pgniewko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pgniewko/subscriptions", "organizations_url": "https://api.github.com/users/pgniewko/orgs", "repos_url": "https://api.github.com/users/pgniewko/repos", "events_url": "https://api.github.com/users/pgniewko/events{/privacy}", "received_events_url": "https://api.github.com/users/pgniewko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2022-08-15T19:39:23Z", "updated_at": "2022-08-16T05:10:22Z", "closed_at": "2022-08-16T05:09:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhen replacing a standard aggregation layer with:\r\n\r\n```\r\nself.readout_aggr = EquilibriumAggregation(128, 128, [256, 256])\r\n```\r\n\r\nNext, I'm training a model (that otherwise works) I'm getting these errors:\r\n\r\n```\r\nFile ~/.conda/envs/xxx/lib/python3.8/site-packages/torch_geometric/nn/aggr/base.py:74, in Aggregation.__call__(self, x, index, ptr, dim_size, dim, **kwargs)\r\n     69     elif index.numel() > 0 and dim_size <= int(index.max()):\r\n     70         raise ValueError(f\"Encountered invalid 'dim_size' (got \"\r\n     71                          f\"'{dim_size}' but expected \"\r\n     72                          f\">= '{int(index.max()) + 1}')\")\r\n---> 74 return super().__call__(x, index, ptr, dim_size, dim, **kwargs)\r\n\r\nFile ~/.conda/envs/xxx/lib/python3.8/site-packages/torch/nn/modules/module.py:1102, in Module._call_impl(self, *input, **kwargs)\r\n   1098 # If we don't have any hooks, we want to skip the rest of the logic in\r\n   1099 # this function, and just call forward.\r\n   1100 if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks\r\n   1101         or _global_forward_hooks or _global_forward_pre_hooks):\r\n-> 1102     return forward_call(*input, **kwargs)\r\n   1103 # Do not call functions when jit is used\r\n   1104 full_backward_hooks, non_full_backward_hooks = [], []\r\n\r\nFile ~/.conda/envs/xxx/lib/python3.8/site-packages/torch_geometric/nn/aggr/equilibrium.py:175, in EquilibriumAggregation.forward(self, x, index, ptr, dim_size, dim)\r\n    171     raise ValueError(\"`dim_size` is less than `index` \"\r\n    172                      \"implied size\")\r\n    174 with torch.enable_grad():\r\n--> 175     y = self.optimizer(x, self.init_output(index), index, self.energy,\r\n    176                        iterations=self.grad_iter)\r\n    178 if dim_size > index_size:\r\n    179     zero = torch.zeros(dim_size - index_size, *y.size()[1:])\r\n\r\nFile ~/.conda/envs/xxx/lib/python3.8/site-packages/torch/nn/modules/module.py:1102, in Module._call_impl(self, *input, **kwargs)\r\n   1098 # If we don't have any hooks, we want to skip the rest of the logic in\r\n   1099 # this function, and just call forward.\r\n   1100 if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks\r\n   1101         or _global_forward_hooks or _global_forward_pre_hooks):\r\n-> 1102     return forward_call(*input, **kwargs)\r\n   1103 # Do not call functions when jit is used\r\n   1104 full_backward_hooks, non_full_backward_hooks = [], []\r\n\r\nFile ~/.conda/envs/xxx/lib/python3.8/site-packages/torch_geometric/nn/aggr/equilibrium.py:95, in MomentumOptimizer.forward(self, x, y, index, func, iterations)\r\n     93 momentum_buffer = torch.zeros_like(y)\r\n     94 for _ in range(iterations):\r\n---> 95     val = func(x, y, index)\r\n     96     grad = torch.autograd.grad(val, y, create_graph=True,\r\n     97                                retain_graph=True)[0]\r\n     98     delta = self.learning_rate * grad\r\n\r\nFile ~/.conda/envs/xxx/lib/python3.8/site-packages/torch_geometric/nn/aggr/equilibrium.py:159, in EquilibriumAggregation.energy(self, x, y, index)\r\n    158 def energy(self, x: Tensor, y: Tensor, index: Optional[Tensor]):\r\n--> 159     return self.potential(x, y, index) + self.reg(y)\r\n\r\nFile ~/.conda/envs/xxx/lib/python3.8/site-packages/torch/nn/modules/module.py:1102, in Module._call_impl(self, *input, **kwargs)\r\n   1098 # If we don't have any hooks, we want to skip the rest of the logic in\r\n   1099 # this function, and just call forward.\r\n   1100 if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks\r\n   1101         or _global_forward_hooks or _global_forward_pre_hooks):\r\n-> 1102     return forward_call(*input, **kwargs)\r\n   1103 # Do not call functions when jit is used\r\n   1104 full_backward_hooks, non_full_backward_hooks = [], []\r\n\r\nFile ~/.conda/envs/xxx/lib/python3.8/site-packages/torch_geometric/nn/aggr/equilibrium.py:33, in ResNetPotential.forward(self, x, y, index)\r\n     31     inp = torch.cat([x, y.expand(x.size(0), -1)], dim=1)\r\n     32 else:\r\n---> 33     inp = torch.cat([x, y[index]], dim=1)\r\n     35 h = inp\r\n     36 for layer, res in zip(self.layers, self.res_trans):\r\n\r\nRuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument tensors in method wrapper___cat)\r\n```\r\n\r\nI confirmed that I have a `cuda` device:\r\n\r\n```\r\ntorch.device('cuda' if torch.cuda.is_available() else 'cpu')\r\ndevice(type='cuda')\r\n```\n\n### Environment\n\n* PyG version: 2.0.5\r\n* PyTorch version: 1.10.2+cu102\r\n* OS: MacOS 12.5\r\n* Python version: 3.8.13\r\n* CUDA/cuDNN version: 10.2\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): `pip`\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): `pip`\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5199/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5187", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5187/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5187/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5187/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5187", "id": 1334882770, "node_id": "PR_kwDOBlHMec48-KI1", "number": 5187, "title": "Fit `RGATConv` different device error", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-08-10T16:28:55Z", "updated_at": "2022-08-10T16:30:33Z", "closed_at": "2022-08-10T16:30:32Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5187", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5187", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5187.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5187.patch", "merged_at": "2022-08-10T16:30:32Z"}, "body": "Fixes #5163", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5187/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5186", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5186/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5186/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5186/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5186", "id": 1334874733, "node_id": "PR_kwDOBlHMec48-Ia-", "number": 5186, "title": "Allow for multi-dimensional `edge_labels` in `LinkNeighborLoader`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-08-10T16:21:42Z", "updated_at": "2022-08-10T16:29:59Z", "closed_at": "2022-08-10T16:29:58Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5186", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5186", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5186.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5186.patch", "merged_at": "2022-08-10T16:29:58Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5186/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5163", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5163/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5163/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5163/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5163", "id": 1331578968, "node_id": "I_kwDOBlHMec5PXkhY", "number": 5163, "title": "If RGATConv uses f-scaled mod, there will be bugs of different tensors on different devices", "user": {"login": "goldenNormal", "id": 32590304, "node_id": "MDQ6VXNlcjMyNTkwMzA0", "avatar_url": "https://avatars.githubusercontent.com/u/32590304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldenNormal", "html_url": "https://github.com/goldenNormal", "followers_url": "https://api.github.com/users/goldenNormal/followers", "following_url": "https://api.github.com/users/goldenNormal/following{/other_user}", "gists_url": "https://api.github.com/users/goldenNormal/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldenNormal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldenNormal/subscriptions", "organizations_url": "https://api.github.com/users/goldenNormal/orgs", "repos_url": "https://api.github.com/users/goldenNormal/repos", "events_url": "https://api.github.com/users/goldenNormal/events{/privacy}", "received_events_url": "https://api.github.com/users/goldenNormal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-08-08T09:19:38Z", "updated_at": "2022-08-10T16:30:43Z", "closed_at": "2022-08-10T16:30:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhen using RGATConv, set mod = 'f-scaled', tensor in different devices error will appear .\r\n\r\n\r\n`RGATConv(in_channels, out_channels, 14, num_bases=8,mod='f-scaled',concat =False,heads=8)` \r\n\r\n`RGATConv(in_channels, out_channels, 14, num_bases=8,concat =False,heads=8,)`,\r\n\r\n\r\nerror:\r\n\r\n>   File \"/home/mist/tianchi/RevRgcn.py\", line 365, in forward\r\n    return self.conv(x, edge_index,edge_type)\r\n  File \"/mistgpu/site-packages/torch/nn/modules/module.py\", line 1130, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"/mistgpu/site-packages/torch_geometric/nn/conv/rgat_conv.py\", line 341, in forward\r\n    out = self.propagate(edge_index=edge_index, edge_type=edge_type, x=x,\r\n  File \"/mistgpu/site-packages/torch_geometric/nn/conv/message_passing.py\", line 374, in propagate\r\n    out = self.message(**msg_kwargs)\r\n  File \"/mistgpu/site-packages/torch_geometric/nn/conv/rgat_conv.py\", line 473, in message\r\n    degree = scatter_add(ones, index,\r\n  File \"/mistgpu/site-packages/torch_scatter/scatter.py\", line 29, in scatter_add\r\n    return scatter_sum(src, index, dim, out, dim_size)\r\n  File \"/mistgpu/site-packages/torch_scatter/scatter.py\", line 21, in scatter_sum\r\n    return out.scatter_add_(dim, index, src)\r\nRuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_scatter_add_)\r\n\n\n### Environment\n\n* PyG version:`2.0.4`\r\n* PyTorch version:`1.12.1`\r\n* OS:`ubuntu 18.04.6 LTS`\r\n* Python version:`3.9.12`\r\n* CUDA/cuDNN version:`cu116`\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): `pip install torch-scatter torch-sparse torch-cluster torch-spline-conv torch-geometric -f https://data.pyg.org/whl/torch-1.12.0+cu116.html`\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5163/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5161", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5161/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5161/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5161/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5161", "id": 1331534372, "node_id": "PR_kwDOBlHMec48y9oB", "number": 5161, "title": "Fix a typo in the example code of `HGTLoader`", "user": {"login": "JihoChoi", "id": 5732211, "node_id": "MDQ6VXNlcjU3MzIyMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/5732211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JihoChoi", "html_url": "https://github.com/JihoChoi", "followers_url": "https://api.github.com/users/JihoChoi/followers", "following_url": "https://api.github.com/users/JihoChoi/following{/other_user}", "gists_url": "https://api.github.com/users/JihoChoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/JihoChoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JihoChoi/subscriptions", "organizations_url": "https://api.github.com/users/JihoChoi/orgs", "repos_url": "https://api.github.com/users/JihoChoi/repos", "events_url": "https://api.github.com/users/JihoChoi/events{/privacy}", "received_events_url": "https://api.github.com/users/JihoChoi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358958308, "node_id": "MDU6TGFiZWwzMzU4OTU4MzA4", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/1%20-%20Priority%20P1", "name": "1 - Priority P1", "color": "FBCA04", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "JihoChoi", "id": 5732211, "node_id": "MDQ6VXNlcjU3MzIyMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/5732211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JihoChoi", "html_url": "https://github.com/JihoChoi", "followers_url": "https://api.github.com/users/JihoChoi/followers", "following_url": "https://api.github.com/users/JihoChoi/following{/other_user}", "gists_url": "https://api.github.com/users/JihoChoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/JihoChoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JihoChoi/subscriptions", "organizations_url": "https://api.github.com/users/JihoChoi/orgs", "repos_url": "https://api.github.com/users/JihoChoi/repos", "events_url": "https://api.github.com/users/JihoChoi/events{/privacy}", "received_events_url": "https://api.github.com/users/JihoChoi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JihoChoi", "id": 5732211, "node_id": "MDQ6VXNlcjU3MzIyMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/5732211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JihoChoi", "html_url": "https://github.com/JihoChoi", "followers_url": "https://api.github.com/users/JihoChoi/followers", "following_url": "https://api.github.com/users/JihoChoi/following{/other_user}", "gists_url": "https://api.github.com/users/JihoChoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/JihoChoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JihoChoi/subscriptions", "organizations_url": "https://api.github.com/users/JihoChoi/orgs", "repos_url": "https://api.github.com/users/JihoChoi/repos", "events_url": "https://api.github.com/users/JihoChoi/events{/privacy}", "received_events_url": "https://api.github.com/users/JihoChoi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-08-08T08:42:05Z", "updated_at": "2022-08-08T09:06:43Z", "closed_at": "2022-08-08T09:06:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5161", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5161", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5161.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5161.patch", "merged_at": "2022-08-08T09:06:42Z"}, "body": "Fix a typo in the example code of HGTLoader().\r\n\r\nhttps://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.HGTLoader\r\n\r\nPrevious\r\n```\r\nloader = HGTLoader(\r\n    ...\r\n    input_nodes=('paper': hetero_data['paper'].train_mask),\r\n)\r\n```\r\n\r\nFixed\r\n```\r\nloader = HGTLoader(\r\n    ...\r\n    input_nodes=('paper', hetero_data['paper'].train_mask),\r\n)\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5161/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5158", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5158/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5158/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5158/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5158", "id": 1330955993, "node_id": "PR_kwDOBlHMec48xFnq", "number": 5158, "title": "GraphGym: Fix parsing of scientific notation when aggregating results", "user": {"login": "MoetaYuko", "id": 5774651, "node_id": "MDQ6VXNlcjU3NzQ2NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/5774651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MoetaYuko", "html_url": "https://github.com/MoetaYuko", "followers_url": "https://api.github.com/users/MoetaYuko/followers", "following_url": "https://api.github.com/users/MoetaYuko/following{/other_user}", "gists_url": "https://api.github.com/users/MoetaYuko/gists{/gist_id}", "starred_url": "https://api.github.com/users/MoetaYuko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MoetaYuko/subscriptions", "organizations_url": "https://api.github.com/users/MoetaYuko/orgs", "repos_url": "https://api.github.com/users/MoetaYuko/repos", "events_url": "https://api.github.com/users/MoetaYuko/events{/privacy}", "received_events_url": "https://api.github.com/users/MoetaYuko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3465159234, "node_id": "LA_kwDOBlHMec7OiiJC", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/graphgym", "name": "graphgym", "color": "BBD6C0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "MoetaYuko", "id": 5774651, "node_id": "MDQ6VXNlcjU3NzQ2NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/5774651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MoetaYuko", "html_url": "https://github.com/MoetaYuko", "followers_url": "https://api.github.com/users/MoetaYuko/followers", "following_url": "https://api.github.com/users/MoetaYuko/following{/other_user}", "gists_url": "https://api.github.com/users/MoetaYuko/gists{/gist_id}", "starred_url": "https://api.github.com/users/MoetaYuko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MoetaYuko/subscriptions", "organizations_url": "https://api.github.com/users/MoetaYuko/orgs", "repos_url": "https://api.github.com/users/MoetaYuko/repos", "events_url": "https://api.github.com/users/MoetaYuko/events{/privacy}", "received_events_url": "https://api.github.com/users/MoetaYuko/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "MoetaYuko", "id": 5774651, "node_id": "MDQ6VXNlcjU3NzQ2NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/5774651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MoetaYuko", "html_url": "https://github.com/MoetaYuko", "followers_url": "https://api.github.com/users/MoetaYuko/followers", "following_url": "https://api.github.com/users/MoetaYuko/following{/other_user}", "gists_url": "https://api.github.com/users/MoetaYuko/gists{/gist_id}", "starred_url": "https://api.github.com/users/MoetaYuko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MoetaYuko/subscriptions", "organizations_url": "https://api.github.com/users/MoetaYuko/orgs", "repos_url": "https://api.github.com/users/MoetaYuko/repos", "events_url": "https://api.github.com/users/MoetaYuko/events{/privacy}", "received_events_url": "https://api.github.com/users/MoetaYuko/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-08-07T09:00:25Z", "updated_at": "2022-08-07T12:38:38Z", "closed_at": "2022-08-07T12:38:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5158", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5158", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5158.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5158.patch", "merged_at": "2022-08-07T12:38:38Z"}, "body": "Fix parsing strings like foo-a=3-b=1e-4-c=1e-5", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5158/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5157", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5157/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5157/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5157/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5157", "id": 1330953652, "node_id": "I_kwDOBlHMec5PVL20", "number": 5157, "title": "Help! Cannot install the latest version of Scipy.", "user": {"login": "KazY0601", "id": 110762867, "node_id": "U_kgDOBpobcw", "avatar_url": "https://avatars.githubusercontent.com/u/110762867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KazY0601", "html_url": "https://github.com/KazY0601", "followers_url": "https://api.github.com/users/KazY0601/followers", "following_url": "https://api.github.com/users/KazY0601/following{/other_user}", "gists_url": "https://api.github.com/users/KazY0601/gists{/gist_id}", "starred_url": "https://api.github.com/users/KazY0601/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KazY0601/subscriptions", "organizations_url": "https://api.github.com/users/KazY0601/orgs", "repos_url": "https://api.github.com/users/KazY0601/repos", "events_url": "https://api.github.com/users/KazY0601/events{/privacy}", "received_events_url": "https://api.github.com/users/KazY0601/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-08-07T08:49:01Z", "updated_at": "2022-09-20T22:30:03Z", "closed_at": "2022-09-20T22:30:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\ncode:\r\nimport math\r\nG = create_graph(jaccards, vocab_group, topk=30)\r\nk = 2.0/math.sqrt(len(G.nodes()))\r\nplot_network(group, G, k=k, iterations=65)\r\n\r\nbug:\r\nFile ~\\Anaconda3\\lib\\site-packages\\networkx\\convert_matrix.py:921, in to_scipy_sparse_array(G, nodelist, dtype, weight, format)\r\n    919         r += diag_index\r\n    920         c += diag_index\r\n--> 921     A = sp.sparse.coo_array((d, (r, c)), shape=(nlen, nlen), dtype=dtype)\r\n    922 try:\r\n    923     return A.asformat(format)\r\n\r\nAttributeError: module 'scipy.sparse' has no attribute 'coo_array'\r\n----------------------------------------\r\nI read this article (https://github.com/pyg-team/pytorch_geometric/issues/4378) and tried everything below to update Scipy to the latest version, but it is not updated from 1.7.3.\r\nconda update scipy\r\nconda update networkx\r\npip install --upgrade pip\r\nconda update --all\n\n### Environment\n\n* PyG version:\r\n* PyTorch version:1.12.1\r\n* OS: windows10 pro\r\n* Python version:3.9.12\r\n* CUDA/cuDNN version:N/A\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): maybe conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5157/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5155", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5155/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5155/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5155/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5155", "id": 1330898624, "node_id": "PR_kwDOBlHMec48w6w6", "number": 5155, "title": "Fix bug in `EquilibriumAggregation`", "user": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-08-07T03:01:59Z", "updated_at": "2022-08-07T06:07:42Z", "closed_at": "2022-08-07T06:07:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5155", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5155", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5155.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5155.patch", "merged_at": "2022-08-07T06:07:41Z"}, "body": "Noticed when investigating https://github.com/pyg-team/pytorch_geometric/issues/5126, there was a small bug introduced when moving to the `nn.aggr` package.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5155/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5154", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5154/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5154/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5154/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5154", "id": 1330882127, "node_id": "PR_kwDOBlHMec48w3mf", "number": 5154, "title": "Fix bug for input module in `GINEConv`", "user": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-08-07T00:58:08Z", "updated_at": "2022-08-08T00:17:29Z", "closed_at": "2022-08-08T00:17:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5154", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5154", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5154.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5154.patch", "merged_at": "2022-08-08T00:17:29Z"}, "body": "See https://github.com/pyg-team/pytorch_geometric/issues/5143", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5154/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5143", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5143/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5143/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5143/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5143", "id": 1329660791, "node_id": "I_kwDOBlHMec5PQQN3", "number": 5143, "title": "GINEConv assumes nn is subscriptable", "user": {"login": "oiao", "id": 29927996, "node_id": "MDQ6VXNlcjI5OTI3OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/29927996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oiao", "html_url": "https://github.com/oiao", "followers_url": "https://api.github.com/users/oiao/followers", "following_url": "https://api.github.com/users/oiao/following{/other_user}", "gists_url": "https://api.github.com/users/oiao/gists{/gist_id}", "starred_url": "https://api.github.com/users/oiao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oiao/subscriptions", "organizations_url": "https://api.github.com/users/oiao/orgs", "repos_url": "https://api.github.com/users/oiao/repos", "events_url": "https://api.github.com/users/oiao/events{/privacy}", "received_events_url": "https://api.github.com/users/oiao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-08-05T09:03:57Z", "updated_at": "2022-08-08T00:17:30Z", "closed_at": "2022-08-08T00:17:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nThere is an issue with the GINEConv class when providing the `edge_dim` parameter.\r\nLine https://github.com/pyg-team/pytorch_geometric/blob/e805f0ca606ad67564d1c2de9e4a893243ca5d78/torch_geometric/nn/conv/gin_conv.py#L144\r\nassumes that the passed `nn` is subscriptable, which is not the case when it is directly derived from `nn.Module`:\r\n\r\n``` python\r\nfrom torch import nn\r\nfrom torch_geometric import nn as gnn\r\n\r\nclass Net(nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.lin = nn.Linear(1, 2)\r\n    def forward(self, x):\r\n        return self.lin(x)\r\n\r\ngnn.GINEConv(Net(), edge_dim=3)\r\n```\r\n```\r\nFile torch_geometric/nn/conv/gin_conv.py:144, in GINEConv.__init__(self, nn, eps, train_eps, edge_dim, **kwargs)\r\n    [142]     self.register_buffer('eps', torch.Tensor([eps]))\r\n    [143] if edge_dim is not None:\r\n--> [144]     if hasattr(self.nn[0], 'in_features'):\r\n    [145]         in_channels = self.nn[0].in_features\r\n    [146]     else:\r\n\r\nTypeError: 'Net' object is not subscriptable\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Environment\r\n\r\n* PyG version: 2.0.4\r\n* PyTorch version: 1.12\r\n* OS: Ubuntu\r\n* Python version: 3.8\r\n* CUDA/cuDNN version: 11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5143/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5139", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5139/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5139/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5139/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5139", "id": 1329029515, "node_id": "I_kwDOBlHMec5PN2GL", "number": 5139, "title": "RuntimeError when using DataLoader with multiprocessing and CUDA", "user": {"login": "hannes-brt", "id": 323139, "node_id": "MDQ6VXNlcjMyMzEzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/323139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hannes-brt", "html_url": "https://github.com/hannes-brt", "followers_url": "https://api.github.com/users/hannes-brt/followers", "following_url": "https://api.github.com/users/hannes-brt/following{/other_user}", "gists_url": "https://api.github.com/users/hannes-brt/gists{/gist_id}", "starred_url": "https://api.github.com/users/hannes-brt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hannes-brt/subscriptions", "organizations_url": "https://api.github.com/users/hannes-brt/orgs", "repos_url": "https://api.github.com/users/hannes-brt/repos", "events_url": "https://api.github.com/users/hannes-brt/events{/privacy}", "received_events_url": "https://api.github.com/users/hannes-brt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-08-04T18:27:48Z", "updated_at": "2023-04-21T12:38:19Z", "closed_at": "2022-08-04T18:51:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI get the following error when I attempt to use a `DataLoader` with multiprocessing and CUDA simulataneously:\r\n\r\n```\r\nE         File \"/home/ubuntu/.conda/envs/abab_bind_gvp/lib/python3.10/site-packages/torch_geometric/data/collate.py\", line 146, in _collate\r\nE           out = elem.new(storage)\r\nE       RuntimeError: Attempted to set the storage of a tensor on device \"cuda:0\" to a storage on different device \"cpu\".  This is no longer allowed; the devices must match.\r\n```\r\n\r\nApparently, the collate function attempts to set the storage of a tensor that is on the GPU to CPU.\r\n\r\nI believe this should be reproducible using any `Dataset` that returns tensors on the GPU memory and setting `num_workers > 0` on the `DataLoader`. \n\n### Environment\n\n* PyG version: 2.04\r\n* PyTorch version: 1.12.0\r\n* OS: Ubuntu 22.04\r\n* Python version: 3.10.5\r\n* CUDA/cuDNN version: 11.6\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5139/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5136", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5136/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5136/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5136/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5136", "id": 1328414272, "node_id": "PR_kwDOBlHMec48o4Pf", "number": 5136, "title": "`LinkNeighborLoader` Refactoring (part 2)", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-08-04T10:28:26Z", "updated_at": "2022-08-04T11:47:07Z", "closed_at": "2022-08-04T11:47:07Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5136", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5136", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5136.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5136.patch", "merged_at": "2022-08-04T11:47:07Z"}, "body": "We only want to use `torch.float` for binary classification. If `edge_label` is given, we do not need to cast its data type.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5136/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5130", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5130/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5130/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5130/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5130", "id": 1328149114, "node_id": "PR_kwDOBlHMec48n_q5", "number": 5130, "title": "Fix TorchScript support in `SoftmaxAggregation` and `PowerMeanAggregation`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-08-04T06:44:59Z", "updated_at": "2022-08-04T06:45:57Z", "closed_at": "2022-08-04T06:45:56Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5130", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5130", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5130.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5130.patch", "merged_at": "2022-08-04T06:45:56Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5130/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5129", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5129/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5129/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5129/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5129", "id": 1328054083, "node_id": "I_kwDOBlHMec5PKH9D", "number": 5129, "title": "Random errors when loading OGB datasets", "user": {"login": "CongWeilin", "id": 18029500, "node_id": "MDQ6VXNlcjE4MDI5NTAw", "avatar_url": "https://avatars.githubusercontent.com/u/18029500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CongWeilin", "html_url": "https://github.com/CongWeilin", "followers_url": "https://api.github.com/users/CongWeilin/followers", "following_url": "https://api.github.com/users/CongWeilin/following{/other_user}", "gists_url": "https://api.github.com/users/CongWeilin/gists{/gist_id}", "starred_url": "https://api.github.com/users/CongWeilin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CongWeilin/subscriptions", "organizations_url": "https://api.github.com/users/CongWeilin/orgs", "repos_url": "https://api.github.com/users/CongWeilin/repos", "events_url": "https://api.github.com/users/CongWeilin/events{/privacy}", "received_events_url": "https://api.github.com/users/CongWeilin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-08-04T04:34:10Z", "updated_at": "2022-09-10T03:27:40Z", "closed_at": "2022-09-10T03:27:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nReceive random error message `IndexError: index 242823520 is out of bounds for dimension 0 with size 123718280` error when loading OGB-Products using \r\n\r\n```\r\ndataset = PygNodePropPredDataset(name ='ogbn-products', transform = T.ToSparseTensor())\r\n```\r\n\r\nThis error doesn't happen every time... sometimes I have it, sometimes I don't. This has happened after I updated the PyTorch and PyTorch-Geometric versions recently ... \r\n\r\nI reinstalled using `pip install torch-scatter torch-sparse torch-cluster torch-spline-conv torch-geometric -f https://data.pyg.org/whl/torch-1.11.0+cu113.html\r\n--upgrade --force-reinstall` but still didn't work.\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.11.0+cu113\r\n* OS: Ubuntu 18.04\r\n* Python version: 3.8.5\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n\r\nInstalled by command `pip install torch-scatter torch-sparse torch-cluster torch-spline-conv torch-geometric -f https://data.pyg.org/whl/torch-1.11.0+cu113.html`", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5129/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5119", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5119/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5119/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5119/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5119", "id": 1327180364, "node_id": "I_kwDOBlHMec5PGypM", "number": 5119, "title": "Some questions on Linear layers of Conv layers", "user": {"login": "downeykking", "id": 50262216, "node_id": "MDQ6VXNlcjUwMjYyMjE2", "avatar_url": "https://avatars.githubusercontent.com/u/50262216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/downeykking", "html_url": "https://github.com/downeykking", "followers_url": "https://api.github.com/users/downeykking/followers", "following_url": "https://api.github.com/users/downeykking/following{/other_user}", "gists_url": "https://api.github.com/users/downeykking/gists{/gist_id}", "starred_url": "https://api.github.com/users/downeykking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/downeykking/subscriptions", "organizations_url": "https://api.github.com/users/downeykking/orgs", "repos_url": "https://api.github.com/users/downeykking/repos", "events_url": "https://api.github.com/users/downeykking/events{/privacy}", "received_events_url": "https://api.github.com/users/downeykking/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-08-03T12:57:24Z", "updated_at": "2022-08-04T03:42:53Z", "closed_at": "2022-08-04T03:42:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nIn SAGEConv, we have {x_i}^' = W1x1 + mean(x_j) like https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.SAGEConv\r\nand in the source code, we have\r\n```python\r\nself.lin_l = Linear(aggr_out_channels, out_channels, bias=bias)\r\n        if self.root_weight:\r\n            self.lin_r = Linear(in_channels[1], out_channels, bias=False)\r\n...\r\nif isinstance(x, Tensor):\r\n            x: OptPairTensor = (x, x)\r\n\r\n        if self.project and hasattr(self, 'lin'):\r\n            x = (self.lin(x[0]).relu(), x[1])\r\n\r\n        # propagate_type: (x: OptPairTensor)\r\n        out = self.propagate(edge_index, x=x, size=size)\r\n        out = self.lin_l(out)\r\n\r\n        x_r = x[1]\r\n        if self.root_weight and x_r is not None:\r\n            out += self.lin_r(x_r)\r\n```\r\nWhy we don't use `self.lin_r(x_r[col])` to transfome the x_i 's node features just look like the formula above? Some nodes in x may not attend the message to target nodes but we still give it a linear transformation?\r\nAnd in GATConv, we add a linear transformation to all nodes too:\r\n```python\r\nif isinstance(x, Tensor):\r\n            assert x.dim() == 2, \"Static graphs not supported in 'GATConv'\"\r\n            x_src = x_dst = self.lin_src(x).view(-1, H, C)\r\n```\r\nThe same question confused me for why we transform all nodes other than specific nodes like x[col] or x[row]?\r\n\r\n\r\n### Environment\r\n\r\n* PyG version: 2.0.4\r\n* PyTorch version:\r\n* OS:\r\n* Python version:\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5119/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5118", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5118/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5118/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5118/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5118", "id": 1327166261, "node_id": "PR_kwDOBlHMec48kv3p", "number": 5118, "title": "Fix PyG master tests", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}, {"id": 4385995340, "node_id": "LA_kwDOBlHMec8AAAABBWz6TA", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/skip-changelog", "name": "skip-changelog", "color": "BCE5E1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-08-03T12:45:48Z", "updated_at": "2022-08-07T12:39:17Z", "closed_at": "2022-08-03T12:57:19Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5118", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5118", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5118.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5118.patch", "merged_at": "2022-08-03T12:57:19Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5118/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5108", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5108/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5108/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5108/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5108", "id": 1324352985, "node_id": "I_kwDOBlHMec5O8AXZ", "number": 5108, "title": "AttributeError: 'str' object has no attribute 'y' when using  torch_geometric.loader.ImbalancedSampler", "user": {"login": "EdisonLeeeee", "id": 39986668, "node_id": "MDQ6VXNlcjM5OTg2NjY4", "avatar_url": "https://avatars.githubusercontent.com/u/39986668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdisonLeeeee", "html_url": "https://github.com/EdisonLeeeee", "followers_url": "https://api.github.com/users/EdisonLeeeee/followers", "following_url": "https://api.github.com/users/EdisonLeeeee/following{/other_user}", "gists_url": "https://api.github.com/users/EdisonLeeeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdisonLeeeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdisonLeeeee/subscriptions", "organizations_url": "https://api.github.com/users/EdisonLeeeee/orgs", "repos_url": "https://api.github.com/users/EdisonLeeeee/repos", "events_url": "https://api.github.com/users/EdisonLeeeee/events{/privacy}", "received_events_url": "https://api.github.com/users/EdisonLeeeee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-08-01T12:39:24Z", "updated_at": "2022-08-08T14:47:28Z", "closed_at": "2022-08-08T14:47:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nI came across a bug when using `torch_geometric.loader.ImbalancedSampler` on a Heterogeneous graph. Here is my code:\r\n```python\r\nfrom torch_geometric.datasets import DBLP\r\nfrom torch_geometric.loader import ImbalancedSampler, NeighborLoader\r\n\r\ndataset = DBLP(root='~/data/pygdata/dblp')\r\ndata = dataset[0]\r\n\r\nsampler = ImbalancedSampler(data['author'], input_nodes=data['author'].train_mask)\r\n\r\ntrain_loader = NeighborLoader(data, input_nodes=('author', data['author'].train_mask),\r\n                              num_neighbors=[10, 10], \r\n                              sampler=sampler, batch_size=20)\r\n```\r\n\r\nThe output messages are:\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\nInput In [4], in <cell line: 7>()\r\n      4 dataset = DBLP(root='~/data/pygdata/dblp')\r\n      5 data = dataset[0]\r\n----> 7 sampler = ImbalancedSampler(data['author'], input_nodes=data['author'].train_mask)\r\n      9 train_loader = NeighborLoader(data, input_nodes=('author', data['author'].train_mask),\r\n     10                               num_neighbors=[10, 10], \r\n     11                               sampler=sampler, batch_size=20)\r\n\r\nFile ~/Documents/Jupyter/pytorch_geometric/torch_geometric/loader/imbalanced_sampler.py:68, in ImbalancedSampler.__init__(self, dataset, input_nodes, num_samples)\r\n     65     assert len(dataset) == y.numel()\r\n     67 else:\r\n---> 68     ys = [data.y for data in dataset]\r\n     69     if isinstance(ys[0], Tensor):\r\n     70         y = torch.cat(ys, dim=0).view(-1)\r\n\r\nFile ~/Documents/Jupyter/pytorch_geometric/torch_geometric/loader/imbalanced_sampler.py:68, in <listcomp>(.0)\r\n     65     assert len(dataset) == y.numel()\r\n     67 else:\r\n---> 68     ys = [data.y for data in dataset]\r\n     69     if isinstance(ys[0], Tensor):\r\n     70         y = torch.cat(ys, dim=0).view(-1)\r\n\r\nAttributeError: 'str' object has no attribute 'y'\r\n```\r\nThis seems attributed to the data['author'] that is not recognized as a `Data` instance.\r\n\r\n### Environment\r\n\r\n* PyG version: 2.0.4\r\n* PyTorch version: 1.12\r\n* OS: Mac OS\r\n* Python version: 3.9\r\n* CUDA/cuDNN version: N/A\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): N/A\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5108/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5097", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5097/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5097/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5097/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5097", "id": 1323299350, "node_id": "PR_kwDOBlHMec48X5qW", "number": 5097, "title": "Fix documentation and `README.md` regarding new `nn.aggr` package", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-30T21:19:44Z", "updated_at": "2022-07-30T21:43:44Z", "closed_at": "2022-07-30T21:43:43Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5097", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5097", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5097.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5097.patch", "merged_at": "2022-07-30T21:43:43Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5097/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5096", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5096/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5096/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5096/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5096", "id": 1323264406, "node_id": "PR_kwDOBlHMec48XySN", "number": 5096, "title": "Fix `RGNConv` TorchScript tests", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-30T19:12:52Z", "updated_at": "2022-07-30T19:17:25Z", "closed_at": "2022-07-30T19:17:24Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5096", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5096", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5096.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5096.patch", "merged_at": "2022-07-30T19:17:24Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5096/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5094", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5094/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5094/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5094/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5094", "id": 1323206226, "node_id": "PR_kwDOBlHMec48XlsL", "number": 5094, "title": "Fix `Linear.load_state_dict(..., strict=False)`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-07-30T16:33:14Z", "updated_at": "2022-07-30T16:34:29Z", "closed_at": "2022-07-30T16:34:29Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5094", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5094", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5094.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5094.patch", "merged_at": "2022-07-30T16:34:29Z"}, "body": "Fixes #5080", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5094/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5093", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5093/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5093/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5093/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5093", "id": 1323200167, "node_id": "PR_kwDOBlHMec48XkYn", "number": 5093, "title": "Fix typo `MaskLabel.ratio_mask`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-07-30T16:18:58Z", "updated_at": "2022-07-30T16:20:31Z", "closed_at": "2022-07-30T16:20:31Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5093", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5093", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5093.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5093.patch", "merged_at": "2022-07-30T16:20:31Z"}, "body": "Fixes 5092", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5093/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5092", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5092/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5092/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5092/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5092", "id": 1323016807, "node_id": "I_kwDOBlHMec5O26Jn", "number": 5092, "title": "some bugs in torch_geometric/nn/models/mask_label.html", "user": {"login": "downeykking", "id": 50262216, "node_id": "MDQ6VXNlcjUwMjYyMjE2", "avatar_url": "https://avatars.githubusercontent.com/u/50262216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/downeykking", "html_url": "https://github.com/downeykking", "followers_url": "https://api.github.com/users/downeykking/followers", "following_url": "https://api.github.com/users/downeykking/following{/other_user}", "gists_url": "https://api.github.com/users/downeykking/gists{/gist_id}", "starred_url": "https://api.github.com/users/downeykking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/downeykking/subscriptions", "organizations_url": "https://api.github.com/users/downeykking/orgs", "repos_url": "https://api.github.com/users/downeykking/repos", "events_url": "https://api.github.com/users/downeykking/events{/privacy}", "received_events_url": "https://api.github.com/users/downeykking/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-07-30T13:01:35Z", "updated_at": "2022-07-30T16:20:31Z", "closed_at": "2022-07-30T16:20:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\ndocument and source code are here:\r\nhttps://pytorch-geometric.readthedocs.io/en/latest/_modules/torch_geometric/nn/models/mask_label.html#MaskLabel\r\n```python\r\ndef ratio_mask(mask: Tensor, ratio: float):\r\n        r\"\"\"Modifies :obj:`mask` by setting :obj:`ratio` of :obj:`True`\r\n        entries to :obj:`False`. Does not operate in-place.\r\n\r\n        Args:\r\n            mask (torch.Tensor): The mask to re-mask.\r\n            ratio (float): The ratio of entries to remove.\r\n        \"\"\"\r\n        n = int(mask.sum())\r\n        out = mask.clone()\r\n        out[mask] = torch.rand(n, device=mask.device) < ratio\r\n        return out\r\n```\r\nQuestion: \r\n`ratio (float): The ratio of entries to remove.` Maybe this is the ratio of entries to keep?\r\nAnd the example of mask_label is here:\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/3950ff617048948a5d89c8c78cd1d9408b47ad94/examples/unimp_arxiv.py\r\n```python\r\ndef train(label_rate=0.65):  # How many labels to use for propagation.\r\n    model.train()\r\n\r\n    propagation_mask = MaskLabel.ratio_mask(train_mask, ratio=1 - label_rate)\r\n    supervision_mask = train_mask ^ propagation_mask\r\n\r\n    optimizer.zero_grad()\r\n    out = model(data.x, data.y, data.edge_index, propagation_mask)\r\n    loss = F.cross_entropy(out[supervision_mask], data.y[supervision_mask])\r\n    loss.backward()\r\n    optimizer.step()\r\n\r\n    return float(loss)\r\n```\r\n\r\nThis is the result of MaskLabel.ratio_mask(train_mask, ratio=1 - label_rate) (0.35)\r\nEpoch: 489, Loss: 0.8817, Val: 0.7297, Test: 0.7260\r\nEpoch: 490, Loss: 0.8879, Val: 0.7289, Test: 0.7226\r\nEpoch: 491, Loss: 0.8860, Val: 0.7296, Test: 0.7262\r\nEpoch: 492, Loss: 0.8916, Val: 0.7296, Test: 0.7261\r\nEpoch: 493, Loss: 0.8899, Val: 0.7285, Test: 0.7215\r\nEpoch: 494, Loss: 0.8809, Val: 0.7278, Test: 0.7219\r\nEpoch: 495, Loss: 0.8831, Val: 0.7298, Test: 0.7272\r\nEpoch: 496, Loss: 0.8777, Val: 0.7301, Test: 0.7289\r\nEpoch: 497, Loss: 0.8807, Val: 0.7292, Test: 0.7243\r\nEpoch: 498, Loss: 0.8847, Val: 0.7272, Test: 0.7197\r\nEpoch: 499, Loss: 0.8836, Val: 0.7289, Test: 0.7243\r\n\r\nThis is the result of MaskLabel.ratio_mask(train_mask, ratio=label_rate) (0.65)\r\nEpoch: 489, Loss: 0.8469, Val: 0.7316, Test: 0.7302\r\nEpoch: 490, Loss: 0.8439, Val: 0.7303, Test: 0.7248\r\nEpoch: 491, Loss: 0.8418, Val: 0.7320, Test: 0.7309\r\nEpoch: 492, Loss: 0.8428, Val: 0.7326, Test: 0.7337\r\nEpoch: 493, Loss: 0.8425, Val: 0.7336, Test: 0.7318\r\nEpoch: 494, Loss: 0.8518, Val: 0.7320, Test: 0.7289\r\nEpoch: 495, Loss: 0.8388, Val: 0.7322, Test: 0.7300\r\nEpoch: 496, Loss: 0.8493, Val: 0.7323, Test: 0.7324\r\nEpoch: 497, Loss: 0.8532, Val: 0.7330, Test: 0.7308\r\nEpoch: 498, Loss: 0.8465, Val: 0.7308, Test: 0.7266\r\nEpoch: 499, Loss: 0.8530, Val: 0.7303, Test: 0.7241\r\n\r\nthe second way is similar to the original paper https://arxiv.org/pdf/2009.03509.pdf\r\nthus `MaskLabel.ratio_mask(train_mask, ratio=label_rate)` and the `ratio` mean keep probability.\r\n\r\n\r\nRefactor:\r\n```python\r\nin https://github.com/pyg-team/pytorch_geometric/blob/3950ff617048948a5d89c8c78cd1d9408b47ad94/examples/unimp_arxiv.py\r\ndef train(label_rate=0.65):  # How many labels to use for propagation.\r\n    model.train()\r\n\r\n    propagation_mask = MaskLabel.ratio_mask(train_mask, ratio=label_rate)\r\n    supervision_mask = train_mask ^ propagation_mask\r\n\r\n    optimizer.zero_grad()\r\n    out = model(data.x, data.y, data.edge_index, propagation_mask)\r\n    loss = F.cross_entropy(out[supervision_mask], data.y[supervision_mask])\r\n    loss.backward()\r\n    optimizer.step()\r\n\r\n    return float(loss)\r\n```\r\nin document and source code https://pytorch-geometric.readthedocs.io/en/latest/_modules/torch_geometric/nn/models/mask_label.html#MaskLabel\r\n```\r\ndef ratio_mask(mask: Tensor, ratio: float):\r\n        r\"\"\"Modifies :obj:`mask` by setting :obj:`1-ratio` of :obj:`True`\r\n        entries to :obj:`False`. Does not operate in-place.\r\n\r\n        Args:\r\n            mask (torch.Tensor): The mask to re-mask.\r\n            ratio (float): The ratio of entries to keep.\r\n        \"\"\"\r\n        n = int(mask.sum())\r\n        out = mask.clone()\r\n        out[mask] = torch.rand(n, device=mask.device) < ratio\r\n        return out\r\n```\n\n### Environment\n\nPyG version: 2.0.4\r\nPyTorch version: 1.1.10\r\nOS: linux\r\nPython version: 3.9\r\nCUDA/cuDNN version: 10.2\r\nHow you installed PyTorch and PyG (conda, pip, source): pip\r\nAny other relevant information (e.g., version of torch-scatter):\r\ntorch-cluster 1.6.0\r\ntorch-geometric 2.0.4\r\ntorch-scatter 2.0.9\r\ntorch-sparse 0.6.13\r\ntorch-spline-conv 1.2.1\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5092/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5092/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5090", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5090/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5090/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5090/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5090", "id": 1322995727, "node_id": "PR_kwDOBlHMec48W3Vh", "number": 5090, "title": "Fix nightly test run", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-30T11:13:59Z", "updated_at": "2022-07-30T12:24:39Z", "closed_at": "2022-07-30T12:24:39Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5090", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5090", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5090.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5090.patch", "merged_at": "2022-07-30T12:24:39Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5090/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5089", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5089/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5089/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5089/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5089", "id": 1322990648, "node_id": "PR_kwDOBlHMec48W2YA", "number": 5089, "title": "Fix `data.num_node_features` for sparse matrices", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-07-30T10:47:59Z", "updated_at": "2022-07-30T10:49:23Z", "closed_at": "2022-07-30T10:49:02Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5089", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5089", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5089.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5089.patch", "merged_at": "2022-07-30T10:49:02Z"}, "body": "Fixes #5053", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5089/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5088", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5088/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5088/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5088/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5088", "id": 1322779017, "node_id": "PR_kwDOBlHMec48WJ8A", "number": 5088, "title": "Fix: properly filter custom feature/graph stores", "user": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-29T23:15:26Z", "updated_at": "2022-07-30T21:10:45Z", "closed_at": "2022-07-30T21:10:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5088", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5088", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5088.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5088.patch", "merged_at": "2022-07-30T21:10:44Z"}, "body": "The current method of filtering relied on the buggy `str_to_edge_type`, which would fail if a node type had `__` in its name.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5088/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5080", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5080/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5080/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5080/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5080", "id": 1321202134, "node_id": "I_kwDOBlHMec5Ov_HW", "number": 5080, "title": "New attribute `self._load_hook` in linear class since 2.03 will raise KeyError when executing `load_state_dict` fucntion", "user": {"login": "DavdGao", "id": 102287034, "node_id": "U_kgDOBhjGug", "avatar_url": "https://avatars.githubusercontent.com/u/102287034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavdGao", "html_url": "https://github.com/DavdGao", "followers_url": "https://api.github.com/users/DavdGao/followers", "following_url": "https://api.github.com/users/DavdGao/following{/other_user}", "gists_url": "https://api.github.com/users/DavdGao/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavdGao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavdGao/subscriptions", "organizations_url": "https://api.github.com/users/DavdGao/orgs", "repos_url": "https://api.github.com/users/DavdGao/repos", "events_url": "https://api.github.com/users/DavdGao/events{/privacy}", "received_events_url": "https://api.github.com/users/DavdGao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-07-28T16:35:22Z", "updated_at": "2022-07-30T16:34:41Z", "closed_at": "2022-07-30T16:34:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nIn Pytorch, the function `load_state_dict(state_dict, strict)` allows empty dict `state_dict=={}` when `strict` is False. \r\nHowever, from version 2.03 the linear class in `torch_geometric.nn.dense.linear.py` has a new attribute `self._load_hook`, and when we execute `Linear(xxxx).load_state_dict({}, strict=False)`, the linear class will execute the `self._lazy_load_hook` function as follows\r\n```\r\n    def _lazy_load_hook(self, state_dict, prefix, local_metadata, strict,\r\n                        missing_keys, unexpected_keys, error_msgs):\r\n\r\n        weight = state_dict[prefix + 'weight']\r\n        if is_uninitialized_parameter(weight):\r\n            self.in_channels = -1\r\n            self.weight = nn.parameter.UninitializedParameter()\r\n            if not hasattr(self, '_hook'):\r\n                self._hook = self.register_forward_pre_hook(\r\n                    self.initialize_parameters)\r\n\r\n        elif is_uninitialized_parameter(self.weight):\r\n            self.in_channels = weight.size(-1)\r\n            self.weight.materialize((self.out_channels, self.in_channels))\r\n            if hasattr(self, '_hook'):\r\n                self._hook.remove()\r\n                delattr(self, '_hook')\r\n```\r\nSince the `state_dict` is empty, the line `weight = state_dict[prefix + 'weight']` will report KeyError. \r\n\r\n### Environment\r\n\r\n* PyG version:\r\n* PyTorch version:\r\n* OS:\r\n* Python version:\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5080/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5072", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5072/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5072/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5072/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5072", "id": 1320443739, "node_id": "PR_kwDOBlHMec48OXbN", "number": 5072, "title": "`NeighborSampler`: Support sampling graphs without edges", "user": {"login": "wsad1", "id": 13963626, "node_id": "MDQ6VXNlcjEzOTYzNjI2", "avatar_url": "https://avatars.githubusercontent.com/u/13963626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsad1", "html_url": "https://github.com/wsad1", "followers_url": "https://api.github.com/users/wsad1/followers", "following_url": "https://api.github.com/users/wsad1/following{/other_user}", "gists_url": "https://api.github.com/users/wsad1/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsad1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsad1/subscriptions", "organizations_url": "https://api.github.com/users/wsad1/orgs", "repos_url": "https://api.github.com/users/wsad1/repos", "events_url": "https://api.github.com/users/wsad1/events{/privacy}", "received_events_url": "https://api.github.com/users/wsad1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "wsad1", "id": 13963626, "node_id": "MDQ6VXNlcjEzOTYzNjI2", "avatar_url": "https://avatars.githubusercontent.com/u/13963626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsad1", "html_url": "https://github.com/wsad1", "followers_url": "https://api.github.com/users/wsad1/followers", "following_url": "https://api.github.com/users/wsad1/following{/other_user}", "gists_url": "https://api.github.com/users/wsad1/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsad1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsad1/subscriptions", "organizations_url": "https://api.github.com/users/wsad1/orgs", "repos_url": "https://api.github.com/users/wsad1/repos", "events_url": "https://api.github.com/users/wsad1/events{/privacy}", "received_events_url": "https://api.github.com/users/wsad1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wsad1", "id": 13963626, "node_id": "MDQ6VXNlcjEzOTYzNjI2", "avatar_url": "https://avatars.githubusercontent.com/u/13963626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsad1", "html_url": "https://github.com/wsad1", "followers_url": "https://api.github.com/users/wsad1/followers", "following_url": "https://api.github.com/users/wsad1/following{/other_user}", "gists_url": "https://api.github.com/users/wsad1/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsad1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsad1/subscriptions", "organizations_url": "https://api.github.com/users/wsad1/orgs", "repos_url": "https://api.github.com/users/wsad1/repos", "events_url": "https://api.github.com/users/wsad1/events{/privacy}", "received_events_url": "https://api.github.com/users/wsad1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-07-28T06:13:53Z", "updated_at": "2022-07-30T20:55:17Z", "closed_at": "2022-07-30T20:55:17Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5072", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5072", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5072.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5072.patch", "merged_at": "2022-07-30T20:55:17Z"}, "body": "Sometimes we have HeteroData objects where there's just one node_type and we'd like to predict links between nodes of the same type. With this PR LinkNeighborLoader supports this. Check out test_hetero_no_edge_graph_link_neighbor_loader added in this PR for an example of such a graph.\r\n\r\nWhat changes does this PR make\r\n\r\nAdds some conditions to `NeighborSampler` to work on graphs without edges.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5072/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5067", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5067/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5067/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5067/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5067", "id": 1320218509, "node_id": "PR_kwDOBlHMec48No5n", "number": 5067, "title": "Fix `HGTLoader` bug producing output dictionaries missing edge types", "user": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-07-27T23:22:47Z", "updated_at": "2022-07-30T17:28:47Z", "closed_at": "2022-07-30T17:28:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5067", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5067", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5067.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5067.patch", "merged_at": "2022-07-30T17:28:46Z"}, "body": "The fix is actually located at https://github.com/rusty1s/pytorch_sparse/pull/263, this PR includes a test case that will be resolved with the `torch_sparse` fix. However, this test case will fail even after the `torch_sparse` PR is merged since tests build from the latest wheel. @rusty1s what's the recommended approach here?", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5067/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5066", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5066/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5066/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5066/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5066", "id": 1319913765, "node_id": "I_kwDOBlHMec5OrEkl", "number": 5066, "title": "Error including edge attributes in TransformerConv", "user": {"login": "ahmedramly", "id": 48057708, "node_id": "MDQ6VXNlcjQ4MDU3NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/48057708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedramly", "html_url": "https://github.com/ahmedramly", "followers_url": "https://api.github.com/users/ahmedramly/followers", "following_url": "https://api.github.com/users/ahmedramly/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedramly/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedramly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedramly/subscriptions", "organizations_url": "https://api.github.com/users/ahmedramly/orgs", "repos_url": "https://api.github.com/users/ahmedramly/repos", "events_url": "https://api.github.com/users/ahmedramly/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedramly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-07-27T18:13:21Z", "updated_at": "2022-07-28T04:31:36Z", "closed_at": "2022-07-28T04:31:36Z", "author_association": "NONE", "active_lock_reason": null, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5066/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5055", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5055/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5055/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5055/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5055", "id": 1317634492, "node_id": "I_kwDOBlHMec5OiYG8", "number": 5055, "title": "Works on cpu but not on cuda", "user": {"login": "PPGGG", "id": 11624203, "node_id": "MDQ6VXNlcjExNjI0MjAz", "avatar_url": "https://avatars.githubusercontent.com/u/11624203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PPGGG", "html_url": "https://github.com/PPGGG", "followers_url": "https://api.github.com/users/PPGGG/followers", "following_url": "https://api.github.com/users/PPGGG/following{/other_user}", "gists_url": "https://api.github.com/users/PPGGG/gists{/gist_id}", "starred_url": "https://api.github.com/users/PPGGG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PPGGG/subscriptions", "organizations_url": "https://api.github.com/users/PPGGG/orgs", "repos_url": "https://api.github.com/users/PPGGG/repos", "events_url": "https://api.github.com/users/PPGGG/events{/privacy}", "received_events_url": "https://api.github.com/users/PPGGG/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-07-26T03:06:11Z", "updated_at": "2022-07-28T02:08:01Z", "closed_at": "2022-07-28T02:08:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nI tried to use GraphUNet on DBLP dataset, but it works on CPU but not on CUDA.\r\n\r\n```\r\nFile ~/anaconda3/envs/torch12/lib/python3.8/site-packages/torch/nn/modules/module.py:1130, in Module._call_impl(self, *input, **kwargs)\r\n   1126 # If we don't have any hooks, we want to skip the rest of the logic in\r\n   1127 # this function, and just call forward.\r\n   1128 if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks\r\n   1129         or _global_forward_hooks or _global_forward_pre_hooks):\r\n-> 1130     return forward_call(*input, **kwargs)\r\n   1131 # Do not call functions when jit is used\r\n   1132 full_backward_hooks, non_full_backward_hooks = [], []\r\n\r\nInput In [4], in Net.forward(self, x, edge_index)\r\n     14         x = F.dropout(x, p=0.001, training=self.training)\r\n     15 #         print(x.shape)\r\n     16 #         print(edge_index.shape)\r\n---> 18         x = self.unet(x, edge_index)\r\n     19         print(x)\r\n     22         return F.log_softmax(x, dim=1)\r\n\r\nFile ~/anaconda3/envs/torch12/lib/python3.8/site-packages/torch/nn/modules/module.py:1130, in Module._call_impl(self, *input, **kwargs)\r\n   1126 # If we don't have any hooks, we want to skip the rest of the logic in\r\n   1127 # this function, and just call forward.\r\n   1128 if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks\r\n   1129         or _global_forward_hooks or _global_forward_pre_hooks):\r\n-> 1130     return forward_call(*input, **kwargs)\r\n   1131 # Do not call functions when jit is used\r\n   1132 full_backward_hooks, non_full_backward_hooks = [], []\r\n\r\nFile ~/anaconda3/envs/torch12/lib/python3.8/site-packages/torch_geometric-2.0.5-py3.8.egg/torch_geometric/nn/models/graph_unet.py:85, in GraphUNet.forward(self, x, edge_index, batch)\r\n     82 perms = []\r\n     84 for i in range(1, self.depth + 1):\r\n---> 85     edge_index, edge_weight = self.augment_adj(edge_index, edge_weight,\r\n     86                                                x.size(0))\r\n     87     x, edge_index, edge_weight, batch, perm, _ = self.pools[i - 1](\r\n     88         x, edge_index, edge_weight, batch)\r\n     90     x = self.down_convs[i](x, edge_index, edge_weight)\r\n\r\nFile ~/anaconda3/envs/torch12/lib/python3.8/site-packages/torch_geometric-2.0.5-py3.8.egg/torch_geometric/nn/models/graph_unet.py:122, in GraphUNet.augment_adj(self, edge_index, edge_weight, num_nodes)\r\n    118 edge_index, edge_weight = add_self_loops(edge_index, edge_weight,\r\n    119                                          num_nodes=num_nodes)\r\n    120 edge_index, edge_weight = sort_edge_index(edge_index, edge_weight,\r\n    121                                           num_nodes)\r\n--> 122 edge_index, edge_weight = spspmm(edge_index, edge_weight, edge_index,\r\n    123                                  edge_weight, num_nodes, num_nodes,\r\n    124                                  num_nodes)\r\n    125 edge_index, edge_weight = remove_self_loops(edge_index, edge_weight)\r\n    126 return edge_index, edge_weight\r\n\r\nFile ~/anaconda3/envs/torch12/lib/python3.8/site-packages/torch_sparse/spspmm.py:30, in spspmm(indexA, valueA, indexB, valueB, m, k, n, coalesced)\r\n     25 A = SparseTensor(row=indexA[0], col=indexA[1], value=valueA,\r\n     26                  sparse_sizes=(m, k), is_sorted=not coalesced)\r\n     27 B = SparseTensor(row=indexB[0], col=indexB[1], value=valueB,\r\n     28                  sparse_sizes=(k, n), is_sorted=not coalesced)\r\n---> 30 C = matmul(A, B)\r\n     31 row, col, value = C.coo()\r\n     33 return torch.stack([row, col], dim=0), value\r\n\r\nFile ~/anaconda3/envs/torch12/lib/python3.8/site-packages/torch_sparse/matmul.py:140, in matmul(src, other, reduce)\r\n    138     return spmm(src, other, reduce)\r\n    139 elif isinstance(other, SparseTensor):\r\n--> 140     return spspmm(src, other, reduce)\r\n    141 raise ValueError\r\n\r\nFile ~/anaconda3/envs/torch12/lib/python3.8/site-packages/torch_sparse/matmul.py:117, in spspmm(src, other, reduce)\r\n    114 def spspmm(src: SparseTensor, other: SparseTensor,\r\n    115            reduce: str = \"sum\") -> SparseTensor:\r\n    116     if reduce == 'sum' or reduce == 'add':\r\n--> 117         return spspmm_sum(src, other)\r\n    118     elif reduce == 'mean' or reduce == 'min' or reduce == 'max':\r\n    119         raise NotImplementedError\r\n\r\nFile ~/anaconda3/envs/torch12/lib/python3.8/site-packages/torch_sparse/matmul.py:106, in spspmm_sum(src, other)\r\n    104 if valueC is not None and value is not None:\r\n    105     valueC = valueC.to(value.dtype)\r\n--> 106 return SparseTensor(row=None, rowptr=rowptrC, col=colC, value=valueC,\r\n    107                     sparse_sizes=(M, K), is_sorted=True)\r\n\r\nFile ~/anaconda3/envs/torch12/lib/python3.8/site-packages/torch_sparse/tensor.py:26, in SparseTensor.__init__(self, row, rowptr, col, value, sparse_sizes, is_sorted, trust_data)\r\n     16 def __init__(\r\n     17     self,\r\n     18     row: Optional[torch.Tensor] = None,\r\n   (...)\r\n     24     trust_data: bool = False,\r\n     25 ):\r\n---> 26     self.storage = SparseStorage(\r\n     27         row=row,\r\n     28         rowptr=rowptr,\r\n     29         col=col,\r\n     30         value=value,\r\n     31         sparse_sizes=sparse_sizes,\r\n     32         rowcount=None,\r\n     33         colptr=None,\r\n     34         colcount=None,\r\n     35         csr2csc=None,\r\n     36         csc2csr=None,\r\n     37         is_sorted=is_sorted,\r\n     38         trust_data=trust_data,\r\n     39     )\r\n\r\nFile ~/anaconda3/envs/torch12/lib/python3.8/site-packages/torch_sparse/storage.py:79, in SparseStorage.__init__(self, row, rowptr, col, value, sparse_sizes, rowcount, colptr, colcount, csr2csc, csc2csr, is_sorted, trust_data)\r\n     77     N = _N\r\n     78     if col.numel() > 0:\r\n---> 79         assert trust_data or int(col.max()) < N\r\n     81 sparse_sizes = (M, N)\r\n     83 if row is not None:\r\n\r\nAssertionError: \r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5055/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5053", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5053/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5053/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5053/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5053", "id": 1317624875, "node_id": "I_kwDOBlHMec5OiVwr", "number": 5053, "title": "NELL dataset doesn't have num_features and num_node_features", "user": {"login": "gau-nernst", "id": 26946864, "node_id": "MDQ6VXNlcjI2OTQ2ODY0", "avatar_url": "https://avatars.githubusercontent.com/u/26946864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gau-nernst", "html_url": "https://github.com/gau-nernst", "followers_url": "https://api.github.com/users/gau-nernst/followers", "following_url": "https://api.github.com/users/gau-nernst/following{/other_user}", "gists_url": "https://api.github.com/users/gau-nernst/gists{/gist_id}", "starred_url": "https://api.github.com/users/gau-nernst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gau-nernst/subscriptions", "organizations_url": "https://api.github.com/users/gau-nernst/orgs", "repos_url": "https://api.github.com/users/gau-nernst/repos", "events_url": "https://api.github.com/users/gau-nernst/events{/privacy}", "received_events_url": "https://api.github.com/users/gau-nernst/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-07-26T02:47:53Z", "updated_at": "2022-07-30T10:49:53Z", "closed_at": "2022-07-30T10:49:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nnum_features and num_node_features are 0 for NELL dataset. I'm not familiar with PyG dataset internals, but I suspect it is due to node features in NELL is a `SparseTensor` instance instead of a normal `Tensor`.\r\n\r\n```python\r\nfrom torch_geometric.datasets import NELL\r\n\r\nds = NELL(\"data\")\r\nprint(ds.num_node_features)  # 0\r\nprint(ds.num_features)       # 0\r\n```\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.11.0\r\n* OS: macOS Monterey 12.4\r\n* Python version: 3.10.5\r\n* CUDA/cuDNN version: NA\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): PyTorch through conda, PyG through pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5053/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5051", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5051/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5051/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5051/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5051", "id": 1317486213, "node_id": "PR_kwDOBlHMec48Eud5", "number": 5051, "title": "Properly support dynamic inheritance in `Batch`", "user": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-07-25T23:16:21Z", "updated_at": "2022-07-26T18:31:52Z", "closed_at": "2022-07-26T18:31:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5051", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5051", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5051.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5051.patch", "merged_at": "2022-07-26T18:31:51Z"}, "body": "This diff properly supports dynamic inheritance with the `DynamicInheritance` metaclass in `Batch`. The initial issue was that of conflicting metaclasses: `abc.ABCMeta` and `DynamicInheritance` for `Data` and `HeteroData` objects. The resolution required two steps:\r\n* Metaclass conflict resolution of the aforementioned metaclasses\r\n* Patching `pin_memory` in PyTorch which makes assumptions about `MutableMapping` before checking whether `pin_memory` exists in the class. This in turn had adverse effects of calling the metaclass of the class again when constructing the new class as part of `pin_memory`, which resulted in the `DataDataBatch` problem observed in the filed issue.\r\n\r\nHopefully the latter fix can be deprecated in the future, with a patch to PyTorch (see https://github.com/pytorch/pytorch/issues/82185)\r\n\r\nCloses #4848 ", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5051/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5050", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5050/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5050/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5050/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5050", "id": 1317238414, "node_id": "I_kwDOBlHMec5Og3aO", "number": 5050, "title": "Cannot Import LinkNeighborLoader from  torch_geometric.loader", "user": {"login": "nishant42491", "id": 79035403, "node_id": "MDQ6VXNlcjc5MDM1NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/79035403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nishant42491", "html_url": "https://github.com/nishant42491", "followers_url": "https://api.github.com/users/nishant42491/followers", "following_url": "https://api.github.com/users/nishant42491/following{/other_user}", "gists_url": "https://api.github.com/users/nishant42491/gists{/gist_id}", "starred_url": "https://api.github.com/users/nishant42491/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nishant42491/subscriptions", "organizations_url": "https://api.github.com/users/nishant42491/orgs", "repos_url": "https://api.github.com/users/nishant42491/repos", "events_url": "https://api.github.com/users/nishant42491/events{/privacy}", "received_events_url": "https://api.github.com/users/nishant42491/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-07-25T18:58:13Z", "updated_at": "2022-07-25T20:37:25Z", "closed_at": "2022-07-25T20:37:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI get the message ImportError: cannot import name 'LinkNeighborLoader' from 'torch_geometric.loader' (/usr/local/lib/python3.7/dist-packages/torch_geometric/loader/__init__.py) whilst importing the LinkNeighbourLoader Class.\r\n<img width=\"703\" alt=\"image\" src=\"https://user-images.githubusercontent.com/79035403/180852810-c5ec1c11-0ae7-4108-a63f-b9f66a3b019e.png\">\r\n\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.12.0+cu113\r\n* OS: linux\r\n* Python version: 3.7\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): torch_scatter-2.0.9-cp37-cp37m-linux_x86_64.whl\r\n* torch_sparse-0.6.14-cp37-cp37m-linux_x86_64.whl\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5050/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5046", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5046/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5046/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5046/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5046", "id": 1316317106, "node_id": "PR_kwDOBlHMec48A1di", "number": 5046, "title": "Support `SparseTensor` label in `LightGCN`", "user": {"login": "hzg0601", "id": 22924096, "node_id": "MDQ6VXNlcjIyOTI0MDk2", "avatar_url": "https://avatars.githubusercontent.com/u/22924096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hzg0601", "html_url": "https://github.com/hzg0601", "followers_url": "https://api.github.com/users/hzg0601/followers", "following_url": "https://api.github.com/users/hzg0601/following{/other_user}", "gists_url": "https://api.github.com/users/hzg0601/gists{/gist_id}", "starred_url": "https://api.github.com/users/hzg0601/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hzg0601/subscriptions", "organizations_url": "https://api.github.com/users/hzg0601/orgs", "repos_url": "https://api.github.com/users/hzg0601/repos", "events_url": "https://api.github.com/users/hzg0601/events{/privacy}", "received_events_url": "https://api.github.com/users/hzg0601/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358958308, "node_id": "MDU6TGFiZWwzMzU4OTU4MzA4", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/1%20-%20Priority%20P1", "name": "1 - Priority P1", "color": "FBCA04", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "hzg0601", "id": 22924096, "node_id": "MDQ6VXNlcjIyOTI0MDk2", "avatar_url": "https://avatars.githubusercontent.com/u/22924096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hzg0601", "html_url": "https://github.com/hzg0601", "followers_url": "https://api.github.com/users/hzg0601/followers", "following_url": "https://api.github.com/users/hzg0601/following{/other_user}", "gists_url": "https://api.github.com/users/hzg0601/gists{/gist_id}", "starred_url": "https://api.github.com/users/hzg0601/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hzg0601/subscriptions", "organizations_url": "https://api.github.com/users/hzg0601/orgs", "repos_url": "https://api.github.com/users/hzg0601/repos", "events_url": "https://api.github.com/users/hzg0601/events{/privacy}", "received_events_url": "https://api.github.com/users/hzg0601/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hzg0601", "id": 22924096, "node_id": "MDQ6VXNlcjIyOTI0MDk2", "avatar_url": "https://avatars.githubusercontent.com/u/22924096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hzg0601", "html_url": "https://github.com/hzg0601", "followers_url": "https://api.github.com/users/hzg0601/followers", "following_url": "https://api.github.com/users/hzg0601/following{/other_user}", "gists_url": "https://api.github.com/users/hzg0601/gists{/gist_id}", "starred_url": "https://api.github.com/users/hzg0601/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hzg0601/subscriptions", "organizations_url": "https://api.github.com/users/hzg0601/orgs", "repos_url": "https://api.github.com/users/hzg0601/repos", "events_url": "https://api.github.com/users/hzg0601/events{/privacy}", "received_events_url": "https://api.github.com/users/hzg0601/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-25T06:07:11Z", "updated_at": "2022-07-30T17:52:53Z", "closed_at": "2022-07-30T17:52:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5046", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5046", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5046.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5046.patch", "merged_at": "2022-07-30T17:52:53Z"}, "body": "fix the bug of models/lightgcn when edge_indx is an instance of SparseTensor in forward method", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5046/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5045", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5045/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5045/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5045/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5045", "id": 1316309791, "node_id": "I_kwDOBlHMec5OdUsf", "number": 5045, "title": "models/lightgcn raises an error when the `edge_index` is an instance of SparseTensor in forward method", "user": {"login": "hzg0601", "id": 22924096, "node_id": "MDQ6VXNlcjIyOTI0MDk2", "avatar_url": "https://avatars.githubusercontent.com/u/22924096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hzg0601", "html_url": "https://github.com/hzg0601", "followers_url": "https://api.github.com/users/hzg0601/followers", "following_url": "https://api.github.com/users/hzg0601/following{/other_user}", "gists_url": "https://api.github.com/users/hzg0601/gists{/gist_id}", "starred_url": "https://api.github.com/users/hzg0601/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hzg0601/subscriptions", "organizations_url": "https://api.github.com/users/hzg0601/orgs", "repos_url": "https://api.github.com/users/hzg0601/repos", "events_url": "https://api.github.com/users/hzg0601/events{/privacy}", "received_events_url": "https://api.github.com/users/hzg0601/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-07-25T05:57:57Z", "updated_at": "2022-07-30T17:52:54Z", "closed_at": "2022-07-30T17:52:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\n When `edge_index ` is an instance of SparseTensor, method `forward` as follows would raise an error:\r\n ```\r\n  def forward(self, edge_index: Adj,\r\n                edge_label_index: OptTensor = None) -> Tensor:\r\n\r\n        if edge_label_index is None:\r\n\r\n                edge_label_index = edge_index\r\n\r\n        out = self.get_embedding(edge_index)\r\n\r\n        out_src = out[edge_label_index[0]]\r\n        out_dst = out[edge_label_index[1]]\r\n        return (out_src * out_dst).sum(dim=-1)\r\n\r\n```\r\n\n\n### Environment\n\n* PyG version:2.0.2\r\n* PyTorch version: 1.7.1\r\n* OS: CentOS\r\n* Python version: 3.8\r\n* CUDA/cuDNN version:11.0\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip \r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5045/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5044", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5044/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5044/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5044/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5044", "id": 1315901232, "node_id": "I_kwDOBlHMec5Obw8w", "number": 5044, "title": "How to implement SimRank in pytorch geometric ?", "user": {"login": "PPGGG", "id": 11624203, "node_id": "MDQ6VXNlcjExNjI0MjAz", "avatar_url": "https://avatars.githubusercontent.com/u/11624203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PPGGG", "html_url": "https://github.com/PPGGG", "followers_url": "https://api.github.com/users/PPGGG/followers", "following_url": "https://api.github.com/users/PPGGG/following{/other_user}", "gists_url": "https://api.github.com/users/PPGGG/gists{/gist_id}", "starred_url": "https://api.github.com/users/PPGGG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PPGGG/subscriptions", "organizations_url": "https://api.github.com/users/PPGGG/orgs", "repos_url": "https://api.github.com/users/PPGGG/repos", "events_url": "https://api.github.com/users/PPGGG/events{/privacy}", "received_events_url": "https://api.github.com/users/PPGGG/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-07-24T12:58:05Z", "updated_at": "2022-07-24T17:34:24Z", "closed_at": "2022-07-24T17:33:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to implement SimRank in pytorch geometric ?", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5044/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5040", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5040/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5040/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5040/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5040", "id": 1315669712, "node_id": "I_kwDOBlHMec5Oa4bQ", "number": 5040, "title": "Something questions about torch_geometric.data.HeteroData", "user": {"login": "downeykking", "id": 50262216, "node_id": "MDQ6VXNlcjUwMjYyMjE2", "avatar_url": "https://avatars.githubusercontent.com/u/50262216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/downeykking", "html_url": "https://github.com/downeykking", "followers_url": "https://api.github.com/users/downeykking/followers", "following_url": "https://api.github.com/users/downeykking/following{/other_user}", "gists_url": "https://api.github.com/users/downeykking/gists{/gist_id}", "starred_url": "https://api.github.com/users/downeykking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/downeykking/subscriptions", "organizations_url": "https://api.github.com/users/downeykking/orgs", "repos_url": "https://api.github.com/users/downeykking/repos", "events_url": "https://api.github.com/users/downeykking/events{/privacy}", "received_events_url": "https://api.github.com/users/downeykking/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-07-23T14:20:06Z", "updated_at": "2022-07-24T11:38:57Z", "closed_at": "2022-07-24T11:38:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\n```\r\nfrom torch_geometric.loader import NeighborLoader\r\ntrain_loader = NeighborLoader(graph, input_nodes=(labeled_class, train_idx),\r\n                                  num_neighbors=[10] * args.n_layers,\r\n                                  shuffle=True, batch_size=args.batch_size)\r\ndevice = torch.device('cuda:' + args.device_id if torch.cuda.is_available() else 'cpu')\r\nbatch = next(iter(train_loader))\r\nfor key in batch.x_dict.keys():\r\n    batch.x_dict[key] = batch.x_dict[key].to(device)\r\n```\r\nI have a HeteroData `graph`  and i sample it by `NeighborLoader`.\r\nThen i want to put the batch.x_dict[key] (`x`) to cuda, but finally it is still in cpu.\r\ni solve the problem by these codes:\r\n`x_dict = {node_type: batch[node_type].x.to(device) for node_type in batch.to_dict().keys() if node_type in node_types}\r\n        edge_index_dict = {edge_type: batch[edge_type].edge_index.to(\r\n            device) for edge_type in batch.to_dict().keys() if edge_type in edge_types}`\r\n\r\nI wonder why original code couldn't put the `x` to cuda? Thanks in advance!\r\n\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.1.10\r\n* OS: linux\r\n* Python version: 3.9\r\n* CUDA/cuDNN version: 10.2\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): \r\ntorch-cluster         1.6.0\r\ntorch-geometric       2.0.4\r\ntorch-scatter         2.0.9\r\ntorch-sparse          0.6.13\r\ntorch-spline-conv     1.2.1\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5040/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5034", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5034/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5034/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5034/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5034", "id": 1315332195, "node_id": "PR_kwDOBlHMec4795S6", "number": 5034, "title": "Raise error for one single aggregation when `proj` or `attn` mode is used in `MultiAggregation`", "user": {"login": "lightaime", "id": 23632352, "node_id": "MDQ6VXNlcjIzNjMyMzUy", "avatar_url": "https://avatars.githubusercontent.com/u/23632352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lightaime", "html_url": "https://github.com/lightaime", "followers_url": "https://api.github.com/users/lightaime/followers", "following_url": "https://api.github.com/users/lightaime/following{/other_user}", "gists_url": "https://api.github.com/users/lightaime/gists{/gist_id}", "starred_url": "https://api.github.com/users/lightaime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lightaime/subscriptions", "organizations_url": "https://api.github.com/users/lightaime/orgs", "repos_url": "https://api.github.com/users/lightaime/repos", "events_url": "https://api.github.com/users/lightaime/events{/privacy}", "received_events_url": "https://api.github.com/users/lightaime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "lightaime", "id": 23632352, "node_id": "MDQ6VXNlcjIzNjMyMzUy", "avatar_url": "https://avatars.githubusercontent.com/u/23632352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lightaime", "html_url": "https://github.com/lightaime", "followers_url": "https://api.github.com/users/lightaime/followers", "following_url": "https://api.github.com/users/lightaime/following{/other_user}", "gists_url": "https://api.github.com/users/lightaime/gists{/gist_id}", "starred_url": "https://api.github.com/users/lightaime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lightaime/subscriptions", "organizations_url": "https://api.github.com/users/lightaime/orgs", "repos_url": "https://api.github.com/users/lightaime/repos", "events_url": "https://api.github.com/users/lightaime/events{/privacy}", "received_events_url": "https://api.github.com/users/lightaime/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lightaime", "id": 23632352, "node_id": "MDQ6VXNlcjIzNjMyMzUy", "avatar_url": "https://avatars.githubusercontent.com/u/23632352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lightaime", "html_url": "https://github.com/lightaime", "followers_url": "https://api.github.com/users/lightaime/followers", "following_url": "https://api.github.com/users/lightaime/following{/other_user}", "gists_url": "https://api.github.com/users/lightaime/gists{/gist_id}", "starred_url": "https://api.github.com/users/lightaime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lightaime/subscriptions", "organizations_url": "https://api.github.com/users/lightaime/orgs", "repos_url": "https://api.github.com/users/lightaime/repos", "events_url": "https://api.github.com/users/lightaime/events{/privacy}", "received_events_url": "https://api.github.com/users/lightaime/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-22T19:08:06Z", "updated_at": "2022-07-23T14:09:49Z", "closed_at": "2022-07-23T14:09:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5034", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5034", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5034.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5034.patch", "merged_at": "2022-07-23T14:09:48Z"}, "body": "This PR raises error for one single aggregation when `proj` or `attn` mode is used in `MultiAggregation` to avoid unwanted behaviors.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5034/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5032", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5032/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5032/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5032/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5032", "id": 1315107660, "node_id": "I_kwDOBlHMec5OYvNM", "number": 5032, "title": "Error when trying to use NeighborLoader with HeteroData from networkx ", "user": {"login": "drewdrewdrewdrew", "id": 37196399, "node_id": "MDQ6VXNlcjM3MTk2Mzk5", "avatar_url": "https://avatars.githubusercontent.com/u/37196399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewdrewdrewdrew", "html_url": "https://github.com/drewdrewdrewdrew", "followers_url": "https://api.github.com/users/drewdrewdrewdrew/followers", "following_url": "https://api.github.com/users/drewdrewdrewdrew/following{/other_user}", "gists_url": "https://api.github.com/users/drewdrewdrewdrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewdrewdrewdrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewdrewdrewdrew/subscriptions", "organizations_url": "https://api.github.com/users/drewdrewdrewdrew/orgs", "repos_url": "https://api.github.com/users/drewdrewdrewdrew/repos", "events_url": "https://api.github.com/users/drewdrewdrewdrew/events{/privacy}", "received_events_url": "https://api.github.com/users/drewdrewdrewdrew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-07-22T14:53:14Z", "updated_at": "2022-08-23T08:10:59Z", "closed_at": "2022-08-23T08:10:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nHi, I'm trying to follow along the [Hetergeneous Graph Learning](https://pytorch-geometric.readthedocs.io/en/latest/notes/heterogeneous.html) tutorial on some actual data and when I get to the [Graph Sampling](https://pytorch-geometric.readthedocs.io/en/latest/notes/heterogeneous.html) step I'm running into an error I hope you can help me with. Here's my workflow:\r\n\r\n1. get data from BQ\r\n2. load it into a networkx `MultiGraph`\r\n3. load that graph into a `HeteroData` object\r\n4. attempt to send that object into a `NeighborLoader` for batching\r\n\r\nSteps 1-3 work well (though I'd love some feedback on this process because it feels... suboptimal) but step 4 crashes with an `Process finished with exit code 134 (interrupted by signal 6: SIGABRT)` error. During debugging, I traced that error to [this line](https://github.com/pyg-team/pytorch_geometric/blob/be9e4af760dbb7c201515cdaff8edacea14d7e3d/torch_geometric/loader/utils.py#L63) but then got stuck.\r\n\r\nI've recreated the error with a minimal dataset below. I did my best during inspection to make sure that my `data` object and the one from the tutorial matched but so far no luck. Any ideas? Thanks so much in advance!\r\n\r\n```import networkx as nx\r\nimport numpy as np\r\nimport torch\r\nfrom torch_geometric.data import HeteroData\r\nfrom torch_geometric.utils.convert import from_networkx\r\nfrom torch_geometric.loader import NeighborLoader\r\n\r\n\r\nG = nx.MultiGraph()\r\n\r\nnodes = [\r\n    (0, {'node_type':'person', 'node_feature': np.random.rand(5)}),\r\n    (1, {'node_type':'person', 'node_feature': np.random.rand(5)}),\r\n    (2, {'node_type':'person', 'node_feature': np.random.rand(5)}),\r\n\r\n    (3, {'node_type':'company', 'node_feature': np.random.rand(5)}),\r\n    (4, {'node_type':'company', 'node_feature': np.random.rand(5)}),\r\n    (5, {'node_type':'company', 'node_feature': np.random.rand(5)}),\r\n]\r\nG.add_nodes_from(nodes)\r\n\r\nedges = [\r\n    (0, 1, {'edge_type':'is_friends_with'}),\r\n    (0, 2, {'edge_type':'is_friends_with'}),\r\n    (1, 2, {'edge_type':'is_friends_with'}),\r\n\r\n    (0, 2, {'edge_type':'has_worked_with'}),\r\n    (1, 2, {'edge_type':'has_worked_with'}),\r\n\r\n    (0, 3, {'edge_type':'has_worked_at'}),\r\n    (0, 4, {'edge_type':'has_worked_at'}),\r\n    (1, 4, {'edge_type':'has_worked_at'}),\r\n    (1, 5, {'edge_type':'has_worked_at'}),\r\n    (2, 5, {'edge_type':'has_worked_at'}),\r\n\r\n    (3, 5, {'edge_type':'same_industry_as'}),\r\n]\r\nG.add_edges_from(edges)\r\n\r\ndata = HeteroData(from_networkx(G))\r\n\r\n# declare node features for each node type\r\nfor node_type in ['person','company']:\r\n    idx = torch.BoolTensor([x == node_type for x in data['node_type']])\r\n    data[node_type].x = data['node_feature'][idx]\r\n\r\n# split out distinct edge types\r\nidx = torch.BoolTensor([x == 'is_friends_with' for x in data['edge_type']])\r\ndata['person', 'is_friends_with', 'person'].edge_index = data['edge_index'][:, idx]\r\n\r\nidx = torch.BoolTensor([x == 'has_worked_with' for x in data['edge_type']])\r\ndata['person', 'has_worked_with', 'person'].edge_index = data['edge_index'][:, idx]\r\n\r\nidx = torch.BoolTensor([x == 'has_worked_at' for x in data['edge_type']])\r\ndata['person', 'has_worked_at', 'company'].edge_index = data['edge_index'][:, idx]\r\n\r\nidx = torch.BoolTensor([x == 'same_industry_as' for x in data['edge_type']])\r\ndata['company', 'same_industry_as', 'company'].edge_index = data['edge_index'][:, idx]\r\n\r\n# clean up data object\r\ndel data.edge_index\r\ndel data.node_id\r\ndel data.node_type\r\ndel data.node_feature\r\ndel data.edge_type\r\ndel data.num_nodes\r\n\r\n\r\nprint(data)\r\n\r\ntrain_loader = NeighborLoader(\r\n    data,\r\n    # Sample 15 neighbors for each node and each edge type for 2 iterations:\r\n    num_neighbors=[15] * 1,\r\n    # Use a batch size of 128 for sampling training nodes of type \"paper\":\r\n    batch_size=128,\r\n)\r\n```\r\n\r\n\r\n### Environment\r\n\r\ntorch==1.12.0\r\ntorch-geometric==2.0.4\r\ntorch-scatter==2.0.9\r\ntorch-sparse==0.6.14\r\n\r\n* OS: macOS 11.6.3\r\n* Python version: 3.8.12\r\n* CUDA/cuDNN version: so far working on CPU :)\r\n* How you installed PyTorch and PyG: pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5032/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5028", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5028/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5028/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5028/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5028", "id": 1313907299, "node_id": "I_kwDOBlHMec5OUKJj", "number": 5028, "title": " RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument index in method wrapper__index_select)", "user": {"login": "waqar12868", "id": 83303498, "node_id": "MDQ6VXNlcjgzMzAzNDk4", "avatar_url": "https://avatars.githubusercontent.com/u/83303498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waqar12868", "html_url": "https://github.com/waqar12868", "followers_url": "https://api.github.com/users/waqar12868/followers", "following_url": "https://api.github.com/users/waqar12868/following{/other_user}", "gists_url": "https://api.github.com/users/waqar12868/gists{/gist_id}", "starred_url": "https://api.github.com/users/waqar12868/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waqar12868/subscriptions", "organizations_url": "https://api.github.com/users/waqar12868/orgs", "repos_url": "https://api.github.com/users/waqar12868/repos", "events_url": "https://api.github.com/users/waqar12868/events{/privacy}", "received_events_url": "https://api.github.com/users/waqar12868/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-07-21T22:49:19Z", "updated_at": "2022-07-27T10:00:14Z", "closed_at": "2022-07-27T10:00:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\n I ran the clique pooling based graph neural network model, which is working correctly on the CPU, but when I tried to run it on GPU, I got an error.  Here is the model:\r\n\r\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\r\nmodel = Net().to(device)\r\n\r\noptimizer = torch.optim.Adam(model.parameters(), lr=0.0001, weight_decay=0.001) # lr=0.01, weight_decay=5e-4\r\ndata = dataset[0].to(device)\r\ndef train(epoch):\r\n  model.train()\r\n\r\n  loss_all = 0\r\n  for data in train_loader:\r\n    data = data.to(device)\r\n    optimizer.zero_grad()\r\n    output = model(data)\r\n    loss = F.nll_loss(output, data.y.to(device))\r\n    loss.backward()\r\n    loss_all += data.num_graphs * loss.item()\r\n    optimizer.step()\r\n  return loss_all / len(train_dataset)\r\n\r\n\r\ndef test(loader):\r\n  model.eval()\r\n\r\n  correct = 0\r\n  for data in loader:\r\n    data = data#.to(device)\r\n    pred = model(data).max(dim=1)[1]\r\n    correct += pred.eq(data.y).sum().item()\r\n  return correct / len(loader.dataset)\r\n\r\n\r\nfor epoch in range(1, 100):\r\n  loss = train(epoch)\r\n  train_acc = test(train_loader)\r\n  test_acc = test(test_loader)\r\n  print('Epoch: {:03d}, Loss: {:.5f}, Train Acc: {:.5f}, Test Acc: {:.5f}'.\r\n        format(epoch, loss, train_acc, test_acc))\r\n \r\n\r\nThe traceback log is here:\r\n\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n[<ipython-input-15-952e9c7a1d38>](https://localhost:8080/#) in <module>()\r\n     31 \r\n     32 for epoch in range(1, 100):\r\n---> 33   loss = train(epoch)\r\n     34   train_acc = test(train_loader)\r\n     35   test_acc = test(test_loader)\r\n\r\n5 frames\r\n[<ipython-input-3-5bdba30d2477>](https://localhost:8080/#) in <listcomp>(.0)\r\n    253             0,\r\n    254             torch.tensor(clique, dtype=torch.long)\r\n--> 255         )) for clique in considered_cliques\r\n    256       ]\r\n    257     )\r\n\r\nRuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument index in method wrapper__index_select)\r\n\r\nPlease can you guide me about this error?\r\nThank you.\n\n### Environment\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5028/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5027", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5027/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5027/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5027/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5027", "id": 1313637293, "node_id": "PR_kwDOBlHMec473_un", "number": 5027, "title": "Bug Fix: `collate` method requires keys in dict to be strings, but if `Dict[int:Tensor]`, `_collate` fails", "user": {"login": "ItamarChinn", "id": 50841005, "node_id": "MDQ6VXNlcjUwODQxMDA1", "avatar_url": "https://avatars.githubusercontent.com/u/50841005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ItamarChinn", "html_url": "https://github.com/ItamarChinn", "followers_url": "https://api.github.com/users/ItamarChinn/followers", "following_url": "https://api.github.com/users/ItamarChinn/following{/other_user}", "gists_url": "https://api.github.com/users/ItamarChinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/ItamarChinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ItamarChinn/subscriptions", "organizations_url": "https://api.github.com/users/ItamarChinn/orgs", "repos_url": "https://api.github.com/users/ItamarChinn/repos", "events_url": "https://api.github.com/users/ItamarChinn/events{/privacy}", "received_events_url": "https://api.github.com/users/ItamarChinn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ItamarChinn", "id": 50841005, "node_id": "MDQ6VXNlcjUwODQxMDA1", "avatar_url": "https://avatars.githubusercontent.com/u/50841005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ItamarChinn", "html_url": "https://github.com/ItamarChinn", "followers_url": "https://api.github.com/users/ItamarChinn/followers", "following_url": "https://api.github.com/users/ItamarChinn/following{/other_user}", "gists_url": "https://api.github.com/users/ItamarChinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/ItamarChinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ItamarChinn/subscriptions", "organizations_url": "https://api.github.com/users/ItamarChinn/orgs", "repos_url": "https://api.github.com/users/ItamarChinn/repos", "events_url": "https://api.github.com/users/ItamarChinn/events{/privacy}", "received_events_url": "https://api.github.com/users/ItamarChinn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ItamarChinn", "id": 50841005, "node_id": "MDQ6VXNlcjUwODQxMDA1", "avatar_url": "https://avatars.githubusercontent.com/u/50841005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ItamarChinn", "html_url": "https://github.com/ItamarChinn", "followers_url": "https://api.github.com/users/ItamarChinn/followers", "following_url": "https://api.github.com/users/ItamarChinn/following{/other_user}", "gists_url": "https://api.github.com/users/ItamarChinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/ItamarChinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ItamarChinn/subscriptions", "organizations_url": "https://api.github.com/users/ItamarChinn/orgs", "repos_url": "https://api.github.com/users/ItamarChinn/repos", "events_url": "https://api.github.com/users/ItamarChinn/events{/privacy}", "received_events_url": "https://api.github.com/users/ItamarChinn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-07-21T18:23:12Z", "updated_at": "2022-07-22T06:41:27Z", "closed_at": "2022-07-22T06:41:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5027", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5027", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5027.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5027.patch", "merged_at": "2022-07-22T06:41:27Z"}, "body": "`_collate` in `torch_geometric/data/collate.py` expects all keys to be strings.\r\nIn the case where you have a dictionary of Tensors, line 183 will bring you to line 127. Then `__cat_dim__(key, elem, stores[0])` expects the key from your original dict to be a string. For many dictionaries with keys which are hashable non-strings (such as ints) and mapped to Tensors `__cat_dim__` will then fail, as will `get_incs(key, values, data_list, stores)` on line 132. This is because many internal pyg methods expect keys to be strings. \r\n\r\nInstead of changing many internal methods (such as `__cat_dim__` and `__inc__` in `Data` objects) simply make a copy of the `key` as a string (`str_key`), since it is used as a check in this method (in `__cat_dim__` and `__inc__`) there is no reason to mutate `key`. Making a copy is safer. \r\n\r\nThe first commit in this pull request is reverted by the second (I originally thought of checking if `key` is a `str` in `__cat_dim__` but opted changing `_collate`", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5027/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5024", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5024/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5024/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5024/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5024", "id": 1312913449, "node_id": "I_kwDOBlHMec5OQXgp", "number": 5024, "title": "Noisy warning raised by the collate function", "user": {"login": "chenzhekl", "id": 1201055, "node_id": "MDQ6VXNlcjEyMDEwNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1201055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenzhekl", "html_url": "https://github.com/chenzhekl", "followers_url": "https://api.github.com/users/chenzhekl/followers", "following_url": "https://api.github.com/users/chenzhekl/following{/other_user}", "gists_url": "https://api.github.com/users/chenzhekl/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenzhekl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenzhekl/subscriptions", "organizations_url": "https://api.github.com/users/chenzhekl/orgs", "repos_url": "https://api.github.com/users/chenzhekl/repos", "events_url": "https://api.github.com/users/chenzhekl/events{/privacy}", "received_events_url": "https://api.github.com/users/chenzhekl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2022-07-21T08:55:56Z", "updated_at": "2022-08-05T14:25:48Z", "closed_at": "2022-07-21T09:34:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nAfter upgrading to PyTorch 1.12, I got the following warnings while collating data:\r\n\r\n```\r\n/opt/conda/lib/python3.8/site-packages/torch_geometric/data/collate.py:150: UserWarning: A\r\nn output with one or more elements was resized since it had shape [58791], which does not \r\nmatch the required output shape [19597, 3]. This behavior is deprecated, and in a future P\r\nyTorch release outputs will not be resized unless they have zero elements. You can explici\r\ntly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Tr\r\niggered internally at  ../aten/src/ATen/native/Resize.cpp:17.)                            \r\n  value = torch.cat(values, dim=cat_dim or 0, out=out)\r\n```\r\n\r\nI guess the cause is the same as this one https://github.com/pytorch/pytorch/issues/71063 for PyTorch. Their fix is directly applicable to PyG.\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.12.0\r\n* OS: Ubuntu\r\n* Python version: 3.8.10\r\n* CUDA/cuDNN version: 11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5024/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5021", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5021/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5021/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5021/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5021", "id": 1312335491, "node_id": "PR_kwDOBlHMec47zefY", "number": 5021, "title": "Fix `fx` problem for `Aggregation`", "user": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-07-21T02:06:38Z", "updated_at": "2022-07-23T06:48:17Z", "closed_at": "2022-07-23T06:48:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/5021", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/5021", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/5021.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/5021.patch", "merged_at": "2022-07-23T06:48:16Z"}, "body": "This PR addresses a problem we had when using `torch.fx` on our new `nn.aggr.Aggregation` class. This class redefines the `__call__` function to contain:\r\n\r\n```python\r\n     def __call__(self, x: Tensor, index: Optional[Tensor] = None,\r\n                 ptr: Optional[Tensor] = None, dim_size: Optional[int] = None,\r\n                 dim: int = -2, **kwargs) -> Tensor:\r\n\r\n        if dim >= x.dim() or dim < -x.dim():\r\n            raise ValueError(f\"Encountered invalid dimension '{dim}' of \"\r\n                             f\"source tensor with {x.dim()} dimensions\")\r\n        ...\r\n```\r\n\r\nDuring a `torch.fx._symbolic_trace` pytorch modules `torch.nn.Module` calls are excluded from symbolic trancing intentionally using `is_leaf_module`; this allows for avoiding errors on symbolic tracing of for example, conditions statements involving tensors (which are not handled). \r\n\r\nHowever, this is implemented by patching a specific function within `torch.fx._symbolic_trace`:\r\n```python\r\npatcher.patch_method(torch.nn.Module, \"__call__\", module_call_wrapper, deduplicate=False)\r\n```\r\nfrom [here](https://github.com/pytorch/pytorch/blob/e68583b4d180066b8e4f108e0d23176a2676421c/torch/fx/_symbolic_trace.py#L702).\r\n\r\nThis doesn't patch our `__call__` as it no longer lives in `torch.nn.Module`.\r\n\r\nThe fix here is to reimplemnt the `trace` function to add an extra wrapper around our code.\r\n\r\nNote that this should be replaced by a better solution once one is available, by for example:\r\n- Allowing for `kwargs` in `pre_forward_hooks`: https://github.com/pytorch/pytorch/issues/35643#issuecomment-1191258877\r\n- Getting a better way to extend the patched functions from the `torch.fx` team.\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5021/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5011", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5011/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5011/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5011/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/5011", "id": 1310533412, "node_id": "I_kwDOBlHMec5OHSck", "number": 5011, "title": "How to calculate the number of common neighbors of two nodes", "user": {"login": "PPGGG", "id": 11624203, "node_id": "MDQ6VXNlcjExNjI0MjAz", "avatar_url": "https://avatars.githubusercontent.com/u/11624203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PPGGG", "html_url": "https://github.com/PPGGG", "followers_url": "https://api.github.com/users/PPGGG/followers", "following_url": "https://api.github.com/users/PPGGG/following{/other_user}", "gists_url": "https://api.github.com/users/PPGGG/gists{/gist_id}", "starred_url": "https://api.github.com/users/PPGGG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PPGGG/subscriptions", "organizations_url": "https://api.github.com/users/PPGGG/orgs", "repos_url": "https://api.github.com/users/PPGGG/repos", "events_url": "https://api.github.com/users/PPGGG/events{/privacy}", "received_events_url": "https://api.github.com/users/PPGGG/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2022-07-20T06:51:30Z", "updated_at": "2022-07-24T06:55:30Z", "closed_at": "2022-07-24T06:55:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to calculate the number of common neighbors of two nodes using torch geometric ?", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/5011/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4999", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4999/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4999/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4999/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4999", "id": 1307081479, "node_id": "PR_kwDOBlHMec47hedp", "number": 4999, "title": "Install `numpy` as part of CI", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-17T12:20:25Z", "updated_at": "2022-07-17T12:24:49Z", "closed_at": "2022-07-17T12:24:48Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4999", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4999", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4999.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4999.patch", "merged_at": "2022-07-17T12:24:48Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4999/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4994", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4994/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4994/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4994/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4994", "id": 1306652440, "node_id": "I_kwDOBlHMec5N4e8Y", "number": 4994, "title": "Various malloc-related crashes with NeighborLoader", "user": {"login": "rlorigro", "id": 28764332, "node_id": "MDQ6VXNlcjI4NzY0MzMy", "avatar_url": "https://avatars.githubusercontent.com/u/28764332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rlorigro", "html_url": "https://github.com/rlorigro", "followers_url": "https://api.github.com/users/rlorigro/followers", "following_url": "https://api.github.com/users/rlorigro/following{/other_user}", "gists_url": "https://api.github.com/users/rlorigro/gists{/gist_id}", "starred_url": "https://api.github.com/users/rlorigro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rlorigro/subscriptions", "organizations_url": "https://api.github.com/users/rlorigro/orgs", "repos_url": "https://api.github.com/users/rlorigro/repos", "events_url": "https://api.github.com/users/rlorigro/events{/privacy}", "received_events_url": "https://api.github.com/users/rlorigro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2022-07-16T00:49:14Z", "updated_at": "2022-07-25T21:04:31Z", "closed_at": "2022-07-18T18:11:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI am using NeighborLoader to iterate a dataset that fits entirely in memory.\r\n```\r\n    device = 'cpu'\r\n\r\n    node_size = 3\r\n    edge_size = 2\r\n    global_size = node_size\r\n    hidden_size = 64\r\n    learning_rate = 1e-5\r\n    batch_size = 1\r\n    epochs = 2\r\n\r\n    data = Data()\r\n    name_to_id, id_to_name = parse_csv_as_torch_data(data=data, nodes_path=train_nodes_path, edges_path=train_edges_path, exclude_path=test_node_names_path, device=device)\r\n    model = Graphnet(node_size=node_size, edge_size=edge_size, global_size=global_size, hidden_size=hidden_size)\r\n\r\n    print(\"%s:\\t[%d,%d]\" % (\"x\", data.x.shape[0], data.x.shape[1]))\r\n    print(\"%s:\\t[%d,%d]\" % (\"y\", data.y.shape[0], data.y.shape[1]))\r\n    print(\"%s:\\t[%d,%d]\" % (\"edge_index\", data.edge_index.shape[0], data.edge_index.shape[1]))\r\n    print(\"%s:\\t[%d,%d]\" % (\"edge_attr\", data.edge_attr.shape[0], data.edge_attr.shape[1]))\r\n\r\n    for m in torch.nn.ModuleList():\r\n        print(m.device)\r\n        m.to(device)\r\n\r\n    optimizer = torch.optim.Adam(model.parameters(), lr=learning_rate)\r\n    loss_fn = torch.nn.BCEWithLogitsLoss(reduction='none')\r\n\r\n    print(\"attempting to initialize data loaders...\")\r\n    data_loader_train = NeighborLoader(data=data, batch_size=batch_size, num_neighbors=[1] * 1, drop_last=True)\r\n    print(\"Initialized train loader\")\r\n\r\n```\r\n\r\nand the DataLoader never succeeds at initializing:\r\n\r\n```\r\nMoving to device:  cpu\r\ndone\r\nx:      [26237,3]\r\ny:      [26237,1]\r\nedge_index:     [2,737180]\r\nedge_attr:      [737180,2]\r\nattempting to initialize data loaders...\r\nfree(): corrupted unsorted chunks\r\n```\r\n\r\nFor reference, my CSV files which describe the node and edge data are these sizes:\r\n\r\n```\r\n24M edges.csv\r\n1.2M nodes.csv\r\n```\r\n\r\nI get a variety of memory related errors when I attempt to run this:\r\n\r\n`free(): corrupted unsorted chunks`\r\n\r\n`python3: malloc.c:3839: _int_malloc: Assertion 'chunk_main_arena (bck->bk)' failed.`\r\n\r\n`corrupted double-linked list`\r\n\r\n`corrupted size vs. prev_size`\r\n\r\n`malloc_consolidate(): invalid chunk size`\r\n\r\n\r\nThe most common of which is probably the last one. I've tried `batch_size=1`, `drop_last=True`, and reducing the neighbors to one iteration and/or one neighbor. It doesn't seem to matter whether I use cpu or gpu.\r\n\r\nHere are the stats when using the `time -v` command:\r\n```\r\nCommand terminated by signal 6\r\n        Command being timed: \"python3 ../scripts/find_bubbles.py\"\r\n        User time (seconds): 7.07\r\n        System time (seconds): 0.66\r\n        Percent of CPU this job got: 110%\r\n        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:06.98\r\n        Average shared text size (kbytes): 0\r\n        Average unshared data size (kbytes): 0\r\n        Average stack size (kbytes): 0\r\n        Average total size (kbytes): 0\r\n        Maximum resident set size (kbytes): 608156\r\n        Average resident set size (kbytes): 0\r\n        Major (requiring I/O) page faults: 0\r\n        Minor (reclaiming a frame) page faults: 116061\r\n        Voluntary context switches: 95\r\n        Involuntary context switches: 137\r\n        Swaps: 0\r\n        File system inputs: 0\r\n        File system outputs: 0\r\n        Socket messages sent: 0\r\n        Socket messages received: 0\r\n        Signals delivered: 0\r\n        Page size (bytes): 4096\r\n        Exit status: 0\r\n```\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.11.0+cu113\r\n* OS: Ubuntu 20.04\r\n* Python version: 3.8.10\r\n* CUDA/cuDNN version: 11.4.4 and 11.3.1\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4994/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4993", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4993/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4993/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4993/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4993", "id": 1305948847, "node_id": "PR_kwDOBlHMec47d2jh", "number": 4993, "title": "Fix `GenConv` test", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-15T11:57:06Z", "updated_at": "2022-07-15T12:01:31Z", "closed_at": "2022-07-15T12:01:31Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4993", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4993", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4993.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4993.patch", "merged_at": "2022-07-15T12:01:31Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4993/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4992", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4992/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4992/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4992/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4992", "id": 1305946438, "node_id": "I_kwDOBlHMec5N1ylG", "number": 4992, "title": "Wrong Import (UniMP Example)?", "user": {"login": "imethanlee", "id": 36200682, "node_id": "MDQ6VXNlcjM2MjAwNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/36200682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imethanlee", "html_url": "https://github.com/imethanlee", "followers_url": "https://api.github.com/users/imethanlee/followers", "following_url": "https://api.github.com/users/imethanlee/following{/other_user}", "gists_url": "https://api.github.com/users/imethanlee/gists{/gist_id}", "starred_url": "https://api.github.com/users/imethanlee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imethanlee/subscriptions", "organizations_url": "https://api.github.com/users/imethanlee/orgs", "repos_url": "https://api.github.com/users/imethanlee/repos", "events_url": "https://api.github.com/users/imethanlee/events{/privacy}", "received_events_url": "https://api.github.com/users/imethanlee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-07-15T11:54:29Z", "updated_at": "2022-07-15T11:58:35Z", "closed_at": "2022-07-15T11:58:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nIt seems the `'MaskLabel'` module is not defined in `torch_geometric.nn`.\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/50f22b18be387a81da06465694d944fae13e30ec/examples/unimp_arxiv.py#L8\r\n\r\nCould you please check it out?\n\n### Environment\n\n* PyG version:2.04\r\n* PyTorch version:1.10.2\r\n* OS:LINUX\r\n* Python version:3.8\r\n* CUDA/cuDNN version:11.2\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):None\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4992/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4989", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4989/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4989/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4989/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4989", "id": 1305833892, "node_id": "I_kwDOBlHMec5N1XGk", "number": 4989, "title": "Captum explainability interface doesn't work anymore", "user": {"login": "jan0b", "id": 98087792, "node_id": "U_kgDOBdizcA", "avatar_url": "https://avatars.githubusercontent.com/u/98087792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jan0b", "html_url": "https://github.com/jan0b", "followers_url": "https://api.github.com/users/jan0b/followers", "following_url": "https://api.github.com/users/jan0b/following{/other_user}", "gists_url": "https://api.github.com/users/jan0b/gists{/gist_id}", "starred_url": "https://api.github.com/users/jan0b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jan0b/subscriptions", "organizations_url": "https://api.github.com/users/jan0b/orgs", "repos_url": "https://api.github.com/users/jan0b/repos", "events_url": "https://api.github.com/users/jan0b/events{/privacy}", "received_events_url": "https://api.github.com/users/jan0b/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-07-15T09:58:22Z", "updated_at": "2022-07-21T12:05:26Z", "closed_at": "2022-07-21T12:04:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\n## Bug Description\r\nOne can reproduce the error by using the PyG's own example code for the Captum interface (https://github.com/pyg-team/pytorch_geometric/blob/24a185e7268f70ee549c7a424b9426b9a18b5706/examples/captum_explainability.py). The \"testing.py\" script is exactly the script from the example from the link. A few weeks back the interface worked perfectly, but now there is an error thrown by the edge index's.\r\n\r\n## Error messages\r\n### **Calculating edge greadients** aka _mask_type='edge'_\r\n\r\nTraceback (most recent call last):\r\n* File \"<>/pyg_tests/testing.py\", line 56, in <module>\r\n  * ig_attr_edge = ig.attribute(edge_mask.unsqueeze(0), target=target,\r\n* File \"<>/lib/python3.8/site-packages/captum/attr/_core/integrated_gradients.py\", line 278, in attribute\r\n  * grads = _batched_operator(\r\n* File \"<>/lib/python3.8/site-packages/captum/attr/_utils/batching.py\", line 156, in _batched_operator\r\n  * all_outputs = [\r\n* File \"<>/lib/python3.8/site-packages/captum/attr/_utils/batching.py\", line 157, in <listcomp>\r\n  * operator(\r\n* File \"<>/lib/python3.8/site-packages/captum/attr/_utils/gradient.py\", line 96, in compute_gradients\r\n  * outputs = _run_forward(forward_fn, inputs, target_ind, additional_forward_args)\r\n* File \"<>/lib/python3.8/site-packages/captum/attr/_utils/common.py\", line 500, in _run_forward\r\n  * output = forward_func(\r\n* File \"<>/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 1110, in _call_impl\r\n  * return forward_call(*input, **kwargs)\r\n* File \"<>/lib/python3.8/site-packages/torch_geometric/nn/models/explainer.py\", line 65, in forward\r\n  * set_masks(self.model, mask.squeeze(0), args[1],\r\n* File \"<>/lib/python3.8/site-packages/torch_geometric/nn/models/explainer.py\", line 17, in set_masks\r\n  * loop_mask = edge_index[0] != edge_index[1]\r\n\r\nIndexError: index 1 is out of bounds for dimension 0 with size 1\r\n\r\n### **Calculating node gradients** aka _mask_type='node'_\r\n\r\nTraceback (most recent call last):\r\n* File \"<>/pyg_tests/testing.py\", line 76, in <module>\r\n  * ig_attr_node = ig.attribute(data.x.unsqueeze(0), target=target,\r\n*  File \"<>/lib/python3.8/site-packages/captum/attr/_core/integrated_gradients.py\", line 278, in attribute\r\n   * grads = _batched_operator(\r\n* File \"<>/lib/python3.8/site-packages/captum/attr/_utils/batching.py\", line 156, in _batched_operator\r\n  * all_outputs = [\r\n* File \"<>/lib/python3.8/site-packages/captum/attr/_utils/batching.py\", line 157, in <listcomp>\r\n  * operator(\r\n* File \"<>/lib/python3.8/site-packages/captum/attr/_utils/gradient.py\", line 96, in compute_gradients\r\n  * outputs = _run_forward(forward_fn, inputs, target_ind, additional_forward_args)\r\n* File \"<>/lib/python3.8/site-packages/captum/attr/_utils/common.py\", line 500, in _run_forward\r\n  * output = forward_func(\r\n* File \"<>/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 1110, in _call_impl\r\n  * return forward_call(*input, **kwargs)\r\n* File \"<>/lib/python3.8/site-packages/torch_geometric/nn/models/explainer.py\", line 76, in forward\r\n  * x = self.model(mask.squeeze(0), *args)\r\n* File \"<>/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 1110, in _call_impl\r\n  * return forward_call(*input, **kwargs)\r\n* File \"<>/pyg_tests/testing.py\", line 25, in forward\r\n  * x = F.relu(self.conv1(x, edge_index))\r\n* File \"<>/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 1110, in _call_impl\r\n  * return forward_call(*input, **kwargs)\r\n* File \"<>/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py\", line 172, in forward\r\n  * edge_index, edge_weight = gcn_norm(  # yapf: disable\r\n* File \"/<>/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py\", line 58, in gcn_norm\r\n  * edge_index, tmp_edge_weight = add_remaining_self_loops(\r\n* File \"<>/lib/python3.8/site-packages/torch_geometric/utils/loop.py\", line 198, in add_remaining_self_loops\r\n  * mask = edge_index[0] != edge_index[1]\r\n\r\nIndexError: index 1 is out of bounds for dimension 0 with size 1\r\n\r\n### **Calculating node and edge gradients** aka _mask_type='node_and_edge'_\r\nSame error message as when only calculating the edge gradients.\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.11.0\r\n* OS: Linux 4.18.0\r\n* Python version: 3.8.13\r\n* CUDA/cuDNN version: cuda11.3_cudnn8.2.0_0\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): both with conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): captum 0.2.0 via pip", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4989/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4982", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4982/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4982/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4982/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4982", "id": 1304913407, "node_id": "PR_kwDOBlHMec47ac2E", "number": 4982, "title": "Fix Python 3.10 tests", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-14T15:00:20Z", "updated_at": "2022-07-14T15:05:51Z", "closed_at": "2022-07-14T15:05:50Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4982", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4982", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4982.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4982.patch", "merged_at": "2022-07-14T15:05:50Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4982/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4979", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4979/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4979/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4979/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4979", "id": 1303818425, "node_id": "PR_kwDOBlHMec47W0dr", "number": 4979, "title": "`ConfigStore`: do not strip group name from config name", "user": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-13T18:56:20Z", "updated_at": "2022-07-13T19:16:34Z", "closed_at": "2022-07-13T19:16:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4979", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4979", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4979.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4979.patch", "merged_at": "2022-07-13T19:16:34Z"}, "body": "We can recover this functionality by handling groups more properly in the future. But this should resolve inter-group naming conflicts for now.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4979/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4978", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4978/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4978/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4978/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4978", "id": 1303558072, "node_id": "PR_kwDOBlHMec47V8OC", "number": 4978, "title": "Fix `graphgym` activation function dictionary, now not including instances anymore", "user": {"login": "fjulian", "id": 10942150, "node_id": "MDQ6VXNlcjEwOTQyMTUw", "avatar_url": "https://avatars.githubusercontent.com/u/10942150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fjulian", "html_url": "https://github.com/fjulian", "followers_url": "https://api.github.com/users/fjulian/followers", "following_url": "https://api.github.com/users/fjulian/following{/other_user}", "gists_url": "https://api.github.com/users/fjulian/gists{/gist_id}", "starred_url": "https://api.github.com/users/fjulian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fjulian/subscriptions", "organizations_url": "https://api.github.com/users/fjulian/orgs", "repos_url": "https://api.github.com/users/fjulian/repos", "events_url": "https://api.github.com/users/fjulian/events{/privacy}", "received_events_url": "https://api.github.com/users/fjulian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3465159234, "node_id": "LA_kwDOBlHMec7OiiJC", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/graphgym", "name": "graphgym", "color": "BBD6C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "fjulian", "id": 10942150, "node_id": "MDQ6VXNlcjEwOTQyMTUw", "avatar_url": "https://avatars.githubusercontent.com/u/10942150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fjulian", "html_url": "https://github.com/fjulian", "followers_url": "https://api.github.com/users/fjulian/followers", "following_url": "https://api.github.com/users/fjulian/following{/other_user}", "gists_url": "https://api.github.com/users/fjulian/gists{/gist_id}", "starred_url": "https://api.github.com/users/fjulian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fjulian/subscriptions", "organizations_url": "https://api.github.com/users/fjulian/orgs", "repos_url": "https://api.github.com/users/fjulian/repos", "events_url": "https://api.github.com/users/fjulian/events{/privacy}", "received_events_url": "https://api.github.com/users/fjulian/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fjulian", "id": 10942150, "node_id": "MDQ6VXNlcjEwOTQyMTUw", "avatar_url": "https://avatars.githubusercontent.com/u/10942150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fjulian", "html_url": "https://github.com/fjulian", "followers_url": "https://api.github.com/users/fjulian/followers", "following_url": "https://api.github.com/users/fjulian/following{/other_user}", "gists_url": "https://api.github.com/users/fjulian/gists{/gist_id}", "starred_url": "https://api.github.com/users/fjulian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fjulian/subscriptions", "organizations_url": "https://api.github.com/users/fjulian/orgs", "repos_url": "https://api.github.com/users/fjulian/repos", "events_url": "https://api.github.com/users/fjulian/events{/privacy}", "received_events_url": "https://api.github.com/users/fjulian/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2022-07-13T14:53:56Z", "updated_at": "2022-08-15T12:17:40Z", "closed_at": "2022-07-13T18:12:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4978", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4978", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4978.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4978.patch", "merged_at": "2022-07-13T18:12:25Z"}, "body": "Until now, the `act_dict` used by the `graphgym` part of this library contained instances of activation functions that were used to build models. This is okay for the activation functions that do not have parameters. However, in the case of PReLU, there is a parameter. This lead to the problem that every PReLU which is built using the `graphgym` infrastructure shared a single parameter, e.g. when PReLUs are used in multiple layers, or when PReLUs are used in several models that are trained alternatingly. The shared parameter caused unexpected changes to a network that was thought to be frozen while another network was trained.\r\n\r\nThe solution to this problem proposed in this PR is to include activation function constructors in the `act_dict` instead of instances, and create a new instance every time an activation function is used in a model.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4978/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4970", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4970/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4970/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4970/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4970", "id": 1302329109, "node_id": "PR_kwDOBlHMec47R0nE", "number": 4970, "title": "Stronger check for label dimensions in CorrectAndSmooth and LabelPropagation", "user": {"login": "kpstesla", "id": 35904712, "node_id": "MDQ6VXNlcjM1OTA0NzEy", "avatar_url": "https://avatars.githubusercontent.com/u/35904712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpstesla", "html_url": "https://github.com/kpstesla", "followers_url": "https://api.github.com/users/kpstesla/followers", "following_url": "https://api.github.com/users/kpstesla/following{/other_user}", "gists_url": "https://api.github.com/users/kpstesla/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpstesla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpstesla/subscriptions", "organizations_url": "https://api.github.com/users/kpstesla/orgs", "repos_url": "https://api.github.com/users/kpstesla/repos", "events_url": "https://api.github.com/users/kpstesla/events{/privacy}", "received_events_url": "https://api.github.com/users/kpstesla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358958730, "node_id": "MDU6TGFiZWwzMzU4OTU4NzMw", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/2%20-%20Priority%20P2", "name": "2 - Priority P2", "color": "006B75", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "kpstesla", "id": 35904712, "node_id": "MDQ6VXNlcjM1OTA0NzEy", "avatar_url": "https://avatars.githubusercontent.com/u/35904712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpstesla", "html_url": "https://github.com/kpstesla", "followers_url": "https://api.github.com/users/kpstesla/followers", "following_url": "https://api.github.com/users/kpstesla/following{/other_user}", "gists_url": "https://api.github.com/users/kpstesla/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpstesla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpstesla/subscriptions", "organizations_url": "https://api.github.com/users/kpstesla/orgs", "repos_url": "https://api.github.com/users/kpstesla/repos", "events_url": "https://api.github.com/users/kpstesla/events{/privacy}", "received_events_url": "https://api.github.com/users/kpstesla/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kpstesla", "id": 35904712, "node_id": "MDQ6VXNlcjM1OTA0NzEy", "avatar_url": "https://avatars.githubusercontent.com/u/35904712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpstesla", "html_url": "https://github.com/kpstesla", "followers_url": "https://api.github.com/users/kpstesla/followers", "following_url": "https://api.github.com/users/kpstesla/following{/other_user}", "gists_url": "https://api.github.com/users/kpstesla/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpstesla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpstesla/subscriptions", "organizations_url": "https://api.github.com/users/kpstesla/orgs", "repos_url": "https://api.github.com/users/kpstesla/repos", "events_url": "https://api.github.com/users/kpstesla/events{/privacy}", "received_events_url": "https://api.github.com/users/kpstesla/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-12T16:26:41Z", "updated_at": "2022-07-12T17:01:32Z", "closed_at": "2022-07-12T17:01:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4970", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4970", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4970.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4970.patch", "merged_at": "2022-07-12T17:01:26Z"}, "body": "This is a minor fix to the argument checks for some label propagation based classes.  Previously, if a label tensor of type `long` was passed, the tensor would be converted to a one-hot tensor.  The issue is that if the tensor was previously converted into a one-hot tensor using `F.one_hot`, then the type would remain as `long`.  This PR adds a check to ensure that tensors are only converted to one hot if they are of type `long`, and not already multidimensional tensors.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4970/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4968", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4968/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4968/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4968/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4968", "id": 1302084691, "node_id": "PR_kwDOBlHMec47Q_fM", "number": 4968, "title": "Fix `GraphStore` with empty edge indices", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-07-12T13:41:20Z", "updated_at": "2022-07-12T13:42:52Z", "closed_at": "2022-07-12T13:42:52Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4968", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4968", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4968.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4968.patch", "merged_at": "2022-07-12T13:42:51Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4968/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4967", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4967/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4967/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4967/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4967", "id": 1302075836, "node_id": "PR_kwDOBlHMec47Q9il", "number": 4967, "title": "[Benchmark] Fix `bool` arguments in `argparse`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969902632, "node_id": "LA_kwDOBlHMec7sn-go", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/benchmark", "name": "benchmark", "color": "f9d0c4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-07-12T13:35:36Z", "updated_at": "2022-07-12T13:37:11Z", "closed_at": "2022-07-12T13:37:10Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4967", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4967", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4967.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4967.patch", "merged_at": "2022-07-12T13:37:10Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4967/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4966", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4966/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4966/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4966/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4966", "id": 1301999344, "node_id": "I_kwDOBlHMec5Nmu7w", "number": 4966, "title": "Unintuitive --normalize_features option in benchmark scripts", "user": {"login": "gau-nernst", "id": 26946864, "node_id": "MDQ6VXNlcjI2OTQ2ODY0", "avatar_url": "https://avatars.githubusercontent.com/u/26946864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gau-nernst", "html_url": "https://github.com/gau-nernst", "followers_url": "https://api.github.com/users/gau-nernst/followers", "following_url": "https://api.github.com/users/gau-nernst/following{/other_user}", "gists_url": "https://api.github.com/users/gau-nernst/gists{/gist_id}", "starred_url": "https://api.github.com/users/gau-nernst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gau-nernst/subscriptions", "organizations_url": "https://api.github.com/users/gau-nernst/orgs", "repos_url": "https://api.github.com/users/gau-nernst/repos", "events_url": "https://api.github.com/users/gau-nernst/events{/privacy}", "received_events_url": "https://api.github.com/users/gau-nernst/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-07-12T12:33:43Z", "updated_at": "2022-07-12T14:07:56Z", "closed_at": "2022-07-12T13:37:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nIn the reference benchmark script for GAT [here](https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/citation/gat.py), the `--normalize-features` option is probably not behaving what it is intended to do. As noted by the official Python argparse [documentation](https://docs.python.org/3/library/argparse.html#type)\r\n\r\n> The [bool()](https://docs.python.org/3/library/functions.html#bool) function is not recommended as a type converter. All it does is convert empty strings to False and non-empty strings to True. This is usually not what is desired.\r\n\r\nIn other words,\r\n\r\n```bash\r\npython gat.py --dataset=Cora --normalize_features=False  # this will silently evaluate to normalize_features=True\r\npython gat.py --dataset=Cora --normalize_features=0  # same problem as above, since \"0\" is a string\r\npython gat.py --dataset=Cora --normalize_features=\"\" # the only way to turn off feature normalization correctly\r\n```\r\n\r\nOne alternative would be\r\n\r\n```python\r\nparser.add_argument('--no-normalize_features', action=\"store_true\")\r\n...\r\n\r\ndataset = get_planetoid_dataset(args.dataset, not args.no_normalize_features)\r\n```\r\n\r\nIt is not a huge bug, but I think it would improve usability for the users, as well as providing better reference scripts.\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.11.0\r\n* OS: macOS (ARM)\r\n* Python version: 3.10\r\n* CUDA/cuDNN version: NA\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): PyTorch through conda, PyG through pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): NA\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4966/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4966/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4963", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4963/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4963/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4963/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4963", "id": 1301550557, "node_id": "PR_kwDOBlHMec47PNc_", "number": 4963, "title": "Fix an indent bug for `HGT` in documentation", "user": {"login": "meettyj", "id": 30004852, "node_id": "MDQ6VXNlcjMwMDA0ODUy", "avatar_url": "https://avatars.githubusercontent.com/u/30004852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meettyj", "html_url": "https://github.com/meettyj", "followers_url": "https://api.github.com/users/meettyj/followers", "following_url": "https://api.github.com/users/meettyj/following{/other_user}", "gists_url": "https://api.github.com/users/meettyj/gists{/gist_id}", "starred_url": "https://api.github.com/users/meettyj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meettyj/subscriptions", "organizations_url": "https://api.github.com/users/meettyj/orgs", "repos_url": "https://api.github.com/users/meettyj/repos", "events_url": "https://api.github.com/users/meettyj/events{/privacy}", "received_events_url": "https://api.github.com/users/meettyj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358958308, "node_id": "MDU6TGFiZWwzMzU4OTU4MzA4", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/1%20-%20Priority%20P1", "name": "1 - Priority P1", "color": "FBCA04", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "meettyj", "id": 30004852, "node_id": "MDQ6VXNlcjMwMDA0ODUy", "avatar_url": "https://avatars.githubusercontent.com/u/30004852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meettyj", "html_url": "https://github.com/meettyj", "followers_url": "https://api.github.com/users/meettyj/followers", "following_url": "https://api.github.com/users/meettyj/following{/other_user}", "gists_url": "https://api.github.com/users/meettyj/gists{/gist_id}", "starred_url": "https://api.github.com/users/meettyj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meettyj/subscriptions", "organizations_url": "https://api.github.com/users/meettyj/orgs", "repos_url": "https://api.github.com/users/meettyj/repos", "events_url": "https://api.github.com/users/meettyj/events{/privacy}", "received_events_url": "https://api.github.com/users/meettyj/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "meettyj", "id": 30004852, "node_id": "MDQ6VXNlcjMwMDA0ODUy", "avatar_url": "https://avatars.githubusercontent.com/u/30004852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meettyj", "html_url": "https://github.com/meettyj", "followers_url": "https://api.github.com/users/meettyj/followers", "following_url": "https://api.github.com/users/meettyj/following{/other_user}", "gists_url": "https://api.github.com/users/meettyj/gists{/gist_id}", "starred_url": "https://api.github.com/users/meettyj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meettyj/subscriptions", "organizations_url": "https://api.github.com/users/meettyj/orgs", "repos_url": "https://api.github.com/users/meettyj/repos", "events_url": "https://api.github.com/users/meettyj/events{/privacy}", "received_events_url": "https://api.github.com/users/meettyj/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-12T05:18:10Z", "updated_at": "2022-07-12T06:26:13Z", "closed_at": "2022-07-12T06:26:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4963", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4963", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4963.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4963.patch", "merged_at": "2022-07-12T06:26:13Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4963/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4962", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4962/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4962/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4962/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4962", "id": 1301398288, "node_id": "PR_kwDOBlHMec47Otjs", "number": 4962, "title": "`GraphStore`: handle zero-sized edge indices", "user": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-12T00:50:13Z", "updated_at": "2022-07-12T06:36:54Z", "closed_at": "2022-07-12T06:36:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4962", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4962", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4962.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4962.patch", "merged_at": "2022-07-12T06:36:48Z"}, "body": "Small fix for edge indices of shape `(2, 0)` (decomposed into two tensors of size 0), for which we cannot index into each tensor.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4962/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4949", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4949/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4949/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4949/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4949", "id": 1299629606, "node_id": "I_kwDOBlHMec5NdsYm", "number": 4949, "title": "ModuleNotFoundError: No module named 'torch_geometric.nn.resolver'", "user": {"login": "FedeOtto", "id": 58518844, "node_id": "MDQ6VXNlcjU4NTE4ODQ0", "avatar_url": "https://avatars.githubusercontent.com/u/58518844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FedeOtto", "html_url": "https://github.com/FedeOtto", "followers_url": "https://api.github.com/users/FedeOtto/followers", "following_url": "https://api.github.com/users/FedeOtto/following{/other_user}", "gists_url": "https://api.github.com/users/FedeOtto/gists{/gist_id}", "starred_url": "https://api.github.com/users/FedeOtto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FedeOtto/subscriptions", "organizations_url": "https://api.github.com/users/FedeOtto/orgs", "repos_url": "https://api.github.com/users/FedeOtto/repos", "events_url": "https://api.github.com/users/FedeOtto/events{/privacy}", "received_events_url": "https://api.github.com/users/FedeOtto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-07-09T09:33:52Z", "updated_at": "2022-07-14T06:42:08Z", "closed_at": "2022-07-14T06:42:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nStudying the `DimeNet` implementation I get the following error when I try to import\r\n\r\n    from torch_geometric.nn.resolver import activation_resolver\r\n\r\n    ModuleNotFoundError: No module named 'torch_geometric.nn.resolver'\r\n\r\nActually I cannot find such module in the docs, is that deprecated?\r\n\r\n\n\n### Environment\n\n* PyG version: `2.0.4`\r\n* PyTorch version: `1.11.0`\r\n* OS: Windows 10\r\n* Python version:  `3.8.12`\r\n* CUDA/cuDNN version: /\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): `conda`\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): /\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4949/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4948", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4948/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4948/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4948/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4948", "id": 1299622689, "node_id": "PR_kwDOBlHMec47I544", "number": 4948, "title": "Fix `MemPooling` test", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-09T08:55:46Z", "updated_at": "2022-07-09T09:19:41Z", "closed_at": "2022-07-09T09:19:40Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4948", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4948", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4948.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4948.patch", "merged_at": "2022-07-09T09:19:40Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4948/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4935", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4935/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4935/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4935/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4935", "id": 1297086354, "node_id": "PR_kwDOBlHMec47AO9H", "number": 4935, "title": "Fix `degree` bug in `PNAConv`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-07-07T09:23:26Z", "updated_at": "2022-07-07T09:25:18Z", "closed_at": "2022-07-07T09:25:18Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4935", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4935", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4935.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4935.patch", "merged_at": "2022-07-07T09:25:18Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4935/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4934", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4934/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4934/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4934/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4934", "id": 1297007070, "node_id": "PR_kwDOBlHMec46_94i", "number": 4934, "title": "Add TorchScript support to `DegreeScalerAggregation`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-07T08:15:54Z", "updated_at": "2022-07-07T08:38:08Z", "closed_at": "2022-07-07T08:38:07Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4934", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4934", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4934.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4934.patch", "merged_at": "2022-07-07T08:38:07Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4934/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4932", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4932/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4932/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4932/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4932", "id": 1296953595, "node_id": "PR_kwDOBlHMec46_ycr", "number": 4932, "title": "Fixed `data.subgraph` for 0-dim tensors", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-07T07:26:58Z", "updated_at": "2022-07-07T08:15:33Z", "closed_at": "2022-07-07T08:15:33Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4932", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4932", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4932.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4932.patch", "merged_at": "2022-07-07T08:15:33Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4932/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4931", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4931/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4931/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4931/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4931", "id": 1296902558, "node_id": "PR_kwDOBlHMec46_ng2", "number": 4931, "title": "Fix: `len(batch) == batch.num_graphs`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-07T06:32:22Z", "updated_at": "2022-07-07T09:11:54Z", "closed_at": "2022-07-07T09:11:53Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4931", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4931", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4931.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4931.patch", "merged_at": "2022-07-07T09:11:53Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4931/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4930", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4930/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4930/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4930/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4930", "id": 1296778321, "node_id": "I_kwDOBlHMec5NS0RR", "number": 4930, "title": "batch length seems incorrect", "user": {"login": "cinntamani", "id": 97049313, "node_id": "U_kgDOBcja4Q", "avatar_url": "https://avatars.githubusercontent.com/u/97049313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cinntamani", "html_url": "https://github.com/cinntamani", "followers_url": "https://api.github.com/users/cinntamani/followers", "following_url": "https://api.github.com/users/cinntamani/following{/other_user}", "gists_url": "https://api.github.com/users/cinntamani/gists{/gist_id}", "starred_url": "https://api.github.com/users/cinntamani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cinntamani/subscriptions", "organizations_url": "https://api.github.com/users/cinntamani/orgs", "repos_url": "https://api.github.com/users/cinntamani/repos", "events_url": "https://api.github.com/users/cinntamani/events{/privacy}", "received_events_url": "https://api.github.com/users/cinntamani/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-07-07T04:08:11Z", "updated_at": "2022-07-07T06:33:56Z", "closed_at": "2022-07-07T06:33:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nWhen a batch of graphs is formed, len(batch) does not seem to return the intuitive number of graphs:\r\n```\r\nimport torch_geometric.data\r\nd = torch_geometric.data.Data(x=torch.tensor([[1.], [2.]]), edge_index=torch.LongTensor([[0], [1]]))\r\nbatch = torch_geometric.data.batch.Batch.from_data_list([d] * 10)\r\nprint(len(batch))\r\n4\r\nprint(batch.num_graphs)\r\n10\r\n```\r\nIt seems it would be better to define Batch.\\__len\\__() to return Batch.num_graphs.\r\n\r\n### Environment\r\n\r\n* PyG version: 2.0.4\r\n* PyTorch version: 1.11.0\r\n* OS: macOS 12.3.1\r\n* Python version: 3.10\r\n* CUDA/cuDNN version: NA\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4930/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4929", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4929/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4929/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4929/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4929", "id": 1296560844, "node_id": "PR_kwDOBlHMec46-fHX", "number": 4929, "title": "`NeighborLoader`: support temporal sampling with `(FeatureStore, GraphStore)`", "user": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-06T22:35:56Z", "updated_at": "2022-07-07T22:00:41Z", "closed_at": "2022-07-07T22:00:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4929", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4929", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4929.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4929.patch", "merged_at": "2022-07-07T22:00:41Z"}, "body": "Supports temporal sampling by performing the equivalent of a `collect()` operation on `FeatureStore` to construct `node_time_dict`. Also fixes a minor bug in `HeteroData.put_tensor`.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4929/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4923", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4923/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4923/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4923/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4923", "id": 1295089802, "node_id": "I_kwDOBlHMec5NMYCK", "number": 4923, "title": "How do I ClusterData the whole Dataset of graphs?", "user": {"login": "davodogster", "id": 46079516, "node_id": "MDQ6VXNlcjQ2MDc5NTE2", "avatar_url": "https://avatars.githubusercontent.com/u/46079516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davodogster", "html_url": "https://github.com/davodogster", "followers_url": "https://api.github.com/users/davodogster/followers", "following_url": "https://api.github.com/users/davodogster/following{/other_user}", "gists_url": "https://api.github.com/users/davodogster/gists{/gist_id}", "starred_url": "https://api.github.com/users/davodogster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davodogster/subscriptions", "organizations_url": "https://api.github.com/users/davodogster/orgs", "repos_url": "https://api.github.com/users/davodogster/repos", "events_url": "https://api.github.com/users/davodogster/events{/privacy}", "received_events_url": "https://api.github.com/users/davodogster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-07-06T04:01:17Z", "updated_at": "2022-07-07T07:28:46Z", "closed_at": "2022-07-07T07:28:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHello, I am facing this error when I try to convert one graph in the dataset to ClusterData.\r\nAlso, I want to convert a whole PyG Dataset to a ClusterData set. Is it possible?\r\nSimilarly can I convert an InMemory Dataset to a ClusterDataset?\r\n\r\n![image](https://user-images.githubusercontent.com/46079516/177465360-6dbba37b-49de-4e5e-b0c9-6e186304d1df.png)\r\n\r\n\r\nThanks, Sam\n\n### Environment\n\nEnv:\r\nPython: 3.9.7\r\nTorch: 1.10.0\r\nUbuntu: 20.04\r\nCUDA: 11.3.1\r\nPyG: 2.0.3", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4923/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4916", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4916/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4916/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4916/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4916", "id": 1293201835, "node_id": "I_kwDOBlHMec5NFLGr", "number": 4916, "title": "UserWarning error from transform tutorial using ShapeNet", "user": {"login": "Jaceyjc", "id": 107227006, "node_id": "U_kgDOBmQnfg", "avatar_url": "https://avatars.githubusercontent.com/u/107227006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jaceyjc", "html_url": "https://github.com/Jaceyjc", "followers_url": "https://api.github.com/users/Jaceyjc/followers", "following_url": "https://api.github.com/users/Jaceyjc/following{/other_user}", "gists_url": "https://api.github.com/users/Jaceyjc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jaceyjc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jaceyjc/subscriptions", "organizations_url": "https://api.github.com/users/Jaceyjc/orgs", "repos_url": "https://api.github.com/users/Jaceyjc/repos", "events_url": "https://api.github.com/users/Jaceyjc/events{/privacy}", "received_events_url": "https://api.github.com/users/Jaceyjc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-07-04T13:47:04Z", "updated_at": "2022-07-04T23:34:48Z", "closed_at": "2022-07-04T23:34:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi, I am going through the transform section on the tutorial page, and I have not been able to resolve the following error:\r\n\r\n```import torch_geometric.transforms as T\r\nfrom torch_geometric.datasets import ShapeNet\r\n\r\ndataset_T = ShapeNet(root='/tmp/ShapeNet', categories=['Airplane'],\r\n                   pre_transform=T.KNNGraph(k=6))\r\n\r\n>>> /home/user/.conda/envs/pytorch/lib/python3.9/site-packages/torch_geometric/data/dataset.py:150: UserWarning: The `pre_transform` argument differs from the one used in the pre-processed version of this dataset. If you want to make use of another pre-processing technique, make sure to sure to delete '/tmp/ShapeNet/processed' first\r\n  warnings.warn(\r\n```\r\n\r\nA component from the resulting transformed dataset shows:\r\n```\r\ndataset_T[0] \r\n>>> Data(x=[2518, 3], y=[2518], pos=[2518, 3], category=[1])\r\n```\r\nwhich is incorrect.\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.11.0\r\n* OS: Linux\r\n* Python version: 3.9\r\n* CUDA/cuDNN version: -\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4916/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4911", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4911/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4911/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4911/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4911", "id": 1292034576, "node_id": "I_kwDOBlHMec5NAuIQ", "number": 4911, "title": "Cannot load Flickr dataset ", "user": {"login": "weihua916", "id": 16249234, "node_id": "MDQ6VXNlcjE2MjQ5MjM0", "avatar_url": "https://avatars.githubusercontent.com/u/16249234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weihua916", "html_url": "https://github.com/weihua916", "followers_url": "https://api.github.com/users/weihua916/followers", "following_url": "https://api.github.com/users/weihua916/following{/other_user}", "gists_url": "https://api.github.com/users/weihua916/gists{/gist_id}", "starred_url": "https://api.github.com/users/weihua916/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weihua916/subscriptions", "organizations_url": "https://api.github.com/users/weihua916/orgs", "repos_url": "https://api.github.com/users/weihua916/repos", "events_url": "https://api.github.com/users/weihua916/events{/privacy}", "received_events_url": "https://api.github.com/users/weihua916/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-07-02T11:28:03Z", "updated_at": "2022-07-02T22:39:06Z", "closed_at": "2022-07-02T22:39:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nFlickr's numpy file seems to be corrupted?\r\n\r\n```python\r\nfrom torch_geometric.datasets import Flickr\r\ndataset = Flickr(root = 'dataset/flickr')\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"utils.py\", line 206, in <module>\r\n    train_dict, test_dict, num_classes = prepare_data('flickr')\r\n  File \"utils.py\", line 99, in prepare_data\r\n    dataset = Flickr(root = 'dataset/flickr')\r\n  File \"/dfs/user/weihuahu/anaconda3/lib/python3.8/site-packages/torch_geometric/datasets/flickr.py\", line 36, in __init__\r\n    super().__init__(root, transform, pre_transform)\r\n  File \"/dfs/user/weihuahu/anaconda3/lib/python3.8/site-packages/torch_geometric/data/in_memory_dataset.py\", line 57, in __init__\r\n    super().__init__(root, transform, pre_transform, pre_filter)\r\n  File \"/dfs/user/weihuahu/anaconda3/lib/python3.8/site-packages/torch_geometric/data/dataset.py\", line 88, in __init__\r\n    self._process()\r\n  File \"/dfs/user/weihuahu/anaconda3/lib/python3.8/site-packages/torch_geometric/data/dataset.py\", line 171, in _process\r\n    self.process()\r\n  File \"/dfs/user/weihuahu/anaconda3/lib/python3.8/site-packages/torch_geometric/datasets/flickr.py\", line 70, in process\r\n    x = np.load(osp.join(self.raw_dir, 'feats.npy'))\r\n  File \"/dfs/user/weihuahu/anaconda3/lib/python3.8/site-packages/numpy/lib/npyio.py\", line 418, in load\r\n    raise ValueError(\"Cannot load file containing pickled data \"\r\nValueError: Cannot load file containing pickled data when allow_pickle=False\r\n```\n\n### Environment\n\n* PyG version: 1.10.1\r\n* PyTorch version: 2.0.3\r\n* OS: Ubuntu 16.04\r\n* Python version: 3.8.8\r\n* CUDA/cuDNN version: cu102\r\n* How you installed PyTorch and PyG: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4911/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4910", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4910/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4910/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4910/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4910", "id": 1291454199, "node_id": "PR_kwDOBlHMec46tgEH", "number": 4910, "title": "Fixing `to_heterogeneous` to work with GPU", "user": {"login": "azrael417", "id": 1052902, "node_id": "MDQ6VXNlcjEwNTI5MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1052902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azrael417", "html_url": "https://github.com/azrael417", "followers_url": "https://api.github.com/users/azrael417/followers", "following_url": "https://api.github.com/users/azrael417/following{/other_user}", "gists_url": "https://api.github.com/users/azrael417/gists{/gist_id}", "starred_url": "https://api.github.com/users/azrael417/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azrael417/subscriptions", "organizations_url": "https://api.github.com/users/azrael417/orgs", "repos_url": "https://api.github.com/users/azrael417/repos", "events_url": "https://api.github.com/users/azrael417/events{/privacy}", "received_events_url": "https://api.github.com/users/azrael417/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "azrael417", "id": 1052902, "node_id": "MDQ6VXNlcjEwNTI5MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1052902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azrael417", "html_url": "https://github.com/azrael417", "followers_url": "https://api.github.com/users/azrael417/followers", "following_url": "https://api.github.com/users/azrael417/following{/other_user}", "gists_url": "https://api.github.com/users/azrael417/gists{/gist_id}", "starred_url": "https://api.github.com/users/azrael417/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azrael417/subscriptions", "organizations_url": "https://api.github.com/users/azrael417/orgs", "repos_url": "https://api.github.com/users/azrael417/repos", "events_url": "https://api.github.com/users/azrael417/events{/privacy}", "received_events_url": "https://api.github.com/users/azrael417/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "azrael417", "id": 1052902, "node_id": "MDQ6VXNlcjEwNTI5MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1052902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azrael417", "html_url": "https://github.com/azrael417", "followers_url": "https://api.github.com/users/azrael417/followers", "following_url": "https://api.github.com/users/azrael417/following{/other_user}", "gists_url": "https://api.github.com/users/azrael417/gists{/gist_id}", "starred_url": "https://api.github.com/users/azrael417/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azrael417/subscriptions", "organizations_url": "https://api.github.com/users/azrael417/orgs", "repos_url": "https://api.github.com/users/azrael417/repos", "events_url": "https://api.github.com/users/azrael417/events{/privacy}", "received_events_url": "https://api.github.com/users/azrael417/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-01T14:04:08Z", "updated_at": "2022-07-02T05:14:11Z", "closed_at": "2022-07-02T05:14:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4910", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4910", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4910.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4910.patch", "merged_at": "2022-07-02T05:14:11Z"}, "body": "Dear Sir/Madam,\r\n\r\nthis small PR makes the to_heterogeneous function of torch_geometric.data.Data compatible with non CPU devices.\r\n\r\nPreviously, if the Data object was model to the GPU, the to_heterogeneous call would fail with:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"utils/transforms.py\", line 102, in <module>\r\n    main()\r\n  File \"utils/transforms.py\", line 95, in main\r\n    hdata = data.to_heterogeneous()\r\n  File \"/opt/pytorch_geometric/torch_geometric/data/data.py\", line 660, in to_heterogeneous\r\n    index_map[node_ids[i]] = torch.arange(len(node_ids[i]))\r\nRuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!\r\n```\r\n\r\nPlease let me know what you think.\r\n\r\nBest regards\r\nThorsten", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4910/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4908", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4908/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4908/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4908/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4908", "id": 1291249082, "node_id": "PR_kwDOBlHMec46szTP", "number": 4908, "title": "Fix test in `LinkNeighborLoader`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-01T10:53:34Z", "updated_at": "2022-07-01T10:57:26Z", "closed_at": "2022-07-01T10:57:25Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4908", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4908", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4908.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4908.patch", "merged_at": "2022-07-01T10:57:25Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4908/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4906", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4906/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4906/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4906/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4906", "id": 1291173876, "node_id": "I_kwDOBlHMec5M9b_0", "number": 4906, "title": "KNN selects fewer number of neighbours when executed on cuda", "user": {"login": "Ignasijus", "id": 100710945, "node_id": "U_kgDOBgC6IQ", "avatar_url": "https://avatars.githubusercontent.com/u/100710945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ignasijus", "html_url": "https://github.com/Ignasijus", "followers_url": "https://api.github.com/users/Ignasijus/followers", "following_url": "https://api.github.com/users/Ignasijus/following{/other_user}", "gists_url": "https://api.github.com/users/Ignasijus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ignasijus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ignasijus/subscriptions", "organizations_url": "https://api.github.com/users/Ignasijus/orgs", "repos_url": "https://api.github.com/users/Ignasijus/repos", "events_url": "https://api.github.com/users/Ignasijus/events{/privacy}", "received_events_url": "https://api.github.com/users/Ignasijus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-07-01T09:43:54Z", "updated_at": "2022-07-07T14:18:58Z", "closed_at": "2022-07-07T09:11:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi,\r\nI noticed that sometimes knn_graph selects a different number of neighbors when executed on cuda compared to cpu. I add a code to reproduce (positions of the points are here: [pos.zip](https://github.com/pyg-team/pytorch_geometric/files/9027825/pos.zip)).\r\nIn this example I have 32 points (they are not repeating) and try to generate a knn graph with k = 8. \r\n\r\n```python\r\nimport torch\r\nfrom torch_geometric.nn import knn_graph\r\n\r\npos = torch.load('pos.pt')\r\n\r\nedge_index_cpu = knn_graph(pos.cpu(), k=8)\r\nedge_index_cuda = knn_graph(pos.cuda(), k=8)\r\n```\r\n```python\r\nprint(edge_index_cpu.shape)\r\ntorch.Size([2, 256])\r\n\r\nprint(edge_index_cuda.shape)\r\ntorch.Size([2, 250])\r\n```\r\nEach point should have 8 edges, so the expected number of edges is 32 * 8 = 256. So the cpu result is correct, while the cuda result misses 6 edges. \r\nIn particular, somewhy on cuda the node 14 has only six neighbors and the node 20 has only four neighbors.\r\n```python\r\nprint(edge_index_cuda[:, edge_index_cuda[1] == 14])\r\ntensor([[13, 20, 31, 24,  4, 17],\r\n        [14, 14, 14, 14, 14, 14]], device='cuda:0')\r\n\r\nprint(edge_index_cuda[:, edge_index_cuda[1] == 20])\r\ntensor([[14, 31, 13, 24],\r\n        [20, 20, 20, 20]], device='cuda:0')\r\n```\r\nMaybe I'm missing something? I would appreciate any comments on this. \n\n### Environment\n\n* PyG version: 2.0.4\r\n* torch-cluster version: 1.6.0\r\n* PyTorch version: 1.11.0\r\n* OS: Windows\r\n* Python version: 3.9.12\r\n* CUDA/cuDNN version: 11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4906/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4906/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4899", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4899/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4899/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4899/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4899", "id": 1290574378, "node_id": "I_kwDOBlHMec5M7Joq", "number": 4899, "title": "Unable to implement mini-batch training using heterogeneous dataset", "user": {"login": "luisfredgs", "id": 852491, "node_id": "MDQ6VXNlcjg1MjQ5MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/852491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisfredgs", "html_url": "https://github.com/luisfredgs", "followers_url": "https://api.github.com/users/luisfredgs/followers", "following_url": "https://api.github.com/users/luisfredgs/following{/other_user}", "gists_url": "https://api.github.com/users/luisfredgs/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisfredgs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisfredgs/subscriptions", "organizations_url": "https://api.github.com/users/luisfredgs/orgs", "repos_url": "https://api.github.com/users/luisfredgs/repos", "events_url": "https://api.github.com/users/luisfredgs/events{/privacy}", "received_events_url": "https://api.github.com/users/luisfredgs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-06-30T19:54:41Z", "updated_at": "2022-07-02T05:14:48Z", "closed_at": "2022-07-01T17:05:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHello, \r\nI'm trying to adapt the MovieLens example to work with mini-batch training. However, I'm facing an issue when calling the decoder. I'll share my notebook on Google Colab. Thank you in advance for your help or any directions.\r\n\r\nMy Google Colab notebook to reproduce the error:\r\nhttps://drive.google.com/file/d/1p_C5bqs3XRFiLDjeGCvcx5JC6SV3_ioP/view?usp=sharing\r\n\r\nThe complete error message:\r\n```\r\nIndexError                                Traceback (most recent call last)\r\n\r\n[<ipython-input-160-69326f3fb109>](https://localhost:8080/#) in <module>()\r\n     37     out = model(batch.x_dict, \r\n     38                  batch.edge_index_dict,\r\n---> 39                  batch['user', 'movie'].edge_label_index)\r\n     40 \r\n     41     out = out['user'][:batch_size]\r\n\r\n3 frames\r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch/nn/modules/module.py](https://localhost:8080/#) in _call_impl(self, *input, **kwargs)\r\n   1108         if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks\r\n   1109                 or _global_forward_hooks or _global_forward_pre_hooks):\r\n-> 1110             return forward_call(*input, **kwargs)\r\n   1111         # Do not call functions when jit is used\r\n   1112         full_backward_hooks, non_full_backward_hooks = [], []\r\n\r\n[<ipython-input-150-fa150fdb5f4a>](https://localhost:8080/#) in forward(self, x_dict, edge_index_dict, edge_label_index)\r\n     45     def forward(self, x_dict, edge_index_dict, edge_label_index):\r\n     46         z_dict = self.encoder(x_dict, edge_index_dict)\r\n---> 47         return self.decoder(z_dict, edge_label_index)\r\n     48 \r\n     49 \r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch/nn/modules/module.py](https://localhost:8080/#) in _call_impl(self, *input, **kwargs)\r\n   1108         if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks\r\n   1109                 or _global_forward_hooks or _global_forward_pre_hooks):\r\n-> 1110             return forward_call(*input, **kwargs)\r\n   1111         # Do not call functions when jit is used\r\n   1112         full_backward_hooks, non_full_backward_hooks = [], []\r\n\r\n[<ipython-input-150-fa150fdb5f4a>](https://localhost:8080/#) in forward(self, z_dict, edge_label_index)\r\n     28         z = torch.cat([\r\n     29                        z_dict['user'][row],\r\n---> 30                        z_dict['movie'][col]\r\n     31                        ], dim=-1)\r\n     32 \r\n\r\nIndexError: index 587 is out of bounds for dimension 0 with size 4\r\n```\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.11.0+cu113\r\n* OS: Ubuntu 18.04.5 LTS\r\n* Python version: 3.7\r\n* CUDA/cuDNN version: 11.1\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4899/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4890", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4890/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4890/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4890/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4890", "id": 1289450098, "node_id": "I_kwDOBlHMec5M23Jy", "number": 4890, "title": "Just importing torch_geometric throws an error", "user": {"login": "HuangStomach", "id": 8955394, "node_id": "MDQ6VXNlcjg5NTUzOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8955394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HuangStomach", "html_url": "https://github.com/HuangStomach", "followers_url": "https://api.github.com/users/HuangStomach/followers", "following_url": "https://api.github.com/users/HuangStomach/following{/other_user}", "gists_url": "https://api.github.com/users/HuangStomach/gists{/gist_id}", "starred_url": "https://api.github.com/users/HuangStomach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HuangStomach/subscriptions", "organizations_url": "https://api.github.com/users/HuangStomach/orgs", "repos_url": "https://api.github.com/users/HuangStomach/repos", "events_url": "https://api.github.com/users/HuangStomach/events{/privacy}", "received_events_url": "https://api.github.com/users/HuangStomach/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-06-30T00:59:03Z", "updated_at": "2022-06-30T15:17:05Z", "closed_at": "2022-06-30T15:17:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI used to run pyg normally in cpu mode, then I switched to the nightly version of pytorch in order to experience pytorch's M1 support, after which I found that pyg didn't work properly anymore.\r\nI rolled back the nightly version of pytorch and did a fresh install of pytorch and pyg, and still had the problem.\r\n\r\n``` python\r\nfrom torch_geometric.data import Dataset\r\n```\r\n\r\n```\r\nlibc++abi: terminating with uncaught exception of type c10::Error: In operator registration: Tried to register an operator without specifying a schema or operator name.\r\nException raised from checkSchemaAndRegisterOp_ at /Users/runner/miniforge3/conda-bld/pytorch-recipe_1654951098057/work/aten/src/ATen/core/op_registration/op_registration.cpp:20 (most recent call first):\r\nframe #0: c10::detail::torchCheckFail(char const*, char const*, unsigned int, char const*) + 188 (0x11921f084 in libc10.dylib)\r\nframe #1: c10::RegisterOperators::checkSchemaAndRegisterOp_(c10::RegisterOperators::Options&&) + 612 (0x138197cf0 in libtorch_cpu.dylib)\r\nframe #2: cuda_version() + 192 (0x11b2d9370 in _version_cpu.so)\r\nframe #3: c10::detail::getTypePtr_<long long>::call() + 200 (0x11b2db1a0 in _version_cpu.so)\r\nframe #4: invocation function for block in dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&) const + 164 (0x10506dd7c in dyld)\r\nframe #5: invocation function for block in dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&, dyld3::MachOAnalyzer::VMAddrConverter const&, void (unsigned int) block_pointer, void const*) const + 168 (0x105096f40 in dyld)\r\nframe #6: invocation function for block in dyld3::MachOFile::forEachSection(void (dyld3::MachOFile::SectionInfo const&, bool, bool&) block_pointer) const + 528 (0x10508dbc0 in dyld)\r\nframe #7: dyld3::MachOFile::forEachLoadCommand(Diagnostics&, void (load_command const*, bool&) block_pointer) const + 168 (0x105059f98 in dyld)\r\nframe #8: dyld3::MachOFile::forEachSection(void (dyld3::MachOFile::SectionInfo const&, bool, bool&) block_pointer) const + 192 (0x10508d968 in dyld)\r\nframe #9: dyld3::MachOAnalyzer::forEachInitializerPointerSection(Diagnostics&, void (unsigned int, unsigned int, unsigned char const*, bool&) block_pointer) const + 148 (0x105096870 in dyld)\r\nframe #10: dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&, dyld3::MachOAnalyzer::VMAddrConverter const&, void (unsigned int) block_pointer, void const*) const + 432 (0x105096b70 in dyld)\r\nframe #11: dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&) const + 172 (0x10506dcbc in dyld)\r\nframe #12: dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&, dyld3::Array<dyld4::Loader const*>&) const + 216 (0x10506de68 in dyld)\r\nframe #13: dyld4::Loader::runInitializersBottomUpPlusUpwardLinks(dyld4::RuntimeState&) const + 124 (0x10506df34 in dyld)\r\nframe #14: dyld4::APIs::dlopen_from(char const*, int, void*) + 520 (0x10507d9e4 in dyld)\r\nframe #15: py_dl_open + 188 (0x105a936d4 in _ctypes.cpython-39-darwin.so)\r\nframe #16: cfunction_call + 208 (0x104a7d09c in python3.9)\r\nframe #17: _PyObject_MakeTpCall + 504 (0x104a2d080 in python3.9)\r\nframe #18: call_function + 668 (0x104b22748 in python3.9)\r\nframe #19: _PyEval_EvalFrameDefault + 26544 (0x104b1ef6c in python3.9)\r\nframe #20: _PyEval_EvalCode + 2324 (0x104b18008 in python3.9)\r\nframe #21: _PyFunction_Vectorcall + 244 (0x104a2dc48 in python3.9)\r\nframe #22: _PyObject_FastCallDictTstate + 320 (0x104a2d330 in python3.9)\r\nframe #23: _PyObject_Call_Prepend + 164 (0x104a2e08c in python3.9)\r\nframe #24: slot_tp_init + 380 (0x104aa0dc8 in python3.9)\r\nframe #25: type_call + 340 (0x104aaa8a0 in python3.9)\r\nframe #26: _PyObject_MakeTpCall + 504 (0x104a2d080 in python3.9)\r\nframe #27: call_function + 668 (0x104b22748 in python3.9)\r\nframe #28: _PyEval_EvalFrameDefault + 26420 (0x104b1eef0 in python3.9)\r\nframe #29: function_code_fastcall + 116 (0x104a2dcc8 in python3.9)\r\nframe #30: method_vectorcall + 164 (0x104a309f0 in python3.9)\r\nframe #31: call_function + 372 (0x104b22620 in python3.9)\r\nframe #32: _PyEval_EvalFrameDefault + 26420 (0x104b1eef0 in python3.9)\r\nframe #33: _PyEval_EvalCode + 2324 (0x104b18008 in python3.9)\r\nframe #34: PyEval_EvalCode + 76 (0x104b176e8 in python3.9)\r\nframe #35: builtin_exec + 844 (0x104b13314 in python3.9)\r\nframe #36: cfunction_vectorcall_FASTCALL + 216 (0x104a7ddbc in python3.9)\r\nframe #37: _PyEval_EvalFrameDefault + 27244 (0x104b1f228 in python3.9)\r\nframe #38: _PyEval_EvalCode + 2324 (0x104b18008 in python3.9)\r\nframe #39: _PyFunction_Vectorcall + 244 (0x104a2dc48 in python3.9)\r\nframe #40: call_function + 372 (0x104b22620 in python3.9)\r\nframe #41: _PyEval_EvalFrameDefault + 26420 (0x104b1eef0 in python3.9)\r\nframe #42: function_code_fastcall + 116 (0x104a2dcc8 in python3.9)\r\nframe #43: call_function + 372 (0x104b22620 in python3.9)\r\nframe #44: _PyEval_EvalFrameDefault + 26384 (0x104b1eecc in python3.9)\r\nframe #45: function_code_fastcall + 116 (0x104a2dcc8 in python3.9)\r\nframe #46: call_function + 372 (0x104b22620 in python3.9)\r\nframe #47: _PyEval_EvalFrameDefault + 26544 (0x104b1ef6c in python3.9)\r\nframe #48: function_code_fastcall + 116 (0x104a2dcc8 in python3.9)\r\nframe #49: call_function + 372 (0x104b22620 in python3.9)\r\nframe #50: _PyEval_EvalFrameDefault + 26544 (0x104b1ef6c in python3.9)\r\nframe #51: function_code_fastcall + 116 (0x104a2dcc8 in python3.9)\r\nframe #52: object_vacall + 272 (0x104a2f0b8 in python3.9)\r\nframe #53: _PyObject_CallMethodIdObjArgs + 132 (0x104a2f2dc in python3.9)\r\nframe #54: PyImport_ImportModuleLevelObject + 1552 (0x104b476c4 in python3.9)\r\nframe #55: _PyEval_EvalFrameDefault + 20320 (0x104b1d71c in python3.9)\r\nframe #56: _PyEval_EvalCode + 2324 (0x104b18008 in python3.9)\r\nframe #57: PyEval_EvalCode + 76 (0x104b176e8 in python3.9)\r\nframe #58: builtin_exec + 844 (0x104b13314 in python3.9)\r\nframe #59: cfunction_vectorcall_FASTCALL + 216 (0x104a7ddbc in python3.9)\r\nframe #60: _PyEval_EvalFrameDefault + 27244 (0x104b1f228 in python3.9)\r\nframe #61: _PyEval_EvalCode + 2324 (0x104b18008 in python3.9)\r\nframe #62: _PyFunction_Vectorcall + 244 (0x104a2dc48 in python3.9)\r\nframe #63: call_function + 372 (0x104b22620 in python3.9)\r\n\r\nzsh: abort      python _test.py\r\n```\n\n### Environment\n\n* PyG version: `2.0.4`\r\n* PyTorch version: `1.11.0`\r\n* OS: `conda/4.13.0 OSX/12.4`\r\n* Python version: `3.9.13.final.0`\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): `pytorch with conda, pyg with pip`\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4890/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4889", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4889/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4889/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4889/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4889", "id": 1289443420, "node_id": "PR_kwDOBlHMec46mwiu", "number": 4889, "title": "Disjoint sampling", "user": {"login": "RexYing", "id": 2379898, "node_id": "MDQ6VXNlcjIzNzk4OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/2379898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RexYing", "html_url": "https://github.com/RexYing", "followers_url": "https://api.github.com/users/RexYing/followers", "following_url": "https://api.github.com/users/RexYing/following{/other_user}", "gists_url": "https://api.github.com/users/RexYing/gists{/gist_id}", "starred_url": "https://api.github.com/users/RexYing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RexYing/subscriptions", "organizations_url": "https://api.github.com/users/RexYing/orgs", "repos_url": "https://api.github.com/users/RexYing/repos", "events_url": "https://api.github.com/users/RexYing/events{/privacy}", "received_events_url": "https://api.github.com/users/RexYing/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "RexYing", "id": 2379898, "node_id": "MDQ6VXNlcjIzNzk4OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/2379898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RexYing", "html_url": "https://github.com/RexYing", "followers_url": "https://api.github.com/users/RexYing/followers", "following_url": "https://api.github.com/users/RexYing/following{/other_user}", "gists_url": "https://api.github.com/users/RexYing/gists{/gist_id}", "starred_url": "https://api.github.com/users/RexYing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RexYing/subscriptions", "organizations_url": "https://api.github.com/users/RexYing/orgs", "repos_url": "https://api.github.com/users/RexYing/repos", "events_url": "https://api.github.com/users/RexYing/events{/privacy}", "received_events_url": "https://api.github.com/users/RexYing/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "RexYing", "id": 2379898, "node_id": "MDQ6VXNlcjIzNzk4OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/2379898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RexYing", "html_url": "https://github.com/RexYing", "followers_url": "https://api.github.com/users/RexYing/followers", "following_url": "https://api.github.com/users/RexYing/following{/other_user}", "gists_url": "https://api.github.com/users/RexYing/gists{/gist_id}", "starred_url": "https://api.github.com/users/RexYing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RexYing/subscriptions", "organizations_url": "https://api.github.com/users/RexYing/orgs", "repos_url": "https://api.github.com/users/RexYing/repos", "events_url": "https://api.github.com/users/RexYing/events{/privacy}", "received_events_url": "https://api.github.com/users/RexYing/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2022-06-30T00:48:15Z", "updated_at": "2022-07-21T11:06:45Z", "closed_at": "2022-07-21T11:06:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": true, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4889", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4889", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4889.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4889.patch", "merged_at": null}, "body": "The main goal is to allow disjoint sampling (mostly used for temporal sampling use cases), in order to avoid the same node that are sampled multiple times have its timestamps overriding each other.\r\n\r\nThis is only a tentative prototype, since I find it somewhat difficult to directly integrate this feature into the c++ sampling routine in torch_sparse. But I'm happy to discuss alternatives and pros / cons and potentially revise it significantly.\r\n\r\nI'm also yet to do the collation (mentioned in TODO), but it's not hard in python since we have existing routines. It's more difficult if I were to write this in c++.\r\n\r\nOne disadvantage of this workaround is that the sampling logic is somewhat exposed to the python side in PyG, which could be confusing. There might also be efficiency concerns, since we now loop it over in Python, rather than in c++.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4889/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4882", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4882/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4882/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4882/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4882", "id": 1287957631, "node_id": "PR_kwDOBlHMec46hxS2", "number": 4882, "title": "Fix: `Data` and `HeteroData` feature store `get_all_tensor_attrs`", "user": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-06-28T22:10:51Z", "updated_at": "2022-06-30T11:29:24Z", "closed_at": "2022-06-28T23:22:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4882", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4882", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4882.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4882.patch", "merged_at": "2022-06-28T23:22:47Z"}, "body": "Resolves a bug in `Data` and `HeteroData` which results in `get_all_tensor_attrs` not filtering for true tensor attributes.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4882/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4881", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4881/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4881/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4881/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4881", "id": 1287718968, "node_id": "I_kwDOBlHMec5MwQg4", "number": 4881, "title": "Raising \"list index out of range\" error when using Dataloader on HeteroData data", "user": {"login": "luisfredgs", "id": 852491, "node_id": "MDQ6VXNlcjg1MjQ5MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/852491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisfredgs", "html_url": "https://github.com/luisfredgs", "followers_url": "https://api.github.com/users/luisfredgs/followers", "following_url": "https://api.github.com/users/luisfredgs/following{/other_user}", "gists_url": "https://api.github.com/users/luisfredgs/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisfredgs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisfredgs/subscriptions", "organizations_url": "https://api.github.com/users/luisfredgs/orgs", "repos_url": "https://api.github.com/users/luisfredgs/repos", "events_url": "https://api.github.com/users/luisfredgs/events{/privacy}", "received_events_url": "https://api.github.com/users/luisfredgs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-06-28T18:19:35Z", "updated_at": "2022-06-29T17:05:43Z", "closed_at": "2022-06-29T17:05:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Description\r\n\r\nHello! Firstly, thank you so much for the spectacular library! \r\n \r\nI'm opening this thread because I'm facing an issue when attempting to use a DataLoader on a custom dataset containing `HeteroData` data from Link Prediction on MovieLens example. Specifically, it raises a \"list index out of range\" error:\r\n\r\n```python\r\ntrain_loader = HGTLoader(\r\n    train_data,\r\n    # Sample 512 nodes per type and per iteration for 4 iterations\r\n    num_samples={key: [512] * 2 for key in train_data.node_types},\r\n    # Use a batch size of 16 for sampling training nodes of type paper\r\n    batch_size=16,\r\n    input_nodes=('movie', train_data['movie'].x.long()), \r\n)\r\n\r\nfor batch in train_loader:\r\n    print(batch)\r\n```\r\n\r\nThen, I've got the error:\r\n \r\n ```\r\n IndexError                                Traceback (most recent call last)\r\n\r\n[<ipython-input-102-387572884d8f>](https://localhost:8080/#) in <module>()\r\n----> 1 for batch in train_loader:\r\n      2     print(batch)\r\n\r\n4 frames\r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch_geometric/loader/base.py](https://localhost:8080/#) in __next__(self)\r\n     19 \r\n     20     def __next__(self) -> Any:\r\n---> 21         return self.transform_fn(next(self.iterator))\r\n     22 \r\n     23 \r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch_geometric/loader/hgt_loader.py](https://localhost:8080/#) in transform_fn(self, out)\r\n    138         node_dict, row_dict, col_dict, edge_dict, batch_size = out\r\n    139         data = filter_hetero_data(self.data, node_dict, row_dict, col_dict,\r\n--> 140                                   edge_dict, self.perm_dict)\r\n    141         data[self.input_nodes[0]].batch_size = batch_size\r\n    142 \r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch_geometric/loader/utils.py](https://localhost:8080/#) in filter_hetero_data(data, node_dict, row_dict, col_dict, edge_dict, perm_dict)\r\n    152         filter_edge_store_(data[edge_type], out[edge_type],\r\n    153                            row_dict[edge_type_str], col_dict[edge_type_str],\r\n--> 154                            edge_dict[edge_type_str], perm_dict[edge_type_str])\r\n    155 \r\n    156     return out\r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch_geometric/loader/utils.py](https://localhost:8080/#) in filter_edge_store_(store, out_store, row, col, index, perm)\r\n    118                 perm = perm.to(value.device)\r\n    119                 index = index.to(value.device)\r\n--> 120                 out_store[key] = index_select(value, perm[index], dim=0)\r\n    121 \r\n    122     return store\r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch_geometric/loader/utils.py](https://localhost:8080/#) in index_select(value, index, dim)\r\n     22         storage = value.storage()._new_shared(numel)\r\n     23         out = value.new(storage).view(size)\r\n---> 24     return torch.index_select(value, 0, index, out=out)\r\n     25 \r\n     26 \r\n\r\nIndexError: index out of range in self\r\n ```\r\n \r\nHere is an example to reproduce the issue on Google Colab. Thank you in advance for your help.: \r\nhttps://colab.research.google.com/drive/1p_C5bqs3XRFiLDjeGCvcx5JC6SV3_ioP#scrollTo=ikzs8lKlZL2i&line=2&uniqifier=1\r\n\r\n### Environment\r\n\r\n* PyG version: 2.0.4\r\n* PyTorch version: 1.11.0+cu113\r\n* OS: Linux on Google Colab VM\r\n* Python version: 3.7\r\n* CUDA/cuDNN version: 11.1\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): \r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4881/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4872", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4872/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4872/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4872/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4872", "id": 1285327546, "node_id": "PR_kwDOBlHMec46ZDeW", "number": 4872, "title": "Fix `GENConv` test", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-06-27T06:45:17Z", "updated_at": "2022-06-27T07:01:49Z", "closed_at": "2022-06-27T07:01:48Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4872", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4872", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4872.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4872.patch", "merged_at": "2022-06-27T07:01:48Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4872/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4857", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4857/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4857/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4857/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4857", "id": 1283758780, "node_id": "PR_kwDOBlHMec46UEsU", "number": 4857, "title": "Hotfix: #4856 follow-up, also fix `edge_types`", "user": {"login": "ZenoTan", "id": 41138939, "node_id": "MDQ6VXNlcjQxMTM4OTM5", "avatar_url": "https://avatars.githubusercontent.com/u/41138939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZenoTan", "html_url": "https://github.com/ZenoTan", "followers_url": "https://api.github.com/users/ZenoTan/followers", "following_url": "https://api.github.com/users/ZenoTan/following{/other_user}", "gists_url": "https://api.github.com/users/ZenoTan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZenoTan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZenoTan/subscriptions", "organizations_url": "https://api.github.com/users/ZenoTan/orgs", "repos_url": "https://api.github.com/users/ZenoTan/repos", "events_url": "https://api.github.com/users/ZenoTan/events{/privacy}", "received_events_url": "https://api.github.com/users/ZenoTan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ZenoTan", "id": 41138939, "node_id": "MDQ6VXNlcjQxMTM4OTM5", "avatar_url": "https://avatars.githubusercontent.com/u/41138939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZenoTan", "html_url": "https://github.com/ZenoTan", "followers_url": "https://api.github.com/users/ZenoTan/followers", "following_url": "https://api.github.com/users/ZenoTan/following{/other_user}", "gists_url": "https://api.github.com/users/ZenoTan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZenoTan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZenoTan/subscriptions", "organizations_url": "https://api.github.com/users/ZenoTan/orgs", "repos_url": "https://api.github.com/users/ZenoTan/repos", "events_url": "https://api.github.com/users/ZenoTan/events{/privacy}", "received_events_url": "https://api.github.com/users/ZenoTan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ZenoTan", "id": 41138939, "node_id": "MDQ6VXNlcjQxMTM4OTM5", "avatar_url": "https://avatars.githubusercontent.com/u/41138939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZenoTan", "html_url": "https://github.com/ZenoTan", "followers_url": "https://api.github.com/users/ZenoTan/followers", "following_url": "https://api.github.com/users/ZenoTan/following{/other_user}", "gists_url": "https://api.github.com/users/ZenoTan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZenoTan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZenoTan/subscriptions", "organizations_url": "https://api.github.com/users/ZenoTan/orgs", "repos_url": "https://api.github.com/users/ZenoTan/repos", "events_url": "https://api.github.com/users/ZenoTan/events{/privacy}", "received_events_url": "https://api.github.com/users/ZenoTan/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-06-24T13:31:31Z", "updated_at": "2022-06-24T14:50:32Z", "closed_at": "2022-06-24T14:50:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4857", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4857", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4857.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4857.patch", "merged_at": "2022-06-24T14:50:32Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4857/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4856", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4856/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4856/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4856/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4856", "id": 1283706951, "node_id": "PR_kwDOBlHMec46T5bV", "number": 4856, "title": "Hotfix: Remove duplicate `node_types` in `NeighborSampler` with `FeatureStore`", "user": {"login": "ZenoTan", "id": 41138939, "node_id": "MDQ6VXNlcjQxMTM4OTM5", "avatar_url": "https://avatars.githubusercontent.com/u/41138939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZenoTan", "html_url": "https://github.com/ZenoTan", "followers_url": "https://api.github.com/users/ZenoTan/followers", "following_url": "https://api.github.com/users/ZenoTan/following{/other_user}", "gists_url": "https://api.github.com/users/ZenoTan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZenoTan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZenoTan/subscriptions", "organizations_url": "https://api.github.com/users/ZenoTan/orgs", "repos_url": "https://api.github.com/users/ZenoTan/repos", "events_url": "https://api.github.com/users/ZenoTan/events{/privacy}", "received_events_url": "https://api.github.com/users/ZenoTan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ZenoTan", "id": 41138939, "node_id": "MDQ6VXNlcjQxMTM4OTM5", "avatar_url": "https://avatars.githubusercontent.com/u/41138939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZenoTan", "html_url": "https://github.com/ZenoTan", "followers_url": "https://api.github.com/users/ZenoTan/followers", "following_url": "https://api.github.com/users/ZenoTan/following{/other_user}", "gists_url": "https://api.github.com/users/ZenoTan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZenoTan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZenoTan/subscriptions", "organizations_url": "https://api.github.com/users/ZenoTan/orgs", "repos_url": "https://api.github.com/users/ZenoTan/repos", "events_url": "https://api.github.com/users/ZenoTan/events{/privacy}", "received_events_url": "https://api.github.com/users/ZenoTan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ZenoTan", "id": 41138939, "node_id": "MDQ6VXNlcjQxMTM4OTM5", "avatar_url": "https://avatars.githubusercontent.com/u/41138939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZenoTan", "html_url": "https://github.com/ZenoTan", "followers_url": "https://api.github.com/users/ZenoTan/followers", "following_url": "https://api.github.com/users/ZenoTan/following{/other_user}", "gists_url": "https://api.github.com/users/ZenoTan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZenoTan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZenoTan/subscriptions", "organizations_url": "https://api.github.com/users/ZenoTan/orgs", "repos_url": "https://api.github.com/users/ZenoTan/repos", "events_url": "https://api.github.com/users/ZenoTan/events{/privacy}", "received_events_url": "https://api.github.com/users/ZenoTan/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-06-24T12:43:30Z", "updated_at": "2022-06-24T13:29:12Z", "closed_at": "2022-06-24T13:13:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4856", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4856", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4856.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4856.patch", "merged_at": "2022-06-24T13:13:39Z"}, "body": "Also fixed a return type typo.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4856/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4855", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4855/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4855/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4855/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4855", "id": 1283442312, "node_id": "PR_kwDOBlHMec46S_nk", "number": 4855, "title": "Hotfix: `NeighborLoader` with boolean `input_nodes`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-06-24T08:37:53Z", "updated_at": "2022-06-24T08:38:12Z", "closed_at": "2022-06-24T08:38:11Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4855", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4855", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4855.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4855.patch", "merged_at": "2022-06-24T08:38:11Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4855/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4852", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4852/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4852/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4852/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4852", "id": 1282933350, "node_id": "PR_kwDOBlHMec46RWxu", "number": 4852, "title": "Correct docstring for `SAGEConv`", "user": {"login": "JiaxuanYou", "id": 20088523, "node_id": "MDQ6VXNlcjIwMDg4NTIz", "avatar_url": "https://avatars.githubusercontent.com/u/20088523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JiaxuanYou", "html_url": "https://github.com/JiaxuanYou", "followers_url": "https://api.github.com/users/JiaxuanYou/followers", "following_url": "https://api.github.com/users/JiaxuanYou/following{/other_user}", "gists_url": "https://api.github.com/users/JiaxuanYou/gists{/gist_id}", "starred_url": "https://api.github.com/users/JiaxuanYou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JiaxuanYou/subscriptions", "organizations_url": "https://api.github.com/users/JiaxuanYou/orgs", "repos_url": "https://api.github.com/users/JiaxuanYou/repos", "events_url": "https://api.github.com/users/JiaxuanYou/events{/privacy}", "received_events_url": "https://api.github.com/users/JiaxuanYou/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "JiaxuanYou", "id": 20088523, "node_id": "MDQ6VXNlcjIwMDg4NTIz", "avatar_url": "https://avatars.githubusercontent.com/u/20088523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JiaxuanYou", "html_url": "https://github.com/JiaxuanYou", "followers_url": "https://api.github.com/users/JiaxuanYou/followers", "following_url": "https://api.github.com/users/JiaxuanYou/following{/other_user}", "gists_url": "https://api.github.com/users/JiaxuanYou/gists{/gist_id}", "starred_url": "https://api.github.com/users/JiaxuanYou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JiaxuanYou/subscriptions", "organizations_url": "https://api.github.com/users/JiaxuanYou/orgs", "repos_url": "https://api.github.com/users/JiaxuanYou/repos", "events_url": "https://api.github.com/users/JiaxuanYou/events{/privacy}", "received_events_url": "https://api.github.com/users/JiaxuanYou/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JiaxuanYou", "id": 20088523, "node_id": "MDQ6VXNlcjIwMDg4NTIz", "avatar_url": "https://avatars.githubusercontent.com/u/20088523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JiaxuanYou", "html_url": "https://github.com/JiaxuanYou", "followers_url": "https://api.github.com/users/JiaxuanYou/followers", "following_url": "https://api.github.com/users/JiaxuanYou/following{/other_user}", "gists_url": "https://api.github.com/users/JiaxuanYou/gists{/gist_id}", "starred_url": "https://api.github.com/users/JiaxuanYou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JiaxuanYou/subscriptions", "organizations_url": "https://api.github.com/users/JiaxuanYou/orgs", "repos_url": "https://api.github.com/users/JiaxuanYou/repos", "events_url": "https://api.github.com/users/JiaxuanYou/events{/privacy}", "received_events_url": "https://api.github.com/users/JiaxuanYou/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-06-23T20:57:29Z", "updated_at": "2022-06-24T03:14:02Z", "closed_at": "2022-06-24T03:14:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4852", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4852", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4852.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4852.patch", "merged_at": "2022-06-24T03:14:01Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4852/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4851", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4851/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4851/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4851/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4851", "id": 1282807912, "node_id": "PR_kwDOBlHMec46Q74d", "number": 4851, "title": "Fix: `NeighborLoader` test with `Tuple[FeatureStore, GraphStore]`", "user": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-06-23T18:50:36Z", "updated_at": "2022-06-23T21:28:59Z", "closed_at": "2022-06-23T21:28:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4851", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4851", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4851.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4851.patch", "merged_at": "2022-06-23T21:28:58Z"}, "body": "The previous test was not correctly re-initializing the feature store and graph store in each `itertools.product(...)` step.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4851/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4848", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4848/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4848/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4848/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4848", "id": 1281831947, "node_id": "I_kwDOBlHMec5MZzQL", "number": 4848, "title": "Data Batch problem in PyG", "user": {"login": "Amadeus-System", "id": 76824867, "node_id": "MDQ6VXNlcjc2ODI0ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/76824867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amadeus-System", "html_url": "https://github.com/Amadeus-System", "followers_url": "https://api.github.com/users/Amadeus-System/followers", "following_url": "https://api.github.com/users/Amadeus-System/following{/other_user}", "gists_url": "https://api.github.com/users/Amadeus-System/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amadeus-System/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amadeus-System/subscriptions", "organizations_url": "https://api.github.com/users/Amadeus-System/orgs", "repos_url": "https://api.github.com/users/Amadeus-System/repos", "events_url": "https://api.github.com/users/Amadeus-System/events{/privacy}", "received_events_url": "https://api.github.com/users/Amadeus-System/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 31, "created_at": "2022-06-23T05:40:53Z", "updated_at": "2023-01-11T10:34:10Z", "closed_at": "2022-07-26T18:31:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi. I am a computational physics researcher and was using PyG very well.\r\nmy pyg code was working well a few weeks ago, but now that I run my code, it is not working anymore without any changes.\r\n\r\nthe problem is like below.\r\nI have many material structures and in my \"custom_dataset\" class, these are preprocessed and all graph informations (node features, edge features, edge index etc) are inserted into \"Data\" object in PyTorch geometric.\r\nYou can see that each preprocessed sample with index $i$ was printed normal \"Data\" object in pyg\r\n\r\n![\ucea1\ucc982](https://user-images.githubusercontent.com/76824867/175221069-874bf9b1-308b-4d99-8459-b3479307e78a.PNG)\r\n\r\nBut When I insert my custom dataset class into pyg DataLoader and I did like below,\r\n\r\n``` Python\r\nsample = next(iter(train_loader)) # batch sample\r\n```\r\n\r\nbatch sample is denoted by \"DataDataBatch\". I didn't see this kind of object name.\r\nand i can't use \"sample.x' or \"sample.edge_index\" command. Instead I need to do like this\r\n\r\n![\ucea1\ucc983](https://user-images.githubusercontent.com/76824867/175222628-75eee3a2-869a-4c80-8dd5-5f0f160682f0.PNG)\r\n\r\nI want to use expressions like \"sample.x\", \"sample.edge_index\" or \"sample.edge_attr\" as like before. \r\nI expect your kind explanations. Thank you.\r\n\n\n### Environment\n\n* PyG version: `2.0.5`\r\n* PyTorch version: `1.11.0+cu113`\r\n* OS: `GoogleColab Pro Plus`\r\n* Python version: `Python 3.7.13 in colab`\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): \r\n``` python\r\n# Install required packages.\r\nimport os\r\nimport torch\r\nos.environ['TORCH'] = torch.__version__\r\nprint(torch.__version__)\r\n!pip install -q torch-scatter -f https://data.pyg.org/whl/torch-${TORCH}.html\r\n!pip install -q torch-sparse -f https://data.pyg.org/whl/torch-${TORCH}.html\r\n!pip install -q git+https://github.com/pyg-team/pytorch_geometric.git\r\n!pip install -q pymatgen==2020.11.11  \r\n```\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4848/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4843", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4843/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4843/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4843/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4843", "id": 1280201282, "node_id": "PR_kwDOBlHMec46H7Bg", "number": 4843, "title": "GraphGym PyTorch Lightning Fixes", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3465159234, "node_id": "LA_kwDOBlHMec7OiiJC", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/graphgym", "name": "graphgym", "color": "BBD6C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-06-22T14:04:10Z", "updated_at": "2022-06-22T14:11:47Z", "closed_at": "2022-06-22T14:11:46Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4843", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4843", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4843.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4843.patch", "merged_at": "2022-06-22T14:11:46Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4843/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4842", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4842/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4842/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4842/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4842", "id": 1280171974, "node_id": "PR_kwDOBlHMec46H0kr", "number": 4842, "title": "`TUDataset`: Fix interplay between `pre_transform` and `pre_filter`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637023, "node_id": "LA_kwDOBlHMec7veEaf", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/dataset", "name": "dataset", "color": "7705B6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-06-22T13:46:11Z", "updated_at": "2022-06-22T13:52:40Z", "closed_at": "2022-06-22T13:52:39Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4842", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4842", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4842.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4842.patch", "merged_at": "2022-06-22T13:52:39Z"}, "body": "The `pre_filter` transform was not applied whenever due to some false caching.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4842/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4841", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4841/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4841/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4841/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4841", "id": 1280156535, "node_id": "PR_kwDOBlHMec46HxJn", "number": 4841, "title": "`HANConv`: `NaN` handling", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-06-22T13:36:32Z", "updated_at": "2022-06-22T13:45:12Z", "closed_at": "2022-06-22T13:45:11Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4841", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4841", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4841.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4841.patch", "merged_at": "2022-06-22T13:45:11Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4841/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4836", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4836/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4836/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4836/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4836", "id": 1278000267, "node_id": "I_kwDOBlHMec5MLLyL", "number": 4836, "title": "Using both `pre_transform` and `pre_filter` with `torch_geometric.dataset.TUDataset` gives unexpected behaviour. ", "user": {"login": "henrykenlay", "id": 15822099, "node_id": "MDQ6VXNlcjE1ODIyMDk5", "avatar_url": "https://avatars.githubusercontent.com/u/15822099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henrykenlay", "html_url": "https://github.com/henrykenlay", "followers_url": "https://api.github.com/users/henrykenlay/followers", "following_url": "https://api.github.com/users/henrykenlay/following{/other_user}", "gists_url": "https://api.github.com/users/henrykenlay/gists{/gist_id}", "starred_url": "https://api.github.com/users/henrykenlay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henrykenlay/subscriptions", "organizations_url": "https://api.github.com/users/henrykenlay/orgs", "repos_url": "https://api.github.com/users/henrykenlay/repos", "events_url": "https://api.github.com/users/henrykenlay/events{/privacy}", "received_events_url": "https://api.github.com/users/henrykenlay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-06-21T07:19:17Z", "updated_at": "2022-06-22T13:48:45Z", "closed_at": "2022-06-22T13:48:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nI'm trying to load a TUDataset using `pre_transform` and `pre_filter`. The `pre_filter` discards small graphs. The `pre_transform` for my use case is `Compose([ToUndirected(), RemoveIsolatedNodes(), AssignID()])` where `AssignID` is a transform I wrote that assigns a unique id to each graph. For a minimal example below we can just add a constant node feature (which does not affect the graph topology). Here is the example:\r\n\r\n```python\r\nimport torch_geometric\r\nfrom torch_geometric.transforms import Constant\r\nfrom torch_geometric.utils import from_networkx\r\nimport networkx as nx\r\nimport os\r\nimport shutil\r\n\r\n# make sure the data is not cached\r\nif os.path.exists('data_temp/'):\r\n   shutil.rmtree('data_temp/')\r\n\r\n# define pre_filter and check it does what we expect\r\npre_filter = lambda graph: graph.num_nodes >= 6\r\nprint(pre_filter(from_networkx(nx.barabasi_albert_graph(5, 2))))\r\nprint(pre_filter(from_networkx(nx.barabasi_albert_graph(6, 2))))\r\nprint(pre_filter(from_networkx(nx.barabasi_albert_graph(7, 2))))\r\n\r\n# load dataset with a pre_filter and a transform\r\n# print the size of the smallest graph, number of graphs and total number of nodes\r\ndataset = torch_geometric.datasets.TUDataset('data_temp/with_pre_transform', 'AIDS', pre_filter = pre_filter, pre_transform=Constant())\r\nprint('With transform', min([x.num_nodes for x in dataset]), len(dataset), dataset.data.num_nodes)\r\n\r\n# load dataset with a pre_filter only\r\n# print the size of the smallest graph, number of graphs and total number of nodes\r\ndataset = torch_geometric.datasets.TUDataset('data_temp/without_pre_transform', 'AIDS', pre_filter = pre_filter)\r\nprint('Without transform', min([x.num_nodes for x in dataset]), len(dataset), dataset.data.num_nodes)\r\n```\r\n\r\nThe output of this code block is \r\n\r\n```\r\nFalse\r\nTrue\r\nTrue\r\nDownloading https://www.chrsmrrs.com/graphkerneldatasets/AIDS.zip\r\nExtracting data_temp/with_pre_transform/AIDS/AIDS.zip\r\nProcessing...\r\nDone!\r\nWith transform 2 1980 30990\r\nDownloading https://www.chrsmrrs.com/graphkerneldatasets/AIDS.zip\r\nExtracting data_temp/without_pre_transform/AIDS/AIDS.zip\r\nProcessing...\r\nDone!\r\nWithout transform 6 1980 31307\r\n```\r\n\r\nThe first three lines show the `pre_filter` working as expected. The data is downloading in both cases so this is not an issue with caching. When we use a transform the smallest graph is `2` nodes, so the `pre_filter` is not working as expected. Without the transform, the smallest graph is `6` nodes which is what we expect. It is also weird to me that both datasets have the same number of graphs and that the one that seems to be working has more total nodes. \r\n\r\nI am not sure if I'm making a mistake here, or is this a bug? I looked at `transform` in the `TUDataset` class and cannot find anything obvious that might be causing this unexpected behaviour. \r\n\r\n\r\n\r\n\r\n### Environment\r\n\r\n* PyG version: `2.0.4`\r\n* PyTorch version: `1.11.0`\r\n* OS: `Ubuntu 16.04.7 LTS`\r\n* Python version: `3.9.12`\r\n* CUDA/cuDNN version: `11.3`  \r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): `conda install pyg -c pyg`\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): I also do `pip uninstall torch-spline-conv` according to this [issue](https://github.com/pyg-team/pytorch_geometric/issues/3477#issuecomment-1059538897=).\r\n\r\nI also reproduced this issue on a Mac with OS version `12.4` using `cpu` version of torch (all other information is the same). \r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4836/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4826", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4826/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4826/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4826/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4826", "id": 1276834734, "node_id": "I_kwDOBlHMec5MGvOu", "number": 4826, "title": "`HANConv` with empty tensor input may cause `NaN` value", "user": {"login": "nooblyh", "id": 44236710, "node_id": "MDQ6VXNlcjQ0MjM2NzEw", "avatar_url": "https://avatars.githubusercontent.com/u/44236710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nooblyh", "html_url": "https://github.com/nooblyh", "followers_url": "https://api.github.com/users/nooblyh/followers", "following_url": "https://api.github.com/users/nooblyh/following{/other_user}", "gists_url": "https://api.github.com/users/nooblyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/nooblyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nooblyh/subscriptions", "organizations_url": "https://api.github.com/users/nooblyh/orgs", "repos_url": "https://api.github.com/users/nooblyh/repos", "events_url": "https://api.github.com/users/nooblyh/events{/privacy}", "received_events_url": "https://api.github.com/users/nooblyh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-06-20T12:11:17Z", "updated_at": "2022-06-22T13:45:11Z", "closed_at": "2022-06-22T13:45:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nSuppose input `xs` is an empty tensor. In that case, the `group` function takes the mean of intermediate results (which will also be an empty tensor) alongside the empty dimension, causing nan results. \r\n```\r\ndef group(xs: List[Tensor], q: nn.Parameter,\r\n          k_lin: nn.Module) -> Optional[Tensor]:\r\n    if len(xs) == 0:\r\n        return None\r\n    else:\r\n        num_edge_types = len(xs)\r\n        out = torch.stack(xs)\r\n        attn_score = (q * torch.tanh(k_lin(out)).mean(1)).sum(-1)\r\n        attn = F.softmax(attn_score, dim=0)\r\n        out = torch.sum(attn.view(num_edge_types, 1, -1) * out, dim=0)\r\n        return out\r\n```\r\n#4756 fails to capture this since `out` will remain an empty tensor in the right shape, but it will eventually make the training process unstable.\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.11.0\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4826/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4824", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4824/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4824/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4824/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4824", "id": 1276394031, "node_id": "PR_kwDOBlHMec456_Ai", "number": 4824, "title": "Fix `softmax` documentation", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-06-20T05:41:24Z", "updated_at": "2022-06-20T05:42:42Z", "closed_at": "2022-06-20T05:42:41Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4824", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4824", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4824.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4824.patch", "merged_at": "2022-06-20T05:42:41Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4824/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4811", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4811/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4811/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4811/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4811", "id": 1272294344, "node_id": "I_kwDOBlHMec5L1avI", "number": 4811, "title": "CUDA error: an illegal memory access - possible PyTorch Geometric bug", "user": {"login": "j-adamczyk", "id": 50807718, "node_id": "MDQ6VXNlcjUwODA3NzE4", "avatar_url": "https://avatars.githubusercontent.com/u/50807718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j-adamczyk", "html_url": "https://github.com/j-adamczyk", "followers_url": "https://api.github.com/users/j-adamczyk/followers", "following_url": "https://api.github.com/users/j-adamczyk/following{/other_user}", "gists_url": "https://api.github.com/users/j-adamczyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/j-adamczyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j-adamczyk/subscriptions", "organizations_url": "https://api.github.com/users/j-adamczyk/orgs", "repos_url": "https://api.github.com/users/j-adamczyk/repos", "events_url": "https://api.github.com/users/j-adamczyk/events{/privacy}", "received_events_url": "https://api.github.com/users/j-adamczyk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-06-15T14:07:33Z", "updated_at": "2022-06-20T06:30:02Z", "closed_at": "2022-06-20T06:30:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nI have opened a bug issue at PyTorch repo: https://github.com/pytorch/pytorch/issues/79603. The error is about `GIN` model in PyTorch Geometric, but also happens for other models:\r\n```\r\nimport pytorch_geometric.nn as pyg_nn\r\n\r\nmodel = pyg_nn.GIN(512, 512, num_layers=5, jk=\"LSTM\")\r\n```\r\n\r\nError:\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Jakub\\Desktop\\Enhanced_GNN_graph_classification\\main_gnn.py\", line 81, in <module>\r\n    best_params, test_metrics = perform_experiment(\r\n  File \"C:\\Users\\Jakub\\Desktop\\Enhanced_GNN_graph_classification\\main_gnn.py\", line 23, in perform_experiment\r\n    train_results: optuna.Study = optimize_and_train(\r\n  File \"C:\\Users\\Jakub\\Desktop\\Enhanced_GNN_graph_classification\\gnn\\training.py\", line 247, in optimize_and_train\r\n    study.optimize(objective, n_trials=n_hyperparam_trials)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\optuna\\study\\study.py\", line 400, in optimize\r\n    _optimize(\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\optuna\\study\\_optimize.py\", line 66, in _optimize\r\n    _optimize_sequential(\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\optuna\\study\\_optimize.py\", line 163, in _optimize_sequential\r\n    trial = _run_trial(study, func, catch)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\optuna\\study\\_optimize.py\", line 264, in _run_trial\r\n    raise func_err\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\optuna\\study\\_optimize.py\", line 213, in _run_trial\r\n    value_or_values = func(trial)\r\n  File \"C:\\Users\\Jakub\\Desktop\\Enhanced_GNN_graph_classification\\gnn\\training.py\", line 222, in objective\r\n    trainer.fit(model, datamodule=data_module)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 770, in fit\r\n    self._call_and_handle_interrupt(\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 738, in _call_and_handle_interrupt\r\n    self._teardown()\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 1300, in _teardown\r\n    self.strategy.teardown()\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\strategies\\single_device.py\", line 93, in teardown\r\n    super().teardown()\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\strategies\\strategy.py\", line 444, in teardown\r\n    optimizers_to_device(self.optimizers, torch.device(\"cpu\"))\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\optimizer.py\", line 27, in optimizers_to_device\r\n    optimizer_to_device(opt, device)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\optimizer.py\", line 33, in optimizer_to_device\r\n    optimizer.state[p] = apply_to_collection(v, torch.Tensor, move_data_to_device, device)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\apply_func.py\", line 107, in apply_to_collection\r\n    v = apply_to_collection(\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\apply_func.py\", line 99, in apply_to_collection\r\n    return function(data, *args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\apply_func.py\", line 354, in move_data_to_device\r\n    return apply_to_collection(batch, dtype=dtype, function=batch_to)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\apply_func.py\", line 99, in apply_to_collection\r\n    return function(data, *args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\apply_func.py\", line 347, in batch_to\r\n    data_output = data.to(device, **kwargs)\r\nRuntimeError: CUDA error: an illegal memory access was encountered\r\n```\r\n\r\nWhen I run with `CUDA_LAUNCH_BLOCKING=1`, I get:\r\n```\r\nTrial 0 failed because of the following error: RuntimeError('CUDA error: unspecified launch failure')\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 721, in _call_and_handle_interrupt\r\n    return trainer_fn(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 809, in _fit_impl\r\n    results = self._run(model, ckpt_path=self.ckpt_path)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 1234, in _run\r\n    results = self._run_stage()\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 1321, in _run_stage\r\n    return self._run_train()\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 1351, in _run_train\r\n    self.fit_loop.run()\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\base.py\", line 204, in run\r\n    self.advance(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\fit_loop.py\", line 268, in advance\r\n    self._outputs = self.epoch_loop.run(self._data_fetcher)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\base.py\", line 204, in run\r\n    self.advance(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\epoch\\training_epoch_loop.py\", line 208, in advance\r\n    batch_output = self.batch_loop.run(batch, batch_idx)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\base.py\", line 204, in run\r\n    self.advance(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\batch\\training_batch_loop.py\", line 88, in advance\r\n    outputs = self.optimizer_loop.run(split_batch, optimizers, batch_idx)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\base.py\", line 204, in run\r\n    self.advance(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\optimization\\optimizer_loop.py\", line 203, in advance\r\n    result = self._run_optimization(\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\optimization\\optimizer_loop.py\", line 256, in _run_optimization\r\n    self._optimizer_step(optimizer, opt_idx, batch_idx, closure)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\optimization\\optimizer_loop.py\", line 369, in _optimizer_step\r\n    self.trainer._call_lightning_module_hook(\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 1593, in _call_lightning_module_hook\r\n    output = fn(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\core\\lightning.py\", line 1644, in optimizer_step\r\n    optimizer.step(closure=optimizer_closure)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\core\\optimizer.py\", line 168, in step\r\n    step_output = self._strategy.optimizer_step(self._optimizer, self._optimizer_idx, closure, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\strategies\\strategy.py\", line 193, in optimizer_step\r\n    return self.precision_plugin.optimizer_step(model, optimizer, opt_idx, closure, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\plugins\\precision\\precision_plugin.py\", line 155, in optimizer_step\r\n    return optimizer.step(closure=closure, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\torch\\optim\\optimizer.py\", line 88, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\torch\\autograd\\grad_mode.py\", line 27, in decorate_context\r\n    return func(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\torch\\optim\\adam.py\", line 100, in step\r\n    loss = closure()\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\plugins\\precision\\precision_plugin.py\", line 140, in _wrap_closure\r\n    closure_result = closure()\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\optimization\\optimizer_loop.py\", line 148, in __call__\r\n    self._result = self.closure(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\optimization\\optimizer_loop.py\", line 143, in closure\r\n    self._backward_fn(step_output.closure_loss)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\optimization\\optimizer_loop.py\", line 311, in backward_fn\r\n    self.trainer._call_strategy_hook(\"backward\", loss, optimizer, opt_idx)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 1763, in _call_strategy_hook\r\n    output = fn(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\strategies\\strategy.py\", line 168, in backward\r\n    self.precision_plugin.backward(self.lightning_module, closure_loss, *args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\plugins\\precision\\precision_plugin.py\", line 80, in backward\r\n    model.backward(closure_loss, optimizer, *args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\core\\lightning.py\", line 1389, in backward\r\n    loss.backward(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\torch\\_tensor.py\", line 363, in backward\r\n    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\torch\\autograd\\__init__.py\", line 173, in backward\r\n    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass\r\nRuntimeError: CUDA error: unspecified launch failure\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\optuna\\study\\_optimize.py\", line 213, in _run_trial\r\n    value_or_values = func(trial)\r\n  File \"C:\\Users\\Jakub\\Desktop\\Enhanced_GNN_graph_classification\\gnn\\training.py\", line 222, in objective\r\n    trainer.fit(model, datamodule=data_module)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 768, in fit\r\n    self._call_and_handle_interrupt(\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 736, in _call_and_handle_interrupt\r\n    self._teardown()\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 1298, in _teardown\r\n    self.strategy.teardown()\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\strategies\\single_device.py\", line 93, in teardown\r\n    super().teardown()\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\strategies\\strategy.py\", line 444, in teardown\r\n    optimizers_to_device(self.optimizers, torch.device(\"cpu\"))\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\optimizer.py\", line 27, in optimizers_to_device\r\n    optimizer_to_device(opt, device)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\optimizer.py\", line 33, in optimizer_to_device\r\n    optimizer.state[p] = apply_to_collection(v, torch.Tensor, move_data_to_device, device)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\apply_func.py\", line 107, in apply_to_collection\r\n    v = apply_to_collection(\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\apply_func.py\", line 99, in apply_to_collection\r\n    return function(data, *args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\apply_func.py\", line 354, in move_data_to_device\r\n    return apply_to_collection(batch, dtype=dtype, function=batch_to)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\apply_func.py\", line 99, in apply_to_collection\r\n    return function(data, *args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\apply_func.py\", line 347, in batch_to\r\n    data_output = data.to(device, **kwargs)\r\nRuntimeError: CUDA error: unspecified launch failure\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 721, in _call_and_handle_interrupt\r\n    return trainer_fn(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 809, in _fit_impl\r\n    results = self._run(model, ckpt_path=self.ckpt_path)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 1234, in _run\r\n    results = self._run_stage()\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 1321, in _run_stage\r\n    return self._run_train()\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 1351, in _run_train\r\n    self.fit_loop.run()\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\base.py\", line 204, in run\r\n    self.advance(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\fit_loop.py\", line 268, in advance\r\n    self._outputs = self.epoch_loop.run(self._data_fetcher)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\base.py\", line 204, in run\r\n    self.advance(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\epoch\\training_epoch_loop.py\", line 208, in advance\r\n    batch_output = self.batch_loop.run(batch, batch_idx)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\base.py\", line 204, in run\r\n    self.advance(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\batch\\training_batch_loop.py\", line 88, in advance\r\n    outputs = self.optimizer_loop.run(split_batch, optimizers, batch_idx)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\base.py\", line 204, in run\r\n    self.advance(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\optimization\\optimizer_loop.py\", line 203, in advance\r\n    result = self._run_optimization(\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\optimization\\optimizer_loop.py\", line 256, in _run_optimization\r\n    self._optimizer_step(optimizer, opt_idx, batch_idx, closure)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\optimization\\optimizer_loop.py\", line 369, in _optimizer_step\r\n    self.trainer._call_lightning_module_hook(\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 1593, in _call_lightning_module_hook\r\n    output = fn(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\core\\lightning.py\", line 1644, in optimizer_step\r\n    optimizer.step(closure=optimizer_closure)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\core\\optimizer.py\", line 168, in step\r\n    step_output = self._strategy.optimizer_step(self._optimizer, self._optimizer_idx, closure, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\strategies\\strategy.py\", line 193, in optimizer_step\r\n    return self.precision_plugin.optimizer_step(model, optimizer, opt_idx, closure, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\plugins\\precision\\precision_plugin.py\", line 155, in optimizer_step\r\n    return optimizer.step(closure=closure, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\torch\\optim\\optimizer.py\", line 88, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\torch\\autograd\\grad_mode.py\", line 27, in decorate_context\r\n    return func(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\torch\\optim\\adam.py\", line 100, in step\r\n    loss = closure()\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\plugins\\precision\\precision_plugin.py\", line 140, in _wrap_closure\r\n    closure_result = closure()\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\optimization\\optimizer_loop.py\", line 148, in __call__\r\n    self._result = self.closure(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\optimization\\optimizer_loop.py\", line 143, in closure\r\n    self._backward_fn(step_output.closure_loss)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\loops\\optimization\\optimizer_loop.py\", line 311, in backward_fn\r\n    self.trainer._call_strategy_hook(\"backward\", loss, optimizer, opt_idx)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 1763, in _call_strategy_hook\r\n    output = fn(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\strategies\\strategy.py\", line 168, in backward\r\n    self.precision_plugin.backward(self.lightning_module, closure_loss, *args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\plugins\\precision\\precision_plugin.py\", line 80, in backward\r\n    model.backward(closure_loss, optimizer, *args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\core\\lightning.py\", line 1389, in backward\r\n    loss.backward(*args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\torch\\_tensor.py\", line 363, in backward\r\n    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\torch\\autograd\\__init__.py\", line 173, in backward\r\n    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass\r\nRuntimeError: CUDA error: unspecified launch failure\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Jakub\\Desktop\\Enhanced_GNN_graph_classification\\main_gnn.py\", line 84, in <module>\r\n    best_params, test_metrics = perform_experiment(\r\n  File \"C:\\Users\\Jakub\\Desktop\\Enhanced_GNN_graph_classification\\main_gnn.py\", line 26, in perform_experiment\r\n    train_results: optuna.Study = optimize_and_train(\r\n  File \"C:\\Users\\Jakub\\Desktop\\Enhanced_GNN_graph_classification\\gnn\\training.py\", line 247, in optimize_and_train\r\n    study.optimize(objective, n_trials=n_hyperparam_trials)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\optuna\\study\\study.py\", line 400, in optimize\r\n    _optimize(\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\optuna\\study\\_optimize.py\", line 66, in _optimize\r\n    _optimize_sequential(\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\optuna\\study\\_optimize.py\", line 163, in _optimize_sequential\r\n    trial = _run_trial(study, func, catch)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\optuna\\study\\_optimize.py\", line 264, in _run_trial\r\n    raise func_err\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\optuna\\study\\_optimize.py\", line 213, in _run_trial\r\n    value_or_values = func(trial)\r\n  File \"C:\\Users\\Jakub\\Desktop\\Enhanced_GNN_graph_classification\\gnn\\training.py\", line 222, in objective\r\n    trainer.fit(model, datamodule=data_module)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 768, in fit\r\n    self._call_and_handle_interrupt(\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 736, in _call_and_handle_interrupt\r\n    self._teardown()\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\trainer\\trainer.py\", line 1298, in _teardown\r\n    self.strategy.teardown()\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\strategies\\single_device.py\", line 93, in teardown\r\n    super().teardown()\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\strategies\\strategy.py\", line 444, in teardown\r\n    optimizers_to_device(self.optimizers, torch.device(\"cpu\"))\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\optimizer.py\", line 27, in optimizers_to_device\r\n    optimizer_to_device(opt, device)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\optimizer.py\", line 33, in optimizer_to_device\r\n    optimizer.state[p] = apply_to_collection(v, torch.Tensor, move_data_to_device, device)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\apply_func.py\", line 107, in apply_to_collection\r\n    v = apply_to_collection(\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\apply_func.py\", line 99, in apply_to_collection\r\n    return function(data, *args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\apply_func.py\", line 354, in move_data_to_device\r\n    return apply_to_collection(batch, dtype=dtype, function=batch_to)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\apply_func.py\", line 99, in apply_to_collection\r\n    return function(data, *args, **kwargs)\r\n  File \"C:\\Users\\Jakub\\anaconda3\\envs\\Enhanced_GNN_graph_classification\\lib\\site-packages\\pytorch_lightning\\utilities\\apply_func.py\", line 347, in batch_to\r\n    data_output = data.to(device, **kwargs)\r\nRuntimeError: CUDA error: unspecified launch failure\r\n```\r\n\r\nI checked other models and problem persists for many models and many JK options, not only LSTM. Can this be a Pytorch Geometric problem, rather than PyTorch? All of this works on GTX 1666 Ti without any problems, using exactly the same version of Python, PyTorch, CUDA and CuDNN.\r\n\r\n\r\n### Environment\r\n\r\nPyTorch version: 1.11.0\r\nIs debug build: False\r\nCUDA used to build PyTorch: 11.3\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Microsoft Windows 10 Home\r\nGCC version: Could not collect\r\nClang version: Could not collect\r\nCMake version: Could not collect\r\nLibc version: N/A\r\n\r\nPython version: 3.10.4 | packaged by conda-forge | (main, Mar 30 2022, 08:38:02) [MSC v.1916 64 bit (AMD64)] (64-bit runtime)\r\nPython platform: Windows-10-10.0.19044-SP0\r\nIs CUDA available: True\r\nCUDA runtime version: 11.3.58\r\nGPU models and configuration: GPU 0: NVIDIA GeForce RTX 3080\r\nNvidia driver version: 511.79\r\ncuDNN version: C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.3\\bin\\cudnn_ops_train64_8.dll\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\nIs XNNPACK available: True\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.22.3\r\n[pip3] pytorch-lightning==1.6.4\r\n[pip3] torch==1.11.0\r\n[pip3] torch-cluster==1.6.0\r\n[pip3] torch-geometric==2.0.4\r\n[pip3] torch-scatter==2.0.9\r\n[pip3] torch-sparse==0.6.13\r\n[pip3] torch-spline-conv==1.2.1\r\n[pip3] torchmetrics==0.9.1\r\n[conda] blas 1.0 mkl\r\n[conda] cudatoolkit 11.3.1 h59b6b97_2\r\n[conda] mkl 2021.4.0 haa95532_640\r\n[conda] mkl-service 2.4.0 py310h2bbff1b_0\r\n[conda] mkl_fft 1.3.1 py310ha0764ea_0\r\n[conda] mkl_random 1.2.2 py310h4ed8f06_0\r\n[conda] numpy 1.22.3 py310h6d2d95c_0\r\n[conda] numpy-base 1.22.3 py310h206c741_0\r\n[conda] pyg 2.0.4 py310_torch_1.11.0_cu113 pyg\r\n[conda] pytorch 1.11.0 py3.10_cuda11.3_cudnn8_0 pytorch\r\n[conda] pytorch-cluster 1.6.0 py310_torch_1.11.0_cu113 pyg\r\n[conda] pytorch-lightning 1.6.4 pypi_0 pypi\r\n[conda] pytorch-mutex 1.0 cuda pytorch\r\n[conda] pytorch-scatter 2.0.9 py310_torch_1.11.0_cu113 pyg\r\n[conda] pytorch-sparse 0.6.13 py310_torch_1.11.0_cu113 pyg\r\n[conda] pytorch-spline-conv 1.2.1 py310_torch_1.11.0_cu113 pyg\r\n[conda] torchmetrics 0.9.1 pypi_0 pypi", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4811/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4809", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4809/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4809/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4809/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4809", "id": 1271953921, "node_id": "I_kwDOBlHMec5L0HoB", "number": 4809, "title": "TypeError: global_add_pool() missing 1 required positional argument: 'batch'", "user": {"login": "Rajjaa", "id": 13113450, "node_id": "MDQ6VXNlcjEzMTEzNDUw", "avatar_url": "https://avatars.githubusercontent.com/u/13113450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rajjaa", "html_url": "https://github.com/Rajjaa", "followers_url": "https://api.github.com/users/Rajjaa/followers", "following_url": "https://api.github.com/users/Rajjaa/following{/other_user}", "gists_url": "https://api.github.com/users/Rajjaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rajjaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rajjaa/subscriptions", "organizations_url": "https://api.github.com/users/Rajjaa/orgs", "repos_url": "https://api.github.com/users/Rajjaa/repos", "events_url": "https://api.github.com/users/Rajjaa/events{/privacy}", "received_events_url": "https://api.github.com/users/Rajjaa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-06-15T09:36:02Z", "updated_at": "2022-06-20T12:20:33Z", "closed_at": "2022-06-20T12:20:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nThe documentation of `global_add_pool ` states that the batch parameter is optional, however I get this error ```TypeError: global_add_pool() missing 1 required positional argument: 'batch'``` when I don't pass a value for the batch. \r\n\r\nHere is a snippet of code to reproduce the bug:\r\n```Python\r\nimport torch\r\nfrom torch_geometric.nn import global_add_pool\r\nx = torch.zeros(4,5)\r\nz = global_add_pool(x)\r\n```\r\n\r\nI think the origin of the issue is the absence of a default value for the batch parameter in the definition of `global_add_pool`.\r\nAnd the same bug happens when using `global_mean_pool` or `global_max_pool`.\n\n### Environment\n\n* PyG version: 2.0.5\r\n* PyTorch version: 1.11.0\r\n* OS:  Fedora release 35\r\n* Python version: 3.9\r\n* CUDA/cuDNN version: 11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): Poetry\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4809/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4809/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4805", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4805/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4805/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4805/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4805", "id": 1271122345, "node_id": "PR_kwDOBlHMec45pm1k", "number": 4805, "title": "Add type hints and TorchScript support to `JumpingKnowledge`", "user": {"login": "will-leeson", "id": 21344599, "node_id": "MDQ6VXNlcjIxMzQ0NTk5", "avatar_url": "https://avatars.githubusercontent.com/u/21344599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/will-leeson", "html_url": "https://github.com/will-leeson", "followers_url": "https://api.github.com/users/will-leeson/followers", "following_url": "https://api.github.com/users/will-leeson/following{/other_user}", "gists_url": "https://api.github.com/users/will-leeson/gists{/gist_id}", "starred_url": "https://api.github.com/users/will-leeson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/will-leeson/subscriptions", "organizations_url": "https://api.github.com/users/will-leeson/orgs", "repos_url": "https://api.github.com/users/will-leeson/repos", "events_url": "https://api.github.com/users/will-leeson/events{/privacy}", "received_events_url": "https://api.github.com/users/will-leeson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "will-leeson", "id": 21344599, "node_id": "MDQ6VXNlcjIxMzQ0NTk5", "avatar_url": "https://avatars.githubusercontent.com/u/21344599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/will-leeson", "html_url": "https://github.com/will-leeson", "followers_url": "https://api.github.com/users/will-leeson/followers", "following_url": "https://api.github.com/users/will-leeson/following{/other_user}", "gists_url": "https://api.github.com/users/will-leeson/gists{/gist_id}", "starred_url": "https://api.github.com/users/will-leeson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/will-leeson/subscriptions", "organizations_url": "https://api.github.com/users/will-leeson/orgs", "repos_url": "https://api.github.com/users/will-leeson/repos", "events_url": "https://api.github.com/users/will-leeson/events{/privacy}", "received_events_url": "https://api.github.com/users/will-leeson/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "will-leeson", "id": 21344599, "node_id": "MDQ6VXNlcjIxMzQ0NTk5", "avatar_url": "https://avatars.githubusercontent.com/u/21344599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/will-leeson", "html_url": "https://github.com/will-leeson", "followers_url": "https://api.github.com/users/will-leeson/followers", "following_url": "https://api.github.com/users/will-leeson/following{/other_user}", "gists_url": "https://api.github.com/users/will-leeson/gists{/gist_id}", "starred_url": "https://api.github.com/users/will-leeson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/will-leeson/subscriptions", "organizations_url": "https://api.github.com/users/will-leeson/orgs", "repos_url": "https://api.github.com/users/will-leeson/repos", "events_url": "https://api.github.com/users/will-leeson/events{/privacy}", "received_events_url": "https://api.github.com/users/will-leeson/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-06-14T17:25:06Z", "updated_at": "2022-06-15T15:01:43Z", "closed_at": "2022-06-15T15:01:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4805", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4805", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4805.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4805.patch", "merged_at": "2022-06-15T15:01:43Z"}, "body": "When attempting to serialize a model with a JumpingKnowledge layer using `torch.jit.script`, I would receive an error due to the lack of typing. In order to type them, I removed the ability to pass a tuple of tensors in, since Torch Script seems to only allow tuples of a set size (I could be wrong, please correct me if possible)\r\n\r\nTorch also complained that `self.lstm` and `self.att` didn't exist, so I moved them out of the if statement in `__init__`.  Once again, if there is a way to allow this, please correct me.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4805/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4800", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4800/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4800/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4800/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4800", "id": 1269357130, "node_id": "PR_kwDOBlHMec45js94", "number": 4800, "title": "Fix `DimeNetPlusPlus` test", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-06-13T12:21:57Z", "updated_at": "2022-06-13T12:22:45Z", "closed_at": "2022-06-13T12:22:45Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4800", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4800", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4800.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4800.patch", "merged_at": "2022-06-13T12:22:45Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4800/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4783", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4783/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4783/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4783/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4783", "id": 1264580922, "node_id": "I_kwDOBlHMec5LX_k6", "number": 4783, "title": "Dataloader get wrong batch size of graphs", "user": {"login": "JueXiuHuang", "id": 32955131, "node_id": "MDQ6VXNlcjMyOTU1MTMx", "avatar_url": "https://avatars.githubusercontent.com/u/32955131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JueXiuHuang", "html_url": "https://github.com/JueXiuHuang", "followers_url": "https://api.github.com/users/JueXiuHuang/followers", "following_url": "https://api.github.com/users/JueXiuHuang/following{/other_user}", "gists_url": "https://api.github.com/users/JueXiuHuang/gists{/gist_id}", "starred_url": "https://api.github.com/users/JueXiuHuang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JueXiuHuang/subscriptions", "organizations_url": "https://api.github.com/users/JueXiuHuang/orgs", "repos_url": "https://api.github.com/users/JueXiuHuang/repos", "events_url": "https://api.github.com/users/JueXiuHuang/events{/privacy}", "received_events_url": "https://api.github.com/users/JueXiuHuang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-06-08T11:13:43Z", "updated_at": "2022-06-09T08:45:59Z", "closed_at": "2022-06-09T08:45:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nI'm trying to calculate the attention between graph and sequences (text). But I found that when I set batch_size to 4, in some batches it will only have 3 graphs, and all other batches will contain 4 graphs (or just like the number of the sequences).\r\n\r\nBelow is my code and I simplify some unrelated part.\r\n\r\n```\r\nclass GraphDataset(PyGDataset):\r\n    def __init__(self, root=None, onehop=None, flag='train', transform=None, pre_transform=None):\r\n        \"\"\"\r\n        root = Where the dataset should be stored. This folder is split\r\n        into raw_dir (downloaded dataset) and processed_dir (processed data). \r\n        \"\"\"\r\n        self.dataDir = root\r\n        self.onehop = onehop\r\n        self.flag = flag\r\n        \r\n        self.realRoot = os.path.join(root, flag)\r\n        p = os.path.join(self.realRoot, onehop)\r\n        self.reader = self.onehop_reader(p)\r\n        \r\n        super(GraphDataset, self).__init__(self.realRoot, transform, pre_transform)\r\n        \r\n    def onehop_reader(self, path):\r\n        for line in open(path, \"r\"):\r\n            yield line\r\n    \r\n    @property\r\n    def raw_file_names(self):\r\n        return self.onehop\r\n    \r\n    @property\r\n    def processed_file_names(self):\r\n        self.lineNum = int(next(self.reader))\r\n        return [f'data_{i}.pt' for i in range(self.lineNum)]\r\n    \r\n    def download(self):\r\n        pass\r\n    \r\n    def load_node_and_adj(self, onehop):\r\n        # This will return a Data object\r\n        return g\r\n    \r\n    def process(self):\r\n        for index, data in enumerate(tqdm(self.reader, total=self.lineNum)):\r\n            onehop = json.loads(data)\r\n            result = self.load_node_and_adj(onehop)\r\n            \r\n            torch.save(result, os.path.join(self.processed_dir, f'data_{index}.pt'))\r\n        \r\n    def len(self):\r\n        return self.lineNum\r\n    \r\n    def get(self, idx):\r\n        data = torch.load(os.path.join(self.processed_dir, f'data_{idx}.pt'))\r\n        return data\r\n\r\nclass Model():\r\n    def __init__(self):\r\n        self.embedding = nn.Embedding(50000, 768)\r\n        self.gat = GATConv(200, 200, heads=2, dropout=0.2, edge_dim=200,\r\n                           concat=False, add_self_loops=False)\r\n        self.linear1 = nn.Linear(200, 1024)\r\n        self.linear2 = nn.Linear(1024, 200)\r\n        self.cross_attn = nn.MultiheadAttention(embed_dim=768,\r\n                                                num_heads=2,\r\n                                                kdim=200,\r\n                                                vdim=200,\r\n                                                batch_first=True)\r\n\r\n    def forward(self, srcidx, graph):\r\n        src = self.embedding(srcidx)\r\n        graph.x = self.gat(graph.x, graph.edge_index, graph.edge_attr)\r\n        graph.x = self.linear1(graph.x)\r\n        graph.x = F.relu(graph.x)\r\n        graph.x = self.linear2(graph.x)\r\n        graph.x = F.relu(graph.x)\r\n        # graph.x.shape >>> torch.Size([1080, 200])\r\n        # src.shape >>> torch.Size([4, 128, 768])\r\n\r\n        dbx, _ = torch_geometric.utils.to_dense_batch(graph.x, batch=graph.batch)\r\n        # dbx.shape >>> torch.Size([3, 605, 200])\r\n        attn_out = self.cross_attn(src, dbx, dbx, need_weights=False)[0]\r\n        \r\n        return src\r\n\r\ntrainloader_t = torch.utils.data.DataLoader(train_text_dataset, batch_size=batch_size)\r\ntrain_graph_dataset = GraphDataset(root=dataset_dir,\r\n                                       onehop=train_onehop,\r\n                                       flag='train')\r\ntrainloader_g = torch_geometric.loader.DataLoader(test_graph_dataset, batch_size=batch_size)\r\n\r\nfor bid, (graph, text) in enumerate(zip(trainloader_g, trainloader_t)):\r\n    srcidx = text['srcidx'].to(device)\r\n    graph = graph.to(device)\r\n    logits = model(srcidx, graph)\r\n```\r\n\r\nbelow is the error message:\r\n\r\n> Traceback (most recent call last):\r\n>   File \"main.py\", line 455, in <module>\r\n>     logits = model(graph, srcidx, srcmsk, tgtidx[:, :-1], tgtmsk[:, :-1])\r\n>   File \"/opt/conda/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 1102, in _call_impl\r\n>     return forward_call(*input, **kwargs)\r\n>   File \"main.py\", line 333, in forward\r\n>     src = self.kae(src, dbx)\r\n>   File \"/opt/conda/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 1102, in _call_impl\r\n>     return forward_call(*input, **kwargs)\r\n>   File \"main.py\", line 291, in forward\r\n>     attn_out = self.cross_attn(src, x, x, need_weights=False)[0]\r\n>   File \"/opt/conda/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 1102, in _call_impl\r\n>     return forward_call(*input, **kwargs)\r\n>   File \"/opt/conda/lib/python3.7/site-packages/torch/nn/modules/activation.py\", line 1001, in forward\r\n>     v_proj_weight=self.v_proj_weight)\r\n>   File \"/opt/conda/lib/python3.7/site-packages/torch/nn/functional.py\", line 5044, in multi_head_attention_forward\r\n>     k = k.contiguous().view(k.shape[0], bsz * num_heads, head_dim).transpose(0, 1)\r\n> RuntimeError: shape '[605, 8, 384]' is invalid for input of size 1393920\r\n\r\n### Environment\r\n\r\n* PyG version: 2.0.4\r\n* PyTorch version: 1.10.0\r\n* OS: Linux\r\n* Python version: 1.10.0\r\n* CUDA/cuDNN version: cuda11.3-cudnn8\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4783/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4780", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4780/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4780/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4780/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4780", "id": 1264361581, "node_id": "I_kwDOBlHMec5LXKBt", "number": 4780, "title": "Installation torch-geometric using pip (ERROR: Could not find a version that satisfies the requirement torch-geometric)", "user": {"login": "taew0361", "id": 105839531, "node_id": "U_kgDOBk77qw", "avatar_url": "https://avatars.githubusercontent.com/u/105839531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taew0361", "html_url": "https://github.com/taew0361", "followers_url": "https://api.github.com/users/taew0361/followers", "following_url": "https://api.github.com/users/taew0361/following{/other_user}", "gists_url": "https://api.github.com/users/taew0361/gists{/gist_id}", "starred_url": "https://api.github.com/users/taew0361/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taew0361/subscriptions", "organizations_url": "https://api.github.com/users/taew0361/orgs", "repos_url": "https://api.github.com/users/taew0361/repos", "events_url": "https://api.github.com/users/taew0361/events{/privacy}", "received_events_url": "https://api.github.com/users/taew0361/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-06-08T08:08:49Z", "updated_at": "2022-06-09T01:09:13Z", "closed_at": "2022-06-09T01:09:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nTo install torch-geometric using pip with 'pip install torch-geometric' or 'pip install torch-geometric -f https://pytorch-geometric.com/whl/torch-1.8.1+cu111.html', but the following error is appeared\r\n\r\nERROR: Could not find a version that satisfies the requirement torch-geometric (from versions: none)\r\n\r\nI tried to find relevant torch-geometric in \r\n'https://data.pyg.org/whl/torch-${TORCH}+${CUDA}.html' or \r\n'https://pytorch-geometric.com/whl/torch-${TORCH}+${CUDA}.html', \r\n\r\nbut any torch-geometric file is not appeared in those links.\r\n\r\nCould help me to install torch-geometric using pip?\r\n\r\nThanks a lot!\r\n\r\n\r\n\r\n\n\n### Environment\n\n* PyTorch version: 1.8.1\r\n* OS: Ubuntu 16.04.7\r\n* Python version: 3.8\r\n* CUDA/cuDNN version: 11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip3\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): torch-sparse==0.6.9 torch-scatter==2.0.6 \r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4780/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4774", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4774/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4774/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4774/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4774", "id": 1262621267, "node_id": "I_kwDOBlHMec5LQhJT", "number": 4774, "title": "After installation, Generate many redundant error files [.dmp]", "user": {"login": "CoincidenceBoy", "id": 74010838, "node_id": "MDQ6VXNlcjc0MDEwODM4", "avatar_url": "https://avatars.githubusercontent.com/u/74010838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CoincidenceBoy", "html_url": "https://github.com/CoincidenceBoy", "followers_url": "https://api.github.com/users/CoincidenceBoy/followers", "following_url": "https://api.github.com/users/CoincidenceBoy/following{/other_user}", "gists_url": "https://api.github.com/users/CoincidenceBoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/CoincidenceBoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CoincidenceBoy/subscriptions", "organizations_url": "https://api.github.com/users/CoincidenceBoy/orgs", "repos_url": "https://api.github.com/users/CoincidenceBoy/repos", "events_url": "https://api.github.com/users/CoincidenceBoy/events{/privacy}", "received_events_url": "https://api.github.com/users/CoincidenceBoy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-06-07T01:55:24Z", "updated_at": "2022-10-04T13:16:18Z", "closed_at": "2022-10-04T13:16:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nMeasured at pycharm 2022.1.2 and 2022.1.1 , Any python supported version,  use 'conda install pyg -c pyg'  installation and operation,  **Windows error report appears**,  This results in a sharp increase in Disk C space, each .tmp file has several G.\r\n\r\n1. The reason why I believe that pyg is the problem is that I created a pure pytorch environment in **conda** and ran the corresponding test code after rebooting. There will be no similar situation. And the new environment (install pyg) is a clone of the old environment (pytorch)\r\n2. It could also be a compiler problem.  [pycharm] I don't know.\r\n\r\nSolutions:\r\n\r\n- Windows + R, input **services.msc**, then find **Windows Error Reporting Service** and make it Disable !\r\n\r\n\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.11.0\r\n* OS: windows 11 \u5bb6\u5ead\u7248\r\n* Python version: 3.9, 3.8, 3.7\r\n* CUDA/cuDNN version: 11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): use 'conda install pyg -c pyg'\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4774/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4757", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4757/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4757/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4757/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4757", "id": 1257963758, "node_id": "PR_kwDOBlHMec449w10", "number": 4757, "title": "`RandomLinkSplit`: Allow `edge_type == rev_edge_type`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052698076, "node_id": "LA_kwDOBlHMec7xj0Pc", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/transform", "name": "transform", "color": "480283", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-06-02T09:58:35Z", "updated_at": "2022-06-02T10:03:56Z", "closed_at": "2022-06-02T10:03:56Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4757", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4757", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4757.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4757.patch", "merged_at": "2022-06-02T10:03:56Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4757/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4755", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4755/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4755/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4755/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4755", "id": 1257931678, "node_id": "PR_kwDOBlHMec449p-E", "number": 4755, "title": "Tutorial: Add the `bias` vector to the `GCN` model definition", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-06-02T09:28:31Z", "updated_at": "2022-06-02T09:34:24Z", "closed_at": "2022-06-02T09:34:23Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4755", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4755", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4755.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4755.patch", "merged_at": "2022-06-02T09:34:23Z"}, "body": "Fixes https://github.com/pyg-team/pytorch_geometric/discussions/4680", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4755/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4754", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4754/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4754/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4754/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4754", "id": 1257912656, "node_id": "PR_kwDOBlHMec449l5Q", "number": 4754, "title": "Fix numerical instability in `GeneralConv` and `neighbor_sample` tests", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-06-02T09:11:15Z", "updated_at": "2022-06-02T09:34:46Z", "closed_at": "2022-06-02T09:34:45Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4754", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4754", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4754.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4754.patch", "merged_at": "2022-06-02T09:34:45Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4754/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4753", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4753/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4753/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4753/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4753", "id": 1257901077, "node_id": "PR_kwDOBlHMec449jbU", "number": 4753, "title": "Fix `HANConv` propagation", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-06-02T09:00:39Z", "updated_at": "2022-06-02T09:05:33Z", "closed_at": "2022-06-02T09:05:32Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4753", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4753", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4753.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4753.patch", "merged_at": "2022-06-02T09:05:32Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4753/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4752", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4752/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4752/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4752/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4752", "id": 1257795032, "node_id": "I_kwDOBlHMec5K-G3Y", "number": 4752, "title": "questions about HANConv's \"message\" function", "user": {"login": "dandelie1998", "id": 41227932, "node_id": "MDQ6VXNlcjQxMjI3OTMy", "avatar_url": "https://avatars.githubusercontent.com/u/41227932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dandelie1998", "html_url": "https://github.com/dandelie1998", "followers_url": "https://api.github.com/users/dandelie1998/followers", "following_url": "https://api.github.com/users/dandelie1998/following{/other_user}", "gists_url": "https://api.github.com/users/dandelie1998/gists{/gist_id}", "starred_url": "https://api.github.com/users/dandelie1998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dandelie1998/subscriptions", "organizations_url": "https://api.github.com/users/dandelie1998/orgs", "repos_url": "https://api.github.com/users/dandelie1998/repos", "events_url": "https://api.github.com/users/dandelie1998/events{/privacy}", "received_events_url": "https://api.github.com/users/dandelie1998/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-06-02T07:21:59Z", "updated_at": "2022-06-02T09:05:32Z", "closed_at": "2022-06-02T09:05:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nActually, it's not a bug ,but I think HANConv doesn't match the origin idea of the origin paper.\r\n![image](https://user-images.githubusercontent.com/41227932/171573219-6dbce902-f691-4609-a8b2-5a7b794623f3.png)\r\n- First, in about line 138-143, the code sends x_dst to function \"propagate\", but from my perspective, sends \"x_src\" makes more sense.But since the origin paper uses metapath therefore there's only one type of node, and x_src and x_dst are the same, so it's ok.\r\n\r\n![image](https://user-images.githubusercontent.com/41227932/171573366-27765126-6c97-4817-b366-892ecd0f2064.png)\r\n - Second and most important, In line 168, the \"message\" funtion of HANConv, when calculate the message every edge carried, the code uses x_dst_i, but I think maybe it's **x_dst_j** ? Since in origin paper, the node-level attention is the same as GAT:\r\n![image](https://user-images.githubusercontent.com/41227932/171573487-9bbbfbdf-016a-4524-8988-ad92570c3c9b.png)\r\n\r\nI just change the x_dst_i to x_dst_j, and in the official example of han, I get a better test score about  0.55:\r\n![image](https://user-images.githubusercontent.com/41227932/171573954-bf731e99-64be-4390-bdb3-f421912ca76e.png)\r\n\r\nI'm new to GNN and I'm using HAN to do some experiment, but when I try to do some changes in HANConv, I discovered these two problems mentioned above. Please let me know if is's just my misunderstanding.\n\n### Environment\n\n* PyG version: 2.0.3\r\n* PyTorch version: 1.10.1\r\n* OS: MAC OS\r\n* Python version: 3.8\r\n* CUDA/cuDNN version:  not using\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):  conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): \r\n- the origin paper link -- http://140.122.184.128/presentation/19-05-06/Heterogeneous%20graph%20attention%20network.pdf\r\n- the official example of han -- https://github.com/pyg-team/pytorch_geometric/blob/master/examples/hetero/han_imdb.py", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4752/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4751", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4751/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4751/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4751/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4751", "id": 1257786013, "node_id": "PR_kwDOBlHMec449LPi", "number": 4751, "title": "CI: Fix versions of `checkout` and `setup-python`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-06-02T07:12:42Z", "updated_at": "2022-06-02T07:19:46Z", "closed_at": "2022-06-02T07:19:45Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4751", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4751", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4751.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4751.patch", "merged_at": "2022-06-02T07:19:45Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4751/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4725", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4725/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4725/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4725/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4725", "id": 1250043018, "node_id": "I_kwDOBlHMec5KgiSK", "number": 4725, "title": "Batch.from_data_list() internal call returning None args for Data object", "user": {"login": "cwfparsonson", "id": 44027665, "node_id": "MDQ6VXNlcjQ0MDI3NjY1", "avatar_url": "https://avatars.githubusercontent.com/u/44027665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cwfparsonson", "html_url": "https://github.com/cwfparsonson", "followers_url": "https://api.github.com/users/cwfparsonson/followers", "following_url": "https://api.github.com/users/cwfparsonson/following{/other_user}", "gists_url": "https://api.github.com/users/cwfparsonson/gists{/gist_id}", "starred_url": "https://api.github.com/users/cwfparsonson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cwfparsonson/subscriptions", "organizations_url": "https://api.github.com/users/cwfparsonson/orgs", "repos_url": "https://api.github.com/users/cwfparsonson/repos", "events_url": "https://api.github.com/users/cwfparsonson/events{/privacy}", "received_events_url": "https://api.github.com/users/cwfparsonson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-05-26T20:37:21Z", "updated_at": "2022-05-27T07:43:40Z", "closed_at": "2022-05-27T07:43:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nI have a `list` of objects which inherit from `torch_geometric.data.data.Data`. When I call `Batch.from_data_list()` on this list of `Data` objects, I get the following error message:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"scripts/dqn_trainer.py\", line 415, in <module>\r\n    learner.train(int(5e6)) # 5e5 100 500\r\n  File \"/home/zciccwf/phd_project/projects/retro_branching/retro_branching/src/learners/dqn_learner.py\", line 2178, in train                                                                              \r\n    self.step_optimizer(use_cer=self.use_cer)\r\n  File \"/home/zciccwf/phd_project/projects/retro_branching/retro_branching/src/learners/dqn_learner.py\", line 1630, in step_optimizer                                                                     \r\n    loss, stats = self.accumulate_gradients(use_cer)\r\n  File \"/home/zciccwf/phd_project/projects/retro_branching/retro_branching/src/learners/dqn_learner.py\", line 1220, in accumulate_gradients                                                               \r\n    state, action, reward, done, next_state, n_step_return, n_step_state, n, n_step_done, indices, importance_sampling_weights = self.buffer.sample(batch_size=self.batch_size, use_cer=use_cer, per_beta=self.get_per_beta())\r\n  File \"/home/zciccwf/phd_project/projects/retro_branching/retro_branching/src/learners/dqn_learner.py\", line 641, in sample                                                                              \r\n    return (Batch.from_data_list(state),\r\n  File \"/scratch/zciccwf/py36/envs/rlgnn/lib/python3.7/site-packages/torch_geometric/data/batch.py\", line 74, in from_data_list                                                                           \r\n    exclude_keys=exclude_keys,\r\n  File \"/scratch/zciccwf/py36/envs/rlgnn/lib/python3.7/site-packages/torch_geometric/data/collate.py\", line 32, in collate                                                                                \r\n    out = cls(_base_cls=data_list[0].__class__)  # Dynamic inheritance.\r\n  File \"/scratch/zciccwf/py36/envs/rlgnn/lib/python3.7/site-packages/torch_geometric/data/batch.py\", line 40, in __call__                                                                                 \r\n    return super(DynamicInheritance, new_cls).__call__(*args, **kwargs)\r\n  File \"/home/zciccwf/phd_project/projects/retro_branching/retro_branching/src/learners/dqn_learner.py\", line 337, in __init__                                                                            \r\n    self.constraint_features = torch.FloatTensor(constraint_features)\r\nTypeError: new(): data must be a sequence (got NoneType)\r\n```\r\n\r\nIt seems that internally `Batch.from_data_list()` is trying to initialise a `Data` object from my `Data` class, but the args used to initialise `Data` seem to be `None`. \r\n\r\nThis code previously worked with `pytorch_geometric=1.7.0` but no longer seems to work with `pytorch_geometric=2.0.4` (although I have updated other modules such as `torch`, `numpy`, etc.). It's part of a fairly large project so I'm currently working on making a minimal working example to reproduce this error and will post it here as soon as I do. In the mean time, I wanted to ask if there is any obvious quick fix.\r\n\r\nMy `Data` class is defined as:\r\n\r\n```python\r\nclass BipartiteNodeData(torch_geometric.data.Data):\r\n    \"\"\"\r\n    This class encode a node bipartite graph observation as returned by the `ecole.observation.NodeBipartite` \r\n    observation function in a format understood by the pytorch geometric data handlers.\r\n    \"\"\"\r\n    def __init__(self, constraint_features, edge_index, edge_features, variable_features, candidates):\r\n        super().__init__()\r\n        self.constraint_features = torch.FloatTensor(constraint_features)\r\n        self.edge_index = torch.LongTensor(edge_index)\r\n        self.edge_attr = torch.from_numpy(edge_features).unsqueeze(1)\r\n        self.variable_features = torch.FloatTensor(variable_features)\r\n        self.candidates = torch.from_numpy(candidates).long()\r\n        self.raw_candidates = torch.from_numpy(candidates).long()\r\n        \r\n        self.num_candidates = len(candidates)\r\n        self.num_variables = self.variable_features.size(0)\r\n        self.num_nodes = self.constraint_features.size(0) + self.variable_features.size(0)\r\n\r\n    def __inc__(self, key, value):\r\n        \"\"\"\r\n        We overload the pytorch geometric method that tells how to increment indices when concatenating graphs \r\n        for those entries (edge index, candidates) for which this is not obvious. This\r\n        enables batching.\r\n        \"\"\"\r\n        if key == 'edge_index':\r\n            # constraint nodes connected via edge to variable nodes\r\n            return torch.tensor([[self.constraint_features.size(0)], [self.variable_features.size(0)]])\r\n        elif key == 'candidates':\r\n            # actions are variable nodes\r\n            return self.variable_features.size(0)\r\n        else:\r\n            return super().__inc__(key, value)\r\n```\r\n\r\nThe list of initialised `Data` objects being passed to `Batch.from_data_list()` does not have any `None` values:\r\n\r\n```\r\n[BipartiteNodeData(constraint_features=[166, 5], edge_index=[2, 5746], edge_attr=[5746, 1], variable_features=[227, 43], candidates=[58], raw_candidates=[58], num_candidates=58, num_variables=227, num_nodes=393), BipartiteNodeData(constraint_features=[151, 5], edge_index=[2, 3818], edge_attr=[3818, 1], variable_features=[228, 43], candidates=[47], raw_candidates=[47], num_candidates=47, num_variables=228, num_nodes=379)]\r\n\r\n```\r\n\r\nAny help would be much appreciated!\r\n\r\n### Environment\r\n\r\n* PyG version: 2.0.4\r\n* PyTorch version: 1.10.0\r\n* OS: CentOS 8\r\n* Python version: 3.7.1\r\n* CUDA/cuDNN version: 11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): pytorch-cluster=1.6.0 pytorch-mutex=1.0 pytorch-scatter=0.6.13 pytorch-sparse=0.6.13 pytorch-spline-conv=1.2.1\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4725/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4725/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4719", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4719/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4719/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4719/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4719", "id": 1249553919, "node_id": "PR_kwDOBlHMec44hTRb", "number": 4719, "title": "Fix `protobuf` version", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 1267385339, "node_id": "MDU6TGFiZWwxMjY3Mzg1MzM5", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/installation", "name": "installation", "color": "bfdadc", "default": false, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-05-26T13:11:37Z", "updated_at": "2022-05-26T13:17:21Z", "closed_at": "2022-05-26T13:17:20Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4719", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4719", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4719.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4719.patch", "merged_at": "2022-05-26T13:17:20Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4719/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4715", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4715/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4715/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4715/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4715", "id": 1248329476, "node_id": "PR_kwDOBlHMec44dR4c", "number": 4715, "title": "Fix errors of the `RevGNN` example", "user": {"login": "lightaime", "id": 23632352, "node_id": "MDQ6VXNlcjIzNjMyMzUy", "avatar_url": "https://avatars.githubusercontent.com/u/23632352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lightaime", "html_url": "https://github.com/lightaime", "followers_url": "https://api.github.com/users/lightaime/followers", "following_url": "https://api.github.com/users/lightaime/following{/other_user}", "gists_url": "https://api.github.com/users/lightaime/gists{/gist_id}", "starred_url": "https://api.github.com/users/lightaime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lightaime/subscriptions", "organizations_url": "https://api.github.com/users/lightaime/orgs", "repos_url": "https://api.github.com/users/lightaime/repos", "events_url": "https://api.github.com/users/lightaime/events{/privacy}", "received_events_url": "https://api.github.com/users/lightaime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017636777, "node_id": "LA_kwDOBlHMec7veEWp", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/example", "name": "example", "color": "27D88A", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "lightaime", "id": 23632352, "node_id": "MDQ6VXNlcjIzNjMyMzUy", "avatar_url": "https://avatars.githubusercontent.com/u/23632352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lightaime", "html_url": "https://github.com/lightaime", "followers_url": "https://api.github.com/users/lightaime/followers", "following_url": "https://api.github.com/users/lightaime/following{/other_user}", "gists_url": "https://api.github.com/users/lightaime/gists{/gist_id}", "starred_url": "https://api.github.com/users/lightaime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lightaime/subscriptions", "organizations_url": "https://api.github.com/users/lightaime/orgs", "repos_url": "https://api.github.com/users/lightaime/repos", "events_url": "https://api.github.com/users/lightaime/events{/privacy}", "received_events_url": "https://api.github.com/users/lightaime/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lightaime", "id": 23632352, "node_id": "MDQ6VXNlcjIzNjMyMzUy", "avatar_url": "https://avatars.githubusercontent.com/u/23632352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lightaime", "html_url": "https://github.com/lightaime", "followers_url": "https://api.github.com/users/lightaime/followers", "following_url": "https://api.github.com/users/lightaime/following{/other_user}", "gists_url": "https://api.github.com/users/lightaime/gists{/gist_id}", "starred_url": "https://api.github.com/users/lightaime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lightaime/subscriptions", "organizations_url": "https://api.github.com/users/lightaime/orgs", "repos_url": "https://api.github.com/users/lightaime/repos", "events_url": "https://api.github.com/users/lightaime/events{/privacy}", "received_events_url": "https://api.github.com/users/lightaime/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-05-25T15:59:54Z", "updated_at": "2022-05-25T16:06:07Z", "closed_at": "2022-05-25T16:06:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4715", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4715", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4715.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4715.patch", "merged_at": "2022-05-25T16:06:06Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4715/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4702", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4702/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4702/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4702/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4702", "id": 1246119090, "node_id": "PR_kwDOBlHMec44V7uK", "number": 4702, "title": "Fix: `is_sorted` argument in `NeighborLoader`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-05-24T07:41:00Z", "updated_at": "2022-05-24T07:46:40Z", "closed_at": "2022-05-24T07:46:39Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4702", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4702", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4702.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4702.patch", "merged_at": "2022-05-24T07:46:39Z"}, "body": "Fixes:\r\n```\r\n>           colptr = torch.ops.torch_sparse.ind2ptr(col[perm], size[1])\r\nE           UnboundLocalError: local variable 'size' referenced before assignment\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4702/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4701", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4701/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4701/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4701/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4701", "id": 1246040170, "node_id": "PR_kwDOBlHMec44VrDH", "number": 4701, "title": "`RevGNN`: Fix Python 3.7 tests", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-05-24T06:17:41Z", "updated_at": "2022-05-24T06:26:35Z", "closed_at": "2022-05-24T06:26:35Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4701", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4701", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4701.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4701.patch", "merged_at": "2022-05-24T06:26:35Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4701/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4688", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4688/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4688/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4688/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4688", "id": 1243573375, "node_id": "PR_kwDOBlHMec44Nnrn", "number": 4688, "title": "Fix rank computation in the RGCN link prediction example", "user": {"login": "migalkin", "id": 4430986, "node_id": "MDQ6VXNlcjQ0MzA5ODY=", "avatar_url": "https://avatars.githubusercontent.com/u/4430986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/migalkin", "html_url": "https://github.com/migalkin", "followers_url": "https://api.github.com/users/migalkin/followers", "following_url": "https://api.github.com/users/migalkin/following{/other_user}", "gists_url": "https://api.github.com/users/migalkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/migalkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/migalkin/subscriptions", "organizations_url": "https://api.github.com/users/migalkin/orgs", "repos_url": "https://api.github.com/users/migalkin/repos", "events_url": "https://api.github.com/users/migalkin/events{/privacy}", "received_events_url": "https://api.github.com/users/migalkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017636777, "node_id": "LA_kwDOBlHMec7veEWp", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/example", "name": "example", "color": "27D88A", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "migalkin", "id": 4430986, "node_id": "MDQ6VXNlcjQ0MzA5ODY=", "avatar_url": "https://avatars.githubusercontent.com/u/4430986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/migalkin", "html_url": "https://github.com/migalkin", "followers_url": "https://api.github.com/users/migalkin/followers", "following_url": "https://api.github.com/users/migalkin/following{/other_user}", "gists_url": "https://api.github.com/users/migalkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/migalkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/migalkin/subscriptions", "organizations_url": "https://api.github.com/users/migalkin/orgs", "repos_url": "https://api.github.com/users/migalkin/repos", "events_url": "https://api.github.com/users/migalkin/events{/privacy}", "received_events_url": "https://api.github.com/users/migalkin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "migalkin", "id": 4430986, "node_id": "MDQ6VXNlcjQ0MzA5ODY=", "avatar_url": "https://avatars.githubusercontent.com/u/4430986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/migalkin", "html_url": "https://github.com/migalkin", "followers_url": "https://api.github.com/users/migalkin/followers", "following_url": "https://api.github.com/users/migalkin/following{/other_user}", "gists_url": "https://api.github.com/users/migalkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/migalkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/migalkin/subscriptions", "organizations_url": "https://api.github.com/users/migalkin/orgs", "repos_url": "https://api.github.com/users/migalkin/repos", "events_url": "https://api.github.com/users/migalkin/events{/privacy}", "received_events_url": "https://api.github.com/users/migalkin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-05-20T20:10:28Z", "updated_at": "2022-05-20T23:02:12Z", "closed_at": "2022-05-20T23:02:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4688", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4688", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4688.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4688.patch", "merged_at": "2022-05-20T23:02:12Z"}, "body": "This PR fixes a common problem in the ranking protocol of KG link prediction models. \r\n\r\nRight now, the script puts the true prediction at the very start of the entities lists to rank:\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/9761ccf4bfd42277b190bf6242307307d4d8d9eb/examples/rgcn_link_pred.py#L132\r\n\r\nThen, the script is doing `argsort` over model scores:\r\n\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/9761ccf4bfd42277b190bf6242307307d4d8d9eb/examples/rgcn_link_pred.py#L138-L139\r\n\r\nHere is the problem: \r\nWhen a model returns exactly the same scores for the true and other entities in the list, the ranking becomes incorrect - that is, overly optimistic. This behavior was identified in the [Sun et al ACL 2020 paper](https://aclanthology.org/2020.acl-main.489.pdf)\r\n\r\nTo fix this problem, the community (eg, in [PyKEEN](https://github.com/pykeen/pykeen/blob/master/src/pykeen/evaluation/ranks.py) ) resorts to \"realistic\" metric which is an average of the optimistic and pessimistic ranking:\r\n\r\n```python\r\ndef compute_rank(ranks):\r\n    # fair ranking prediction as the average of optimistic and pessimistic ranking\r\n    true = ranks[0]\r\n    optimistic = (ranks > true).sum() + 1\r\n    pessimistic = (ranks >= true).sum()\r\n    return (optimistic + pessimistic).float() * 0.5\r\n```\r\n\r\nThe effect is easy to check feeding the vector of all zeros imitating the effect when model predicts exactly the same score for the true entity at position 0 and all other entities:\r\n\r\n```python\r\ndef old_rank(ranks):\r\n    perm = ranks.argsort(descending=True)\r\n    rank =  int((perm==0).nonzero(as_tuple=False).view(-1)[0])\r\n    return rank + 1\r\n\r\nranks = torch.zeros(10,)\r\n\r\nprint(old_rank(ranks))      # 1 - incorrect, overly optimistic\r\nprint(compute_rank(ranks))  # 5.5 - correct, realistic\r\n```\r\n\r\nThis PR changes the ranking function in the example script to the realistic ranking\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4688/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4688/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4686", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4686/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4686/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4686/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4686", "id": 1243168903, "node_id": "PR_kwDOBlHMec44MRxC", "number": 4686, "title": "Fix `setter` properties in `Data`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-05-20T13:42:30Z", "updated_at": "2022-05-20T13:46:34Z", "closed_at": "2022-05-20T13:46:32Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4686", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4686", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4686.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4686.patch", "merged_at": "2022-05-20T13:46:32Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4686/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4682", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4682/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4682/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4682/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4682", "id": 1242373760, "node_id": "PR_kwDOBlHMec44JrLM", "number": 4682, "title": "Use class setter properties if present", "user": {"login": "adrianomartinelli", "id": 32962328, "node_id": "MDQ6VXNlcjMyOTYyMzI4", "avatar_url": "https://avatars.githubusercontent.com/u/32962328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrianomartinelli", "html_url": "https://github.com/adrianomartinelli", "followers_url": "https://api.github.com/users/adrianomartinelli/followers", "following_url": "https://api.github.com/users/adrianomartinelli/following{/other_user}", "gists_url": "https://api.github.com/users/adrianomartinelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrianomartinelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrianomartinelli/subscriptions", "organizations_url": "https://api.github.com/users/adrianomartinelli/orgs", "repos_url": "https://api.github.com/users/adrianomartinelli/repos", "events_url": "https://api.github.com/users/adrianomartinelli/events{/privacy}", "received_events_url": "https://api.github.com/users/adrianomartinelli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "adrianomartinelli", "id": 32962328, "node_id": "MDQ6VXNlcjMyOTYyMzI4", "avatar_url": "https://avatars.githubusercontent.com/u/32962328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrianomartinelli", "html_url": "https://github.com/adrianomartinelli", "followers_url": "https://api.github.com/users/adrianomartinelli/followers", "following_url": "https://api.github.com/users/adrianomartinelli/following{/other_user}", "gists_url": "https://api.github.com/users/adrianomartinelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrianomartinelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrianomartinelli/subscriptions", "organizations_url": "https://api.github.com/users/adrianomartinelli/orgs", "repos_url": "https://api.github.com/users/adrianomartinelli/repos", "events_url": "https://api.github.com/users/adrianomartinelli/events{/privacy}", "received_events_url": "https://api.github.com/users/adrianomartinelli/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adrianomartinelli", "id": 32962328, "node_id": "MDQ6VXNlcjMyOTYyMzI4", "avatar_url": "https://avatars.githubusercontent.com/u/32962328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrianomartinelli", "html_url": "https://github.com/adrianomartinelli", "followers_url": "https://api.github.com/users/adrianomartinelli/followers", "following_url": "https://api.github.com/users/adrianomartinelli/following{/other_user}", "gists_url": "https://api.github.com/users/adrianomartinelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrianomartinelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrianomartinelli/subscriptions", "organizations_url": "https://api.github.com/users/adrianomartinelli/orgs", "repos_url": "https://api.github.com/users/adrianomartinelli/repos", "events_url": "https://api.github.com/users/adrianomartinelli/events{/privacy}", "received_events_url": "https://api.github.com/users/adrianomartinelli/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-05-19T22:01:14Z", "updated_at": "2022-05-20T07:41:11Z", "closed_at": "2022-05-19T22:44:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4682", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4682", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4682.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4682.patch", "merged_at": "2022-05-19T22:44:29Z"}, "body": "# Objective\r\nAdd support of class properties when setting attributes. This pull request is based on this [discussion](https://github.com/pyg-team/pytorch_geometric/discussions/4638) with @rusty1s .\r\n\r\n# Problem\r\nIf `Data` is subclassed all attributes are set with `__setattr__` method. This prevents users from implementing validation logic for attributes (like ensuring a certain `dtype`).  In the example below, the developer would like to ensure that `my_attr` can only hold `int` values. This is currently not possible with the implemented `__setattr__` method.\r\n\r\n```python\r\n  class Graph(Data):\r\n      def __init__(self):\r\n          super().__init__()\r\n          self.my_attr = 1.0\r\n          self.my_attr2 = 2\r\n\r\n      @property\r\n      def my_attr(self):\r\n          return self._my_attr\r\n\r\n      @my_attr.setter\r\n      def my_attr(self, value):\r\n          self._my_attr = int(value)\r\n```\r\n\r\n# Solution\r\nThe proposed solution checks if the class implements a setter method for the attribute or defaults to the standard behaviour\r\n```python\r\n    def __setattr__(self, key: str, value: Any):\r\n        propobj = getattr(self.__class__, key, None)\r\n        if propobj is None or propobj.fset is None:\r\n            setattr(self._store, key, value)\r\n        else:\r\n            propobj.fset(self, value)\r\n```\r\nThis implementation is tested with `test_data_subclass_setter` in `test/data/test_data.py`. Coverage of `data.py` is 89%\r\n\r\nBest,\r\nAdriano", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4682/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4674", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4674/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4674/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4674/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4674", "id": 1240261907, "node_id": "I_kwDOBlHMec5J7OUT", "number": 4674, "title": "`RandomLinkSplit` expects reverse edge types for heterogeneous undirected graphs", "user": {"login": "saiden89", "id": 45285915, "node_id": "MDQ6VXNlcjQ1Mjg1OTE1", "avatar_url": "https://avatars.githubusercontent.com/u/45285915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saiden89", "html_url": "https://github.com/saiden89", "followers_url": "https://api.github.com/users/saiden89/followers", "following_url": "https://api.github.com/users/saiden89/following{/other_user}", "gists_url": "https://api.github.com/users/saiden89/gists{/gist_id}", "starred_url": "https://api.github.com/users/saiden89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saiden89/subscriptions", "organizations_url": "https://api.github.com/users/saiden89/orgs", "repos_url": "https://api.github.com/users/saiden89/repos", "events_url": "https://api.github.com/users/saiden89/events{/privacy}", "received_events_url": "https://api.github.com/users/saiden89/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-05-18T17:17:31Z", "updated_at": "2022-06-02T09:59:30Z", "closed_at": "2022-05-23T04:52:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhen splitting heterogeneous undirected graphs `RandomLinkSplit` expects `rev_edge_types` to be passed, which in this scenario is ambiguous as no reverse edges technically exists. If `None` is passed then an `assert isinstance(rev_edge_types, list)` is triggered. If, on the other hand, the very same `edge_types` are passed, then a different `AttributeError` is raised.\r\n\r\nTo reproduce:\r\n```python3\r\nimport torch\r\nfrom torch_geometric.data import HeteroData\r\nfrom torch_geometric.transforms import RandomLinkSplit\r\n\r\n\r\nedge_index = torch.tensor([[0, 1, 2, 1, 2, 3], [1, 2, 3, 0, 1, 2]])\r\nx = torch.rand(4, 2)\r\n\r\nhetero_data = HeteroData()\r\nhetero_data['n'] = x\r\nhetero_data['n', 'link', 'n'].edge_index = edge_index\r\ndata = HeteroData(x=x, edge_index=edge_index)\r\nassert data.is_undirected()\r\nRandomLinkSplit(is_undirected=True, edge_types=hetero_data.edge_types)(hetero_data)\r\n```\r\n\r\nTraceback\r\n```python3\r\n---------------------------------------------------------------------------\r\nAssertionError                            Traceback (most recent call last)\r\nissue.ipynb Cell 1\u2019 in <cell line: 14>()\r\n     12 data = HeteroData(x=x, edge_index=edge_index)\r\n     13 assert data.is_undirected()\r\n---> 14 RandomLinkSplit(is_undirected=True, edge_types=hetero_data.edge_types)(hetero_data)\r\n\r\nFile torch_geometric/transforms/random_link_split.py:107, in RandomLinkSplit.__init__(self, num_val, num_test, is_undirected, key, split_labels, add_negative_train_samples, neg_sampling_ratio, disjoint_train_ratio, edge_types, rev_edge_types)\r\n    104 self.rev_edge_types = rev_edge_types\r\n    106 if isinstance(edge_types, list):\r\n--> 107     assert isinstance(rev_edge_types, list)\r\n    108     assert len(edge_types) == len(rev_edge_types)\r\n\r\nAssertionError:\r\n```\r\n\r\nExplicitly passing `rev_edge_types`:\r\n```python3\r\nRandomLinkSplit(is_undirected=True, edge_types=hetero_data.edge_types, rev_edge_types=hetero_data.edge_types)(hetero_data)\r\n```\r\n```python3\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\nissue.ipynb Cell 1' in <cell line: 14>()\r\n     12 data = HeteroData(x=x, edge_index=edge_index_1)\r\n     13 assert data.is_undirected()\r\n---> 14 RandomLinkSplit(is_undirected=True, edge_types=hetero_data.edge_types, rev_edge_types=hetero_data.edge_types)(hetero_data)\r\n\r\nFile torch_geometric/transforms/random_link_split.py:195, in RandomLinkSplit.__call__(self, data)\r\n    191 num_neg_test = int(num_test * self.neg_sampling_ratio)\r\n    193 num_neg = num_neg_train + num_neg_val + num_neg_test\r\n--> 195 size = store.size()\r\n    196 if store._key is None or store._key[0] == store._key[-1]:\r\n    197     size = size[0]\r\n\r\nFile torch_geometric/data/storage.py:365, in EdgeStorage.size(self, dim)\r\n    361 if self._key is None:\r\n    362     raise NameError(\"Unable to infer 'size' without explicit \"\r\n    363                     \"'_key' assignment\")\r\n--> 365 size = (self._parent()[self._key[0]].num_nodes,\r\n    366         self._parent()[self._key[-1]].num_nodes)\r\n    368 return size if dim is None else size[dim]\r\n\r\nAttributeError: 'Tensor' object has no attribute 'num_nodes'\r\n```\n\n### Environment\n\n* PyG version: 2.0.4+master\r\n* PyTorch version: 1.12+nightly\r\n* OS: Linux\r\n* Python version: 3.10.4\r\n* CUDA/cuDNN version: 10.2\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda for torch, pip for pyg and dependencies.\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4674/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4670", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4670/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4670/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4670/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4670", "id": 1239209539, "node_id": "PR_kwDOBlHMec43_N4z", "number": 4670, "title": "`GCN2Conv`: Allow for optional `edge_weight`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-05-17T22:14:10Z", "updated_at": "2022-05-17T22:25:55Z", "closed_at": "2022-05-17T22:25:54Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4670", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4670", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4670.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4670.patch", "merged_at": "2022-05-17T22:25:54Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4670/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4669", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4669/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4669/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4669/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4669", "id": 1239204002, "node_id": "PR_kwDOBlHMec43_Mrx", "number": 4669, "title": "Fix the interplay between `TUDataset` and `pre_transform` that modify node features", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637023, "node_id": "LA_kwDOBlHMec7veEaf", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/dataset", "name": "dataset", "color": "7705B6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-05-17T22:05:39Z", "updated_at": "2022-05-17T22:16:20Z", "closed_at": "2022-05-17T22:16:19Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4669", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4669", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4669.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4669.patch", "merged_at": "2022-05-17T22:16:19Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4669/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4667", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4667/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4667/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4667/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4667", "id": 1238838530, "node_id": "PR_kwDOBlHMec439967", "number": 4667, "title": "Fix `readthedocs` build", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358952533, "node_id": "MDU6TGFiZWwzMzU4OTUyNTMz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-05-17T15:45:05Z", "updated_at": "2022-05-17T15:49:47Z", "closed_at": "2022-05-17T15:49:46Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4667", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4667", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4667.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4667.patch", "merged_at": "2022-05-17T15:49:46Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4667/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4663", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4663/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4663/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4663/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4663", "id": 1238506540, "node_id": "I_kwDOBlHMec5J0hws", "number": 4663, "title": "pre_transform works not as expected", "user": {"login": "oleg-kachan", "id": 15810673, "node_id": "MDQ6VXNlcjE1ODEwNjcz", "avatar_url": "https://avatars.githubusercontent.com/u/15810673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oleg-kachan", "html_url": "https://github.com/oleg-kachan", "followers_url": "https://api.github.com/users/oleg-kachan/followers", "following_url": "https://api.github.com/users/oleg-kachan/following{/other_user}", "gists_url": "https://api.github.com/users/oleg-kachan/gists{/gist_id}", "starred_url": "https://api.github.com/users/oleg-kachan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oleg-kachan/subscriptions", "organizations_url": "https://api.github.com/users/oleg-kachan/orgs", "repos_url": "https://api.github.com/users/oleg-kachan/repos", "events_url": "https://api.github.com/users/oleg-kachan/events{/privacy}", "received_events_url": "https://api.github.com/users/oleg-kachan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-05-17T11:36:46Z", "updated_at": "2022-05-17T22:16:19Z", "closed_at": "2022-05-17T22:16:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to run an expensive transform to modify data on vertices, so I think I should pass it to pre_transform key -- it would run a transform on every graph in the dataset and will cache processed dataset.\r\n\r\nBut it works not as expected. For example, take `OneHotDegree` transform. Note that I delete dataset folder on every run of the following snippets:\r\n\r\n**No transform**\r\n```\r\ndataset = TUDataset(root=\"../data/\", name=\"MUTAG\")\r\ndataset[0].x\r\n\r\ntensor([[1., 0., 0., 0., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0.],\r\n        [0., 1., 0., 0., 0., 0., 0.],\r\n        [0., 0., 1., 0., 0., 0., 0.],\r\n        [0., 0., 1., 0., 0., 0., 0.]])\r\n```\r\n\r\n**Transform**\r\n```\r\ndataset = TUDataset(root=\"../data/\", name=\"MUTAG\", transform=OneHotDegree(5))\r\ndataset[0].x\r\n\r\ntensor([[1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0.],\r\n        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0.],\r\n        [0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0.],\r\n        [0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0.],\r\n        [0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0.]])\r\n```\r\n\r\n**Pre-transform**\r\n```\r\ndataset = TUDataset(root=\"../data/\", name=\"MUTAG\", pre_transform=OneHotDegree(5))\r\ndataset[0].x\r\n\r\ntensor([[0., 0., 1., 0., 0., 0.],\r\n        [0., 0., 1., 0., 0., 0.],\r\n        [0., 0., 1., 0., 0., 0.],\r\n        [0., 0., 0., 1., 0., 0.],\r\n        [0., 0., 0., 1., 0., 0.],\r\n        [0., 0., 1., 0., 0., 0.],\r\n        [0., 0., 1., 0., 0., 0.],\r\n        [0., 0., 1., 0., 0., 0.],\r\n        [0., 0., 0., 1., 0., 0.],\r\n        [0., 0., 0., 1., 0., 0.],\r\n        [0., 0., 1., 0., 0., 0.],\r\n        [0., 0., 1., 0., 0., 0.],\r\n        [0., 0., 0., 1., 0., 0.],\r\n        [0., 0., 1., 0., 0., 0.],\r\n        [0., 0., 0., 1., 0., 0.],\r\n        [0., 1., 0., 0., 0., 0.],\r\n        [0., 1., 0., 0., 0., 0.]])\r\n```\r\n\r\nI expect to have the result of transform (case 2) in the case of pre-transform too. Is it bug or feature?\r\n\r\nHow should I apply expensive transforms and get the data modified as in the case 2?", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4663/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4662", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4662/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4662/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4662/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4662", "id": 1238483907, "node_id": "I_kwDOBlHMec5J0cPD", "number": 4662, "title": "bug in GCN2Conv", "user": {"login": "suxnju", "id": 19996579, "node_id": "MDQ6VXNlcjE5OTk2NTc5", "avatar_url": "https://avatars.githubusercontent.com/u/19996579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suxnju", "html_url": "https://github.com/suxnju", "followers_url": "https://api.github.com/users/suxnju/followers", "following_url": "https://api.github.com/users/suxnju/following{/other_user}", "gists_url": "https://api.github.com/users/suxnju/gists{/gist_id}", "starred_url": "https://api.github.com/users/suxnju/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suxnju/subscriptions", "organizations_url": "https://api.github.com/users/suxnju/orgs", "repos_url": "https://api.github.com/users/suxnju/repos", "events_url": "https://api.github.com/users/suxnju/events{/privacy}", "received_events_url": "https://api.github.com/users/suxnju/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-05-17T11:17:11Z", "updated_at": "2022-05-17T22:25:54Z", "closed_at": "2022-05-17T22:25:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nThe `message` function is implemented as:\r\n```python\r\ndef message(self, x_j: Tensor, edge_weight: Tensor) -> Tensor:\r\n    return edge_weight.view(-1, 1) * x_j\r\n```\r\n\r\n**But**, if the `edge_weight` is None, it will raise an error.\r\n\r\n\r\n### Fix\r\n\r\nRefer to the `GCNConv`, it is easy to fix\r\n```python\r\ndef message(self, x_j: Tensor, edge_weight: Tensor) -> Tensor:\r\n    return x_j if edge_weight is None else edge_weight.view(-1, 1) * x_j\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4662/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4659", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4659/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4659/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4659/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4659", "id": 1238193177, "node_id": "I_kwDOBlHMec5JzVQZ", "number": 4659, "title": "KarateClub dataset does not load ", "user": {"login": "EtienneGagnon1", "id": 42870103, "node_id": "MDQ6VXNlcjQyODcwMTAz", "avatar_url": "https://avatars.githubusercontent.com/u/42870103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EtienneGagnon1", "html_url": "https://github.com/EtienneGagnon1", "followers_url": "https://api.github.com/users/EtienneGagnon1/followers", "following_url": "https://api.github.com/users/EtienneGagnon1/following{/other_user}", "gists_url": "https://api.github.com/users/EtienneGagnon1/gists{/gist_id}", "starred_url": "https://api.github.com/users/EtienneGagnon1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EtienneGagnon1/subscriptions", "organizations_url": "https://api.github.com/users/EtienneGagnon1/orgs", "repos_url": "https://api.github.com/users/EtienneGagnon1/repos", "events_url": "https://api.github.com/users/EtienneGagnon1/events{/privacy}", "received_events_url": "https://api.github.com/users/EtienneGagnon1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-05-17T07:24:44Z", "updated_at": "2022-05-17T22:23:51Z", "closed_at": "2022-05-17T22:23:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nImporting the KarateClub dataset \r\n```python\r\nfrom torch_geometric.datasets import KarateClub\r\ndataset = KarateClub()\r\n```\r\n\r\nappears to yield the following error. \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Gagnon\\Anaconda3\\envs\\sandbox_dev_env\\lib\\code.py\", line 90, in runcode\r\n    exec(code, self.locals)\r\n  File \"<input>\", line 1, in <module>\r\n  File \"C:\\Users\\Gagnon\\Anaconda3\\envs\\sandbox_dev_env\\lib\\site-packages\\torch_geometric\\datasets\\karate.py\", line 50, in __init__\r\n    adj = nx.to_scipy_sparse_array(G).tocoo()\r\n  File \"C:\\Users\\Gagnon\\Anaconda3\\envs\\sandbox_dev_env\\lib\\site-packages\\networkx\\convert_matrix.py\", line 921, in to_scipy_sparse_array\r\n    A = sp.sparse.coo_array((d, (r, c)), shape=(nlen, nlen), dtype=dtype)\r\nAttributeError: module 'scipy.sparse' has no attribute 'coo_array'\r\n```\r\n\r\n\r\n\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.11.0\r\n* OS: windows 11\r\n* Python version: 3.9.12\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4659/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4648", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4648/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4648/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4648/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4648", "id": 1236212278, "node_id": "PR_kwDOBlHMec431MYD", "number": 4648, "title": "Hotfix: `MLP.jittable()` for PyTorch 1.10", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-05-15T07:35:41Z", "updated_at": "2022-05-15T07:42:44Z", "closed_at": "2022-05-15T07:42:44Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4648", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4648", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4648.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4648.patch", "merged_at": "2022-05-15T07:42:44Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4648/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4646", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4646/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4646/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4646/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4646", "id": 1236154197, "node_id": "I_kwDOBlHMec5JrjdV", "number": 4646, "title": "`HeteroConv` does not support `add_self_loop` models", "user": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-05-15T00:58:35Z", "updated_at": "2022-05-15T14:48:44Z", "closed_at": "2022-05-15T14:48:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nBrought up by @rusty1s in the discussion [here](https://github.com/pyg-team/pytorch_geometric/discussions/4637), it was noted that when using a `HetreoConv` model with relationship models that use `add_self_loops` the message passing will be incorrect. For example:\r\n```\r\nHeteroConv({('A', 'to', 'B'): GATConv((-1, -1), hidden_channels, heads=4, dropout=0.2)})\r\n```\r\nThis is caused by the fact that the self loops would then refer links between source and destination nodes of different types.\r\n\r\nThe suggestion here is to add a check inside `HeteroConv` that would warn raise an exception to avoid users unknowingly doing this.\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4646/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4646/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4645", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4645/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4645/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4645/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4645", "id": 1236152643, "node_id": "PR_kwDOBlHMec431BLI", "number": 4645, "title": "Fix `MLP.jittable()` bug in case `return_emb=True`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-05-15T00:44:58Z", "updated_at": "2022-05-15T00:54:25Z", "closed_at": "2022-05-15T00:54:24Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4645", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4645", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4645.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4645.patch", "merged_at": "2022-05-15T00:54:24Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4645/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4630", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4630/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4630/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4630/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4630", "id": 1234101770, "node_id": "I_kwDOBlHMec5JjuYK", "number": 4630, "title": "to_hetero fails at dropout due to torch.rand not accepting proxies.", "user": {"login": "szemyd", "id": 16992850, "node_id": "MDQ6VXNlcjE2OTkyODUw", "avatar_url": "https://avatars.githubusercontent.com/u/16992850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szemyd", "html_url": "https://github.com/szemyd", "followers_url": "https://api.github.com/users/szemyd/followers", "following_url": "https://api.github.com/users/szemyd/following{/other_user}", "gists_url": "https://api.github.com/users/szemyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/szemyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szemyd/subscriptions", "organizations_url": "https://api.github.com/users/szemyd/orgs", "repos_url": "https://api.github.com/users/szemyd/repos", "events_url": "https://api.github.com/users/szemyd/events{/privacy}", "received_events_url": "https://api.github.com/users/szemyd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358956745, "node_id": "MDU6TGFiZWwzMzU4OTU2NzQ1", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-05-12T14:48:18Z", "updated_at": "2022-05-15T21:06:26Z", "closed_at": "2022-05-15T21:06:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI'm trying to pass these layers through `to_hertero()`\r\n```python\r\nclass GNNEncoder(t.nn.Module):\r\n    def __init__(\r\n        self,\r\n        layers: ModuleList,\r\n        p_dropout_edges: Optional[float],\r\n        p_dropout_features: Optional[float],\r\n    ):\r\n        super().__init__()\r\n        self.layers = layers\r\n        self.p_dropout_edges = p_dropout_edges\r\n        self.p_dropout_features = p_dropout_features\r\n\r\n    def forward(self, x, edge_index):\r\n        for index, layer in enumerate(self.layers):\r\n            if index == len(self.layers) - 1:\r\n                x = layer(x, edge_index)\r\n            else:\r\n                if self.p_dropout_edges is not None:\r\n                    edge_index, _ = dropout_adj(\r\n                        edge_index,\r\n                        p=self.p_dropout_edges,\r\n                        force_undirected=True,\r\n                        training=self.training,\r\n                    )\r\n                if self.p_dropout_features is not None:\r\n                    x = F.dropout(x, p=self.p_dropout_features, training=self.training)\r\n\r\n                x = layer(x, edge_index).relu()\r\n\r\n        return x\r\n```\r\n\r\nHowever the tracing fails at:\r\n```python\r\ndropout_adj(\r\n                        edge_index,\r\n                        p=self.p_dropout_edges,\r\n                        force_undirected=True,\r\n                        training=self.training,\r\n                    )\r\n```\r\n\r\nI'm getting a type error:\r\n`rand() received an invalid combination of arguments - got (Proxy, device=Attribute) ... `\r\n\r\nIt fails at `mask = torch.rand(row.size(0), device=edge_index.device) >= p`\n\n### Environment\n\n* PyG version: 2.0.5\r\n* PyTorch version: 1.10.2\r\n* OS: MacOS 12.3.1\r\n* Python version: 3.9.10\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): from https://github.com/pyg-team/pytorch_geometric/archive/master.zip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4630/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4629", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4629/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4629/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4629/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4629", "id": 1234008378, "node_id": "PR_kwDOBlHMec43uMJo", "number": 4629, "title": "Fix dimension in edge filter selection", "user": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-05-12T13:43:01Z", "updated_at": "2022-05-12T22:18:12Z", "closed_at": "2022-05-12T19:51:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4629", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4629", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4629.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4629.patch", "merged_at": "2022-05-12T19:51:56Z"}, "body": "Aims to fix an issue reported in https://github.com/pyg-team/pytorch_geometric/issues/4026. The filtering of attributes that have the same shape as `edge_index` are not handled correctly. This PR tries to fix that behaviour ", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4629/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4617", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4617/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4617/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4617/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4617", "id": 1232385705, "node_id": "PR_kwDOBlHMec43o2y5", "number": 4617, "title": "Fixed an error in generated node features in `StochasticBlockModelDataset`", "user": {"login": "dongkwan-kim", "id": 14350049, "node_id": "MDQ6VXNlcjE0MzUwMDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/14350049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dongkwan-kim", "html_url": "https://github.com/dongkwan-kim", "followers_url": "https://api.github.com/users/dongkwan-kim/followers", "following_url": "https://api.github.com/users/dongkwan-kim/following{/other_user}", "gists_url": "https://api.github.com/users/dongkwan-kim/gists{/gist_id}", "starred_url": "https://api.github.com/users/dongkwan-kim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dongkwan-kim/subscriptions", "organizations_url": "https://api.github.com/users/dongkwan-kim/orgs", "repos_url": "https://api.github.com/users/dongkwan-kim/repos", "events_url": "https://api.github.com/users/dongkwan-kim/events{/privacy}", "received_events_url": "https://api.github.com/users/dongkwan-kim/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "dongkwan-kim", "id": 14350049, "node_id": "MDQ6VXNlcjE0MzUwMDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/14350049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dongkwan-kim", "html_url": "https://github.com/dongkwan-kim", "followers_url": "https://api.github.com/users/dongkwan-kim/followers", "following_url": "https://api.github.com/users/dongkwan-kim/following{/other_user}", "gists_url": "https://api.github.com/users/dongkwan-kim/gists{/gist_id}", "starred_url": "https://api.github.com/users/dongkwan-kim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dongkwan-kim/subscriptions", "organizations_url": "https://api.github.com/users/dongkwan-kim/orgs", "repos_url": "https://api.github.com/users/dongkwan-kim/repos", "events_url": "https://api.github.com/users/dongkwan-kim/events{/privacy}", "received_events_url": "https://api.github.com/users/dongkwan-kim/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dongkwan-kim", "id": 14350049, "node_id": "MDQ6VXNlcjE0MzUwMDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/14350049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dongkwan-kim", "html_url": "https://github.com/dongkwan-kim", "followers_url": "https://api.github.com/users/dongkwan-kim/followers", "following_url": "https://api.github.com/users/dongkwan-kim/following{/other_user}", "gists_url": "https://api.github.com/users/dongkwan-kim/gists{/gist_id}", "starred_url": "https://api.github.com/users/dongkwan-kim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dongkwan-kim/subscriptions", "organizations_url": "https://api.github.com/users/dongkwan-kim/orgs", "repos_url": "https://api.github.com/users/dongkwan-kim/repos", "events_url": "https://api.github.com/users/dongkwan-kim/events{/privacy}", "received_events_url": "https://api.github.com/users/dongkwan-kim/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-05-11T10:20:02Z", "updated_at": "2022-05-11T11:15:59Z", "closed_at": "2022-05-11T11:15:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4617", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4617", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4617.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4617.patch", "merged_at": "2022-05-11T11:15:59Z"}, "body": "If `n_clusters_per_class` in `make_classification` is bigger than 1 (default: 2), its output is not sorted with respect to the labels (`y`).", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4617/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4617/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4605", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4605/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4605/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4605/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4605", "id": 1229586880, "node_id": "I_kwDOBlHMec5JSgHA", "number": 4605, "title": "Error with heads>1 in HeteroConv - GATConv", "user": {"login": "KevinCrp", "id": 70952655, "node_id": "MDQ6VXNlcjcwOTUyNjU1", "avatar_url": "https://avatars.githubusercontent.com/u/70952655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KevinCrp", "html_url": "https://github.com/KevinCrp", "followers_url": "https://api.github.com/users/KevinCrp/followers", "following_url": "https://api.github.com/users/KevinCrp/following{/other_user}", "gists_url": "https://api.github.com/users/KevinCrp/gists{/gist_id}", "starred_url": "https://api.github.com/users/KevinCrp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KevinCrp/subscriptions", "organizations_url": "https://api.github.com/users/KevinCrp/orgs", "repos_url": "https://api.github.com/users/KevinCrp/repos", "events_url": "https://api.github.com/users/KevinCrp/events{/privacy}", "received_events_url": "https://api.github.com/users/KevinCrp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-05-09T11:48:10Z", "updated_at": "2022-05-11T07:45:55Z", "closed_at": "2022-05-11T07:45:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi\r\nI'm working on Heterogeneous graph and I want to test a model built with GATConv.\r\nI use HeteroConv wrapper to do it.\r\nWhen I use GatConv with heads > 1, it fails:\r\n\r\n````python\r\nimport os.path as osp\r\nimport torch\r\nfrom torch_geometric.loader import NeighborLoader\r\nimport torch_geometric.transforms as T\r\nfrom torch_geometric.datasets import OGB_MAG\r\nfrom torch_geometric.nn import (GATConv, HeteroConv, SAGEConv, GCNConv, Linear)\r\n\r\npath = osp.join(osp.dirname(osp.realpath(__file__)), '../../data/OGB')\r\ntransform = T.ToUndirected(merge=True)\r\ndataset = OGB_MAG(path, preprocess='metapath2vec', transform=transform)\r\ndata = dataset[0]\r\n\r\ntrain_input_nodes = ('paper', data['paper'].train_mask)\r\nval_input_nodes = ('paper', data['paper'].val_mask)\r\nkwargs = {'batch_size': 16, 'num_workers': 6, 'persistent_workers': True}\r\n\r\ntrain_loader = NeighborLoader(data, num_neighbors=[10] * 2, shuffle=True,\r\n                              input_nodes=train_input_nodes, **kwargs)\r\nval_loader = NeighborLoader(data, num_neighbors=[10] * 2,\r\n                            input_nodes=val_input_nodes, **kwargs)\r\n\r\nprint(data)\r\n\r\n\r\nclass HeteroGNN(torch.nn.Module):\r\n    def __init__(self, hidden_channels, out_channels, num_layers):\r\n        super().__init__()\r\n\r\n        self.convs = torch.nn.ModuleList()\r\n        for _ in range(num_layers):\r\n            conv = HeteroConv({\r\n                ('paper', 'cites', 'paper'): GCNConv(-1, hidden_channels),\r\n                ('author', 'writes', 'paper'): SAGEConv((-1, -1), hidden_channels),\r\n                ('paper', 'rev_writes', 'author'): GATConv((-1, -1), hidden_channels, heads=2),\r\n            }, aggr='sum')\r\n            self.convs.append(conv)\r\n\r\n        self.lin = Linear(hidden_channels, out_channels)\r\n\r\n    def forward(self, x_dict, edge_index_dict):\r\n        for conv in self.convs:\r\n            x_dict = conv(x_dict, edge_index_dict)\r\n            x_dict = {key: x.relu() for key, x in x_dict.items()}\r\n        return self.lin(x_dict['author'])\r\n\r\n\r\nmodel = HeteroGNN(hidden_channels=64, out_channels=dataset.num_classes,\r\n                  num_layers=2)\r\n\r\n\r\n@torch.no_grad()\r\ndef init_params():\r\n    # Initialize lazy parameters via forwarding a single batch to the model:\r\n    batch = next(iter(train_loader))\r\n    model(batch.x_dict, batch.edge_index_dict)\r\n\r\n\r\ndef train():\r\n    model.train()\r\n\r\n    total_examples = total_loss = 0\r\n    for batch in train_loader:\r\n        optimizer.zero_grad()\r\n        batch_size = batch['paper'].batch_size\r\n        out = model(batch.x_dict, batch.edge_index_dict)\r\n        break\r\n\r\n\r\noptimizer = torch.optim.Adam(model.parameters(), lr=0.01)\r\nfor epoch in range(1, 2):\r\n    loss = train()\r\n\r\n````\r\nAnd I got the following issue:\r\n````bash\r\nTraceback (most recent call last):\r\n  File \"./bug.py\", line 79, in <module>\r\n    loss = train()\r\n  File \"./bug.py\", line 66, in train\r\n    out = model(batch.x_dict, batch.edge_index_dict)\r\n  File \"conda_env/lib/python3.9/site-packages/torch/nn/modules/module.py\", line 1110, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"./bug.py\", line 48, in forward\r\n    return self.lin(x_dict['author'])\r\n  File \"conda_env/lib/python3.9/site-packages/torch/nn/modules/module.py\", line 1110, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"conda_env/lib/python3.9/site-packages/torch_geometric/nn/dense/linear.py\", line 118, in forward\r\n    return F.linear(x, self.weight, self.bias)\r\nRuntimeError: mat1 and mat2 shapes cannot be multiplied (507x128 and 64x349)\r\n````\r\n\r\n\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.11\r\n* OS: Ubuntu 18\r\n* Python version: 3.9.11\r\n* CUDA/cuDNN version: \r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4605/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4604", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4604/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4604/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4604/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4604", "id": 1229564298, "node_id": "PR_kwDOBlHMec43fqgD", "number": 4604, "title": "`HeteroData.is_undirected()`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 1267385588, "node_id": "MDU6TGFiZWwxMjY3Mzg1NTg4", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/feature", "name": "feature", "color": "a2eeef", "default": false, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4052697610, "node_id": "LA_kwDOBlHMec7xj0IK", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/data", "name": "data", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2022-05-09T11:26:52Z", "updated_at": "2022-05-11T13:08:57Z", "closed_at": "2022-05-10T11:01:41Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4604", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4604", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4604.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4604.patch", "merged_at": "2022-05-10T11:01:41Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4604/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4597", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4597/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4597/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4597/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4597", "id": 1226675265, "node_id": "PR_kwDOBlHMec43Wsg8", "number": 4597, "title": "Add `bias` to `TAGConv`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-05-05T13:28:11Z", "updated_at": "2022-05-05T13:32:32Z", "closed_at": "2022-05-05T13:32:31Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4597", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4597", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4597.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4597.patch", "merged_at": "2022-05-05T13:32:31Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4597/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4596", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4596/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4596/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4596/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4596", "id": 1226372092, "node_id": "I_kwDOBlHMec5JGPP8", "number": 4596, "title": "ToUndirect and is_undirect does not match on heterogeneous graphs", "user": {"login": "Zartris", "id": 14197299, "node_id": "MDQ6VXNlcjE0MTk3Mjk5", "avatar_url": "https://avatars.githubusercontent.com/u/14197299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zartris", "html_url": "https://github.com/Zartris", "followers_url": "https://api.github.com/users/Zartris/followers", "following_url": "https://api.github.com/users/Zartris/following{/other_user}", "gists_url": "https://api.github.com/users/Zartris/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zartris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zartris/subscriptions", "organizations_url": "https://api.github.com/users/Zartris/orgs", "repos_url": "https://api.github.com/users/Zartris/repos", "events_url": "https://api.github.com/users/Zartris/events{/privacy}", "received_events_url": "https://api.github.com/users/Zartris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358954271, "node_id": "MDU6TGFiZWwzMzU4OTU0Mjcx", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": ""}, {"id": 3358956745, "node_id": "MDU6TGFiZWwzMzU4OTU2NzQ1", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2022-05-05T08:35:23Z", "updated_at": "2022-05-10T11:01:41Z", "closed_at": "2022-05-10T11:01:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhen running T.ToUndirect()(data) on a heterogeneous graph you will still get false for running is_undirect()\r\n```Python\r\nfrom torch_geometric.datasets import OGB_MAG\r\nimport torch_geometric.transforms as T\r\n\r\ndataset = OGB_MAG(root='data', preprocess='metapath2vec')\r\ndata = dataset[0]\r\ndata .is_undirected()\r\ndata = T.ToUndirected()(data)\r\ndata .is_undirected()\r\n```\r\nFound it while going through the example on [heterogeneous-graph-learning](https://pytorch-geometric.readthedocs.io/en/latest/notes/heterogeneous.html) section in docs.\n\n### Environment\n\n* PyG version: 2.0.2\r\n* PyTorch version:  1.10.0+cu113\r\n* OS: Windows 10\r\n* Python version: 3.7\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4596/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4595", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4595/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4595/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4595/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4595", "id": 1225742713, "node_id": "I_kwDOBlHMec5JD1l5", "number": 4595, "title": "TAGConv bias is always True", "user": {"login": "Damowerko", "id": 22187221, "node_id": "MDQ6VXNlcjIyMTg3MjIx", "avatar_url": "https://avatars.githubusercontent.com/u/22187221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Damowerko", "html_url": "https://github.com/Damowerko", "followers_url": "https://api.github.com/users/Damowerko/followers", "following_url": "https://api.github.com/users/Damowerko/following{/other_user}", "gists_url": "https://api.github.com/users/Damowerko/gists{/gist_id}", "starred_url": "https://api.github.com/users/Damowerko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Damowerko/subscriptions", "organizations_url": "https://api.github.com/users/Damowerko/orgs", "repos_url": "https://api.github.com/users/Damowerko/repos", "events_url": "https://api.github.com/users/Damowerko/events{/privacy}", "received_events_url": "https://api.github.com/users/Damowerko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-05-04T18:42:14Z", "updated_at": "2022-05-05T13:29:18Z", "closed_at": "2022-05-05T13:29:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nTAGConv accepts a bias parameter. However regardless of the value its linear layers will always have bias. In fact, the bias variable is never used in the class.\r\n\r\nA minimal example to reproduce.\r\n```\r\nfrom torch_geometric.nn import TAGConv\r\n\r\nconv_bias = TAGConv(2, 2, bias=True)\r\nconv = TAGConv(2, 2, bias=False)\r\n\r\n# excpect all elements of conv_bias.lins to have bias\r\nassert conv_bias.lins[0].bias is not None\r\n\r\n# expect all elements of conv.lins to not have bias\r\nassert conv.lins[0].bias is None # this fails\r\n```\r\n\r\nStacktrace:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/damow/projects/reconstrain/scripts/test.py\", line 10, in <module>\r\n    assert conv.lins[0].bias is None  # this fails\r\nAssertionError\r\n```\r\n\r\nProposed fix:\r\nChange the [following line](https://github.com/pyg-team/pytorch_geometric/blob/e53affc44ef8f2b8060e603e645b9fa29e752291/torch_geometric/nn/conv/tag_conv.py#L55).\r\n`[Linear(in_channels, out_channels) for _ in range(K + 1)])`\r\nto\r\n`[Linear(in_channels, out_channels, bias=bias) for _ in range(K + 1)])`\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.10.2+cu113\r\n* OS: Manjaro Linux with kernel 5.10.105-1-MANJARO\r\n* Python version: 3.9.9\r\n* CUDA/cuDNN version: 11.6/\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): Poetry\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): n/a\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4595/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4594", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4594/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4594/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4594/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4594", "id": 1225672883, "node_id": "I_kwDOBlHMec5JDkiz", "number": 4594, "title": "Can't use custom hetero dataset with edge_attr.", "user": {"login": "vv19", "id": 72992336, "node_id": "MDQ6VXNlcjcyOTkyMzM2", "avatar_url": "https://avatars.githubusercontent.com/u/72992336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vv19", "html_url": "https://github.com/vv19", "followers_url": "https://api.github.com/users/vv19/followers", "following_url": "https://api.github.com/users/vv19/following{/other_user}", "gists_url": "https://api.github.com/users/vv19/gists{/gist_id}", "starred_url": "https://api.github.com/users/vv19/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vv19/subscriptions", "organizations_url": "https://api.github.com/users/vv19/orgs", "repos_url": "https://api.github.com/users/vv19/repos", "events_url": "https://api.github.com/users/vv19/events{/privacy}", "received_events_url": "https://api.github.com/users/vv19/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-05-04T17:29:41Z", "updated_at": "2022-05-05T13:25:40Z", "closed_at": "2022-05-05T13:25:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhen using a custom hetero dataset that has edge_attr, indexing of the edges produces an error. If I don't use edge_attr or if the number of nodes for each node_type is the same, then everything works fine.\r\n\r\nAn example code that reproduces the error:\r\n```\r\nfrom torch_geometric.nn import GATv2Conv, to_hetero\r\nfrom torch_geometric.data import HeteroData\r\nimport torch\r\n\r\n\r\nclass Net(torch.nn.Module):\r\n    def __init__(self, hidden_channels, out_channels, edge_dim=3):\r\n        super().__init__()\r\n        self.conv1 = GATv2Conv((-1, -1), hidden_channels, heads=1, edge_dim=edge_dim)\r\n\r\n    def forward(self, x, edge_index, edge_attr):\r\n        x = self.conv1(x, edge_index, edge_attr)\r\n\r\n        return x\r\n\r\n\r\nif __name__ == '__main__':\r\n    data = HeteroData()\r\n\r\n    data['v1'].x = torch.randn(size=(5, 2))\r\n    data['v2'].x = torch.randn(size=(6, 2))\r\n    data['v3'].x = torch.randn(size=(7, 2))\r\n\r\n    data['v1', 'e1', 'v1'].edge_index = torch.cartesian_prod(torch.arange(data['v1'].num_nodes, dtype=torch.int64),\r\n                                                             torch.arange(data['v1'].num_nodes, dtype=torch.int64)).t()\r\n    data['v1', 'e1', 'v1'].edge_attr = torch.randn(size=(data['v1'].num_nodes * data['v1'].num_nodes, 3))\r\n    data['v2', 'e2', 'v2'].edge_index = torch.cartesian_prod(torch.arange(data['v2'].num_nodes, dtype=torch.int64),\r\n                                                             torch.arange(data['v2'].num_nodes, dtype=torch.int64)).t()\r\n    data['v2', 'e2', 'v2'].edge_attr = torch.randn(size=(data['v2'].num_nodes * data['v2'].num_nodes, 3))\r\n    data['v3', 'e3', 'v3'].edge_index = torch.cartesian_prod(torch.arange(data['v3'].num_nodes, dtype=torch.int64),\r\n                                                             torch.arange(data['v3'].num_nodes, dtype=torch.int64)).t()\r\n    data['v3', 'e3', 'v3'].edge_attr = torch.randn(size=(data['v3'].num_nodes * data['v3'].num_nodes, 3))\r\n\r\n    data['v1', 'e4', 'v2'].edge_index = torch.cartesian_prod(torch.arange(data['v1'].num_nodes, dtype=torch.int64),\r\n                                                             torch.arange(data['v2'].num_nodes, dtype=torch.int64)).t()\r\n    data['v1', 'e4', 'v2'].edge_attr = torch.randn(size=(data['v1'].num_nodes * data['v2'].num_nodes, 3))\r\n\r\n    print(data)\r\n\r\n    model = Net(2, 2)\r\n    model = to_hetero(model, data.metadata())\r\n\r\n    model(data.x_dict, data.edge_index_dict, data.edge_attr_dict)\r\n```\r\n\r\nIt gets me this error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"graph_example.py\", line 46, in <module>\r\n    model(data.x_dict, data.edge_index_dict, data.edge_attr_dict)\r\n  File \"/home/vv19/projects/shared/venvs/venv_basic/lib/python3.8/site-packages/torch/fx/graph_module.py\", line 513, in wrapped_call\r\n    raise e.with_traceback(None)\r\nRuntimeError: index 5 is out of bounds for dimension 0 with size 5\r\n```\r\n\r\n\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.9.0+cu111\r\n* OS: Ubuntu 20.04\r\n* Python version: 3.8\r\n* CUDA/cuDNN version: 11.1\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4594/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4591", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4591/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4591/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4591/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4591", "id": 1224325916, "node_id": "I_kwDOBlHMec5I-bsc", "number": 4591, "title": "MessagePassing.propagate with flow=\"target_to_source\" and size=(...) bug introduced in PyG 2.0.4", "user": {"login": "pimdh", "id": 459819, "node_id": "MDQ6VXNlcjQ1OTgxOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/459819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pimdh", "html_url": "https://github.com/pimdh", "followers_url": "https://api.github.com/users/pimdh/followers", "following_url": "https://api.github.com/users/pimdh/following{/other_user}", "gists_url": "https://api.github.com/users/pimdh/gists{/gist_id}", "starred_url": "https://api.github.com/users/pimdh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pimdh/subscriptions", "organizations_url": "https://api.github.com/users/pimdh/orgs", "repos_url": "https://api.github.com/users/pimdh/repos", "events_url": "https://api.github.com/users/pimdh/events{/privacy}", "received_events_url": "https://api.github.com/users/pimdh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-05-03T16:29:30Z", "updated_at": "2022-05-04T07:25:38Z", "closed_at": "2022-05-04T07:25:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWith `source_to_target` we get as expected:\r\n```python\r\nimport torch\r\nfrom torch_geometric.nn import MessagePassing\r\n\r\nmp = MessagePassing(flow=\"source_to_target\", node_dim=0)\r\nmp.propagate(torch.tensor([[0], [0]]), size=(100, 10), x=torch.randn(100, 3)).shape\r\n# => (10,3)\r\n```\r\n\r\nIn PyG 2.0.4 with `target_to_source`, we get:\r\n```python\r\nmp = MessagePassing(flow=\"target_to_source\", node_dim=0)\r\nmp.propagate(torch.tensor([[0], [0]]), size=(10, 100), x=torch.randn(100, 3)).shape\r\n# => (100,3)\r\n```\r\nWhile \r\n```python\r\nmp = MessagePassing(flow=\"target_to_source\", node_dim=0)\r\nmp.propagate(torch.tensor([[0], [0]]), size=(100, 10), x=torch.randn(100, 3))\r\n```\r\nraises\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/lib/python3.8/site-packages/IPython/core/interactiveshell.py\", line 3441, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-20-472fe80fa7f5>\", line 2, in <module>\r\n    mp.propagate(torch.tensor([[0], [0]]), size=(100, 10), x=torch.randn(100, 3)).shape\r\n  File \"/opt/conda/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py\", line 309, in propagate\r\n    coll_dict = self.__collect__(self.__user_args__, edge_index,\r\n  File \"/opt/conda/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py\", line 201, in __collect__\r\n    self.__set_size__(size, dim, data)\r\n  File \"/opt/conda/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py\", line 165, in __set_size__\r\n    raise ValueError(\r\nValueError: Encountered tensor with size 100 in dimension 0, but expected size 10.\r\n```\r\n\r\nI'm not sure which of the two shapes is expected, but either the second or the third example should return the same as the first example.\r\n\r\nIn PyG 2.0.3, this was working fine. I suspect the issue is related to the change made in #3907. In PyG 2.0.3, we get:\r\n```python\r\nmp = MessagePassing(flow=\"target_to_source\", node_dim=0)\r\nmp.propagate(torch.tensor([[0], [0]]), size=(10, 100), x=torch.randn(100, 3)).shape \r\n# => raises above error\r\nmp = MessagePassing(flow=\"target_to_source\", node_dim=0)\r\nmp.propagate(torch.tensor([[0], [0]]), size=(100, 10), x=torch.randn(100, 3)).shape \r\n# => (10, 3), as desired\r\n```\r\n\r\n\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.10.2\r\n* OS: Ubuntu 20.04.3 LTS\r\n* Python version: 3.8.10", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4591/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4582", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4582/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4582/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4582/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4582", "id": 1222838015, "node_id": "PR_kwDOBlHMec43Kj6Y", "number": 4582, "title": "`GlobalPooling` and graph-level `to_hetero` support", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 1267385588, "node_id": "MDU6TGFiZWwxMjY3Mzg1NTg4", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/feature", "name": "feature", "color": "a2eeef", "default": false, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-05-02T12:39:30Z", "updated_at": "2022-05-02T15:31:16Z", "closed_at": "2022-05-02T15:31:16Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4582", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4582", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4582.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4582.patch", "merged_at": "2022-05-02T15:31:16Z"}, "body": "Fixes #4565 ", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4582/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4567", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4567/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4567/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4567/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4567", "id": 1221210972, "node_id": "I_kwDOBlHMec5IyjNc", "number": 4567, "title": "`download` and `process` methods are not called when `Dataset` is subclassed indirectly", "user": {"login": "raimis", "id": 2469715, "node_id": "MDQ6VXNlcjI0Njk3MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/2469715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raimis", "html_url": "https://github.com/raimis", "followers_url": "https://api.github.com/users/raimis/followers", "following_url": "https://api.github.com/users/raimis/following{/other_user}", "gists_url": "https://api.github.com/users/raimis/gists{/gist_id}", "starred_url": "https://api.github.com/users/raimis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raimis/subscriptions", "organizations_url": "https://api.github.com/users/raimis/orgs", "repos_url": "https://api.github.com/users/raimis/repos", "events_url": "https://api.github.com/users/raimis/events{/privacy}", "received_events_url": "https://api.github.com/users/raimis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2022-04-29T16:29:57Z", "updated_at": "2022-05-04T14:44:01Z", "closed_at": "2022-05-04T14:29:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nCreate a dummy dataset `DS`  by directly subclassing `Dataset`, i.e. `DS` --> `Dataset`:\r\n```python\r\nfrom torch_geometric.data import Dataset\r\n\r\nclass DS(Dataset):\r\n\r\n    @property\r\n    def raw_file_names(self):\r\n        return 'dummy'\r\n\r\n    def download(self):\r\n        print(f'Calling {self.__class__.__name__}.download')\r\n``` \r\nWhen creating an instance of `DS`, the method `download` is called as expected:\r\n```python\r\nds = DS('.')\r\nCalling DS.download\r\n```\r\n\r\nCreate a dummy dataset `DS2` by indirectly subclassing `Dataset`, i.e.  `DS2` --> `DS1` --> `Dataset`:\r\n```python\r\nclass DS1(Dataset):\r\n\r\n    def download(self):\r\n        print(f'Calling {self.__class__.__name__}.download')\r\n\r\nclass DS2(DS1):\r\n\r\n    @property\r\n    def raw_file_names(self):\r\n        return 'dummy'\r\n```\r\nWhen creating an instance of `DS2`, the method `download` **is not called**, as expected:\r\n```python\r\nds2 = DS2('.')\r\n# No output\r\n```\r\nHowever, the method can be called directly:\r\n```python\r\nds2.download()\r\nCalling DS2.download\r\n``` \r\n\r\nAdditionally, the same issue exists with `process` method.\n\n### Environment\n\n* PyG version: `master` (https://github.com/pyg-team/pytorch_geometric/commit/484b7922ec68d146280acba409fc7170549e2775)\r\n* PyTorch version: 1.10.0\r\n* OS: CentOS 7.9\r\n* Python version: 3.9.10\r\n* CUDA/cuDNN version: 11.2.2/8.2.1.32\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): `conda` and `source`\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): N/A", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4567/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4567/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4560", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4560/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4560/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4560/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4560", "id": 1218985816, "node_id": "I_kwDOBlHMec5IqD9Y", "number": 4560, "title": "LightningDataset works with Plugins but not Strategies", "user": {"login": "tagirshin", "id": 17476642, "node_id": "MDQ6VXNlcjE3NDc2NjQy", "avatar_url": "https://avatars.githubusercontent.com/u/17476642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tagirshin", "html_url": "https://github.com/tagirshin", "followers_url": "https://api.github.com/users/tagirshin/followers", "following_url": "https://api.github.com/users/tagirshin/following{/other_user}", "gists_url": "https://api.github.com/users/tagirshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/tagirshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tagirshin/subscriptions", "organizations_url": "https://api.github.com/users/tagirshin/orgs", "repos_url": "https://api.github.com/users/tagirshin/repos", "events_url": "https://api.github.com/users/tagirshin/events{/privacy}", "received_events_url": "https://api.github.com/users/tagirshin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-04-28T16:34:04Z", "updated_at": "2022-04-28T16:34:56Z", "closed_at": "2022-04-28T16:34:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhile working with PyG LightningDataset and PyTorch lightning Trainer, for example, with this minimal code:\r\n```\r\nimport torch\r\nimport pytorch_lightning as pl\r\nfrom torch_geometric.data import LightningDataset\r\n\r\ndatamodule = LightningDataset(train_dataset, val_dataset, batch_size=1000, pin_memory=True)\r\nmodel = ...\r\ntrainer = pl.Trainer(accelerator=\"gpu\", devices=[0], strategy=\"ddp_spawn\", max_epochs=100,  gradient_clip_val=1.0, precision=16, detect_anomaly=False) \r\ntrainer.fit(model, datamodule)\r\n```\r\n\r\nI get following error:\r\n``` \r\nNotImplementedError: 'LightningDataset' currently only supports 'SingleDevicePlugin' and 'DDPSpawnPlugin' training type plugins of 'pytorch_lightning' (got 'DDPSpawnStrategy')\r\n```\r\n\r\nWhen I'm changing on `DDPSpawnPlugin`, everything works fine:\r\n\r\n```\r\nfrom pytorch_lightning.plugins import DDPSpawnPlugin \r\n\r\ntrainer = pl.Trainer(accelerator=\"gpu\", devices=[0], strategy=DDPSpawnPlugin(), max_epochs=100,  gradient_clip_val=1.0, precision=16, detect_anomaly=False)\r\n```\r\n\r\nHowever, in the PyG [docs](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.LightningDataset) it written, that it works with `pytorch_lightning.strategies.DDPSpawnStrategy` but not Plugin. Also, plugins are deprecated in future versions of PyTorch lightning.\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.11.0\r\n* OS: Ubuntu 20.4\r\n* Python version: 3.9.7\r\n* CUDA/cuDNN version: 11.3.1/2.8.0\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* PyTorch lightning: 1.6.2", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4560/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4542", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4542/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4542/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4542/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4542", "id": 1215606643, "node_id": "I_kwDOBlHMec5IdK9z", "number": 4542, "title": "Importing torch-geometry resulting crash on colab", "user": {"login": "Kousaka-Honoka", "id": 36869676, "node_id": "MDQ6VXNlcjM2ODY5Njc2", "avatar_url": "https://avatars.githubusercontent.com/u/36869676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kousaka-Honoka", "html_url": "https://github.com/Kousaka-Honoka", "followers_url": "https://api.github.com/users/Kousaka-Honoka/followers", "following_url": "https://api.github.com/users/Kousaka-Honoka/following{/other_user}", "gists_url": "https://api.github.com/users/Kousaka-Honoka/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kousaka-Honoka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kousaka-Honoka/subscriptions", "organizations_url": "https://api.github.com/users/Kousaka-Honoka/orgs", "repos_url": "https://api.github.com/users/Kousaka-Honoka/repos", "events_url": "https://api.github.com/users/Kousaka-Honoka/events{/privacy}", "received_events_url": "https://api.github.com/users/Kousaka-Honoka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-04-26T08:38:00Z", "updated_at": "2022-04-26T08:41:00Z", "closed_at": "2022-04-26T08:40:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nAs title.\r\n!pip install -q torch-scatter -f https://data.pyg.org/whl/torch-1.10.0+cu113.html\r\n!pip install -q torch-sparse -f https://data.pyg.org/whl/torch-1.10.0+cu113.html\r\n!pip install -q torch-geometric\r\n\r\nfrom torch_geometric.data import Data\r\nCrash\n\n### Environment\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4542/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4539", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4539/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4539/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4539/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4539", "id": 1215389647, "node_id": "I_kwDOBlHMec5IcV_P", "number": 4539, "title": "Crash on Google Colab when importing torch_geometric", "user": {"login": "zhuozuoy", "id": 86935544, "node_id": "MDQ6VXNlcjg2OTM1NTQ0", "avatar_url": "https://avatars.githubusercontent.com/u/86935544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhuozuoy", "html_url": "https://github.com/zhuozuoy", "followers_url": "https://api.github.com/users/zhuozuoy/followers", "following_url": "https://api.github.com/users/zhuozuoy/following{/other_user}", "gists_url": "https://api.github.com/users/zhuozuoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhuozuoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhuozuoy/subscriptions", "organizations_url": "https://api.github.com/users/zhuozuoy/orgs", "repos_url": "https://api.github.com/users/zhuozuoy/repos", "events_url": "https://api.github.com/users/zhuozuoy/events{/privacy}", "received_events_url": "https://api.github.com/users/zhuozuoy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-04-26T04:49:30Z", "updated_at": "2023-01-26T20:28:40Z", "closed_at": "2022-04-26T07:59:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nI follow the instruction in Notebook: Tutorial12 GAE for link prediction.ipynb on https://pytorch-geometric.readthedocs.io/en/latest/notes/colabs.html\r\n\r\nI install the PyG on Google Colab using the code inside:\r\n!pip install -q torch-scatter -f https://data.pyg.org/whl/torch-1.10.0+cu113.html\r\n!pip install -q torch-sparse -f https://data.pyg.org/whl/torch-1.10.0+cu113.html\r\n!pip install -q git+https://github.com/pyg-team/pytorch_geometric.git\r\n\r\nWhen I run either code\r\nimport torch_geometric\r\nfrom torch_geometric.data import Data\r\nThe colab notebook will crash and restart.\r\n\r\n### Environment\r\n\r\n* PyG version: 2.0.5\r\n* PyTorch version: 1.10.2\r\n* OS: Google Colab\r\n* Python version: 3.7\r\n* CUDA/cuDNN version: 113\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): \r\n* !pip install -q torch-scatter -f https://data.pyg.org/whl/torch-1.10.2+cu113.html\r\n   !pip install -q torch-sparse -f https://data.pyg.org/whl/torch-1.10.2+cu113.html\r\n   !pip install -q git+https://github.com/pyg-team/pytorch_geometric.git\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):torch-scatter: 2.0.9      torch-sparse: 0.6.13\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4539/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4515", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4515/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4515/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4515/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4515", "id": 1211391267, "node_id": "I_kwDOBlHMec5INF0j", "number": 4515, "title": "IMDB dataset contains DBLP data", "user": {"login": "vedantbhatia", "id": 22726676, "node_id": "MDQ6VXNlcjIyNzI2Njc2", "avatar_url": "https://avatars.githubusercontent.com/u/22726676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vedantbhatia", "html_url": "https://github.com/vedantbhatia", "followers_url": "https://api.github.com/users/vedantbhatia/followers", "following_url": "https://api.github.com/users/vedantbhatia/following{/other_user}", "gists_url": "https://api.github.com/users/vedantbhatia/gists{/gist_id}", "starred_url": "https://api.github.com/users/vedantbhatia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vedantbhatia/subscriptions", "organizations_url": "https://api.github.com/users/vedantbhatia/orgs", "repos_url": "https://api.github.com/users/vedantbhatia/repos", "events_url": "https://api.github.com/users/vedantbhatia/events{/privacy}", "received_events_url": "https://api.github.com/users/vedantbhatia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-04-21T18:13:25Z", "updated_at": "2022-04-21T19:06:20Z", "closed_at": "2022-04-21T18:59:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "[User error]", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4515/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4509", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4509/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4509/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4509/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4509", "id": 1210343710, "node_id": "PR_kwDOBlHMec42hlwT", "number": 4509, "title": "fix minor bug in `LinkNeighborLoader` when data.x does not exist", "user": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-04-21T00:14:55Z", "updated_at": "2022-04-21T04:17:06Z", "closed_at": "2022-04-21T04:17:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4509", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4509", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4509.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4509.patch", "merged_at": "2022-04-21T04:17:06Z"}, "body": "Fixing a small bug that exists when `data.x` does not exist", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4509/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4506", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4506/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4506/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4506/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4506", "id": 1209881898, "node_id": "PR_kwDOBlHMec42gG3H", "number": 4506, "title": "Fix `DimeNet` envelope bug with missing clamping", "user": {"login": "danielzuegner", "id": 22178797, "node_id": "MDQ6VXNlcjIyMTc4Nzk3", "avatar_url": "https://avatars.githubusercontent.com/u/22178797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielzuegner", "html_url": "https://github.com/danielzuegner", "followers_url": "https://api.github.com/users/danielzuegner/followers", "following_url": "https://api.github.com/users/danielzuegner/following{/other_user}", "gists_url": "https://api.github.com/users/danielzuegner/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielzuegner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielzuegner/subscriptions", "organizations_url": "https://api.github.com/users/danielzuegner/orgs", "repos_url": "https://api.github.com/users/danielzuegner/repos", "events_url": "https://api.github.com/users/danielzuegner/events{/privacy}", "received_events_url": "https://api.github.com/users/danielzuegner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3969905060, "node_id": "LA_kwDOBlHMec7sn_Gk", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/nn", "name": "nn", "color": "A254D0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "danielzuegner", "id": 22178797, "node_id": "MDQ6VXNlcjIyMTc4Nzk3", "avatar_url": "https://avatars.githubusercontent.com/u/22178797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielzuegner", "html_url": "https://github.com/danielzuegner", "followers_url": "https://api.github.com/users/danielzuegner/followers", "following_url": "https://api.github.com/users/danielzuegner/following{/other_user}", "gists_url": "https://api.github.com/users/danielzuegner/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielzuegner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielzuegner/subscriptions", "organizations_url": "https://api.github.com/users/danielzuegner/orgs", "repos_url": "https://api.github.com/users/danielzuegner/repos", "events_url": "https://api.github.com/users/danielzuegner/events{/privacy}", "received_events_url": "https://api.github.com/users/danielzuegner/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "danielzuegner", "id": 22178797, "node_id": "MDQ6VXNlcjIyMTc4Nzk3", "avatar_url": "https://avatars.githubusercontent.com/u/22178797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielzuegner", "html_url": "https://github.com/danielzuegner", "followers_url": "https://api.github.com/users/danielzuegner/followers", "following_url": "https://api.github.com/users/danielzuegner/following{/other_user}", "gists_url": "https://api.github.com/users/danielzuegner/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielzuegner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielzuegner/subscriptions", "organizations_url": "https://api.github.com/users/danielzuegner/orgs", "repos_url": "https://api.github.com/users/danielzuegner/repos", "events_url": "https://api.github.com/users/danielzuegner/events{/privacy}", "received_events_url": "https://api.github.com/users/danielzuegner/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-04-20T15:52:19Z", "updated_at": "2022-04-21T07:37:16Z", "closed_at": "2022-04-21T07:37:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4506", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4506", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4506.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4506.patch", "merged_at": "2022-04-21T07:37:15Z"}, "body": "# What does this fix?\r\n\r\nIn the `Envelope` class used in the radial basis function in DimeNet, there's a bug. More precisely, the `forward()` is not clamping `d/c` to 1, as is done in the [original implementation](https://github.com/gasteigerjo/dimenet/blob/master/dimenet/model/layers/envelope.py#L23). This could lead to exploding output of the Envelope when `d/c` is around 2 (values go up to 300). This lead to numerical instability for me.\r\n\r\nLet me know in case you have any questions.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4506/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4486", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4486/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4486/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4486/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4486", "id": 1205948089, "node_id": "PR_kwDOBlHMec42TxWS", "number": 4486, "title": "Fix `from_networkx` in case where attributes are tensors", "user": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-04-15T23:24:33Z", "updated_at": "2022-04-20T10:48:07Z", "closed_at": "2022-04-20T10:48:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4486", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4486", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4486.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4486.patch", "merged_at": "2022-04-20T10:48:06Z"}, "body": "Fixes problem reported in https://github.com/pyg-team/pytorch_geometric/issues/4445, the problem being that \r\n\r\n```torch.tensor([torch.Tensor([1,2,3], torch.Tensor([1,2,3]])```\r\n \r\ndoes not work, they need to be stacked instead.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4486/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4465", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4465/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4465/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4465/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4465", "id": 1202417614, "node_id": "I_kwDOBlHMec5Hq2_O", "number": 4465, "title": "AttributeError: 'GlobalStorage' object has no attribute 'neg_edge_label_index'", "user": {"login": "puranjayr96", "id": 13950530, "node_id": "MDQ6VXNlcjEzOTUwNTMw", "avatar_url": "https://avatars.githubusercontent.com/u/13950530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puranjayr96", "html_url": "https://github.com/puranjayr96", "followers_url": "https://api.github.com/users/puranjayr96/followers", "following_url": "https://api.github.com/users/puranjayr96/following{/other_user}", "gists_url": "https://api.github.com/users/puranjayr96/gists{/gist_id}", "starred_url": "https://api.github.com/users/puranjayr96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puranjayr96/subscriptions", "organizations_url": "https://api.github.com/users/puranjayr96/orgs", "repos_url": "https://api.github.com/users/puranjayr96/repos", "events_url": "https://api.github.com/users/puranjayr96/events{/privacy}", "received_events_url": "https://api.github.com/users/puranjayr96/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-04-12T21:36:31Z", "updated_at": "2022-04-12T23:56:16Z", "closed_at": "2022-04-12T22:27:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhen trying to train an autoencoder using GAE\r\n\r\nI get the above error for the following line:\r\n```python\r\nz = model.encode(data.x.double(), data.edge_index)\r\nloss = model.recon_loss(z, data.pos_edge_label_index, data.neg_edge_label_index)\r\n```\r\nI checked and my data has neg_edge_label_index \r\nI've used RandomLinkSplit to get the positive and negative edges\r\n```python\r\ntfs = T.RandomLinkSplit(num_val=0.0, num_test=0.2,\r\n                      split_labels=True,neg_sampling_ratio=2.0)\r\n```\r\n\r\nthis is my error output\r\n```\r\nTraceback (most recent call last):\r\n  File \"train.py\", line 195, in <module>\r\n    loss = train(data)\r\n  File \"train.py\", line 166, in train\r\n    loss = model.recon_loss(z, data.pos_edge_label_index, data.neg_edge_label_index)\r\n  File \"{path}/lib/python3.10/site-packages/torch_geometric/data/data.py\", line 362, in __getattr__\r\n    return getattr(self._store, key)\r\n  File \"{anaconda_path}/anaconda3/envs/autoencoder/lib/python3.10/site-packages/torch_geometric/data/storage.py\", line 52, in __getattr__\r\n    raise AttributeError(\r\nAttributeError: 'GlobalStorage' object has no attribute 'neg_edge_label_index'\r\n\r\n```\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.11.0+cu102\r\n* OS: CentOS\r\n* Python version: 3.10\r\n* CUDA/cuDNN version: 10.2\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4465/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4445", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4445/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4445/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4445/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4445", "id": 1198738828, "node_id": "I_kwDOBlHMec5Hc02M", "number": 4445, "title": "from_networkx seems not compatible with set_node_attributes", "user": {"login": "minhtriet", "id": 2603847, "node_id": "MDQ6VXNlcjI2MDM4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2603847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minhtriet", "html_url": "https://github.com/minhtriet", "followers_url": "https://api.github.com/users/minhtriet/followers", "following_url": "https://api.github.com/users/minhtriet/following{/other_user}", "gists_url": "https://api.github.com/users/minhtriet/gists{/gist_id}", "starred_url": "https://api.github.com/users/minhtriet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minhtriet/subscriptions", "organizations_url": "https://api.github.com/users/minhtriet/orgs", "repos_url": "https://api.github.com/users/minhtriet/repos", "events_url": "https://api.github.com/users/minhtriet/events{/privacy}", "received_events_url": "https://api.github.com/users/minhtriet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2022-04-09T18:37:16Z", "updated_at": "2022-07-14T13:53:05Z", "closed_at": "2022-04-20T10:48:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI cannot create a graph from networkx if using `set_node_attributes` \r\n\r\n```python\r\nimport networkx as nx\r\n\r\nG = nx.path_graph(3)\r\nattrs = {0: {\"attr1\": torch.tensor([1,0,0], dtype=torch.int64)},\r\n         1: {\"attr1\": torch.tensor([1,0,0], dtype=torch.int64)}, \r\n         2: {\"attr1\": torch.tensor([0,1,0], dtype=torch.int64)}}\r\nnx.set_node_attributes(G, attrs)\r\n\r\npytorch_graph = torch_geometric.utils.from_networkx(G, group_node_attrs=['attr1'])\r\n```\r\nStack trace\r\n```\r\ntorch_geometric/utils/convert.py in from_networkx(G, group_node_attrs, group_edge_attrs)\r\n    189         for key in group_node_attrs:\r\n    190             x = data[key]\r\n--> 191             x = x.view(-1, 1) if x.dim() <= 1 else x\r\n    192             xs.append(x)\r\n    193             del data[key]\r\n\r\nAttributeError: 'list' object has no attribute 'dim'\r\n```\r\n\r\nIt is not clear for me from the documentation what I have done wrong\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.11.0\r\n* OS: macOS\r\n* Python version: 3.7.9\r\n* CUDA/cuDNN version: na\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4445/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4441", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4441/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4441/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4441/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4441", "id": 1198414201, "node_id": "PR_kwDOBlHMec417XPT", "number": 4441, "title": "Convert edge types input for `LinkNeighborLoader` to canonical form.", "user": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 4017637815, "node_id": "LA_kwDOBlHMec7veEm3", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/loader", "name": "loader", "color": "CEE2C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-04-09T07:56:23Z", "updated_at": "2022-04-09T13:09:15Z", "closed_at": "2022-04-09T13:09:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4441", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4441", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4441.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4441.patch", "merged_at": "2022-04-09T13:09:15Z"}, "body": "Modifies the handling of the input types for edges so that the user can create the `LinkNeighborLoader` \r\nwith either\r\n```\r\nloader = LinkNeighborLoader(data, num_neighbors=[-1] * 2,\r\n                            edge_label_index=('paper', 'paper'))\r\n```\r\nor\r\n```\r\nloader = LinkNeighborLoader(data, num_neighbors=[-1] * 2,\r\n                            edge_label_index=('paper', 'to', 'paper'))\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4441/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4439", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4439/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4439/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4439/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4439", "id": 1198282566, "node_id": "PR_kwDOBlHMec4164W-", "number": 4439, "title": "Fix `LinkNeighborLoader` in case `src_node_type = dst_node_type`", "user": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Padarn", "id": 858039, "node_id": "MDQ6VXNlcjg1ODAzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/858039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Padarn", "html_url": "https://github.com/Padarn", "followers_url": "https://api.github.com/users/Padarn/followers", "following_url": "https://api.github.com/users/Padarn/following{/other_user}", "gists_url": "https://api.github.com/users/Padarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Padarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Padarn/subscriptions", "organizations_url": "https://api.github.com/users/Padarn/orgs", "repos_url": "https://api.github.com/users/Padarn/repos", "events_url": "https://api.github.com/users/Padarn/events{/privacy}", "received_events_url": "https://api.github.com/users/Padarn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-04-09T06:00:11Z", "updated_at": "2022-04-09T06:54:15Z", "closed_at": "2022-04-09T06:54:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4439", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4439", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4439.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4439.patch", "merged_at": "2022-04-09T06:54:15Z"}, "body": "This PR fixes a corner case in the `LinkNeighborLoader` introduced in https://github.com/pyg-team/pytorch_geometric/pull/4396 when the `HeteroData` node type is a self-loop type.\r\n\r\n- [x] Fix by taking union of nodes \r\n- [x] Test fix ", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4439/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4428", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4428/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4428/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4428/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4428", "id": 1195663651, "node_id": "PR_kwDOBlHMec41ybuc", "number": 4428, "title": "Fix the original broken download url of DBP15K", "user": {"login": "nxznm", "id": 55944993, "node_id": "MDQ6VXNlcjU1OTQ0OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/55944993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nxznm", "html_url": "https://github.com/nxznm", "followers_url": "https://api.github.com/users/nxznm/followers", "following_url": "https://api.github.com/users/nxznm/following{/other_user}", "gists_url": "https://api.github.com/users/nxznm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nxznm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nxznm/subscriptions", "organizations_url": "https://api.github.com/users/nxznm/orgs", "repos_url": "https://api.github.com/users/nxznm/repos", "events_url": "https://api.github.com/users/nxznm/events{/privacy}", "received_events_url": "https://api.github.com/users/nxznm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "nxznm", "id": 55944993, "node_id": "MDQ6VXNlcjU1OTQ0OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/55944993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nxznm", "html_url": "https://github.com/nxznm", "followers_url": "https://api.github.com/users/nxznm/followers", "following_url": "https://api.github.com/users/nxznm/following{/other_user}", "gists_url": "https://api.github.com/users/nxznm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nxznm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nxznm/subscriptions", "organizations_url": "https://api.github.com/users/nxznm/orgs", "repos_url": "https://api.github.com/users/nxznm/repos", "events_url": "https://api.github.com/users/nxznm/events{/privacy}", "received_events_url": "https://api.github.com/users/nxznm/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nxznm", "id": 55944993, "node_id": "MDQ6VXNlcjU1OTQ0OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/55944993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nxznm", "html_url": "https://github.com/nxznm", "followers_url": "https://api.github.com/users/nxznm/followers", "following_url": "https://api.github.com/users/nxznm/following{/other_user}", "gists_url": "https://api.github.com/users/nxznm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nxznm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nxznm/subscriptions", "organizations_url": "https://api.github.com/users/nxznm/orgs", "repos_url": "https://api.github.com/users/nxznm/repos", "events_url": "https://api.github.com/users/nxznm/events{/privacy}", "received_events_url": "https://api.github.com/users/nxznm/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-04-07T08:00:34Z", "updated_at": "2022-04-07T08:21:17Z", "closed_at": "2022-04-07T08:21:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4428", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4428", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4428.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4428.patch", "merged_at": "2022-04-07T08:21:16Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4428/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4425", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4425/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4425/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4425/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4425", "id": 1195205888, "node_id": "I_kwDOBlHMec5HPWUA", "number": 4425, "title": "DimeNet Implementation Error", "user": {"login": "LanceKnight", "id": 5760199, "node_id": "MDQ6VXNlcjU3NjAxOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/5760199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LanceKnight", "html_url": "https://github.com/LanceKnight", "followers_url": "https://api.github.com/users/LanceKnight/followers", "following_url": "https://api.github.com/users/LanceKnight/following{/other_user}", "gists_url": "https://api.github.com/users/LanceKnight/gists{/gist_id}", "starred_url": "https://api.github.com/users/LanceKnight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LanceKnight/subscriptions", "organizations_url": "https://api.github.com/users/LanceKnight/orgs", "repos_url": "https://api.github.com/users/LanceKnight/repos", "events_url": "https://api.github.com/users/LanceKnight/events{/privacy}", "received_events_url": "https://api.github.com/users/LanceKnight/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-04-06T21:31:10Z", "updated_at": "2022-04-13T17:36:47Z", "closed_at": "2022-04-07T05:22:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\n`        self.rbf = BesselBasisLayer(num_radial, cutoff, envelope_exponent)`\r\n\r\n> Traceback (most recent call last):\r\n>   File \"training_contrastive_dimenetpp.py\", line 79, in <module>\r\n>     model = DimeNetPlusPlus(\r\n>   File \"/home/liuy69/projects/unified_framework/examples/ChIRo/model/gnn_3D/dimenet_pp.py\", line 245, in __init__\r\n>     self.rbf = BesselBasisLayer(num_radial, cutoff, envelope_exponent)\r\n>   File \"/home/liuy69/environments/venv/kgnn-env/lib/python3.8/site-packages/torch_geometric/nn/models/dimenet.py\", line 59, in __init__\r\n>     self.reset_parameters()\r\n>   File \"/home/liuy69/environments/venv/kgnn-env/lib/python3.8/site-packages/torch_geometric/nn/models/dimenet.py\", line 62, in reset_parameters\r\n>     torch.arange(1, self.freq.numel() + 1, out=self.freq).mul_(PI)\r\n> RuntimeError: a leaf Variable that requires grad is being used in an in-place operation\n\n### Environment\n\n* PyG version: 2.0.5\r\n* PyTorch version: 1.11.0\r\n* OS: CentOS7\r\n* Python version: 3.8\r\n* CUDA/cuDNN version: 11.2\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4425/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4402", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4402/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4402/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4402/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4402", "id": 1190756968, "node_id": "PR_kwDOBlHMec41iMJB", "number": 4402, "title": "Fix `summary` matrix in DGI", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-04-02T22:45:33Z", "updated_at": "2022-04-02T22:48:36Z", "closed_at": "2022-04-02T22:48:36Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4402", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4402", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4402.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4402.patch", "merged_at": "2022-04-02T22:48:36Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4402/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4400", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4400/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4400/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4400/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4400", "id": 1190711888, "node_id": "PR_kwDOBlHMec41iDow", "number": 4400, "title": "Optional `pytorch-spline-conv` in conda", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 1267385339, "node_id": "MDU6TGFiZWwxMjY3Mzg1MzM5", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/installation", "name": "installation", "color": "bfdadc", "default": false, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-04-02T18:52:22Z", "updated_at": "2022-04-02T18:55:56Z", "closed_at": "2022-04-02T18:55:56Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4400", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4400", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4400.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4400.patch", "merged_at": "2022-04-02T18:55:56Z"}, "body": "Resolves https://github.com/pyg-team/pytorch_geometric/issues/4386.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4400/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4394", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4394/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4394/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4394/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4394", "id": 1189631706, "node_id": "PR_kwDOBlHMec41ewNg", "number": 4394, "title": "Fix: `num_nodes` in `FixedPoints` transform", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-04-01T11:04:47Z", "updated_at": "2022-04-01T11:09:49Z", "closed_at": "2022-04-01T11:09:48Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4394", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4394", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4394.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4394.patch", "merged_at": "2022-04-01T11:09:48Z"}, "body": "Fixes https://github.com/pyg-team/pytorch_geometric/discussions/4387", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4394/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4384", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4384/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4384/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4384/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4384", "id": 1187873526, "node_id": "PR_kwDOBlHMec41Y0m2", "number": 4384, "title": "Fix data sharing in `NeighborLoader`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-03-31T10:33:44Z", "updated_at": "2022-03-31T11:45:57Z", "closed_at": "2022-03-31T11:39:46Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4384", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4384", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4384.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4384.patch", "merged_at": "2022-03-31T11:39:46Z"}, "body": "* Revert to earlier stage where only `colptr`, `row` and `perm` are shared across a set of workers (instead of the complete `data` object).\r\n* Added a `share_memory` attribute to `to_csc` and `to_hetero_csc` calls (which gets set based on `num_workers > 0`)\r\n* Resolved a bug in PyTorch Lightning in which a `DataLoader` should not be overridden multiple times. In the past, we had\r\n   ```\r\n   torch.utils.data.DataLoader\r\n          |\r\n   BaseDataLoader\r\n          |\r\n   NeighborLoader\r\n   ```\r\n   which is invalid in PL 1.6. I fixed it for now by dropping the `BaseDataLoader` class and moved its logic directly to `NeighborLoader` (overriding the `_get_iterator` method).\r\n\r\n@mananshah99", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4384/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4382", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4382/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4382/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4382/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4382", "id": 1187482717, "node_id": "I_kwDOBlHMec5Gx4xd", "number": 4382, "title": "In `negative_sampling`, assert captures an exception condition", "user": {"login": "fierval", "id": 987574, "node_id": "MDQ6VXNlcjk4NzU3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/987574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fierval", "html_url": "https://github.com/fierval", "followers_url": "https://api.github.com/users/fierval/followers", "following_url": "https://api.github.com/users/fierval/following{/other_user}", "gists_url": "https://api.github.com/users/fierval/gists{/gist_id}", "starred_url": "https://api.github.com/users/fierval/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fierval/subscriptions", "organizations_url": "https://api.github.com/users/fierval/orgs", "repos_url": "https://api.github.com/users/fierval/repos", "events_url": "https://api.github.com/users/fierval/events{/privacy}", "received_events_url": "https://api.github.com/users/fierval/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-31T04:30:42Z", "updated_at": "2022-03-31T06:12:11Z", "closed_at": "2022-03-31T06:12:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nNot the highest priority, but...\r\n\r\n`negative_sampling` function has an assert (negative_sampling.py line 52: `assert idx.numel() < population, (\"No negative edges to sample\")`\r\n\r\nThis assert should be removed and replaced with either an exception or an empty `edge_index` returned. Otherwise `negative_sampling` cannot really be used without being wrapped into  `try/except` for `AssertionError`.\n\n### Environment\n\n* PyG version: 2.0.3\r\n* PyTorch version: 1.10\r\n* OS: Windows / Linux\r\n* Python version: 3.9\r\n* CUDA/cuDNN version: 3.13\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4382/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4378", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4378/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4378/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4378/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4378", "id": 1186471018, "node_id": "I_kwDOBlHMec5GuBxq", "number": 4378, "title": "AttributeError: module 'scipy.sparse' has no attribute 'coo_array'", "user": {"login": "SyounenZ", "id": 64532769, "node_id": "MDQ6VXNlcjY0NTMyNzY5", "avatar_url": "https://avatars.githubusercontent.com/u/64532769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SyounenZ", "html_url": "https://github.com/SyounenZ", "followers_url": "https://api.github.com/users/SyounenZ/followers", "following_url": "https://api.github.com/users/SyounenZ/following{/other_user}", "gists_url": "https://api.github.com/users/SyounenZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/SyounenZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SyounenZ/subscriptions", "organizations_url": "https://api.github.com/users/SyounenZ/orgs", "repos_url": "https://api.github.com/users/SyounenZ/repos", "events_url": "https://api.github.com/users/SyounenZ/events{/privacy}", "received_events_url": "https://api.github.com/users/SyounenZ/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2022-03-30T13:33:02Z", "updated_at": "2023-02-28T14:35:35Z", "closed_at": "2022-04-03T14:34:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\ncode:\r\nfrom torch_geometric.datasets import KarateClub\r\ndataset = KarateClub()\r\n\r\nbug:\r\nTraceback (most recent call last):\r\n  File \"F:\\study\\python\\test\\test4pyg.py\", line 2, in <module>\r\n    dataset = KarateClub()\r\n  File \"F:\\anaconda\\envs\\ai\\lib\\site-packages\\torch_geometric\\datasets\\karate.py\", line 50, in __init__\r\n    adj = nx.to_scipy_sparse_array(G).tocoo()\r\n  File \"F:\\anaconda\\envs\\ai\\lib\\site-packages\\networkx\\convert_matrix.py\", line 921, in to_scipy_sparse_array\r\n    A = sp.sparse.coo_array((d, (r, c)), shape=(nlen, nlen), dtype=dtype)\r\nAttributeError: module 'scipy.sparse' has no attribute 'coo_array'\r\n\r\n\r\n\n\n### Environment\n\n* PyG version:2.0.4\r\n* PyTorch versn:1.10.1\r\n* OS:windows10\r\n* Python version:3.9.7\r\n* CUDA/cuDNN version:CU113\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n* pytorch-scatter:2.0.9\r\n* pytorch-sparse:0.6.13\r\n* pytorch-spline-conv:1.2.1\r\n* pytorch-cluster:1.6.0\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4378/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4378/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4375", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4375/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4375/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4375/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4375", "id": 1185398908, "node_id": "PR_kwDOBlHMec41Qfr_", "number": 4375, "title": "Fix unbound local variable error in `NeighborLoader`", "user": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-03-29T20:50:59Z", "updated_at": "2022-03-30T06:07:53Z", "closed_at": "2022-03-30T06:07:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4375", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4375", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4375.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4375.patch", "merged_at": "2022-03-30T06:07:52Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4375/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4363", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4363/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4363/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4363/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4363", "id": 1183241227, "node_id": "I_kwDOBlHMec5GhtQL", "number": 4363, "title": "Segmentation fault (core dumped) on import torch_geometric", "user": {"login": "DanielPerezJensen", "id": 31691611, "node_id": "MDQ6VXNlcjMxNjkxNjEx", "avatar_url": "https://avatars.githubusercontent.com/u/31691611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanielPerezJensen", "html_url": "https://github.com/DanielPerezJensen", "followers_url": "https://api.github.com/users/DanielPerezJensen/followers", "following_url": "https://api.github.com/users/DanielPerezJensen/following{/other_user}", "gists_url": "https://api.github.com/users/DanielPerezJensen/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanielPerezJensen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanielPerezJensen/subscriptions", "organizations_url": "https://api.github.com/users/DanielPerezJensen/orgs", "repos_url": "https://api.github.com/users/DanielPerezJensen/repos", "events_url": "https://api.github.com/users/DanielPerezJensen/events{/privacy}", "received_events_url": "https://api.github.com/users/DanielPerezJensen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2022-03-28T10:40:34Z", "updated_at": "2023-04-13T09:50:24Z", "closed_at": "2022-03-29T09:35:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nWhen I try to import torch_geometric I get a segmentation fault (core dumped) error.\r\n\r\nI have tried reinstalling torch_geometric, and I have verified that PyTorch and torch-scatter library do work as intended (in the sense that importing them yields no errors). \r\n\r\nI wish I could add more detail, but I am just trying to import torch_geometric to get started and as such haven't even used any functions yet, since every time I try to import I get this error.\r\n\r\n```python\r\nimport torch_geometric\r\n```\r\n\r\nI installed torch_geometric with the following command (from the getting started page): \r\n`pip install torch-scatter torch-sparse torch-cluster torch-spline-conv torch-geometric -f https://data.pyg.org/whl/torch-1.11.0+cu113.html`\r\n\r\nI have also installed the CPU version to check if that would not yield any error, but still I get the same segmentation fault (core dumped) error upon importing torch_geometric.\r\n\r\n### Environment\r\n\r\n* PyG version: latest\r\n* PyTorch version: 1.11.0+cu113\r\n* OS: Ubuntu 20.04.4 LTS x86_64\r\n* Python version: 3.8.10\r\n* CUDA/cuDNN version: 11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): \r\n** torch_scatter: 2.0.9\r\n** torch_cluster: 1.6.0\r\n** torch_spline_conv: 1.2.1\r\n\r\n### UPDATE:\r\n\r\nI added the output from `gdb python -c \"import torch_geometric\"` figured it might be useful:\r\n\r\n```\r\nwarning: Currently logging to gdb.txt.  Turn the logging off and on to make the new setting effective.\r\nSignal        Stop\tPrint\tPass to program\tDescription\r\nSIG33         No\tNo\tYes\t\tReal-time event 33\r\nStarting program: /home/daniel/.local/share/virtualenvs/flow-forecasting-thesis-VrA_h4b9/bin/python -c import\\ torch_geometric\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\n[New Thread 0x7ffff4943700 (LWP 11265)]\r\n[New Thread 0x7ffff4142700 (LWP 11266)]\r\n[New Thread 0x7fffef941700 (LWP 11267)]\r\n[New Thread 0x7fffef140700 (LWP 11268)]\r\n[New Thread 0x7fffea93f700 (LWP 11269)]\r\n[New Thread 0x7fffe813e700 (LWP 11270)]\r\n[New Thread 0x7fffe593d700 (LWP 11271)]\r\n[New Thread 0x7fffe313c700 (LWP 11272)]\r\n[New Thread 0x7fffe093b700 (LWP 11273)]\r\n[New Thread 0x7fffde13a700 (LWP 11274)]\r\n[New Thread 0x7fffdb939700 (LWP 11275)]\r\n[New Thread 0x7fffd9138700 (LWP 11276)]\r\n[New Thread 0x7fffd6937700 (LWP 11277)]\r\n[New Thread 0x7fffd4136700 (LWP 11278)]\r\n[New Thread 0x7fffd1935700 (LWP 11279)]\r\n[Thread 0x7fffd1935700 (LWP 11279) exited]\r\n[Thread 0x7fffd4136700 (LWP 11278) exited]\r\n[Thread 0x7fffd6937700 (LWP 11277) exited]\r\n[Thread 0x7fffd9138700 (LWP 11276) exited]\r\n[Thread 0x7fffdb939700 (LWP 11275) exited]\r\n[Thread 0x7fffde13a700 (LWP 11274) exited]\r\n[Thread 0x7fffe093b700 (LWP 11273) exited]\r\n[Thread 0x7fffe313c700 (LWP 11272) exited]\r\n[Thread 0x7fffe593d700 (LWP 11271) exited]\r\n[Thread 0x7fffe813e700 (LWP 11270) exited]\r\n[Thread 0x7fffea93f700 (LWP 11269) exited]\r\n[Thread 0x7fffef140700 (LWP 11268) exited]\r\n[Thread 0x7fffef941700 (LWP 11267) exited]\r\n[Thread 0x7ffff4142700 (LWP 11266) exited]\r\n[Thread 0x7ffff4943700 (LWP 11265) exited]\r\n[Detaching after fork from child process 11280]\r\n[New Thread 0x7fffd1935700 (LWP 11284)]\r\n\r\nThread 1 \"python\" received signal SIGSEGV, Segmentation fault.\r\n0x00007ffefc21a1e1 in google::protobuf::internal::ReflectionOps::FindInitializationErrors(google::protobuf::Message const&, std::string const&, std::vector<std::string, std::allocator<std::string> >*) () from /home/daniel/.local/share/virtualenvs/flow-forecasting-thesis-VrA_h4b9/lib/python3.8/site-packages/google/protobuf/pyext/_message.cpython-38-x86_64-linux-gnu.so\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4363/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4363/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4359", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4359/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4359/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4359/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4359", "id": 1182508330, "node_id": "I_kwDOBlHMec5Ge6Uq", "number": 4359, "title": "Graphgym config dump location", "user": {"login": "RemyLau", "id": 36778645, "node_id": "MDQ6VXNlcjM2Nzc4NjQ1", "avatar_url": "https://avatars.githubusercontent.com/u/36778645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RemyLau", "html_url": "https://github.com/RemyLau", "followers_url": "https://api.github.com/users/RemyLau/followers", "following_url": "https://api.github.com/users/RemyLau/following{/other_user}", "gists_url": "https://api.github.com/users/RemyLau/gists{/gist_id}", "starred_url": "https://api.github.com/users/RemyLau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RemyLau/subscriptions", "organizations_url": "https://api.github.com/users/RemyLau/orgs", "repos_url": "https://api.github.com/users/RemyLau/repos", "events_url": "https://api.github.com/users/RemyLau/events{/privacy}", "received_events_url": "https://api.github.com/users/RemyLau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3465159234, "node_id": "LA_kwDOBlHMec7OiiJC", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/graphgym", "name": "graphgym", "color": "BBD6C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "JiaxuanYou", "id": 20088523, "node_id": "MDQ6VXNlcjIwMDg4NTIz", "avatar_url": "https://avatars.githubusercontent.com/u/20088523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JiaxuanYou", "html_url": "https://github.com/JiaxuanYou", "followers_url": "https://api.github.com/users/JiaxuanYou/followers", "following_url": "https://api.github.com/users/JiaxuanYou/following{/other_user}", "gists_url": "https://api.github.com/users/JiaxuanYou/gists{/gist_id}", "starred_url": "https://api.github.com/users/JiaxuanYou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JiaxuanYou/subscriptions", "organizations_url": "https://api.github.com/users/JiaxuanYou/orgs", "repos_url": "https://api.github.com/users/JiaxuanYou/repos", "events_url": "https://api.github.com/users/JiaxuanYou/events{/privacy}", "received_events_url": "https://api.github.com/users/JiaxuanYou/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JiaxuanYou", "id": 20088523, "node_id": "MDQ6VXNlcjIwMDg4NTIz", "avatar_url": "https://avatars.githubusercontent.com/u/20088523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JiaxuanYou", "html_url": "https://github.com/JiaxuanYou", "followers_url": "https://api.github.com/users/JiaxuanYou/followers", "following_url": "https://api.github.com/users/JiaxuanYou/following{/other_user}", "gists_url": "https://api.github.com/users/JiaxuanYou/gists{/gist_id}", "starred_url": "https://api.github.com/users/JiaxuanYou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JiaxuanYou/subscriptions", "organizations_url": "https://api.github.com/users/JiaxuanYou/orgs", "repos_url": "https://api.github.com/users/JiaxuanYou/repos", "events_url": "https://api.github.com/users/JiaxuanYou/events{/privacy}", "received_events_url": "https://api.github.com/users/JiaxuanYou/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-03-27T12:18:47Z", "updated_at": "2022-03-28T17:38:47Z", "closed_at": "2022-03-28T17:14:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nThe changes made in #4338 seems to introduce an unwanted behavior of storing config file in the root directory.\r\n\r\nI have a config file ``example_config.yaml``, and the output directory is set to ``out_dir: result``.\r\n\r\nPreviously, the output generated looked something like:\r\n```txt\r\nresult\r\n`-- example_config\r\n    |-- 0\r\n    |   |-- train\r\n    |   |-- val\r\n    |   |-- test\r\n    |   `-- logging.log\r\n    |-- 1\r\n    |   |-- train\r\n    |   |-- val\r\n    |   |-- test\r\n    |   `-- logging.log\r\n    `-- config.yaml\r\n```\r\n\r\nAfter the changes made in #4338, the output directory looks something like:\r\n```txt\r\nresult\r\n|-- config.yaml\r\n`-- example_config\r\n    |-- 0\r\n    |   |-- train\r\n    |   |-- val\r\n    |   |-- test\r\n    |   `-- logging.log\r\n    `-- 1\r\n        |-- train\r\n        |-- val\r\n        |-- test\r\n        `-- logging.log\r\n```\r\n\r\n### Question\r\nWas it intentional to pull the ``config.yaml`` out of ``example_config`` and place it under ``result/``? If so, I'm a little bit confused by this setup. Is the use case then have for example another ``example_config2`` output the results to ``result/`` and then share the same ``config.yaml`` (which does not quite make sense)?\r\n\r\n### Environment\r\n\r\n* PyG version: Latest\r\n* PyTorch version: 1.11.0\r\n* OS: CentOS\r\n* Python version: 3.9.7\r\n* CUDA/cuDNN version: 10.2.89\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4359/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4356", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4356/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4356/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4356/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4356", "id": 1182460736, "node_id": "PR_kwDOBlHMec41G0Xq", "number": 4356, "title": "Fix full testing pipeline", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-03-27T09:25:48Z", "updated_at": "2022-03-27T09:25:56Z", "closed_at": "2022-03-27T09:25:55Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4356", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4356", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4356.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4356.patch", "merged_at": "2022-03-27T09:25:55Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4356/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4351", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4351/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4351/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4351/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4351", "id": 1181947329, "node_id": "I_kwDOBlHMec5GcxXB", "number": 4351, "title": "NeighborLoader not sampling edge labels correctly", "user": {"login": "nabihach", "id": 6519168, "node_id": "MDQ6VXNlcjY1MTkxNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/6519168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nabihach", "html_url": "https://github.com/nabihach", "followers_url": "https://api.github.com/users/nabihach/followers", "following_url": "https://api.github.com/users/nabihach/following{/other_user}", "gists_url": "https://api.github.com/users/nabihach/gists{/gist_id}", "starred_url": "https://api.github.com/users/nabihach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nabihach/subscriptions", "organizations_url": "https://api.github.com/users/nabihach/orgs", "repos_url": "https://api.github.com/users/nabihach/repos", "events_url": "https://api.github.com/users/nabihach/events{/privacy}", "received_events_url": "https://api.github.com/users/nabihach/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-26T18:00:28Z", "updated_at": "2022-03-28T07:18:34Z", "closed_at": "2022-03-28T07:18:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI'm trying to use GCNs to do link prediction on the OGB_MAG dataset as follows. (The script is minimal working example, but is long because I had to add reverse edges and then create train/val/test split for edges): \r\n\r\n```\r\nimport torch\r\nimport os\r\nfrom torch_geometric.datasets import OGB_MAG\r\nfrom torch_geometric.data import Data\r\nfrom torch_geometric.loader import NeighborLoader\r\nfrom torch_geometric.nn import GCNConv\r\nimport torch_geometric.transforms as T\r\n\r\npath = os.path.join('..', 'data', 'OGB_MAG')\r\nmag_dataset = OGB_MAG(path, preprocess='metapath2vec')\r\nmag_data = mag_dataset[0]\r\n```\r\n```\r\n# Add reverse edges to the heterogeneous graph.\r\n\r\nr, c = mag_data.edge_index_dict[('author', 'affiliated_with', 'institution')]\r\nmag_data[('institution', 'to', 'author')].edge_index = torch.stack([c, r])\r\nr, c = mag_data.edge_index_dict[('author', 'writes', 'paper')]\r\nmag_data[('paper', 'to', 'author')].edge_index = torch.stack([c, r])\r\nr, c = mag_data.edge_index_dict[('paper', 'has_topic', 'field_of_study')]\r\nmag_data[('field_of_study', 'to', 'paper')].edge_index = torch.stack([c, r])\r\nr, c = mag_data.edge_index_dict[('paper', 'cites', 'paper')]\r\nmag_data[('paper', 'revcites', 'paper')].edge_index = torch.stack([c, r])\r\n```\r\n```\r\n# Split data into train/val/set\r\n\r\ntfs = T.RandomLinkSplit(is_undirected=False, \r\n                      add_negative_train_samples=True,\r\n                      disjoint_train_ratio=0.0,# disjoint mode if > 0\r\n                      split_labels=False,\r\n                      edge_types=[('author', 'affiliated_with', 'institution'), ('author', 'writes', 'paper'), ('paper', 'cites', 'paper'), ('paper', 'has_topic', 'field_of_study')], \r\n                      rev_edge_types=[('institution', 'to', 'author'), ('paper', 'to', 'author'), ('paper', 'revcites', 'paper'), ('field_of_study', 'to', 'paper')], \r\n                      )\r\ntrain_data, val_data, test_data = tfs(mag_data)\r\n```\r\n```\r\n# Create training data for link prediction task\r\n\r\ntrain_x= torch.cat(  (train_data['paper'].x, train_data['author'].x, train_data['field_of_study'].x, train_data['institution'].x), 0).float()\r\ntrain_y = torch.cat( (train_data[('paper', 'cites', 'paper')].edge_label, train_data[('author', 'writes', 'paper')].edge_label, train_data[('paper', 'has_topic', 'field_of_study')].edge_label, train_data[('author', 'affiliated_with', 'institution')].edge_label),  0)\r\ntrain_edge_index = torch.cat( (train_data[('paper', 'cites', 'paper')].edge_label_index, train_data[('author', 'writes', 'paper')].edge_label_index, train_data[('paper', 'has_topic', 'field_of_study')].edge_label_index, train_data[('author', 'affiliated_with', 'institution')].edge_label_index),  1)\r\n\r\ntraining_data = Data(x=train_x, y=train_y, edge_index=train_edge_index)\r\ntraining_data = T.ToSparseTensor(remove_edge_index=False)(training_data)\r\n\r\nprint(training_data)\r\n>>> Data(x=[1939743, 128], edge_index=[2, 29555416], y=[29555416], adj_t=[1939743, 1939743, nnz=29555416])\r\n```\r\n```\r\n# Create model\r\n\r\nhidden_channels = 128\r\nmodel = GCNConv(hidden_channels, hidden_channels, cached=False)\r\n```\r\n```\r\n# Create neighbor loader\r\n\r\ninput_nodes = torch.ones(train_data.num_nodes, dtype=torch.bool)\r\nkwargs = {'batch_size': 1024, 'num_workers': 6, 'persistent_workers': True}\r\ntrain_loader = NeighborLoader(training_data, num_neighbors=[10] * 2, shuffle=True, directed=True, input_nodes=input_nodes, **kwargs)\r\n```\r\n```\r\nbatch = next(iter(train_loader))\r\nprint(batch)\r\n>>> Data(x=[35912, 128], edge_index=[2, 35790], y=[29555416], adj_t=[35912, 35912, nnz=35790], batch_size=1024)\r\n```\r\n\r\nAs we can see, `batch.x` and `batch.edge_index` are the same size as `training_data.x` and `training_data.edge_index`. However, `batch.y` is the same size as `training_data.y`, which seems wrong. Any insights?\r\n\n\n### Environment\n\n* PyG version: 2.0.5\r\n* PyTorch version: 1.10.0\r\n* OS: Linux\r\n* Python version: 3.8\r\n* CUDA/cuDNN version: 10.2\r\n* How you installed PyTorch and PyG: PyTorch from pip, PyG from source on 3/26/2022\r\n* Any other relevant information: `torch.scatter==2.0.9`, `torch-sparse==0.6.13`, `torch-cluster==1.6.0`\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4351/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4347", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4347/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4347/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4347/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4347", "id": 1181730398, "node_id": "PR_kwDOBlHMec41ESAr", "number": 4347, "title": "Fix `GATconv.jittable()`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-03-26T12:34:21Z", "updated_at": "2022-03-26T12:37:18Z", "closed_at": "2022-03-26T12:37:18Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4347", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4347", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4347.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4347.patch", "merged_at": "2022-03-26T12:37:18Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4347/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4346", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4346/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4346/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4346/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4346", "id": 1181384624, "node_id": "I_kwDOBlHMec5Gan-w", "number": 4346, "title": "NeighborLoader on SparseTensor gives shape mismatch", "user": {"login": "nabihach", "id": 6519168, "node_id": "MDQ6VXNlcjY1MTkxNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/6519168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nabihach", "html_url": "https://github.com/nabihach", "followers_url": "https://api.github.com/users/nabihach/followers", "following_url": "https://api.github.com/users/nabihach/following{/other_user}", "gists_url": "https://api.github.com/users/nabihach/gists{/gist_id}", "starred_url": "https://api.github.com/users/nabihach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nabihach/subscriptions", "organizations_url": "https://api.github.com/users/nabihach/orgs", "repos_url": "https://api.github.com/users/nabihach/repos", "events_url": "https://api.github.com/users/nabihach/events{/privacy}", "received_events_url": "https://api.github.com/users/nabihach/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-26T00:27:15Z", "updated_at": "2022-03-26T12:25:06Z", "closed_at": "2022-03-26T12:24:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nI am trying to use the NeighborLoader on the OGB_MAG dataset (converted to SparseTensor), but I get the following runtime error about a shape mismatch:\r\n\r\n```\r\nimport torch\r\nimport os\r\nfrom torch_geometric.datasets import OGB_MAG\r\nfrom torch_geometric.data import Data\r\nfrom torch_geometric.loader import NeighborLoader\r\nfrom torch_geometric.nn import GCNConv\r\nimport torch_geometric.transforms as T\r\n\r\npath = os.path.join('..', 'data', 'OGB_MAG')\r\nmag_dataset = OGB_MAG(path)\r\nmag_data = mag_dataset[0]\r\n\r\nhidden_channels=256\r\nmodel = GCNConv(hidden_channels, hidden_channels, cached=True)\r\n\r\ndata = Data(x=mag_data['paper'].x, y=mag_data['paper'].y, edge_index=mag_data[('paper','cites','paper')].edge_index)\r\ndata = T.ToSparseTensor(remove_edge_index=False)(data)\r\nprint(data)\r\n>>> Data(x=[736389, 128], edge_index=[2, 5416271], y=[736389], adj_t=[736389, 736389, nnz=5416271])\r\n\r\nloader = NeighborLoader(data, num_neighbors=[10] * 2, shuffle=True, directed=False, input_nodes=mag_data['paper'].train_mask, batch_size=16)\r\nbatch = next(iter(loader))\r\nprint(batch)\r\n>>> Data(x=[518, 128], edge_index=[2, 1202], y=[518], adj_t=[518, 518, nnz=1202], batch_size=16)\r\n\r\nmodel(batch.x, batch.adj_t)\r\n>>>RuntimeError: shape mismatch: value tensor of shape [1202] cannot be broadcast to indexing result of shape [1146]\r\n\r\n```\r\n\r\nI'm confused as to why this is happening?\r\n\r\nFull stack trace:\r\n\r\n```\r\n--------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\nInput In [7], in <cell line: 3>()\r\n      1 batch = next(iter(loader))\r\n      2 print(batch)\r\n----> 3 model(batch.x, batch.adj_t)\r\n\r\nFile /anaconda/envs/venvconda3/lib/python3.8/site-packages/torch/nn/modules/module.py:1102, in Module._call_impl(self, *input, **kwargs)\r\n   1098 # If we don't have any hooks, we want to skip the rest of the logic in\r\n   1099 # this function, and just call forward.\r\n   1100 if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks\r\n   1101         or _global_forward_hooks or _global_forward_pre_hooks):\r\n-> 1102     return forward_call(*input, **kwargs)\r\n   1103 # Do not call functions when jit is used\r\n   1104 full_backward_hooks, non_full_backward_hooks = [], []\r\n\r\nFile /anaconda/envs/venvconda3/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py:183, in GCNConv.forward(self, x, edge_index, edge_weight)\r\n    181 cache = self._cached_adj_t\r\n    182 if cache is None:\r\n--> 183     edge_index = gcn_norm(  # yapf: disable\r\n    184         edge_index, edge_weight, x.size(self.node_dim),\r\n    185         self.improved, self.add_self_loops)\r\n    186     if self.cached:\r\n    187         self._cached_adj_t = edge_index\r\n\r\nFile /anaconda/envs/venvconda3/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py:42, in gcn_norm(edge_index, edge_weight, num_nodes, improved, add_self_loops, dtype)\r\n     40     adj_t = adj_t.fill_value(1., dtype=dtype)\r\n     41 if add_self_loops:\r\n---> 42     adj_t = fill_diag(adj_t, fill_value)\r\n     43 deg = sparsesum(adj_t, dim=1)\r\n     44 deg_inv_sqrt = deg.pow_(-0.5)\r\n\r\nFile /anaconda/envs/venvconda3/lib/python3.8/site-packages/torch_sparse/diag.py:91, in fill_diag(src, fill_value, k)\r\n     89 if value is not None:\r\n     90     sizes = [num_diag] + src.sizes()[2:]\r\n---> 91     return set_diag(src, value.new_full(sizes, fill_value), k)\r\n     92 else:\r\n     93     return set_diag(src, None, k)\r\n\r\nFile /anaconda/envs/venvconda3/lib/python3.8/site-packages/torch_sparse/diag.py:48, in set_diag(src, values, k)\r\n     45 diag = torch.arange(start, start + num_diag, device=row.device)\r\n     47 new_row = row.new_empty(mask.size(0))\r\n---> 48 new_row[mask] = row\r\n     49 new_row[inv_mask] = diag\r\n     51 new_col = col.new_empty(mask.size(0))\r\n\r\nRuntimeError: shape mismatch: value tensor of shape [1202] cannot be broadcast to indexing result of shape [1146]\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4346/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4338", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4338/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4338/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4338/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4338", "id": 1180450025, "node_id": "PR_kwDOBlHMec40__gP", "number": 4338, "title": "Fix graphgym config storage directory", "user": {"login": "JiaxuanYou", "id": 20088523, "node_id": "MDQ6VXNlcjIwMDg4NTIz", "avatar_url": "https://avatars.githubusercontent.com/u/20088523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JiaxuanYou", "html_url": "https://github.com/JiaxuanYou", "followers_url": "https://api.github.com/users/JiaxuanYou/followers", "following_url": "https://api.github.com/users/JiaxuanYou/following{/other_user}", "gists_url": "https://api.github.com/users/JiaxuanYou/gists{/gist_id}", "starred_url": "https://api.github.com/users/JiaxuanYou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JiaxuanYou/subscriptions", "organizations_url": "https://api.github.com/users/JiaxuanYou/orgs", "repos_url": "https://api.github.com/users/JiaxuanYou/repos", "events_url": "https://api.github.com/users/JiaxuanYou/events{/privacy}", "received_events_url": "https://api.github.com/users/JiaxuanYou/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "JiaxuanYou", "id": 20088523, "node_id": "MDQ6VXNlcjIwMDg4NTIz", "avatar_url": "https://avatars.githubusercontent.com/u/20088523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JiaxuanYou", "html_url": "https://github.com/JiaxuanYou", "followers_url": "https://api.github.com/users/JiaxuanYou/followers", "following_url": "https://api.github.com/users/JiaxuanYou/following{/other_user}", "gists_url": "https://api.github.com/users/JiaxuanYou/gists{/gist_id}", "starred_url": "https://api.github.com/users/JiaxuanYou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JiaxuanYou/subscriptions", "organizations_url": "https://api.github.com/users/JiaxuanYou/orgs", "repos_url": "https://api.github.com/users/JiaxuanYou/repos", "events_url": "https://api.github.com/users/JiaxuanYou/events{/privacy}", "received_events_url": "https://api.github.com/users/JiaxuanYou/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JiaxuanYou", "id": 20088523, "node_id": "MDQ6VXNlcjIwMDg4NTIz", "avatar_url": "https://avatars.githubusercontent.com/u/20088523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JiaxuanYou", "html_url": "https://github.com/JiaxuanYou", "followers_url": "https://api.github.com/users/JiaxuanYou/followers", "following_url": "https://api.github.com/users/JiaxuanYou/following{/other_user}", "gists_url": "https://api.github.com/users/JiaxuanYou/gists{/gist_id}", "starred_url": "https://api.github.com/users/JiaxuanYou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JiaxuanYou/subscriptions", "organizations_url": "https://api.github.com/users/JiaxuanYou/orgs", "repos_url": "https://api.github.com/users/JiaxuanYou/repos", "events_url": "https://api.github.com/users/JiaxuanYou/events{/privacy}", "received_events_url": "https://api.github.com/users/JiaxuanYou/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-03-25T07:41:13Z", "updated_at": "2022-03-25T12:09:13Z", "closed_at": "2022-03-25T12:09:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4338", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4338", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4338.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4338.patch", "merged_at": "2022-03-25T12:09:12Z"}, "body": "Previously, GraphGym config YAML was stored in the root directory of the experiments, which was not desirable. Now, the config will be correctly stored in each specific experiment directory.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4338/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4320", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4320/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4320/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4320/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4320", "id": 1176502501, "node_id": "PR_kwDOBlHMec40zFTi", "number": 4320, "title": "Fix `NeighborLoader` for `SparseTensor`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-03-22T09:26:17Z", "updated_at": "2022-03-22T09:26:37Z", "closed_at": "2022-03-22T09:26:37Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4320", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4320", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4320.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4320.patch", "merged_at": "2022-03-22T09:26:36Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4320/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4319", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4319/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4319/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4319/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4319", "id": 1176461387, "node_id": "I_kwDOBlHMec5GH2BL", "number": 4319, "title": "SparseTensor Sampling problems", "user": {"login": "nt1tov", "id": 38117618, "node_id": "MDQ6VXNlcjM4MTE3NjE4", "avatar_url": "https://avatars.githubusercontent.com/u/38117618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nt1tov", "html_url": "https://github.com/nt1tov", "followers_url": "https://api.github.com/users/nt1tov/followers", "following_url": "https://api.github.com/users/nt1tov/following{/other_user}", "gists_url": "https://api.github.com/users/nt1tov/gists{/gist_id}", "starred_url": "https://api.github.com/users/nt1tov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nt1tov/subscriptions", "organizations_url": "https://api.github.com/users/nt1tov/orgs", "repos_url": "https://api.github.com/users/nt1tov/repos", "events_url": "https://api.github.com/users/nt1tov/events{/privacy}", "received_events_url": "https://api.github.com/users/nt1tov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-22T08:54:15Z", "updated_at": "2022-03-22T09:26:51Z", "closed_at": "2022-03-22T09:26:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nAs I mentioned in [PyG discussion](https://github.com/pyg-team/pytorch_geometric/discussions/4317)\r\n\r\nwhen I run this code snippet:\r\n```\r\nimport copy\r\nimport os.path as osp\r\n\r\nimport torch\r\nimport torch.nn.functional as F\r\nfrom tqdm import tqdm\r\n\r\nfrom torch_geometric.datasets import Reddit\r\nfrom torch_geometric.loader import NeighborLoader\r\n\r\nimport torch_geometric.transforms as T\r\n\r\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\r\n\r\npath = osp.join(osp.dirname(osp.realpath(__file__)), '..', 'data', 'Reddit')\r\ndataset = Reddit(path, transform=T.ToSparseTensor())\r\n\r\n\r\n# Already send node features/labels to GPU for faster access during sampling:\r\ndata = dataset[0].to(device, 'x', 'y')\r\n\r\nkwargs = {'batch_size': 1024, 'num_workers': 6, 'persistent_workers': True}\r\ntrain_loader = NeighborLoader(data, input_nodes=data.train_mask,\r\n                              num_neighbors=[5, 2], shuffle=True, **kwargs)\r\n\r\nbatch = next(iter(train_loader))\r\nrptr, col, v = batch.adj_t.csr()\r\nprint(batch.x.shape)\r\nprint(rptr.size(0))\r\n\r\n```\r\n\r\nI got those output:\r\n```\r\ntorch.Size([14307, 602])\r\n232966\r\n```\r\n\r\nHence, if I want to run `method` from `torch_sparse` library I will get dimensions mismatch -- my sampled features have **14307** but `rowptr` tensor size is **232906** with a lot of zeros which should be pruned. \r\n\r\nAs a result, if you want to run GraphSAGE model with large samples you will be faced with this issue(on backward pass too), and not be able to train your network.\n\n### Environment\n\n* PyG version:  2.0.3\r\n* PyTorch version: 1.10.2+cu113\r\n* OS:  Ubuntu 16.4\r\n* Python version: 3.6\r\n* CUDA/cuDNN version: 11.6     \r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n    torch-scatter                 2.0.9\r\n    torch-sparse                  0.6.12\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4319/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4314", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4314/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4314/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4314/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4314", "id": 1175814976, "node_id": "I_kwDOBlHMec5GFYNA", "number": 4314, "title": "Issue in the train, test masks within elliptic dataset", "user": {"login": "shravankumar147", "id": 9673411, "node_id": "MDQ6VXNlcjk2NzM0MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/9673411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shravankumar147", "html_url": "https://github.com/shravankumar147", "followers_url": "https://api.github.com/users/shravankumar147/followers", "following_url": "https://api.github.com/users/shravankumar147/following{/other_user}", "gists_url": "https://api.github.com/users/shravankumar147/gists{/gist_id}", "starred_url": "https://api.github.com/users/shravankumar147/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shravankumar147/subscriptions", "organizations_url": "https://api.github.com/users/shravankumar147/orgs", "repos_url": "https://api.github.com/users/shravankumar147/repos", "events_url": "https://api.github.com/users/shravankumar147/events{/privacy}", "received_events_url": "https://api.github.com/users/shravankumar147/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-03-21T19:01:11Z", "updated_at": "2022-03-22T06:55:33Z", "closed_at": "2022-03-22T06:55:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nIn the Elliptic dataset, the train_mask and test mask are not as expected. Hence I wrote a test for the elliptic dataset here.\r\n\r\nReference : [test_elliptic_dataset](https://github.com/pyg-team/pytorch_geometric/pull/4313)\r\n\r\nThis is failing as the mask is not meeting the requirement. \r\n\r\n```\r\n=========================== short test summary info ============================\r\nFAILED test/datasets/test_elliptic.py::test_elliptic - assert 0 == (3462,)\r\n===== 1 failed, 2068 passed, 21 skipped, 15 warnings in 168.01s (0:02:48) ======\r\n```\r\n\r\nIssue could be at:\r\n```\r\n        train_mask = (time_step) < 35 & (y != 2)\r\n        test_mask = (time_step) >= 35 & (y != 2)\r\n```\r\n\r\nLooking forward for your inputs on this issue. \n\n### Environment\n\n* PyG version:  2.0.4\r\n* PyTorch version: 1.11.0+cpu\r\n* OS: 'Windows'\r\n* Python version: '3.10.2'\r\n* CUDA/cuDNN version: None\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip \r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): 2.0.9\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4314/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4312", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4312/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4312/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4312/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4312", "id": 1175782303, "node_id": "PR_kwDOBlHMec40wrcS", "number": 4312, "title": "Fixed `avg_deg` calculation", "user": {"login": "gpdwatkins", "id": 43750964, "node_id": "MDQ6VXNlcjQzNzUwOTY0", "avatar_url": "https://avatars.githubusercontent.com/u/43750964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpdwatkins", "html_url": "https://github.com/gpdwatkins", "followers_url": "https://api.github.com/users/gpdwatkins/followers", "following_url": "https://api.github.com/users/gpdwatkins/following{/other_user}", "gists_url": "https://api.github.com/users/gpdwatkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpdwatkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpdwatkins/subscriptions", "organizations_url": "https://api.github.com/users/gpdwatkins/orgs", "repos_url": "https://api.github.com/users/gpdwatkins/repos", "events_url": "https://api.github.com/users/gpdwatkins/events{/privacy}", "received_events_url": "https://api.github.com/users/gpdwatkins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "gpdwatkins", "id": 43750964, "node_id": "MDQ6VXNlcjQzNzUwOTY0", "avatar_url": "https://avatars.githubusercontent.com/u/43750964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpdwatkins", "html_url": "https://github.com/gpdwatkins", "followers_url": "https://api.github.com/users/gpdwatkins/followers", "following_url": "https://api.github.com/users/gpdwatkins/following{/other_user}", "gists_url": "https://api.github.com/users/gpdwatkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpdwatkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpdwatkins/subscriptions", "organizations_url": "https://api.github.com/users/gpdwatkins/orgs", "repos_url": "https://api.github.com/users/gpdwatkins/repos", "events_url": "https://api.github.com/users/gpdwatkins/events{/privacy}", "received_events_url": "https://api.github.com/users/gpdwatkins/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gpdwatkins", "id": 43750964, "node_id": "MDQ6VXNlcjQzNzUwOTY0", "avatar_url": "https://avatars.githubusercontent.com/u/43750964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpdwatkins", "html_url": "https://github.com/gpdwatkins", "followers_url": "https://api.github.com/users/gpdwatkins/followers", "following_url": "https://api.github.com/users/gpdwatkins/following{/other_user}", "gists_url": "https://api.github.com/users/gpdwatkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpdwatkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpdwatkins/subscriptions", "organizations_url": "https://api.github.com/users/gpdwatkins/orgs", "repos_url": "https://api.github.com/users/gpdwatkins/repos", "events_url": "https://api.github.com/users/gpdwatkins/events{/privacy}", "received_events_url": "https://api.github.com/users/gpdwatkins/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-03-21T18:30:48Z", "updated_at": "2022-03-21T19:01:54Z", "closed_at": "2022-03-21T19:01:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4312", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4312", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4312.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4312.patch", "merged_at": "2022-03-21T19:01:53Z"}, "body": "Fixed calculation of `self.avg_deg` in `pna_conv.py` to correctly calculate averages (the change is consistent with original code at https://github.com/lukecavabarrett/pna).\r\n\r\nThe variable `deg` is a histogram of in-degrees of nodes in the training set. In the original implementation, the average degree is calculated by taking the mean of the elements of `deg` (the log and exp averages are calculated similarly). This actually takes an average of the frequencies, which is not the desired behaviour.\r\n\r\nThis change ensures that `self.avg_deg` is indeed finding the average (and log and exp averages) of the vertex in-degrees by calculating the sum-product of the degrees and their associated frequencies.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4312/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4311", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4311/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4311/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4311/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4311", "id": 1175650845, "node_id": "PR_kwDOBlHMec40wP8y", "number": 4311, "title": "`RandomLinkSplit` for regression", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 1267385588, "node_id": "MDU6TGFiZWwxMjY3Mzg1NTg4", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/feature", "name": "feature", "color": "a2eeef", "default": false, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-03-21T16:42:01Z", "updated_at": "2022-03-21T16:46:14Z", "closed_at": "2022-03-21T16:46:13Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4311", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4311", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4311.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4311.patch", "merged_at": "2022-03-21T16:46:13Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4311/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4303", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4303/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4303/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4303/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4303", "id": 1174431079, "node_id": "I_kwDOBlHMec5GAGVn", "number": 4303, "title": "RECT no related configuration\uff01 Please help me\uff01\uff01", "user": {"login": "Jinn02-25", "id": 67458489, "node_id": "MDQ6VXNlcjY3NDU4NDg5", "avatar_url": "https://avatars.githubusercontent.com/u/67458489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jinn02-25", "html_url": "https://github.com/Jinn02-25", "followers_url": "https://api.github.com/users/Jinn02-25/followers", "following_url": "https://api.github.com/users/Jinn02-25/following{/other_user}", "gists_url": "https://api.github.com/users/Jinn02-25/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jinn02-25/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jinn02-25/subscriptions", "organizations_url": "https://api.github.com/users/Jinn02-25/orgs", "repos_url": "https://api.github.com/users/Jinn02-25/repos", "events_url": "https://api.github.com/users/Jinn02-25/events{/privacy}", "received_events_url": "https://api.github.com/users/Jinn02-25/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-03-20T03:45:02Z", "updated_at": "2022-04-21T07:20:28Z", "closed_at": "2022-04-21T07:20:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHello author, when I ran RECT training, I got the following prompts that I don't know how to solve. I would like to ask what is your environment configuration\uff01\uff01Thankyou!!!\r\n\r\n\u2018\u2019\u2018\r\nPython 3.7.4 (default, Aug  9 2019, 18:34:13) [MSC v.1915 64 bit (AMD64)]\r\nType \"copyright\", \"credits\" or \"license\" for more information.\r\n\r\nIPython 7.13.0 -- An enhanced Interactive Python.\r\n\r\nPopulating the interactive namespace from numpy and matplotlib\r\n\r\nrunfile('C:/Users/DELL/Desktop/My exp2/Cora/Cora_RECT/Cora_rect.py', wdir='C:/Users/DELL/Desktop/My exp2/Cora/Cora_RECT')\r\nTraceback (most recent call last):\r\n\r\n  File \"C:\\Users\\DELL\\Desktop\\My exp2\\Cora\\Cora_RECT\\Cora_rect.py\", line 17, in <module>\r\n    from torch_geometric.nn import RECT_L\r\n\r\nImportError: cannot import name 'RECT_L' from 'torch_geometric.nn' (C:\\Users\\DELL\\Anaconda3\\envs\\pytorch\\lib\\site-packages\\torch_geometric\\nn\\__init__.py)\r\n\u2019\u2018\u2019\n\n### Environment\n\n* PyG version:1.4.3\r\n* PyTorch version:1.5.0\r\n* OS:win10\r\n* Python version:3.7.4\r\n* CUDA/cuDNN version:10.2\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n*torch                     1.5.0                     <pip>\r\ntorch-cluster             1.5.5                     <pip>\r\ntorch-geometric           1.4.3                     <pip>\r\ntorch-scatter             2.0.5                     <pip>\r\ntorch-sparse              0.6.6                     <pip>\r\ntorch-sparse              0.6.4                     <pip>\r\ntorch-spline-conv         1.2.0                     <pip>\r\ntorchvision               0.6.0                     <pip>\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4303/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4301", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4301/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4301/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4301/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4301", "id": 1174079903, "node_id": "I_kwDOBlHMec5F-wmf", "number": 4301, "title": "data dimension was changed and  peculiar value added", "user": {"login": "CaiYitao", "id": 65641330, "node_id": "MDQ6VXNlcjY1NjQxMzMw", "avatar_url": "https://avatars.githubusercontent.com/u/65641330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CaiYitao", "html_url": "https://github.com/CaiYitao", "followers_url": "https://api.github.com/users/CaiYitao/followers", "following_url": "https://api.github.com/users/CaiYitao/following{/other_user}", "gists_url": "https://api.github.com/users/CaiYitao/gists{/gist_id}", "starred_url": "https://api.github.com/users/CaiYitao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CaiYitao/subscriptions", "organizations_url": "https://api.github.com/users/CaiYitao/orgs", "repos_url": "https://api.github.com/users/CaiYitao/repos", "events_url": "https://api.github.com/users/CaiYitao/events{/privacy}", "received_events_url": "https://api.github.com/users/CaiYitao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2022-03-18T22:22:28Z", "updated_at": "2022-03-20T11:40:35Z", "closed_at": "2022-03-20T11:40:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\n\r\nmy code is as following:\r\n```py\r\nclass TOX21(InMemoryDataset):\r\n    def __init__(self, root, partition, lmax_attr,transform=None, pre_transform=None):\r\n        # assert target in targets\r\n        assert partition in [\"train\", \"test\", \"val\"]\r\n        self.root = root\r\n        # self.target = target\r\n        self.partition = partition\r\n        # self.feature_type = feature_type\r\n        self.lmax_attr = lmax_attr\r\n        self.attr_irreps = Irreps.spherical_harmonics(lmax_attr)\r\n        # transform = TargetGetter(self.target)\r\n\r\n        super().__init__(root, transform, pre_transform)\r\n\r\n        self.data, self.slices = torch.load(self.processed_paths[0])\r\n\r\n    @property\r\n    def raw_file_names(self) -> List[str]:\r\n        return [\"/system/user/publicwork/confdata.pkl\",\"/system/user/publicwork/PracticalAI/tox21.csv\"]\r\n\r\n\r\n    @ property\r\n    def processed_file_names(self) -> str:\r\n        return [\"_\".join([self.partition,  \"l=\"+str(self.lmax_attr)]) + '.pt']   \r\n    \r\n    def download(self):\r\n        pass\r\n\r\n    def process(self):\r\n        try:\r\n            import rdkit\r\n            from rdkit import Chem\r\n            from rdkit.Chem.rdchem import HybridizationType\r\n            from rdkit.Chem.rdchem import BondType as BT\r\n            from rdkit import RDLogger\r\n            RDLogger.DisableLog('rdApp.*')\r\n        except ImportError:\r\n            print(\"Please install rdkit\")\r\n            return\r\n\r\n        with open(self.raw_paths[1], 'rb') as f:\r\n            tox21 = pd.read_csv(f)\r\n            target = tox21.iloc[:,7:].values\r\n            #map nan to 0, 0 to -1, 1 to 1\r\n            for i in range(len(target)):\r\n                for j in range(len(target[i])):\r\n                    if np.isnan(target[i][j]):\r\n                        target[i][j] = 0\r\n                    elif target[i][j] == 0:\r\n                        target[i][j] = -1\r\n                    elif target[i][j] == 1:\r\n                        target[i][j] = 1\r\n            target = torch.tensor(target, dtype=torch.float)\r\n            # target = torch.cat([target[:, 3:], target[:, :3]], dim=-1)\r\n            # target = target * conversion.view(1, -1)\r\n\r\n        with open(self.raw_paths[0], 'rb') as f:\r\n            conf = pickle.load(f)\r\n\r\n        # types = {'H': 0, 'C': 1, 'N': 2, 'O': 3, 'F': 4} \r\n\r\n        types = {'H': 0,  'C': 1,  'N': 2,  'O': 3,  'F': 4,  'P': 5,  'S': 6,  'Ag': 7,  'Al': 8,  'As': 9, \r\n         'Au': 10,  'B': 11,  'Ba': 12,  'Be': 13,  'Bi': 14,  'Br': 15,  'Ca': 16,  'Cd': 17,  'Cl': 18,\r\n         'Co': 19,  'Cr': 20,  'Cu': 21,  'Dy': 22,  'Eu': 23,  'Fe': 24,  'Gd': 25,  'Ge': 26,  'Hg': 27,  \r\n         'I': 28,  'In': 29,  'K': 30,  'Li': 31,  'Mg': 32,  'Mn': 33,  'Mo': 34,  'Na': 35,  'Nd': 36,  \r\n         'Ni': 37,  'Pb': 38,  'Pd': 39,  'Pt': 40,  'Ru': 41,  'Sb': 42,  'Sc': 43,  'Se': 44,  'Si': 45,  \r\n         'Sn': 46,  'Ti': 47,  'Tl': 48,  'V': 49,  'Yb': 50,  'Zn': 51,  'Zr': 52}\r\n\r\n        data_list = []\r\n        train, valid, test = dict(list(conf.items())[0:11704]), dict(list(conf.items())[11704:11999]), dict(list(conf.items())[11999:])\r\n        traintarget, validtarget, testtarget = target[0:11704,:], target[11704:11999],target[11999:]\r\n        indices = {\"train\": train, \"valid\": valid, \"test\": test}\r\n        targetindices = {\"train\": traintarget, \"valid\": validtarget, \"test\": testtarget}\r\n    \r\n        Nmols = len(conf)\r\n        np.random.seed(0)\r\n        # data_perm = np.random.permutation(Nmols)\r\n   \r\n        for i,((name,confdata),target) in enumerate(zip(indices[self.partition].items(), targetindices[self.partition])):\r\n         \r\n            mol = confdata.rdmol\r\n            N = mol.GetNumAtoms()            \r\n            pos = confdata.pos\r\n            edge_index = confdata.edge_index\r\n\r\n            type_idx = []\r\n            atomic_number = []\r\n            aromatic = []\r\n            sp = []\r\n            sp2 = []\r\n            sp3 = []\r\n            num_hs = []\r\n            for atom in mol.GetAtoms():\r\n                # if atom.GetSymbol() in types.keys():\r\n                type_idx.append(types[atom.GetSymbol()])\r\n                atomic_number.append(atom.GetAtomicNum())\r\n                aromatic.append(1 if atom.GetIsAromatic() else 0)\r\n                hybridization = atom.GetHybridization()\r\n                sp.append(1 if hybridization == HybridizationType.SP else 0)\r\n                sp2.append(1 if hybridization == HybridizationType.SP2 else 0)\r\n                sp3.append(1 if hybridization == HybridizationType.SP3 else 0)\r\n            \r\n            z = torch.tensor(atomic_number, dtype=torch.long)       \r\n            row, col = edge_index\r\n            hs = (z == 1).to(torch.float)\r\n            num_hs = scatter(hs[row], col, dim_size=N).tolist()\r\n\r\n            x1 = F.one_hot(torch.tensor(type_idx), num_classes=len(types))\r\n            x2 = torch.tensor([atomic_number, aromatic, sp, sp2, sp3, num_hs],\r\n                                dtype=torch.float).t().contiguous()\r\n            x = torch.cat([x1.to(torch.float), x2], dim=-1)\r\n            y = target.unsqueeze(0)\r\n            # name = mol.GetProp('_Name')\r\n            # name = tox21[\"sdftitle\"][i]\r\n            name = name\r\n\r\n            edge_attr, node_attr, edge_dist = self.get_O3_attr(edge_index, pos, self.attr_irreps)\r\n\r\n            data = Data(x=x, pos=pos, edge_index=edge_index, edge_attr=edge_attr,\r\n                        node_attr=node_attr, additional_message_features=edge_dist, y=y, name=name, index=i)\r\n            data_list.append(data)\r\n\r\n        torch.save(self.collate(data_list), self.processed_paths[0])\r\n    \r\n    def get_O3_attr(self, edge_index, pos, attr_irreps):\r\n        \"\"\" Creates spherical harmonic edge attributes and node attributes for the SEGNN \"\"\"\r\n        rel_pos = pos[edge_index[0]] - pos[edge_index[1]]  # pos_j - pos_i (note in edge_index stores tuples like (j,i))\r\n        edge_dist = rel_pos.pow(2).sum(-1, keepdims=True)\r\n        edge_attr = spherical_harmonics(attr_irreps, rel_pos, normalize=True,\r\n                                        normalization='component')  # Unnormalised for now\r\n        node_attr = scatter(edge_attr, edge_index[1], dim=0, reduce=\"mean\")\r\n        return edge_attr, node_attr, edge_dist\r\n```\r\n\r\nI found that after load this dataset, the dimension of target `y` changed from 12 to 13, and it automatically add one peculiar value into y data, which is strange, I never intend to to so. \r\n\r\n<img width=\"458\" alt=\"image\" src=\"https://user-images.githubusercontent.com/65641330/159091184-fe2f5367-c073-4bb5-acac-cf690ba586f4.png\">\r\nsee the first value 2 is this peculiar value added, and I am not sure if it did this to other data.\r\n\r\nIf I remove the unsqueeze(0) in y= target.unsqueeze(0), it will give \r\n```IndexError: index 13 is out of bounds for dimension 0 with size 13```\r\nWhat could be the problem?  \r\n\r\n\n\n### Environment\n\n* PyG version: conda forge\r\n* PyTorch version: 1.9\r\n* OS: Linux\r\n* Python version: 3.9\r\n* CUDA/cuDNN version: 1.0\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): \r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4301/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4299", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4299/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4299/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4299/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4299", "id": 1173535101, "node_id": "PR_kwDOBlHMec40p35B", "number": 4299, "title": "Fix `GAT` with `out_channels != None`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-03-18T12:24:50Z", "updated_at": "2022-03-18T12:28:54Z", "closed_at": "2022-03-18T12:28:53Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4299", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4299", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4299.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4299.patch", "merged_at": "2022-03-18T12:28:53Z"}, "body": "Fixes #4298", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4299/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4298", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4298/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4298/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4298/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4298", "id": 1173416772, "node_id": "I_kwDOBlHMec5F8OtE", "number": 4298, "title": "GAT model - last layer incorrect?", "user": {"login": "j-adamczyk", "id": 50807718, "node_id": "MDQ6VXNlcjUwODA3NzE4", "avatar_url": "https://avatars.githubusercontent.com/u/50807718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j-adamczyk", "html_url": "https://github.com/j-adamczyk", "followers_url": "https://api.github.com/users/j-adamczyk/followers", "following_url": "https://api.github.com/users/j-adamczyk/following{/other_user}", "gists_url": "https://api.github.com/users/j-adamczyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/j-adamczyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j-adamczyk/subscriptions", "organizations_url": "https://api.github.com/users/j-adamczyk/orgs", "repos_url": "https://api.github.com/users/j-adamczyk/repos", "events_url": "https://api.github.com/users/j-adamczyk/events{/privacy}", "received_events_url": "https://api.github.com/users/j-adamczyk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-03-18T10:12:31Z", "updated_at": "2022-03-18T12:36:39Z", "closed_at": "2022-03-18T12:28:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nIn GAT paper last layer averages attention heads instead of concatenation, which corresponds to `concat=False` in `GATConv` in PyTorchGeometric. This is also the case in all examples.\r\n\r\nHowever, in `GAT` model the last layer is still concatenated, as only the convolution is passed to `BasicGNN`. This means that using `GAT`, we actually concatenate the attention heads in the last layer, which is incorrect, or at least an unexpected behavior.\r\n\r\nIf I'm correct, I see two ways of fixing this:\r\n- leave as-is, but add a disclaimer to the docs, possibly with example how to go from the current output `(num_nodes, K * out_channels)` (for `K` attention heads) to `(num_nodes, out_channels)`, where attention heads are averaged\r\n- override the `.forward()` method in `GAT` and add `concat_last_layer=False` option:\r\n  - if `True`, run as-is\r\n  - if `False`, override the `.forward()` method, use the parent's `.forward()` up to `N-1` layer, and run the last layer separately, using concat=False`\n\n### Environment\n\n* PyG version: 2.0.4\r\n* PyTorch version: 1.10\r\n* OS: Windows 10\r\n* Python version: 3.9\r\n* CUDA/cuDNN version: 11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): `pip`\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4298/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4297", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4297/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4297/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4297/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4297", "id": 1173395583, "node_id": "PR_kwDOBlHMec40paog", "number": 4297, "title": "`pre-commit`: `yamllint`", "user": {"login": "Borda", "id": 6035284, "node_id": "MDQ6VXNlcjYwMzUyODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6035284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Borda", "html_url": "https://github.com/Borda", "followers_url": "https://api.github.com/users/Borda/followers", "following_url": "https://api.github.com/users/Borda/following{/other_user}", "gists_url": "https://api.github.com/users/Borda/gists{/gist_id}", "starred_url": "https://api.github.com/users/Borda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Borda/subscriptions", "organizations_url": "https://api.github.com/users/Borda/orgs", "repos_url": "https://api.github.com/users/Borda/repos", "events_url": "https://api.github.com/users/Borda/events{/privacy}", "received_events_url": "https://api.github.com/users/Borda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3593882085, "node_id": "LA_kwDOBlHMec7WNknl", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/refactor", "name": "refactor", "color": "BECEA5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "Borda", "id": 6035284, "node_id": "MDQ6VXNlcjYwMzUyODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6035284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Borda", "html_url": "https://github.com/Borda", "followers_url": "https://api.github.com/users/Borda/followers", "following_url": "https://api.github.com/users/Borda/following{/other_user}", "gists_url": "https://api.github.com/users/Borda/gists{/gist_id}", "starred_url": "https://api.github.com/users/Borda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Borda/subscriptions", "organizations_url": "https://api.github.com/users/Borda/orgs", "repos_url": "https://api.github.com/users/Borda/repos", "events_url": "https://api.github.com/users/Borda/events{/privacy}", "received_events_url": "https://api.github.com/users/Borda/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Borda", "id": 6035284, "node_id": "MDQ6VXNlcjYwMzUyODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6035284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Borda", "html_url": "https://github.com/Borda", "followers_url": "https://api.github.com/users/Borda/followers", "following_url": "https://api.github.com/users/Borda/following{/other_user}", "gists_url": "https://api.github.com/users/Borda/gists{/gist_id}", "starred_url": "https://api.github.com/users/Borda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Borda/subscriptions", "organizations_url": "https://api.github.com/users/Borda/orgs", "repos_url": "https://api.github.com/users/Borda/repos", "events_url": "https://api.github.com/users/Borda/events{/privacy}", "received_events_url": "https://api.github.com/users/Borda/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-03-18T09:48:49Z", "updated_at": "2022-03-18T09:55:29Z", "closed_at": "2022-03-18T09:54:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4297", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4297", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4297.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4297.patch", "merged_at": "2022-03-18T09:54:56Z"}, "body": "Reference #4289\r\nwas missed in #4292", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4297/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4293", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4293/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4293/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4293/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4293", "id": 1173354976, "node_id": "PR_kwDOBlHMec40pSJi", "number": 4293, "title": "Fix batching with empty lists as attributes", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-03-18T09:02:15Z", "updated_at": "2022-03-18T09:11:00Z", "closed_at": "2022-03-18T09:10:59Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4293", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4293", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4293.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4293.patch", "merged_at": "2022-03-18T09:10:59Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4293/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4279", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4279/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4279/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4279/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4279", "id": 1171325338, "node_id": "PR_kwDOBlHMec40jHf2", "number": 4279, "title": "Fix: `to_hetero` with `GCN` on single node types", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-03-16T17:23:30Z", "updated_at": "2022-03-16T17:29:09Z", "closed_at": "2022-03-16T17:29:08Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4279", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4279", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4279.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4279.patch", "merged_at": "2022-03-16T17:29:08Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4279/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4271", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4271/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4271/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4271/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4271", "id": 1170875170, "node_id": "I_kwDOBlHMec5FyiMi", "number": 4271, "title": "Bug: `GCNConv` in `to_hetero` with single node type", "user": {"login": "fratajcz", "id": 40367788, "node_id": "MDQ6VXNlcjQwMzY3Nzg4", "avatar_url": "https://avatars.githubusercontent.com/u/40367788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fratajcz", "html_url": "https://github.com/fratajcz", "followers_url": "https://api.github.com/users/fratajcz/followers", "following_url": "https://api.github.com/users/fratajcz/following{/other_user}", "gists_url": "https://api.github.com/users/fratajcz/gists{/gist_id}", "starred_url": "https://api.github.com/users/fratajcz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fratajcz/subscriptions", "organizations_url": "https://api.github.com/users/fratajcz/orgs", "repos_url": "https://api.github.com/users/fratajcz/repos", "events_url": "https://api.github.com/users/fratajcz/events{/privacy}", "received_events_url": "https://api.github.com/users/fratajcz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2022-03-16T11:11:16Z", "updated_at": "2022-11-28T09:23:32Z", "closed_at": "2022-03-16T17:29:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI just started using heterogeneous graphs, so far I have roughly 1 year experience with homogeneous graphs using your library. I have a graph with just 1 node type (\"gene\") but multiple edge types between the nodes. My HeteroData object prints as follows:\r\n\r\n```\r\nHeteroData(\r\n  gene={\r\n    x=[16433, 93],\r\n    y=[16433],\r\n    train_mask=[16433],\r\n    test_mask=[16433],\r\n    val_mask=False\r\n  },\r\n  (gene, BioPlex30HCT116, gene)={ edge_index=[2, 95370] },\r\n  (gene, BioPlex30293T, gene)={ edge_index=[2, 156370] },\r\n  (gene, HuRI, gene)={ edge_index=[2, 74488] }\r\n)\r\n```\r\n\r\nI convert my GCN-based model (that runs fine with a homogeneous Data object) using the ```to_hetero()``` function.\r\n\r\nI then pass my data into the model as follows:\r\n\r\n```\r\nout = model(data.x_dict, data.edge_index_dict)\r\n```\r\n\r\nwhere ```data``` is the HeteroData Object described above. \r\n\r\nHowever, I get an error and I think it is because it expects  ```edge_weight``` somewhere:\r\n\r\n```\r\nTraceback (most recent call last):\r\n    out = model(data.x_dict, data.edge_index_dict)\r\n  File \"/home/fratajcz/anaconda3/envs/compat/lib/python3.7/site-packages/torch/fx/graph_module.py\", line 308, in wrapped_call\r\n    return cls_call(self, *args, **kwargs)\r\n  File \"/home/fratajcz/anaconda3/envs/compat/lib/python3.7/site-packages/torch/fx/graph_module.py\", line 308, in wrapped_call\r\n    return cls_call(self, *args, **kwargs)\r\n  File \"/home/fratajcz/anaconda3/envs/compat/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 889, in _call_impl\r\n    result = self.forward(*input, **kwargs)\r\n  File \"<eval_with_key_1>\", line 7, in forward\r\n    edge_weight__gene__BioPlex30HCT116__gene = edge_weight.get(('gene', 'BioPlex30HCT116', 'gene'))\r\nAttributeError: 'NoneType' object has no attribute 'get'\r\n```\r\n\r\nDo I have to specify edge weights in heterogeneous graphs? The Documentation doesnt mention it.\r\nIt is weird that the traceback does mention only torch packages and not torch_geometric.\r\n\r\n\r\nCheers and thanks,\r\nFlorin\n\n### Environment\n\n* PyG version: 2.0.1\r\n* PyTorch version: 1.8.0\r\n* OS: CentOS Linux 7\r\n* Python version: 3.7\r\n* CUDA/cuDNN version: irrelevant\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): torch_scatter: 2.0.8\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4271/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4241", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4241/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4241/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4241/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4241", "id": 1167191472, "node_id": "PR_kwDOBlHMec40VrO0", "number": 4241, "title": "Test fixtures", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3593882085, "node_id": "LA_kwDOBlHMec7WNknl", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/refactor", "name": "refactor", "color": "BECEA5", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-03-12T05:57:39Z", "updated_at": "2022-03-12T09:14:50Z", "closed_at": "2022-03-12T09:14:50Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4241", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4241", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4241.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4241.patch", "merged_at": "2022-03-12T09:14:50Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4241/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4239", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4239/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4239/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4239/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4239", "id": 1166793502, "node_id": "PR_kwDOBlHMec40UZSp", "number": 4239, "title": "Faster CI testing", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3593882085, "node_id": "LA_kwDOBlHMec7WNknl", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/refactor", "name": "refactor", "color": "BECEA5", "default": false, "description": ""}, {"id": 3794787434, "node_id": "LA_kwDOBlHMec7iL9xq", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/test", "name": "test", "color": "9A29AF", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-03-11T19:48:14Z", "updated_at": "2022-03-11T19:54:27Z", "closed_at": "2022-03-11T19:54:27Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4239", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4239", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4239.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4239.patch", "merged_at": "2022-03-11T19:54:26Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4239/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4232", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4232/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4232/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4232/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4232", "id": 1166185353, "node_id": "I_kwDOBlHMec5FgpOJ", "number": 4232, "title": "Transforme_conv has a bug about query key and value.", "user": {"login": "sixu0", "id": 28756059, "node_id": "MDQ6VXNlcjI4NzU2MDU5", "avatar_url": "https://avatars.githubusercontent.com/u/28756059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sixu0", "html_url": "https://github.com/sixu0", "followers_url": "https://api.github.com/users/sixu0/followers", "following_url": "https://api.github.com/users/sixu0/following{/other_user}", "gists_url": "https://api.github.com/users/sixu0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sixu0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sixu0/subscriptions", "organizations_url": "https://api.github.com/users/sixu0/orgs", "repos_url": "https://api.github.com/users/sixu0/repos", "events_url": "https://api.github.com/users/sixu0/events{/privacy}", "received_events_url": "https://api.github.com/users/sixu0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2022-03-11T09:21:53Z", "updated_at": "2022-03-16T07:11:58Z", "closed_at": "2022-03-16T07:11:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nThere is a bug about **query**, **key** and **value** in Transforme_conv. According to the formula, `alpha` is calculated by `query_i `and `key_j`, which means **key** should be sorted by index and `query` should be repeated `n-1` times of node `i`. In addition, `value_j` also should be sorted by index.\r\n\r\nHowever, when I print it in the `message module` like this\uff1a\r\n```\r\n    def message(self, query_i: Tensor, key_j: Tensor, value_j: Tensor,\r\n                edge_attr: OptTensor, index: Tensor, ptr: OptTensor,\r\n                size_i: Optional[int]) -> Tensor:\r\n\r\n        if self.lin_edge is not None:\r\n            assert edge_attr is not None\r\n            edge_attr = self.lin_edge(edge_attr).view(-1, self.heads,\r\n                                                      self.out_channels)\r\n            key_j += edge_attr\r\n        for i in range(len(query_i)):\r\n            temp_file = 'query_' + str(i) + ':'\r\n            print(temp_file,query_i[i,:,0])\r\n        alpha = (query_i * key_j).sum(dim=-1) / math.sqrt(self.out_channels)\r\n        alpha = softmax(alpha, index, ptr, size_i)\r\n        self._alpha = alpha\r\n        alpha = F.dropout(alpha, p=self.dropout, training=self.training)\r\n```\r\nIt shows the opposite of what I understand. The result is shown below:\r\n\r\n```\r\nquery_i:\r\nquery_0: tensor([0.0022], device='cuda:0', grad_fn=<SelectBackward0>)\r\nquery_1: tensor([0.0629], device='cuda:0', grad_fn=<SelectBackward0>)\r\nquery_2: tensor([-0.1268], device='cuda:0', grad_fn=<SelectBackward0>)\r\nquery_3: tensor([0.0629], device='cuda:0', grad_fn=<SelectBackward0>)\r\nquery_4: tensor([-0.1268], device='cuda:0', grad_fn=<SelectBackward0>)\r\nquery_5: tensor([0.0022], device='cuda:0', grad_fn=<SelectBackward0>)\r\n\r\nkey_j:\r\nkey_0: tensor([-0.1309], device='cuda:0', grad_fn=<SelectBackward0>)\r\nkey_1: tensor([-0.1309], device='cuda:0', grad_fn=<SelectBackward0>)\r\nkey_2: tensor([-0.1215], device='cuda:0', grad_fn=<SelectBackward0>)\r\nkey_3: tensor([-0.1215], device='cuda:0', grad_fn=<SelectBackward0>)\r\nkey_4: tensor([-0.0779], device='cuda:0', grad_fn=<SelectBackward0>)\r\nkey_5: tensor([-0.0779], device='cuda:0', grad_fn=<SelectBackward0>)\r\n\r\nvalue_j:\r\nvalue_0: tensor([-0.0897], device='cuda:0', grad_fn=<SelectBackward0>)\r\nvalue_1: tensor([-0.0897], device='cuda:0', grad_fn=<SelectBackward0>)\r\nvalue_2: tensor([0.0788], device='cuda:0', grad_fn=<SelectBackward0>)\r\nvalue_3: tensor([0.0788], device='cuda:0', grad_fn=<SelectBackward0>)\r\nvalue_4: tensor([0.2025], device='cuda:0', grad_fn=<SelectBackward0>)\r\nvalue_5: tensor([0.2025], device='cuda:0', grad_fn=<SelectBackward0>)\r\n```\r\n\r\nSo is this a misunderstanding or is it really a bug\uff1f\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n### Environment\n\n* PyG version: 2.0.3\r\n* PyTorch version: 1.10.0\r\n* OS: Ubuntu 20.04\r\n* Python version: 3.9.0\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4232/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4229", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4229/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4229/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4229/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4229", "id": 1164693853, "node_id": "I_kwDOBlHMec5Fa9Fd", "number": 4229, "title": "to_networkx causes a bug", "user": {"login": "meloncolie", "id": 36785374, "node_id": "MDQ6VXNlcjM2Nzg1Mzc0", "avatar_url": "https://avatars.githubusercontent.com/u/36785374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meloncolie", "html_url": "https://github.com/meloncolie", "followers_url": "https://api.github.com/users/meloncolie/followers", "following_url": "https://api.github.com/users/meloncolie/following{/other_user}", "gists_url": "https://api.github.com/users/meloncolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/meloncolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meloncolie/subscriptions", "organizations_url": "https://api.github.com/users/meloncolie/orgs", "repos_url": "https://api.github.com/users/meloncolie/repos", "events_url": "https://api.github.com/users/meloncolie/events{/privacy}", "received_events_url": "https://api.github.com/users/meloncolie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-10T03:18:43Z", "updated_at": "2022-03-10T14:35:29Z", "closed_at": "2022-03-10T14:35:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nCode:\r\n```python\r\nimport torch\r\nfrom torch_geometric.data import Data\r\nfrom torch_geometric.utils import to_networkx\r\n\r\nto_networkx(Data(torch.Tensor([0, 0, 0]).long(), torch.Tensor([[1],[2]]).long(), edge_type=torch.Tensor([0]).long()), edge_attrs=['edge_type'], to_undirected=False)\r\n```\r\n\r\nSegmentation Fault:\r\n```\r\n'int' object is not subscriptable\r\n```\r\n\r\nAnalysis:\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/c40e28a6b19a69ee61271857aa4396d5dc5a0f3e/torch_geometric/utils/convert.py#L90\r\n\r\nthe `.squeeze().tolist()` function converts a torch.Tensor to a python list except that it converts a torch.Tensor with single size  (in whatever dimention) to a single int value. In the latter case, the segmentation fault occurs onces the output int value is indexed.\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/c40e28a6b19a69ee61271857aa4396d5dc5a0f3e/torch_geometric/utils/convert.py#L113\r\nThe results of the above function is demonstrated as below:\r\n```python\r\nIn [2]: torch.Tensor([1]).squeeze().tolist()\r\nOut[2]: 1.0\r\n\r\nIn [3]: torch.Tensor([[1]]).squeeze().tolist()\r\nOut[3]: 1.0\r\n\r\nIn [4]: torch.Tensor([[1]]).squeeze()\r\nOut[4]: tensor(1.)\r\n\r\nIn [5]: torch.Tensor([[1],[1]]).squeeze().tolist()\r\nOut[5]: [1.0, 1.0]\r\n\r\nIn [6]: torch.Tensor([[1,1]]).squeeze().tolist()\r\nOut[6]: [1.0, 1.0]\r\n```\r\n\r\nTemporally, I avoid this segmentation fault by changing edge_type to a numpy array.\n\n### Environment\n\n* PyG version: until the latest version 2.0.3\r\n* PyTorch version: 1.7.1\r\n* OS: MacOS\\CentOS\r\n* Python version: 3.8.12\\3.6.8\r\n* CUDA/cuDNN version: CPU\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): PyTorch with conda, PyG with pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\ntorch-cluster         1.5.9\r\ntorch-scatter         2.0.7\r\ntorch-sparse          0.6.12\r\ntorch-spline-conv     1.2.1\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4229/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4223", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4223/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4223/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4223/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4223", "id": 1162556033, "node_id": "I_kwDOBlHMec5FSzKB", "number": 4223, "title": "InMemoryDataset Slicing: Data Splitting", "user": {"login": "jangerit", "id": 63640094, "node_id": "MDQ6VXNlcjYzNjQwMDk0", "avatar_url": "https://avatars.githubusercontent.com/u/63640094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jangerit", "html_url": "https://github.com/jangerit", "followers_url": "https://api.github.com/users/jangerit/followers", "following_url": "https://api.github.com/users/jangerit/following{/other_user}", "gists_url": "https://api.github.com/users/jangerit/gists{/gist_id}", "starred_url": "https://api.github.com/users/jangerit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jangerit/subscriptions", "organizations_url": "https://api.github.com/users/jangerit/orgs", "repos_url": "https://api.github.com/users/jangerit/repos", "events_url": "https://api.github.com/users/jangerit/events{/privacy}", "received_events_url": "https://api.github.com/users/jangerit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-03-08T11:43:22Z", "updated_at": "2022-03-10T12:40:22Z", "closed_at": "2022-03-10T12:40:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nHi, I'm trying to split an InMemoryDataset loaded from a single file into three subsets, training/validation/test set, by slicing the loaded dataset. This works well when using the DataLoader but when applying operations on the sub-datasets, e.g., standardizing the target values \"y\", the slicing is ignored. I have tried different options for a standardization example (and also found some strange behavior, see 4. Option). The correct example requires slicing the dataset repeatedly before every operation is applied to the sliced dataset. Is this behavior intended or am I doing something wrong?\r\n\r\nNote also: In the example, transform does not change data.y to only include the target values. Rather, data.y still contains all y target values. With the DataLoader it works well again.\r\n\r\nThank you very much for your help!\r\n\r\n```\r\nimport os.path as osp\r\nfrom copy import deepcopy\r\nimport torch\r\nfrom torch_geometric.datasets import QM9\r\nfrom torch_geometric.loader import DataLoader\r\n\r\nTARGET = 0\r\nBATCH_SIZE = 4\r\n\r\nclass MyTransform(object):\r\n    def __call__(self, data):\r\n        # Specify target.\r\n        data.y = data.y[:, TARGET]\r\n        return data\r\n\r\n#########################################################\r\n### 1. Option ###\r\n# Load data\r\npath = osp.join(osp.dirname(osp.realpath(__file__)), '..', 'data', 'QM9')\r\ndataset = QM9(path, transform=MyTransform()) # dataset still contains all y targets not only the target value specified in MyTransform\r\n\r\n# Calculate mean and std for testing\r\nmean_all = dataset.data.y.mean(dim=0, keepdim=True)[:,TARGET]\r\nstd_all = dataset.data.y.std(dim=0, keepdim=True)[:,TARGET]\r\n\r\n# Split dataset directly by slicing\r\ntrain_set = dataset[:110000]\r\nval_set = dataset[110000:120000]\r\ntest_set = dataset[120000:]\r\n\r\n# Calculate mean and std for training data\r\nmean_train = train_set.data.y.mean(dim=0, keepdim=True)[:,TARGET] # caluclates mean of whole dataset not only train_set\r\nstd_train = train_set.data.y.std(dim=0, keepdim=True)[:,TARGET] # caluclates std of whole dataset not only train_set\r\nprint(mean_train == mean_all) # True\r\nprint(std_train == std_all) # True\r\n\r\n# Standardize data -> does not work because train/val/test set point to same dataset object, standardization executed 3x to same dataset object\r\ntrain_set.data.y = (train_set.data.y - mean_train) / std_train\r\nval_set.data.y = (val_set.data.y - mean_train) / std_train\r\ntest_set.data.y = (test_set.data.y - mean_train) / std_train\r\n\r\n# correct would be following, but may be confusing: dataset.data.y = (dataset.data.y - mean_train) / std_train\r\n\r\n# Load dataset\r\ntrain_loader = DataLoader(train_set, batch_size=BATCH_SIZE, shuffle=False)\r\ntest_loader = DataLoader(test_set, batch_size=BATCH_SIZE, shuffle=False)\r\nval_loader = DataLoader(val_set, batch_size=BATCH_SIZE, shuffle=False)\r\n\r\nfor data in train_loader: \r\n    print(data.y) # [-3.7468, -3.2685, -3.2022, -3.7468] -> data.y is normalized (with wrong calculations)\r\n    break\r\n\r\n#########################################################\r\n### 2. Option ###\r\n# Load data\r\npath = osp.join(osp.dirname(osp.realpath(__file__)), '..', 'data', 'QM9')\r\ndataset = QM9(path, transform=MyTransform()) # dataset still contains all y targets not only the target value specified in MyTransform\r\n\r\n# Calculate mean and std for testing\r\nmean_all = dataset.data.y.mean(dim=0, keepdim=True)[:,TARGET]\r\nstd_all = dataset.data.y.std(dim=0, keepdim=True)[:,TARGET]\r\n\r\n# Split dataset directly by slicing\r\nidxs = list(range(len(dataset)))\r\ntrain_set = deepcopy(dataset)[idxs[:110000]]\r\nval_set = deepcopy(dataset)[idxs[110000:120000]]\r\ntest_set = deepcopy(dataset)[idxs[120000:]]\r\n\r\n# Calculate mean and std for training data\r\nmean_train = train_set.data.y.mean(dim=0, keepdim=True)[:,TARGET] # caluclates mean of whole dataset not only train_set\r\nstd_train = train_set.data.y.std(dim=0, keepdim=True)[:,TARGET] # caluclates std of whole dataset not only train_set\r\nprint(mean_train == mean_all) # True\r\nprint(std_train == std_all) # True\r\n\r\n# Standardize data -> works correctly now (still points to dataset but now different objects of the dataset) but mean used is still wrong (see Dataset preprocessing)\r\ntrain_set.data.y = (train_set.data.y - mean_train) / std_train\r\nval_set.data.y = (val_set.data.y - mean_train) / std_train\r\ntest_set.data.y = (test_set.data.y - mean_train) / std_train\r\n\r\n# Load dataset\r\ntrain_loader = DataLoader(train_set, batch_size=BATCH_SIZE, shuffle=False)\r\ntest_loader = DataLoader(test_set, batch_size=BATCH_SIZE, shuffle=False)\r\nval_loader = DataLoader(val_set, batch_size=BATCH_SIZE, shuffle=False)\r\n\r\nfor data in train_loader: \r\n    print(data.y) # [-1.7778, -0.6966, -0.5466, -1.7778] -> data.y is normalized (with wrong calculations)\r\n    break\r\n\r\n#########################################################\r\n### 3. Option ###\r\n# Load data\r\npath = osp.join(osp.dirname(osp.realpath(__file__)), '..', 'data', 'QM9')\r\ndataset = QM9(path, transform=MyTransform())\r\n\r\n# Calculate mean and std for testing\r\nmean_all = dataset.data.y.mean(dim=0, keepdim=True)[:,TARGET]\r\nstd_all = dataset.data.y.std(dim=0, keepdim=True)[:,TARGET]\r\n\r\n# Split dataset with copy and slicing\r\nidxs = list(range(len(dataset)))\r\ntrain_set = dataset.copy(idxs[:110000])\r\nval_set = dataset.copy(idxs[110000:120000])\r\ntest_set = dataset.copy(idxs[120000:])\r\n\r\n# Calculate mean and std for training data\r\nmean = train_set.data.y.mean(dim=0, keepdim=True) # caluclates mean of whole dataset not only train_set\r\nstd = train_set.data.y.std(dim=0, keepdim=True) # caluclates std of whole dataset not only train_set\r\nprint(mean_train == mean_all) # True\r\nprint(std_train == std_all) # True\r\n\r\n# Standardize data -> works correctly now (still points to dataset but now different objects of the dataset) but mean used is still wrong (see Dataset preprocessing)\r\ntrain_set.data.y = (train_set.data.y - mean) / std\r\nval_set.data.y = (val_set.data.y - mean) / std\r\ntest_set.data.y = (test_set.data.y - mean) / std\r\n\r\n# Load dataset\r\ntrain_loader = DataLoader(train_set, batch_size=BATCH_SIZE, shuffle=False)\r\ntest_loader = DataLoader(test_set, batch_size=BATCH_SIZE, shuffle=False)\r\nval_loader = DataLoader(val_set, batch_size=BATCH_SIZE, shuffle=False)\r\n\r\nfor data in train_loader: \r\n    print(data.y) # [0.0000, 1.6256, 1.8511, 0.0000] -> data.y is not normalized\r\n    break\r\n\r\n#########################################################\r\n### 4. Option (exactly matches 1. Option with two additional lines for printing -> print(train_set[0].y)) ###\r\n# Load data\r\npath = osp.join(osp.dirname(osp.realpath(__file__)), '..', 'data', 'QM9')\r\ndataset = QM9(path, transform=MyTransform()) # dataset still contains all y targets not only the target value specified in MyTransform\r\n\r\n# calculate mean and std for testing\r\nmean_all = dataset.data.y.mean(dim=0, keepdim=True)[:,TARGET]\r\nstd_all = dataset.data.y.std(dim=0, keepdim=True)[:,TARGET]\r\n\r\n# Split dataset directly by slicing\r\ntrain_set = dataset[:110000]\r\nval_set = dataset[110000:120000]\r\ntest_set = dataset[120000:]\r\n\r\n# Calculate mean and std for training data\r\nmean_train = train_set.data.y.mean(dim=0, keepdim=True)[:,TARGET] # caluclates mean of whole dataset not only train_set\r\nstd_train = train_set.data.y.std(dim=0, keepdim=True)[:,TARGET] # caluclates std of whole dataset not only train_set\r\nprint(mean_train == mean_all) # True \r\nprint(std_train == std_all) # True\r\n\r\n# Standardize data -> does not work because train/val/test set point to same dataset object, standardization executed 3x to same dataset object\r\nprint(train_set[0].y) # [0]\r\ntrain_set.data.y = (train_set.data.y - mean_train) / std_train\r\nval_set.data.y = (val_set.data.y - mean_train) / std_train\r\ntest_set.data.y = (test_set.data.y - mean_train) / std_train\r\nprint(train_set[0].y) # [0]\r\n# correct would be following, but may be confusing: dataset.data.y = (dataset.data.y - mean_train) / std_train\r\n\r\n\r\n# Load dataset\r\ntrain_loader = DataLoader(train_set, batch_size=BATCH_SIZE, shuffle=False)\r\ntest_loader = DataLoader(test_set, batch_size=BATCH_SIZE, shuffle=False)\r\nval_loader = DataLoader(val_set, batch_size=BATCH_SIZE, shuffle=False)\r\n\r\nfor data in train_loader: \r\n    print(data.y) # [ 0.0000, -3.2685, -3.2022, -3.7468] -> data.y is not normalized -> why does it produce different results when only have two additional print statements?\r\n    break\r\n\r\n\r\n#########################################################\r\n### Correct results ###\r\n# Load data\r\npath = osp.join(osp.dirname(osp.realpath(__file__)), '..', 'data', 'QM9')\r\ndataset = QM9(path, transform=MyTransform()) # dataset still contains all y targets not only the target value specified in MyTransform\r\n\r\n# Calculate mean and std for testing\r\nmean_all = dataset.data.y.mean(dim=0, keepdim=True)[:,TARGET]\r\nstd_all = dataset.data.y.std(dim=0, keepdim=True)[:,TARGET]\r\n\r\n# Split dataset directly by slicing\r\ntrain_set = dataset[:110000]\r\nval_set = dataset[110000:120000]\r\ntest_set = dataset[120000:]\r\n\r\n# Calculate mean and std for training data\r\nmean_train = dataset.data.y[:110000].mean(dim=0, keepdim=True)[:,TARGET] \r\nstd_train = dataset.data.y[:110000].std(dim=0, keepdim=True)[:,TARGET] \r\nprint(mean_train == mean_all) # False\r\nprint(std_train == std_all) # False\r\n\r\n# Standardize data -> does not work because train/val/test set point to same dataset object, standardization executed 3x to same dataset object\r\ndataset.data.y = (dataset.data.y - mean_train) / std_train\r\n\r\n\r\n# Load dataset\r\ntrain_loader = DataLoader(train_set, batch_size=BATCH_SIZE, shuffle=False)\r\ntest_loader = DataLoader(test_set, batch_size=BATCH_SIZE, shuffle=False)\r\nval_loader = DataLoader(val_set, batch_size=BATCH_SIZE, shuffle=False)\r\n\r\nfor data in train_loader: \r\n    print(data.y) # [-1.7866, -0.6881, -0.5358, -1.7866] -> data.y is normalized\r\n    break\r\n```\r\n\r\n### Environment\r\n\r\n* PyG version: 2.0.3\r\n* PyTorch version: 1.9.0+cu102\r\n* OS: CentOS Linux 7 (Core)\r\n* Python version: 3.7.11\r\n* CUDA/cuDNN version: 10.2\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): source\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): torch-cluster 1.5.9, torch-scatter 2.0.9, torch-sparse 0.6.12, torch-spline-conv 1.2.1\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4223/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4222", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4222/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4222/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4222/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4222", "id": 1162444919, "node_id": "PR_kwDOBlHMec40GD_4", "number": 4222, "title": "Fix `MessagePassing` with zero nodes", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-03-08T09:51:35Z", "updated_at": "2022-03-08T09:52:38Z", "closed_at": "2022-03-08T09:52:37Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4222", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4222", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4222.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4222.patch", "merged_at": "2022-03-08T09:52:37Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4222/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4211", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4211/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4211/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4211/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4211", "id": 1161114531, "node_id": "I_kwDOBlHMec5FNTOj", "number": 4211, "title": "Cannot train model with custom HeteroData dataset. ", "user": {"login": "albertoperdomo2", "id": 62241095, "node_id": "MDQ6VXNlcjYyMjQxMDk1", "avatar_url": "https://avatars.githubusercontent.com/u/62241095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertoperdomo2", "html_url": "https://github.com/albertoperdomo2", "followers_url": "https://api.github.com/users/albertoperdomo2/followers", "following_url": "https://api.github.com/users/albertoperdomo2/following{/other_user}", "gists_url": "https://api.github.com/users/albertoperdomo2/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertoperdomo2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertoperdomo2/subscriptions", "organizations_url": "https://api.github.com/users/albertoperdomo2/orgs", "repos_url": "https://api.github.com/users/albertoperdomo2/repos", "events_url": "https://api.github.com/users/albertoperdomo2/events{/privacy}", "received_events_url": "https://api.github.com/users/albertoperdomo2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-03-07T09:18:04Z", "updated_at": "2022-05-20T07:27:51Z", "closed_at": "2022-03-08T05:12:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nHi, first of all, thanks for the amazing work you do with PyG! \r\n\r\nI'm new to graphs and I'm trying to create a custom HeteroData dataset. So far, so good; the creation of the dataset seems to work as expected. I have taken OGB_MAG dataset as reference, since the examples I saw use that one. \r\n\r\nSo, at the moment I am able to access my dataset object:\r\n```\r\n>>> dataset[0]\r\nHeteroData(\r\n  foo={\r\n    x=[18, 100],\r\n    y=[18, 1],\r\n    train_mask=[18],\r\n    test_mask=[18]\r\n  },\r\n  bar={ x=[6, 100] },\r\n  (foo, belongs_to, bar)={ edge_index=[18, 2] },\r\n  (bar, connects_to, bar)={ edge_index=[4, 2] }\r\n)\r\n```\r\n\r\nI know it's a small dataset object, but just for the sake of reducing processing time, I decided to get a small subset of the original dataset. \r\nSo, basically there are nodes of type **foo** which belong/are connected to nodes of type **bar**, so nodes of type **foo** are like \"end nodes\" whose edges are always connected to a node of type **bar**.\r\nOn the other hand, nodes of type **bar** are entities that can be connected between themselves. \r\n\r\nThe issue I'm facing is when trying to train the model with this particular graph. I'm training the model using the example provided [here](https://pytorch-geometric.readthedocs.io/en/latest/notes/heterogeneous.html#automatically-converting-gnn-models); more precisely the class GNN. \r\n\r\nHowever, the error I'm experiencing is the following:\r\n```\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 66, in <module>\r\n    out = model(data.x_dict, data.edge_index_dict)\r\n  File \"/usr/local/lib/python3.8/site-packages/torch/fx/graph_module.py\", line 616, in wrapped_call\r\n    raise e.with_traceback(None)\r\nAssertionError\r\n``` \r\n\r\nI know it looks very \"general\" and doesn't have that much info, but I hope anyone has experienced something similar and is willing to give me a hand.\r\n\r\nThanks in advance!\r\n\r\n### Environment\r\n\r\n* PyG version: 2.0.3\r\n* PyTorch version: 1.10.2\r\n* OS: macOS  Monterey Version 12.2.1\r\n* Python version: 3.8.12\r\n* CUDA/cuDNN version: N/A\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): N/A\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4211/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4206", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4206/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4206/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4206/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4206", "id": 1160662760, "node_id": "PR_kwDOBlHMec40AUP6", "number": 4206, "title": "Fix graphgym multilabel loss/logger", "user": {"login": "RemyLau", "id": 36778645, "node_id": "MDQ6VXNlcjM2Nzc4NjQ1", "avatar_url": "https://avatars.githubusercontent.com/u/36778645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RemyLau", "html_url": "https://github.com/RemyLau", "followers_url": "https://api.github.com/users/RemyLau/followers", "following_url": "https://api.github.com/users/RemyLau/following{/other_user}", "gists_url": "https://api.github.com/users/RemyLau/gists{/gist_id}", "starred_url": "https://api.github.com/users/RemyLau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RemyLau/subscriptions", "organizations_url": "https://api.github.com/users/RemyLau/orgs", "repos_url": "https://api.github.com/users/RemyLau/repos", "events_url": "https://api.github.com/users/RemyLau/events{/privacy}", "received_events_url": "https://api.github.com/users/RemyLau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3465159234, "node_id": "LA_kwDOBlHMec7OiiJC", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/graphgym", "name": "graphgym", "color": "BBD6C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "RemyLau", "id": 36778645, "node_id": "MDQ6VXNlcjM2Nzc4NjQ1", "avatar_url": "https://avatars.githubusercontent.com/u/36778645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RemyLau", "html_url": "https://github.com/RemyLau", "followers_url": "https://api.github.com/users/RemyLau/followers", "following_url": "https://api.github.com/users/RemyLau/following{/other_user}", "gists_url": "https://api.github.com/users/RemyLau/gists{/gist_id}", "starred_url": "https://api.github.com/users/RemyLau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RemyLau/subscriptions", "organizations_url": "https://api.github.com/users/RemyLau/orgs", "repos_url": "https://api.github.com/users/RemyLau/repos", "events_url": "https://api.github.com/users/RemyLau/events{/privacy}", "received_events_url": "https://api.github.com/users/RemyLau/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "RemyLau", "id": 36778645, "node_id": "MDQ6VXNlcjM2Nzc4NjQ1", "avatar_url": "https://avatars.githubusercontent.com/u/36778645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RemyLau", "html_url": "https://github.com/RemyLau", "followers_url": "https://api.github.com/users/RemyLau/followers", "following_url": "https://api.github.com/users/RemyLau/following{/other_user}", "gists_url": "https://api.github.com/users/RemyLau/gists{/gist_id}", "starred_url": "https://api.github.com/users/RemyLau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RemyLau/subscriptions", "organizations_url": "https://api.github.com/users/RemyLau/orgs", "repos_url": "https://api.github.com/users/RemyLau/repos", "events_url": "https://api.github.com/users/RemyLau/events{/privacy}", "received_events_url": "https://api.github.com/users/RemyLau/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-03-06T17:06:22Z", "updated_at": "2022-03-07T13:53:48Z", "closed_at": "2022-03-07T07:34:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4206", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4206", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4206.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4206.patch", "merged_at": "2022-03-07T07:34:21Z"}, "body": "This PR proposes a minor modification to the loss function regarding the handling of the binary and multilabel classification settings.\r\n1. The flattening seems unnecessary since the [``BCEWithLogitsLoss``](https://pytorch.org/docs/stable/generated/torch.nn.BCEWithLogitsLoss.html) should work just fine so long as the shapes between ``y_true`` and ``y_pred`` are consistent.\r\n2. In Line36, I added an extra condition of ``true.ndim == 1`` so that the multiclass setting is correctly distinguished from the multilabel setting.\r\n\r\nThis is should also fix the issue I posted as a comment in another issue https://github.com/pyg-team/pytorch_geometric/issues/890#issuecomment-945037351\r\n\r\nThe error I encountered previously in the multilabel setting is due to mismatching dimensions between ``y_pred`` and ``y_true`` when calling ``logger.update_stats`` in ``train_epoch`` (see below). In particular, ``pred_score`` is flattened by ``compute_loss``, but ``true`` is not, causing the mismatching dimension error as required by [``logger.update_stats``](https://github.com/pyg-team/pytorch_geometric/blob/4557254c849eda62ce1860a56370eb4a54aa76dd/torch_geometric/graphgym/logger.py#L144).\r\n\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/4557254c849eda62ce1860a56370eb4a54aa76dd/torch_geometric/graphgym/train.py#L21-L26", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4206/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4196", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4196/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4196/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4196/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4196", "id": 1160125306, "node_id": "PR_kwDOBlHMec4z-tcH", "number": 4196, "title": "Fix recursive `__new__` bug in `BaseStorage`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-03-04T23:12:42Z", "updated_at": "2022-03-04T23:23:29Z", "closed_at": "2022-03-04T23:23:28Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4196", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4196", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4196.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4196.patch", "merged_at": "2022-03-04T23:23:28Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4196/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4192", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4192/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4192/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4192/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4192", "id": 1159485945, "node_id": "I_kwDOBlHMec5FHFn5", "number": 4192, "title": "AttributeError: 'GlobalStorage' object has no attribute 'adj_t'", "user": {"login": "shravankumar147", "id": 9673411, "node_id": "MDQ6VXNlcjk2NzM0MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/9673411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shravankumar147", "html_url": "https://github.com/shravankumar147", "followers_url": "https://api.github.com/users/shravankumar147/followers", "following_url": "https://api.github.com/users/shravankumar147/following{/other_user}", "gists_url": "https://api.github.com/users/shravankumar147/gists{/gist_id}", "starred_url": "https://api.github.com/users/shravankumar147/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shravankumar147/subscriptions", "organizations_url": "https://api.github.com/users/shravankumar147/orgs", "repos_url": "https://api.github.com/users/shravankumar147/repos", "events_url": "https://api.github.com/users/shravankumar147/events{/privacy}", "received_events_url": "https://api.github.com/users/shravankumar147/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-03-04T10:24:38Z", "updated_at": "2022-03-05T04:34:56Z", "closed_at": "2022-03-05T04:34:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nAn error occurred while executing  [gcn2_cora](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/gcn2_cora.py).\r\n\r\nIt's occurring while performing => \r\n `data.adj_t = gcn_norm(data.adj_t)  # Pre-process GCN normalization. `\r\n\r\nWhole error from the screen: \r\n```\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n[/usr/local/lib/python3.7/dist-packages/torch_geometric/data/storage.py](https://localhost:8080/#) in __getattr__(self, key)\r\n     46         try:\r\n---> 47             return self[key]\r\n     48         except KeyError:\r\n\r\n3 frames\r\n[/usr/local/lib/python3.7/dist-packages/torch_geometric/data/storage.py](https://localhost:8080/#) in __getitem__(self, key)\r\n     66     def __getitem__(self, key: str) -> Any:\r\n---> 67         return self._mapping[key]\r\n     68 \r\n\r\nKeyError: 'adj_t'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nAttributeError                            Traceback (most recent call last)\r\n[<ipython-input-6-107ffeaeccd1>](https://localhost:8080/#) in <module>()\r\n      7 # dataset = Planetoid(path, dataset, transform=transform)\r\n      8 data = dataset[0]\r\n----> 9 data.adj_t = gcn_norm(data.adj_t)  # Pre-process GCN normalization.\r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch_geometric/data/data.py](https://localhost:8080/#) in __getattr__(self, key)\r\n    360                 \"dataset, remove the 'processed/' directory in the dataset's \"\r\n    361                 \"root folder and try again.\")\r\n--> 362         return getattr(self._store, key)\r\n    363 \r\n    364     def __setattr__(self, key: str, value: Any):\r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch_geometric/data/storage.py](https://localhost:8080/#) in __getattr__(self, key)\r\n     48         except KeyError:\r\n     49             raise AttributeError(\r\n---> 50                 f\"'{self.__class__.__name__}' object has no attribute '{key}'\")\r\n     51 \r\n     52     def __setattr__(self, key: str, value: Any):\r\n\r\nAttributeError: 'GlobalStorage' object has no attribute 'adj_t'\r\n```\n\n### Environment\n\n* PyG version:2.0.4\r\n* PyTorch version:1.10.0+cu111\r\n* OS:Linux\r\n* Python version:3.7.12\r\n* CUDA/cuDNN version:11.1\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): on colab\r\n!pip install -q torch-scatter -f https://data.pyg.org/whl/torch-1.10.0+cu111.html\r\n!pip install -q torch-sparse -f https://data.pyg.org/whl/torch-1.10.0+cu111.html\r\n!pip install -q git+https://github.com/pyg-team/pytorch_geometric.git\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4192/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4172", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4172/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4172/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4172/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4172", "id": 1153909473, "node_id": "PR_kwDOBlHMec4zp7xk", "number": 4172, "title": "Remove `GoogleDriveDownloader` dependency", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3593882085, "node_id": "LA_kwDOBlHMec7WNknl", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/refactor", "name": "refactor", "color": "BECEA5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-02-28T10:21:48Z", "updated_at": "2022-02-28T10:32:45Z", "closed_at": "2022-02-28T10:32:44Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4172", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4172", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4172.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4172.patch", "merged_at": "2022-02-28T10:32:44Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4172/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4170", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4170/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4170/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4170/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4170", "id": 1153811755, "node_id": "I_kwDOBlHMec5ExcUr", "number": 4170, "title": "Failed to load Reddit2 Dataset", "user": {"login": "LemonAndRabbit", "id": 59089622, "node_id": "MDQ6VXNlcjU5MDg5NjIy", "avatar_url": "https://avatars.githubusercontent.com/u/59089622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LemonAndRabbit", "html_url": "https://github.com/LemonAndRabbit", "followers_url": "https://api.github.com/users/LemonAndRabbit/followers", "following_url": "https://api.github.com/users/LemonAndRabbit/following{/other_user}", "gists_url": "https://api.github.com/users/LemonAndRabbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/LemonAndRabbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LemonAndRabbit/subscriptions", "organizations_url": "https://api.github.com/users/LemonAndRabbit/orgs", "repos_url": "https://api.github.com/users/LemonAndRabbit/repos", "events_url": "https://api.github.com/users/LemonAndRabbit/events{/privacy}", "received_events_url": "https://api.github.com/users/LemonAndRabbit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-02-28T08:46:01Z", "updated_at": "2022-02-28T14:04:10Z", "closed_at": "2022-02-28T10:32:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI met a problem when loadding Reddit2 Dataset:\r\n\r\nWhen changing `Reddit` in examples/Reddit.py into `Reddit2`\r\n\r\n```python\r\nimport copy\r\nimport os.path as osp\r\n\r\nimport torch\r\nimport torch.nn.functional as F\r\nfrom tqdm import tqdm\r\n\r\nfrom torch_geometric.datasets import Reddit2\r\nfrom torch_geometric.loader import NeighborLoader\r\nfrom torch_geometric.nn import SAGEConv\r\n\r\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\r\n\r\npath = osp.join(osp.dirname(osp.realpath(__file__)), '..', 'data', 'Reddit2')\r\ndataset = Reddit2(path)\r\n```\r\n\r\nI got the following error:\r\n```text\r\nTraceback (most recent call last):\r\n  File \"reddit.py\", line 15, in <module>    dataset = Reddit2(path)  File \"/home/zy50/anaconda3/envs/pyg/lib/python3.8/site-packages/torch_geometric/datasets/reddit2.py\", line 41, in __init__\r\n    super().__init__(root, transform, pre_transform)  File \"/home/zy50/anaconda3/envs/pyg/lib/python3.8/site-packages/torch_geometric/data/in_memory_dataset.py\", line 57, in __init__    super().__init__(root, transform, pre_transform, pre_filter)\r\n  File \"/home/zy50/anaconda3/envs/pyg/lib/python3.8/site-packages/torch_geometric/data/dataset.py\", line 88, in __init__    self._process()\r\n  File \"/home/zy50/anaconda3/envs/pyg/lib/python3.8/site-packages/torch_geometric/data/dataset.py\", line 171, in _process\r\n    self.process()\r\n  File \"/home/zy50/anaconda3/envs/pyg/lib/python3.8/site-packages/torch_geometric/datasets/reddit2.py\", line 68, in process\r\n    f = np.load(osp.join(self.raw_dir, 'adj_full.npz'))\r\n  File \"/home/zy50/anaconda3/envs/pyg/lib/python3.8/site-packages/numpy/lib/npyio.py\", line 445, in load\r\n    raise ValueError(\"Cannot load file containing pickled data \"\r\nValueError: Cannot load file containing pickled data when allow_pickle=False\r\n```\r\n\r\nAdding allow_pickle=true in `/home/zy50/anaconda3/envs/pyg/lib/python3.8/site-packages/torch_geometric/datasets/reddit2.py, line 68` doesn't work either:\r\n```text\r\nProcessing...\r\nTraceback (most recent call last):\r\n  File \"/home/zy50/anaconda3/envs/pyg/lib/python3.8/site-packages/numpy/lib/npyio.py\", line 448, in load\r\n    return pickle.load(fid, **pickle_kwargs)\r\n_pickle.UnpicklingError: invalid load key, '<'.\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"reddit.py\", line 15, in <module>\r\n    dataset = Reddit2(path)\r\n  File \"/home/zy50/anaconda3/envs/pyg/lib/python3.8/site-packages/torch_geometric/datasets/reddit2.py\", line 41, in __init__\r\n    super().__init__(root, transform, pre_transform)\r\n  File \"/home/zy50/anaconda3/envs/pyg/lib/python3.8/site-packages/torch_geometric/data/in_memory_dataset.py\", line 57, in __init__\r\n    super().__init__(root, transform, pre_transform, pre_filter)\r\n  File \"/home/zy50/anaconda3/envs/pyg/lib/python3.8/site-packages/torch_geometric/data/dataset.py\", line 88, in __init__\r\n    self._process()\r\n  File \"/home/zy50/anaconda3/envs/pyg/lib/python3.8/site-packages/torch_geometric/data/dataset.py\", line 171, in _process\r\n    self.process()\r\n  File \"/home/zy50/anaconda3/envs/pyg/lib/python3.8/site-packages/torch_geometric/datasets/reddit2.py\", line 68, in process\r\n    f = np.load(osp.join(self.raw_dir, 'adj_full.npz'), allow_pickle=True)\r\n  File \"/home/zy50/anaconda3/envs/pyg/lib/python3.8/site-packages/numpy/lib/npyio.py\", line 450, in load\r\n    raise IOError(\r\nOSError: Failed to interpret file '/home/zy50/pytorch_geometric/data/Reddit2/raw/adj_full.npz' as a pickle\r\n```\r\n\r\nI wonder whether Reddit2 files are broken or I made anything worng?\r\n\r\nThanks a lot for any help.\n\n### Environment\n\n* PyG version: 2.0.3\r\n* PyTorch version: 1.10.2 \r\n* OS: Linux\r\n* Python version: 3.8.12\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda create -n pyg -f pytorch_geometric/conda/pytorch_geometric/pyg.yml ", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4170/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4152", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4152/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4152/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4152/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4152", "id": 1150169968, "node_id": "PR_kwDOBlHMec4zc3G1", "number": 4152, "title": "Fix `edge_insensitive` homophily measure", "user": {"login": "jinjh0123", "id": 45936462, "node_id": "MDQ6VXNlcjQ1OTM2NDYy", "avatar_url": "https://avatars.githubusercontent.com/u/45936462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinjh0123", "html_url": "https://github.com/jinjh0123", "followers_url": "https://api.github.com/users/jinjh0123/followers", "following_url": "https://api.github.com/users/jinjh0123/following{/other_user}", "gists_url": "https://api.github.com/users/jinjh0123/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinjh0123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinjh0123/subscriptions", "organizations_url": "https://api.github.com/users/jinjh0123/orgs", "repos_url": "https://api.github.com/users/jinjh0123/repos", "events_url": "https://api.github.com/users/jinjh0123/events{/privacy}", "received_events_url": "https://api.github.com/users/jinjh0123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358956745, "node_id": "MDU6TGFiZWwzMzU4OTU2NzQ1", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "jinjh0123", "id": 45936462, "node_id": "MDQ6VXNlcjQ1OTM2NDYy", "avatar_url": "https://avatars.githubusercontent.com/u/45936462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinjh0123", "html_url": "https://github.com/jinjh0123", "followers_url": "https://api.github.com/users/jinjh0123/followers", "following_url": "https://api.github.com/users/jinjh0123/following{/other_user}", "gists_url": "https://api.github.com/users/jinjh0123/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinjh0123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinjh0123/subscriptions", "organizations_url": "https://api.github.com/users/jinjh0123/orgs", "repos_url": "https://api.github.com/users/jinjh0123/repos", "events_url": "https://api.github.com/users/jinjh0123/events{/privacy}", "received_events_url": "https://api.github.com/users/jinjh0123/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jinjh0123", "id": 45936462, "node_id": "MDQ6VXNlcjQ1OTM2NDYy", "avatar_url": "https://avatars.githubusercontent.com/u/45936462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinjh0123", "html_url": "https://github.com/jinjh0123", "followers_url": "https://api.github.com/users/jinjh0123/followers", "following_url": "https://api.github.com/users/jinjh0123/following{/other_user}", "gists_url": "https://api.github.com/users/jinjh0123/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinjh0123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinjh0123/subscriptions", "organizations_url": "https://api.github.com/users/jinjh0123/orgs", "repos_url": "https://api.github.com/users/jinjh0123/repos", "events_url": "https://api.github.com/users/jinjh0123/events{/privacy}", "received_events_url": "https://api.github.com/users/jinjh0123/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2022-02-25T08:22:38Z", "updated_at": "2022-03-10T15:53:55Z", "closed_at": "2022-03-10T15:53:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4152", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4152", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4152.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4152.patch", "merged_at": "2022-03-10T15:53:55Z"}, "body": "Regarding #3977\r\n\r\nI found some gaps between the definition of the feat homophily measure in the [paper](https://arxiv.org/pdf/2110.14446.pdf) and the implementation of it in #3977, so I suggest to fix them.\r\n\r\n1. The paper suggested the measure as 'summation over _C_ classes (0 to C-1) and division by _C-1_'.\r\nHowever, the code has used the mean operator, which leads to wrong calculation.\r\n\r\n2. To compute h_k value, the code has used edge homophily function, but I think the definition of h_k is different from it.\r\nWe have to consider the degrees of each node, instead of the number of edges.\r\n\r\nI think the answers of the test cases need to be corrected too.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4152/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4150", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4150/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4150/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4150/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4150", "id": 1150038882, "node_id": "I_kwDOBlHMec5EjDNi", "number": 4150, "title": "Inconsistent behaviour with `to_hetero()` and custom edge types", "user": {"login": "alvarogunawan", "id": 22308151, "node_id": "MDQ6VXNlcjIyMzA4MTUx", "avatar_url": "https://avatars.githubusercontent.com/u/22308151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alvarogunawan", "html_url": "https://github.com/alvarogunawan", "followers_url": "https://api.github.com/users/alvarogunawan/followers", "following_url": "https://api.github.com/users/alvarogunawan/following{/other_user}", "gists_url": "https://api.github.com/users/alvarogunawan/gists{/gist_id}", "starred_url": "https://api.github.com/users/alvarogunawan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alvarogunawan/subscriptions", "organizations_url": "https://api.github.com/users/alvarogunawan/orgs", "repos_url": "https://api.github.com/users/alvarogunawan/repos", "events_url": "https://api.github.com/users/alvarogunawan/events{/privacy}", "received_events_url": "https://api.github.com/users/alvarogunawan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-02-25T04:47:23Z", "updated_at": "2022-11-16T09:13:46Z", "closed_at": "2022-11-16T09:13:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi, I'm trying to implement a heterogeneous network with a custom dataset. I've run into some issues but seems like it boils down to the following: when running the below, the transformed network seems to have different behaviour depending on the order of the node types in the edge.\r\n\r\n```python\r\nimport torch\r\nfrom torch_geometric.nn import Linear, GATConv, to_hetero\r\n\r\nclass HeteroNet(torch.nn.Module):\r\n    def __init__(self):\r\n        super(HeteroNet, self).__init__()\r\n        self.fc_1_input = Linear(-1, 64)\r\n\r\n        self.hidden_gat = GATConv((-1,-1), 64, heads=4, add_self_loops=False)\r\n\r\n        self.fc_1_output = Linear(-1, 1)\r\n            \r\n\r\n    def forward(self, x, edge_index):\r\n        x = self.fc_1_input(x)\r\n        x = self.hidden_gat(x, edge_index)\r\n        x = self.fc_1_output(x)\r\n        return x\r\n    \r\n        \r\nmodel_1 = HeteroNet()\r\nmodel_1 = to_hetero(model_1, (['not_node', '<=_node'],[('<=_node', 'to', 'not_node')]))\r\nprint(\"Printing model_1!\")\r\nprint(model_1)\r\n\r\nmodel_2 = HeteroNet()\r\nmodel_2 = to_hetero(model_2, (['not_node', '<=_node'],[('not_node', 'to', '<=_node')]))\r\nprint(\"Printing model_2!\")\r\nprint(model_2)\r\n```\r\n\r\nThis outputs the following:\r\n\r\n```\r\nPrinting model_1!\r\nGraphModule(\r\n  (fc_1_input): ModuleDict(\r\n    (not_node): Linear(-1, 64, bias=True)\r\n    (<=_node): Linear(-1, 64, bias=True)\r\n  )\r\n  (hidden_gat): ModuleDict(\r\n    (<=_node__to__not_node): GATConv((-1, -1), 64, heads=4)\r\n  )\r\n  (fc_1_output): ModuleDict(\r\n    (not_node): Linear(-1, 1, bias=True)\r\n    (<=_node): Linear(-1, 1, bias=True)\r\n  )\r\n)\r\n\r\n\r\n\r\ndef forward(self, x, edge_index):\r\n    x__not_node = x.get('not_node');  x = None\r\n    fc_1_input__not_node = self.fc_1_input.not_node(x__not_node);  x__not_node = None\r\n    hidden_gat__not_node = getattr(self.hidden_gat, \"<=_node__to__not_node\")((None, fc_1_input__not_node), (None, None));  fc_1_input__not_node = None\r\n    fc_1_output__not_node = self.fc_1_output.not_node(hidden_gat__not_node);  hidden_gat__not_node = None\r\n    return {'not_node': fc_1_output__not_node, '<=_node': None}\r\n\r\nPrinting model_2!\r\nGraphModule(\r\n  (fc_1_input): ModuleDict(\r\n    (not_node): Linear(-1, 64, bias=True)\r\n    (<=_node): Linear(-1, 64, bias=True)\r\n  )\r\n  (hidden_gat): ModuleDict(\r\n    (not_node): GATConv((-1, -1), 64, heads=4)\r\n    (<=_node): GATConv((-1, -1), 64, heads=4)\r\n  )\r\n  (fc_1_output): ModuleDict(\r\n    (not_node): Linear(-1, 1, bias=True)\r\n    (<=_node): Linear(-1, 1, bias=True)\r\n  )\r\n)\r\n\r\n\r\n\r\ndef forward(self, x, edge_index):\r\n    fc_1_output__not_node = self.fc_1_output.not_node(None)\r\n    return {'not_node': fc_1_output__not_node, '<=_node': None}\r\n\r\n```\r\n\r\nAs you can see, for `model_1` the transformed model contains the correct edge type for the `hidden_gat` layer, but with the reversed node types `model_2` doesn't generate the same network with edge reversed.\n\n### Environment\n\n* PyG version: 2.0.3\r\n* PyTorch version: 1.10.2\r\n* OS: Ubuntu 20.04.3 LTSc\r\n* Python version: 3.8.10\r\n* CUDA/cuDNN version: 11.6\r\n* How you installed PyTorch and PyG: pip\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4150/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4138", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4138/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4138/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4138/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4138", "id": 1149323407, "node_id": "I_kwDOBlHMec5EgUiP", "number": 4138, "title": "`has_isolated_nodes()` and `contains_isolated_nodes()` return different result for same edge_index graph", "user": {"login": "BodyCSoulN", "id": 40445446, "node_id": "MDQ6VXNlcjQwNDQ1NDQ2", "avatar_url": "https://avatars.githubusercontent.com/u/40445446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BodyCSoulN", "html_url": "https://github.com/BodyCSoulN", "followers_url": "https://api.github.com/users/BodyCSoulN/followers", "following_url": "https://api.github.com/users/BodyCSoulN/following{/other_user}", "gists_url": "https://api.github.com/users/BodyCSoulN/gists{/gist_id}", "starred_url": "https://api.github.com/users/BodyCSoulN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BodyCSoulN/subscriptions", "organizations_url": "https://api.github.com/users/BodyCSoulN/orgs", "repos_url": "https://api.github.com/users/BodyCSoulN/repos", "events_url": "https://api.github.com/users/BodyCSoulN/events{/privacy}", "received_events_url": "https://api.github.com/users/BodyCSoulN/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-02-24T13:59:38Z", "updated_at": "2022-02-25T12:51:04Z", "closed_at": "2022-02-25T10:41:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\n`has_isolated_nodes()` and `contains_isolated_nodes()` return different result for same edge_index graph\r\n\r\n```python\r\nfrom torch_geometric.data import Data\r\nimport torch_geometric.utils as utils\r\nimport torch\r\n\r\ng = Data(x=torch.randn(4, 3), edge_index = torch.tensor([[0, 0, 1], [1, 2, 3]]))\r\nprint(g.has_isolated_nodes())\r\nprint(utils.contains_isolated_nodes(g.edge_index))\r\n```\r\n\r\n```bash\r\nTrue\r\nFalse\r\n```\n\n### Environment\n\n* PyG version: 2.0.3\r\n* PyTorch version:1.10.0\r\n* OS:Linux\r\n* Python version:3.7.11\r\n* CUDA/cuDNN version:11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4138/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4106", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4106/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4106/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4106/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4106", "id": 1146005850, "node_id": "PR_kwDOBlHMec4zPUHr", "number": 4106, "title": "Automatic eigenvalue approximation in ChebConv", "user": {"login": "daniel-unyi-42", "id": 63173826, "node_id": "MDQ6VXNlcjYzMTczODI2", "avatar_url": "https://avatars.githubusercontent.com/u/63173826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daniel-unyi-42", "html_url": "https://github.com/daniel-unyi-42", "followers_url": "https://api.github.com/users/daniel-unyi-42/followers", "following_url": "https://api.github.com/users/daniel-unyi-42/following{/other_user}", "gists_url": "https://api.github.com/users/daniel-unyi-42/gists{/gist_id}", "starred_url": "https://api.github.com/users/daniel-unyi-42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daniel-unyi-42/subscriptions", "organizations_url": "https://api.github.com/users/daniel-unyi-42/orgs", "repos_url": "https://api.github.com/users/daniel-unyi-42/repos", "events_url": "https://api.github.com/users/daniel-unyi-42/events{/privacy}", "received_events_url": "https://api.github.com/users/daniel-unyi-42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}, {"id": 3593882085, "node_id": "LA_kwDOBlHMec7WNknl", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/refactor", "name": "refactor", "color": "BECEA5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "daniel-unyi-42", "id": 63173826, "node_id": "MDQ6VXNlcjYzMTczODI2", "avatar_url": "https://avatars.githubusercontent.com/u/63173826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daniel-unyi-42", "html_url": "https://github.com/daniel-unyi-42", "followers_url": "https://api.github.com/users/daniel-unyi-42/followers", "following_url": "https://api.github.com/users/daniel-unyi-42/following{/other_user}", "gists_url": "https://api.github.com/users/daniel-unyi-42/gists{/gist_id}", "starred_url": "https://api.github.com/users/daniel-unyi-42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daniel-unyi-42/subscriptions", "organizations_url": "https://api.github.com/users/daniel-unyi-42/orgs", "repos_url": "https://api.github.com/users/daniel-unyi-42/repos", "events_url": "https://api.github.com/users/daniel-unyi-42/events{/privacy}", "received_events_url": "https://api.github.com/users/daniel-unyi-42/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "daniel-unyi-42", "id": 63173826, "node_id": "MDQ6VXNlcjYzMTczODI2", "avatar_url": "https://avatars.githubusercontent.com/u/63173826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daniel-unyi-42", "html_url": "https://github.com/daniel-unyi-42", "followers_url": "https://api.github.com/users/daniel-unyi-42/followers", "following_url": "https://api.github.com/users/daniel-unyi-42/following{/other_user}", "gists_url": "https://api.github.com/users/daniel-unyi-42/gists{/gist_id}", "starred_url": "https://api.github.com/users/daniel-unyi-42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daniel-unyi-42/subscriptions", "organizations_url": "https://api.github.com/users/daniel-unyi-42/orgs", "repos_url": "https://api.github.com/users/daniel-unyi-42/repos", "events_url": "https://api.github.com/users/daniel-unyi-42/events{/privacy}", "received_events_url": "https://api.github.com/users/daniel-unyi-42/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-02-21T16:25:22Z", "updated_at": "2022-02-25T11:47:31Z", "closed_at": "2022-02-25T11:47:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4106", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4106", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4106.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4106.patch", "merged_at": "2022-02-25T11:47:31Z"}, "body": "I modified ChebConv according to the issue [Eigenvalues in ChebConv](https://github.com/pyg-team/pytorch_geometric/issues/3996) and updated the documentation as well.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4106/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4086", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4086/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4086/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4086/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4086", "id": 1139767054, "node_id": "PR_kwDOBlHMec4y6cd2", "number": 4086, "title": "Fix lazy initialization for PyTorch 1.7", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-02-16T09:33:22Z", "updated_at": "2022-02-16T09:54:33Z", "closed_at": "2022-02-16T09:54:32Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4086", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4086", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4086.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4086.patch", "merged_at": "2022-02-16T09:54:32Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4086/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4047", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4047/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4047/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4047/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4047", "id": 1129736404, "node_id": "PR_kwDOBlHMec4yXRSN", "number": 4047, "title": "Fix TorchScript support for `torch-cluster` functions", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-02-10T09:51:06Z", "updated_at": "2022-02-10T10:15:07Z", "closed_at": "2022-02-10T10:15:06Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4047", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4047", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4047.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4047.patch", "merged_at": "2022-02-10T10:15:06Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4047/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4046", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4046/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4046/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4046/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4046", "id": 1129714429, "node_id": "I_kwDOBlHMec5DVhL9", "number": 4046, "title": "Exporting radius_graph as torchscript fails: python value of type 'module' cannot be used as a value.", "user": {"login": "janblumenkamp", "id": 5030127, "node_id": "MDQ6VXNlcjUwMzAxMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/5030127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janblumenkamp", "html_url": "https://github.com/janblumenkamp", "followers_url": "https://api.github.com/users/janblumenkamp/followers", "following_url": "https://api.github.com/users/janblumenkamp/following{/other_user}", "gists_url": "https://api.github.com/users/janblumenkamp/gists{/gist_id}", "starred_url": "https://api.github.com/users/janblumenkamp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janblumenkamp/subscriptions", "organizations_url": "https://api.github.com/users/janblumenkamp/orgs", "repos_url": "https://api.github.com/users/janblumenkamp/repos", "events_url": "https://api.github.com/users/janblumenkamp/events{/privacy}", "received_events_url": "https://api.github.com/users/janblumenkamp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-02-10T09:36:31Z", "updated_at": "2022-02-10T10:00:09Z", "closed_at": "2022-02-10T10:00:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI am trying to export a `nn.Module` that uses the pooling layer `radius_graph` as torchscript. This fails as described below.\r\n\r\n```\r\nimport torch\r\nimport torch.nn as nn\r\nfrom torch_geometric.nn import radius_graph\r\n\r\nclass Model(nn.Module):\r\n    def __init__(self):\r\n        super(Model, self).__init__()\r\n\r\n    def forward(self, x, batch):\r\n        return radius_graph(x, r=1.5, batch=batch, loop=False)\r\n\r\nx = torch.Tensor([[-1, -1], [-1, 1], [1, -1], [1, 1]])\r\nbatch = torch.tensor([0, 0, 0, 0])\r\n\r\nmodel = Model()\r\nscripted = torch.jit.script(model, (x, batch))\r\nprint(scripted)\r\n```\r\n\r\nTraceback:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/jan/Documents/PhD/ros2_tb_ctrl/test_torchscript.py\", line 16, in <module>\r\n    scripted = torch.jit.script(model, (x, batch))\r\n  File \"[...]/python3.9/site-packages/torch/jit/_script.py\", line 1096, in script\r\n    return torch.jit._recursive.create_script_module(\r\n  File \"[...]/python3.9/site-packages/torch/jit/_recursive.py\", line 412, in create_script_module\r\n    return create_script_module_impl(nn_module, concrete_type, stubs_fn)\r\n  File \"[...]/python3.9/site-packages/torch/jit/_recursive.py\", line 478, in create_script_module_impl\r\n    create_methods_and_properties_from_stubs(concrete_type, method_stubs, property_stubs)\r\n  File \"[...]/python3.9/site-p...]/ackages/torch/jit/_recursive.py\", line 355, in create_methods_and_properties_from_stubs\r\n    concrete_type._create_methods_and_properties(property_defs, property_rcbs, method_defs, method_rcbs, method_defaults)\r\n  File \"[...]/python3.9/site-packages/torch/jit/_recursive.py\", line 795, in try_compile_fn\r\n    return torch.jit.script(fn, _rcb=rcb)\r\n  File \"[...]/python3.9/site-packages/torch/jit/_script.py\", line 1143, in script\r\n    fn = torch._C._jit_script_compile(\r\nRuntimeError: \r\npython value of type 'module' cannot be used as a value. Perhaps it is a closed over global variable? If so, please consider passing it in as an argument or use a local varible instead.:\r\n  File \"[...]/python3.9/site-packages/torch_geometric/nn/pool/__init__.py\", line 210\r\n        edge_index = radius_graph(x, r=1.5, batch=batch, loop=False)\r\n    \"\"\"\r\n    if torch_cluster is None:\r\n       ~~~~~~~~~~~~~ <--- HERE\r\n        raise ImportError('`radius_graph` requires `torch-cluster`.')\r\n'radius_graph' is being compiled since it was called from 'Model.forward'\r\n  File \"/home/jan/Documents/PhD/ros2_tb_ctrl/test_torchscript.py\", line 10\r\n    def forward(self, x, batch):\r\n        return radius_graph(x, r=1.5, batch=batch, loop=False)\r\n               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE\r\n```\r\n\n\n### Environment\n\n* PyG version: 1.7.2\r\n* PyTorch version: 1.9.0\r\n* OS: Manjaro Linux\r\n* Python version: 3.9.9\r\n* CUDA/cuDNN version: 10.2\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pipi/system\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4046/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4030", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4030/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4030/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4030/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4030", "id": 1127394040, "node_id": "I_kwDOBlHMec5DMqr4", "number": 4030, "title": "Weight and bias shape in `LayerNorm`", "user": {"login": "marshka", "id": 26874908, "node_id": "MDQ6VXNlcjI2ODc0OTA4", "avatar_url": "https://avatars.githubusercontent.com/u/26874908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marshka", "html_url": "https://github.com/marshka", "followers_url": "https://api.github.com/users/marshka/followers", "following_url": "https://api.github.com/users/marshka/following{/other_user}", "gists_url": "https://api.github.com/users/marshka/gists{/gist_id}", "starred_url": "https://api.github.com/users/marshka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marshka/subscriptions", "organizations_url": "https://api.github.com/users/marshka/orgs", "repos_url": "https://api.github.com/users/marshka/repos", "events_url": "https://api.github.com/users/marshka/events{/privacy}", "received_events_url": "https://api.github.com/users/marshka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-02-08T15:18:45Z", "updated_at": "2022-02-08T16:44:47Z", "closed_at": "2022-02-08T16:44:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nParameters in [`nn.norm.LayerNorm`](https://github.com/pyg-team/pytorch_geometric/blob/master/torch_geometric/nn/norm/layer_norm.py) are created with shape (1,) because of the square brackets surrounding  `in_channels` in `__init__`:\r\n\r\n```python\r\nif affine:\r\n    self.weight = Parameter(torch.Tensor([in_channels]))\r\n    self.bias = Parameter(torch.Tensor([in_channels]))\r\n```\r\n\r\nIt works without errors because of broadcasting, but it should be `torch.Tensor(in_channels)` to compute affine transformation without sharing parameters.\n\n### Environment\n\n* PyG version: 2.0.3\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4030/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4027", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4027/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4027/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4027/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4027", "id": 1127038285, "node_id": "PR_kwDOBlHMec4yOWSK", "number": 4027, "title": "`to_hetero` fix for leaf modules (e.g., `torch_geometric.nn.BatchNorm`)", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-02-08T10:05:01Z", "updated_at": "2022-02-08T10:34:45Z", "closed_at": "2022-02-08T10:34:45Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/4027", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/4027", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/4027.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/4027.patch", "merged_at": "2022-02-08T10:34:44Z"}, "body": "Fixes https://github.com/pyg-team/pytorch_geometric/issues/4023.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4027/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4023", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4023/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4023/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4023/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4023", "id": 1126471995, "node_id": "I_kwDOBlHMec5DJJk7", "number": 4023, "title": "Potential issue converting batch normalisation from homogeneous GNN using `to_hetero()` method to heterogeneous version", "user": {"login": "anniekmyatt", "id": 51007583, "node_id": "MDQ6VXNlcjUxMDA3NTgz", "avatar_url": "https://avatars.githubusercontent.com/u/51007583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anniekmyatt", "html_url": "https://github.com/anniekmyatt", "followers_url": "https://api.github.com/users/anniekmyatt/followers", "following_url": "https://api.github.com/users/anniekmyatt/following{/other_user}", "gists_url": "https://api.github.com/users/anniekmyatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/anniekmyatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anniekmyatt/subscriptions", "organizations_url": "https://api.github.com/users/anniekmyatt/orgs", "repos_url": "https://api.github.com/users/anniekmyatt/repos", "events_url": "https://api.github.com/users/anniekmyatt/events{/privacy}", "received_events_url": "https://api.github.com/users/anniekmyatt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-02-07T20:37:41Z", "updated_at": "2022-02-08T10:34:44Z", "closed_at": "2022-02-08T10:34:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nWhen I include batch normalisation in the GNN of the example [hetero_link_pred.py](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/hetero/hetero_link_pred.py), an error is thrown in the first model call of the lazy initialisation. Note that the code below is exactly copied from the link prediction example, only the two lines related to batch normalisation in the `GNNEncoder` class are added.\r\n\r\n```\r\nimport argparse\r\nimport os.path as osp\r\n\r\nimport torch\r\nimport torch.nn.functional as F\r\nfrom torch.nn import Linear\r\n\r\nimport torch_geometric.transforms as T\r\nfrom torch_geometric.datasets import MovieLens\r\nfrom torch_geometric.nn.norm.batch_norm import BatchNorm\r\nfrom torch_geometric.nn import SAGEConv, to_hetero\r\n\r\nparser = argparse.ArgumentParser()\r\nparser.add_argument('--use_weighted_loss', action='store_true',\r\n                    help='Whether to use weighted MSE loss.')\r\nargs = parser.parse_args()\r\n\r\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\r\n\r\npath = osp.join(osp.dirname(osp.realpath(__file__)), '../../data/MovieLens')\r\ndataset = MovieLens(path, model_name='all-MiniLM-L6-v2')\r\ndata = dataset[0].to(device)\r\n\r\n# Add user node features for message passing:\r\ndata['user'].x = torch.eye(data['user'].num_nodes, device=device)\r\ndel data['user'].num_nodes\r\n\r\n# Add a reverse ('movie', 'rev_rates', 'user') relation for message passing:\r\ndata = T.ToUndirected()(data)\r\ndel data['movie', 'rev_rates', 'user'].edge_label  # Remove \"reverse\" label.\r\n\r\n# Perform a link-level split into training, validation, and test edges:\r\ntrain_data, val_data, test_data = T.RandomLinkSplit(\r\n    num_val=0.1,\r\n    num_test=0.1,\r\n    neg_sampling_ratio=0.0,\r\n    edge_types=[('user', 'rates', 'movie')],\r\n    rev_edge_types=[('movie', 'rev_rates', 'user')],\r\n)(data)\r\n\r\n# We have an unbalanced dataset with many labels for rating 3 and 4, and very\r\n# few for 0 and 1. Therefore we use a weighted MSE loss.\r\nif args.use_weighted_loss:\r\n    weight = torch.bincount(train_data['user', 'movie'].edge_label)\r\n    weight = weight.max() / weight\r\nelse:\r\n    weight = None\r\n\r\n\r\ndef weighted_mse_loss(pred, target, weight=None):\r\n    weight = 1. if weight is None else weight[target].to(pred.dtype)\r\n    return (weight * (pred - target.to(pred.dtype)).pow(2)).mean()\r\n\r\n\r\nclass GNNEncoder(torch.nn.Module):\r\n    def __init__(self, hidden_channels, out_channels):\r\n        super().__init__()\r\n        self.batch_norm1 = BatchNorm(hidden_channels) \r\n        self.conv1 = SAGEConv((-1, -1), hidden_channels)\r\n        self.conv2 = SAGEConv((-1, -1), out_channels)\r\n               \r\n\r\n    def forward(self, x, edge_index):\r\n        x = self.conv1(x, edge_index).relu()\r\n        x = self.batch_norm1(x)\r\n        x = self.conv2(x, edge_index)\r\n        return x\r\n\r\n\r\nclass EdgeDecoder(torch.nn.Module):\r\n    def __init__(self, hidden_channels):\r\n        super().__init__()\r\n        self.lin1 = Linear(2 * hidden_channels, hidden_channels)\r\n        self.lin2 = Linear(hidden_channels, 1)\r\n\r\n    def forward(self, z_dict, edge_label_index):\r\n        row, col = edge_label_index\r\n        z = torch.cat([z_dict['user'][row], z_dict['movie'][col]], dim=-1)\r\n\r\n        z = self.lin1(z).relu()\r\n        z = self.lin2(z)\r\n        return z.view(-1)\r\n\r\n\r\nclass Model(torch.nn.Module):\r\n    def __init__(self, hidden_channels):\r\n        super().__init__()\r\n        self.encoder = GNNEncoder(hidden_channels, hidden_channels)\r\n        self.encoder = to_hetero(self.encoder, data.metadata(), aggr='sum')\r\n        self.decoder = EdgeDecoder(hidden_channels)\r\n\r\n    def forward(self, x_dict, edge_index_dict, edge_label_index):\r\n        z_dict = self.encoder(x_dict, edge_index_dict)\r\n        return self.decoder(z_dict, edge_label_index)\r\n\r\n\r\nmodel = Model(hidden_channels=32).to(device)\r\n\r\n# Due to lazy initialization, we need to run one model step so the number\r\n# of parameters can be inferred:\r\nwith torch.no_grad():\r\n    model.encoder(train_data.x_dict, train_data.edge_index_dict)\r\n\r\n```\r\n\r\nResult:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \".../hetero_link_pred.py\", line 98, in <module>\r\n    model = Model(hidden_channels=32).to(device)\r\n  File \".../hetero_link_pred.py\", line 90, in __init__\r\n    self.encoder = to_hetero(self.encoder, data.metadata(), aggr='sum')\r\n  File \"...\\lib\\site-packages\\torch_geometric\\nn\\to_hetero_transformer.py\", line 111, in to_hetero\r\n    return transformer.transform()\r\n  File \"...\\lib\\site-packages\\torch_geometric\\nn\\fx.py\", line 175, in transform \r\n    self.gm.graph.lint()\r\n  File \"...\\lib\\site-packages\\torch\\fx\\graph.py\", line 1057, in lint\r\n    raise RuntimeError(f'Node {node} target {node.target} references nonexistent attribute '\r\nRuntimeError: Node batch_norm1_module__movie target batch_norm1.module.movie references nonexistent attribute module of batch_norm1\r\n```\r\n\n\n### Environment\n\n* PyG version: from source (pip install git+https://github.com/pyg-team/pytorch_geometric.git)\r\n* PyTorch version:  torch==1.9.0+cpu\r\n* OS: Windows 10\r\n* Python version: 3.8 (also tried with 3.9 with same issue)\r\n* CUDA/cuDNN version: cpu\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4023/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4020", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4020/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4020/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4020/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4020", "id": 1126293238, "node_id": "I_kwDOBlHMec5DId72", "number": 4020, "title": "Unexpected `GATConv` behavior", "user": {"login": "augustwester", "id": 747600, "node_id": "MDQ6VXNlcjc0NzYwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/747600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/augustwester", "html_url": "https://github.com/augustwester", "followers_url": "https://api.github.com/users/augustwester/followers", "following_url": "https://api.github.com/users/augustwester/following{/other_user}", "gists_url": "https://api.github.com/users/augustwester/gists{/gist_id}", "starred_url": "https://api.github.com/users/augustwester/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/augustwester/subscriptions", "organizations_url": "https://api.github.com/users/augustwester/orgs", "repos_url": "https://api.github.com/users/augustwester/repos", "events_url": "https://api.github.com/users/augustwester/events{/privacy}", "received_events_url": "https://api.github.com/users/augustwester/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-02-07T17:33:48Z", "updated_at": "2022-02-08T11:44:04Z", "closed_at": "2022-02-08T11:26:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI am experiencing what to me looks like unexpected behavior using `GATConv`. To demonstrate, consider the following extremely simple model.\r\n\r\n```\r\nclass GAT(nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.conv = GATConv(1, 1, bias=False)\r\n\r\n    def forward(self, data):\r\n        x, att = self.conv(data.x, data.edge_index, return_attention_weights=True)\r\n        return x, att\r\n\r\nmodel = GAT()\r\n\r\nx = torch.tensor([[1], [2]], dtype=torch.float)\r\nedge_index = torch.tensor([[1], [0]], dtype=torch.long)\r\ndata = Data(x=x, edge_index=edge_index)\r\n\r\nout, att = model(data)\r\nprint(out)\r\nprint(att)\r\n```\r\n\r\nWe give as input a graph containing two nodes, A and B, with a directed edge from B to A. The initial value of A is 1 and the initial value of B is 2. We get the following output:\r\n\r\n```\r\ntensor([[-2.2648],\r\n        [-3.0969]], grad_fn=<ViewBackward0>)\r\n(tensor([[1, 0, 1],\r\n        [0, 0, 1]]), tensor([[0.4626],\r\n        [0.5374],\r\n        [1.0000]], grad_fn=<DivBackward0>))\r\n```\r\n\r\nSince `GATConv` adds self-loops to the graph, we get three attention weights. One of those weights is `1.0000` and must therefore belong to the self-loop of node A, since A only has one neighbor (itself). This also means that W=`-2.2648` since A's initial value was 1 and `bias=False`. For reference, this is the relevant equation from the original paper:\r\n\r\n<img width=\"808\" alt=\"Screen Shot 2022-02-07 at 18 18 03\" src=\"https://user-images.githubusercontent.com/747600/152838606-0ffbae99-2aeb-4ca8-90e1-2e89838a3d2f.png\">\r\n\r\nGiven that W is also used to update the representation of node B, it seems to me that either\r\n\r\n`0.4626*W*A + 0.5374*W*B = 0.4626*(-2.2648)*1 + 0.5374*(-2.2648)*2`\r\nor\r\n`0.5374*W*A + 0.4626*W*B = 0.5374*(-2.2648)*1 + 0.4626*(-2.2648)*2`\r\n\r\nmust be the updated representation for B, depending on which weight belongs to which edge.\r\n\r\nHowever, the first expression equals `-3.4819` and the second equals `-3.3125`. How does this square with the updated representation for B of `-3.0969`?\r\n\r\nAm I misunderstanding something or is this a bug in the implementation?\n\n### Environment\n\n* PyG version: 2.0.3\r\n* PyTorch version: 1.10.2\r\n* OS: macOS 12.1 (Monterey)\r\n* Python version: 3.9.1\r\n* CUDA/cuDNN version: None\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4020/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4014", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4014/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4014/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4014/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4014", "id": 1125438858, "node_id": "I_kwDOBlHMec5DFNWK", "number": 4014, "title": "OGB_MAG download url seems to be broken", "user": {"login": "Yoloniverse", "id": 89169051, "node_id": "MDQ6VXNlcjg5MTY5MDUx", "avatar_url": "https://avatars.githubusercontent.com/u/89169051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yoloniverse", "html_url": "https://github.com/Yoloniverse", "followers_url": "https://api.github.com/users/Yoloniverse/followers", "following_url": "https://api.github.com/users/Yoloniverse/following{/other_user}", "gists_url": "https://api.github.com/users/Yoloniverse/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yoloniverse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yoloniverse/subscriptions", "organizations_url": "https://api.github.com/users/Yoloniverse/orgs", "repos_url": "https://api.github.com/users/Yoloniverse/repos", "events_url": "https://api.github.com/users/Yoloniverse/events{/privacy}", "received_events_url": "https://api.github.com/users/Yoloniverse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-02-07T02:44:04Z", "updated_at": "2022-02-07T23:39:06Z", "closed_at": "2022-02-07T23:39:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nIt seems that OGB dataset is a broken one. \r\nWhen I do `dataset = OGB_MAG(path, preprocess='metapath2vec', transform=transform)`, this returns below:\r\n```Using existing file mag_metapath2vec_emb.zip\r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-474-084c20c49593>\", line 1, in <module>\r\n    dataset = OGB_MAG(path, preprocess='metapath2vec', transform=transform)\r\n\r\n  File \"/home/hojun/anaconda3/envs/geometric/lib/python3.6/site-packages/torch_geometric/datasets/ogb_mag.py\", line 58, in __init__\r\n    super().__init__(root, transform, pre_transform)\r\n\r\n  File \"/home/hojun/anaconda3/envs/geometric/lib/python3.6/site-packages/torch_geometric/data/in_memory_dataset.py\", line 57, in __init__\r\n    super().__init__(root, transform, pre_transform, pre_filter)\r\n\r\n  File \"/home/hojun/anaconda3/envs/geometric/lib/python3.6/site-packages/torch_geometric/data/dataset.py\", line 85, in __init__\r\n    self._download()\r\n\r\n  File \"/home/hojun/anaconda3/envs/geometric/lib/python3.6/site-packages/torch_geometric/data/dataset.py\", line 146, in _download\r\n    self.download()\r\n\r\n  File \"/home/hojun/anaconda3/envs/geometric/lib/python3.6/site-packages/torch_geometric/datasets/ogb_mag.py\", line 107, in download\r\n    extract_zip(path, self.raw_dir)\r\n\r\n  File \"/home/hojun/anaconda3/envs/geometric/lib/python3.6/site-packages/torch_geometric/data/extract.py\", line 39, in extract_zip\r\n    with zipfile.ZipFile(path, 'r') as f:\r\n\r\n  File \"/home/hojun/anaconda3/envs/geometric/lib/python3.6/zipfile.py\", line 1131, in __init__\r\n    self._RealGetContents()\r\n\r\n  File \"/home/hojun/anaconda3/envs/geometric/lib/python3.6/zipfile.py\", line 1198, in _RealGetContents\r\n    raise BadZipFile(\"File is not a zip file\")\r\n\r\nBadZipFile: File is not a zip file\r\n```\r\n\r\nI guess the URL should be updated.\r\n\r\n### Environment\r\n\r\n* PyG version:\r\n* PyTorch version:\r\n* OS:\r\n* Python version:\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4014/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4002", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4002/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4002/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4002/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4002", "id": 1124348353, "node_id": "I_kwDOBlHMec5DBDHB", "number": 4002, "title": "GlobalStorage unable to infer num_nodes for graph", "user": {"login": "xoroyoko", "id": 99034185, "node_id": "U_kgDOBeckSQ", "avatar_url": "https://avatars.githubusercontent.com/u/99034185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xoroyoko", "html_url": "https://github.com/xoroyoko", "followers_url": "https://api.github.com/users/xoroyoko/followers", "following_url": "https://api.github.com/users/xoroyoko/following{/other_user}", "gists_url": "https://api.github.com/users/xoroyoko/gists{/gist_id}", "starred_url": "https://api.github.com/users/xoroyoko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xoroyoko/subscriptions", "organizations_url": "https://api.github.com/users/xoroyoko/orgs", "repos_url": "https://api.github.com/users/xoroyoko/repos", "events_url": "https://api.github.com/users/xoroyoko/events{/privacy}", "received_events_url": "https://api.github.com/users/xoroyoko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-02-04T15:49:22Z", "updated_at": "2022-02-07T09:13:36Z", "closed_at": "2022-02-07T09:13:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Bug\r\n\r\nHi, first of all, thank you for this amazing package. I am trying to create a graph that has both `edge_index` and `x` stored as `SparseTensor()`. I believe it is possible and it makes sense. If not, please let me know right away. So I am running this code:\r\n```python\r\nfrom torch_geometric.data import Data\r\nfrom torch_geometric.loader import DataLoader\r\nimport torch\r\nfrom torch_sparse import SparseTensor\r\n\r\n\r\nclass MyData(Data): # class that would allow me to use sparse X\r\n    def __cat_dim__(self, key, value, *args, **kwargs):\r\n        if key == 'x':\r\n            return 0\r\n        else:\r\n            return super().__cat_dim__(key, value, *args, **kwargs)\r\n\r\n\r\nedge_index = torch.tensor([\r\n   [0, 1, 1, 2],\r\n   [1, 0, 2, 1],\r\n])\r\nx = torch.tensor([\r\n    [0, 1, 0, 3],\r\n    [4, 5, 0, 7],\r\n    [0, 9, 0, 0]\r\n])\r\nnum_nodes = x.size(0)\r\n\r\ndata = MyData(\r\n    x=SparseTensor.from_dense(x),\r\n    adj_t=SparseTensor(row=edge_index[0], col=edge_index[1], value=None, sparse_sizes=(num_nodes, num_nodes)).t()\r\n)\r\n\r\ndata_list = [data, data]\r\nloader = DataLoader(data_list, batch_size=2)\r\nbatch = next(iter(loader))\r\n\r\nprint(batch)\r\n```\r\nAnd straight away I get a pretty long stack trace ending up with:\r\n`AttributeError: 'GlobalStorage' object has no attribute 'num_nodes'`\r\nI have tried setting up the `num_nodes` attribute manually on the `data` object, but that fails too. I believe this is a bug in the GlobalStorage. Please, could you have a look and let me know? Thanks!\r\n\r\n### Environment\r\n\r\n* PyG version: 2.0.3\r\n* PyTorch version: 1.10.0+cu113\r\n* OS: Linux Ubuntu 20.04\r\n* Python version: 3.8\r\n* CUDA/cuDNN version: 11.3.1\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): --\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4002/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4000", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4000/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4000/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4000/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/4000", "id": 1123169937, "node_id": "I_kwDOBlHMec5C8jaR", "number": 4000, "title": "IndexError when using NeighborLoader with RandomLinkSplit", "user": {"login": "hash-ir", "id": 45996390, "node_id": "MDQ6VXNlcjQ1OTk2Mzkw", "avatar_url": "https://avatars.githubusercontent.com/u/45996390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hash-ir", "html_url": "https://github.com/hash-ir", "followers_url": "https://api.github.com/users/hash-ir/followers", "following_url": "https://api.github.com/users/hash-ir/following{/other_user}", "gists_url": "https://api.github.com/users/hash-ir/gists{/gist_id}", "starred_url": "https://api.github.com/users/hash-ir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hash-ir/subscriptions", "organizations_url": "https://api.github.com/users/hash-ir/orgs", "repos_url": "https://api.github.com/users/hash-ir/repos", "events_url": "https://api.github.com/users/hash-ir/events{/privacy}", "received_events_url": "https://api.github.com/users/hash-ir/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-02-03T14:42:23Z", "updated_at": "2022-02-09T08:58:13Z", "closed_at": "2022-02-09T08:58:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nI am using the `RandomLinkSplit` to divide the dataset into the train, validation, and test sets. Before this transform, I apply the `ToUndirected` transform. Then, I create mini-batches using `NeighborLoader`. The `edge_index` for each batch has the correct values of the node indices however, the `pos_edge_label_index` has the values as present in the undivided dataset. In other words, the indices are not mapped according to the batch. Here is a minimal autoencoder example to reproduce:\r\n```python\r\nimport os.path as osp\r\nimport torch\r\nimport torch_geometric.transforms as T\r\nfrom torch_geometric.datasets import Planetoid\r\nfrom torch_geometric.loader import NeighborLoader\r\nfrom torch_geometric.nn import GAE\r\n\r\ntransform = T.Compose([\r\n    T.ToUndirected(reduce='mean'),\r\n    T.RandomLinkSplit(num_val=0.05, num_test=0.1, is_undirected=True,\\\r\n                      split_labels=True, add_negative_train_samples=False)\r\n])\r\npath = osp.join(osp.dirname(osp.realpath(__file__)), '..', 'data', 'Planetoid')\r\ndataset = Planetoid(path, args.dataset, transform=transform)\r\ntrain_data, val_data, test_data = dataset[0]\r\n\r\ntrain_loader = NeighborLoader(\r\n    train_data,\r\n    num_neighbors=[10, 5],\r\n    shuffle=True,\r\n    batch_size=32\r\n)\r\n\r\n# get the first batch\r\nbatch = next(iter(train_loader))\r\n\r\n# encoder for GAE\r\nclass LinearEncoder(torch.nn.Module):\r\n    def __init__(self, in_channels, out_channels):\r\n        super().__init__()\r\n        self.conv = GCNConv(in_channels, out_channels)\r\n\r\n    def forward(self, x, edge_index):\r\n        return self.conv(x, edge_index)\r\n\r\nmodel = GAE(Linear(dataset.num_features, 16))\r\n\r\nz = model.encode(batch.x, batch.edge_index)\r\nloss = model.recon_loss(z, batch.pos_edge_label_index)  # this is where the error occurs \r\n```\r\nHere is the full traceback of the error:\r\n```python\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n/tmp/ipykernel_27093/3217501388.py in <module>\r\n----> 1 model.recon_loss(z, batch.pos_edge_label_index)\r\n\r\n/home/hashir/anaconda3/envs/mtpy39/lib/python3.9/site-packages/torch_geometric/nn/models/autoencoder.py in recon_loss(self, z, pos_edge_index, neg_edge_index)\r\n     89 \r\n     90         pos_loss = -torch.log(\r\n---> 91             self.decoder(z, pos_edge_index, sigmoid=True) + EPS).mean()\r\n     92 \r\n     93         # Do not include self-loops in negative samples\r\n\r\n/home/hashir/anaconda3/envs/mtpy39/lib/python3.9/site-packages/torch/nn/modules/module.py in _call_impl(self, *input, **kwargs)\r\n   1049         if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks\r\n   1050                 or _global_forward_hooks or _global_forward_pre_hooks):\r\n-> 1051             return forward_call(*input, **kwargs)\r\n   1052         # Do not call functions when jit is used\r\n   1053         full_backward_hooks, non_full_backward_hooks = [], []\r\n\r\n/home/hashir/anaconda3/envs/mtpy39/lib/python3.9/site-packages/torch_geometric/nn/models/autoencoder.py in forward(self, z, edge_index, sigmoid)\r\n     28                 (default: :obj:`True`)\r\n     29         \"\"\"\r\n---> 30         value = (z[edge_index[0]] * z[edge_index[1]]).sum(dim=1)\r\n     31         return torch.sigmoid(value) if sigmoid else value\r\n     32 \r\n\r\nIndexError: index 755 is out of bounds for dimension 0 with size 288\r\n```\r\nThe value of the embedding array `z` is accessed at a location (`pos_edge_label_index`) that is out of bounds \n\n### Environment\n\n* PyG version: 2.0.3\r\n* PyTorch version: 1.9.1\r\n* OS: CentOS Linux\r\n* Python version: 3.9.7\r\n* CUDA/cuDNN version: 11.1.74\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/4000/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3980", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3980/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3980/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3980/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3980", "id": 1119654490, "node_id": "I_kwDOBlHMec5CvJJa", "number": 3980, "title": "DBP15K download url seems to be broken", "user": {"login": "AndAgio", "id": 51126299, "node_id": "MDQ6VXNlcjUxMTI2Mjk5", "avatar_url": "https://avatars.githubusercontent.com/u/51126299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndAgio", "html_url": "https://github.com/AndAgio", "followers_url": "https://api.github.com/users/AndAgio/followers", "following_url": "https://api.github.com/users/AndAgio/following{/other_user}", "gists_url": "https://api.github.com/users/AndAgio/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndAgio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndAgio/subscriptions", "organizations_url": "https://api.github.com/users/AndAgio/orgs", "repos_url": "https://api.github.com/users/AndAgio/repos", "events_url": "https://api.github.com/users/AndAgio/events{/privacy}", "received_events_url": "https://api.github.com/users/AndAgio/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-01-31T16:30:29Z", "updated_at": "2022-04-07T08:21:16Z", "closed_at": "2022-04-07T08:21:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nThe google drive file ID linked with the DBP15K dataset seems to point to a broken URL. Indeed, running a simple \r\n```dataset = torch_geometric.datasets.DBP15K(os.getcwd(), 'en_fr')``` returns a ```zipfile.BadZipFile: File is not a zip file```.\r\nThis is due to the fact that the code downloads an empty zip file, which can't be unzipped. Digging a bit more it seems that the google drive URL used for the dataset download is not valid anymore. Is there a workaround?\n\n### Environment\n\n* PyG version: 2.0.1\r\n* PyTorch version: 1.9.0\r\n* OS: MacOS 12.0.1\r\n* Python version: 3.8.12\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3980/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3973", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3973/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3973/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3973/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3973", "id": 1118392111, "node_id": "I_kwDOBlHMec5CqU8v", "number": 3973, "title": "MovieLens dataset cannot be loaded", "user": {"login": "Jeriousman", "id": 38139484, "node_id": "MDQ6VXNlcjM4MTM5NDg0", "avatar_url": "https://avatars.githubusercontent.com/u/38139484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jeriousman", "html_url": "https://github.com/Jeriousman", "followers_url": "https://api.github.com/users/Jeriousman/followers", "following_url": "https://api.github.com/users/Jeriousman/following{/other_user}", "gists_url": "https://api.github.com/users/Jeriousman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jeriousman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jeriousman/subscriptions", "organizations_url": "https://api.github.com/users/Jeriousman/orgs", "repos_url": "https://api.github.com/users/Jeriousman/repos", "events_url": "https://api.github.com/users/Jeriousman/events{/privacy}", "received_events_url": "https://api.github.com/users/Jeriousman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-01-30T03:08:56Z", "updated_at": "2022-01-30T03:41:16Z", "closed_at": "2022-01-30T03:41:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\n`from torch_geometric.datasets import MovieLens`\r\nThis gives me error as below:\r\n\r\n> Traceback (most recent call last):\r\n> \r\n>   File \"<ipython-input-21-f261aa7e0609>\", line 1, in <module>\r\n>     from torch_geometric.datasets import MovieLens\r\n> \r\n> ImportError: cannot import name 'MovieLens'\r\n\r\nOther datasets are well loaded without problems like\r\n\r\n`from torch_geometric.datasets import qm7`\r\n\r\nWhy is there an error? I did this in Spyder python 3.6.\r\n\r\n\r\n### Environment\r\n\r\n* PyG version: 2.0.2\r\n* PyTorch version: 1.10.1+cu102\r\n* OS: Linux\r\n* Python version: 3.6\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3973/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3923", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3923/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3923/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3923/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3923", "id": 1111321452, "node_id": "PR_kwDOBlHMec4xbdc0", "number": 3923, "title": "Fix conflict in `yapf` and `isort`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-01-22T07:49:53Z", "updated_at": "2022-01-22T07:57:40Z", "closed_at": "2022-01-22T07:57:40Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3923", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3923", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3923.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3923.patch", "merged_at": "2022-01-22T07:57:40Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3923/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3922", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3922/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3922/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3922/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3922", "id": 1111153856, "node_id": "PR_kwDOBlHMec4xa5Ab", "number": 3922, "title": "Fix `pre-commit` (part 5)", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-01-22T01:02:50Z", "updated_at": "2022-01-22T01:12:36Z", "closed_at": "2022-01-22T01:12:34Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3922", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3922", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3922.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3922.patch", "merged_at": null}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3922/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3921", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3921/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3921/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3921/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3921", "id": 1111149784, "node_id": "PR_kwDOBlHMec4xa4E7", "number": 3921, "title": "Fix `pre-commit`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-01-22T00:58:35Z", "updated_at": "2022-01-22T01:12:41Z", "closed_at": "2022-01-22T01:12:29Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3921", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3921", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3921.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3921.patch", "merged_at": null}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3921/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3920", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3920/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3920/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3920/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3920", "id": 1111143193, "node_id": "PR_kwDOBlHMec4xa2h6", "number": 3920, "title": "Fix `pre-commit` (part 4)", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-01-22T00:53:29Z", "updated_at": "2022-01-22T01:12:44Z", "closed_at": "2022-01-22T01:12:25Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3920", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3920", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3920.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3920.patch", "merged_at": null}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3920/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3919", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3919/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3919/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3919/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3919", "id": 1111131390, "node_id": "PR_kwDOBlHMec4xazyI", "number": 3919, "title": "Fix `pre-commit` (part 3)", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-01-22T00:44:25Z", "updated_at": "2022-01-22T01:12:50Z", "closed_at": "2022-01-22T01:12:21Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3919", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3919", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3919.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3919.patch", "merged_at": null}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3919/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3918", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3918/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3918/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3918/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3918", "id": 1111057170, "node_id": "PR_kwDOBlHMec4xaizm", "number": 3918, "title": "Fix `pre-commit `(part 2)", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-01-21T23:27:20Z", "updated_at": "2022-01-22T01:12:53Z", "closed_at": "2022-01-22T01:12:18Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3918", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3918", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3918.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3918.patch", "merged_at": null}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3918/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3914", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3914/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3914/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3914/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3914", "id": 1110983714, "node_id": "PR_kwDOBlHMec4xaSlR", "number": 3914, "title": "Fix `pre-commit`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-01-21T22:03:02Z", "updated_at": "2022-01-21T22:15:12Z", "closed_at": "2022-01-21T22:15:12Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3914", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3914", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3914.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3914.patch", "merged_at": "2022-01-21T22:15:11Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3914/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3907", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3907/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3907/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3907/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3907", "id": 1110226115, "node_id": "PR_kwDOBlHMec4xXxn2", "number": 3907, "title": "Fix bipartite message passing with `target_to_source` flow", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-01-21T09:09:43Z", "updated_at": "2022-01-21T21:09:26Z", "closed_at": "2022-01-21T21:09:25Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3907", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3907", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3907.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3907.patch", "merged_at": "2022-01-21T21:09:25Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3907/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3907/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3902", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3902/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3902/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3902/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3902", "id": 1109983885, "node_id": "I_kwDOBlHMec5CKQKN", "number": 3902, "title": "problem in flow", "user": {"login": "misaki-taro", "id": 80313531, "node_id": "MDQ6VXNlcjgwMzEzNTMx", "avatar_url": "https://avatars.githubusercontent.com/u/80313531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/misaki-taro", "html_url": "https://github.com/misaki-taro", "followers_url": "https://api.github.com/users/misaki-taro/followers", "following_url": "https://api.github.com/users/misaki-taro/following{/other_user}", "gists_url": "https://api.github.com/users/misaki-taro/gists{/gist_id}", "starred_url": "https://api.github.com/users/misaki-taro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/misaki-taro/subscriptions", "organizations_url": "https://api.github.com/users/misaki-taro/orgs", "repos_url": "https://api.github.com/users/misaki-taro/repos", "events_url": "https://api.github.com/users/misaki-taro/events{/privacy}", "received_events_url": "https://api.github.com/users/misaki-taro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-01-21T02:33:21Z", "updated_at": "2022-01-21T21:09:25Z", "closed_at": "2022-01-21T21:09:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi, when I use the `flow=target_to_source`, I find that there is a different result.\r\n\r\nIn the version `pyg==1.4.1` and `torch==1.4.0`, \r\n\r\n*code*\r\n```python\r\ndef my_print(name: str, val, mode='row'):\r\n    if mode == 'row':\r\n        print(f'{name} : {val}\\n')\r\n    elif mode == 'col':\r\n        print(f'{name} : \\n{val}\\n')\r\n    else:\r\n        print(f'please set correct mode')\r\n```\r\n```python\r\nimport torch\r\nfrom torch_geometric.data import Data\r\n\r\nx_s = torch.tensor([[1, 0],\r\n                    [0, 2]], dtype=torch.float)\r\n\r\nx_t = torch.tensor([[3, 0],\r\n                    [0, 4]], dtype=torch.float)\r\n\r\nedge_index = torch.tensor([[0, 0, 1],\r\n                           [0, 1, 0]], dtype=torch.long)\r\n\r\ndata = Data(edge_index=edge_index, x=(x_s, x_t))\r\n\r\nfrom torch_geometric.nn import MessagePassing\r\n\r\nclass Heto_Graph(MessagePassing):\r\n    def __init__(self, **kwargs):\r\n        super().__init__(**kwargs)\r\n        \r\n    def forward(self, x, edge_index):\r\n        return self.propagate(x=x, edge_index=edge_index)\r\n        \r\n    def message(self, x_i, x_j, edge_index_i, edge_index_j, size_i, size_j):\r\n        my_print('x_i', x_i, mode='col')\r\n        my_print('x_j', x_j, mode='col')\r\n        my_print('edge_index_i', edge_index_i, mode='col')\r\n        my_print('edge_index_j', edge_index_j, mode='col')\r\n        my_print('size_i', size_i, mode='col')\r\n        my_print('size_j', size_j, mode='col')\r\n        \r\n        return x_j\r\n\r\nhgm2 = Heto_Graph(aggr='add', flow='target_to_source')\r\nres2 = hgm2(data.x, data.edge_index)\r\nmy_print('res2', res2, mode='col')\r\n```\r\n\r\n*result*\r\n```python\r\nx_i : \r\ntensor([[1., 0.],\r\n        [1., 0.],\r\n        [0., 2.]])\r\n\r\nx_j : \r\ntensor([[3., 0.],\r\n        [0., 4.],\r\n        [3., 0.]])\r\n\r\nedge_index_i : \r\ntensor([0, 0, 1])\r\n\r\nedge_index_j : \r\ntensor([0, 1, 0])\r\n\r\nsize_i : \r\n2\r\n\r\nsize_j : \r\n2\r\n\r\nres2 : \r\ntensor([[3., 4.],\r\n        [3., 0.]])\r\n```\r\n\r\nBut when I use the `same code` in  `pyg==2.0.3`, `torch==1.10.1+cu102`, there is a different result\r\n```python\r\nx_i : \r\ntensor([[3., 0.],\r\n        [3., 0.],\r\n        [0., 4.]])\r\n\r\nx_j : \r\ntensor([[1., 0.],\r\n        [0., 2.],\r\n        [1., 0.]])\r\n\r\nedge_index_i : \r\ntensor([0, 0, 1])\r\n\r\nedge_index_j : \r\ntensor([0, 1, 0])\r\n\r\nsize_i : \r\n2\r\n\r\nsize_j : \r\n2\r\n\r\nres2 : \r\ntensor([[1., 2.],\r\n        [1., 0.]])\r\n\r\n```\r\n\r\nSo I got in trouble.\n\n### Environment\n\n* PyG version:2.0.3\r\n* PyTorch version:1.10.1+cu102\r\n* OS:ubuntu18.04.6\r\n* Python version:3.6.9\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3902/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3897", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3897/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3897/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3897/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3897", "id": 1109054455, "node_id": "PR_kwDOBlHMec4xT-nN", "number": 3897, "title": "`HeteroData`: `data.*_dict` fix in case attribute does not exist", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-01-20T09:20:53Z", "updated_at": "2022-01-20T17:13:40Z", "closed_at": "2022-01-20T09:34:31Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3897", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3897", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3897.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3897.patch", "merged_at": "2022-01-20T09:34:31Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3897/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3882", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3882/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3882/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3882/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3882", "id": 1106733885, "node_id": "PR_kwDOBlHMec4xMaU8", "number": 3882, "title": "Fix `to_hetero` with types containing whitespaces", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-01-18T10:30:46Z", "updated_at": "2022-01-18T10:39:51Z", "closed_at": "2022-01-18T10:39:51Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3882", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3882", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3882.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3882.patch", "merged_at": "2022-01-18T10:39:50Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3882/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3881", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3881/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3881/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3881/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3881", "id": 1106694298, "node_id": "I_kwDOBlHMec5B9tCa", "number": 3881, "title": "to_netwrokx attr", "user": {"login": "MohsenFazaeli", "id": 37497177, "node_id": "MDQ6VXNlcjM3NDk3MTc3", "avatar_url": "https://avatars.githubusercontent.com/u/37497177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MohsenFazaeli", "html_url": "https://github.com/MohsenFazaeli", "followers_url": "https://api.github.com/users/MohsenFazaeli/followers", "following_url": "https://api.github.com/users/MohsenFazaeli/following{/other_user}", "gists_url": "https://api.github.com/users/MohsenFazaeli/gists{/gist_id}", "starred_url": "https://api.github.com/users/MohsenFazaeli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MohsenFazaeli/subscriptions", "organizations_url": "https://api.github.com/users/MohsenFazaeli/orgs", "repos_url": "https://api.github.com/users/MohsenFazaeli/repos", "events_url": "https://api.github.com/users/MohsenFazaeli/events{/privacy}", "received_events_url": "https://api.github.com/users/MohsenFazaeli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-01-18T09:53:59Z", "updated_at": "2022-01-29T14:05:24Z", "closed_at": "2022-01-29T14:05:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi,\r\nI am new to package. I wrote following code and attributes are empty in networkx export. I it bug or I had some mistake in code.\r\n\r\n```\r\nimport os.path as osp\r\n\r\nimport torch\r\nfrom torch_geometric.datasets import Planetoid\r\nfrom torch_geometric.utils import to_networkx\r\nimport networkx as nx\r\n\r\ndef main():\r\n    dataset = 'Cora'\r\n    path = osp.join('data', 'Planetoid')\r\n    datasets = Planetoid(path, dataset)\r\n    data = datasets[0]\r\n\r\n    nxg = to_networkx(data, node_attrs=['x','y'], to_undirected=True, remove_self_loops=True)\r\n    nx.write_edgelist(nxg, \"data2/\"+dataset+\"/edges.txt\", data=True)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\n\n### Environment\n\n* PyG version: 1.6.3\r\n* PyTorch version:1.7.1\r\n* OS:windwos 10\r\n* Python version:3.7\r\n* pip\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3881/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3880", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3880/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3880/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3880/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3880", "id": 1106675261, "node_id": "PR_kwDOBlHMec4xMOAk", "number": 3880, "title": "Fix `is_edge_attr` in case `num_edges == 1`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-01-18T09:34:41Z", "updated_at": "2022-01-18T09:43:58Z", "closed_at": "2022-01-18T09:43:55Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3880", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3880", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3880.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3880.patch", "merged_at": "2022-01-18T09:43:55Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3880/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3879", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3879/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3879/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3879/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3879", "id": 1106666006, "node_id": "I_kwDOBlHMec5B9mIW", "number": 3879, "title": "ToUndirected() cannot explicitly specify edge attributes", "user": {"login": "jjzhou012", "id": 36147594, "node_id": "MDQ6VXNlcjM2MTQ3NTk0", "avatar_url": "https://avatars.githubusercontent.com/u/36147594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjzhou012", "html_url": "https://github.com/jjzhou012", "followers_url": "https://api.github.com/users/jjzhou012/followers", "following_url": "https://api.github.com/users/jjzhou012/following{/other_user}", "gists_url": "https://api.github.com/users/jjzhou012/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjzhou012/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjzhou012/subscriptions", "organizations_url": "https://api.github.com/users/jjzhou012/orgs", "repos_url": "https://api.github.com/users/jjzhou012/repos", "events_url": "https://api.github.com/users/jjzhou012/events{/privacy}", "received_events_url": "https://api.github.com/users/jjzhou012/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-01-18T09:25:47Z", "updated_at": "2022-01-18T09:43:55Z", "closed_at": "2022-01-18T09:43:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nFor a graph with one edge, the transform **ToUndirected()** extends its graph label y, which it seems to treat y as edge attribute. Because the dimension of y matches the number of edges, they're both equal to 1.\r\n\r\n```python\r\nfrom torch_geometric.data import Data\r\nfrom torch_geometric.utils import to_undirected\r\nfrom torch_geometric.transforms import ToUndirected\r\n\r\nx = torch.ones([2,3])\r\nedge_index = torch.tensor([[0], [1]])\r\nedge_attr = torch.tensor([[1,2,3]])\r\ny = torch.tensor([1])\r\n\r\nx2 = torch.ones([2,3])\r\nedge_index2 = torch.tensor([[0,0], [1,2]])\r\nedge_attr2 = torch.tensor([[1,2,3], [1,2,3]])\r\ny2 = torch.tensor([1])\r\n\r\ntrans = ToUndirected()\r\n\r\ndata = Data(x=x, edge_index=edge_index, y=y, edge_attr=edge_attr)\r\nprint('graph with 1 edge', data)\r\nnew_data = trans(data)\r\nprint('graph with 1 edge, to undirected', new_data)\r\n\r\nprint('\\n')\r\n\r\ndata2 = Data(x=x2, edge_index=edge_index2, y=y2, edge_attr=edge_attr2)\r\nprint('graph with 2 edge', data2)\r\nnew_data2 = trans(data2)\r\nprint('graph with 2 edge, to undirected', new_data2)\r\n```\r\nHere is the output:\r\n```\r\ngraph with 1 edge:  Data(x=[2, 3], edge_index=[2, 1], edge_attr=[1, 3], y=[1])\r\ngraph with 1 edge, to undirected:  Data(x=[2, 3], edge_index=[2, 2], edge_attr=[2, 3], y=[2])\r\n# y has been treated as another edge_attr\r\n\r\ngraph with 2 edge:  Data(x=[2, 3], edge_index=[2, 2], edge_attr=[2, 3], y=[1])\r\ngraph with 2 edge, to undirected:  Data(x=[2, 3], edge_index=[2, 4], edge_attr=[4, 3], y=[1])\r\n```\r\nIt is recommended to add edge attributes to the input of the ToUndirected() function to explicitly specify which fields in the graph are edge attributes\r\n\n\n### Environment\n\n* PyG version: 2.0.3\r\n* PyTorch version: 1.8.0\r\n* OS: Ubuntu 16.04.7 LTS\r\n* Python version: 3.7.11\r\n* CUDA/cuDNN version: 10.2\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda and pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3879/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3878", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3878/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3878/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3878/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3878", "id": 1106664562, "node_id": "I_kwDOBlHMec5B9lxy", "number": 3878, "title": "to_hetero() doesn't create input layer for node types containing a space in their name.", "user": {"login": "mughetto", "id": 26461562, "node_id": "MDQ6VXNlcjI2NDYxNTYy", "avatar_url": "https://avatars.githubusercontent.com/u/26461562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mughetto", "html_url": "https://github.com/mughetto", "followers_url": "https://api.github.com/users/mughetto/followers", "following_url": "https://api.github.com/users/mughetto/following{/other_user}", "gists_url": "https://api.github.com/users/mughetto/gists{/gist_id}", "starred_url": "https://api.github.com/users/mughetto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mughetto/subscriptions", "organizations_url": "https://api.github.com/users/mughetto/orgs", "repos_url": "https://api.github.com/users/mughetto/repos", "events_url": "https://api.github.com/users/mughetto/events{/privacy}", "received_events_url": "https://api.github.com/users/mughetto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-01-18T09:24:23Z", "updated_at": "2022-01-18T10:43:21Z", "closed_at": "2022-01-18T10:39:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\r\n\r\nHi,\r\n\r\nWhile trying to build my own HeteroData dataset using Hetionet I noticed that the model created by the transformer `torch_geometric.nn.to_hetero` doesn't create input layers if node types contain a space. For example the following minimal code reproduces the issue:\r\n\r\n```python\r\nimport torch\r\nfrom torch_geometric.data import HeteroData\r\n\r\nimport torch_geometric.transforms as T\r\nfrom torch_geometric.nn import SAGEConv, to_hetero\r\n\r\n\r\ndata = HeteroData()\r\ndata[\"RedHammer\"].num_nodes = 5\r\ndata[\"RedHammer\"].x = torch.zeros(5, 7) \r\ndata[\"GreenHammer\"].num_nodes = 3\r\ndata[\"GreenHammer\"].x = torch.zeros(3, 7)\r\ndata[\"Blue Hammer\"].num_nodes = 11\r\ndata[\"Blue Hammer\"].x = torch.zeros(3, 11)\r\n\r\nedge_type_index = torch.tensor(\r\n        [\r\n            [1,2,3],\r\n            [3,2,1],\r\n        ]\r\n    )\r\n\r\ndata[\"RedHammer\",\"isSoldWith\",\"GreenHammer\"].edge_index = edge_type_index\r\ndata[\"RedHammer\",\"isSoldWith\",\"Blue Hammer\"].edge_index = edge_type_index\r\n\r\ndata = T.ToUndirected()(data)\r\n\r\n#data = T.ToUndirected()(data)\r\n\r\nclass GNN(torch.nn.Module):\r\n    def __init__(self, hidden_channels, out_channels):\r\n        super().__init__()\r\n        self.conv1 = SAGEConv((-1, -1), hidden_channels)\r\n        self.conv2 = SAGEConv((-1, -1), out_channels)\r\n\r\n    def forward(self, x, edge_index):\r\n        x = self.conv1(x, edge_index).relu()\r\n        x = self.conv2(x, edge_index)\r\n        return x\r\n\r\n\r\nmodel = GNN(hidden_channels=2, out_channels=2)\r\nmodel = to_hetero(model, data.metadata(), aggr='sum')\r\n\r\nprint(model)\r\n```\r\n\r\nresults in:\r\n```\r\nraphModule(\r\n  (conv1): ModuleDict(\r\n    (RedHammer__isSoldWith__GreenHammer): SAGEConv((-1, -1), 2)\r\n    (RedHammer__isSoldWith__Blue Hammer): SAGEConv((-1, -1), 2)\r\n    (GreenHammer__rev_isSoldWith__RedHammer): SAGEConv((-1, -1), 2)\r\n    (Blue Hammer__rev_isSoldWith__RedHammer): SAGEConv((-1, -1), 2)\r\n  )\r\n  (conv2): ModuleDict(\r\n    (RedHammer__isSoldWith__GreenHammer): SAGEConv((-1, -1), 2)\r\n    (RedHammer__isSoldWith__Blue Hammer): SAGEConv((-1, -1), 2)\r\n    (GreenHammer__rev_isSoldWith__RedHammer): SAGEConv((-1, -1), 2)\r\n    (Blue Hammer__rev_isSoldWith__RedHammer): SAGEConv((-1, -1), 2)\r\n  )\r\n)\r\n\r\n\r\n\r\ndef forward(self, x, edge_index):\r\n    x__RedHammer = x.get('RedHammer')\r\n    x__GreenHammer = x.get('GreenHammer');  x = None\r\n    edge_index__RedHammer__isSoldWith__GreenHammer = edge_index.get(('RedHammer', 'isSoldWith', 'GreenHammer'))\r\n    edge_index__GreenHammer__rev_isSoldWith__RedHammer = edge_index.get(('GreenHammer', 'rev_isSoldWith', 'RedHammer'));  edge_index = None\r\n    conv1__GreenHammer = self.conv1.RedHammer__isSoldWith__GreenHammer((x__RedHammer, x__GreenHammer), edge_index__RedHammer__isSoldWith__GreenHammer)\r\n    conv1__RedHammer1 = self.conv1.GreenHammer__rev_isSoldWith__RedHammer((x__GreenHammer, x__RedHammer), edge_index__GreenHammer__rev_isSoldWith__RedHammer);  x__GreenHammer = None\r\n    conv1__RedHammer2 = getattr(self.conv1, \"Blue Hammer__rev_isSoldWith__RedHammer\")((None, x__RedHammer), (None, None));  x__RedHammer = None\r\n    conv1__RedHammer = torch.add(conv1__RedHammer1, conv1__RedHammer2);  conv1__RedHammer1 = conv1__RedHammer2 = None\r\n    relu__RedHammer = conv1__RedHammer.relu();  conv1__RedHammer = None\r\n    relu__GreenHammer = conv1__GreenHammer.relu();  conv1__GreenHammer = None\r\n    conv2__GreenHammer = self.conv2.RedHammer__isSoldWith__GreenHammer((relu__RedHammer, relu__GreenHammer), edge_index__RedHammer__isSoldWith__GreenHammer);  edge_index__RedHammer__isSoldWith__GreenHammer = None\r\n    conv2__RedHammer1 = self.conv2.GreenHammer__rev_isSoldWith__RedHammer((relu__GreenHammer, relu__RedHammer), edge_index__GreenHammer__rev_isSoldWith__RedHammer);  relu__GreenHammer = edge_index__GreenHammer__rev_isSoldWith__RedHammer = None\r\n    conv2__RedHammer2 = getattr(self.conv2, \"Blue Hammer__rev_isSoldWith__RedHammer\")((None, relu__RedHammer), (None, None));  relu__RedHammer = None\r\n    conv2__RedHammer = torch.add(conv2__RedHammer1, conv2__RedHammer2);  conv2__RedHammer1 = conv2__RedHammer2 = None\r\n    return {'RedHammer': conv2__RedHammer, 'GreenHammer': conv2__GreenHammer, 'Blue Hammer': None}\r\n```\r\n\r\nThe takeaway being that there is no x__Blue Hammer in the forward pass. \r\n\r\nI would have expected some sort of warning at run time or in the doc if this is an expected behavour, otherwise I suppose replacing ' ' with '_' could be a solution when generating the model?\r\n\r\nPlease let me know if I can be of any help in fixing this.\r\n\r\n### Environment\r\n\r\n* PyG version: 2.0.3\r\n* PyTorch version: 1.10.1\r\n* OS: CentOS Linux release 7.9.2009 (Core)\r\n* Python version: Python 3.9.7\r\n* CUDA/cuDNN version: CUDA 11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): `conda`\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3878/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3878/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3873", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3873/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3873/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3873/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3873", "id": 1106214114, "node_id": "I_kwDOBlHMec5B73zi", "number": 3873, "title": "to_networkx to_undirected option inconsistent with documentation", "user": {"login": "RemyLau", "id": 36778645, "node_id": "MDQ6VXNlcjM2Nzc4NjQ1", "avatar_url": "https://avatars.githubusercontent.com/u/36778645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RemyLau", "html_url": "https://github.com/RemyLau", "followers_url": "https://api.github.com/users/RemyLau/followers", "following_url": "https://api.github.com/users/RemyLau/following{/other_user}", "gists_url": "https://api.github.com/users/RemyLau/gists{/gist_id}", "starred_url": "https://api.github.com/users/RemyLau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RemyLau/subscriptions", "organizations_url": "https://api.github.com/users/RemyLau/orgs", "repos_url": "https://api.github.com/users/RemyLau/repos", "events_url": "https://api.github.com/users/RemyLau/events{/privacy}", "received_events_url": "https://api.github.com/users/RemyLau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2022-01-17T19:58:35Z", "updated_at": "2022-01-26T08:33:51Z", "closed_at": "2022-01-26T08:33:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nAccording to the documentation for [``to_networkx``](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.to_networkx), the ``to_undirected`` option preserves the upper triangle of the adjacency matrix and turn it into an undirected graph, something like the following\r\n\r\n![eqn](https://quicklatex.com/cache3/06/ql_77affd715d97f56e1b528dfa14eb9606_l3.png)\r\n\r\nBut actually, the implementation does the opposite, which preserves the lower triangle and ignores the upper triangle.\r\nThe easiest fix would be to rewrite line#95 to ``if to_undirected and v < u``.\r\n\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/ffb70bcf6147b8d5c5a00650e1d1f514771d8898/torch_geometric/utils/convert.py#L93-L104\r\n\r\nDespite this fix, the ``to_undirected`` option is a bit misleading in then sense that it is tempting to think it does what [``networkx.DiGraph.to_undirected``](https://networkx.org/documentation/stable/reference/classes/generated/networkx.DiGraph.to_undirected.html#networkx-digraph-to-undirected) does, i.e. if (u, v) in E, then add (v, u) in E if not already existed. My current work-around is the following:\r\n```python\r\nG = torch_geometric.utils.to_networkx(data, to_undirected=False, remove_self_loops=True).to_undirected()\r\n```\r\nWould it make sense to follow the ``to_undirected`` as networkx instead of only keeping track of either out (or in) edges?\n\n### Environment\n\n* PyG version: 2.0.2\r\n* PyTorch version: 1.10\r\n* OS: CentOS Linux\r\n* Python version: 3.9.7\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3873/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3861", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3861/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3861/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3861/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3861", "id": 1104825947, "node_id": "I_kwDOBlHMec5B2k5b", "number": 3861, "title": "Add additional attributes in Data", "user": {"login": "zhaoyu-li", "id": 38952251, "node_id": "MDQ6VXNlcjM4OTUyMjUx", "avatar_url": "https://avatars.githubusercontent.com/u/38952251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhaoyu-li", "html_url": "https://github.com/zhaoyu-li", "followers_url": "https://api.github.com/users/zhaoyu-li/followers", "following_url": "https://api.github.com/users/zhaoyu-li/following{/other_user}", "gists_url": "https://api.github.com/users/zhaoyu-li/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhaoyu-li/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhaoyu-li/subscriptions", "organizations_url": "https://api.github.com/users/zhaoyu-li/orgs", "repos_url": "https://api.github.com/users/zhaoyu-li/repos", "events_url": "https://api.github.com/users/zhaoyu-li/events{/privacy}", "received_events_url": "https://api.github.com/users/zhaoyu-li/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-01-15T19:28:36Z", "updated_at": "2022-01-19T02:10:36Z", "closed_at": "2022-01-19T02:10:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "### \ud83d\udc1b Describe the bug\n\nHi, there seems to be a bug when the attributes of Data can be `None`. It seems like when calling self.collate, pyg first calls the constructor function of PairData without any arguments and at that time, self.has_edges is `None`, which leads to the problem.\r\n\r\nIs there something wrong :)\r\n\r\n```python\r\nfrom torch_geometric.data import Data\r\nimport torch\r\n\r\nfrom torch_geometric.data import InMemoryDataset\r\nclass PairData(Data):\r\n    def __init__(self, edge_index_s=None, x_s=None, edge_index_t=None, x_t=None):\r\n        super().__init__()\r\n        self.edge_index_s = edge_index_s\r\n        self.x_s = x_s\r\n        self.edge_index_t = edge_index_t\r\n        self.x_t = x_t\r\n        if edge_index_s is not None:\r\n            self.has_edges = True\r\n        else:\r\n            self.has_edges = None # here, self.has_edges may be None, if it can not be None, there is no problem.\r\n        print(self.has_edges)\r\n    def __inc__(self, key, value, *args, **kwargs):\r\n        if key == 'edge_index_s':\r\n            return self.x_s.size(0)\r\n        if key == 'edge_index_t':\r\n            return self.x_t.size(0)\r\n        else:\r\n            return super().__inc__(key, value, *args, **kwargs)\r\n\r\nedge_index_s = torch.tensor([\r\n    [0, 0, 0, 0],\r\n    [1, 2, 3, 4],\r\n])\r\nx_s = torch.randn(5, 16)  # 5 nodes.\r\nedge_index_t = torch.tensor([\r\n    [0, 0, 0],\r\n    [1, 2, 3],\r\n])\r\nx_t = torch.randn(4, 16)  # 4 nodes.\r\n\r\ndata = PairData(edge_index_s, x_s, edge_index_t, x_t)\r\ndata_list = [data, data]\r\n\r\n\r\nclass SATDataset(InMemoryDataset):\r\n    def __init__(self, data_dir):\r\n        super().__init__(data_dir)\r\n        self.data, self.slices = torch.load(self.processed_paths[0])\r\n    \r\n    @property\r\n    def processed_file_names(self):\r\n        return ['d.pt']\r\n    \r\n    def process(self):\r\n        data, slices = self.collate(data_list)\r\n        torch.save((data, slices), self.processed_paths[0])\r\n\r\nd = SATDataset('.')\r\nprint(d[0])\r\n```\r\n\r\nThe error message is\r\n```\r\nTraceback (most recent call last):\r\n  File \"5.py\", line 54, in <module>\r\n    print(d[0])\r\n  File \"torch_geometric/data/dataset.py\", line 198, in __getitem__\r\n    data = self.get(self.indices()[idx])\r\n  File \"torch_geometric/data/in_memory_dataset.py\", line 96, in get\r\n    decrement=False,\r\n  File \"torch_geometric/data/separate.py\", line 20, in separate\r\n    data = cls().stores_as(batch)\r\n  File \"5.py\", line 16, in __init__\r\n    print(self.has_edges)\r\n  File torch_geometric/data/data.py\", line 346, in __getattr__\r\n    return getattr(self._store, key)\r\n  File \"torch_geometric/data/storage.py\", line 51, in __getattr__\r\n    f\"'{self.__class__.__name__}' object has no attribute '{key}'\")\r\nAttributeError: 'GlobalStorage' object has no attribute 'has_edges'\r\n```\n\n### Environment\n\n* PyG version: 2.0.2\r\n* PyTorch version: 1.10.0\r\n* OS: Ubuntu\r\n* Python version: 3.7.9\r\n* CUDA/cuDNN version: 10.2\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): `pip`\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3861/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3845", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3845/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3845/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3845/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3845", "id": 1101636614, "node_id": "I_kwDOBlHMec5BqaQG", "number": 3845, "title": "Distributed Batching example : AttributeError: 'NoneType' object has no attribute 'shape'", "user": {"login": "QuanticDisaster", "id": 58271711, "node_id": "MDQ6VXNlcjU4MjcxNzEx", "avatar_url": "https://avatars.githubusercontent.com/u/58271711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuanticDisaster", "html_url": "https://github.com/QuanticDisaster", "followers_url": "https://api.github.com/users/QuanticDisaster/followers", "following_url": "https://api.github.com/users/QuanticDisaster/following{/other_user}", "gists_url": "https://api.github.com/users/QuanticDisaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuanticDisaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuanticDisaster/subscriptions", "organizations_url": "https://api.github.com/users/QuanticDisaster/orgs", "repos_url": "https://api.github.com/users/QuanticDisaster/repos", "events_url": "https://api.github.com/users/QuanticDisaster/events{/privacy}", "received_events_url": "https://api.github.com/users/QuanticDisaster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-01-13T12:18:48Z", "updated_at": "2022-01-14T15:20:19Z", "closed_at": "2022-01-14T15:20:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nWhen using the distributed batching example, the following error appears : \r\n\r\n```python\r\nTraceback (most recent call last):\r\n\r\n  File \"/home/user/Downloads/trash.py\", line 152, in <module>\r\n    mp.spawn(run, args=args, nprocs=world_size, join=True)\r\n\r\n  File \"/home/user/anaconda3/envs/pt/lib/python3.7/site-packages/torch/multiprocessing/spawn.py\", line 230, in spawn\r\n    return start_processes(fn, args, nprocs, join, daemon, start_method='spawn')\r\n\r\n  File \"/home/user/anaconda3/envs/pt/lib/python3.7/site-packages/torch/multiprocessing/spawn.py\", line 188, in start_processes\r\n    while not context.join():\r\n\r\n  File \"/home/user/anaconda3/envs/pt/lib/python3.7/site-packages/torch/multiprocessing/spawn.py\", line 150, in join\r\n    raise ProcessRaisedException(msg, error_index, failed_process.pid)\r\n\r\nProcessRaisedException: \r\n\r\n-- Process 0 terminated with the following error:\r\nTraceback (most recent call last):\r\n  File \"/home/user/anaconda3/envs/pt/lib/python3.7/site-packages/torch/multiprocessing/spawn.py\", line 59, in _wrap\r\n    fn(i, *args)\r\n  File \"/home/user/Downloads/trash.py\", line 100, in run\r\n    logits = model(data.x, data.adj_t, data.batch)\r\n  File \"/home/user/anaconda3/envs/pt/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 1051, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"/home/user/anaconda3/envs/pt/lib/python3.7/site-packages/torch/nn/parallel/distributed.py\", line 799, in forward\r\n    output = self.module(*inputs[0], **kwargs[0])\r\n  File \"/home/user/anaconda3/envs/pt/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 1051, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"/home/user/Downloads/trash.py\", line 55, in forward\r\n    print(edge_attr.shape)\r\nAttributeError: 'NoneType' object has no attribute 'shape'\r\n```\r\n\r\n### To Reproduce\r\n\r\nRun the https://github.com/pyg-team/pytorch_geometric/blob/master/examples/multi_gpu/distributed_batching.py example\r\n\r\n### Expected behavior\r\n\r\nProcess should go smoothly\r\n\r\n### Environment\r\n\r\n* PyG version (`torch_geometric.__version__`): 2.0.2\r\n* PyTorch version: (`torch.__version__`): 1.9.0\r\n* OS (*e.g.*, Linux): Ubuntu LTS 20.04\r\n* Python version (*e.g.*, `3.9`): 3.7\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): 1 GPU used\r\n\r\n### Additional context\r\n\r\nProblem comes from line 52, where adj_t.coo() gives `(tensor([   0,    1,    1,  ..., 3418, 3418, 3419], device='cuda:0'), tensor([   1,    0,    2,  ..., 3417, 3419, 3418], device='cuda:0'), None)` so edge_attr gets assigned `None`\r\n\r\nadj_t representation : `SparseTensor(row=tensor([   0,    1,    1,  ..., 3418, 3418, 3419], device='cuda:0'),\r\n             col=tensor([   1,    0,    2,  ..., 3417, 3419, 3418], device='cuda:0'),\r\n             size=(3420, 3420), nnz=7326, density=0.06%)`", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3845/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3835", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3835/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3835/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3835/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3835", "id": 1099634295, "node_id": "I_kwDOBlHMec5BixZ3", "number": 3835, "title": "Segmentation fault when use NeighborSampler.", "user": {"login": "gebrahimi91", "id": 38082839, "node_id": "MDQ6VXNlcjM4MDgyODM5", "avatar_url": "https://avatars.githubusercontent.com/u/38082839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gebrahimi91", "html_url": "https://github.com/gebrahimi91", "followers_url": "https://api.github.com/users/gebrahimi91/followers", "following_url": "https://api.github.com/users/gebrahimi91/following{/other_user}", "gists_url": "https://api.github.com/users/gebrahimi91/gists{/gist_id}", "starred_url": "https://api.github.com/users/gebrahimi91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gebrahimi91/subscriptions", "organizations_url": "https://api.github.com/users/gebrahimi91/orgs", "repos_url": "https://api.github.com/users/gebrahimi91/repos", "events_url": "https://api.github.com/users/gebrahimi91/events{/privacy}", "received_events_url": "https://api.github.com/users/gebrahimi91/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-01-11T21:29:52Z", "updated_at": "2022-01-12T14:03:45Z", "closed_at": "2022-01-12T14:03:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of the bug -->\r\n\r\nI keep getting Segmentation fault when I use NeighborSampler.\r\n\r\nThread 1 \"python\" received signal SIGSEGV, Segmentation fault.\r\n0x00007ffec1257e5d in sample_adj_cpu(at::Tensor, at::Tensor, at::Tensor, long, bool) () from /opt/conda/lib/python3.8/site-packages/torch_sparse/_sample_cuda.so\r\n\r\n### To Reproduce\r\n\r\n<!-- A minimal example to reproduce the bug -->\r\n\r\n    import matplotlib.pyplot as plt\r\n    from torch_geometric.data import NeighborSampler\r\n    import torch\r\n    import pickle\r\n    class Trainer:\r\n    def __init__(self, batch_size, model, gpu_id, lr, lam = 0.1, num_neighbors = [-1, -1]):\r\n        file_to_read = open(\"samples_tr_small.pkl\", \"rb\")\r\n    \r\n        samples_tr = pickle.load(file_to_read)\r\n        self.batch_size = batch_size\r\n        self.model = model\r\n        self.lr = lr\r\n        self.num_neighbors = num_neighbors\r\n        if isinstance(gpu_id, list):\r\n            pass\r\n        else:\r\n            gpu_id = [gpu_id, gpu_id]\r\n        self.gpu_id = gpu_id\r\n        if self.gpu_id[0]>=0:\r\n            self.device = torch.device('cuda:0')\r\n        else:\r\n            self.device = torch.device('cpu:0')\r\n\r\n\r\n\r\n        self.train_loaders = []\r\n\r\n    \r\n        row,    col, value = samples_tr['adj_t'].coo()\r\n        print(row.max())\r\n        print(col.max())\r\n        for i in range(1):\r\n\r\n            self.train_loader = NeighborSampler(samples_tr['adj_t'], \r\n                                   sizes=self.num_neighbors, batch_size=self.batch_size, \r\n                                   shuffle=True, num_workers=0,\r\n                                   #num_nodes = 200000,\r\n                                   return_e_id = False)\r\n            self.train_loaders.append(self.train_loader)\r\n                \r\n\r\n            \r\n        self.x_train = samples_tr['all_x']\r\n        self.mode_train = samples_tr['modality']\r\n        self.labels_train = samples_tr['node_labels']\r\n        self.group_train = samples_tr['group']\r\n        self.num_samples_train = samples_tr['num_samples']\r\n\r\n        \r\n        \r\n    def train(self, epochs):\r\n        self.epoch_losses = []\r\n        self.epoch_accuracies =[]\r\n        self.val_losses = []\r\n        self.val_accuracies = []\r\n\r\n        \r\n        for epoch in range(epochs):\r\n            #self.model.train()\r\n            #for train_loader in self.train_loaders: ######\r\n            cnt = 0\r\n            for train_loader in self.train_loaders:\r\n\r\n                for batch_size, n_id, adjs in train_loader:\r\n                    print(cnt)\r\n                    cnt+=1\r\n                    continue\r\n        return 0\r\n    gpu_id = [0, 1]\r\n    if not torch.cuda.is_available():\r\n    gpu_id = -1\r\n    lr = 0.0001\r\n    lam = 0.1\r\n    batch_size = 2\r\n    num_neighbors = [3,3]\r\n    num_hops = len(num_neighbors)\r\n    model = None\r\n    t = Trainer(batch_size = batch_size, model =model , gpu_id=gpu_id, num_neighbors = num_neighbors, lam = lam, lr = lr)\r\n    a = t.train(1)\r\n\r\n\r\n### Expected behavior\r\n\r\nNo seg fault.\r\n\r\n### Environment\r\n\r\n* PyG version (`torch_geometric.__version__`): 2.0.3\r\n* PyTorch version: (`torch.__version__`): 1.8.1\r\n* OS (*e.g.*, Linux): Linux\r\n* Python version (*e.g.*, `3.9`):  3.8.8\r\n* CUDA/cuDNN version: 11.5\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n\r\n### Additional context\r\n\r\n<!-- Add any other context about the problem here -->\r\nThe pickle file can be downloaded [here](https://drive.google.com/file/d/1E_u4qXMTRS551rWBNTQd_b3lVK6GX5SZ/view?usp=sharing)", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3835/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3822", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3822/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3822/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3822/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3822", "id": 1097342100, "node_id": "I_kwDOBlHMec5BaByU", "number": 3822, "title": "Getting CUDA error on Tesla M40 but not Tesla V100", "user": {"login": "jasperhyp", "id": 52191793, "node_id": "MDQ6VXNlcjUyMTkxNzkz", "avatar_url": "https://avatars.githubusercontent.com/u/52191793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasperhyp", "html_url": "https://github.com/jasperhyp", "followers_url": "https://api.github.com/users/jasperhyp/followers", "following_url": "https://api.github.com/users/jasperhyp/following{/other_user}", "gists_url": "https://api.github.com/users/jasperhyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasperhyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasperhyp/subscriptions", "organizations_url": "https://api.github.com/users/jasperhyp/orgs", "repos_url": "https://api.github.com/users/jasperhyp/repos", "events_url": "https://api.github.com/users/jasperhyp/events{/privacy}", "received_events_url": "https://api.github.com/users/jasperhyp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-01-10T00:19:30Z", "updated_at": "2022-01-10T19:47:29Z", "closed_at": "2022-01-10T19:47:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of the bug -->\r\nHi!  I am using PyG with my school's HPC.  Because of resource allocation issues, I am not able to get the same GPU every time, but usually, I would get a Nvidia Tesla V100.  Today I got a Tesla M40, but then when running a program that worked well previously, I got this CUDA error `RuntimeError: CUDA error: no kernel image is available for execution on the device`.  I tried several times and this error persists.  I then managed to switch to a Quadro RTX 8000, and it works well.\r\n\r\nHowever, PyTorch forum says M40 basically covers what V100 supports, so it is a bit weird why this is happening with `torch_scatter`. \r\n\r\n### To Reproduce\r\n\r\nJust run my training code on M40, which worked well with V100 and RTX8000\r\n\r\n### Expected behavior\r\n\r\nSuccessfully train the model.\r\n\r\n### Environment\r\n\r\n* PyG version (`torch_geometric.__version__`): 2.0.2\r\n* PyTorch version: (`torch.__version__`): 1.8.1\r\n* OS (*e.g.*, Linux): Linux\r\n* Python version (*e.g.*, `3.9`): 3.8\r\n* CUDA/cuDNN version: 10.2\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): I forgot, maybe pip.\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): I forgot, but it should be the default version accompanied with PyG \r\n\r\n### Additional context\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"train.py\", line 314, in <module>\r\n    main()\r\n  File \"train.py\", line 283, in main\r\n    train(epoch, model, optimizer, train_batch_num, val_batch_num)\r\n  File \"train.py\", line 97, in train\r\n    p_x, c_x = model(p_x, c_x, p_paths_train, c_paths_train, p_data, c_data)\r\n  File \"/home/xxx/.conda/envs/my_env/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 889, in _call_impl\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/xxx/project_name/pipeline/repr_learning/model.py\", line 69, in forward\r\n    p_x, c_x = self.conv1_up(p_x, c_x, p_paths, c_paths, p_index, c_index)\r\n  File \"/home/xxx/.conda/envs/my_env/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 889, in _call_impl\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/xxx/project_name/pipeline/repr_learning/conv.py\", line 98, in forward\r\n    ppi_x[ct] = self._per_data_forward(x, paths[ct], self.node_gats)\r\n  File \"/home/xxx/project_name/pipeline/repr_learning/conv.py\", line 70, in _per_data_forward\r\n    out = [gat(x, path) for gat, path in zip(node_gats, paths) if path.shape[1] > 0]\r\n  File \"/home/xxx/project_name/pipeline/repr_learning/conv.py\", line 70, in <listcomp>\r\n    out = [gat(x, path) for gat, metapath in zip(node_gats, paths) if path.shape[1] > 0]\r\n  File \"/home/xxx/.conda/envs/my_env/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 889, in _call_impl\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/xxx/.conda/envs/my_env/lib/python3.8/site-packages/torch_geometric/nn/conv/gat_conv.py\", line 218, in forward\r\n    out = self.propagate(edge_index, x=x, alpha=alpha, edge_attr=edge_attr,\r\n  File \"/home/xxx/.conda/envs/my_env/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py\", line 309, in propagate\r\n    out = self.message(**msg_kwargs)\r\n  File \"/home/xxx/.conda/envs/my_env/lib/python3.8/site-packages/torch_geometric/nn/conv/gat_conv.py\", line 258, in message\r\n    alpha = softmax(alpha, index, ptr, size_i)\r\nRuntimeError: The following operation failed in the TorchScript interpreter.\r\nTraceback of TorchScript (most recent call last):\r\n  File \"/home/xxx/.conda/envs/my_env/lib/python3.8/site-packages/torch_scatter/scatter.py\", line 160, in softmax\r\n        return scatter_min(src, index, dim, out, dim_size)[0]\r\n    elif reduce == 'max':\r\n        return scatter_max(src, index, dim, out, dim_size)[0]\r\n               ~~~~~~~~~~~ <--- HERE\r\n    else:\r\n        raise ValueError\r\n  File \"/home/xxx/.conda/envs/my_env/lib/python3.8/site-packages/torch_scatter/scatter.py\", line 72, in scatter_max\r\n        out: Optional[torch.Tensor] = None,\r\n        dim_size: Optional[int] = None) -> Tuple[torch.Tensor, torch.Tensor]:\r\n    return torch.ops.torch_scatter.scatter_max(src, index, dim, out, dim_size)\r\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE\r\nRuntimeError: CUDA error: no kernel image is available for execution on the device\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3822/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3806", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3806/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3806/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3806/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3806", "id": 1093972510, "node_id": "I_kwDOBlHMec5BNLIe", "number": 3806, "title": "Transform of Data loader", "user": {"login": "yunhak0", "id": 40286691, "node_id": "MDQ6VXNlcjQwMjg2Njkx", "avatar_url": "https://avatars.githubusercontent.com/u/40286691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yunhak0", "html_url": "https://github.com/yunhak0", "followers_url": "https://api.github.com/users/yunhak0/followers", "following_url": "https://api.github.com/users/yunhak0/following{/other_user}", "gists_url": "https://api.github.com/users/yunhak0/gists{/gist_id}", "starred_url": "https://api.github.com/users/yunhak0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yunhak0/subscriptions", "organizations_url": "https://api.github.com/users/yunhak0/orgs", "repos_url": "https://api.github.com/users/yunhak0/repos", "events_url": "https://api.github.com/users/yunhak0/events{/privacy}", "received_events_url": "https://api.github.com/users/yunhak0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-01-05T04:34:08Z", "updated_at": "2022-01-11T01:41:29Z", "closed_at": "2022-01-05T16:26:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of the bug -->\r\nI found 3 bugs related to `torch_geometric.datasets` and `torch_geometric.transforms`.\r\n\r\n1. Discrepancy in attributes of `Data` object.\r\n\r\nWhen I apply a transform (e.g. `T.ToSparseTensor()`, `T.NormalizeFeatures()`, `dataset.data` doesn't apply the transform but the transform is only applied in `dataset[0]`\r\n![image](https://user-images.githubusercontent.com/40286691/148160869-aa8557fc-864b-49fe-a0e2-69264cc06efc.png)\r\n\r\n2. Change the value of `dataset.data.x`, after compiling dataset[0] when we use `T.NormalizeFeatures()`.\r\n\r\nAlthough `dataset.data` is not applied the transform, after compiling dataset[0], the value is changed same as dataset[0].\r\nHowever, `dataset.data` doesn't have `adj_t` after compiling dataset[0].adj_t when the transform is `T.ToSparseTensor()`.\r\n![image](https://user-images.githubusercontent.com/40286691/148160116-fdce74b3-b4ab-4470-ae9a-a3583bd90968.png)\r\n\r\n3. WikiCS `T.NormalizeFeatures()` seems not work correctly.\r\n\r\nThe features of WikiCS is not normalized correctly, if applied `T.NormalizeFeatures()`.\r\n![image](https://user-images.githubusercontent.com/40286691/148160348-887581e7-a407-4410-80ec-d1de8bebbc32.png)\r\n\r\n\r\n### To Reproduce\r\n\r\n<!-- A minimal example to reproduce the bug -->\r\n\r\nPlease refer to the above screenshot.\r\n\r\n### Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen -->\r\n1. Alignment of all attributes in the same data object (`dataset.data` and `dataset[0]`).\r\n2. The value shouldn't be changed. It should be correct from the first time.\r\n3. `T.NormalizeFeatures()` should work correctly.\r\n\r\n\r\n### Environment\r\n\r\n* PyG version (`torch_geometric.__version__`): 2.0.2\r\n* PyTorch version: (`torch.__version__`): 1.10.0\r\n* OS (*e.g.*, Linux): Linux\r\n* Python version (*e.g.*, `3.9`): 3.8\r\n* CUDA/cuDNN version: 11.1\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n\r\n### Additional context\r\n\r\n<!-- Add any other context about the problem here -->\r\n\r\nThank you so much for your effort and passion in this area!", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3806/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3805", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3805/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3805/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3805/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3805", "id": 1093733971, "node_id": "I_kwDOBlHMec5BMQ5T", "number": 3805, "title": "TOSCA dataset index based 1", "user": {"login": "JRowbottomGit", "id": 65853409, "node_id": "MDQ6VXNlcjY1ODUzNDA5", "avatar_url": "https://avatars.githubusercontent.com/u/65853409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JRowbottomGit", "html_url": "https://github.com/JRowbottomGit", "followers_url": "https://api.github.com/users/JRowbottomGit/followers", "following_url": "https://api.github.com/users/JRowbottomGit/following{/other_user}", "gists_url": "https://api.github.com/users/JRowbottomGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/JRowbottomGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JRowbottomGit/subscriptions", "organizations_url": "https://api.github.com/users/JRowbottomGit/orgs", "repos_url": "https://api.github.com/users/JRowbottomGit/repos", "events_url": "https://api.github.com/users/JRowbottomGit/events{/privacy}", "received_events_url": "https://api.github.com/users/JRowbottomGit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-01-04T20:36:56Z", "updated_at": "2022-01-05T16:06:46Z", "closed_at": "2022-01-05T16:06:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of the bug -->\r\nTOSCA high-resolution (http://tosca.cs.technion.ac.il/book/resources_data.html) is a mesh dataset of \" 1-based list of triangular faces\", originally processed in matlab. Needs to be rebased to 0.\r\n\r\n### To Reproduce\r\n\r\n<!-- A minimal example to reproduce the bug -->\r\nfrom torch_geometric.datasets import TOSCA\r\ndataset = TOSCA(\"../data/tosca\")\r\n\r\ndrop a line break in here\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/df182adb85988fb99bf89ea1776e0e16898497d2/torch_geometric/datasets/tosca.py#L90\r\n\r\ntry:\r\n(face).min()\r\n(face).max()\r\n(face - 1).min()\r\n(face - 1).max()\r\n\r\n### Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen -->\r\nNeeds to be 0-based\r\n\r\n### Environment\r\n\r\n* PyG version (`torch_geometric.__version__`): 2.0.3\r\n* PyTorch version: (`torch.__version__`): 1.10.1\r\n* OS (*e.g.*, Linux): WSL\r\n* Python version (*e.g.*, `3.9`): 3.8\r\n* CUDA/cuDNN version: cpu\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n\r\n### Additional context\r\n\r\n<!-- Add any other context about the problem here -->\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3805/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3802", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3802/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3802/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3802/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3802", "id": 1093321737, "node_id": "I_kwDOBlHMec5BKsQJ", "number": 3802, "title": "Raising \"list index out of range\" error in torch_geometric/data/collate.py", "user": {"login": "McDifference", "id": 8638070, "node_id": "MDQ6VXNlcjg2MzgwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/8638070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/McDifference", "html_url": "https://github.com/McDifference", "followers_url": "https://api.github.com/users/McDifference/followers", "following_url": "https://api.github.com/users/McDifference/following{/other_user}", "gists_url": "https://api.github.com/users/McDifference/gists{/gist_id}", "starred_url": "https://api.github.com/users/McDifference/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/McDifference/subscriptions", "organizations_url": "https://api.github.com/users/McDifference/orgs", "repos_url": "https://api.github.com/users/McDifference/repos", "events_url": "https://api.github.com/users/McDifference/events{/privacy}", "received_events_url": "https://api.github.com/users/McDifference/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-01-04T12:47:58Z", "updated_at": "2022-03-18T09:10:59Z", "closed_at": "2022-03-18T09:10:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of the bug -->\r\nWhen I used torch_geometric.data.Data as data structure to build an InMemoryDataset, the following error raised in the collate function.\r\n```\r\nFile \".../torch_geometric/data/collate.py\", line 184, in _collate\r\n    and isinstance(elem[0], (Tensor, SparseTensor))):\r\nIndexError: list index out of range\r\n```\r\n\r\nThis error also ocurred in \r\n```\r\nFile \".../torch_geometric/data/separate.py\", line 92, in _separate\r\n    and isinstance(value[0][0], (Tensor, SparseTensor))):\r\nIndexError: list index out of range\r\n```\r\n\r\n### To Reproduce\r\n\r\n<!-- A minimal example to reproduce the bug -->\r\n```\r\nimport torch\r\nfrom torch_geometric.data import InMemoryDataset, download_url\r\nfrom torch_geometric.data import Data\r\n\r\nclass MyOwnDataset(InMemoryDataset):\r\n    def __init__(self, root, transform=None, pre_transform=None):\r\n        super().__init__(root, transform, pre_transform)\r\n        self.data, self.slices = torch.load(self.processed_paths[0])\r\n\r\n    @property\r\n    def raw_file_names(self):\r\n        return ['some_file_1', 'some_file_2', ...]\r\n\r\n    @property\r\n    def processed_file_names(self):\r\n        return ['data.pt']\r\n\r\n    def download(self):\r\n        # Download to `self.raw_dir`.\r\n        download_url(url, self.raw_dir)\r\n\r\n    def process(self):\r\n        # Read data into huge `Data` list.\r\n        data_list = []\r\n        graph_input = Data(\r\n            x=torch.from_numpy(x).float(),\r\n            y=torch.from_numpy(y).float(),\r\n            cluster=torch.from_numpy(cluster).short(),\r\n            edge_index=torch.from_numpy(edge_index).long(),\r\n            identifier=torch.from_numpy(identifier).float(),\r\n            traj_len=torch.tensor([traj_lens[ind]]).int(),\r\n            valid_len=torch.tensor([valid_lens[ind]]).int(),\r\n            time_step_len=torch.tensor([num_valid_len_max]).int(),\r\n            candidate_len_max=torch.tensor([num_candidate_max]).int(),\r\n            candidate_mask=[],\r\n            candidate=torch.from_numpy(raw_data['tar_candts'].values[0]).float(),\r\n            candidate_gt=torch.from_numpy(raw_data['gt_candts'].values[0]).bool(),\r\n            offset_gt=torch.from_numpy(raw_data['gt_tar_offset'].values[0]).float(),\r\n            target_gt=torch.from_numpy(raw_data['gt_preds'].values[0][0][-1, :]).float(),\r\n        )\r\n        data_list.append(graph_input)\r\n        data, slices = self.collate(data_list)\r\n        torch.save((data, slices), self.processed_paths[0])\r\n```\r\n\r\n### Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen -->\r\n\r\nNo error raised.\r\n\r\n### Environment\r\n\r\n* PyG version: torch_geometric.2.0.4\r\n* PyTorch version: torch.1.10.1\r\n* OS: Ubuntu16.04\r\n* Python version: 3.9\r\n* CUDA/cuDNN version: cuda11.3\r\n* How you installed PyTorch and PyG: pip\r\n* Any other relevant information: torch-scatter.2.0.9\r\n\r\n### Additional context\r\n\r\n<!-- Add any other context about the problem here -->\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3802/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3802/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3793", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3793/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3793/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3793/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3793", "id": 1092531652, "node_id": "I_kwDOBlHMec5BHrXE", "number": 3793, "title": "Error: KeyError: 'graph_encoder.layers.0.encoder.lin_src.weight' ", "user": {"login": "dxlong2000", "id": 54766384, "node_id": "MDQ6VXNlcjU0NzY2Mzg0", "avatar_url": "https://avatars.githubusercontent.com/u/54766384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dxlong2000", "html_url": "https://github.com/dxlong2000", "followers_url": "https://api.github.com/users/dxlong2000/followers", "following_url": "https://api.github.com/users/dxlong2000/following{/other_user}", "gists_url": "https://api.github.com/users/dxlong2000/gists{/gist_id}", "starred_url": "https://api.github.com/users/dxlong2000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dxlong2000/subscriptions", "organizations_url": "https://api.github.com/users/dxlong2000/orgs", "repos_url": "https://api.github.com/users/dxlong2000/repos", "events_url": "https://api.github.com/users/dxlong2000/events{/privacy}", "received_events_url": "https://api.github.com/users/dxlong2000/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-01-03T13:55:05Z", "updated_at": "2022-01-19T09:03:04Z", "closed_at": "2022-01-19T09:03:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear authors, \r\nThank you for your great work on Torch geometric. When I tried to run the below command, I got this error. Hopefully I would received some advices from you.\r\n\r\n## \ud83d\udc1b Bug\r\n<!-- A clear and concise description of the bug -->\r\nI got the bug ```KeyError: 'graph_encoder.layers.0.encoder.lin_src.weight'``` when trying to load ```checkpoint_utils.load_model_ensemble``` from ```fairseq```.\r\n### To Reproduce\r\n\r\n<!-- A minimal example to reproduce the bug -->\r\n```\r\nfrom fairseq import options, tasks, checkpoint_utils, progress_bar, utils\r\nparser = options.get_generation_parser()\r\nargs = options.parse_args_and_arch(parser)\r\ntask = tasks.setup_task(args)\r\nmodels, _ = checkpoint_utils.load_model_ensemble([\"models/generation_models/tplgen_template_generation/model.pt\"], task=task)\r\n```\r\nwhere the models folder it is from ```https://drive.google.com/drive/folders/1EpfamTiOosKvy_s9Bm_tW1NdtAzKpkY7``` and I alreadly used the model so I think it works fine.\r\n\r\n### Expected behavior\r\n```\r\nmodels, _ = checkpoint_utils.load_model_ensemble([args.path], task=task)\r\n  File \"/content/gdrive/.shortcut-targets-by-id/1euwk1Zyt7Sa5sxm4_AVBZ9m4ECrtcIo7/A*/open-ended_question_ontology/fairseq/fairseq/checkpoint_utils.py\", line 368, in load_model_ensemble\r\n    state,\r\n  File \"/content/gdrive/.shortcut-targets-by-id/1euwk1Zyt7Sa5sxm4_AVBZ9m4ECrtcIo7/A*/open-ended_question_ontology/fairseq/fairseq/checkpoint_utils.py\", line 471, in load_model_ensemble_and_task\r\n    state[\"model\"], strict=strict, model_cfg=cfg.model\r\n  File \"/content/gdrive/.shortcut-targets-by-id/1euwk1Zyt7Sa5sxm4_AVBZ9m4ECrtcIo7/A*/open-ended_question_ontology/fairseq/fairseq/models/fairseq_model.py\", line 128, in load_state_dict\r\n    return super().load_state_dict(new_state_dict, strict)\r\n  File \"/usr/local/lib/python3.7/dist-packages/torch/nn/modules/module.py\", line 1468, in load_state_dict\r\n    load(self)\r\n  File \"/usr/local/lib/python3.7/dist-packages/torch/nn/modules/module.py\", line 1466, in load\r\n    load(child, prefix + name + '.')\r\n  File \"/usr/local/lib/python3.7/dist-packages/torch/nn/modules/module.py\", line 1466, in load\r\n    load(child, prefix + name + '.')\r\n  File \"/usr/local/lib/python3.7/dist-packages/torch/nn/modules/module.py\", line 1466, in load\r\n    load(child, prefix + name + '.')\r\n  [Previous line repeated 2 more times]\r\n  File \"/usr/local/lib/python3.7/dist-packages/torch/nn/modules/module.py\", line 1463, in load\r\n    state_dict, prefix, local_metadata, True, missing_keys, unexpected_keys, error_msgs)\r\n  File \"/usr/local/lib/python3.7/dist-packages/torch/nn/modules/module.py\", line 1372, in _load_from_state_dict\r\n    hook(state_dict, prefix, local_metadata, strict, missing_keys, unexpected_keys, error_msgs)\r\n  File \"/usr/local/lib/python3.7/dist-packages/torch_geometric/nn/dense/linear.py\", line 131, in _lazy_load_hook\r\n    weight = state_dict[prefix + 'weight']\r\nKeyError: 'graph_encoder.layers.0.encoder.lin_src.weight'\r\n```\r\n<!-- A clear and concise description of what you expected to happen -->\r\n\r\n### Environment\r\n\r\n* PyG version (`torch_geometric.__version__`): 2.0.3\r\n* PyTorch version: (`torch.__version__`): 1.10.0\r\n* OS (*e.g.*, Linux): Colab, Yes\r\n* Python version (*e.g.*, `3.9`): 3.7.12\r\n* CUDA/cuDNN version: 11.1\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): I install by pip from the instruction here: https://pytorch.org/\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): I install torch_geometric:\r\n```\r\n!pip install torch-scatter -f https://data.pyg.org/whl/torch-1.10.0+cu111.html\r\n!pip install torch-sparse -f https://data.pyg.org/whl/torch-1.10.0+cu111.html\r\n!pip install torch-geometric \r\n```\r\n\r\n### Additional context\r\n\r\n<!-- Add any other context about the problem here -->\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3793/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3792", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3792/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3792/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3792/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3792", "id": 1092281294, "node_id": "PR_kwDOBlHMec4wdJ2W", "number": 3792, "title": "Fix CI: `numpy` issue", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-01-03T07:20:23Z", "updated_at": "2022-01-04T07:50:46Z", "closed_at": "2022-01-04T07:50:46Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3792", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3792", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3792.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3792.patch", "merged_at": "2022-01-04T07:50:46Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3792/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3786", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3786/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3786/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3786/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3786", "id": 1092004156, "node_id": "I_kwDOBlHMec5BFqk8", "number": 3786, "title": "AttributeError: 'NoneType' object has no attribute 'view'", "user": {"login": "YueeXiang", "id": 52670069, "node_id": "MDQ6VXNlcjUyNjcwMDY5", "avatar_url": "https://avatars.githubusercontent.com/u/52670069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YueeXiang", "html_url": "https://github.com/YueeXiang", "followers_url": "https://api.github.com/users/YueeXiang/followers", "following_url": "https://api.github.com/users/YueeXiang/following{/other_user}", "gists_url": "https://api.github.com/users/YueeXiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/YueeXiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YueeXiang/subscriptions", "organizations_url": "https://api.github.com/users/YueeXiang/orgs", "repos_url": "https://api.github.com/users/YueeXiang/repos", "events_url": "https://api.github.com/users/YueeXiang/events{/privacy}", "received_events_url": "https://api.github.com/users/YueeXiang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-01-02T11:50:16Z", "updated_at": "2022-01-06T07:15:35Z", "closed_at": "2022-01-05T15:33:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know why I can't use message_passing for my code. The bug and my environment are shown as follows:\r\n\r\n## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of the bug -->\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/miniconda3/envs/pytorch/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 3444, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-2-f79c60be7b62>\", line 1, in <module>\r\n    runfile('/home/test.py', wdir='/home/SG')\r\n  File \"/home/.pycharm_helpers/pydev/_pydev_bundle/pydev_umd.py\", line 197, in runfile\r\n    pydev_imports.execfile(filename, global_vars, local_vars)  # execute the script\r\n  File \"/home/.pycharm_helpers/pydev/_pydev_imps/_pydev_execfile.py\", line 18, in execfile\r\n    exec(compile(contents+\"\\n\", file, 'exec'), glob, loc)\r\n  File \"/home/test.py\", line 35, in <module>\r\n    model_ft = train_model(model=model1,\r\n  File \"/home/learning.py\", line 49, in train_model\r\n    pred_nodes, pred_edges = model(x=history.x,\r\n  File \"/home/miniconda3/envs/pytorch/lib/python3.9/site-packages/torch/nn/modules/module.py\", line 1102, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"/home/models.py\", line 114, in forward\r\n    pred_nodes = sgb(x=x, weight=coeff[:, 1], batch=batch, num=num, num_layer=self.gwb_layers, prior=y)\r\n  File \"/home/optimal_transport.py\", line 53, in sgwb\r\n    tmp += weight[k] * mp(x_k, edge_idx)\r\n  File \"/home/miniconda3/envs/pytorch/lib/python3.9/site-packages/torch/nn/modules/module.py\", line 1102, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"/home/miniconda3/envs/pytorch/lib/python3.9/site-packages/torch_geometric/nn/conv/appnp.py\", line 110, in forward\r\n    x = self.propagate(edge_index, x=x, edge_weight=edge_weight,\r\n  File \"/home/miniconda3/envs/pytorch/lib/python3.9/site-packages/torch_geometric/nn/conv/message_passing.py\", line 309, in propagate\r\n    out = self.message(**msg_kwargs)\r\n  File \"/home/miniconda3/envs/pytorch/lib/python3.9/site-packages/torch_geometric/nn/conv/appnp.py\", line 118, in message\r\n    return edge_weight.view(-1, 1) * x_j\r\nAttributeError: 'NoneType' object has no attribute 'view'\r\n```\r\n\r\n### Environment\r\n\r\n* PyG version (`torch_geometric.__version__`): 2.0.2\r\n* PyTorch version: (`torch.__version__`): 1.10.0\r\n* OS : linux\r\n* Python version: 3.9\r\n* CUDA/cuDNN version: 11.4\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3786/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3785", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3785/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3785/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3785/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3785", "id": 1091937512, "node_id": "I_kwDOBlHMec5BFaTo", "number": 3785, "title": "Problem in Data.is_directed()", "user": {"login": "jeffreyhusc", "id": 62165470, "node_id": "MDQ6VXNlcjYyMTY1NDcw", "avatar_url": "https://avatars.githubusercontent.com/u/62165470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffreyhusc", "html_url": "https://github.com/jeffreyhusc", "followers_url": "https://api.github.com/users/jeffreyhusc/followers", "following_url": "https://api.github.com/users/jeffreyhusc/following{/other_user}", "gists_url": "https://api.github.com/users/jeffreyhusc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffreyhusc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffreyhusc/subscriptions", "organizations_url": "https://api.github.com/users/jeffreyhusc/orgs", "repos_url": "https://api.github.com/users/jeffreyhusc/repos", "events_url": "https://api.github.com/users/jeffreyhusc/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffreyhusc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-01-02T02:39:57Z", "updated_at": "2022-01-05T15:13:40Z", "closed_at": "2022-01-05T15:13:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nimport torch\r\nfrom torch_geometric.data import Data\r\n\r\nedge_index = torch.tensor([[4, 1, 1, 2],\r\n                           [1, 4, 2, 1]], dtype=torch.long)\r\nx = torch.tensor([[-1], [0], [1]], dtype=torch.float)\r\n#When I changed the label ID 4, to 5, the code runs normally.\r\n\r\ndata = Data(x=x, edge_index=edge_index)\r\n\r\nprint(data.is_directed())\r\n\r\nCauses error:\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n/var/folders/85/03cpw2k96qd8vx7hkznsjmkm0000gs/T/ipykernel_98002/4216900986.py in <module>\r\n      4 print(data.has_isolated_nodes())\r\n      5 print(data.has_self_loops())\r\n----> 6 print(data.is_directed())\r\n\r\n~/.local/lib/python3.9/site-packages/torch_geometric/data/data.py in is_directed(self)\r\n    185     def is_directed(self) -> bool:\r\n    186         r\"\"\"Returns :obj:`True` if graph edges are directed.\"\"\"\r\n--> 187         return not self.is_undirected()\r\n    188 \r\n    189     def clone(self):\r\n\r\n~/.local/lib/python3.9/site-packages/torch_geometric/data/data.py in is_undirected(self)\r\n    181     def is_undirected(self) -> bool:\r\n    182         r\"\"\"Returns :obj:`True` if graph edges are undirected.\"\"\"\r\n--> 183         return all([store.is_undirected() for store in self.edge_stores])\r\n    184 \r\n    185     def is_directed(self) -> bool:\r\n\r\n~/.local/lib/python3.9/site-packages/torch_geometric/data/data.py in <listcomp>(.0)\r\n    181     def is_undirected(self) -> bool:\r\n    182         r\"\"\"Returns :obj:`True` if graph edges are undirected.\"\"\"\r\n--> 183         return all([store.is_undirected() for store in self.edge_stores])\r\n    184 \r\n    185     def is_directed(self) -> bool:\r\n\r\n~/.local/lib/python3.9/site-packages/torch_geometric/data/storage.py in is_undirected(self)\r\n    421         edge_index = self.edge_index\r\n    422         edge_attr = self.edge_attr if 'edge_attr' in self else None\r\n--> 423         return is_undirected(edge_index, edge_attr, num_nodes=self.size(0))\r\n    424 \r\n    425     def is_directed(self) -> bool:\r\n\r\n~/.local/lib/python3.9/site-packages/torch_geometric/utils/undirected.py in is_undirected(edge_index, edge_attr, num_nodes)\r\n     42     print(f\"******\",edge_index1)\r\n     43     print(f\"******\",edge_index2)\r\n---> 44     return (bool(torch.all(edge_index1[0] == edge_index2[1]))\r\n     45             and bool(torch.all(edge_index1[1] == edge_index2[0])) and all([\r\n     46                 torch.all(e == e_T) for e, e_T in zip(edge_attr1, edge_attr2)\r\n\r\nRuntimeError: The size of tensor a (3) must match the size of tensor b (2) at non-singleton dimension 0\r\n\r\nPossible Reason: The problem could possibly be caused by the coalesce function.\r\n\r\n    edge_index1, edge_attr1 = coalesce(edge_index, edge_attr,\r\n                                       num_nodes=num_nodes, sort_by_row=True)\r\n    edge_index2, edge_attr2 = coalesce(edge_index1, edge_attr1, num_nodes=num_nodes, sort_by_row=False)\r\n \r\n### To Reproduce\r\n\r\n<!-- A minimal example to reproduce the bug -->\r\n\r\n### Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen -->\r\n\r\n### Environment\r\n\r\n* PyG version (`torch_geometric.__version__`):\r\n* PyTorch version: (`torch.__version__`):\r\n* OS (*e.g.*, Linux):\r\n* Python version (*e.g.*, `3.9`):\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n\r\n### Additional context\r\n\r\n<!-- Add any other context about the problem here -->\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3785/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3772", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3772/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3772/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3772/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3772", "id": 1090341831, "node_id": "I_kwDOBlHMec5A_UvH", "number": 3772, "title": "Nonetype error during forward pass of hetrogenous model ", "user": {"login": "sidhantls", "id": 19412334, "node_id": "MDQ6VXNlcjE5NDEyMzM0", "avatar_url": "https://avatars.githubusercontent.com/u/19412334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sidhantls", "html_url": "https://github.com/sidhantls", "followers_url": "https://api.github.com/users/sidhantls/followers", "following_url": "https://api.github.com/users/sidhantls/following{/other_user}", "gists_url": "https://api.github.com/users/sidhantls/gists{/gist_id}", "starred_url": "https://api.github.com/users/sidhantls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sidhantls/subscriptions", "organizations_url": "https://api.github.com/users/sidhantls/orgs", "repos_url": "https://api.github.com/users/sidhantls/repos", "events_url": "https://api.github.com/users/sidhantls/events{/privacy}", "received_events_url": "https://api.github.com/users/sidhantls/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-12-29T08:07:38Z", "updated_at": "2022-01-17T17:01:55Z", "closed_at": "2022-01-17T17:01:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\nCreated a directed Hetrogenous graph datadataset and hetrogenous GAT model. There is an error occuring during the forward pass when the graph dataset is modified a certain way. \r\n\r\nWhen each node type in the hetrogenous graph has an edge going to and from it, there are no errors. But when some of the node types only have edges going from it, but no edge going to it, I get the below error during the forward pas\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/miniconda3/lib/python3.8/site-packages/torch/fx/graph_module.py\", line 505, in wrapped_call\r\n    return cls_call(self, *args, **kwargs)\r\n  File \"/home/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 1051, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"<eval_with_key_5>\", line 29, in forward\r\n    add__d = None + lin1__d;  lin1__d = None\r\nTypeError: unsupported operand type(s) for +: 'NoneType' and 'Tensor'\r\n\r\nCall using an FX-traced Module, line 29 of the traced Module's generated forward function:\r\n    add__p = conv1__p + lin1__p;  conv1__p = lin1__p = None\r\n    add__d = None + lin1__d;  lin1__d = None\r\n\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE\r\n    add__s = None + lin1__s;  lin1__s = None\r\n\r\n    relu__c = add__c.relu();  add__c = None\r\n\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-27-67b9136ef67a> in <module>\r\n      1 model.train()\r\n----> 2 out = model(graph_data.x_dict, graph_data.edge_index_dict)\r\n\r\n~/miniconda3/lib/python3.8/site-packages/torch/fx/graph_module.py in wrapped_call(self, *args, **kwargs)\r\n    511                     print(generate_error_message(topmost_framesummary),\r\n    512                           file=sys.stderr)\r\n--> 513                 raise e.with_traceback(None)\r\n    514 \r\n    515         cls.__call__ = wrapped_call\r\n\r\nTypeError: unsupported operand type(s) for +: 'NoneType' and 'Tensor'\r\n\r\n```\r\n\r\nI'm suspected this has something to do with a particular key not being found in the dataset according to #1103, although this had something to do with the dataloader. I'm not sure why it wouldn't work though, when there are some nodes in the graph that have only edges going from it and none going to it. \r\n\r\nThe graph dataset where the forward pass does work looks something like this: \r\n```\r\nHeteroData(\r\n  a={ x=[327724, 70] },\r\n  b={ x=[103, 70] },\r\n  q={ x=[7, 70] },\r\n  r={ x=[42912, 70] },\r\n  (a, same_transition, a)={\r\n    edge_index=[2, 77],\r\n    edge_attr=[77, 2]\r\n  },\r\n  (a, diff_transition, b)={\r\n    edge_index=[2, 88],\r\n    edge_attr=[88, 2]\r\n  },\r\n  (b, same_transition, b)={\r\n    edge_index=[2, 99],\r\n    edge_attr=[99, 2]\r\n  },\r\n  (b, diff_transition, a)={\r\n    edge_index=[2, 66],\r\n    edge_attr=[66, 2]\r\n  },\r\n  (q, diff_transition, a)={\r\n    edge_index=[2, 5],\r\n    edge_attr=[5, 2]\r\n  },\r\n  (a, diff_transition, q)={\r\n    edge_index=[2, 5],\r\n    edge_attr=[5, 2]\r\n  },\r\n  (r, diff_transition, a)={\r\n    edge_index=[2, 10],\r\n    edge_attr=[10, 2]\r\n  },\r\n  (a, diff_transition, r)={\r\n    edge_index=[2, 10],\r\n    edge_attr=[10, 2]\r\n  }\r\n```\r\n\r\nThe graph dataset where the error does occur is this. here,there are only edges from q to a and r to a but not a to q or a to r, like the previous dataset had. This is what seems to cause the error.\r\n```\r\nHeteroData(\r\n  a={ x=[327724, 70] },\r\n  b={ x=[103, 70] },\r\n  q={ x=[7, 70] },\r\n  r={ x=[42912, 70] },\r\n  (a, same_transition, a)={\r\n    edge_index=[2, 77],\r\n    edge_attr=[77, 2]\r\n  },\r\n  (a, diff_transition, b)={\r\n    edge_index=[2, 88],\r\n    edge_attr=[88, 2]\r\n  },\r\n  (b, same_transition, b)={\r\n    edge_index=[2, 99],\r\n    edge_attr=[99, 2]\r\n  },\r\n  (b, diff_transition, a)={\r\n    edge_index=[2, 66],\r\n    edge_attr=[66, 2]\r\n  },\r\n  (q, diff_transition, a)={\r\n    edge_index=[2, 5],\r\n    edge_attr=[5, 2]\r\n  },\r\n  (r, diff_transition, a)={\r\n    edge_index=[2, 10],\r\n    edge_attr=[10, 2]\r\n  }\r\n)\r\n```\r\n\r\nGraph model used: \r\n```\r\nclass GAT(torch.nn.Module):\r\n    def __init__(self, hidden_channels, out_channels):\r\n        super().__init__()\r\n        self.conv1 = GATConv((-1, -1), hidden_channels, add_self_loops=False)\r\n        self.lin1 = Linear(-1, hidden_channels)\r\n        self.conv2 = GATConv((-1, -1), out_channels, add_self_loops=False)\r\n        self.lin2 = Linear(-1, out_channels)\r\n\r\n    def forward(self, x, edge_index):\r\n        x = self.conv1(x, edge_index) + self.lin1(x)\r\n        x = x.relu()\r\n        x = self.conv2(x, edge_index) + self.lin2(x)\r\n        return x\r\nmodel = GAT(hidden_channels=100, out_channels=100)\r\nmodel = to_hetero(model, graph_data.metadata(), aggr='sum')\r\ngraph_data.metadata()\r\n```\r\n\r\nAny reason as to why\r\n### To Reproduce\r\nUnable to at the moment because graph as custom created. And work on creating a similar dataset if required to be reproducible \r\n\r\n### Expected behavior\r\nForward pass occurs without error in both cases\r\n\r\n### Environment\r\n\r\n* PyG version (`torch_geometric.__version__`):2.02\r\n* PyTorch version: (`torch.__version__`):1.9.0+cu102\r\n* OS (*e.g.*, Linux):Linux\r\n* Python version (*e.g.*, `3.9`):3.8\r\n* CUDA/cuDNN version:10.1\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):conda\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3772/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3762", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3762/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3762/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3762/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3762", "id": 1088521921, "node_id": "I_kwDOBlHMec5A4YbB", "number": 3762, "title": "indexSelectLargeIndex error in edge_index", "user": {"login": "sajastu", "id": 10419055, "node_id": "MDQ6VXNlcjEwNDE5MDU1", "avatar_url": "https://avatars.githubusercontent.com/u/10419055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sajastu", "html_url": "https://github.com/sajastu", "followers_url": "https://api.github.com/users/sajastu/followers", "following_url": "https://api.github.com/users/sajastu/following{/other_user}", "gists_url": "https://api.github.com/users/sajastu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sajastu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sajastu/subscriptions", "organizations_url": "https://api.github.com/users/sajastu/orgs", "repos_url": "https://api.github.com/users/sajastu/repos", "events_url": "https://api.github.com/users/sajastu/events{/privacy}", "received_events_url": "https://api.github.com/users/sajastu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-12-25T00:33:01Z", "updated_at": "2021-12-25T20:34:39Z", "closed_at": "2021-12-25T20:34:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n`indexSelectLargeIndex` error is raised even when indices are correctly formatted. \r\n\r\n### To Reproduce\r\n\r\nI'm using the GCN example which is put on the Readme of the repo. My `x` is a tensor of shape `[1491, 768]`, edge_index is in shape of `[2, num_edges]` (num_edge = 2316), and edge_weight is a tensor of shape `[2316]`. I pass the `edge_weight`  tensor as I'm constructing the `edge_index` from the adjacency matrix. The graph is a directed one i.e., `(i, j)` being connected doesn't guarantee `(j, i)` being connected.  Here is the full script:\r\n\r\n```\r\nclass GraphEncoder():\r\n...\r\n\r\nself.conv1 = GCNConv(768, 1024, cached=True )\r\nself.conv2 = GCNConv(1024, 768, cached=True )\r\n\r\n...\r\n\r\nedge_index = (adj_t > 0).nonzero().t()\r\nrow, col = edge_index\r\nedge_weight = adj_t[row, col]\r\n\r\n# ensure tensors are in the proper type...\r\nedge_weight = edge_weight.type(torch.FloatTensor)\r\nclss_graph = clss_graph.type(torch.LongTensor)\r\n\r\n# ensure tensors are in cuda\r\nedge_index = edge_index.cuda()\r\nedge_weight = edge_weight.cuda()\r\n\r\nx = x.squeeze(0) # [node_size, feat]\r\n\r\nx = self.conv1(x, edge_index).relu()\r\nx = self.conv2(x, edge_index)\r\n```\r\n\r\nI checked to make sure if `edge_index.max()` falls within the `x.size(0)` (i.e., it should be less than `x.size(0)`) and it turns out to be holding this condition: \r\n\r\n```\r\n$ edge_index.max()\r\ntensor(1459, device='cuda:0')\r\n\r\n$ x.size(0)\r\n1461\r\n\r\n```\r\n\r\nI'm trying to figure out what the possible problem is here, but have been unfortunate to find the reason. But I'm getting this error: \r\n\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> /pytorch/aten/src/ATen/native/cuda/Indexing.cu:702: indexSelectLargeIndex: block: [191,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\r\n> Traceback (most recent call last):\r\n>   File \"train.py\", line 183, in <module>\r\n>     train_ext(args, device_id, intro_cls=args.intro_cls)\r\n>   File \"/home/sajad/packages/sum/GraphTransSum/src/train_extractive.py\", line 331, in train_ext\r\n>     train_single_ext(args, device_id)\r\n>   File \"/home/sajad/packages/sum/GraphTransSum/src/train_extractive.py\", line 387, in train_single_ext\r\n>     trainer.train(train_iter_fct, args.train_steps, valid_iter_fct=val_iter_fct, wandb=run_wandb)\r\n>   File \"/home/sajad/packages/sum/GraphTransSum/src/models/trainer_ext.py\", line 189, in train\r\n>     self._gradient_accumulation(\r\n>   File \"/home/sajad/packages/sum/GraphTransSum/src/models/trainer_ext.py\", line 634, in _gradient_accumulation\r\n>     sent_scores, mask = self.model(src, clss, mask, mask_cls, segs, id, graph)\r\n>   File \"/home/sajad/anaconda3/envs/graphsum/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 1051, in _call_impl\r\n>     return forward_call(*input, **kwargs)\r\n>   File \"/home/sajad/packages/sum/GraphTransSum/src/models/graphSum_builder.py\", line 180, in forward\r\n>     sent_scores = self.graph_encoder(top_vec, clss, mask_cls, mask_src, src, id, graph=graph)\r\n>   File \"/home/sajad/anaconda3/envs/graphsum/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 1051, in _call_impl\r\n>     return forward_call(*input, **kwargs)\r\n>   File \"/home/sajad/packages/sum/GraphTransSum/src/models/encoder.py\", line 360, in forward\r\n>     x = self.conv1(x, edge_index).relu()\r\n> RuntimeError: CUDA error: device-side assert triggered\r\n> CUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.\r\n> For debugging consider passing CUDA_LAUNCH_BLOCKING=1.\r\n\r\n\r\nIf that helps following is the content of my edge_index (for the sake of simplicity, I'm showing 400 elements):\r\n\r\n```\r\ntensor([[   1,    2,    3,    4,    5,    6,    6,    6,    6,    6,    6,    6,\r\n            6,    6,    6,    6,    6,    6,    7,    8,    9,   10,   11,   11,\r\n           11,   11,   11,   11,   11,   11,   11,   11,   12,   13,   13,   13,\r\n           13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,\r\n           13,   13,   14,   14,   14,   14,   14,   14,   14,   14,   14,   15,\r\n           16,   17,   18,   19,   19,   19,   19,   19,   19,   19,   20,   21,\r\n           22,   23,   24,   25,   26,   27,   28,   29,   30,   31,   32,   33,\r\n           34,   35,   36,   38,   39,   39,   39,   39,   39,   39,   39,   39,\r\n           39,   40,   40,   41,   41,   41,   41,   41,   41,   42,   43,   44,\r\n           44,   44,   44,   44,   44,   44,   44,   44,   44,   44,   44,   44,\r\n           44,   44,   44,   44,   45,   46,   47,   48,   49,   50,   51,   52,\r\n           52,   52,   52,   52,   52,   52,   52,   52,   52,   52,   52,   52,\r\n           52,   52,   53,   54,   54,   54,   54,   54,   54,   54,   54,   54,\r\n           54,   54,   55,   56,   57,   58,   58,   58,   58,   58,   58,   58,\r\n           58,   59,   59,   60,   61,   62,   62,   62,   62,   62,   62,   62,\r\n           62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   63,   64,\r\n           65,   65,   65,   65,   65,   65,   65,   65,  ..., 1275, 1275, 1276,\r\n         1276, 1276, 1276, 1277, 1278, 1279, 1280, 1281, 1281, 1281, 1281, 1282,\r\n         1283, 1284, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,\r\n         1294, 1295, 1296, 1297, 1298, 1299, 1299, 1300, 1301, 1302, 1303, 1304,\r\n         1305, 1306, 1307, 1308, 1310, 1311, 1312, 1312, 1312, 1313, 1314, 1315,\r\n         1316, 1317, 1317, 1317, 1317, 1317, 1318, 1319, 1321, 1322, 1322, 1323,\r\n         1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336,\r\n         1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1344, 1345, 1346, 1347,\r\n         1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360,\r\n         1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,\r\n         1373, 1374, 1375, 1376, 1376, 1376, 1377, 1378, 1379, 1380, 1381, 1382,\r\n         1383, 1384, 1385, 1386, 1387, 1388, 1389, 1389, 1389, 1390, 1392, 1393,\r\n         1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1404, 1405, 1406,\r\n         1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,\r\n         1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,\r\n         1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,\r\n         1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,\r\n         1455, 1456, 1457, 1458, 1459],\r\n        [   0,    0,    0,    0,    0,    0,   73,  272,  339,  370,  406,  546,\r\n          594,  611,  675,  717,  762,  769,    0,    0,    0,    0,    0,   77,\r\n          302,  412,  421,  442,  450,  465,  554, 1316,    0,    0,   65,  107,\r\n          134,  167,  173,  184,  216,  234,  242,  258,  274,  356,  419,  447,\r\n          524,  558,    0,   58,  185,  235,  416,  453,  798, 1051, 1417,    0,\r\n            0,    0,    0,    0,   41,  128,  199,  210,  240,  249,    0,    0,\r\n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,\r\n            0,    0,    0,   37,   37,   93,  269,  298,  326,  363,  607,  644,\r\n          736,   37,  637,   37,  128,  199,  210,  240,  249,   37,   37,   37,\r\n          311,  437,  443,  614,  792,  815,  861,  909,  914, 1189, 1268, 1317,\r\n         1376, 1389, 1412, 1437,   37,   37,   37,   37,   37,   37,   37,   37,\r\n          221,  277,  512,  639,  819,  866,  887,  901,  996, 1276, 1281, 1312,\r\n         1344, 1373,   37,   37,  109,  332,  372,  598,  617,  720, 1262, 1284,\r\n         1299, 1411,   37,   37,   37,   37,  185,  235,  416,  453,  798, 1051,\r\n         1417,   37,  414,   37,   37,   37,  311,  437,  443,  614,  792,  815,\r\n          861,  909,  914, 1189, 1268, 1317, 1376, 1389, 1412, 1437,   37,   37,\r\n           37,  107,  134,  167,  173,  184,  216,  234,  ..., 1270, 1311, 1270,\r\n         1312, 1344, 1373, 1270, 1270, 1270, 1270, 1270, 1312, 1344, 1373, 1270,\r\n         1270, 1270, 1411, 1270, 1270, 1270, 1270, 1270, 1270, 1270, 1270, 1270,\r\n         1270, 1270, 1270, 1270, 1270, 1270, 1411, 1270, 1270, 1270, 1270, 1270,\r\n         1270, 1270, 1270, 1270, 1309, 1309, 1309, 1344, 1373, 1309, 1309, 1309,\r\n         1309, 1309, 1376, 1389, 1412, 1437, 1309, 1309, 1320, 1320, 1348, 1320,\r\n         1320, 1320, 1320, 1320, 1320, 1320, 1320, 1331, 1331, 1331, 1331, 1331,\r\n         1331, 1331, 1331, 1331, 1331, 1331, 1331, 1331, 1373, 1331, 1331, 1331,\r\n         1331, 1331, 1331, 1331, 1331, 1331, 1354, 1354, 1354, 1354, 1354, 1354,\r\n         1354, 1354, 1354, 1354, 1354, 1354, 1354, 1354, 1354, 1354, 1354, 1354,\r\n         1354, 1354, 1354, 1354, 1412, 1437, 1354, 1354, 1354, 1354, 1354, 1354,\r\n         1354, 1354, 1354, 1354, 1354, 1354, 1354, 1412, 1437, 1354, 1391, 1391,\r\n         1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1403, 1403, 1403,\r\n         1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403,\r\n         1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403,\r\n         1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403,\r\n         1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403, 1403,\r\n         1403, 1403, 1403, 1403, 1403]], device='cuda:0')\r\n```\r\n\r\n\r\n\r\n### Environment\r\n\r\n* PyG version (`torch_geometric.__version__`):  2.0.3\r\n* PyTorch version: (`torch.__version__`): 1.9.0\r\n* OS (*e.g.*, Linux): Ubuntu\r\n* Python version (*e.g.*, `3.9`): 3.8\r\n* CUDA/cuDNN version: 11\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): installed PyG from installation guideline, so yes I have installed all packages denoted in there. \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3762/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3740", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3740/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3740/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3740/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3740", "id": 1085682685, "node_id": "I_kwDOBlHMec5AtjP9", "number": 3740, "title": "Failed to convert TransformerConv to TorchScript", "user": {"login": "morgan-bc", "id": 15273348, "node_id": "MDQ6VXNlcjE1MjczMzQ4", "avatar_url": "https://avatars.githubusercontent.com/u/15273348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/morgan-bc", "html_url": "https://github.com/morgan-bc", "followers_url": "https://api.github.com/users/morgan-bc/followers", "following_url": "https://api.github.com/users/morgan-bc/following{/other_user}", "gists_url": "https://api.github.com/users/morgan-bc/gists{/gist_id}", "starred_url": "https://api.github.com/users/morgan-bc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/morgan-bc/subscriptions", "organizations_url": "https://api.github.com/users/morgan-bc/orgs", "repos_url": "https://api.github.com/users/morgan-bc/repos", "events_url": "https://api.github.com/users/morgan-bc/events{/privacy}", "received_events_url": "https://api.github.com/users/morgan-bc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-12-21T10:33:16Z", "updated_at": "2021-12-22T07:06:08Z", "closed_at": "2021-12-22T07:06:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of the bug -->\r\n\r\n### To Reproduce\r\nTo convert `TransformerConv` to TorchScript as follows\r\n\r\n```python\r\n  from torch_geometric.nn import TransformerConv, GATConv\r\n\r\n  conv = TransformerConv(4, 16, heads=4, edge_dim=3).jittable()\r\n  conv.eval()\r\n\r\n  sconv = torch.jit.script(conv)\r\n  torch.jit.save(sconv, 'output/conv.tjs')\r\n\r\n```\r\n\r\n<!-- A minimal example to reproduce the bug -->\r\n\r\n### Expected behavior\r\n\r\n```\r\nRuntimeError:\r\nTried to set nonexistent attribute: _alpha. Did you forget to initialize it in __init__()?:\r\n  File \"D:\\Software\\anaconda3\\lib\\site-packages\\torch_geometric\\nn\\conv\\transformer_conv.py\", line 245\r\n        alpha = (query * key).sum(dim=-1) / math.sqrt(self.out_channels)\r\n        alpha = softmax(alpha, index, ptr, size_i)\r\n        self._alpha = alpha\r\n        ~~~~~~~~~~~~~~~~~~~ <--- HERE\r\n        alpha = F.dropout(alpha, p=self.dropout, training=self.training)\r\n\r\n```\r\n\r\nThe bug is very simple to fix. We only need to add one line of code in  the `__init__()` function of  `TransformerConv`  \r\n\r\n```python\r\n\r\n        self.in_channels = in_channels\r\n        self.out_channels = out_channels\r\n        self.heads = heads\r\n        self.beta = beta and root_weight\r\n        self.root_weight = root_weight\r\n        self.concat = concat\r\n        self.dropout = dropout\r\n        self.edge_dim = edge_dim\r\n        self._alpha = None  # add self._alpha \r\n\r\n``` \r\n\r\n### Environment\r\n\r\n* PyG version :  2.02\r\n* PyTorch version:  1.8.2\r\n* OS (*e.g.*, Linux): Win10\r\n* Python version : 3.7 \r\n* CUDA/cuDNN version: 11.1\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3740/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3723", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3723/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3723/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3723/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3723", "id": 1083945256, "node_id": "I_kwDOBlHMec5Am7Eo", "number": 3723, "title": "`nvrtc: error` when using `GATConv`.", "user": {"login": "RenzeLou", "id": 59914581, "node_id": "MDQ6VXNlcjU5OTE0NTgx", "avatar_url": "https://avatars.githubusercontent.com/u/59914581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RenzeLou", "html_url": "https://github.com/RenzeLou", "followers_url": "https://api.github.com/users/RenzeLou/followers", "following_url": "https://api.github.com/users/RenzeLou/following{/other_user}", "gists_url": "https://api.github.com/users/RenzeLou/gists{/gist_id}", "starred_url": "https://api.github.com/users/RenzeLou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RenzeLou/subscriptions", "organizations_url": "https://api.github.com/users/RenzeLou/orgs", "repos_url": "https://api.github.com/users/RenzeLou/repos", "events_url": "https://api.github.com/users/RenzeLou/events{/privacy}", "received_events_url": "https://api.github.com/users/RenzeLou/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-12-18T21:03:21Z", "updated_at": "2021-12-23T18:36:28Z", "closed_at": "2021-12-23T18:36:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n### Environment\r\n\r\n* PyG version : 2.0.2\r\n* PyTorch version: 1.8.0+cu111\r\n* OS (*e.g.*, Linux): Linux (Ubuntu 18.04LTS)\r\n* Python version (*e.g.*, `3.9`): 3.8.0\r\n* CUDA/cuDNN version: 11.4 / 8.2.4\r\n* How you installed PyTorch and PyG : pip \r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): torch_scatter-2.0.7; torch_sparse-0.6.9; torch_spline_conv-1.2.1; torch_cluster-1.5.9\r\n\r\n### Additional context\r\nDear authors,\r\n\r\nRecently, I tried to use  \u201cGraph Attention Networks\u201d with PyG, namely the `GATConv`. However, there is an unexpected error when I try to run it on GPU:\r\n\r\n```bash\r\nException has occurred: RuntimeError\r\nnvrtc: error: failed to open libnvrtc-builtins.so.11.1.\r\n  Make sure that libnvrtc-builtins.so.11.1 is installed correctly.\r\nnvrtc compilation failed: \r\n\r\n#define NAN __int_as_float(0x7fffffff)\r\n#define POS_INFINITY __int_as_float(0x7f800000)\r\n#define NEG_INFINITY __int_as_float(0xff800000)\r\n\r\n\r\ntemplate<typename T>\r\n__device__ T maximum(T a, T b) {\r\n  return isnan(a) ? a : (a > b ? a : b);\r\n}\r\n\r\ntemplate<typename T>\r\n__device__ T minimum(T a, T b) {\r\n  return isnan(a) ? a : (a < b ? a : b);\r\n}\r\n\r\nextern \"C\" __global__\r\nvoid fused_sub_exp(float* t0, float* t1, float* aten_exp) {\r\n{\r\n  if (512 * blockIdx.x + threadIdx.x<16 ? 1 : 0) {\r\n    float v = __ldg(t0 + 512 * blockIdx.x + threadIdx.x);\r\n    float v_1 = __ldg(t1 + 512 * blockIdx.x + threadIdx.x);\r\n    aten_exp[512 * blockIdx.x + threadIdx.x] = expf(v - v_1);\r\n  }\r\n}\r\n}\r\n  File \"/media/ps/data/lourenze/ECD/betav0.1/HCTC/models/dialogue_gcn.py\", line 113, in forward\r\n    out_2 = self.conv2(out_1,edge_index)  ## [2*batch_size+batch_cause_num, 600]\r\n  File \"/media/ps/data/lourenze/ECD/betav0.1/HCTC/models/dialogue_gcn.py\", line 386, in forward\r\n    word_output = self.graph_network(target_node,cause_node,emotion_node,word_node,word_mask,target_idx, cause_idx)[0]  ## [batch_cause_num, 512, 600]\r\n  File \"/media/ps/data/lourenze/ECD/betav0.1/HCTC/train_GCN.py\", line 147, in main\r\n    loss,_,_,_ = model(*batch_input)\r\n  File \"/media/ps/data/lourenze/ECD/betav0.1/HCTC/train_GCN.py\", line 259, in <module>\r\n    main()\r\n````\r\n\r\nThough I understand this message denotes the incompatible of my `libnvrtc-builtins.so` (11.4.152), I am pretty confused ... no such error when I use any other class (e.g., `GraphConv`, `RGCNConv`). \r\n<!-- Add any other context about the problem here -->\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3723/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3718", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3718/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3718/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3718/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3718", "id": 1083066574, "node_id": "I_kwDOBlHMec5AjkjO", "number": 3718, "title": "mlp.py missing in installation ", "user": {"login": "alexliniger", "id": 4851551, "node_id": "MDQ6VXNlcjQ4NTE1NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4851551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexliniger", "html_url": "https://github.com/alexliniger", "followers_url": "https://api.github.com/users/alexliniger/followers", "following_url": "https://api.github.com/users/alexliniger/following{/other_user}", "gists_url": "https://api.github.com/users/alexliniger/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexliniger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexliniger/subscriptions", "organizations_url": "https://api.github.com/users/alexliniger/orgs", "repos_url": "https://api.github.com/users/alexliniger/repos", "events_url": "https://api.github.com/users/alexliniger/events{/privacy}", "received_events_url": "https://api.github.com/users/alexliniger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-12-17T09:42:51Z", "updated_at": "2021-12-20T07:57:30Z", "closed_at": "2021-12-20T07:57:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nInstalling PyG with both conda and pip resulted in the mlp.py file missing in \"site-packages/torch_geometric/nn/models\"\r\nAdding the file mlp.py from the github to the folder and adding it to the __init__.py solved the issue\r\n\r\n### To Reproduce\r\n\r\n### Expected behavior\r\n\r\n### Environment\r\n\r\n* PyG version (`torch_geometric.__version__`): 2.0.2\r\n* PyTorch version: (`torch.__version__`): 1.10.0\r\n* OS (*e.g.*, Linux): Ubuntu 20.04\r\n* Python version (*e.g.*, `3.9`): 3.9\r\n* CUDA/cuDNN version: 11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n\r\n### Additional context\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3718/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3716", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3716/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3716/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3716/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3716", "id": 1082892788, "node_id": "I_kwDOBlHMec5Ai6H0", "number": 3716, "title": "ImportError: cannot import name 'HANConv' from 'torch_geometric.nn'", "user": {"login": "Gori-LV", "id": 7886474, "node_id": "MDQ6VXNlcjc4ODY0NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7886474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gori-LV", "html_url": "https://github.com/Gori-LV", "followers_url": "https://api.github.com/users/Gori-LV/followers", "following_url": "https://api.github.com/users/Gori-LV/following{/other_user}", "gists_url": "https://api.github.com/users/Gori-LV/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gori-LV/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gori-LV/subscriptions", "organizations_url": "https://api.github.com/users/Gori-LV/orgs", "repos_url": "https://api.github.com/users/Gori-LV/repos", "events_url": "https://api.github.com/users/Gori-LV/events{/privacy}", "received_events_url": "https://api.github.com/users/Gori-LV/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-12-17T05:08:25Z", "updated_at": "2021-12-19T05:06:29Z", "closed_at": "2021-12-19T05:06:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nHi, I am trying to run the [example code for HAN](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/hetero/han_imdb.py), I tried other imports, including another heterogeneous conv, all worked fine, but failed when import HANConv.\r\n\r\n```python\r\n>>> import torch_geometric\r\n>>> import torch_geometric.nn\r\n>>> from torch_geometric.nn import HGTConv\r\n>>> from torch_geometric.nn import HANConv\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nImportError: cannot import name 'HANConv' from 'torch_geometric.nn' (/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/torch_geometric/nn/__init__.py)\r\n```\r\n\r\n### Environment\r\n* PyG version: 2.0.2\r\n* PyTorch version: 1.8.0\r\n* OS: MacOS\r\n* Python version: 3.8\r\n* How you installed PyTorch and PyG: pip3\r\n* Any other relevant information:\r\n&nbsp; torch-cluster                     1.5.9\r\n&nbsp; torch-scatter                     2.0.9\r\n&nbsp; torch-sparse                      0.6.12\r\n&nbsp; torch-spline-conv                 1.2.1\r\n\r\nThanks a lot for your help :)\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3716/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3710", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3710/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3710/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3710/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3710", "id": 1081866415, "node_id": "I_kwDOBlHMec5Ae_iv", "number": 3710, "title": "AttributeError: module 'torch' has no attribute '_assert'", "user": {"login": "sejongpyo", "id": 68941421, "node_id": "MDQ6VXNlcjY4OTQxNDIx", "avatar_url": "https://avatars.githubusercontent.com/u/68941421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sejongpyo", "html_url": "https://github.com/sejongpyo", "followers_url": "https://api.github.com/users/sejongpyo/followers", "following_url": "https://api.github.com/users/sejongpyo/following{/other_user}", "gists_url": "https://api.github.com/users/sejongpyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/sejongpyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sejongpyo/subscriptions", "organizations_url": "https://api.github.com/users/sejongpyo/orgs", "repos_url": "https://api.github.com/users/sejongpyo/repos", "events_url": "https://api.github.com/users/sejongpyo/events{/privacy}", "received_events_url": "https://api.github.com/users/sejongpyo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-12-16T07:38:37Z", "updated_at": "2022-07-12T13:24:56Z", "closed_at": "2021-12-17T21:37:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nHi, i keep having a problem even if i followed this issue  https://github.com/pyg-team/pytorch_geometric/issues/3231#issue-1006736099.\r\n```\r\n File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/torch_geometric/nn/__init__.py\", line 5, in <module>\r\n    from .to_hetero_transformer import to_hetero\r\n  File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/torch_geometric/nn/to_hetero_transformer.py\", line 11, in <module>\r\n    from torch_geometric.nn.fx import Transformer\r\n  File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/torch_geometric/nn/fx.py\", line 11, in <module>\r\n    from torch.fx import GraphModule, Graph, Node\r\n  File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/torch/fx/__init__.py\", line 84, in <module>\r\n    from .graph_module import GraphModule\r\n  File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/torch/fx/graph_module.py\", line 8, in <module>\r\n    from .graph import Graph, _is_from_torch, _custom_builtins, PythonCode\r\n  File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/torch/fx/graph.py\", line 1, in <module>\r\n    from .node import Node, Argument, Target, map_arg, _type_repr, _get_qualified_name\r\n  File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/torch/fx/node.py\", line 26, in <module>\r\n    _side_effectful_functions: Set[Callable] = {torch._assert}\r\nAttributeError: module 'torch' has no attribute '_assert'\r\n```\r\nI have reinstalled pytorch and torch-geometric from the master.\r\nThis is the AttributeError when i try to import torch.fx\r\n```\r\n>>> import torch\r\n>>> torch.__version__\r\n'1.7.1'\r\n>>> import torch.fx\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/torch/fx/__init__.py\", line 84, in <module>\r\n    from .graph_module import GraphModule\r\n  File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/torch/fx/graph_module.py\", line 8, in <module>\r\n    from .graph import Graph, _is_from_torch, _custom_builtins, PythonCode\r\n  File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/torch/fx/graph.py\", line 1, in <module>\r\n    from .node import Node, Argument, Target, map_arg, _type_repr, _get_qualified_name\r\n  File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/torch/fx/node.py\", line 26, in <module>\r\n    _side_effectful_functions: Set[Callable] = {torch._assert}\r\nAttributeError: module 'torch' has no attribute '_assert'\r\n```\r\n\r\n### Environment\r\n\r\n* PyG version : 2.0.2\r\n* PyTorch version: 1.7.1 (installed by conda install pytorch==1.7.1 torchvision==0.8.2 torchaudio==0.7.2 cudatoolkit=10.1 -c pytorch)\r\n* OS :ubuntu 16.04\r\n* Python version : 3.6\r\n* CUDA/cuDNN version: 10.1\r\n* How you installed PyTorch and PyG : pip\r\n* torch-scatter: 2.0.7\r\n* torch-sparse: 0.6.9\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3710/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3709", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3709/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3709/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3709/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3709", "id": 1081800840, "node_id": "I_kwDOBlHMec5AeviI", "number": 3709, "title": "RuntimeError: Expected all tensors to be on the same device in Google Colab", "user": {"login": "lmy86263", "id": 10420963, "node_id": "MDQ6VXNlcjEwNDIwOTYz", "avatar_url": "https://avatars.githubusercontent.com/u/10420963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lmy86263", "html_url": "https://github.com/lmy86263", "followers_url": "https://api.github.com/users/lmy86263/followers", "following_url": "https://api.github.com/users/lmy86263/following{/other_user}", "gists_url": "https://api.github.com/users/lmy86263/gists{/gist_id}", "starred_url": "https://api.github.com/users/lmy86263/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lmy86263/subscriptions", "organizations_url": "https://api.github.com/users/lmy86263/orgs", "repos_url": "https://api.github.com/users/lmy86263/repos", "events_url": "https://api.github.com/users/lmy86263/events{/privacy}", "received_events_url": "https://api.github.com/users/lmy86263/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-12-16T05:57:03Z", "updated_at": "2021-12-16T07:29:07Z", "closed_at": "2021-12-16T06:28:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of the bug -->\r\n\r\n### To Reproduce\r\n\r\nExample `link_pred.py` runs with errors in Google Colab.\r\n\r\n> Traceback (most recent call last):\r\n>   File \"tutorials/link_pred.py\", line 82, in <module>\r\n>     train_data, val_data, test_data = dataset[0]\r\n>   File \"/usr/local/lib/python3.7/dist-packages/torch_geometric/data/dataset.py\", line 199, in __getitem__\r\n>     data = data if self.transform is None else self.transform(data)\r\n>   File \"/usr/local/lib/python3.7/dist-packages/torch_geometric/transforms/compose.py\", line 21, in __call__\r\n>     data = transform(data)\r\n>   File \"/content/drive/MyDrive/Colab Notebooks/QueryExpand/Graph/gnn/tutorials/improved_random_link_split.py\", line 212, in __call__\r\n>     out=val_store,\r\n>   File \"/content/drive/MyDrive/Colab Notebooks/QueryExpand/Graph/gnn/tutorials/improved_random_link_split.py\", line 286, in _create_label\r\n>     edge_index = torch.cat([edge_index, neg_edge_index], dim=-1)\r\n> RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument tensors in method wrapper___cat)\r\n\r\nBut it can run perfectly in local machine in CPU.\r\n\r\n<!-- A minimal example to reproduce the bug -->\r\n\r\n### Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen -->\r\n\r\nIt can run in Google Colab with GPU acceleration.\r\n\r\n### Environment\r\n\r\n* PyG version (`torch_geometric.__version__`): 2.0.2\r\n* PyTorch version: (`torch.__version__`): 1.10\r\n* OS (*e.g.*, Linux): Google Colab Ubuntu 18.04\r\n* Python version (*e.g.*, `3.9`): 3.7\r\n* CUDA/cuDNN version: cu111\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n\r\n### Additional context\r\n\r\n<!-- Add any other context about the problem here -->\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3709/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3701", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3701/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3701/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3701/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3701", "id": 1080804731, "node_id": "I_kwDOBlHMec5Aa8V7", "number": 3701, "title": "404 Erro when DownLoading WikipediaNetwork ", "user": {"login": "Kousaka-Honoka", "id": 36869676, "node_id": "MDQ6VXNlcjM2ODY5Njc2", "avatar_url": "https://avatars.githubusercontent.com/u/36869676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kousaka-Honoka", "html_url": "https://github.com/Kousaka-Honoka", "followers_url": "https://api.github.com/users/Kousaka-Honoka/followers", "following_url": "https://api.github.com/users/Kousaka-Honoka/following{/other_user}", "gists_url": "https://api.github.com/users/Kousaka-Honoka/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kousaka-Honoka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kousaka-Honoka/subscriptions", "organizations_url": "https://api.github.com/users/Kousaka-Honoka/orgs", "repos_url": "https://api.github.com/users/Kousaka-Honoka/repos", "events_url": "https://api.github.com/users/Kousaka-Honoka/events{/privacy}", "received_events_url": "https://api.github.com/users/Kousaka-Honoka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-12-15T09:40:44Z", "updated_at": "2021-12-15T13:40:15Z", "closed_at": "2021-12-15T13:40:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of the bug -->\r\n\r\n###  dataset = WikipediaNetwork(root='/tmp/Squirrel',name='squirrel',transform=T.NormalizeFeatures())\r\n### HTTPError: HTTP Error 404: Not Found\r\n### Environment\r\n\r\n* PyG version (`latest`):\r\n* PyTorch version: (`1.10`):\r\n* OS (colab)\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3701/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3700", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3700/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3700/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3700/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3700", "id": 1080489878, "node_id": "I_kwDOBlHMec5AZveW", "number": 3700, "title": "Bug of UPFD dataset", "user": {"login": "CurryTang", "id": 15672123, "node_id": "MDQ6VXNlcjE1NjcyMTIz", "avatar_url": "https://avatars.githubusercontent.com/u/15672123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CurryTang", "html_url": "https://github.com/CurryTang", "followers_url": "https://api.github.com/users/CurryTang/followers", "following_url": "https://api.github.com/users/CurryTang/following{/other_user}", "gists_url": "https://api.github.com/users/CurryTang/gists{/gist_id}", "starred_url": "https://api.github.com/users/CurryTang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CurryTang/subscriptions", "organizations_url": "https://api.github.com/users/CurryTang/orgs", "repos_url": "https://api.github.com/users/CurryTang/repos", "events_url": "https://api.github.com/users/CurryTang/events{/privacy}", "received_events_url": "https://api.github.com/users/CurryTang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-12-15T02:23:13Z", "updated_at": "2021-12-15T06:35:23Z", "closed_at": "2021-12-15T06:35:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nThere's a bug when I try to use pyg's dataloader on UPFD dataset. When I try to extract batches from test dataset of UPFD, I find that some edge index will be extracted incorrectly(shape of these edge indexes become [4,x], the correct ones should be [2,x])\r\n![image](https://user-images.githubusercontent.com/15672123/146110915-4016a585-b2a9-4ff4-a86b-cb4527e20db6.png)\r\n![image](https://user-images.githubusercontent.com/15672123/146110836-ce4386da-5c43-4608-9174-06df6e76c624.png)\r\n\r\n\r\n### To Reproduce\r\n\r\n``` python3\r\nimport argparse\r\nimport os.path as osp\r\n\r\nimport torch\r\nfrom torch.nn import Linear\r\nimport torch.nn.functional as F\r\nfrom upfd import UPFD\r\nfrom torch_geometric.loader import DataLoader\r\nfrom torch_geometric.transforms import ToUndirected\r\nfrom torch_geometric.nn import GCNConv, SAGEConv, GATConv, global_max_pool\r\npath = osp.join(osp.dirname(osp.realpath(__file__)), '..', 'data', 'UPFD')\r\ntrain_dataset = UPFD(path, args.dataset, args.feature, 'train', ToUndirected())\r\nval_dataset = UPFD(path, args.dataset, args.feature, 'val', ToUndirected())\r\ntest_dataset = UPFD(path, args.dataset, args.feature, 'test', ToUndirected())\r\n\r\ntrain_loader = DataLoader(train_dataset, batch_size=128, shuffle=True)\r\nval_loader = DataLoader(val_dataset, batch_size=128, shuffle=False)\r\ntest_loader = DataLoader(test_dataset, batch_size=128, shuffle=False)\r\n```\r\n\r\n### Expected behavior\r\nThis bug can be produced by running the examples/upfd.py file.\r\n\r\n![image](https://user-images.githubusercontent.com/15672123/146110836-ce4386da-5c43-4608-9174-06df6e76c624.png)\r\nAll edge index tensors should have shape [2,x] \r\n\r\n### Environment\r\n\r\n* PyG version (`torch_geometric.__version__`): 2.0.1\r\n* PyTorch version: (`torch.__version__`): 1.8.2\r\n* OS (*e.g.*, Linux): Linux\r\n* Python version (*e.g.*, `3.9`): 3.8\r\n* CUDA/cuDNN version: 11.1\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): conda\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): \r\n\r\n### Additional context\r\n\r\n![image](https://user-images.githubusercontent.com/15672123/146111172-32d2b7ae-fa63-44e6-bf02-22717e27301f.png)\r\n`datalist` object in upfd.py has correct shape(all [2,x])\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3700/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3694", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3694/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3694/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3694/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3694", "id": 1079496263, "node_id": "I_kwDOBlHMec5AV85H", "number": 3694, "title": "If it is a regression problem rather than a classification problem\uff1f", "user": {"login": "xyb151158", "id": 56794429, "node_id": "MDQ6VXNlcjU2Nzk0NDI5", "avatar_url": "https://avatars.githubusercontent.com/u/56794429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xyb151158", "html_url": "https://github.com/xyb151158", "followers_url": "https://api.github.com/users/xyb151158/followers", "following_url": "https://api.github.com/users/xyb151158/following{/other_user}", "gists_url": "https://api.github.com/users/xyb151158/gists{/gist_id}", "starred_url": "https://api.github.com/users/xyb151158/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xyb151158/subscriptions", "organizations_url": "https://api.github.com/users/xyb151158/orgs", "repos_url": "https://api.github.com/users/xyb151158/repos", "events_url": "https://api.github.com/users/xyb151158/events{/privacy}", "received_events_url": "https://api.github.com/users/xyb151158/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2021-12-14T09:10:40Z", "updated_at": "2021-12-16T12:39:12Z", "closed_at": "2021-12-16T12:39:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nIf it is a regression problem, each graph corresponds to a predicted value. Is there a corresponding convolution layer, or what is the solution?\r\nThank you\uff01", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3694/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3692", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3692/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3692/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3692/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3692", "id": 1078646824, "node_id": "PR_kwDOBlHMec4vw_QK", "number": 3692, "title": "`HeteroData` node type fix for `len(node_type)==2`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2021-12-13T15:10:33Z", "updated_at": "2021-12-13T15:10:46Z", "closed_at": "2021-12-13T15:10:45Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3692", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3692", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3692.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3692.patch", "merged_at": "2021-12-13T15:10:45Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3692/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3689", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3689/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3689/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3689/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3689", "id": 1077861971, "node_id": "I_kwDOBlHMec5APt5T", "number": 3689, "title": "A potential bug in FastRGCNConv", "user": {"login": "Jokeren", "id": 2306281, "node_id": "MDQ6VXNlcjIzMDYyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/2306281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jokeren", "html_url": "https://github.com/Jokeren", "followers_url": "https://api.github.com/users/Jokeren/followers", "following_url": "https://api.github.com/users/Jokeren/following{/other_user}", "gists_url": "https://api.github.com/users/Jokeren/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jokeren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jokeren/subscriptions", "organizations_url": "https://api.github.com/users/Jokeren/orgs", "repos_url": "https://api.github.com/users/Jokeren/repos", "events_url": "https://api.github.com/users/Jokeren/events{/privacy}", "received_events_url": "https://api.github.com/users/Jokeren/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-12-12T17:26:25Z", "updated_at": "2021-12-13T15:30:06Z", "closed_at": "2021-12-13T15:30:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nFastRGCNConv's output is different from RGCNConv when input is `None` (i.e., `x`=`None`).\r\n\r\n### To Reproduce\r\n\r\n```Python\r\n    edge_index = torch.tensor([\r\n        [0, 1, 1, 2, 2, 3, 0, 1, 1, 2, 2, 3],\r\n        [0, 0, 1, 2, 1, 1, 0, 0, 1, 0, 1, 3],\r\n    ])\r\n    edge_type = torch.tensor([0, 1, 1, 0, 7, 6, 4, 3, 3, 2, 2, 3])\r\n\r\n    torch.manual_seed(12345)\r\n    rgcn_conv = RGCNConv(4, 32, 8, num_bases=4, aggr=mode)\r\n    rgcn_conv_out = rgcn_conv(\r\n        x=None, edge_index=edge_index, edge_type=edge_type)\r\n\r\n    torch.manual_seed(12345)\r\n    fast_rgcn_conv = FastRGCNConv(4, 32, 8, num_bases=4, aggr=mode)\r\n    fast_rgcn_conv_out = fast_rgcn_conv(\r\n        x=None, edge_index=edge_index, edge_type=edge_type)\r\n\r\n    assert(torch.allclose(fast_rgcn_conv_out, rgcn_conv_out) is True)\r\n```\r\n\r\n### Expected behavior\r\n\r\nAccording to PyG's documentation, the `message` method has the `index` argument identical to `edge_index_i`. \r\n\r\nThe following execution assumes `x_l = torch.arange(self.in_channels_l, device=self.weight.device)`. \r\n\r\nIn FastRGCNConv's message, we pass `index` (i.e., `edge_index_i`) as an argument and broadcast on `weight` to collect node features.\r\n\r\nIn RGCNConv's, we first select a specific type of `weight` in `forward`. Then, in `message` returns `x_j` which **are features on `edge_index_j` instead of `edge_index_i`.** \r\n\r\nTo fix this problem, I suppose we can change the `index` argument of  FastRGCNConv's message to `edge_index_j`. \r\n\r\nI don't see such a case is covered in https://github.com/pyg-team/pytorch_geometric/blob/master/test/nn/conv/test_rgcn_conv.py. So perhaps an additional test case is needed. \r\n\r\n@rusty1s Please let me know if I could help.\r\n\r\n### Environment\r\n\r\n* PyG version (`5b4ccafa1409aa4711c0f11713ad53cc79806383`):\r\n* PyTorch version: (`1.10`):\r\n* OS (*e.g.*, Linux):\r\n* Python version (*e.g.*, `3.8.5`):\r\n* CUDA/cuDNN version: 11.4\r\n* How you installed PyTorch and PyG (`source`):\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3689/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3679", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3679/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3679/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3679/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3679", "id": 1077360792, "node_id": "I_kwDOBlHMec5ANziY", "number": 3679, "title": "torch_geometric.loader.DataLoader Iteration Issue", "user": {"login": "annatn998", "id": 68075209, "node_id": "MDQ6VXNlcjY4MDc1MjA5", "avatar_url": "https://avatars.githubusercontent.com/u/68075209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/annatn998", "html_url": "https://github.com/annatn998", "followers_url": "https://api.github.com/users/annatn998/followers", "following_url": "https://api.github.com/users/annatn998/following{/other_user}", "gists_url": "https://api.github.com/users/annatn998/gists{/gist_id}", "starred_url": "https://api.github.com/users/annatn998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/annatn998/subscriptions", "organizations_url": "https://api.github.com/users/annatn998/orgs", "repos_url": "https://api.github.com/users/annatn998/repos", "events_url": "https://api.github.com/users/annatn998/events{/privacy}", "received_events_url": "https://api.github.com/users/annatn998/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-12-11T02:19:15Z", "updated_at": "2021-12-13T09:38:04Z", "closed_at": "2021-12-13T09:36:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nHi, I'm trying to loop through a DataLoader object. However, I keep getting a torch.cat() issue when I loop through just this specific list. \r\n\r\nlistOfData containts all torch_geometric.data.data.Data objects. \r\n\r\nThe following code is how I created the DataLoader object. \r\n\r\n```python\r\nnp.random.seed(seed)\r\nnp.random.shuffle(listOfData)\r\ntrain_loader = DataLoader(listOfData[:int((length*0.80))], batch_size=batch_size_train)\r\ntest_loader = DataLoader(listOfData[int((length*0.80)):], batch_size=batch_size_test)\r\n```\r\n\r\n### To Reproduce\r\n\r\n<!-- A minimal example to reproduce the bug -->\r\nThen when I try to loop through the DataLoader. \r\n\r\n```\r\nfor i in train_loader: \r\n     print(i) \r\n```\r\n\r\nIt prints out a few graphs and then comes up with this error: \r\n\r\n```\r\nBatch(x=[462, 300], edge_index=[2, 223], y=[13], batch=[462], ptr=[14])\r\nBatch(x=[501, 300], edge_index=[2, 247], y=[13], batch=[501], ptr=[14])\r\nBatch(x=[764, 300], edge_index=[2, 370], y=[13], batch=[764], ptr=[14])\r\nBatch(x=[490, 300], edge_index=[2, 236], y=[13], batch=[490], ptr=[14])\r\nBatch(x=[353, 300], edge_index=[2, 169], y=[13], batch=[353], ptr=[14])\r\nBatch(x=[452, 300], edge_index=[2, 215], y=[13], batch=[452], ptr=[14])\r\nBatch(x=[375, 300], edge_index=[2, 161], y=[13], batch=[375], ptr=[14])\r\nBatch(x=[622, 300], edge_index=[2, 336], y=[13], batch=[622], ptr=[14])\r\nBatch(x=[355, 300], edge_index=[2, 177], y=[13], batch=[355], ptr=[14])\r\nBatch(x=[506, 300], edge_index=[2, 132], y=[13], batch=[506], ptr=[14])\r\nBatch(x=[486, 300], edge_index=[2, 176], y=[13], batch=[486], ptr=[14])\r\nBatch(x=[534, 300], edge_index=[2, 266], y=[13], batch=[534], ptr=[14])\r\nBatch(x=[540, 300], edge_index=[2, 252], y=[13], batch=[540], ptr=[14])\r\nBatch(x=[560, 300], edge_index=[2, 247], y=[13], batch=[560], ptr=[14])\r\nBatch(x=[600, 300], edge_index=[2, 269], y=[13], batch=[600], ptr=[14])\r\nBatch(x=[486, 300], edge_index=[2, 220], y=[13], batch=[486], ptr=[14])\r\nBatch(x=[228, 300], edge_index=[2, 88], y=[13], batch=[228], ptr=[14])\r\nBatch(x=[473, 300], edge_index=[2, 191], y=[13], batch=[473], ptr=[14])\r\nBatch(x=[322, 300], edge_index=[2, 142], y=[13], batch=[322], ptr=[14])\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n/tmp/ipykernel_4277/2753664710.py in <module>\r\n----> 1 for i in layer2_test:\r\n      2     print(i)\r\n\r\n/opt/conda/lib/python3.7/site-packages/torch/utils/data/dataloader.py in __next__(self)\r\n    519             if self._sampler_iter is None:\r\n    520                 self._reset()\r\n--> 521             data = self._next_data()\r\n    522             self._num_yielded += 1\r\n    523             if self._dataset_kind == _DatasetKind.Iterable and \\\r\n\r\n/opt/conda/lib/python3.7/site-packages/torch/utils/data/dataloader.py in _next_data(self)\r\n    559     def _next_data(self):\r\n    560         index = self._next_index()  # may raise StopIteration\r\n--> 561         data = self._dataset_fetcher.fetch(index)  # may raise StopIteration\r\n    562         if self._pin_memory:\r\n    563             data = _utils.pin_memory.pin_memory(data)\r\n\r\n/opt/conda/lib/python3.7/site-packages/torch/utils/data/_utils/fetch.py in fetch(self, possibly_batched_index)\r\n     45         else:\r\n     46             data = self.dataset[possibly_batched_index]\r\n---> 47         return self.collate_fn(data)\r\n\r\n/opt/conda/lib/python3.7/site-packages/torch_geometric/loader/dataloader.py in __call__(self, batch)\r\n     37 \r\n     38     def __call__(self, batch):\r\n---> 39         return self.collate(batch)\r\n     40 \r\n     41 \r\n\r\n/opt/conda/lib/python3.7/site-packages/torch_geometric/loader/dataloader.py in collate(self, batch)\r\n     18         if isinstance(elem, Data) or isinstance(elem, HeteroData):\r\n     19             return Batch.from_data_list(batch, self.follow_batch,\r\n---> 20                                         self.exclude_keys)\r\n     21         elif isinstance(elem, torch.Tensor):\r\n     22             return default_collate(batch)\r\n\r\n/opt/conda/lib/python3.7/site-packages/torch_geometric/data/batch.py in from_data_list(cls, data_list, follow_batch, exclude_keys)\r\n     67             add_batch=True,\r\n     68             follow_batch=follow_batch,\r\n---> 69             exclude_keys=exclude_keys,\r\n     70         )\r\n     71 \r\n\r\n/opt/conda/lib/python3.7/site-packages/torch_geometric/data/collate.py in collate(cls, data_list, increment, add_batch, follow_batch, exclude_keys)\r\n     75             # Collate attributes into a unified representation:\r\n     76             value, slices, incs = _collate(attr, values, data_list, stores,\r\n---> 77                                            increment)\r\n     78 \r\n     79             out_store[attr] = value\r\n\r\n/opt/conda/lib/python3.7/site-packages/torch_geometric/data/collate.py in _collate(key, values, data_list, stores, increment)\r\n    146             incs = None\r\n    147 \r\n--> 148         value = torch.cat(values, dim=cat_dim or 0)\r\n    149         return value, slices, incs\r\n    150 \r\n\r\nRuntimeError: torch.cat(): Tensors must have same number of dimensions: got 1 and 2\r\n```\r\n\r\nI'm very stuck, if someone could please help me. \r\n\r\n\r\n### Environment\r\n\r\n\r\n* PyTorch version: (`torch.__version__`): 1.9.1+cu111\r\n* OS (*e.g.*, Linux): Jupyter Notebook \r\n* Python version (*e.g.*, `3.9`): 3.7\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip \r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3679/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3673", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3673/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3673/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3673/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3673", "id": 1076619735, "node_id": "I_kwDOBlHMec5AK-nX", "number": 3673, "title": "K-fold cross-validation in PyTorch Geometric", "user": {"login": "bianchiniriccardo95", "id": 82223332, "node_id": "MDQ6VXNlcjgyMjIzMzMy", "avatar_url": "https://avatars.githubusercontent.com/u/82223332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bianchiniriccardo95", "html_url": "https://github.com/bianchiniriccardo95", "followers_url": "https://api.github.com/users/bianchiniriccardo95/followers", "following_url": "https://api.github.com/users/bianchiniriccardo95/following{/other_user}", "gists_url": "https://api.github.com/users/bianchiniriccardo95/gists{/gist_id}", "starred_url": "https://api.github.com/users/bianchiniriccardo95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bianchiniriccardo95/subscriptions", "organizations_url": "https://api.github.com/users/bianchiniriccardo95/orgs", "repos_url": "https://api.github.com/users/bianchiniriccardo95/repos", "events_url": "https://api.github.com/users/bianchiniriccardo95/events{/privacy}", "received_events_url": "https://api.github.com/users/bianchiniriccardo95/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-12-10T09:27:39Z", "updated_at": "2021-12-11T13:21:25Z", "closed_at": "2021-12-11T13:21:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\nFirst of all, thanks for this amazing tool.\r\nI have a question:\r\nI want to perform node classification on my network composed of 2410 nodes. Since now, I split my nodes using the function `AddTrainValTestMask` function in order to validate the machine, but my idea is to perform a K-fold cross validation of the network, to gain better confidence about the goodness of the GCN.\r\nHow can I do this? How can I split my nodes in the different masks multiple times? Is there a specific function?\r\nThanks in advance.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3673/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3651", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3651/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3651/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3651/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3651", "id": 1074233328, "node_id": "PR_kwDOBlHMec4vi5tb", "number": 3651, "title": "Bugfix: Loading via `state_dict` within lazy modules", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2021-12-08T10:10:57Z", "updated_at": "2021-12-08T11:06:20Z", "closed_at": "2021-12-08T11:06:19Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3651", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3651", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3651.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3651.patch", "merged_at": "2021-12-08T11:06:19Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3651/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3641", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3641/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3641/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3641/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3641", "id": 1073011061, "node_id": "I_kwDOBlHMec4_9Nl1", "number": 3641, "title": "Pytorch Geometric RandomLinkSplit: Expected all tensors to be on the same device", "user": {"login": "Sticksword", "id": 3814531, "node_id": "MDQ6VXNlcjM4MTQ1MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3814531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sticksword", "html_url": "https://github.com/Sticksword", "followers_url": "https://api.github.com/users/Sticksword/followers", "following_url": "https://api.github.com/users/Sticksword/following{/other_user}", "gists_url": "https://api.github.com/users/Sticksword/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sticksword/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sticksword/subscriptions", "organizations_url": "https://api.github.com/users/Sticksword/orgs", "repos_url": "https://api.github.com/users/Sticksword/repos", "events_url": "https://api.github.com/users/Sticksword/events{/privacy}", "received_events_url": "https://api.github.com/users/Sticksword/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-12-07T07:27:46Z", "updated_at": "2021-12-07T18:17:28Z", "closed_at": "2021-12-07T12:55:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nThe RandomLinkSplit class is negative sampling with the device being the `cpu`. If the original data was on a `cuda` device, we would run into the error \"Expected all tensors to be on the same device\" when we operate on the two tensors (eg. `torch.cat`).\r\n\r\nThe culprit can be found around [this line](https://github.com/pyg-team/pytorch_geometric/blob/master/torch_geometric/transforms/random_link_split.py#L199).\r\n\r\n### To Reproduce\r\n\r\n```\r\nimport torch\r\n\r\nimport torch_geometric.transforms as T\r\nfrom torch_geometric.nn import GCNConv\r\nfrom torch_geometric.datasets import Planetoid\r\nfrom torch_geometric.utils import negative_sampling\r\n\r\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\r\ntransform = T.Compose([\r\n    T.NormalizeFeatures(),\r\n    T.ToDevice(device),\r\n])\r\n\r\ndataset = Planetoid(root='/tmp/Planetoid', name='Cora', transform=transform)\r\n\r\ndata = dataset[0]\r\n\r\ntransform = T.RandomLinkSplit(num_val=0.05, num_test=0.1, is_undirected=True,)\r\ntrain_data, val_data, test_data = transform(data) # throws error\r\n\r\n```\r\nExample pulled from https://github.com/pyg-team/pytorch_geometric/blob/master/examples/link_pred.py\r\n\r\n### Expected behavior\r\n\r\nI expect the sampled edges to be on the same device as the original sampled tensor.\r\n\r\n### Environment\r\n\r\n* PyG version (`torch_geometric.__version__`): 2.0.2\r\n* PyTorch version: (`torch.__version__`): 1.9.0+cu111\r\n* OS (*e.g.*, Linux): Linux\r\n* Python version (*e.g.*, `3.9`): 3.9\r\n* CUDA/cuDNN version: cuda\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n\r\n### Additional context\r\n\r\nWe can see from [this line](https://github.com/pyg-team/pytorch_geometric/blob/master/torch_geometric/utils/negative_sampling.py#L13) that the negative sampling method does not take a device parameter.\r\n\r\nI originally opened a [StackOverflow post](https://stackoverflow.com/questions/70205917/pytorch-geometric-expected-all-tensors-to-be-on-the-same-device-demo-code-not-w) and a user had suggested I raise this officially. I then took a closer look and it is indeed a bug.\r\n\r\nFurther inspecting how `negative_sampling` works, I have confirmed this buggy behavior of having the negative samples be on the `cpu` device.\r\n\r\n```\r\nfrom torch_geometric.datasets import Planetoid\r\nfrom torch_geometric.utils import negative_sampling\r\n\r\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\r\ntransform = T.Compose([\r\n    T.NormalizeFeatures(),\r\n    T.ToDevice(device),\r\n])\r\n\r\ndataset = Planetoid(root='/tmp/Planetoid', name='Cora', transform=transform)\r\n\r\ndata = dataset[0]\r\n\r\nneg_edge_index = negative_sampling(data.edge_index, data.x.size(),\r\n                                           num_neg_samples=500,\r\n                                           method='sparse')\r\n\r\ndata.x.device, neg_edge_index.device\r\n```\r\noutputs\r\n```\r\n=> (device(type='cuda', index=0), device(type='cpu'))\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3641/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3640", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3640/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3640/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3640/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3640", "id": 1072793565, "node_id": "I_kwDOBlHMec4_8Yfd", "number": 3640, "title": "Load model Error in Heterogenous Graphs", "user": {"login": "shubham-gupta-iitr", "id": 59755398, "node_id": "MDQ6VXNlcjU5NzU1Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/59755398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shubham-gupta-iitr", "html_url": "https://github.com/shubham-gupta-iitr", "followers_url": "https://api.github.com/users/shubham-gupta-iitr/followers", "following_url": "https://api.github.com/users/shubham-gupta-iitr/following{/other_user}", "gists_url": "https://api.github.com/users/shubham-gupta-iitr/gists{/gist_id}", "starred_url": "https://api.github.com/users/shubham-gupta-iitr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shubham-gupta-iitr/subscriptions", "organizations_url": "https://api.github.com/users/shubham-gupta-iitr/orgs", "repos_url": "https://api.github.com/users/shubham-gupta-iitr/repos", "events_url": "https://api.github.com/users/shubham-gupta-iitr/events{/privacy}", "received_events_url": "https://api.github.com/users/shubham-gupta-iitr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2021-12-07T00:57:03Z", "updated_at": "2021-12-08T11:06:23Z", "closed_at": "2021-12-08T11:06:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nWhile using the to_hetero method to create heterogenous models, I am not able to load the model if I use torch.save and torch.load. Is there something I am missing here?\r\n### To Reproduce\r\n\r\n````python\r\nimport torch\r\nfrom torch_geometric.nn import TopKPooling\r\nfrom torch_geometric.nn import global_mean_pool as gap, global_max_pool as gmp\r\nimport torch.nn.functional as F\r\nfrom torch_geometric.nn import SAGEConv\r\nfrom torch_geometric.nn.norm import BatchNorm\r\nfrom torch_geometric.nn.dense import Linear\r\n\r\nclass ToyNet(torch.nn.Module):\r\n    def __init__(self):\r\n        super(ToyNet, self).__init__()\r\n        self.conv1 = SAGEConv((-1, -1), 2048)\r\n        self.conv2 = SAGEConv((-1, -1), 1024)\r\n        self.conv3 = SAGEConv((-1, -1), 512)\r\n        self.conv4 = SAGEConv((-1, -1), 256)\r\n        self.conv5 = SAGEConv((-1, -1), 256)\r\n        self.conv6 = SAGEConv((-1, -1), 128)\r\n        self.lin1 = torch.nn.Linear(128, 128)\r\n        self.lin2 = torch.nn.Linear(128, 64)\r\n        self.lin3 = torch.nn.Linear(64, 2)\r\n\r\n        self.blinq = torch.nn.BatchNorm1d(512)\r\n        self.blinc = torch.nn.BatchNorm1d(512)\r\n        self.blini = torch.nn.BatchNorm1d(512)\r\n\r\n        self.act1 = torch.nn.ReLU()\r\n        self.act2 = torch.nn.ReLU()  \r\n        self._softmax = torch.nn.Softmax(dim=-1)      \r\n        print(\"Just want to be sure\")\r\n\r\n    def forward(self, x, edge_index):\r\n        x = F.relu(self.conv1(x, edge_index))\r\n        \r\n        x = F.relu(self.conv2(x, edge_index))\r\n        x = F.relu(self.conv3(x, edge_index))\r\n        x = F.relu(self.conv4(x, edge_index))\r\n        x = F.relu(self.conv5(x, edge_index))\r\n        x = F.relu(self.conv6(x, edge_index))\r\n        x = self.lin1(x)\r\n        x = self.act1(x)\r\n        x = self.lin2(x)\r\n        x = self.act2(x)      \r\n        x = F.dropout(x, p=0.5, training=self.training)\r\n        x_log = self.lin3(x)\r\n        x = self._softmax(x_log)\r\n        return x_log\r\n\r\ntoy_model = ToyNet()\r\ngraph_meta = (['txt_src', 'img_src', 'ques'], [('ques','link1','txt_src'), ('ques','link2','img_src'), \r\n('txt_src','link3','ques'), ('img_src','link4','ques')])\r\n\r\ntoy_model = to_hetero(toy_model, graph_meta)\r\n# Run some epochs\r\ntorch.save({'epoch': epoch,\r\n            'state_dict': toy_model.state_dict()},\r\n            'train.ckpt')\r\n\r\n# During inference\r\ntoy_model.load_state_dict(torch.load('train.ckpt'))\r\n```\r\n\r\n### Expected behavior\r\n\r\nExpect the model to load the saved model.\r\n\r\n### Environment\r\n\r\n* PyG version (`torch_geometric.__version__`): 2.0.2\r\n* PyTorch version: (`torch.__version__`): 1.9.1\r\n* OS (*e.g.*, Linux): Linux\r\n* Python version (*e.g.*, `3.9`): 3.8.5\r\n* CUDA/cuDNN version: 11.1\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): \r\n\r\n### Additional context\r\n\r\n<!-- Add any other context about the problem here -->\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3640/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3627", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3627/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3627/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3627/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3627", "id": 1070506482, "node_id": "I_kwDOBlHMec4_zqHy", "number": 3627, "title": "`ToUndirected` not working properly when num_nodes == 2", "user": {"login": "aur3l14no", "id": 12196273, "node_id": "MDQ6VXNlcjEyMTk2Mjcz", "avatar_url": "https://avatars.githubusercontent.com/u/12196273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aur3l14no", "html_url": "https://github.com/aur3l14no", "followers_url": "https://api.github.com/users/aur3l14no/followers", "following_url": "https://api.github.com/users/aur3l14no/following{/other_user}", "gists_url": "https://api.github.com/users/aur3l14no/gists{/gist_id}", "starred_url": "https://api.github.com/users/aur3l14no/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aur3l14no/subscriptions", "organizations_url": "https://api.github.com/users/aur3l14no/orgs", "repos_url": "https://api.github.com/users/aur3l14no/repos", "events_url": "https://api.github.com/users/aur3l14no/events{/privacy}", "received_events_url": "https://api.github.com/users/aur3l14no/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-12-03T11:45:46Z", "updated_at": "2021-12-03T13:55:04Z", "closed_at": "2021-12-03T13:55:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nIn to_undirected.py:53, when value.size(0) == nnz, inv_store.edge_index will be overwriten to store.edge_index.\r\n\r\nSimply adding `key != 'edge_index'` should be able to fix it.\r\n\r\n### To Reproduce\r\n\r\nSimply modify `test_hetero_to_undirected` to the following and you will get an error.\r\n\r\n```\r\ndef test_hetero_to_undirected():\r\n    edge_index = torch.tensor([[2, 0], [3, 1]])\r\n    edge_weight = torch.randn(edge_index.size(1))\r\n    edge_attr = torch.randn(edge_index.size(1), 8)\r\n\r\n    perm = torch.tensor([1, 1, 0, 0])\r\n\r\n    data = HeteroData()\r\n    data['v'].num_nodes = 4\r\n    data['w'].num_nodes = 4\r\n    data['v', 'v'].edge_index = edge_index\r\n    data['v', 'v'].edge_weight = edge_weight\r\n    data['v', 'v'].edge_attr = edge_attr\r\n    data['v', 'w'].edge_index = edge_index\r\n    data['v', 'w'].edge_weight = edge_weight\r\n    data['v', 'w'].edge_attr = edge_attr\r\n\r\n    from torch_geometric.transforms import ToUndirected\r\n    data = ToUndirected()(data)\r\n    assert data['v', 'v'].edge_index.tolist() == [[0, 1, 2, 3],\r\n                                                  [1, 0, 3, 2]]\r\n    assert data['v', 'v'].edge_weight.tolist() == edge_weight[perm].tolist()\r\n    assert data['v', 'v'].edge_attr.tolist() == edge_attr[perm].tolist()\r\n    assert data['v', 'w'].edge_index.tolist() == edge_index.tolist()\r\n    assert data['v', 'w'].edge_weight.tolist() == edge_weight.tolist()\r\n    assert data['v', 'w'].edge_attr.tolist() == edge_attr.tolist()\r\n    assert data['w', 'v'].edge_index.tolist() == [[3, 1], [2, 0]]\r\n    assert data['w', 'v'].edge_weight.tolist() == edge_weight.tolist()\r\n    assert data['w', 'v'].edge_attr.tolist() == edge_attr.tolist()\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe above test should pass.\r\n\r\n### Environment\r\n\r\n* PyG version (`torch_geometric.__version__`): 2.0.2\r\n* PyTorch version: (`torch.__version__`):\r\n* OS (*e.g.*, Linux):\r\n* Python version (*e.g.*, `3.9`):\r\n* CUDA/cuDNN version:\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source):\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`):\r\n\r\n### Additional context\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3627/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3626", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3626/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3626/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3626/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3626", "id": 1070307163, "node_id": "I_kwDOBlHMec4_y5db", "number": 3626, "title": "Bug in neighbor_loader if data.num_nodes == data.num_edges", "user": {"login": "WuliangHuang", "id": 23693894, "node_id": "MDQ6VXNlcjIzNjkzODk0", "avatar_url": "https://avatars.githubusercontent.com/u/23693894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WuliangHuang", "html_url": "https://github.com/WuliangHuang", "followers_url": "https://api.github.com/users/WuliangHuang/followers", "following_url": "https://api.github.com/users/WuliangHuang/following{/other_user}", "gists_url": "https://api.github.com/users/WuliangHuang/gists{/gist_id}", "starred_url": "https://api.github.com/users/WuliangHuang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WuliangHuang/subscriptions", "organizations_url": "https://api.github.com/users/WuliangHuang/orgs", "repos_url": "https://api.github.com/users/WuliangHuang/repos", "events_url": "https://api.github.com/users/WuliangHuang/events{/privacy}", "received_events_url": "https://api.github.com/users/WuliangHuang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-12-03T07:42:31Z", "updated_at": "2021-12-03T11:43:15Z", "closed_at": "2021-12-03T11:43:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n<!-- A clear and concise description of the bug -->\r\nIn `torch.loader.neighbor_loader`, when collecting a batch, if `batch.num_nodes == batch.num_edges`, the behavior will be unwanted.\r\n\r\n### To Reproduce\r\n<!-- A minimal example to reproduce the bug -->\r\nFollowing is a small case:\r\n```python\r\nimport torch\r\nfrom torch_geometric.loader import NeighborLoader\r\nfrom torch_geometric.data import Data\r\n\r\nedge_index = torch.LongTensor(\r\n    [[0, 1, 2, 3, 4], [1, 2, 3, 4, 0]])  # this will create a circular graph.\r\ndata = Data(\r\n    edge_index=edge_index,\r\n    node_id=torch.arange(5),\r\n    num_nodes=5,\r\n)\r\n\r\ndata_loader = NeighborLoader(data, num_neighbors=[1, 1],\r\n                             input_nodes=torch.LongTensor([0, 3]),\r\n                             # sample for node 0 and 2\r\n                             batch_size=2, shuffle=True)\r\n\r\nfor batch in data_loader:\r\n    print(f'{batch=}')\r\n    print(f'{batch.edge_index=}')\r\n    print(f'{batch.node_id=}')\r\n    print(f'{batch.num_nodes=}')\r\n```\r\nThe output of this case is:\r\n```python\r\nbatch=Data(edge_index=[2, 4], node_id=[4], num_nodes=5, batch_size=2)\r\nbatch.edge_index=tensor([[2, 3, 1, 4],\r\n        [0, 1, 2, 3]])\r\nbatch.node_id=tensor([1, 4, 2, 3])\r\nbatch.num_nodes=5\r\n```\r\n\r\n### Expected behavior\r\n<!-- A clear and concise description of what you expected to happen -->\r\nThere should be 5 nodes, however, there are only four nodes.\r\n\r\n\r\n### Environment\r\n\r\n* PyG version (`torch_geometric.__version__`):2.0.2\r\n* PyTorch version: (`torch.__version__`):1.10.0+cu113\r\n* OS (*e.g.*, Linux): Ubuntu 20.04.3 LTS\r\n* Python version (*e.g.*, `3.9`): 3.8.10\r\n* CUDA/cuDNN version: 11.3\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): following the install instruction\r\n\r\n### Additional context\r\n<!-- Add any other context about the problem here -->\r\nThis type of problems will only happen when batch.num_nodes equals batch.num_edges. In `torch_geometric.loader.utils.py` , it first checks tensor whose first dimension matches batch.num_nodes or batch.num_edges, and then collects them into a new batch. All the tensor will follow `filter_node_store_` if `num_nodes == num_edges`.\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/e8915ad1cb5831c33c77f0fa69ee8a2267074647/torch_geometric/loader/utils.py#L102-L111\r\n\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/e8915ad1cb5831c33c77f0fa69ee8a2267074647/torch_geometric/loader/utils.py#L71-L72\r\n\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/e8915ad1cb5831c33c77f0fa69ee8a2267074647/torch_geometric/loader/utils.py#L96-L97\r\n\r\n### My suggestions\r\nI think we can add a warning if `batch.num_nodes == batch.num_edges`, and add a more explicit way for user to define if a variable is relelated to nodes feature or edge feature.\r\n\r\nSuch as in torch_geometric.loader.utils.py L59-L70:\r\n```python\r\n# def filter_node_store_(store: NodeStorage, index: Tensor) -> NodeStorage:\r\ndef filter_node_store_(store: NodeStorage, index: Tensor, keys:List[str]) -> NodeStorage:  # add\r\n    # Filters a node storage object to only hold the nodes in `index`:\r\n    num_nodes = store.num_nodes\r\n\r\n    for key, value in store.items():\r\n        if key == 'num_nodes':\r\n            store.num_nodes = index.numel()\r\n        \r\n        if keys is not None and key in keys: # add\r\n            store[key] = value[index] # add\r\n        elif isinstance(value, Tensor) and value.size(0) == num_nodes:\r\n            store[key] = value[index]\r\n\r\n    return store\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3626/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3621", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3621/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3621/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3621/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3621", "id": 1070016200, "node_id": "I_kwDOBlHMec4_xybI", "number": 3621, "title": "Using in place operations (+=) causes FiLMConv to fail", "user": {"login": "Jokeren", "id": 2306281, "node_id": "MDQ6VXNlcjIzMDYyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/2306281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jokeren", "html_url": "https://github.com/Jokeren", "followers_url": "https://api.github.com/users/Jokeren/followers", "following_url": "https://api.github.com/users/Jokeren/following{/other_user}", "gists_url": "https://api.github.com/users/Jokeren/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jokeren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jokeren/subscriptions", "organizations_url": "https://api.github.com/users/Jokeren/orgs", "repos_url": "https://api.github.com/users/Jokeren/repos", "events_url": "https://api.github.com/users/Jokeren/events{/privacy}", "received_events_url": "https://api.github.com/users/Jokeren/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-12-02T21:55:55Z", "updated_at": "2021-12-03T11:03:35Z", "closed_at": "2021-12-03T11:03:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nI was running `python pytorch_geomeric/examples/film.py`. The following error prompted.\r\n\r\n> RuntimeError: one of the variables needed for gradient computation has been modified by an inplace operation: [torch.cuda.FloatTensor [4814, 320]], which is output 0 of ReluBackward0, is at version 1; expected version 0 instead. Hint: the backtrace further above shows the operation that failed to compute its gradient. The variable in question was changed in there or anywhere later. Good luck!\r\n\r\nWith `torch.autograd.set_detect_anomaly(True)`, I located the error one this [line](https://github.com/pyg-team/pytorch_geometric/blob/e8915ad1cb5831c33c77f0fa69ee8a2267074647/torch_geometric/nn/conv/film_conv.py#L111). However, the relu module by default is not in place. So I looked around and found the use of `+=` operations on those lines. Replacing `+=` operators with `out += out + ...` resolved the problem.\r\n\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/e8915ad1cb5831c33c77f0fa69ee8a2267074647/torch_geometric/nn/conv/film_conv.py#L116\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/e8915ad1cb5831c33c77f0fa69ee8a2267074647/torch_geometric/nn/conv/film_conv.py#L125\r\nhttps://github.com/pyg-team/pytorch_geometric/blob/e8915ad1cb5831c33c77f0fa69ee8a2267074647/torch_geometric/nn/conv/film_conv.py#L131\r\n\r\n### To Reproduce\r\n\r\n`python pytorch_geomeric/examples/film.py`\r\n\r\n### Expected behavior\r\n\r\nTraining without problems.\r\n\r\n### Environment\r\n\r\n* PyG version (`d54c3ff0fe43fd2773f73534000d8a76da3dd022`):\r\n* PyTorch version: (`d4ae7896554d156732de34c3d3600050f9cb18ec`):\r\n* OS (Linux):\r\n* Python version (`3.8.5`):\r\n* CUDA/cuDNN version: CUDA-11.4\r\n* How you installed PyTorch and PyG (`pip`):\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3621/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3618", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3618/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3618/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3618/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3618", "id": 1069244042, "node_id": "I_kwDOBlHMec4_u16K", "number": 3618, "title": "RuntimeError while using GDC", "user": {"login": "Misterion777", "id": 31886723, "node_id": "MDQ6VXNlcjMxODg2NzIz", "avatar_url": "https://avatars.githubusercontent.com/u/31886723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Misterion777", "html_url": "https://github.com/Misterion777", "followers_url": "https://api.github.com/users/Misterion777/followers", "following_url": "https://api.github.com/users/Misterion777/following{/other_user}", "gists_url": "https://api.github.com/users/Misterion777/gists{/gist_id}", "starred_url": "https://api.github.com/users/Misterion777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Misterion777/subscriptions", "organizations_url": "https://api.github.com/users/Misterion777/orgs", "repos_url": "https://api.github.com/users/Misterion777/repos", "events_url": "https://api.github.com/users/Misterion777/events{/privacy}", "received_events_url": "https://api.github.com/users/Misterion777/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-12-02T08:05:44Z", "updated_at": "2021-12-04T18:34:41Z", "closed_at": "2021-12-04T18:34:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, i'm experiencing this error while using GDC with parameters from [example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/gcn.py#L21-L25):\r\n\r\n```\r\n File \"/Users/ilyalasy/opt/anaconda3/envs/tg/lib/python3.8/site-packages/torch_geometric/data/dataset.py\", line 199, in __getitem__\r\n    data = data if self.transform is None else self.transform(data)\r\n  File \"/Users/ilyalasy/opt/anaconda3/envs/tg/lib/python3.8/site-packages/torch/autograd/grad_mode.py\", line 28, in decorate_context\r\n    return func(*args, **kwargs)\r\n  File \"/Users/ilyalasy/opt/anaconda3/envs/tg/lib/python3.8/site-packages/torch_geometric/transforms/gdc.py\", line 107, in __call__\r\n    edge_index, edge_weight = self.sparsify_dense(\r\n  File \"/Users/ilyalasy/opt/anaconda3/envs/tg/lib/python3.8/site-packages/torch_geometric/transforms/gdc.py\", line 372, in sparsify_dense\r\n    edge_index = torch.stack([top_idx.flatten(), row_idx], dim=0)\r\nRuntimeError: stack expects each tensor to be equal size, but got [2704] at entry 0 and [6656] at entry 1\r\n```\r\nI am passing GDC callable as a [transform](https://github.com/pyg-team/pytorch_geometric/blob/master/torch_geometric/data/dataset.py#L28-L31) parameter to custom dataset, probably each data object should have some specific properties for such parameters to work?\r\n\r\n### Environment\r\n\r\n* PyG version: `2.0.2`\r\n* PyTorch version:`1.10.0`\r\n* OS:`MacOS`\r\n* Python version:`3.8.11`\r\n* CUDA/cuDNN version: `cpu`\r\n* How you installed PyTorch and PyG:`pip`\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3618/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3601", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3601/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3601/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3601/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3601", "id": 1067110670, "node_id": "I_kwDOBlHMec4_mtEO", "number": 3601, "title": "NeighborLoader bug when using DDP on heterogeneous graphs via PyTorch-Lightning", "user": {"login": "pbielak", "id": 9750367, "node_id": "MDQ6VXNlcjk3NTAzNjc=", "avatar_url": "https://avatars.githubusercontent.com/u/9750367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbielak", "html_url": "https://github.com/pbielak", "followers_url": "https://api.github.com/users/pbielak/followers", "following_url": "https://api.github.com/users/pbielak/following{/other_user}", "gists_url": "https://api.github.com/users/pbielak/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbielak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbielak/subscriptions", "organizations_url": "https://api.github.com/users/pbielak/orgs", "repos_url": "https://api.github.com/users/pbielak/repos", "events_url": "https://api.github.com/users/pbielak/events{/privacy}", "received_events_url": "https://api.github.com/users/pbielak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-11-30T11:17:20Z", "updated_at": "2021-11-30T14:20:49Z", "closed_at": "2021-11-30T14:20:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nI was trying to utilize multiple GPUs to train a GNN model on a custom heterogeneous graph. I used PyTorch-Lightning's implementation of the DDP mode to parallelize the computation across GPUs. However, it fails completely due to a bug in the `NeighborLoader` implementation.\r\n\r\n### To Reproduce\r\n\r\nJust run the example `https://github.com/pyg-team/pytorch_geometric/blob/master/examples/pytorch_lightning/relational_gnn.py` with `gpus=2`. It will yield following exception:\r\n\r\n```\r\nOriginal Traceback (most recent call last):\r\n  File \"(...)/.venv/lib/python3.6/site-packages/torch/utils/data/_utils/worker.py\", line 287, in _worker_loop\r\n    data = fetcher.fetch(index)\r\n  File \"(...)/.venv/lib/python3.6/site-packages/torch/utils/data/_utils/fetch.py\", line 52, in fetch\r\n    return self.collate_fn(data)\r\n  File \"(...)/.venv/lib/python3.6/site-packages/pytorch_lightning/utilities/auto_restart.py\", line 474, in _capture_metadata_collate\r\n    data = default_collate(samples)\r\n  File \"(...)/.venv/lib/python3.6/site-packages/torch_geometric/loader/neighbor_loader.py\", line 219, in hetero_sample\r\n    self.directed,\r\nIndexError: _Map_base::at\r\n```\r\n\r\n### Expected behavior\r\n\r\nIt should work fine, as in the case of simple (not heterogenous) graphs.\r\n\r\n### Explanation\r\n\r\nI debugged this issue and found the root cause:\r\n- PyTorch-Lightning automatically replaces the sampler with a Distributed Sampler implementation, so that each GPU receives its own subset of node indices\r\n\r\nSee: `https://github.com/PyTorchLightning/pytorch-lightning/blob/e94aff1c5bed2c616143dc694343c71a2be0b1bd/pytorch_lightning/trainer/data_loading.py#L125`\r\n\r\n- the actual replacement of the sampler happens here: `https://github.com/PyTorchLightning/pytorch-lightning/blob/e94aff1c5bed2c616143dc694343c71a2be0b1bd/pytorch_lightning/utilities/data.py#L180` - it reconstructs the class kwargs and creates another instance of the DataLoader (here: `NeighborLoader`) while attaching a new sampler implementation\r\n\r\n- Now why does that fail in the case of heterogeneous graphs? It because of the following lines:\r\n\r\n```python\r\n# See: https://github.com/pyg-team/pytorch_geometric/blob/master/torch_geometric/loader/neighbor_loader.py#L168\r\n\r\n(...)\r\n            if isinstance(num_neighbors, (list, tuple)):\r\n                self.num_neighbors = {\r\n                    key: num_neighbors\r\n                    for key in self.edge_types\r\n                }\r\n            self.num_neighbors = {\r\n                edge_type_to_str(key): value\r\n                for key, value in self.num_neighbors.items()\r\n            }\r\n(...)\r\n```\r\n\r\nDuring the first initialization of the `NeighborLoader` object, `num_neighbors` can be passed as a simple list, e.g., `[5, 5, 5]`. It is converted to a dict `(src_node_type, edge_type, dst_node_type) -> [5, 5, 5]`. Next using the `edge_type_to_str()` function these keys are converted to strings. This is completely expected, but when recreating the loader,  PyTorch-Lightning extracts the field `num_neighbors` from the current object and passes it as kwargs into the new loader object. At this point, `num_neighbors` is already a dict with the desired format, i.e. `\"src_node_type__edge_type__dst_node_type\" -> [5, 5, 5]`. The first if-statement will not be called, but the second dict comprehension will still run and again apply the `edge_type_to_str()` method to each key. This will result in keys like `s__r__c______n__o__d__e(...)`. And this causes the underlying C++ implementation to fail.\r\n\r\n\r\n### Fixes\r\nI am not sure where this issue should be fixed:\r\n- just check before the key remapping if the keys are already strings?\r\n- check inside of the `edge_type_to_str()` function is the argument is already a string?\r\n- another solution?\r\n\r\n### Environment\r\n\r\n* PyG version (`torch_geometric.__version__`): 2.0.2\r\n* PyTorch version: (`torch.__version__`): 1.10.0\r\n* OS (*e.g.*, Linux): Linux\r\n* Python version (*e.g.*, `3.9`): 3.6\r\n* CUDA/cuDNN version: 11.4\r\n* How you installed PyTorch and PyG (`conda`, `pip`, source): pip\r\n* Any other relevant information (*e.g.*, version of `torch-scatter`): pytorch-lightning==1.5.3 (but happens also in previous versions)\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3601/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3601/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3473", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3473/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3473/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3473/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3473", "id": 1050499260, "node_id": "I_kwDOBlHMec4-nVi8", "number": 3473, "title": "Assertion Error: can only test a child process after 2.0.2 update", "user": {"login": "Michael-C-Strobel", "id": 20566031, "node_id": "MDQ6VXNlcjIwNTY2MDMx", "avatar_url": "https://avatars.githubusercontent.com/u/20566031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Michael-C-Strobel", "html_url": "https://github.com/Michael-C-Strobel", "followers_url": "https://api.github.com/users/Michael-C-Strobel/followers", "following_url": "https://api.github.com/users/Michael-C-Strobel/following{/other_user}", "gists_url": "https://api.github.com/users/Michael-C-Strobel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Michael-C-Strobel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Michael-C-Strobel/subscriptions", "organizations_url": "https://api.github.com/users/Michael-C-Strobel/orgs", "repos_url": "https://api.github.com/users/Michael-C-Strobel/repos", "events_url": "https://api.github.com/users/Michael-C-Strobel/events{/privacy}", "received_events_url": "https://api.github.com/users/Michael-C-Strobel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2021-11-11T02:11:19Z", "updated_at": "2021-11-23T22:03:41Z", "closed_at": "2021-11-23T22:03:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n After updating pytorch-geometric from 2.0.1 to 2.0.2 I get the following error message repeatedly. The issue does not occur with num_workers=0.\r\n\r\n\r\n**Stack Trace:**\r\nException ignored in: <function _MultiProcessingDataLoaderIter.__del__ at 0x2ac2fb8fddc0>\r\nTraceback (most recent call last):\r\n  File \"/home-4/strobelm@umd.edu/pytorch_env/lib/python3.9/site-packages/torch/utils/data/dataloader.py\", line 1328, in __del__\r\n    self._shutdown_workers()\r\n  File \"/home-4/strobelm@umd.edu/pytorch_env/lib/python3.9/site-packages/torch/utils/data/dataloader.py\", line 1320, in _shutdown_workers\r\n    if w.is_alive():\r\n  File \"/home-4/strobelm@umd.edu/pytorch_env/lib/python3.9/multiprocessing/process.py\", line 160, in is_alive\r\n    assert self._parent_pid == os.getpid(), 'can only test a child process'\r\nAssertionError: can only test a child process\r\n\r\n\r\n## Environment\r\n\r\n* OS: CentOS Linux release 7.6.1810\r\n* Python version: 3.9.7\r\n* PyTorch version: 1.9.1\r\n* CUDA/cuDNN version: 10.2\r\n* GCC version: 7.5.0\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3473/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3473/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3441", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3441/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3441/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3441/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3441", "id": 1046126036, "node_id": "I_kwDOBlHMec4-Wp3U", "number": 3441, "title": "RuntimeError for knn on cuda when skipping last batch number", "user": {"login": "rkansal47", "id": 19512506, "node_id": "MDQ6VXNlcjE5NTEyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/19512506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkansal47", "html_url": "https://github.com/rkansal47", "followers_url": "https://api.github.com/users/rkansal47/followers", "following_url": "https://api.github.com/users/rkansal47/following{/other_user}", "gists_url": "https://api.github.com/users/rkansal47/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkansal47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkansal47/subscriptions", "organizations_url": "https://api.github.com/users/rkansal47/orgs", "repos_url": "https://api.github.com/users/rkansal47/repos", "events_url": "https://api.github.com/users/rkansal47/events{/privacy}", "received_events_url": "https://api.github.com/users/rkansal47/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2021-11-05T18:28:41Z", "updated_at": "2021-11-09T15:43:43Z", "closed_at": "2021-11-09T15:43:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nThe following RuntimeError occurs when performing a knn between two sets of bipartite graphs on cuda.\r\nI think I have narrowed it down to only occurring when either set of graphs has no nodes in the last batch.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/jovyan/weaver/knn_test.py\", line 9, in <module>\r\n    eidx = knn(sv_points, pf_points, 1, sv_batch, pf_batch)\r\nRuntimeError: The following operation failed in the TorchScript interpreter.\r\nTraceback of TorchScript (most recent call last):\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch_cluster/knn.py\", line 75, in knn\r\n        torch.cumsum(deg, 0, out=ptr_y[1:])\r\n\r\n    return torch.ops.torch_cluster.knn(x, y, ptr_x, ptr_y, k, cosine,\r\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE\r\n                                       num_workers)\r\nRuntimeError: ptr_x.value().numel() == ptr_y.value().numel()INTERNAL ASSERT FAILED at \"csrc/cuda/knn_cuda.cu\":106, please report a bug to PyTorch. Input mismatch\r\n```\r\n\r\n## To Reproduce\r\n\r\nExample code:\r\n\r\n```\r\nimport torch\r\nfrom torch_cluster import knn, knn_graph\r\n\r\npf_points = torch.rand(3, 2).cuda()\r\nsv_points = torch.rand(2, 2).cuda()\r\npf_batch = torch.tensor([0, 1, 1]).cuda()\r\n\r\nsv_batch = torch.tensor([1, 1]).cuda()  # this is ok\r\neidx = knn(sv_points, pf_points, 1, sv_batch, pf_batch)\r\n\r\nsv_batch = torch.tensor([0, 0]).cuda()  # will give an error\r\neidx = knn(sv_points, pf_points, 1, sv_batch, pf_batch)\r\n```\r\n\r\n## Expected behavior\r\n\r\nShouldn't give an error.\r\n\r\n## Environment\r\n\r\n* OS: Ubuntu 20.04.2\r\n* Python version: 3.9.5\r\n* PyTorch version: 1.9.0\r\n* CUDA/cuDNN version: 11.2\r\n* GCC version: -\r\n* Any other relevant information: -\r\n\r\n## Additional context\r\n\r\nSimilar to #3437, this specifically comes up for me when working with heterogeneous graphs with e.g. node types A and B, where occasionally some graphs may not have any nodes of type B, in which case the batch tensor for type B nodes will skip that graph number.\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3441/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3440", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3440/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3440/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3440/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3440", "id": 1046120832, "node_id": "I_kwDOBlHMec4-WomA", "number": 3440, "title": "Test edges are not excluded from train edges when using RandomLinkSplit.", "user": {"login": "panisson", "id": 715757, "node_id": "MDQ6VXNlcjcxNTc1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/715757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/panisson", "html_url": "https://github.com/panisson", "followers_url": "https://api.github.com/users/panisson/followers", "following_url": "https://api.github.com/users/panisson/following{/other_user}", "gists_url": "https://api.github.com/users/panisson/gists{/gist_id}", "starred_url": "https://api.github.com/users/panisson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/panisson/subscriptions", "organizations_url": "https://api.github.com/users/panisson/orgs", "repos_url": "https://api.github.com/users/panisson/repos", "events_url": "https://api.github.com/users/panisson/events{/privacy}", "received_events_url": "https://api.github.com/users/panisson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2021-11-05T18:22:33Z", "updated_at": "2021-11-08T08:56:42Z", "closed_at": "2021-11-08T08:56:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\nRandomLinkSplit should split the edges in three sets: train, validation and test. Test edges should be excluded from the train set, but in some circumstances they are included.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\nInitialize a Data object as undirected graph. Set the random seed and split into train, validation and test sets using RandomLinkSplit. Depending on the random seed, test edges are included in the train set.\r\n\r\n```\r\nimport torch\r\nimport torch_geometric\r\nfrom torch_geometric.data import Data\r\nfrom torch_geometric.transforms import RandomLinkSplit\r\n\r\ntorch_geometric.seed_everything(42)\r\n\r\nedge_index = torch.tensor([[0, 1, 1, 2, 2, 3, 3, 4, 4, 5],\r\n                           [1, 0, 2, 1, 3, 2, 4, 3, 5, 4]])\r\n\r\ndata = Data(edge_index=edge_index, num_nodes=10)\r\nprint(data.is_undirected())\r\n\r\ntransform = RandomLinkSplit(num_val=0.2, num_test=0.2, is_undirected=True, add_negative_train_samples=False)\r\ntrain_data, val_data, test_data = transform(data)\r\nprint(train_data.edge_index)\r\nprint(test_data.edge_label_index[:, test_data.edge_label==1])\r\n```\r\n\r\nResult:\r\n```\r\nTrue\r\ntensor([[1, 1, 2, 2, 0, 3],\r\n        [2, 0, 3, 1, 1, 2]])\r\ntensor([[2],\r\n        [1]])\r\n```\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well. -->\r\n\r\n## Expected behavior\r\n\r\nNo edge in the test_data.edge_label_index should be included in the train_data.edge_index, but the edge (1,2) is included in the train edges.\r\nThe result depends on the random seed. When initialized with other values, e.g. 1, the problem doesn't happen.\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\n* OS: macOS-11.6-x86_64-i386-64bit\r\n* Python version: Python 3.8.5\r\n* PyTorch version: 1.9.1\r\n* CUDA/cuDNN version: no cuda (no GPU)\r\n* GCC version: -\r\n* Any other relevant information: PyTorch Geometric version: 2.0.1\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3440/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3353", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3353/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3353/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3353/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3353", "id": 1032193352, "node_id": "PR_kwDOBlHMec4terOt", "number": 3353, "title": "Fix `MetaPath2Vec` with isolated nodes", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2021-10-21T08:14:06Z", "updated_at": "2021-10-21T08:57:26Z", "closed_at": "2021-10-21T08:57:25Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3353", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3353", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3353.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3353.patch", "merged_at": "2021-10-21T08:57:25Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3353/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3303", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3303/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3303/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3303/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3303", "id": 1019161682, "node_id": "I_kwDOBlHMec48vyxS", "number": 3303, "title": "yacs version is not 0.1.8", "user": {"login": "LingxiaoShawn", "id": 16176421, "node_id": "MDQ6VXNlcjE2MTc2NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/16176421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingxiaoShawn", "html_url": "https://github.com/LingxiaoShawn", "followers_url": "https://api.github.com/users/LingxiaoShawn/followers", "following_url": "https://api.github.com/users/LingxiaoShawn/following{/other_user}", "gists_url": "https://api.github.com/users/LingxiaoShawn/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingxiaoShawn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingxiaoShawn/subscriptions", "organizations_url": "https://api.github.com/users/LingxiaoShawn/orgs", "repos_url": "https://api.github.com/users/LingxiaoShawn/repos", "events_url": "https://api.github.com/users/LingxiaoShawn/events{/privacy}", "received_events_url": "https://api.github.com/users/LingxiaoShawn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, {"login": "JiaxuanYou", "id": 20088523, "node_id": "MDQ6VXNlcjIwMDg4NTIz", "avatar_url": "https://avatars.githubusercontent.com/u/20088523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JiaxuanYou", "html_url": "https://github.com/JiaxuanYou", "followers_url": "https://api.github.com/users/JiaxuanYou/followers", "following_url": "https://api.github.com/users/JiaxuanYou/following{/other_user}", "gists_url": "https://api.github.com/users/JiaxuanYou/gists{/gist_id}", "starred_url": "https://api.github.com/users/JiaxuanYou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JiaxuanYou/subscriptions", "organizations_url": "https://api.github.com/users/JiaxuanYou/orgs", "repos_url": "https://api.github.com/users/JiaxuanYou/repos", "events_url": "https://api.github.com/users/JiaxuanYou/events{/privacy}", "received_events_url": "https://api.github.com/users/JiaxuanYou/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2021-10-06T20:27:51Z", "updated_at": "2021-10-18T17:42:51Z", "closed_at": "2021-10-18T17:42:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey @rusty1s it seems PyG2.0 installs yacs=0.1.6,\r\nwhich is not good enough as the yacs.config does not allow hyperparameter=None. \r\nIf you can update the yacs to newest version 0.1.8 that would be great. ", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3303/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3298", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3298/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3298/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3298/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3298", "id": 1017936498, "node_id": "PR_kwDOBlHMec4syAsE", "number": 3298, "title": "Fix `num_nodes` warning in `PairData`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2021-10-06T09:52:37Z", "updated_at": "2021-10-06T10:02:13Z", "closed_at": "2021-10-06T10:02:12Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3298", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3298", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3298.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3298.patch", "merged_at": "2021-10-06T10:02:12Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3298/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3290", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3290/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3290/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3290/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3290", "id": 1015907094, "node_id": "I_kwDOBlHMec48jYMW", "number": 3290, "title": "Custom Model Registration in GraphGym", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "JiaxuanYou", "id": 20088523, "node_id": "MDQ6VXNlcjIwMDg4NTIz", "avatar_url": "https://avatars.githubusercontent.com/u/20088523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JiaxuanYou", "html_url": "https://github.com/JiaxuanYou", "followers_url": "https://api.github.com/users/JiaxuanYou/followers", "following_url": "https://api.github.com/users/JiaxuanYou/following{/other_user}", "gists_url": "https://api.github.com/users/JiaxuanYou/gists{/gist_id}", "starred_url": "https://api.github.com/users/JiaxuanYou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JiaxuanYou/subscriptions", "organizations_url": "https://api.github.com/users/JiaxuanYou/orgs", "repos_url": "https://api.github.com/users/JiaxuanYou/repos", "events_url": "https://api.github.com/users/JiaxuanYou/events{/privacy}", "received_events_url": "https://api.github.com/users/JiaxuanYou/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JiaxuanYou", "id": 20088523, "node_id": "MDQ6VXNlcjIwMDg4NTIz", "avatar_url": "https://avatars.githubusercontent.com/u/20088523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JiaxuanYou", "html_url": "https://github.com/JiaxuanYou", "followers_url": "https://api.github.com/users/JiaxuanYou/followers", "following_url": "https://api.github.com/users/JiaxuanYou/following{/other_user}", "gists_url": "https://api.github.com/users/JiaxuanYou/gists{/gist_id}", "starred_url": "https://api.github.com/users/JiaxuanYou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JiaxuanYou/subscriptions", "organizations_url": "https://api.github.com/users/JiaxuanYou/orgs", "repos_url": "https://api.github.com/users/JiaxuanYou/repos", "events_url": "https://api.github.com/users/JiaxuanYou/events{/privacy}", "received_events_url": "https://api.github.com/users/JiaxuanYou/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2021-10-05T05:35:40Z", "updated_at": "2021-10-06T17:41:50Z", "closed_at": "2021-10-06T17:41:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nThe custom model registration in GraphGym seems to be broken since the [`network_dict`](https://github.com/pyg-team/pytorch_geometric/blob/master/torch_geometric/graphgym/model_builder.py#L11) will be constructed before registering of custom models takes place. This should be fixable by registering internal models via `register_network` as well, and solely relying on `register.network_dict` for model bundling:\r\n```python\r\nregister.register_network('gnn', GNN)\r\n\r\n...\r\n\r\ndef create_model(...):\r\n    ...\r\n    model = register.network_dict[...]\r\n    ...\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3290/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3283", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3283/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3283/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3283/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3283", "id": 1014809595, "node_id": "PR_kwDOBlHMec4snzps", "number": 3283, "title": "fix `from_networkx` in case node and edge features share names", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2021-10-04T07:05:35Z", "updated_at": "2021-10-04T07:09:49Z", "closed_at": "2021-10-04T07:09:49Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3283", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3283", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3283.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3283.patch", "merged_at": "2021-10-04T07:09:49Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3283/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3248", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3248/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3248/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3248/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3248", "id": 1007967895, "node_id": "PR_kwDOBlHMec4sTgaz", "number": 3248, "title": "Fix `Batch` pickling errors", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2021-09-27T10:19:36Z", "updated_at": "2021-09-27T11:52:12Z", "closed_at": "2021-09-27T11:52:11Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3248", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3248", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3248.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3248.patch", "merged_at": "2021-09-27T11:52:11Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3248/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3241", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3241/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3241/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3241/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3241", "id": 1007399130, "node_id": "I_kwDOBlHMec48C7Da", "number": 3241, "title": "`pickle.PicklingError: Can't pickle <class 'torch_geometric.data.batch.Batch'>: it's not the same object as torch_geometric.data.batch.Batch`  error when calling Queue.get() in torch.multiprocessing ", "user": {"login": "RasmusOrsoe", "id": 48880272, "node_id": "MDQ6VXNlcjQ4ODgwMjcy", "avatar_url": "https://avatars.githubusercontent.com/u/48880272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RasmusOrsoe", "html_url": "https://github.com/RasmusOrsoe", "followers_url": "https://api.github.com/users/RasmusOrsoe/followers", "following_url": "https://api.github.com/users/RasmusOrsoe/following{/other_user}", "gists_url": "https://api.github.com/users/RasmusOrsoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/RasmusOrsoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RasmusOrsoe/subscriptions", "organizations_url": "https://api.github.com/users/RasmusOrsoe/orgs", "repos_url": "https://api.github.com/users/RasmusOrsoe/repos", "events_url": "https://api.github.com/users/RasmusOrsoe/events{/privacy}", "received_events_url": "https://api.github.com/users/RasmusOrsoe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2021-09-26T13:57:03Z", "updated_at": "2021-09-27T11:52:26Z", "closed_at": "2021-09-27T11:52:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n`pickle.PicklingError: Can't pickle <class 'torch_geometric.data.batch.Batch'>: it's not the same object as torch_geometric.data.batch.Batch` error when batches are used in `torch.multiprocessing.manager().Queue()`\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n```\r\nfrom torch_geometric.loader import DataLoader\r\nimport torch\r\nfrom torch.multiprocessing import Manager\r\nfrom torch_geometric.data import Data \r\n\r\nmanager = Manager()\r\nq = manager.Queue()\r\n\r\n\r\ngraph = Data(x = torch.tensor([1],dtype = torch.int))\r\n\r\ndata_list_train = [graph,graph,graph,graph]\r\n\r\nbatch_size = 2\r\nloader = DataLoader(data_list_train,batch_size = batch_size,drop_last=True)\r\nloader_it = iter(loader)\r\nfor k in range(0,len(loader)):\r\n    q.put(next(loader_it))\r\n\r\nbatch = q.get()\r\n```\r\n\r\nlast line yields `pickle.PicklingError: Can't pickle <class 'torch_geometric.data.batch.Batch'>: it's not the same object as torch_geometric.data.batch.Batch` \r\n\r\nUsed to work with\r\ntorch==1.7.1+cu110\r\ntorch-geometric==1.6.3\r\nPython 3.8.5\r\nCentOS Linux 7\r\ngcc (GCC) 6.1.0\r\n\r\n## Environment\r\ntorch-geometric 2.0.1\r\ntorch 1.9.1+cu111\r\nPython 3.8.5\r\nCentOS Linux 7\r\ngcc (GCC) 6.1.0\r\n\r\n## Additional context\r\n\r\nI know this message was mentioned in 2.0.1 (https://github.com/pyg-team/pytorch_geometric/issues/3143) but it still exists in this context.  This error is quite debilitating for my work :-(\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3241/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3241/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3228", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3228/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3228/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3228/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3228", "id": 1006041538, "node_id": "PR_kwDOBlHMec4sODn4", "number": 3228, "title": "Fix `Batch.to_data_list()` for scalar values", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2021-09-24T03:29:09Z", "updated_at": "2021-09-24T03:44:16Z", "closed_at": "2021-09-24T03:44:16Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3228", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3228", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3228.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3228.patch", "merged_at": "2021-09-24T03:44:16Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3228/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3214", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3214/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3214/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3214/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3214", "id": 1005137524, "node_id": "PR_kwDOBlHMec4sLSAl", "number": 3214, "title": "Fix `device` of `data.batch`", "user": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2021-09-23T08:12:57Z", "updated_at": "2021-09-23T08:59:29Z", "closed_at": "2021-09-23T08:59:29Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3214", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3214", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3214.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3214.patch", "merged_at": "2021-09-23T08:59:28Z"}, "body": null, "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3214/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3213", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3213/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3213/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3213/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3213", "id": 1005129633, "node_id": "I_kwDOBlHMec476Q-h", "number": 3213, "title": "Batch.from_data_list puts _batch attributes on the cpu", "user": {"login": "FreyrS", "id": 7414966, "node_id": "MDQ6VXNlcjc0MTQ5NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7414966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FreyrS", "html_url": "https://github.com/FreyrS", "followers_url": "https://api.github.com/users/FreyrS/followers", "following_url": "https://api.github.com/users/FreyrS/following{/other_user}", "gists_url": "https://api.github.com/users/FreyrS/gists{/gist_id}", "starred_url": "https://api.github.com/users/FreyrS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FreyrS/subscriptions", "organizations_url": "https://api.github.com/users/FreyrS/orgs", "repos_url": "https://api.github.com/users/FreyrS/repos", "events_url": "https://api.github.com/users/FreyrS/events{/privacy}", "received_events_url": "https://api.github.com/users/FreyrS/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-09-23T08:04:03Z", "updated_at": "2021-09-23T09:44:12Z", "closed_at": "2021-09-23T08:59:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI'm using pytorch_geometric 2.0.1 with torch 1.9.0.\r\nWhen I call Batch.from_data_list on a list of Data objects that are all on the gpu it puts the _batch attributes on the cpu.\r\nThis was not an issue with PyG 1.7.2 which I was using before.\r\n\r\nSteps to reproduce the behavior:\r\n\r\n```\r\nimport torch\r\nfrom torch_geometric.data import Data, Batch\r\n\r\ndata = Data()\r\ndata.x = torch.ones((3,3),device='cuda:0')\r\ndata_list = 3*[data]\r\n\r\nbatch = Batch.from_data_list(data_list,follow_batch=['x'])\r\n\r\nprint(batch.x.device)\r\nprint(batch.x_batch.device)\r\n```\r\n\r\nFor me this prints out:\r\ncuda:0\r\ncpu\r\n\r\n\r\n## Environment\r\n\r\n* OS: Linux\r\n* Python version: 3.7.7\r\n* PyTorch version: 1.9.0\r\n* CUDA/cuDNN version: 10.2/7.6.5.32\r\n* GCC version: 8.4.0\r\n\r\nThanks!\r\nFreyr\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3213/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3203", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3203/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3203/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3203/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3203", "id": 1004230403, "node_id": "PR_kwDOBlHMec4sIc0E", "number": 3203, "title": "Fix initialization of GeneralMultiLayer for graphgym MLP layer", "user": {"login": "fjulian", "id": 10942150, "node_id": "MDQ6VXNlcjEwOTQyMTUw", "avatar_url": "https://avatars.githubusercontent.com/u/10942150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fjulian", "html_url": "https://github.com/fjulian", "followers_url": "https://api.github.com/users/fjulian/followers", "following_url": "https://api.github.com/users/fjulian/following{/other_user}", "gists_url": "https://api.github.com/users/fjulian/gists{/gist_id}", "starred_url": "https://api.github.com/users/fjulian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fjulian/subscriptions", "organizations_url": "https://api.github.com/users/fjulian/orgs", "repos_url": "https://api.github.com/users/fjulian/repos", "events_url": "https://api.github.com/users/fjulian/events{/privacy}", "received_events_url": "https://api.github.com/users/fjulian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-09-22T12:21:17Z", "updated_at": "2021-09-23T04:21:17Z", "closed_at": "2021-09-23T04:21:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3203", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3203", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3203.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3203.patch", "merged_at": "2021-09-23T04:21:17Z"}, "body": "In graphgym MLP layer, a `GeneralMultiLayer` was not initialized correctly, using a `LayerConfig` object. This also led the `run_batch.sh` script to fail.\r\n\r\nThis PR fixes this. `run_batch.sh` runs successfully now.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3203/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3201", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3201/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3201/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3201/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3201", "id": 1004220851, "node_id": "PR_kwDOBlHMec4sIa4h", "number": 3201, "title": "graphgym: fix clash of run_dir naming", "user": {"login": "fjulian", "id": 10942150, "node_id": "MDQ6VXNlcjEwOTQyMTUw", "avatar_url": "https://avatars.githubusercontent.com/u/10942150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fjulian", "html_url": "https://github.com/fjulian", "followers_url": "https://api.github.com/users/fjulian/followers", "following_url": "https://api.github.com/users/fjulian/following{/other_user}", "gists_url": "https://api.github.com/users/fjulian/gists{/gist_id}", "starred_url": "https://api.github.com/users/fjulian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fjulian/subscriptions", "organizations_url": "https://api.github.com/users/fjulian/orgs", "repos_url": "https://api.github.com/users/fjulian/repos", "events_url": "https://api.github.com/users/fjulian/events{/privacy}", "received_events_url": "https://api.github.com/users/fjulian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-09-22T12:11:38Z", "updated_at": "2021-10-12T09:51:18Z", "closed_at": "2021-10-07T06:07:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/pulls/3201", "html_url": "https://github.com/pyg-team/pytorch_geometric/pull/3201", "diff_url": "https://github.com/pyg-team/pytorch_geometric/pull/3201.diff", "patch_url": "https://github.com/pyg-team/pytorch_geometric/pull/3201.patch", "merged_at": "2021-10-07T06:07:51Z"}, "body": "When running `graphgym/main.py` with multiple repetitions, the results of every run were overriding the previous run. The reason is that the `run_dir` name (where the results are written) depends on `cfg.seed`, which is not updated in between runs.\r\n\r\nThis PR fixes this by updating `cfg.seed` for every new repetition.\r\n\r\nFurthermore, the config file was always dumped to `out_dir`. Running another experiment with another config file, but the same `out_dir` would cause the previous (different) config file to be overwritten. The same holds for the log file. Especially in the case of running over a grid, the dumped config for each grid configuration was overwritten by the next configuration tested. Instead, each directory that saves the results for a specific configuration should also contain the corresponding config and log files.\r\n\r\nThis PR fixes this by dumping both config and log file into `out_dir/fname` where `fname` is the config file name. The single runs are also contained in this directory, under `out_dir/fname/1`, `out_dir/fname/2`, etc. IMHO it makes sense to keep the config file there.\r\n\r\nTest suite, `pycodestyle` and `flake8` were run. Tests pass. No new style issues in the files that are touched by this PR.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3201/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3200", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3200/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3200/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3200/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3200", "id": 1004201350, "node_id": "I_kwDOBlHMec472uWG", "number": 3200, "title": "Arguments number does not match in Hetero-gnn model", "user": {"login": "YAndrewL", "id": 61228120, "node_id": "MDQ6VXNlcjYxMjI4MTIw", "avatar_url": "https://avatars.githubusercontent.com/u/61228120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YAndrewL", "html_url": "https://github.com/YAndrewL", "followers_url": "https://api.github.com/users/YAndrewL/followers", "following_url": "https://api.github.com/users/YAndrewL/following{/other_user}", "gists_url": "https://api.github.com/users/YAndrewL/gists{/gist_id}", "starred_url": "https://api.github.com/users/YAndrewL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YAndrewL/subscriptions", "organizations_url": "https://api.github.com/users/YAndrewL/orgs", "repos_url": "https://api.github.com/users/YAndrewL/repos", "events_url": "https://api.github.com/users/YAndrewL/events{/privacy}", "received_events_url": "https://api.github.com/users/YAndrewL/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2021-09-22T11:51:02Z", "updated_at": "2021-09-22T12:27:15Z", "closed_at": "2021-09-22T12:26:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm now trying to create a HeteroConv class using a spatial GCN.\r\nHere's a structure of my data:\r\n```python\r\nBatch(\r\n  author={\r\n    x=[263, 566],\r\n    pos=[263, 3],\r\n    y=[263],\r\n    batch=[263],\r\n    ptr=[13]\r\n  },\r\n  paper={\r\n    x=[462, 566],\r\n    pos=[462, 3],\r\n    batch=[462],\r\n    ptr=[13]\r\n  },\r\n  (author, to, author)={ edge_index=[2, 759] },\r\n  (paper, to, paper)={ edge_index=[2, 2818] },\r\n  (author, to, paper)={ edge_index=[2, 707] },\r\n  (paper, to, author)={ edge_index=[2, 707] }\r\n)\r\n```\r\n\r\nAnd the spatial GCN is described [here](https://arxiv.org/abs/1909.05310) with a few modifications. The detailed codes are listed below, which is almost the same as the official implementation.\r\n\r\n```python\r\nclass SpatialGraphConv(MessagePassing):\r\n    def __init__(self, coors, in_channels, out_channels, dropout=0):\r\n        \"\"\"\r\n        coors - dimension of positional descriptors (e.g. 2 for 2D images)\r\n        in_channels - number of the input channels (node features)\r\n        out_channels - number of the output channels (node features)\r\n        hidden_size - number of the inner convolutions\r\n        dropout - dropout rate after the layer\r\n        \"\"\"\r\n        super(SpatialGraphConv, self).__init__(aggr='add')\r\n        self.dropout = dropout\r\n\r\n        self.lin_in = torch.nn.Linear(coors, in_channels)\r\n        self.lin_out = torch.nn.Linear(in_channels, out_channels)\r\n        self.in_channels = in_channels\r\n\r\n    def forward(self, x: tuple, edge_index, pos):\r\n        \"\"\"\r\n        x - feature matrix of the whole graph [num_nodes, label_dim]\r\n        pos - node position matrix [num_nodes, coors]\r\n        edge_index - graph connectivity [2, num_edges]\r\n        \"\"\"\r\n\r\n        # follow the implementation of hetero-gnn\r\n        x_src, x_dst = x\r\n        num_nodes = min(x_src.size(0), x_dst.size(0))\r\n        edge_index, _ = add_self_loops(edge_index, num_nodes)\r\n        return self.propagate(edge_index=edge_index, x=x, pos=pos, aggr='add')  # [N, out_channels, label_dim]\r\n\r\n    def message(self, pos_i, pos_j, x_j):\r\n        \"\"\"\r\n        pos_i [num_edges, coors]\r\n        pos_j [num_edges, coors]\r\n        x_j [num_edges, label_dim]\r\n        \"\"\"\r\n\r\n        relative_pos = pos_j - pos_i  # [n_edges, hidden_size * in_channels]\r\n        spatial_scaling = F.relu(self.lin_in(relative_pos))  # [n_edges, hidden_size * in_channels]\r\n\r\n        n_edges = spatial_scaling.size(0)\r\n        # [n_edges, in_channels, ...] * [n_edges, in_channels, 1]\r\n        result = spatial_scaling.reshape(n_edges, self.in_channels, -1) * x_j.unsqueeze(-1)\r\n        return result.view(n_edges, -1)\r\n\r\n    def update(self, aggr_out):\r\n        \"\"\"\r\n        aggr_out [num_nodes, label_dim, out_channels]\r\n        \"\"\"\r\n        aggr_out = self.lin_out(aggr_out)  # [num_nodes, label_dim, out_features]\r\n        aggr_out = F.relu(aggr_out)\r\n        aggr_out = F.dropout(aggr_out, p=self.dropout, training=self.training)\r\n\r\n        return aggr_out\r\n```\r\n\r\nBesides, I create a hetero-gnn model:\r\n\r\n```python\r\nclass HGCN(torch.nn.Module):\r\n\r\n    def __init__(self,in_channels, out_channels, num_layers):\r\n        super(HGCN, self).__init__()\r\n\r\n        self.convs = torch.nn.ModuleList()\r\n\r\n        for _ in range(num_layers):\r\n            conv = HeteroConv(\r\n                {\r\n                    ('paper', 'to', 'author'): SpatialGraphConv(coors=3,\r\n                                                                   in_channels=in_channels,\r\n                                                                   out_channels=out_channels),\r\n\r\n                }\r\n            )\r\n            self.convs.append(conv)\r\n......\r\n    def forward(self, x_dict, edge_index_dict, pos_dict):\r\n        for conv in self.convs:\r\n            x_dict = conv(x_dict, edge_index_dict, pos_dict)\r\n            x_dict = {key: F.elu(x) for key, x in x_dict.items()}\r\n      ......\r\n```\r\n\r\nAnd in train block, I pass x_dict, edge_index_dict, and pos_dict to the `HGCN` class, and the error happens `x_dict = conv(x_dict, edge_index_dict, pos_dict)` as `TypeError: forward() takes 3 positional arguments but 4 were given`, thus I'm figuring out what's wrong here, thanks a lot!", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3200/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3198", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3198/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3198/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3198/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3198", "id": 1004171500, "node_id": "I_kwDOBlHMec472nDs", "number": 3198, "title": "NeighborLoader PyG 2.0.1", "user": {"login": "dahe-cvl", "id": 56696613, "node_id": "MDQ6VXNlcjU2Njk2NjEz", "avatar_url": "https://avatars.githubusercontent.com/u/56696613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dahe-cvl", "html_url": "https://github.com/dahe-cvl", "followers_url": "https://api.github.com/users/dahe-cvl/followers", "following_url": "https://api.github.com/users/dahe-cvl/following{/other_user}", "gists_url": "https://api.github.com/users/dahe-cvl/gists{/gist_id}", "starred_url": "https://api.github.com/users/dahe-cvl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dahe-cvl/subscriptions", "organizations_url": "https://api.github.com/users/dahe-cvl/orgs", "repos_url": "https://api.github.com/users/dahe-cvl/repos", "events_url": "https://api.github.com/users/dahe-cvl/events{/privacy}", "received_events_url": "https://api.github.com/users/dahe-cvl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 3358957273, "node_id": "MDU6TGFiZWwzMzU4OTU3Mjcz", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/0%20-%20Priority%20P0", "name": "0 - Priority P0", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2021-09-22T11:16:47Z", "updated_at": "2021-09-23T12:35:10Z", "closed_at": "2021-09-23T12:35:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nHi,\r\n\r\nI am facing some issues with the new NeighborLoader (from torch_geometric.loader import NeighborLoader).\r\n\r\nI try to implement and train a node classification network.  I use the Cora dataset for setting up the environment and the first experiments. I can observe that the RAM memory increases with every epoch while loading the batches. \r\nFor larger graphs, different settings for num_neighbors the code runs into a RAM-overload issue.\r\n\r\nDo you know about the problem? Is there any workaround for it?\r\n\r\n## To Reproduce\r\n\r\nHere is a small code snippet to reproduce the behavior.\r\n\r\n```\r\ndataset = Planetoid(\"./data/Cora\", 'Cora', transform=T.NormalizeFeatures())\r\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\r\ntrain_loader = NeighborLoader(data,\r\n                                  num_neighbors=[10]*2,\r\n                                  batch_size=128,\r\n                                  input_nodes=data.train_mask,\r\n                                  shuffle=True,\r\n                                  num_workers=4,\r\n                                  replace=True,\r\n                                  directed=True\r\n                                )\r\nnum_epochs = 10000\r\nfor i in range(0, num_epochs):\r\n       for data_batch in train_loader:\r\n             print(data_batch)\r\n```\r\n    \r\n\r\n## Expected behavior\r\n\r\nI would expect that the memory does not increase with training time. It seems that the \"old\" batches are stored somewhere in the background. \r\n\r\nCan you reproduce the problem?\r\n\r\n## Environment\r\n\r\n* OS: Ubuntu 20.04.3 LTS \r\n* Python version: Python 3.8.10 \r\n* PyTorch version ( pytorch geometric):\r\ntorch                 1.8.0+cu101\r\ntorch-cluster         1.5.9\r\ntorch-geometric       2.0.1\r\ntorch-scatter         2.0.8\r\ntorch-sparse          0.6.12\r\ntorch-spline-conv     1.2.1\r\ntorchaudio            0.8.0\r\ntorchvision           0.9.0+cu101\r\n\r\nMany thanks in advance!\r\nBest regards\r\nDaniel\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3198/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3167", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3167/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3167/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3167/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3167", "id": 999197849, "node_id": "I_kwDOBlHMec47joyZ", "number": 3167, "title": "Heterogeneous neighbor loader - error", "user": {"login": "Vid201", "id": 38610409, "node_id": "MDQ6VXNlcjM4NjEwNDA5", "avatar_url": "https://avatars.githubusercontent.com/u/38610409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vid201", "html_url": "https://github.com/Vid201", "followers_url": "https://api.github.com/users/Vid201/followers", "following_url": "https://api.github.com/users/Vid201/following{/other_user}", "gists_url": "https://api.github.com/users/Vid201/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vid201/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vid201/subscriptions", "organizations_url": "https://api.github.com/users/Vid201/orgs", "repos_url": "https://api.github.com/users/Vid201/repos", "events_url": "https://api.github.com/users/Vid201/events{/privacy}", "received_events_url": "https://api.github.com/users/Vid201/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-09-17T10:26:56Z", "updated_at": "2021-09-17T11:25:42Z", "closed_at": "2021-09-17T11:21:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nError when doing per edge type neighbor sampling.\r\n\r\n```\r\nRuntimeError: torch_sparse::hetero_neighbor_sample() Expected a value of type 'Dict[str, List[int]]' for argument '_5' but instead found type 'dict'.\r\nPosition: 5\r\nValue: {('author', 'affiliated_with', 'institution'): [30, 30], ('author', 'writes', 'paper'): [30, 30], ('paper', 'cites', 'paper'): [30, 30], ('paper', 'has_topic', 'field_of_study'): [30, 30]}\r\nDeclaration: torch_sparse::hetero_neighbor_sample(str[] _0, (str, str, str)[] _1, Dict(str, Tensor) _2, Dict(str, Tensor) _3, Dict(str, Tensor) _4, Dict(str, int[]) _5, int _6, bool _7, bool _8) -> (Dict(str, Tensor) _0, Dict(str, Tensor) _1, Dict(str, Tensor) _2, Dict(str, Tensor) _3)\r\nCast error details: Unable to cast Python instance to C++ type (compile in debug mode for details)\r\n```\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Load OGB dataset.\r\n2. Init NeighborLoader with per edge type sizes.\r\n3. Sample one batch.\r\n\r\n```\r\nfrom torch_geometric.datasets import OGB_MAG\r\nfrom torch_geometric.loader import NeighborLoader\r\n\r\npath = '/random/path'\r\n\r\nhetero_data = OGB_MAG(path)[0]\r\n\r\nloader = NeighborLoader(\r\n    hetero_data,\r\n    # Sample 30 neighbors for each node and edge type for 2 iterations\r\n    num_neighbors={key: [30] * 2 for key in hetero_data.edge_types},\r\n    # Use a batch size of 128 for sampling training nodes of type paper\r\n    batch_size=128,\r\n    input_nodes=('paper', hetero_data['paper'].train_mask),\r\n)\r\n\r\nsampled_hetero_data = next(iter(loader))\r\n```\r\n\r\n## Expected behavior\r\n\r\nSampled batch.\r\n\r\n## Additional context\r\n\r\nVersions:\r\n\r\ntorch-geometric        2.0.1\r\ntorch-scatter          2.0.8\r\ntorch-sparse           0.6.12\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3167/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3143", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3143/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3143/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3143/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/3143", "id": 997366208, "node_id": "I_kwDOBlHMec47cpnA", "number": 3143, "title": "PicklingError in data loader when num_workers>0", "user": {"login": "arglog", "id": 52485173, "node_id": "MDQ6VXNlcjUyNDg1MTcz", "avatar_url": "https://avatars.githubusercontent.com/u/52485173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arglog", "html_url": "https://github.com/arglog", "followers_url": "https://api.github.com/users/arglog/followers", "following_url": "https://api.github.com/users/arglog/following{/other_user}", "gists_url": "https://api.github.com/users/arglog/gists{/gist_id}", "starred_url": "https://api.github.com/users/arglog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arglog/subscriptions", "organizations_url": "https://api.github.com/users/arglog/orgs", "repos_url": "https://api.github.com/users/arglog/repos", "events_url": "https://api.github.com/users/arglog/events{/privacy}", "received_events_url": "https://api.github.com/users/arglog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-09-15T18:01:41Z", "updated_at": "2021-09-25T19:35:46Z", "closed_at": "2021-09-15T20:09:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nPyG 2.0.0 Dataloader raises errors when `num_workers` is greater 0\r\n\r\n## To Reproduce\r\nRun the script below (notice that `num_workers=1`)\r\n```python\r\nfrom torch_geometric.datasets import TUDataset\r\nfrom torch_geometric.loader import DataLoader\r\n\r\ndataset = TUDataset(root='/tmp/ENZYMES', name='ENZYMES', use_node_attr=True)\r\nloader = DataLoader(dataset, batch_size=32, shuffle=True, num_workers=1)\r\n\r\nfor batch in loader:\r\n    print(batch)\r\n    break\r\n```\r\n\r\nThe above script will trigger the following error\r\n```\r\nTraceback (most recent call last):\r\n  File \"/mnt/software/anaconda3/lib/python3.7/multiprocessing/queues.py\", line 236, in _feed\r\n    obj = _ForkingPickler.dumps(obj)\r\n  File \"/mnt/software/anaconda3/lib/python3.7/multiprocessing/reduction.py\", line 51, in dumps\r\n    cls(buf, protocol).dump(obj)\r\n_pickle.PicklingError: Can't pickle <class 'torch_geometric.data.batch.Batch'>: it's not the same object as torch_geometric.data.batch.Batch\r\n```\r\n\r\n## Expected behavior\r\nSee above\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\n* OS: Ubuntu 16.04\r\n* Python version: 3.8\r\n* PyTorch version: py3.7_cuda11.1_cudnn8.0.5_0\r\n* CUDA/cuDNN version: CUDA 11.1, cuDNN 8.0.5\r\n* GCC version: 5.4.1\r\n* PyG version: 2.0.0\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/3143/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1801", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1801/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1801/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1801/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/1801", "id": 737396669, "node_id": "MDU6SXNzdWU3MzczOTY2Njk=", "number": 1801, "title": "When num_hyperedges is greater than num_nodes, HypergraphConv cannot work", "user": {"login": "liulixinkerry", "id": 20508677, "node_id": "MDQ6VXNlcjIwNTA4Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/20508677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liulixinkerry", "html_url": "https://github.com/liulixinkerry", "followers_url": "https://api.github.com/users/liulixinkerry/followers", "following_url": "https://api.github.com/users/liulixinkerry/following{/other_user}", "gists_url": "https://api.github.com/users/liulixinkerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/liulixinkerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liulixinkerry/subscriptions", "organizations_url": "https://api.github.com/users/liulixinkerry/orgs", "repos_url": "https://api.github.com/users/liulixinkerry/repos", "events_url": "https://api.github.com/users/liulixinkerry/events{/privacy}", "received_events_url": "https://api.github.com/users/liulixinkerry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-11-06T02:01:59Z", "updated_at": "2021-05-01T10:09:56Z", "closed_at": "2021-05-01T10:09:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\nWhen num_hyperedges`M` is greater than num_nodes`N`, HypergraphConv cannot work.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\nWhen I add hyperedge `4` in https://github.com/rusty1s/pytorch_geometric/blob/master/test/nn/conv/test_hypergraph_conv.py , the program crashes.\r\n```python\r\n  \r\nimport torch\r\nfrom torch_geometric.nn import HypergraphConv\r\n\r\ndef test_hypergraph_conv():\r\n    in_channels, out_channels = (16, 32)\r\n    hyperedge_index = torch.tensor([[0, 0, 1, 1, 2, 3, 3, 3, 2, 1 ,2], [0, 1, 2, 1, 2, 1, 0, 3, 3, 4, 4]])\r\n    num_nodes = hyperedge_index[0].max().item() + 1\r\n    x = torch.randn((num_nodes, in_channels))\r\n\r\n    conv = HypergraphConv(in_channels, out_channels)\r\n    assert conv.__repr__() == 'HypergraphConv(16, 32)'\r\n    out = conv(x, hyperedge_index)\r\n    assert out.size() == (num_nodes, out_channels)\r\n\r\n\r\n    conv = HypergraphConv(in_channels, out_channels, use_attention=True,\r\n                          heads=2)\r\n    out = conv(x, hyperedge_index)\r\n    assert out.size() == (num_nodes, 2 * out_channels)\r\n\r\n    print(\"finish\")\r\n\r\nif __name__ == \"__main__\":\r\n    test_hypergraph_conv()\r\n```\r\n\r\nlog:\r\n```bash\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 24, in <module>\r\n    test_hypergraph_conv()\r\n  File \"test.py\", line 12, in test_hypergraph_conv\r\n    out = conv(x, hyperedge_index)\r\n  File \"/home/user/anaconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 727, in _call_impl\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/user/anaconda3/lib/python3.8/site-packages/torch_geometric/nn/conv/hypergraph_conv.py\", line 126, in forward\r\n    out = self.propagate(hyperedge_index, x=x, norm=B, alpha=alpha)\r\n  File \"/home/user/anaconda3/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py\", line 252, in propagate\r\n    out = self.aggregate(out, **aggr_kwargs)\r\n  File \"/home/user/anaconda3/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py\", line 286, in aggregate\r\n    return scatter(inputs, index, dim=self.node_dim, dim_size=dim_size,\r\n  File \"/home/user/anaconda3/lib/python3.8/site-packages/torch_scatter/scatter.py\", line 152, in scatter\r\n    return scatter_sum(src, index, dim, out, dim_size)\r\nRuntimeError: The following operation failed in the TorchScript interpreter.\r\nTraceback of TorchScript (most recent call last):\r\n  File \"/home/user/anaconda3/lib/python3.8/site-packages/torch_scatter/scatter.py\", line 22, in scatter_sum\r\n            size[dim] = int(index.max()) + 1\r\n        out = torch.zeros(size, dtype=src.dtype, device=src.device)\r\n        return out.scatter_add_(dim, index, src)\r\n               ~~~~~~~~~~~~~~~~ <--- HERE\r\n    else:\r\n        return out.scatter_add_(dim, index, src)\r\nRuntimeError: index 4 is out of bounds for dimension 0 with size 4\r\n```\r\n\r\nWhen removing hyperedge `4`, the program works perfectly. \r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well. -->\r\n\r\n## Expected behavior\r\nHypergraphConv can handle the incidence matrix `\\mathbf{H} \\in {\\{ 0, 1 \\}}^{N \\times M}` whose `M` is greater than `N`.\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\n* OS: Linux\r\n* Python version: 3.8\r\n* PyTorch version: 1.7.0\r\n* CUDA/cuDNN version: 11.0\r\n* GCC version: 5.5\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1801/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1718", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1718/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1718/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1718/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/1718", "id": 719852811, "node_id": "MDU6SXNzdWU3MTk4NTI4MTE=", "number": 1718, "title": "Not found error for torch_sparse::ptr2ind in torchscript", "user": {"login": "Nanco-L", "id": 20216572, "node_id": "MDQ6VXNlcjIwMjE2NTcy", "avatar_url": "https://avatars.githubusercontent.com/u/20216572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nanco-L", "html_url": "https://github.com/Nanco-L", "followers_url": "https://api.github.com/users/Nanco-L/followers", "following_url": "https://api.github.com/users/Nanco-L/following{/other_user}", "gists_url": "https://api.github.com/users/Nanco-L/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nanco-L/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nanco-L/subscriptions", "organizations_url": "https://api.github.com/users/Nanco-L/orgs", "repos_url": "https://api.github.com/users/Nanco-L/repos", "events_url": "https://api.github.com/users/Nanco-L/events{/privacy}", "received_events_url": "https://api.github.com/users/Nanco-L/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 1267385588, "node_id": "MDU6TGFiZWwxMjY3Mzg1NTg4", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/feature", "name": "feature", "color": "a2eeef", "default": false, "description": ""}, {"id": 3358956745, "node_id": "MDU6TGFiZWwzMzU4OTU2NzQ1", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mananshah99", "id": 3421635, "node_id": "MDQ6VXNlcjM0MjE2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3421635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mananshah99", "html_url": "https://github.com/mananshah99", "followers_url": "https://api.github.com/users/mananshah99/followers", "following_url": "https://api.github.com/users/mananshah99/following{/other_user}", "gists_url": "https://api.github.com/users/mananshah99/gists{/gist_id}", "starred_url": "https://api.github.com/users/mananshah99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mananshah99/subscriptions", "organizations_url": "https://api.github.com/users/mananshah99/orgs", "repos_url": "https://api.github.com/users/mananshah99/repos", "events_url": "https://api.github.com/users/mananshah99/events{/privacy}", "received_events_url": "https://api.github.com/users/mananshah99/received_events", "type": "User", "site_admin": false}, {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 32, "created_at": "2020-10-13T04:35:08Z", "updated_at": "2022-05-06T12:34:01Z", "closed_at": "2022-03-21T14:32:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \u2753 Questions & Help\r\n\r\n<!-- A clear and concise description of the question. -->\r\n\r\nI tried to use pytorch model with `MessagePassing` layer in C++ code.\r\nAs described in pytorch_geometric documentation,\r\nI generate torch model with my own MP layer and successfully convert the model.\r\n\r\nBut in the process of executing C++ code, I face the error like below:\r\n\r\n```\r\nUnknown builtin op: torch_sparse::ptr2ind.\r\nCould not find any similar ops to torch_sparse::ptr2ind. This op may not exist or may not be currently supported in TorchScript.\r\n:\r\n  File \"/home/sr6/kyuhyun9.lee/env_ML/lib/python3.6/site-packages/torch_sparse/storage.py\", line 166\r\n        rowptr = self._rowptr\r\n        if rowptr is not None:\r\n            row = torch.ops.torch_sparse.ptr2ind(rowptr, self._col.numel())\r\n                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE\r\n            self._row = row\r\n            return row\r\nSerialized   File \"code/__torch__/torch_sparse/storage.py\", line 825\r\n      if torch.__isnot__(rowptr, None):\r\n        rowptr13 = unchecked_cast(Tensor, rowptr)\r\n        row15 = ops.torch_sparse.ptr2ind(rowptr13, torch.numel(self._col))\r\n                ~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE\r\n        self._row = row15\r\n        _150, _151 = True, row15\r\n'SparseStorage.row' is being compiled since it was called from 'SparseStorage.__init__'\r\n  File \"/home/sr6/kyuhyun9.lee/env_ML/lib/python3.6/site-packages/torch_sparse/storage.py\", line 133\r\n        if not is_sorted:\r\n            idx = self._col.new_zeros(self._col.numel() + 1)\r\n            idx[1:] = self._sparse_sizes[1] * self.row() + self._col\r\n                                              ~~~~~~~~ <--- HERE\r\n            if (idx[1:] < idx[:-1]).any():\r\n                perm = idx[1:].argsort()\r\nSerialized   File \"code/__torch__/torch_sparse/storage.py\", line 267\r\n      idx = torch.new_zeros(self._col, [_29], dtype=None, layout=None, device=None, pin_memory=None)\r\n      _30 = (self._sparse_sizes)[1]\r\n      _31 = torch.add(torch.mul((self).row(), _30), self._col, alpha=1)\r\n                                 ~~~~~~~~~~ <--- HERE\r\n      _32 = torch.slice(idx, 0, 1, 9223372036854775807, 1)\r\n      _33 = torch.copy_(_32, _31, False)\r\n'SparseStorage.__init__' is being compiled since it was called from 'GINLayerJittable_d54f76.__check_input____1'\r\nSerialized   File \"code/__torch__/GINLayerJittable_d54f76.py\", line 40\r\n      pass\r\n    return the_size\r\n  def __check_input____1(self: __torch__.GINLayerJittable_d54f76.GINLayerJittable_d54f76,\r\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...  <--- HERE\r\n    edge_index: __torch__.torch_sparse.tensor.SparseTensor,\r\n    size: Optional[Tuple[int, int]]) -> List[Optional[int]]:\r\n\r\nAborted (core dumped)\r\n\r\n```\r\n\r\nSince I have no experience of pytorch jit, I cannot find any clue to solve this.\r\nHow can I handle this error?", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1718/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1716", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1716/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1716/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1716/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/1716", "id": 719181989, "node_id": "MDU6SXNzdWU3MTkxODE5ODk=", "number": 1716, "title": "SNAPDataset not working", "user": {"login": "Magolor", "id": 25860372, "node_id": "MDQ6VXNlcjI1ODYwMzcy", "avatar_url": "https://avatars.githubusercontent.com/u/25860372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Magolor", "html_url": "https://github.com/Magolor", "followers_url": "https://api.github.com/users/Magolor/followers", "following_url": "https://api.github.com/users/Magolor/following{/other_user}", "gists_url": "https://api.github.com/users/Magolor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Magolor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Magolor/subscriptions", "organizations_url": "https://api.github.com/users/Magolor/orgs", "repos_url": "https://api.github.com/users/Magolor/repos", "events_url": "https://api.github.com/users/Magolor/events{/privacy}", "received_events_url": "https://api.github.com/users/Magolor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-10-12T08:30:59Z", "updated_at": "2020-10-17T16:45:02Z", "closed_at": "2020-10-14T14:13:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nusing `torch_geometric.datasets.SNAPDataset` with dataset name \"ego-twitter\" and \"ego-gplus\" results in an error.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n```\r\nimport torch_geometric.datasets as DS\r\n\r\ndata = DS.SNAPDataset(\"data/\",name=\"ego-gplus\")\r\n```\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well. -->\r\n\r\n## Expected behavior\r\n\r\ne.g.: the \"ego-twitter\" configuration would lead to:\r\n```\r\nKeyError: 83943787\r\n```\r\n\r\n## Environment\r\n\r\n* OS: Linux\r\n* Python version: 3.8.3\r\n* PyTorch version: 1.6.0\r\n* CUDA/cuDNN version: 10.1\r\n* GCC version:\r\n* Any other relevant information:\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1716/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1548", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1548/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1548/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1548/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/1548", "id": 682256918, "node_id": "MDU6SXNzdWU2ODIyNTY5MTg=", "number": 1548, "title": "[BUG] knn_graph number of edges not equal to N*k (cosine=True)", "user": {"login": "lizichao7", "id": 10020749, "node_id": "MDQ6VXNlcjEwMDIwNzQ5", "avatar_url": "https://avatars.githubusercontent.com/u/10020749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lizichao7", "html_url": "https://github.com/lizichao7", "followers_url": "https://api.github.com/users/lizichao7/followers", "following_url": "https://api.github.com/users/lizichao7/following{/other_user}", "gists_url": "https://api.github.com/users/lizichao7/gists{/gist_id}", "starred_url": "https://api.github.com/users/lizichao7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lizichao7/subscriptions", "organizations_url": "https://api.github.com/users/lizichao7/orgs", "repos_url": "https://api.github.com/users/lizichao7/repos", "events_url": "https://api.github.com/users/lizichao7/events{/privacy}", "received_events_url": "https://api.github.com/users/lizichao7/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-08-20T00:02:03Z", "updated_at": "2021-02-02T08:12:03Z", "closed_at": "2020-08-24T06:37:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \u2753 Questions & Help\r\n\r\nSuppose the node feature matrix X is N by F, then the number of edges in the edge_index returned by knn_graph(X, k) should be k*N, right? Because there are N nodes, and for each node we add k edges, and the edges are directed. Am I missing something about the definition of knn graph? \r\n\r\nTo be more specific, I am using cosine=True, and N = 7400, F = 1024, k = 10. I should be getting 74000 edges, but I got 81389 edges. I would really appreciate any help that could explain the difference.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1548/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1380", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1380/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1380/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1380/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/1380", "id": 646717943, "node_id": "MDU6SXNzdWU2NDY3MTc5NDM=", "number": 1380, "title": "Batch.to_data_list() for bipartite graph", "user": {"login": "a060146251", "id": 33903364, "node_id": "MDQ6VXNlcjMzOTAzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/33903364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a060146251", "html_url": "https://github.com/a060146251", "followers_url": "https://api.github.com/users/a060146251/followers", "following_url": "https://api.github.com/users/a060146251/following{/other_user}", "gists_url": "https://api.github.com/users/a060146251/gists{/gist_id}", "starred_url": "https://api.github.com/users/a060146251/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a060146251/subscriptions", "organizations_url": "https://api.github.com/users/a060146251/orgs", "repos_url": "https://api.github.com/users/a060146251/repos", "events_url": "https://api.github.com/users/a060146251/events{/privacy}", "received_events_url": "https://api.github.com/users/a060146251/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-27T17:07:47Z", "updated_at": "2020-07-01T09:31:39Z", "closed_at": "2020-07-01T09:27:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \u2753 Questions & Help\r\n\r\n<!-- A clear and concise description of the question. -->\r\nHello, Sorry to have another question.\r\n\r\nI ran the Bipartite example (shown here: https://pytorch-geometric.readthedocs.io/en/latest/notes/batching.html?highlight=bipartite#bipartite-graphs).\r\n\r\n```\r\nclass BipartiteData(Data):\r\n    def __init__(self, edge_attr=None, edge_index=None, x_s=None, x_t=None, x=None, pos=None, **kwargs):\r\n        super(BipartiteData, self).__init__(x=x, edge_attr=edge_attr, pos=pos, **kwargs)\r\n        self.edge_index = edge_index\r\n        self.x_s = x_s\r\n        self.x_t = x_t\r\n\r\n    def __inc__(self, key, value):\r\n        if key == 'edge_index':\r\n            return torch.tensor([[self.x_s.size(0)], [self.x_t.size(0)]])\r\n        else:\r\n            return super(BipartiteData, self).__inc__(key, value)\r\n```\r\nIn my code, I am using graph.to_data_list() function to get the list of graphs, but I met a problem when the to_data_list() function in batch.py [https://github.com/rusty1s/pytorch_geometric/blob/0229b609cd2880d9d5ba439fc45bacc4f3205c6e/torch_geometric/data/batch.py#L119](url) are going to call `__inc__` function, then it raised an error `AttributeError: 'NoneType' object has no attribute 'size'`.\r\n\r\nHow can I do for this situation? \r\n\r\nBest regards!\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1380/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1358", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1358/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1358/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1358/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/1358", "id": 643115153, "node_id": "MDU6SXNzdWU2NDMxMTUxNTM=", "number": 1358, "title": "EdgeConv implementation error  in test(loader) method", "user": {"login": "Raverss", "id": 11135306, "node_id": "MDQ6VXNlcjExMTM1MzA2", "avatar_url": "https://avatars.githubusercontent.com/u/11135306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Raverss", "html_url": "https://github.com/Raverss", "followers_url": "https://api.github.com/users/Raverss/followers", "following_url": "https://api.github.com/users/Raverss/following{/other_user}", "gists_url": "https://api.github.com/users/Raverss/gists{/gist_id}", "starred_url": "https://api.github.com/users/Raverss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Raverss/subscriptions", "organizations_url": "https://api.github.com/users/Raverss/orgs", "repos_url": "https://api.github.com/users/Raverss/repos", "events_url": "https://api.github.com/users/Raverss/events{/privacy}", "received_events_url": "https://api.github.com/users/Raverss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-22T14:24:31Z", "updated_at": "2020-06-24T11:34:31Z", "closed_at": "2020-06-24T11:34:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nEdgeConv implementation [line](https://github.com/rusty1s/pytorch_geometric/blob/949f52aa9b5a9daff0d93398e57be775dc082a62/examples/dgcnn_segmentation.py#L107) throws `IndexError: The shape of the mask [50] at index 0 does not match the shape of the indexed tensor [4] at index 0`.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Run [file](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/dgcnn_segmentation.py).\r\n2. Wait until the end of the first epoch for `test(loader)` call.\r\n\r\n## Expected behavior\r\n\r\nCalculation of the accuracy and IoU at the given epoch.\r\n\r\n## Environment\r\n\r\n* OS: Ubuntu 18.04\r\n* Python version: 3.7\r\n* PyTorch version: 1.5.0\r\n* CUDA/cuDNN version: 10.2/7.6\r\n* GCC version: 7.5.0\r\n\r\n## Additional context\r\n\r\nI'm new to the PyTorch but it seems that replacing following lines:\r\n```\r\ni = intersection[j, loader.dataset.y_mask[category[j]]]\r\nu = union[j, loader.dataset.y_mask[category[j]]]\r\n```\r\nwith\r\n```\r\ni = intersection[j, loader.dataset.y_mask[category[j], :4]]\r\nu = union[j, loader.dataset.y_mask[category[j], :4]]\r\n```\r\nfixes crashing and give reasonable results (I'm not sure how I'm new to PyTorch). I reckon that `'Airplane': [0,1,2,3]` corresponds to `:4`. I don't know how to generalize to make it work for list of categories.", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1358/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1054", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1054/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1054/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1054/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/1054", "id": 585945478, "node_id": "MDU6SXNzdWU1ODU5NDU0Nzg=", "number": 1054, "title": "Example code: an illegal memory access was encountered", "user": {"login": "yanghtr", "id": 30250600, "node_id": "MDQ6VXNlcjMwMjUwNjAw", "avatar_url": "https://avatars.githubusercontent.com/u/30250600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanghtr", "html_url": "https://github.com/yanghtr", "followers_url": "https://api.github.com/users/yanghtr/followers", "following_url": "https://api.github.com/users/yanghtr/following{/other_user}", "gists_url": "https://api.github.com/users/yanghtr/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanghtr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanghtr/subscriptions", "organizations_url": "https://api.github.com/users/yanghtr/orgs", "repos_url": "https://api.github.com/users/yanghtr/repos", "events_url": "https://api.github.com/users/yanghtr/events{/privacy}", "received_events_url": "https://api.github.com/users/yanghtr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-03-23T05:38:11Z", "updated_at": "2022-08-26T07:15:20Z", "closed_at": "2020-03-30T03:42:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Follows the instructions to install pytorch_geometric\r\n2. download `pytorch_geometric/examples/pointnet2_classification.py`\r\n3. run `CUDA_VISIBLE_DEVICES=0  python pointnet2_classification.py`\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well. -->\r\n\r\n## Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\nThe network should be trained successfully. However, it shows the error:\r\n```\r\nTHCudaCheck FAIL file=/pytorch/aten/src/THC/THCReduceAll.cuh line=327 error=700 : an illegal memory access was encountered\r\nTraceback (most recent call last):\r\n  File \"pointnet2_classification.py\", line 115, in <module>\r\n    train(epoch)\r\n  File \"pointnet2_classification.py\", line 82, in train\r\n    loss = F.nll_loss(model(data), data.y)\r\n  File \"/home/***/miniconda2/envs/pytorch14/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 532, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"pointnet2_classification.py\", line 63, in forward\r\n    sa1_out = self.sa1_module(*sa0_out)\r\n  File \"/home/***/miniconda2/envs/pytorch14/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 532, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"pointnet2_classification.py\", line 22, in forward\r\n    max_num_neighbors=64)\r\n  File \"/home/***/miniconda2/envs/pytorch14/lib/python3.6/site-packages/torch_geometric/nn/pool/__init__.py\", line 159, in radius\r\n    return torch_cluster.radius(x, y, r, batch_x, batch_y, max_num_neighbors)\r\n  File \"/home/***/miniconda2/envs/pytorch14/lib/python3.6/site-packages/torch_cluster/radius.py\", line 54, in radius\r\n    batch_size = int(batch_x.max()) + 1\r\nRuntimeError: cuda runtime error (700) : an illegal memory access was encountered at /pytorch/aten/src/THC/THCReduceAll.cuh:327\r\n```\r\n\r\nI also try `CUDA_LAUNCH_BLOCKING=1` to track where the error occur. The error message is:\r\n```\r\nTraceback (most recent call last):\r\n  File \"pointnet2_classification.py\", line 115, in <module>\r\n    train(epoch)\r\n  File \"pointnet2_classification.py\", line 82, in train\r\n    loss = F.nll_loss(model(data), data.y)\r\n  File \"/home/***/miniconda2/envs/pytorch14/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 532, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"pointnet2_classification.py\", line 63, in forward\r\n    sa1_out = self.sa1_module(*sa0_out)\r\n  File \"/home/***/miniconda2/envs/pytorch14/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 532, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"pointnet2_classification.py\", line 21, in forward\r\n    row, col = radius(pos, pos[idx], self.r, batch, batch[idx],\r\nRuntimeError: CUDA error: an illegal memory access was encountered\r\n```\r\n\r\n## Environment\r\n\r\n* OS: Ubuntu 16.04\r\n* Python version: 3.6\r\n* PyTorch version: 1.4.0\r\n* CUDA/cuDNN version: CUDA 10.1, cudnn 7.5\r\n* GCC version: 5.4.0\r\n* Any other relevant information: I use miniconda, and create an environment of python3.6\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/1054/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/889", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/889/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/889/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/889/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/889", "id": 545288390, "node_id": "MDU6SXNzdWU1NDUyODgzOTA=", "number": 889, "title": "apply transform on DynamicFAUST dataset", "user": {"login": "yairkit", "id": 28948269, "node_id": "MDQ6VXNlcjI4OTQ4MjY5", "avatar_url": "https://avatars.githubusercontent.com/u/28948269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yairkit", "html_url": "https://github.com/yairkit", "followers_url": "https://api.github.com/users/yairkit/followers", "following_url": "https://api.github.com/users/yairkit/following{/other_user}", "gists_url": "https://api.github.com/users/yairkit/gists{/gist_id}", "starred_url": "https://api.github.com/users/yairkit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yairkit/subscriptions", "organizations_url": "https://api.github.com/users/yairkit/orgs", "repos_url": "https://api.github.com/users/yairkit/repos", "events_url": "https://api.github.com/users/yairkit/events{/privacy}", "received_events_url": "https://api.github.com/users/yairkit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-04T14:02:24Z", "updated_at": "2020-01-05T18:30:27Z", "closed_at": "2020-01-05T18:30:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "when run the following code for:\r\n\r\n`dataset = DynamicFAUST(root=d_faust_path, subjects=subjects, categories=categories, transform=T.RandomShear(0.07))`\r\n\r\n`dataset[0]`\r\n\r\nI get:\r\n\r\n> AssertionError: Node position matrix and transformation matrix have incompatible shape.\r\n\r\nthis is due to the fact that\r\n**transform()** expect **data['pos']** to be of shape **[num_of_ponts, dim]**\r\nbut **DynamicFaust** returns **data['pos']** of shape **[num_of_frames, num_of_ponts, dim]**\r\n\r\nis there another built-in way to use augmentations transform for this dataset?\r\n\r\nThanks!", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/889/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/830", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/830/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/830/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/830/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/830", "id": 529027146, "node_id": "MDU6SXNzdWU1MjkwMjcxNDY=", "number": 830, "title": "Failure modes of from_networkx", "user": {"login": "seyuboglu", "id": 32822771, "node_id": "MDQ6VXNlcjMyODIyNzcx", "avatar_url": "https://avatars.githubusercontent.com/u/32822771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seyuboglu", "html_url": "https://github.com/seyuboglu", "followers_url": "https://api.github.com/users/seyuboglu/followers", "following_url": "https://api.github.com/users/seyuboglu/following{/other_user}", "gists_url": "https://api.github.com/users/seyuboglu/gists{/gist_id}", "starred_url": "https://api.github.com/users/seyuboglu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seyuboglu/subscriptions", "organizations_url": "https://api.github.com/users/seyuboglu/orgs", "repos_url": "https://api.github.com/users/seyuboglu/repos", "events_url": "https://api.github.com/users/seyuboglu/events{/privacy}", "received_events_url": "https://api.github.com/users/seyuboglu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}, {"id": 1267385588, "node_id": "MDU6TGFiZWwxMjY3Mzg1NTg4", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/feature", "name": "feature", "color": "a2eeef", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-26T23:27:47Z", "updated_at": "2020-01-06T19:05:25Z", "closed_at": "2020-01-06T19:05:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \u2753 Questions & Help\r\n\r\nHi! What kinds of networkx graphs are expected to work with `from_networkx`. Right now, the documentation just says that it expects a networkx graph, but there are definitely some networkx graphs for which it doesn't work:\r\n\r\n **Graphs without contiguous node labels**:\r\nThe following cell runs without error. Except the output is a little funky-\r\n```\r\nfrom torch_geometric.utils.convert import from_networkx\r\nimport networkx as nx \r\n\r\n# build an nx graph \r\ngraph = nx.Graph()\r\ngraph.add_node(4)\r\ngraph.add_node(2)\r\ngraph.add_node(6)\r\ngraph.add_edge(4, 6)\r\ngraph.add_edge(2, 6)\r\nfor node in graph.nodes():\r\n    graph.nodes[node][\"x\"] = node\r\n\r\n# convert to pyg\r\ndata = from_networkx(graph)   \r\nprint(f\"X: {data.x}\")\r\nprint(f\"Edge index: {data.edge_index}\")\r\n```\r\nThe output is:\r\n```\r\nX: tensor([4, 2, 6])\r\nEdge index: tensor([[4, 2, 6, 6],\r\n        [6, 6, 4, 2]])\r\n```\r\nThe node indices in the edge_index have no correspondence with the order of the nodes in the feature matrix `x`. It seems to me like `from_networkx` is dependent on: (1) node labels of nx.Graph being consecutive numbers (i.e. from 0 to len(graph) - 1) and (2) that graph.nodes() returns these nodes in order. That being said, perhaps I am missing something with how Data is being used in message passing etc. In either case, I think it would be helpful to add a note in the documentation about the kinds of networkx graphs the function will work with. \r\n\r\n **Graphs without edges**:\r\nThe following crashes with a `IndexError: list index out of range` \r\n```\r\nfrom torch_geometric.utils.convert import from_networkx\r\nimport networkx as nx \r\n\r\ngraph = nx.Graph()\r\ngraph.add_node(1)\r\ngraph.add_node(2)\r\nfrom_networkx(graph)\r\n```\r\n\r\n**Graphs with non-numeric node labels**\r\nCrashes with `ValueError: too many dimensions 'str'`\r\n```\r\nfrom torch_geometric.utils.convert import from_networkx\r\nimport networkx as nx \r\n\r\n# build an nx graph \r\ngraph = nx.Graph()\r\ngraph.add_node(\"4\")\r\ngraph.add_node(\"2\")\r\ngraph.add_edge(\"4\", \"2\")\r\n\r\n# convert to pyg\r\ndata = from_networkx(graph)\r\n```\r\nThanks!!", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/830/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/681", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/681/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/681/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/681/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/681", "id": 492408282, "node_id": "MDU6SXNzdWU0OTI0MDgyODI=", "number": 681, "title": "ARGA constructor issue", "user": {"login": "mbahri", "id": 5632341, "node_id": "MDQ6VXNlcjU2MzIzNDE=", "avatar_url": "https://avatars.githubusercontent.com/u/5632341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbahri", "html_url": "https://github.com/mbahri", "followers_url": "https://api.github.com/users/mbahri/followers", "following_url": "https://api.github.com/users/mbahri/following{/other_user}", "gists_url": "https://api.github.com/users/mbahri/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbahri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbahri/subscriptions", "organizations_url": "https://api.github.com/users/mbahri/orgs", "repos_url": "https://api.github.com/users/mbahri/repos", "events_url": "https://api.github.com/users/mbahri/events{/privacy}", "received_events_url": "https://api.github.com/users/mbahri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-11T18:52:46Z", "updated_at": "2019-09-30T10:18:26Z", "closed_at": "2019-09-30T10:18:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nInstantiating an ARGA object raises `AttributeError: cannot assign module before Module.__init__() call\r\n`\r\n```\r\n    268     def __init__(self, encoder, discriminator, decoder=None):\r\n--> 269         self.discriminator = discriminator\r\n    270         super(ARGA, self).__init__(encoder, decoder)\r\n    271         reset(self.discriminator)\r\n```\r\n\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Define an Encoder module\r\n2. Define a Discriminator module\r\n3. try to call ARGA(Encoder(), Discriminator())\r\n\r\n```\r\nclass Encoder(torch.nn.Module):\r\n    def __init__(self, in_channels, out_channels):\r\n        super(Encoder, self).__init__()\r\n        self.conv1 = GCNConv(in_channels, 2 * out_channels, cached=True)\r\n        self.conv2 = GCNConv(2 * out_channels, out_channels, cached=True)\r\n\r\n    def forward(self, x, edge_index):\r\n        x = F.relu(self.conv1(x, edge_index))\r\n        return self.conv2(x, edge_index)\r\n\r\nclass Discriminator(torch.nn.Module):\r\n    def __init__(self, in_channels):\r\n        super(Discriminator, self).__init__()\r\n        \r\n        self.fc1 = nn.Linear(in_channels, 2*in_channels)\r\n        self.fc2 = nn.Linear(2*in_channels, in_channels)\r\n        self.fc3 = nn.Linear(in_channels, 1)\r\n        \r\n    def forward(self, input):\r\n        x = F.relu(self.fc1(input))\r\n        x = F.relu(self.fc2(x))\r\n        x = self.fc3(x)\r\n        \r\n        return x\r\n\r\nmodel = ARGA(Encoder(dataset.num_features, channels), Discriminator(channels))\r\n# -> Exception\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe model should be instantiated with the provided encoder and discriminator. Manually setting the object properties and re-initializing the model parameters works:\r\n\r\n```\r\nmodel = ARGA(Encoder(dataset.num_features, channels), None)\r\nmodel.discriminator = Discriminator(channels)\r\nmodel.to(dev)\r\nmodel.reset_parameters()\r\n\r\n# -> Works\r\n```\r\n\r\n## Environment\r\n\r\n* OS: Ubuntu 18.04\r\n* Python version: 3.7.3\r\n* PyTorch version: 1.1.0\r\n* CUDA/cuDNN version: 10.0.130 / 7.5.0.56\r\n* GCC version: 7.4.0\r\n* Any other relevant information: N/A\r\n\r\n## Additional context\r\n\r\nN/A\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/681/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/629", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/629/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/629/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/629", "id": 481858641, "node_id": "MDU6SXNzdWU0ODE4NTg2NDE=", "number": 629, "title": "device of 'edge_index' is changed when' edge_index' is empty", "user": {"login": "ZongweiZhou1", "id": 28044312, "node_id": "MDQ6VXNlcjI4MDQ0MzEy", "avatar_url": "https://avatars.githubusercontent.com/u/28044312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZongweiZhou1", "html_url": "https://github.com/ZongweiZhou1", "followers_url": "https://api.github.com/users/ZongweiZhou1/followers", "following_url": "https://api.github.com/users/ZongweiZhou1/following{/other_user}", "gists_url": "https://api.github.com/users/ZongweiZhou1/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZongweiZhou1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZongweiZhou1/subscriptions", "organizations_url": "https://api.github.com/users/ZongweiZhou1/orgs", "repos_url": "https://api.github.com/users/ZongweiZhou1/repos", "events_url": "https://api.github.com/users/ZongweiZhou1/events{/privacy}", "received_events_url": "https://api.github.com/users/ZongweiZhou1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-08-17T07:27:06Z", "updated_at": "2019-08-24T16:33:09Z", "closed_at": "2019-08-24T16:33:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n\r\n```\r\nimport torch\r\nfrom torch_geometric.nn import EdgeConv\r\nimport torch.nn as nn\r\nimport torch.nn.functional as F\r\nfrom torch_geometric.data import Data\r\n\r\nclass MLP(nn.Module):\r\n    def __init__(self, F_in, F_out):\r\n        super(MLP, self).__init__()\r\n        self.mlp = nn.Sequential(\r\n            nn.Linear(2 * F_in, F_out),\r\n            nn.ReLU(inplace=True))\r\n\r\n    def forward(self, x):\r\n        return self.mlp(x)\r\n\r\nclass TestBlock(nn.Module):\r\n    def __init__(self, F_in, F_out):\r\n        super(TestBlock, self).__init__()\r\n        self.edge_conv1 = EdgeConv(MLP(F_in, F_out),aggr='mean')\r\n        self.edge_conv2 = EdgeConv(MLP(F_out, F_out), aggr='mean') \r\n        self.fc = nn.Linear(F_out, 16)\r\n        \r\n    def forward(self, data):\r\n        x = data.x\r\n        edge_index = data.edge_index \r\n        x = self.edge_conv1(x, edge_index)\r\n        x = self.fc(self.edge_conv2(x, edge_index))\r\n        return x\r\n\r\nd = torch.device('cuda:1')\r\nblock = TestBlock(4, 8).to(d)\r\nedge_index = torch.tensor([[], []], dtype=torch.long)\r\ndata = Data(x=x, edge_index=edge_index)\r\ny = block(data.to(d))\r\n```\r\n\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well. -->\r\n```\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-34-d1a9b2a113f2> in <module>\r\n      1 edge_index = torch.tensor([[], []], dtype=torch.long)\r\n      2 data = Data(x=x, edge_index=edge_index)\r\n----> 3 y = block(data.to(d))\r\n      4 print(y)\r\n      5 print(data.edge_index.data)\r\n\r\n~/miniconda3/envs/py36_pytorch110/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\r\n    491             result = self._slow_forward(*input, **kwargs)\r\n    492         else:\r\n--> 493             result = self.forward(*input, **kwargs)\r\n    494         for hook in self._forward_hooks.values():\r\n    495             hook_result = hook(self, input, result)\r\n\r\n<ipython-input-31-b450444a54a6> in forward(self, data)\r\n     24         edge_index = data.edge_index\r\n     25         x = self.edge_conv1(x, edge_index)\r\n---> 26         x = self.fc(self.edge_conv2(x, edge_index))\r\n     27         return x\r\n\r\n~/miniconda3/envs/py36_pytorch110/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\r\n    491             result = self._slow_forward(*input, **kwargs)\r\n    492         else:\r\n--> 493             result = self.forward(*input, **kwargs)\r\n    494         for hook in self._forward_hooks.values():\r\n    495             hook_result = hook(self, input, result)\r\n\r\n~/miniconda3/envs/py36_pytorch110/lib/python3.6/site-packages/torch_geometric/nn/conv/edge_conv.py in forward(self, x, edge_index)\r\n     42         x = x.unsqueeze(-1) if x.dim() == 1 else x\r\n     43 \r\n---> 44         return self.propagate(edge_index, x=x)\r\n     45 \r\n     46     def message(self, x_i, x_j):\r\n\r\n~/miniconda3/envs/py36_pytorch110/lib/python3.6/site-packages/torch_geometric/nn/conv/message_passing.py in propagate(self, edge_index, size, **kwargs)\r\n     99                         raise ValueError(__size_error_msg__)\r\n    100 \r\n--> 101                     tmp = torch.index_select(tmp, 0, edge_index[idx])\r\n    102                     message_args.append(tmp)\r\n    103             else:\r\n\r\nRuntimeError: arguments are located on different GPUs at /opt/conda/conda-bld/pytorch_1556653183467/work/aten/src/THC/generic/THCTensorIndex.cu:521\r\n'''\r\n\r\n## Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\n* OS:   Linux 16.04\r\n* Python version:  3.6\r\n* PyTorch version: 1.1.0\r\n* CUDA/cuDNN version:  9.0\r\n* GCC version:  5.4.0\r\n* Any other relevant information:\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\nMaybe there are some problems in initialization, and I find some interesting thing in the function:\r\n `gen` in  `torch_scatter/utils/gen.py`\r\n\r\n```\r\ndef gen(src, index, dim=-1, out=None, dim_size=None, fill_value=0):\r\n    dim = range(src.dim())[dim]  # Get real dim value.\r\n\r\n    # Automatically expand index tensor to the right dimensions.\r\n    if index.dim() == 1:\r\n        index_size = list(repeat(1, src.dim()))\r\n        index_size[dim] = src.size(dim)\r\n        index = index.view(index_size).expand_as(src)\r\n\r\n    # Generate output tensor if not given.\r\n    if out is None:\r\n        out_size = list(src.size())\r\n        dim_size = maybe_dim_size(index, dim_size)\r\n        out_size[dim] = dim_size\r\n        out = src.new_full(out_size, fill_value)\r\n\r\n    return src, out, index, dim\r\n```\r\n\r\nThe device of the index.data is 'cuda:1' before `index.view(index_size)` , but after that it changes to 'cuda:0' while the device of `index` is still 'cuda:1'. \r\n\r\n\r\nB.T.W, if the 'edge_index` of the first sample fed to the network is not empty , the bug is gone.\r\n\r\n```\r\nedge_index = torch.tensor([[0], [1]], dtype=torch.long)\r\ndata = Data(x=x, edge_index=edge_index)\r\ny = block(data.to(d))\r\nedge_index = torch.tensor([[], []], dtype=torch.long)\r\ndata = Data(x=x, edge_index=edge_index)\r\ny = block(data.to(d))\r\nprint(y.device)\r\nprint(data.edge_index.data)\r\n```\r\n\r\n\r\nThe output:\r\n```\r\ncuda:1\r\ntensor([], device='cuda:1', size=(2, 0), dtype=torch.int64)\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/629/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/527", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/527/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/527/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/527/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/527", "id": 468510488, "node_id": "MDU6SXNzdWU0Njg1MTA0ODg=", "number": 527, "title": "GATConv costs huge gpu memory", "user": {"login": "sw-gong", "id": 39670256, "node_id": "MDQ6VXNlcjM5NjcwMjU2", "avatar_url": "https://avatars.githubusercontent.com/u/39670256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sw-gong", "html_url": "https://github.com/sw-gong", "followers_url": "https://api.github.com/users/sw-gong/followers", "following_url": "https://api.github.com/users/sw-gong/following{/other_user}", "gists_url": "https://api.github.com/users/sw-gong/gists{/gist_id}", "starred_url": "https://api.github.com/users/sw-gong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sw-gong/subscriptions", "organizations_url": "https://api.github.com/users/sw-gong/orgs", "repos_url": "https://api.github.com/users/sw-gong/repos", "events_url": "https://api.github.com/users/sw-gong/events{/privacy}", "received_events_url": "https://api.github.com/users/sw-gong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-07-16T08:12:13Z", "updated_at": "2019-07-18T15:52:29Z", "closed_at": "2019-07-18T15:52:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is there any reason for GATConv costing huge GPU memory? My model has only 6 layers of GATConv with around 10k parameters, but it costs more than 32GB GPU memory with 16 batch size. If I replace two of layers with nn.Linear, it would have 4M parameters but only cost 27GB memory. \r\n\r\nIt seems there is no broadcasting issues in GATConv implementation. What's the possible issue?", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/527/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/500", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/500/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/500/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/500", "id": 465437298, "node_id": "MDU6SXNzdWU0NjU0MzcyOTg=", "number": 500, "title": "Reparametrization in VGAE model can cause NAN's", "user": {"login": "joeybose", "id": 4626167, "node_id": "MDQ6VXNlcjQ2MjYxNjc=", "avatar_url": "https://avatars.githubusercontent.com/u/4626167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joeybose", "html_url": "https://github.com/joeybose", "followers_url": "https://api.github.com/users/joeybose/followers", "following_url": "https://api.github.com/users/joeybose/following{/other_user}", "gists_url": "https://api.github.com/users/joeybose/gists{/gist_id}", "starred_url": "https://api.github.com/users/joeybose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joeybose/subscriptions", "organizations_url": "https://api.github.com/users/joeybose/orgs", "repos_url": "https://api.github.com/users/joeybose/repos", "events_url": "https://api.github.com/users/joeybose/events{/privacy}", "received_events_url": "https://api.github.com/users/joeybose/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-07-08T20:08:30Z", "updated_at": "2019-07-11T05:23:25Z", "closed_at": "2019-07-11T05:23:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \u2753 Questions & Help\r\n\r\nWhile, the implementation of the reparametrization is clean and conventional it can potentially lead to `NaN's` as the `self.__logvar__` term is not controlled. This behavior is dependent on the use case, and for the most part will not cause problems for many applications but I believe a better fix could be something like to add another line after : https://github.com/rusty1s/pytorch_geometric/blob/master/torch_geometric/nn/models/autoencoder.py#L231 \r\n```\r\n self.__logvar__ = torch.clamp(self.__logvar__,min=LOG_VAR_MIN,max=LOG_VAR_MAX)\r\n```\r\nWhere, `LOG_VAR_MIN` and `LOG_VAR_MAX` are suitable constants. This prevents numerical issues (underflow/overflow) that can happen during optimization.\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/500/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/471", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/471/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/471/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/471/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/471", "id": 462490205, "node_id": "MDU6SXNzdWU0NjI0OTAyMDU=", "number": 471, "title": "Issue with examples/pointnet2_part_seg.py", "user": {"login": "imankgoyal", "id": 23709936, "node_id": "MDQ6VXNlcjIzNzA5OTM2", "avatar_url": "https://avatars.githubusercontent.com/u/23709936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imankgoyal", "html_url": "https://github.com/imankgoyal", "followers_url": "https://api.github.com/users/imankgoyal/followers", "following_url": "https://api.github.com/users/imankgoyal/following{/other_user}", "gists_url": "https://api.github.com/users/imankgoyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/imankgoyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imankgoyal/subscriptions", "organizations_url": "https://api.github.com/users/imankgoyal/orgs", "repos_url": "https://api.github.com/users/imankgoyal/repos", "events_url": "https://api.github.com/users/imankgoyal/events{/privacy}", "received_events_url": "https://api.github.com/users/imankgoyal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-01T03:12:46Z", "updated_at": "2019-07-01T14:11:54Z", "closed_at": "2019-07-01T06:58:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \u2753 Questions & Help\r\n\r\n<!-- A clear and concise description of the question. -->\r\nHi, \r\n\r\nI was running the pointnet++ part segmentation example with catergory=None (according to https://github.com/rusty1s/pytorch_geometric/pull/359). However, I find the performance to be unusually high (much higher than reported values, https://arxiv.org/pdf/1801.07791.pdf, supplementary page 3 for pointnet++). Am I interpreting the results in the wrong way or is there some bug in the evaluation code? \r\n\r\nThanks!\r\n<img width=\"370\" alt=\"Screen Shot 2019-06-30 at 11 11 11 PM\" src=\"https://user-images.githubusercontent.com/23709936/60408354-8c1dca00-9b8c-11e9-818a-def1e52b051c.png\">\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/471/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/319", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/319/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/319/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/319", "id": 445821065, "node_id": "MDU6SXNzdWU0NDU4MjEwNjU=", "number": 319, "title": "Bug in voxel grid generation", "user": {"login": "dhorka", "id": 39189267, "node_id": "MDQ6VXNlcjM5MTg5MjY3", "avatar_url": "https://avatars.githubusercontent.com/u/39189267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhorka", "html_url": "https://github.com/dhorka", "followers_url": "https://api.github.com/users/dhorka/followers", "following_url": "https://api.github.com/users/dhorka/following{/other_user}", "gists_url": "https://api.github.com/users/dhorka/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhorka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhorka/subscriptions", "organizations_url": "https://api.github.com/users/dhorka/orgs", "repos_url": "https://api.github.com/users/dhorka/repos", "events_url": "https://api.github.com/users/dhorka/events{/privacy}", "received_events_url": "https://api.github.com/users/dhorka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-19T13:37:08Z", "updated_at": "2019-05-22T09:52:50Z", "closed_at": "2019-05-22T06:05:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have one doubt regarding the voxel grid. In some of my point clouds this error is triggered: \r\n\r\n```\r\nFile \"/home/dhorka/phd/code/test_pool.py\", line 251, in forward                                                                                   \r\n    data = avg_pool(cluster, data)\r\n  File \"/home/dhorka/venv/pytorch11_geometric/lib/python3.6/site-packages/torch_geometric/nn/pool/avg_pool.py\", line 61, in avg_pool                                                       \r\n    index, attr = pool_edge(cluster, data.edge_index, data.edge_attr)\r\n  File \"/home/dhorka/venv/pytorch11_geometric/lib/python3.6/site-packages/torch_geometric/nn/pool/pool.py\", line 11, in pool_edge                                                          \r\n    num_nodes)\r\n  File \"/home/dhorka/venv/pytorch11_geometric/lib/python3.6/site-packages/torch_sparse/coalesce.py\", line 29, in coalesce                                                                  \r\n    _, perm = unique(row * n + col)\r\n  File \"/home/dhorka/venv/pytorch11_geometric/lib/python3.6/site-packages/torch_sparse/utils/unique.py\", line 12, in unique                                                                \r\n    out, perm = torch_sparse.unique_cuda.unique(src)\r\nRuntimeError: cuda runtime error (9) : invalid configuration argument at /home/dhorka/libs/pytorch/aten/src/THC/generic/THCTensorMathReduce.cu:293                                      \r\n```\r\n\r\nIn order to replicate the error in a more controlled environment I found that, this error is triggered when the voxel grid acts as a global pooling , it is only one grid required to aggroup all the nodes.  The following code is what I used:\r\n\r\n```\r\ncluster = voxel_grid(data.pos, data.batch, 100, start = -10e7,end = 10e7)\r\n data.edge_attr = None                                                                                                                                      \r\n data = avg_pool(cluster, data)\r\n\r\n```\r\n\r\nIs there anything that I am doing wrong? Is it intended this behaviour? I know that there is a specific method to go a global pooling, but it is not my intention to do a global pooling, but some times due to the density of my point cloud, only one grid is required.\r\n\r\nThanks", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/319/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/312", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/312/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/312/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/312", "id": 445683236, "node_id": "MDU6SXNzdWU0NDU2ODMyMzY=", "number": 312, "title": "Sending empty list to parallel model causes segmentation fault", "user": {"login": "senhuiguo", "id": 35631258, "node_id": "MDQ6VXNlcjM1NjMxMjU4", "avatar_url": "https://avatars.githubusercontent.com/u/35631258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/senhuiguo", "html_url": "https://github.com/senhuiguo", "followers_url": "https://api.github.com/users/senhuiguo/followers", "following_url": "https://api.github.com/users/senhuiguo/following{/other_user}", "gists_url": "https://api.github.com/users/senhuiguo/gists{/gist_id}", "starred_url": "https://api.github.com/users/senhuiguo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/senhuiguo/subscriptions", "organizations_url": "https://api.github.com/users/senhuiguo/orgs", "repos_url": "https://api.github.com/users/senhuiguo/repos", "events_url": "https://api.github.com/users/senhuiguo/events{/privacy}", "received_events_url": "https://api.github.com/users/senhuiguo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-18T06:01:04Z", "updated_at": "2019-05-22T05:53:39Z", "closed_at": "2019-05-22T05:53:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "all latest package, with pytorch-1.1.0 and cuda9.0\r\n\r\nsnippet:\r\n\r\n```python\r\nimport torch_geometric.nn as tg_nn\r\nnet = tg_nn.GCNConv(1,1).cuda()\r\nnet = tg_nn.DataParallel(net)\r\nnet([])\r\n```", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/312/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/291", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/291/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/291/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/291", "id": 443031580, "node_id": "MDU6SXNzdWU0NDMwMzE1ODA=", "number": 291, "title": "issues on dense_diff_pool function", "user": {"login": "PandaGuang", "id": 37118818, "node_id": "MDQ6VXNlcjM3MTE4ODE4", "avatar_url": "https://avatars.githubusercontent.com/u/37118818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PandaGuang", "html_url": "https://github.com/PandaGuang", "followers_url": "https://api.github.com/users/PandaGuang/followers", "following_url": "https://api.github.com/users/PandaGuang/following{/other_user}", "gists_url": "https://api.github.com/users/PandaGuang/gists{/gist_id}", "starred_url": "https://api.github.com/users/PandaGuang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PandaGuang/subscriptions", "organizations_url": "https://api.github.com/users/PandaGuang/orgs", "repos_url": "https://api.github.com/users/PandaGuang/repos", "events_url": "https://api.github.com/users/PandaGuang/events{/privacy}", "received_events_url": "https://api.github.com/users/PandaGuang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-11T20:05:35Z", "updated_at": "2019-05-22T06:42:48Z", "closed_at": "2019-05-22T06:42:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to run  pytorch_geometric/examples/enzymes_diff_pool.py , but I came across an issue, which is below,\r\n\r\nx, adj, l1, e1 = dense_diff_pool(x, adj, s, mask)\r\nValueError: not enough values to unpack (expected 4, got 3)\r\n\r\nI read the description of this function on Pytorch Geometric Documentation and it states that the function dense_diff_pool is supposed to return 4 output, but running the code, it only gives 3.\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/291/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/156", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/156/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/156/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/156", "id": 425631850, "node_id": "MDU6SXNzdWU0MjU2MzE4NTA=", "number": 156, "title": "No data assigned to some GPUs when using DataParallel", "user": {"login": "1zb", "id": 4254703, "node_id": "MDQ6VXNlcjQyNTQ3MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4254703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1zb", "html_url": "https://github.com/1zb", "followers_url": "https://api.github.com/users/1zb/followers", "following_url": "https://api.github.com/users/1zb/following{/other_user}", "gists_url": "https://api.github.com/users/1zb/gists{/gist_id}", "starred_url": "https://api.github.com/users/1zb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1zb/subscriptions", "organizations_url": "https://api.github.com/users/1zb/orgs", "repos_url": "https://api.github.com/users/1zb/repos", "events_url": "https://api.github.com/users/1zb/events{/privacy}", "received_events_url": "https://api.github.com/users/1zb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-26T20:25:10Z", "updated_at": "2019-03-27T11:09:16Z", "closed_at": "2019-03-27T11:09:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n```\r\nTypeError: descriptor 'union' of 'set' object needs an argument\r\n```\r\nLine 23 of `torch_geometric/data/batch.py`\r\n\r\n## To Reproduce\r\n\r\nThis error happens when using `torch_geometric.nn.DataParallel`.\r\n\r\nSuppose we have 4 GPUs and 4 graphs (`num_nodes`: `[2, 3, 10, 4]`). The function `scatter` from `torch_geometric/nn/data_parallel.py` gives `split=[0, 2, 2, 3, 4]`, which means we assign two graphs to `GPU:0` and no graph to `GPU:1`.\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well. -->\r\n\r\n## Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\n* OS:\r\n* Python version:\r\n* PyTorch version:\r\n* CUDA/cuDNN version:\r\n* GCC version:\r\n* Any other relevant information:\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/156/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/154", "repository_url": "https://api.github.com/repos/pyg-team/pytorch_geometric", "labels_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/154/comments", "events_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/154/events", "html_url": "https://github.com/pyg-team/pytorch_geometric/issues/154", "id": 425532774, "node_id": "MDU6SXNzdWU0MjU1MzI3NzQ=", "number": 154, "title": "How to redo VGAE by using Pytorch_geometric", "user": {"login": "AllenWu18", "id": 46603893, "node_id": "MDQ6VXNlcjQ2NjAzODkz", "avatar_url": "https://avatars.githubusercontent.com/u/46603893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AllenWu18", "html_url": "https://github.com/AllenWu18", "followers_url": "https://api.github.com/users/AllenWu18/followers", "following_url": "https://api.github.com/users/AllenWu18/following{/other_user}", "gists_url": "https://api.github.com/users/AllenWu18/gists{/gist_id}", "starred_url": "https://api.github.com/users/AllenWu18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AllenWu18/subscriptions", "organizations_url": "https://api.github.com/users/AllenWu18/orgs", "repos_url": "https://api.github.com/users/AllenWu18/repos", "events_url": "https://api.github.com/users/AllenWu18/events{/privacy}", "received_events_url": "https://api.github.com/users/AllenWu18/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 712483737, "node_id": "MDU6TGFiZWw3MTI0ODM3Mzc=", "url": "https://api.github.com/repos/pyg-team/pytorch_geometric/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-03-26T16:48:20Z", "updated_at": "2019-03-27T09:01:14Z", "closed_at": "2019-03-27T09:00:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \u2753 Questions & Help\r\n\r\n<!-- A clear and concise description of the question. -->\r\nHi, I tried to redo the VGAE in \"Variational Graph Auto-Encoders\"<https://arxiv.org/abs/1611.07308>\r\nI found  the class VGAE in the code torch_geometric/nn/models/autoencoder.py\r\nand I followed the example tutorial of building GAE with pytorch_geometric, and the code is like following:\r\n\r\nimport os.path as osp\r\nimport torch\r\nimport torch.nn.functional as F\r\nfrom torch_geometric.datasets import Planetoid\r\nimport torch_geometric.transforms as T\r\nfrom torch_geometric.nn import GCNConv, GAE,VGAE\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nfrom sklearn.manifold import TSNE\r\n\r\n\r\ndataset = 'Cora'\r\npath = osp.join(osp.dirname(osp.realpath(__file__)), '..', 'data', dataset)\r\ndataset = Planetoid(path, dataset, T.NormalizeFeatures())\r\ndata = dataset[0]\r\n\r\n#the dataset has been normalization\r\n\r\nlabel=data.y.data.numpy() #to get the label of each node,then draw them\r\n\r\n\r\nclass Encoder(torch.nn.Module):\r\n    def __init__(self, in_channels, out_channels):\r\n        super(Encoder, self).__init__()\r\n        self.out_channels = out_channels\r\n        self.conv1 = GCNConv(in_channels,2 * out_channels)\r\n        self.conv2_mu = GCNConv(2 * out_channels, out_channels) \r\n        self.conv2_sig = GCNConv(2 * out_channels, out_channels)\r\n\r\n    def forward(self, x, edge_index):\r\n        x = F.relu(self.conv1(x, edge_index))\r\n        x_mu = self.conv2_mu(x,edge_index)\r\n        x_sig = self.conv2_sig(x,edge_index)\r\n\r\n        return x_mu,x_sig\r\n\r\n\r\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\r\nmodel = VGAE(Encoder(dataset.num_features, out_channels=16)).to(device)\r\ndata.train_mask = data.val_mask = data.test_mask = data.y = None\r\ndata = model.split_edges(data)\r\nx, edge_index = data.x.to(device), data.edge_index.to(device)\r\noptimizer = torch.optim.Adam(model.parameters(), lr=0.01)\r\n\r\n\r\ndef train():\r\n    model.train()\r\n    optimizer.zero_grad()\r\n    mu,logvar= model.encode(x, edge_index)\r\n    re_graph = model.sample(mu,logvar)\r\n    loss = model.recon_loss(mu, logvar,\r\n                            data.train_pos_edge_index, \r\n                            data.train_neg_adj_mask) + model.kl_loss(mu,logvar)\r\n                            \r\n    loss.backward()\r\n    optimizer.step()\r\n    return re_graph\r\n\r\ndef test(pos_edge_index, neg_edge_index):\r\n    model.eval()\r\n    with torch.no_grad():\r\n        mu,logvar = model.encode(x, edge_index)\r\n        re_graph = model.sample(mu,logvar)\r\n    return model.test(re_graph, pos_edge_index, neg_edge_index)\r\n\r\nfor epoch in range(1, 201):\r\n    if epoch == 200:\r\n        latent=train()\r\n    else:\r\n        train()\r\n    auc, ap = test(data.val_pos_edge_index, data.val_neg_edge_index)\r\n    print('Epoch: {:03d}, AUC: {:.4f}, AP: {:.4f}'.format(epoch, auc, ap))\r\n\r\nauc, ap = test(data.test_pos_edge_index, data.test_neg_edge_index)\r\nprint('Test AUC: {:.4f}, Test AP: {:.4f}'.format(auc, ap))\r\n\r\nbut the final result couldn't reach the results in the paper.(Actually I just got AUC:0.789 and AP 0.786)\r\nand I puzzled is there any small mistakes in the loss function??\r\nfor the KL loss, I think it may suppose to be:\r\n def kl_loss(self, mu, logvar):\r\n        return -0.5/2708 * torch.mean(torch.sum(1 + 2 * logvar - mu.pow(2) - logvar.exp().pow(2),1)),\r\nwhich the 2708 is the number of nodes in Cora \r\nbut it didn't work either.\r\n:(\r\nSo can you use the class VGAE to redo the work and tell me?\r\nI think may be there are some questions in auto encoder.py, not the main function.\r\nThank you very much!!\r\nHope for your reply!", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/issues/154/timeline", "performed_via_github_app": null, "state_reason": "completed"}]