[{"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1860", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1860/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1860/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1860/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1860", "id": 964319761, "node_id": "MDU6SXNzdWU5NjQzMTk3NjE=", "number": 1860, "title": "Remove universal=1 from setup.cfg to avoid bogus wheel filenames claiming Python 2 support?", "user": {"login": "YKdvd", "id": 4149559, "node_id": "MDQ6VXNlcjQxNDk1NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/4149559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YKdvd", "html_url": "https://github.com/YKdvd", "followers_url": "https://api.github.com/users/YKdvd/followers", "following_url": "https://api.github.com/users/YKdvd/following{/other_user}", "gists_url": "https://api.github.com/users/YKdvd/gists{/gist_id}", "starred_url": "https://api.github.com/users/YKdvd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YKdvd/subscriptions", "organizations_url": "https://api.github.com/users/YKdvd/orgs", "repos_url": "https://api.github.com/users/YKdvd/repos", "events_url": "https://api.github.com/users/YKdvd/events{/privacy}", "received_events_url": "https://api.github.com/users/YKdvd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-08-09T19:53:21Z", "updated_at": "2021-08-11T14:35:21Z", "closed_at": "2021-08-11T14:35:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/marshmallow-code/marshmallow/blob/3.13.0/setup.cfg has \"universal=1\" in the \"bdist_wheel\" section, for back when you still supported Python 2 (pre mm3.0).  That now produces a wheel name like \"marshmallow-3.13.0-py2.py3-none-any.whl\", which claims to support Python 2, but of course does not.  I think standard \"pip\" 2.7 via PyPI gets around this by checking the setup.py \"python_requires\" or something.  But I've got one setup where I'm pointing pip-compile at a cache of wheel files including a Marshmallow 3 wheel, and it collects the Marshmallow 3 wheel with that \"py2.py3\" fragment as most recent even with Python 2, and then dies when setup.py is eventually run for it.\r\n\r\nCould that universal=1 be removed so that the resulting wheel filenames don't claim Python 2 compatibility?", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1860/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1860/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1522", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1522/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1522/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1522/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1522", "id": 570954535, "node_id": "MDU6SXNzdWU1NzA5NTQ1MzU=", "number": 1522, "title": "Incorrect Email Validation", "user": {"login": "nbanmp", "id": 10455480, "node_id": "MDQ6VXNlcjEwNDU1NDgw", "avatar_url": "https://avatars.githubusercontent.com/u/10455480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbanmp", "html_url": "https://github.com/nbanmp", "followers_url": "https://api.github.com/users/nbanmp/followers", "following_url": "https://api.github.com/users/nbanmp/following{/other_user}", "gists_url": "https://api.github.com/users/nbanmp/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbanmp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbanmp/subscriptions", "organizations_url": "https://api.github.com/users/nbanmp/orgs", "repos_url": "https://api.github.com/users/nbanmp/repos", "events_url": "https://api.github.com/users/nbanmp/events{/privacy}", "received_events_url": "https://api.github.com/users/nbanmp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 96590020, "node_id": "MDU6TGFiZWw5NjU5MDAyMA==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/help%20wanted", "name": "help wanted", "color": "0e8a16", "default": true, "description": ""}, {"id": 96590028, "node_id": "MDU6TGFiZWw5NjU5MDAyOA==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/feedback%20welcome", "name": "feedback welcome", "color": "0e8a16", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-26T00:27:08Z", "updated_at": "2020-03-05T13:06:33Z", "closed_at": "2020-03-05T13:06:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/marshmallow-code/marshmallow/blob/fbe22eb47db5df64b2c4133f9a5cb6c6920e8dd2/src/marshmallow/validate.py#L136-L151\r\n\r\nThe email validation regex will match `email@domain.com\\n`, `email\\n@domain.com`, and `email\\n@domain.com\\n`.\r\n\r\nThe issue is that `$` is used to match until the end of a string. Instead, `\\Z` should be used. - https://stackoverflow.com/a/48730645\r\n\r\nIt is possible that other validators might suffer from the same bug, so it would be good if other regexes were also checked.\r\n\r\nIt is unclear, but this may lead to a security vulnerability in some projects that use marshmallow (depending on how the validator is used), so a quick fix here might be helpful. In my quick look around I didn't notice anything critical, however, so I figured it would be fine to open this issue.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1522/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1506", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1506/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1506/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1506/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1506", "id": 559753849, "node_id": "MDU6SXNzdWU1NTk3NTM4NDk=", "number": 1506, "title": "JSON deserialization converts dots in field names to deep dictionaries.", "user": {"login": "rbu", "id": 65913, "node_id": "MDQ6VXNlcjY1OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/65913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbu", "html_url": "https://github.com/rbu", "followers_url": "https://api.github.com/users/rbu/followers", "following_url": "https://api.github.com/users/rbu/following{/other_user}", "gists_url": "https://api.github.com/users/rbu/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbu/subscriptions", "organizations_url": "https://api.github.com/users/rbu/orgs", "repos_url": "https://api.github.com/users/rbu/repos", "events_url": "https://api.github.com/users/rbu/events{/privacy}", "received_events_url": "https://api.github.com/users/rbu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-04T14:25:12Z", "updated_at": "2021-03-30T00:08:16Z", "closed_at": "2021-03-30T00:08:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Summary**\r\nThe marshmallow JSON deserializer interprets dots as meaning a sub-object in user-provided input, violating the JSON standard.\r\n\r\n**Minimal example**\r\n```py\r\nfrom marshmallow import Schema, INCLUDE\r\n\r\nclass MySchema(Schema):\r\n    class Meta:\r\n        unknown = INCLUDE\r\n\r\n> s = MySchema()\r\n> s.load({\"01.12.2019\": 1, \"01.01.2020\": 0})\r\n{'01': {'01': {'2020': 0}, '12': {'2019': 1}}}\r\n\r\n> s.loads(\"\"\"{\"01.12.2019\": 1, \"01.01.2020\": 0}\"\"\")\r\n{'01': {'01': {'2020': 0}, '12': {'2019': 1}}}\r\n```\r\n\r\n**Discussion**\r\nWhile I appreciate the idea of allowing \"compact notation\" using dotted paths, this even causes problems in attribute/data_key specifications, such as #1225 (I like the idea discussed there of using lists of strings instead of in-band signaling using path notation). Either way, applying the dot path transformation *on the data* is counter-intuitive, undocumented and dangerous as it's hard to discover during testing.\r\n\r\n**Motivation**\r\nMy schema allows somewhat \"free form\" key-value attributes for certain objects (think os.environ, or some other meta-attribute table). The schema (in my case) enforces that all field values are numeric, like so:\r\n```\r\nclass MetaAttributeSchema(Schema):\r\n    class Meta:\r\n        unknown = INCLUDE\r\n\r\n    @validates_schema\r\n    def validate_types(self, data, **kwargs):\r\n        errors = {}\r\n        for key, value in data.items():\r\n            try:\r\n                NumberValidator.deserialize(value)\r\n            except ValidationError as e:\r\n                errors[key] = e.messages\r\n        if errors:\r\n            raise ValidationError(errors)\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1506/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1409", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1409/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1409/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1409/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1409", "id": 494544904, "node_id": "MDU6SXNzdWU0OTQ1NDQ5MDQ=", "number": 1409, "title": "marshmallow >= 3.1.0 not working in Python<3.5.3", "user": {"login": "lukaszdudek-silvair", "id": 45991310, "node_id": "MDQ6VXNlcjQ1OTkxMzEw", "avatar_url": "https://avatars.githubusercontent.com/u/45991310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaszdudek-silvair", "html_url": "https://github.com/lukaszdudek-silvair", "followers_url": "https://api.github.com/users/lukaszdudek-silvair/followers", "following_url": "https://api.github.com/users/lukaszdudek-silvair/following{/other_user}", "gists_url": "https://api.github.com/users/lukaszdudek-silvair/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaszdudek-silvair/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaszdudek-silvair/subscriptions", "organizations_url": "https://api.github.com/users/lukaszdudek-silvair/orgs", "repos_url": "https://api.github.com/users/lukaszdudek-silvair/repos", "events_url": "https://api.github.com/users/lukaszdudek-silvair/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaszdudek-silvair/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-17T10:42:33Z", "updated_at": "2019-09-17T14:19:17Z", "closed_at": "2019-09-17T13:55:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nI'm getting the following error when using `marshmallow` 3.1.0 or 3.1.1 with `pytest`:\r\n```\r\n============================================== test session starts ===============================================\r\nplatform linux -- Python 3.5.2, pytest-5.1.2, py-1.8.0, pluggy-0.13.0\r\nrootdir: ***, inifile: setup.cfg\r\nplugins: cov-2.7.1, asyncio-0.10.0\r\ncollected 31 items / 1 errors / 30 selected                                                                      \r\n\r\n===================================================== ERRORS =====================================================\r\n______________________________ ERROR collecting tests_async/test_event_executor.py _______________________________\r\n*** imports inside my project ***\r\n    from marshmallow import Schema, fields, decorators\r\n../../.local/share/virtualenvs/gateway-WH935Ska/lib/python3.5/site-packages/marshmallow/__init__.py:1: in <module>\r\n    from marshmallow.schema import Schema, SchemaOpts\r\n../../.local/share/virtualenvs/gateway-WH935Ska/lib/python3.5/site-packages/marshmallow/schema.py:14: in <module>\r\n    from marshmallow import base, fields as ma_fields, class_registry\r\n../../.local/share/virtualenvs/gateway-WH935Ska/lib/python3.5/site-packages/marshmallow/fields.py:434: in <module>\r\n    class Nested(Field):\r\n../../.local/share/virtualenvs/gateway-WH935Ska/lib/python3.5/site-packages/marshmallow/fields.py:480: in Nested\r\n    unknown: str = None,\r\n../../miniconda3/envs/gateway3.5.2/lib/python3.5/typing.py:552: in __getitem__\r\n    dict(self.__dict__), parameters, _root=True)\r\n../../miniconda3/envs/gateway3.5.2/lib/python3.5/typing.py:512: in __new__\r\n    for t2 in all_params - {t1} if not isinstance(t2, TypeVar)):\r\n../../miniconda3/envs/gateway3.5.2/lib/python3.5/typing.py:512: in <genexpr>\r\n    for t2 in all_params - {t1} if not isinstance(t2, TypeVar)):\r\n../../miniconda3/envs/gateway3.5.2/lib/python3.5/typing.py:1077: in __subclasscheck__\r\n    if super().__subclasscheck__(cls):\r\n../../.local/share/virtualenvs/gateway-WH935Ska/lib/python3.5/abc.py:225: in __subclasscheck__\r\n    for scls in cls.__subclasses__():\r\nE   TypeError: descriptor '__subclasses__' of 'type' object needs an argument\r\n\r\n```\r\nThe last working version was 3.0.5.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1409/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1404", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1404/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1404/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1404/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1404", "id": 494020184, "node_id": "MDU6SXNzdWU0OTQwMjAxODQ=", "number": 1404, "title": "Error when unpickleable object in nested schema's context", "user": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-16T12:31:40Z", "updated_at": "2019-09-16T12:37:48Z", "closed_at": "2019-09-16T12:37:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "> I have nested schema instance which context contains non-pickling object. In my case it is `Crypto.Cipher.AES` object which i tried to deepcopy in console and got an error. \r\n\r\n_Originally posted by @metheoryt in https://github.com/marshmallow-code/marshmallow/pull/1385_", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1404/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1400", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1400/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1400/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1400/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1400", "id": 493779620, "node_id": "MDU6SXNzdWU0OTM3Nzk2MjA=", "number": 1400, "title": "Uncaught error when passing non-list validators to Email and URL fields", "user": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-09-15T20:00:57Z", "updated_at": "2019-09-15T20:31:09Z", "closed_at": "2019-09-15T20:31:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`fields.Email` and `fields.URL` error if a non-list is passed to `validate`.\r\n\r\n```python\r\nfrom marshmallow import Schema, fields, validate\r\n\r\nclass UserSchema(Schema):\r\n    email = fields.Email(validate=(validate.Length(min=5), ))\r\n    url = fields.URL(validate=(validate.Length(min=5), ))\r\n```\r\n\r\n```\r\nAttributeError: 'tuple' object has no attribute 'insert'\r\n```", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1400/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1384", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1384/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1384/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1384/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1384", "id": 490818304, "node_id": "MDU6SXNzdWU0OTA4MTgzMDQ=", "number": 1384, "title": "Dotted `only` and `exclude` not working for nested schema instances", "user": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-09-08T22:40:32Z", "updated_at": "2019-09-12T02:02:47Z", "closed_at": "2019-09-12T02:02:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#1229 fixed propagation of `only` and `exclude` for nested schema classes but no instances.\r\nDotted strings passed to `only` and `exclude` are not respected when a schema instance is nested.\r\n\r\n\r\n```python\r\nfrom marshmallow import Schema, fields\r\n\r\n\r\nclass Child(Schema):\r\n    name = fields.String()\r\n    age = fields.Integer()\r\n\r\n\r\nclass Parent(Schema):\r\n    favorite = fields.Nested(Child, only=(\"name\", \"age\"))\r\n    children = fields.List(fields.Nested(Child, only=(\"name\", \"age\")))\r\n\r\n\r\nclass Parent2(Schema):\r\n    favorite = fields.Nested(Child(only=(\"name\", \"age\")))\r\n    children = fields.List(fields.Nested(Child(only=(\"name\", \"age\"))))\r\n\r\n\r\nfamily = {\r\n    \"favorite\": {\"name\": \"Lily\", \"age\": 15},\r\n    \"children\": [{\"name\": \"Tommy\", \"age\": 12}, {\"name\": \"Lily\", \"age\": 15}],\r\n}\r\n# should be the same\r\nprint(Parent(only=(\"favorite.age\", \"children.name\")).dump(family))\r\nprint(Parent2(only=(\"favorite.age\", \"children.name\")).dump(family))\r\n```\r\n\r\nExpected output:\r\n\r\n```\r\n{'children': [{'name': 'Tommy'}, {'name': 'Lily'}], 'favorite': {'age': 15}}\r\n{'children': [{'name': 'Tommy'}, {'name': 'Lily'}], 'favorite': {'age': 15}}\r\n```\r\n\r\nActual output:\r\n\r\n```\r\n{'favorite': {'age': 15}, 'children': [{'name': 'Tommy'}, {'name': 'Lily'}]}\r\n{'favorite': {'age': 15, 'name': 'Lily'}, 'children': [{'age': 12, 'name': 'Tommy'}, {'age': 15, 'name': 'Lily'}]}\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1384/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1378", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1378/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1378/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1378/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1378", "id": 489474361, "node_id": "MDU6SXNzdWU0ODk0NzQzNjE=", "number": 1378, "title": "Empty string data_key disallowed", "user": {"login": "jtrakk", "id": 43392409, "node_id": "MDQ6VXNlcjQzMzkyNDA5", "avatar_url": "https://avatars.githubusercontent.com/u/43392409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtrakk", "html_url": "https://github.com/jtrakk", "followers_url": "https://api.github.com/users/jtrakk/followers", "following_url": "https://api.github.com/users/jtrakk/following{/other_user}", "gists_url": "https://api.github.com/users/jtrakk/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtrakk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtrakk/subscriptions", "organizations_url": "https://api.github.com/users/jtrakk/orgs", "repos_url": "https://api.github.com/users/jtrakk/repos", "events_url": "https://api.github.com/users/jtrakk/events{/privacy}", "received_events_url": "https://api.github.com/users/jtrakk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-05T00:59:55Z", "updated_at": "2019-09-05T02:19:05Z", "closed_at": "2019-09-05T01:41:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Having an empty string as `data_key` doesn't seem to work.\r\n\r\n```py\r\nimport marshmallow\r\nfrom marshmallow import fields\r\n\r\n\r\nclass RootSchema(marshmallow.Schema):\r\n    x = fields.Raw(data_key=\"\")\r\n\r\n\r\nRootSchema().load({'': 1})\r\n\r\n```\r\n```py\r\n\r\n---> 14 RootSchema().load({'': 1})\r\n\r\n~/.pyenv/versions/3.7.3/lib/python3.7/site-packages/marshmallow/schema.py in load(self, data, many, partial, unknown)\r\n    730         \"\"\"\r\n    731         return self._do_load(\r\n--> 732             data, many=many, partial=partial, unknown=unknown, postprocess=True\r\n    733         )\r\n    734 \r\n\r\n~/.pyenv/versions/3.7.3/lib/python3.7/site-packages/marshmallow/schema.py in _do_load(self, data, many, partial, unknown, postprocess)\r\n    892             exc = ValidationError(errors, data=data, valid_data=result)\r\n    893             self.handle_error(exc, data)\r\n--> 894             raise exc\r\n    895 \r\n    896         return result\r\n\r\nValidationError: {'': ['Unknown field.']}\r\n```\r\n\r\nmarshmallow-3.0.2", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1378/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1357", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1357/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1357/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1357/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1357", "id": 483419078, "node_id": "MDU6SXNzdWU0ODM0MTkwNzg=", "number": 1357, "title": "3.0: DateTime fields cannot be used as inner field for List or Tuple fields", "user": {"login": "zblz", "id": 576258, "node_id": "MDQ6VXNlcjU3NjI1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/576258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zblz", "html_url": "https://github.com/zblz", "followers_url": "https://api.github.com/users/zblz/followers", "following_url": "https://api.github.com/users/zblz/following{/other_user}", "gists_url": "https://api.github.com/users/zblz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zblz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zblz/subscriptions", "organizations_url": "https://api.github.com/users/zblz/orgs", "repos_url": "https://api.github.com/users/zblz/repos", "events_url": "https://api.github.com/users/zblz/events{/privacy}", "received_events_url": "https://api.github.com/users/zblz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "deckar01", "id": 3108007, "node_id": "MDQ6VXNlcjMxMDgwMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3108007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deckar01", "html_url": "https://github.com/deckar01", "followers_url": "https://api.github.com/users/deckar01/followers", "following_url": "https://api.github.com/users/deckar01/following{/other_user}", "gists_url": "https://api.github.com/users/deckar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/deckar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deckar01/subscriptions", "organizations_url": "https://api.github.com/users/deckar01/orgs", "repos_url": "https://api.github.com/users/deckar01/repos", "events_url": "https://api.github.com/users/deckar01/events{/privacy}", "received_events_url": "https://api.github.com/users/deckar01/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "deckar01", "id": 3108007, "node_id": "MDQ6VXNlcjMxMDgwMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3108007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deckar01", "html_url": "https://github.com/deckar01", "followers_url": "https://api.github.com/users/deckar01/followers", "following_url": "https://api.github.com/users/deckar01/following{/other_user}", "gists_url": "https://api.github.com/users/deckar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/deckar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deckar01/subscriptions", "organizations_url": "https://api.github.com/users/deckar01/orgs", "repos_url": "https://api.github.com/users/deckar01/repos", "events_url": "https://api.github.com/users/deckar01/events{/privacy}", "received_events_url": "https://api.github.com/users/deckar01/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2019-08-21T13:24:19Z", "updated_at": "2019-08-21T18:20:41Z", "closed_at": "2019-08-21T17:53:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Between releases 3.0.0rc8 and 3.0.0rc9, `DateTime` fields have started throwing an error when being instantiated as inner fields of container fields like `List` or `Tuple`. The snippet below works in <=3.0.0rc8 and throws the error below in >=3.0.0rc9 (and, worryingly, 3.0.0):\r\n\r\n```python\r\nfrom marshmallow import fields, Schema\r\n\r\nclass MySchema(Schema):\r\n    times = fields.List(fields.DateTime())\r\n\r\ns = MySchema()\r\n```\r\n\r\nTraceback:\r\n```\r\nTraceback (most recent call last):\r\n  File \"test-mm.py\", line 8, in <module>\r\n    s = MySchema()\r\n  File \"/Users/victor/.pyenv/versions/marshmallow/lib/python3.6/site-packages/marshmallow/schema.py\", line 383, in __init__\r\n    self.fields = self._init_fields()\r\n  File \"/Users/victor/.pyenv/versions/marshmallow/lib/python3.6/site-packages/marshmallow/schema.py\", line 913, in _init_fields\r\n    self._bind_field(field_name, field_obj)\r\n  File \"/Users/victor/.pyenv/versions/marshmallow/lib/python3.6/site-packages/marshmallow/schema.py\", line 969, in _bind_field\r\n    field_obj._bind_to_schema(field_name, self)\r\n  File \"/Users/victor/.pyenv/versions/marshmallow/lib/python3.6/site-packages/marshmallow/fields.py\", line 636, in _bind_to_schema\r\n    self.inner._bind_to_schema(field_name, self)\r\n  File \"/Users/victor/.pyenv/versions/marshmallow/lib/python3.6/site-packages/marshmallow/fields.py\", line 1117, in _bind_to_schema\r\n    or getattr(schema.opts, self.SCHEMA_OPTS_VAR_NAME)\r\nAttributeError: 'List' object has no attribute 'opts'\r\n```\r\n\r\nIt seems like it's treating the parent field as a Schema without checking that it is indeed a schema, so the `schema.opts` statement fails as fields don't have an `opts` attribute.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1357/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1355", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1355/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1355/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1355/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1355", "id": 482514423, "node_id": "MDU6SXNzdWU0ODI1MTQ0MjM=", "number": 1355, "title": "Doubly nested list field does not assign inner field's name", "user": {"login": "yeralin", "id": 8620461, "node_id": "MDQ6VXNlcjg2MjA0NjE=", "avatar_url": "https://avatars.githubusercontent.com/u/8620461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yeralin", "html_url": "https://github.com/yeralin", "followers_url": "https://api.github.com/users/yeralin/followers", "following_url": "https://api.github.com/users/yeralin/following{/other_user}", "gists_url": "https://api.github.com/users/yeralin/gists{/gist_id}", "starred_url": "https://api.github.com/users/yeralin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yeralin/subscriptions", "organizations_url": "https://api.github.com/users/yeralin/orgs", "repos_url": "https://api.github.com/users/yeralin/repos", "events_url": "https://api.github.com/users/yeralin/events{/privacy}", "received_events_url": "https://api.github.com/users/yeralin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 260913230, "node_id": "MDU6TGFiZWwyNjA5MTMyMzA=", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/backwards%20incompat", "name": "backwards incompat", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "deckar01", "id": 3108007, "node_id": "MDQ6VXNlcjMxMDgwMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3108007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deckar01", "html_url": "https://github.com/deckar01", "followers_url": "https://api.github.com/users/deckar01/followers", "following_url": "https://api.github.com/users/deckar01/following{/other_user}", "gists_url": "https://api.github.com/users/deckar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/deckar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deckar01/subscriptions", "organizations_url": "https://api.github.com/users/deckar01/orgs", "repos_url": "https://api.github.com/users/deckar01/repos", "events_url": "https://api.github.com/users/deckar01/events{/privacy}", "received_events_url": "https://api.github.com/users/deckar01/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "deckar01", "id": 3108007, "node_id": "MDQ6VXNlcjMxMDgwMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3108007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deckar01", "html_url": "https://github.com/deckar01", "followers_url": "https://api.github.com/users/deckar01/followers", "following_url": "https://api.github.com/users/deckar01/following{/other_user}", "gists_url": "https://api.github.com/users/deckar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/deckar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deckar01/subscriptions", "organizations_url": "https://api.github.com/users/deckar01/orgs", "repos_url": "https://api.github.com/users/deckar01/repos", "events_url": "https://api.github.com/users/deckar01/events{/privacy}", "received_events_url": "https://api.github.com/users/deckar01/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-08-19T20:34:36Z", "updated_at": "2019-08-20T19:06:08Z", "closed_at": "2019-08-20T19:05:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Let's take a look at the following schema:\r\n```\r\nfrom marshmallow import Schema\r\nfrom marshmallow.fields import List, Integer\r\n\r\nclass TestSchema(Schema):\r\n    test = List(Integer()))\r\n```\r\nWhen you create an instance of it `test_schema = TestSchema()`, you can get outter and inner fields' names:\r\n```\r\ntest_schema.fields['test'].name == 'test' # List\r\ntest_schema.fields['test'].container.name == 'test' # Integer\r\n```\r\nIt works as part of https://github.com/marshmallow-code/marshmallow/blob/e0163744069de0eacc0e70fbc0d8d5937bab753a/src/marshmallow/fields.py#L335-L343\r\n\r\nHowever, let's include another level of \"nestness\" in `TestSchema`:\r\n```\r\nclass TestSchema(Schema):\r\n    test = List(List(Integer()))\r\n```\r\nIn this case, outter and inner list fields' names will be `test` as expected, but if you try to get a name of a third layer `Integer` field, it will return `None`:\r\n```\r\ntest_schema.fields['test'].container.container.name == None # Integer\r\n```\r\n\r\nThis issue is mirrored under `marshmallow-jsonschema` repo: \r\nhttps://github.com/fuhrysteve/marshmallow-jsonschema/issues/87\r\n\r\nBut was tracked down to `marshmallow` core code.\r\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1355/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1345", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1345/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1345/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1345/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1345", "id": 480068697, "node_id": "MDU6SXNzdWU0ODAwNjg2OTc=", "number": 1345, "title": "[regression 2.20] pass None for @validates_schema instead empty dictionary", "user": {"login": "sirkonst", "id": 69752, "node_id": "MDQ6VXNlcjY5NzUy", "avatar_url": "https://avatars.githubusercontent.com/u/69752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirkonst", "html_url": "https://github.com/sirkonst", "followers_url": "https://api.github.com/users/sirkonst/followers", "following_url": "https://api.github.com/users/sirkonst/following{/other_user}", "gists_url": "https://api.github.com/users/sirkonst/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirkonst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirkonst/subscriptions", "organizations_url": "https://api.github.com/users/sirkonst/orgs", "repos_url": "https://api.github.com/users/sirkonst/repos", "events_url": "https://api.github.com/users/sirkonst/events{/privacy}", "received_events_url": "https://api.github.com/users/sirkonst/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 96590020, "node_id": "MDU6TGFiZWw5NjU5MDAyMA==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/help%20wanted", "name": "help wanted", "color": "0e8a16", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-08-13T10:02:17Z", "updated_at": "2020-10-24T14:15:43Z", "closed_at": "2020-10-24T14:15:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found another regression after update from 2.19.5 to 2.20.1.\r\n\r\n```python\r\nfrom marshmallow import Schema, fields, validates_schema\r\n\r\n\r\nclass Bar(Schema):\r\n    value = fields.String()\r\n\r\n    @validates_schema\r\n    def validate_schema(self, data: dict) -> None:\r\n        assert isinstance(data, dict), type(data)  # before 2.20 data is {} after None\r\n\r\n\r\nclass Foo(Schema):\r\n    bar = fields.Nested(Bar)\r\n\r\n\r\nsch = Foo()\r\n\r\nsch.validate({\r\n    'bar': 'invalid',\r\n})\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1345/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1342", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1342/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1342/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1342/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1342", "id": 479511161, "node_id": "MDU6SXNzdWU0Nzk1MTExNjE=", "number": 1342, "title": "[version 2.20.0] TypeError: 'NoneType' object is not subscriptable", "user": {"login": "sirkonst", "id": 69752, "node_id": "MDQ6VXNlcjY5NzUy", "avatar_url": "https://avatars.githubusercontent.com/u/69752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirkonst", "html_url": "https://github.com/sirkonst", "followers_url": "https://api.github.com/users/sirkonst/followers", "following_url": "https://api.github.com/users/sirkonst/following{/other_user}", "gists_url": "https://api.github.com/users/sirkonst/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirkonst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirkonst/subscriptions", "organizations_url": "https://api.github.com/users/sirkonst/orgs", "repos_url": "https://api.github.com/users/sirkonst/repos", "events_url": "https://api.github.com/users/sirkonst/events{/privacy}", "received_events_url": "https://api.github.com/users/sirkonst/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 96590020, "node_id": "MDU6TGFiZWw5NjU5MDAyMA==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/help%20wanted", "name": "help wanted", "color": "0e8a16", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-12T07:55:02Z", "updated_at": "2019-08-13T04:40:00Z", "closed_at": "2019-08-13T04:40:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "After update from version 2.19.5 to 2.20.0 I got error for code like:\r\n\r\n```python\r\nfrom marshmallow import Schema, fields, validates\r\n\r\n\r\nclass Bar(Schema):\r\n    value = fields.String()\r\n\r\n    @validates('value')  # <- issue here\r\n    def validate_value(self, value):\r\n        pass\r\n\r\n\r\nclass Foo(Schema):\r\n    bar = fields.Nested(Bar)\r\n\r\n\r\nsch = Foo()\r\n\r\nsch.validate({\r\n    'bar': 'invalid',\r\n})\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/_/bug_mschema.py\", line 19, in <module>\r\n    'bar': 'invalid',\r\n  File \"/_/env/lib/python3.7/site-packages/marshmallow/schema.py\", line 628, in validate\r\n    _, errors = self._do_load(data, many, partial=partial, postprocess=False)\r\n  File \"/_/env/lib/python3.7/site-packages/marshmallow/schema.py\", line 670, in _do_load\r\n    index_errors=self.opts.index_errors,\r\n  File \"/_/env/lib/python3.7/site-packages/marshmallow/marshalling.py\", line 292, in deserialize\r\n    index=(index if index_errors else None)\r\n  File \"/_/env/lib/python3.7/site-packages/marshmallow/marshalling.py\", line 65, in call_and_store\r\n    value = getter_func(data)\r\n  File \"/_/env/lib/python3.7/site-packages/marshmallow/marshalling.py\", line 285, in <lambda>\r\n    data\r\n  File \"/_/env/lib/python3.7/site-packages/marshmallow/fields.py\", line 265, in deserialize\r\n    output = self._deserialize(value, attr, data)\r\n  File \"/_/env/lib/python3.7/site-packages/marshmallow/fields.py\", line 465, in _deserialize\r\n    data, errors = self.schema.load(value)\r\n  File \"/_/env/lib/python3.7/site-packages/marshmallow/schema.py\", line 588, in load\r\n    result, errors = self._do_load(data, many, partial=partial, postprocess=True)\r\n  File \"/_/env/lib/python3.7/site-packages/marshmallow/schema.py\", line 674, in _do_load\r\n    self._invoke_field_validators(unmarshal, data=result, many=many)\r\n  File \"/_/env/lib/python3.7/site-packages/marshmallow/schema.py\", line 894, in _invoke_field_validators\r\n    value = data[field_obj.attribute or field_name]\r\nTypeError: 'NoneType' object is not subscriptable\r\n```", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1342/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1337", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1337/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1337/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1337/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1337", "id": 479156652, "node_id": "MDU6SXNzdWU0NzkxNTY2NTI=", "number": 1337, "title": "Marshmallow warnings.py not Python 2 compatible from version 2.18.0", "user": {"login": "airstandley", "id": 17914999, "node_id": "MDQ6VXNlcjE3OTE0OTk5", "avatar_url": "https://avatars.githubusercontent.com/u/17914999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/airstandley", "html_url": "https://github.com/airstandley", "followers_url": "https://api.github.com/users/airstandley/followers", "following_url": "https://api.github.com/users/airstandley/following{/other_user}", "gists_url": "https://api.github.com/users/airstandley/gists{/gist_id}", "starred_url": "https://api.github.com/users/airstandley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/airstandley/subscriptions", "organizations_url": "https://api.github.com/users/airstandley/orgs", "repos_url": "https://api.github.com/users/airstandley/repos", "events_url": "https://api.github.com/users/airstandley/events{/privacy}", "received_events_url": "https://api.github.com/users/airstandley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-09T20:35:27Z", "updated_at": "2019-08-10T13:10:39Z", "closed_at": "2019-08-10T13:10:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `unused_and_removed_in_ma3` decorator introduced in version 2.18.0 is not Python  2.7 compatible due to absolute import not being used.\r\n\r\nTo reproduce simply attempt to call a decorated method.\r\n```\r\nfrom marshmallow.utils import float_to_decimal\r\nfloat_to_decimal(12.3)\r\n```\r\n\r\nExpected:\r\nMethod executes but logs a `RemovedInMarshmallow3Warning`\r\n\r\nActual:\r\n`AttributeError: 'module' object has no attribute 'warn'` is raised.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1337/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1303", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1303/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1303/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1303/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1303", "id": 469188872, "node_id": "MDU6SXNzdWU0NjkxODg4NzI=", "number": 1303, "title": "Wrong message on type validation errors", "user": {"login": "cristi23", "id": 1398281, "node_id": "MDQ6VXNlcjEzOTgyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/1398281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cristi23", "html_url": "https://github.com/cristi23", "followers_url": "https://api.github.com/users/cristi23/followers", "following_url": "https://api.github.com/users/cristi23/following{/other_user}", "gists_url": "https://api.github.com/users/cristi23/gists{/gist_id}", "starred_url": "https://api.github.com/users/cristi23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cristi23/subscriptions", "organizations_url": "https://api.github.com/users/cristi23/orgs", "repos_url": "https://api.github.com/users/cristi23/repos", "events_url": "https://api.github.com/users/cristi23/events{/privacy}", "received_events_url": "https://api.github.com/users/cristi23/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "cristi23", "id": 1398281, "node_id": "MDQ6VXNlcjEzOTgyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/1398281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cristi23", "html_url": "https://github.com/cristi23", "followers_url": "https://api.github.com/users/cristi23/followers", "following_url": "https://api.github.com/users/cristi23/following{/other_user}", "gists_url": "https://api.github.com/users/cristi23/gists{/gist_id}", "starred_url": "https://api.github.com/users/cristi23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cristi23/subscriptions", "organizations_url": "https://api.github.com/users/cristi23/orgs", "repos_url": "https://api.github.com/users/cristi23/repos", "events_url": "https://api.github.com/users/cristi23/events{/privacy}", "received_events_url": "https://api.github.com/users/cristi23/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cristi23", "id": 1398281, "node_id": "MDQ6VXNlcjEzOTgyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/1398281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cristi23", "html_url": "https://github.com/cristi23", "followers_url": "https://api.github.com/users/cristi23/followers", "following_url": "https://api.github.com/users/cristi23/following{/other_user}", "gists_url": "https://api.github.com/users/cristi23/gists{/gist_id}", "starred_url": "https://api.github.com/users/cristi23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cristi23/subscriptions", "organizations_url": "https://api.github.com/users/cristi23/orgs", "repos_url": "https://api.github.com/users/cristi23/repos", "events_url": "https://api.github.com/users/cristi23/events{/privacy}", "received_events_url": "https://api.github.com/users/cristi23/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2019-07-17T13:19:56Z", "updated_at": "2019-08-11T13:07:22Z", "closed_at": "2019-08-11T13:07:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Before going too deep\r\n\r\nI'm using marshmallow==2.19.5 and I noticed that there's a release candidate for marshmallow 3 so if this issue has somehow been solved, please ignore the rest. However, the only issue I noticed which seemed like it might have some relevance is this: https://github.com/marshmallow-code/marshmallow/issues/852, but the PR for this doesn't seem to address the problem that I'm having. (PR: https://github.com/marshmallow-code/marshmallow/pull/1067/files).\r\n\r\n## Reproducing the issue\r\n\r\nLet's consider the following code with 3 schema definitions:\r\n\r\n```python\r\nfrom marshmallow import Schema, fields\r\n\r\nclass TwoLevelsNestedResource(Schema):\r\n    some_irrelevant_field = fields.String(required=True)\r\n\r\n\r\nclass OneLevelNestedResource(Schema):\r\n    field_a = fields.String(required=True)\r\n    field_b = fields.Integer(required=True)\r\n    field_c = fields.Nested(TwoLevelsNestedResource, required=True)\r\n\r\n\r\nclass MainResource(Schema):\r\n    main_field_a = fields.String(required=True)\r\n    main_field_b = fields.Integer(required=True)\r\n    nested_field = fields.Nested(OneLevelNestedResource, required=True, many=False)\r\n```\r\n\r\nRunning the following function would result in the data being validated without any errors which is what we want:\r\n```python\r\ndef load_correct_data():\r\n    print(MainResource().load({\r\n        'main_field_a': '',\r\n        'main_field_b': 0,\r\n        'nested_field': {\r\n            'field_a': '',\r\n            'field_b': 0,\r\n            'field_c': {\r\n                'some_irrelevant_field': ''\r\n            }\r\n        }\r\n    }).errors)\r\n\r\nload_correct_data()\r\n```\r\n\r\nRunning the next function should print a validation error because the data which is inputted is not correct.\r\n\r\n```python\r\ndef load_wrong_data_a():\r\n    print(MainResource().load('not what we want').errors)\r\n\r\nload_wrong_data_a()\r\n```\r\n\r\nAs the root level object we should send a dictionary, not a string. Therefore, we should get a type validation error. The problem is that we should get whatever is defined as the default error message for the `fields.Nested` type which is `\"Invalid type.\"`. However, any of the following 2 error messages might be returned at different calls of the same function.\r\n\r\n```python\r\n{'_schema': ['Invalid input type.']}\r\n```\r\n```python\r\n{'_schema': ['Invalid type.']}\r\n```\r\nFurthermore, the following code has the same issue, one level deeper in the schema:\r\n\r\n```python\r\ndef load_wrong_data_b():\r\n    print(MainResource().load(dict(\r\n        main_field_a='',\r\n        main_field_b=0,\r\n        nested_field='again, not what we want',\r\n    )).errors)\r\n\r\nload_wrong_data_b()\r\n```\r\nThe two possible outputs, alternatively are:\r\n\r\n```python\r\n{'nested_field': {'_schema': ['Invalid input type.']}}\r\n```\r\n```python\r\n{'nested_field': {'_schema': ['Invalid type.']}}\r\n```\r\nAgain, just like in the previous case, since `nested_field` expects a nested object, a dict, the error we're expecting here is `\"Invalid type.\"`. Unfortunately `\"Invalid input type.\"` will be returned from time to time.\r\n\r\n## Possible causes\r\nAs far as I could tell from debugging the code in marshmallow.marshalling, for each schema definition we're going through the list of defined fields (https://github.com/marshmallow-code/marshmallow/blob/2.x-line/src/marshmallow/marshalling.py#L248) and then attempt to fetch the value of that field (https://github.com/marshmallow-code/marshmallow/blob/2.x-line/src/marshmallow/marshalling.py#L252).\r\nIn case `data` is a string instead of a dict like in the situation I presented above, an `AttributeError` will be raised and then an error for the type validation will be added (https://github.com/marshmallow-code/marshmallow/blob/2.x-line/src/marshmallow/marshalling.py#L255-L257).\r\n\r\nThe problem here seems to be the fact that we're in fact using `.error_messages['type']` on the `field_obj` we're actually using first from the list of fields defined in a schema. This means that we're not actually looking at the error messages defined for the field (or schema root) which is should be a dict in case of `fields.Nested` but instead at the error messages for whatever child field which is picked up first by the iterator.\r\n\r\nThis can be easily observed if we alter the initial schema definitions like this:\r\n```python\r\nclass TwoLevelsNestedResource(Schema):\r\n    some_irrelevant_field = fields.String(required=True)\r\n\r\n\r\nclass OneLevelNestedResource(Schema):\r\n    field_a = fields.String(required=True, error_messages={\r\n        'type': 'field_a must be string'\r\n    })\r\n    field_b = fields.Integer(required=True, error_messages={\r\n        'type': 'field_b must be int'\r\n    })\r\n    field_c = fields.Nested(TwoLevelsNestedResource, required=True, error_messages={\r\n        'type': 'field_c must be dict'\r\n    })\r\n\r\n\r\nclass MainResource(Schema):\r\n    main_field_a = fields.String(required=True, error_messages={\r\n        'type': 'main_field_a must be string'\r\n    })\r\n    main_field_b = fields.Integer(required=True, error_messages={\r\n        'type': 'main_field_b must be int'\r\n    })\r\n    nested_field = fields.Nested(OneLevelNestedResource, required=True, many=False, error_messages={\r\n        'type': 'nested_field must be dict'\r\n    })\r\n```\r\nThen, when running `load_wrong_data_a()`, we can get one of the following:\r\n```python\r\n{'_schema': ['nested_field must be dict']}\r\n```\r\n```python\r\n{'_schema': ['main_field_b must be int']}\r\n```\r\n```python\r\n{'_schema': ['main_field_a must be string']}\r\n```\r\nAs we can see, all of these are actually custom error messages for the fields of the root schema definition.\r\nWhen running `load_wrong_data_b()` we can confirm this behaviour:\r\n```python\r\n{'nested_field': {'_schema': ['field_a must be string']}}\r\n```\r\n```python\r\n{'nested_field': {'_schema': ['field_b must be int']}}\r\n```\r\n```python\r\n{'nested_field': {'_schema': ['field_c must be dict']}}\r\n```\r\n\r\n## Workaround\r\nUntil this issue is fixed, configuring the schema to preserve the order of the fields helps with getting a consistent error message, but the underlying issue of the message being wrong is still there.\r\n```python\r\nfrom marshmallow import Schema, fields\r\n\r\n\r\nclass TwoLevelsNestedResource(Schema):\r\n    some_irrelevant_field = fields.String(required=True)\r\n\r\n\r\nclass OneLevelNestedResource(Schema):\r\n    class Meta:\r\n        ordered = True\r\n\r\n    field_a = fields.String(required=True, error_messages={\r\n        'type': 'field_a must be string'\r\n    })\r\n    field_b = fields.Integer(required=True, error_messages={\r\n        'type': 'field_b must be int'\r\n    })\r\n    field_c = fields.Nested(TwoLevelsNestedResource, required=True, error_messages={\r\n        'type': 'field_c must be dict'\r\n    })\r\n\r\n\r\nclass MainResource(Schema):\r\n    class Meta:\r\n        ordered = True\r\n\r\n    main_field_a = fields.String(required=True, error_messages={\r\n        'type': 'main_field_a must be string'\r\n    })\r\n    main_field_b = fields.Integer(required=True, error_messages={\r\n        'type': 'main_field_b must be int'\r\n    })\r\n    nested_field = fields.Nested(OneLevelNestedResource, required=True, many=False, error_messages={\r\n        'type': 'nested_field must be dict'\r\n    })\r\n```\r\n\r\nBecause adding Meta.ordered = True would determine marshmallow to use ordered dicts (this is redundant in python3.7) and ordered sets for manipulating the fields, we would then get only one possible error when running `load_wrong_data_b()`:\r\n\r\n```python\r\n{'nested_field': {'_schema': ['field_a must be string']}}\r\n```", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1303/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1303/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1268", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1268/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1268/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1268/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1268", "id": 462147648, "node_id": "MDU6SXNzdWU0NjIxNDc2NDg=", "number": 1268, "title": "Email and URL call String.__init__ rather than super().__init__", "user": {"login": "dursk", "id": 5231538, "node_id": "MDQ6VXNlcjUyMzE1Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/5231538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dursk", "html_url": "https://github.com/dursk", "followers_url": "https://api.github.com/users/dursk/followers", "following_url": "https://api.github.com/users/dursk/following{/other_user}", "gists_url": "https://api.github.com/users/dursk/gists{/gist_id}", "starred_url": "https://api.github.com/users/dursk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dursk/subscriptions", "organizations_url": "https://api.github.com/users/dursk/orgs", "repos_url": "https://api.github.com/users/dursk/repos", "events_url": "https://api.github.com/users/dursk/events{/privacy}", "received_events_url": "https://api.github.com/users/dursk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-28T18:00:45Z", "updated_at": "2019-06-29T21:56:40Z", "closed_at": "2019-06-29T21:56:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It looks like this is a relic of the past, when multiple inheritance was being used (https://github.com/marshmallow-code/marshmallow/commit/f924a6e71612c1babb41a13f024e5790fd1924d8).\r\n\r\nIt seems like we should be able to do `super().__init__` in both these cases now.\r\n\r\nIt's currently causing method resolution issues when using multiple inheritance and subclassing these String subclasses, for example:\r\n```python\r\nclass CustomBaseField(marshmallow.fields.Field):\r\n     def __init__(self, *args, **kwargs):\r\n         super().__init__(*args, **kwargs)\r\n         # some custom logic\r\n\r\nclass CustomEmail(marshmallow.fields.Email, CustomBaseField):\r\n    pass\r\n```\r\nIn the above scenario, when instantiating `CustomEmail`, `marshmallow.String.__init__` runs although it should be `CustomBaseField.__init__`", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1268/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1268/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1251", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1251/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1251/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1251/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1251", "id": 456910398, "node_id": "MDU6SXNzdWU0NTY5MTAzOTg=", "number": 1251, "title": "ISO8601 DateTimes ending with Z considered not valid in 2.19.4", "user": {"login": "diego-plan9", "id": 418311, "node_id": "MDQ6VXNlcjQxODMxMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/418311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diego-plan9", "html_url": "https://github.com/diego-plan9", "followers_url": "https://api.github.com/users/diego-plan9/followers", "following_url": "https://api.github.com/users/diego-plan9/following{/other_user}", "gists_url": "https://api.github.com/users/diego-plan9/gists{/gist_id}", "starred_url": "https://api.github.com/users/diego-plan9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diego-plan9/subscriptions", "organizations_url": "https://api.github.com/users/diego-plan9/orgs", "repos_url": "https://api.github.com/users/diego-plan9/repos", "events_url": "https://api.github.com/users/diego-plan9/events{/privacy}", "received_events_url": "https://api.github.com/users/diego-plan9/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 1011519607, "node_id": "MDU6TGFiZWwxMDExNTE5NjA3", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/datetime", "name": "datetime", "color": "432393", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-06-17T12:35:33Z", "updated_at": "2019-06-18T12:56:19Z", "closed_at": "2019-06-18T12:55:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Probably related to #1247 and #1234 - in marshmallow `2.19.4`, with `python-dateutil` _not_ installed, it seems that loading a datetime in ISO8601 that ends in `Z` (UTC time) results in an error:\r\n\r\n```python\r\nclass Foo(Schema):\r\n    date = DateTime(required=True)\r\n\r\n\r\nfoo_schema = Foo(strict=True)\r\n\r\na_date_with_z = '2019-06-17T00:57:41.000Z'\r\nfoo_schema.load({'date': a_date_with_z})\r\n```\r\n\r\n```\r\nmarshmallow.exceptions.ValidationError: {'date': ['Not a valid datetime.']}\r\n```\r\n\r\nDigging a bit deeper, it seems [`from_iso_datetime`](https://github.com/marshmallow-code/marshmallow/blob/dev/src/marshmallow/utils.py#L213-L215) is failing with a `unconverted data remains: Z` - my understanding of the spec is rather limited, but it seems that they are indeed valid ISO8601 dates (and in `marshmallow==2.19.3` and earlier, the previous snippet seems to work without raising validation errors).\r\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1251/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1212", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1212/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1212/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1212/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1212", "id": 442585401, "node_id": "MDU6SXNzdWU0NDI1ODU0MDE=", "number": 1212, "title": "Defining fields with dot notations in Meta.exclude only works when initialising first time", "user": {"login": "MHannila", "id": 7022493, "node_id": "MDQ6VXNlcjcwMjI0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/7022493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MHannila", "html_url": "https://github.com/MHannila", "followers_url": "https://api.github.com/users/MHannila/followers", "following_url": "https://api.github.com/users/MHannila/following{/other_user}", "gists_url": "https://api.github.com/users/MHannila/gists{/gist_id}", "starred_url": "https://api.github.com/users/MHannila/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MHannila/subscriptions", "organizations_url": "https://api.github.com/users/MHannila/orgs", "repos_url": "https://api.github.com/users/MHannila/repos", "events_url": "https://api.github.com/users/MHannila/events{/privacy}", "received_events_url": "https://api.github.com/users/MHannila/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-10T07:51:05Z", "updated_at": "2019-06-15T17:06:15Z", "closed_at": "2019-06-15T17:06:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Demonstration of the issue\r\n``` python\r\nfrom marshmallow import Schema, fields\r\n\r\n\r\nclass AuthorSchema(Schema):\r\n    first_name = fields.String(required=True)\r\n    last_name = fields.String(required=True)\r\n\r\n\r\nclass BaseSchema(Schema):\r\n    class Meta:\r\n        exclude = ['author.first_name']\r\n\r\n    author = fields.Nested(AuthorSchema, required=True)\r\n\r\n\r\ndata = dict(author=dict(first_name='foo', last_name='bar'))\r\nprint(BaseSchema().dump(data))\r\nprint(BaseSchema().dump(data))\r\n```\r\nresults in\r\n```\r\n{'author': {'last_name': 'bar'}}\r\n{'author': {'first_name': 'foo', 'last_name': 'bar'}}\r\n```", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1212/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1163", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1163/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1163/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1163/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1163", "id": 415995151, "node_id": "MDU6SXNzdWU0MTU5OTUxNTE=", "number": 1163, "title": "2.x: Nested(many=True) eats first element from generator value when dumping", "user": {"login": "khvn26", "id": 979078, "node_id": "MDQ6VXNlcjk3OTA3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/979078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khvn26", "html_url": "https://github.com/khvn26", "followers_url": "https://api.github.com/users/khvn26/followers", "following_url": "https://api.github.com/users/khvn26/following{/other_user}", "gists_url": "https://api.github.com/users/khvn26/gists{/gist_id}", "starred_url": "https://api.github.com/users/khvn26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khvn26/subscriptions", "organizations_url": "https://api.github.com/users/khvn26/orgs", "repos_url": "https://api.github.com/users/khvn26/repos", "events_url": "https://api.github.com/users/khvn26/events{/privacy}", "received_events_url": "https://api.github.com/users/khvn26/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-01T08:35:22Z", "updated_at": "2019-03-16T20:00:32Z", "closed_at": "2019-03-16T20:00:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As reproduced in Python 3.6.8:\r\n\r\n```py\r\nfrom marshmallow import Schema, fields\r\n\r\nclass O(Schema):\r\n    i = fields.Int()\r\n\r\nclass P(Schema):\r\n    os = fields.Nested(O, many=True)\r\n\r\ndef gen():\r\n    yield {'i': 1}\r\n    yield {'i': 0}\r\n\r\np = P()\r\np.dump({'os': gen()})\r\n# MarshalResult(data={'os': [{'i': 0}]}, errors={})\r\n```\r\n\r\nProblematic code is here:\r\n\r\nhttps://github.com/marshmallow-code/marshmallow/blob/2.x-line/src/marshmallow/fields.py#L447\r\n\r\nAnd here:\r\n\r\nhttps://github.com/marshmallow-code/marshmallow/blob/2.x-line/src/marshmallow/schema.py#L832\r\n\r\nThe easiest solution would be to cast `nested_obj` to list before calling `schema._update_fields`, just like a normal Schema with `many=True` does.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1163/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1160", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1160/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1160/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1160/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1160", "id": 414625917, "node_id": "MDU6SXNzdWU0MTQ2MjU5MTc=", "number": 1160, "title": "Nested schema doesn't load nested field if many is not set in both Schema and field constructors", "user": {"login": "Kamforka", "id": 16663089, "node_id": "MDQ6VXNlcjE2NjYzMDg5", "avatar_url": "https://avatars.githubusercontent.com/u/16663089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kamforka", "html_url": "https://github.com/Kamforka", "followers_url": "https://api.github.com/users/Kamforka/followers", "following_url": "https://api.github.com/users/Kamforka/following{/other_user}", "gists_url": "https://api.github.com/users/Kamforka/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kamforka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kamforka/subscriptions", "organizations_url": "https://api.github.com/users/Kamforka/orgs", "repos_url": "https://api.github.com/users/Kamforka/repos", "events_url": "https://api.github.com/users/Kamforka/events{/privacy}", "received_events_url": "https://api.github.com/users/Kamforka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 96590028, "node_id": "MDU6TGFiZWw5NjU5MDAyOA==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/feedback%20welcome", "name": "feedback welcome", "color": "0e8a16", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2019-02-26T14:01:23Z", "updated_at": "2019-09-12T02:06:03Z", "closed_at": "2019-09-12T02:06:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found a strange behaviour of the `Nested` field when I use instantiated schemas for its `nested` parameter. To reproduce one can use the following snippet:\r\n\r\n```python\r\nfrom marshmallow import Schema, fields\r\n\r\n\r\nclass BookSchema(Schema):\r\n    id = fields.Int()\r\n    title = fields.String()\r\n\r\n    class Meta:\r\n        strict = True\r\n\r\n\r\nclass UserSchema(Schema):\r\n    id = fields.Int()\r\n    name = fields.String()\r\n    books = fields.Nested(BookSchema(many=True)) \r\n\r\n    class Meta:\r\n        strict = True\r\n\r\n\r\nbooks = [{'id': 1, 'title': 'First book'}, {'id': 2, 'title': 'Second book'}]\r\nuser = {'id': 1, 'name': 'Peter', 'books': books}\r\n\r\nuser_dump = UserSchema().dump(user).data\r\n# output: {'id': 1, 'books': {}, 'name': 'Peter'}\r\n\r\nuser_load = UserSchema().load(user_dump).data\r\n# output: marshmallow.exceptions.ValidationError: {'books': {'_schema': ['Invalid input type.']}}\r\n```\r\n\r\nI'd expect it to return a list of books since I set the `many=True` parameter of the schema constructor.\r\n\r\nA workaround is to set `many` in both the schema and the field like this:\r\n\r\n```python\r\nbooks = fields.Nested(BookSchema(many=True), many=True)\r\n```\r\n\r\nAnd the outputs are as expected:\r\n```python\r\nuser_dump = UserSchema().dump(user).data\r\n# output: {'name': 'Peter', 'books': [{'title': 'First book', 'id': 1}, {'title': 'Second book', 'id': 2}], 'id': 1}\r\nuser_load = UserSchema().load(user_dump).data\r\n# output: {'name': 'Peter', 'books': [{'title': 'First book', 'id': 1}, {'title': 'Second book', 'id': 2}], 'id': 1}\r\n```\r\n\r\n\r\n> Note:\r\nI know I can setup the schema this way and it works:\r\n`books = fields.Nested(BookSchema, many=True)`\r\nHowever my initial intention was to use it this way:\r\n`books = fields.Nested(BookSchema(custom_arg='A custom arg to be set', many=True))`\r\n\r\nI'm using `marshmallow==2.16.3`.\r\n\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1160/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1147", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1147/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1147/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1147/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1147", "id": 413496330, "node_id": "MDU6SXNzdWU0MTM0OTYzMzA=", "number": 1147, "title": "DateTime loses microseconds on deserialization if dateutil is not installed", "user": {"login": "lafrech", "id": 1767010, "node_id": "MDQ6VXNlcjE3NjcwMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1767010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lafrech", "html_url": "https://github.com/lafrech", "followers_url": "https://api.github.com/users/lafrech/followers", "following_url": "https://api.github.com/users/lafrech/following{/other_user}", "gists_url": "https://api.github.com/users/lafrech/gists{/gist_id}", "starred_url": "https://api.github.com/users/lafrech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lafrech/subscriptions", "organizations_url": "https://api.github.com/users/lafrech/orgs", "repos_url": "https://api.github.com/users/lafrech/repos", "events_url": "https://api.github.com/users/lafrech/events{/privacy}", "received_events_url": "https://api.github.com/users/lafrech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 1011519607, "node_id": "MDU6TGFiZWwxMDExNTE5NjA3", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/datetime", "name": "datetime", "color": "432393", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-22T17:09:14Z", "updated_at": "2019-06-17T03:39:59Z", "closed_at": "2019-06-17T03:39:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```py\r\nfields.DateTime().deserialize('2019-02-22T17:56:43.820462')\r\ndatetime.datetime(2019, 2, 22, 17, 56, 43)\r\n```\r\n\r\nThis is obvious in the last line of `from_iso_datetime`:\r\n\r\n```py\r\ndef from_iso_datetime(datetimestring, use_dateutil=True):\r\n    \"\"\"Parse an ISO8601-formatted datetime string and return a datetime object.\r\n\r\n    Use dateutil's parser if possible and return a timezone-aware datetime.\r\n    \"\"\"\r\n    if not _iso8601_datetime_re.match(datetimestring):\r\n        raise ValueError('Not a valid ISO8601-formatted datetime string')\r\n    # Use dateutil's parser if possible\r\n    if dateutil_available and use_dateutil:\r\n        return parser.isoparse(datetimestring)\r\n    else:\r\n        # Strip off timezone info.\r\n        return datetime.datetime.strptime(datetimestring[:19], '%Y-%m-%dT%H:%M:%S')\r\n```\r\n\r\nThe case is addressed in `from_iso_time`:\r\n\r\n```py\r\ndef from_iso_time(timestring, use_dateutil=True):\r\n    \"\"\"Parse an ISO8601-formatted datetime string and return a datetime.time\r\n    object.\r\n    \"\"\"\r\n    if not _iso8601_time_re.match(timestring):\r\n        raise ValueError('Not a valid ISO8601-formatted time string')\r\n    if dateutil_available and use_dateutil:\r\n        return parser.parse(timestring).time()\r\n    else:\r\n        if len(timestring) > 8:  # has microseconds\r\n            fmt = '%H:%M:%S.%f'\r\n        else:\r\n            fmt = '%H:%M:%S'\r\n        return datetime.datetime.strptime(timestring, fmt).time()\r\n```\r\n\r\nIt is easier because there is no timezone info.\r\n\r\n`from_iso_datetime` should be able to discriminate TZ info from microseconds.\r\n\r\nI noticed this because an unrelated test fails if python-dateutil is not installed.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1147/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1134", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1134/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1134/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1134/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1134", "id": 409840278, "node_id": "MDU6SXNzdWU0MDk4NDAyNzg=", "number": 1134, "title": "ChangedInMarshmallow3Warning raised for nested schemas", "user": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-02-13T14:46:59Z", "updated_at": "2019-02-13T15:11:48Z", "closed_at": "2019-02-13T15:11:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "From https://github.com/marshmallow-code/marshmallow/issues/1110#issuecomment-462901519\r\n\r\n> This warning appears to be happening on fields.Nested, even if the parent is using strict=True.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1134/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1132", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1132/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1132/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1132/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1132", "id": 409340305, "node_id": "MDU6SXNzdWU0MDkzNDAzMDU=", "number": 1132, "title": "Remove validation on serialization", "user": {"login": "NilsBarlaug-cognite", "id": 40356634, "node_id": "MDQ6VXNlcjQwMzU2NjM0", "avatar_url": "https://avatars.githubusercontent.com/u/40356634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NilsBarlaug-cognite", "html_url": "https://github.com/NilsBarlaug-cognite", "followers_url": "https://api.github.com/users/NilsBarlaug-cognite/followers", "following_url": "https://api.github.com/users/NilsBarlaug-cognite/following{/other_user}", "gists_url": "https://api.github.com/users/NilsBarlaug-cognite/gists{/gist_id}", "starred_url": "https://api.github.com/users/NilsBarlaug-cognite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NilsBarlaug-cognite/subscriptions", "organizations_url": "https://api.github.com/users/NilsBarlaug-cognite/orgs", "repos_url": "https://api.github.com/users/NilsBarlaug-cognite/repos", "events_url": "https://api.github.com/users/NilsBarlaug-cognite/events{/privacy}", "received_events_url": "https://api.github.com/users/NilsBarlaug-cognite/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 260913230, "node_id": "MDU6TGFiZWwyNjA5MTMyMzA=", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/backwards%20incompat", "name": "backwards incompat", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "deckar01", "id": 3108007, "node_id": "MDQ6VXNlcjMxMDgwMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3108007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deckar01", "html_url": "https://github.com/deckar01", "followers_url": "https://api.github.com/users/deckar01/followers", "following_url": "https://api.github.com/users/deckar01/following{/other_user}", "gists_url": "https://api.github.com/users/deckar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/deckar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deckar01/subscriptions", "organizations_url": "https://api.github.com/users/deckar01/orgs", "repos_url": "https://api.github.com/users/deckar01/repos", "events_url": "https://api.github.com/users/deckar01/events{/privacy}", "received_events_url": "https://api.github.com/users/deckar01/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "deckar01", "id": 3108007, "node_id": "MDQ6VXNlcjMxMDgwMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3108007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deckar01", "html_url": "https://github.com/deckar01", "followers_url": "https://api.github.com/users/deckar01/followers", "following_url": "https://api.github.com/users/deckar01/following{/other_user}", "gists_url": "https://api.github.com/users/deckar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/deckar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deckar01/subscriptions", "organizations_url": "https://api.github.com/users/deckar01/orgs", "repos_url": "https://api.github.com/users/deckar01/repos", "events_url": "https://api.github.com/users/deckar01/events{/privacy}", "received_events_url": "https://api.github.com/users/deckar01/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10", "html_url": "https://github.com/marshmallow-code/marshmallow/milestone/10", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10/labels", "id": 1419130, "node_id": "MDk6TWlsZXN0b25lMTQxOTEzMA==", "number": 10, "title": "3.0", "description": "", "creator": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 130, "state": "closed", "created_at": "2015-11-19T03:17:00Z", "updated_at": "2019-08-18T23:07:05Z", "due_on": null, "closed_at": "2019-08-18T23:07:05Z"}, "comments": 17, "created_at": "2019-02-12T14:55:53Z", "updated_at": "2019-08-10T16:50:26Z", "closed_at": "2019-07-31T03:43:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using `Dict(values=Nested())` I expect errors in dictionary values to be nested in such a way that I can locate exactly what element is causing the problem. This seems to work as expected for `load()`, but not for `dump()`.\r\n\r\nMinimal example:\r\n\r\n- Marshmallow version: 3.0.0rc4\r\n- Python version: 3.7.2\r\n\r\n```python\r\nfrom marshmallow import Schema, ValidationError, fields\r\n\r\n\r\nclass InnerSchema(Schema):\r\n    x = fields.Int()\r\n\r\n\r\nclass OuterSchema(Schema):\r\n    inner = fields.Dict(keys=fields.Str(), values=fields.Nested(InnerSchema))\r\n\r\n\r\nfoo = {\"inner\": {\"some-key\": {\"x\": \"abc\"}}}\r\n\r\ntry:\r\n    OuterSchema().load(foo)\r\nexcept ValidationError as e:\r\n    print(e)\r\n    # >>> {'inner': defaultdict(<class 'dict'>, {'some-key': {'value': {'x': ['Not a valid integer.']}}})}\r\n    # Very helpful - and what I expect\r\n\r\nclass Inner:\r\n    def __init__(self, x):\r\n        self.x = x\r\n\r\n\r\nclass Outer:\r\n    def __init__(self, inner):\r\n        self.inner = inner\r\n\r\n\r\nbar = Outer(inner={\"some-key\": Inner(x=\"abc\")})\r\n\r\ntry:\r\n    OuterSchema().dump(bar)\r\nexcept ValidationError as e:\r\n    print(e)\r\n    # >>> {'inner': {'x': ['Not a valid integer.']}}\r\n    # Surprisingly - 'some-key' and 'value' are not present here,\r\n    # which makes it harder to pinpoint the problem in large objects\r\n```", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1132/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1108", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1108/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1108/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1108/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1108", "id": 401486042, "node_id": "MDU6SXNzdWU0MDE0ODYwNDI=", "number": 1108, "title": "Nested field raises warning with strict=True", "user": {"login": "Aegdesil", "id": 7816329, "node_id": "MDQ6VXNlcjc4MTYzMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/7816329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aegdesil", "html_url": "https://github.com/Aegdesil", "followers_url": "https://api.github.com/users/Aegdesil/followers", "following_url": "https://api.github.com/users/Aegdesil/following{/other_user}", "gists_url": "https://api.github.com/users/Aegdesil/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aegdesil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aegdesil/subscriptions", "organizations_url": "https://api.github.com/users/Aegdesil/orgs", "repos_url": "https://api.github.com/users/Aegdesil/repos", "events_url": "https://api.github.com/users/Aegdesil/events{/privacy}", "received_events_url": "https://api.github.com/users/Aegdesil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-01-21T19:36:36Z", "updated_at": "2019-02-15T21:50:39Z", "closed_at": "2019-02-15T21:50:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using a Nested field in a `Schema` instantiated with `strict=True`, a deprecation warning is logged because the nested schema is instantiated without setting `strict`. I think the value of strict should be the same as the parent schema, so that the warning is only emitted when the parent schema is not strict.\r\n \r\n```\r\nfrom marshmallow import Schema, fields\r\n\r\n\r\nclass ChildSchema(Schema):\r\n    pass\r\n\r\nclass ParentSchema(Schema):\r\n    child = fields.Nested(ChildSchema)\r\n\r\nparent_schema = ParentSchema(strict=True)\r\nparent_schema.load({\"child\": {}})  # emits a ChangedInMarshmallow3Warning\r\n```\r\n\r\nUsing marshmallow version `2.18.0`.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1108/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1100", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1100/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1100/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1100/events", "html_url": "https://github.com/marshmallow-code/marshmallow/pull/1100", "id": 398333740, "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ0MDU3NzQ4", "number": 1100, "title": "Fix \"missing\" singleton copy/deepcopy", "user": {"login": "lafrech", "id": 1767010, "node_id": "MDQ6VXNlcjE3NjcwMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1767010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lafrech", "html_url": "https://github.com/lafrech", "followers_url": "https://api.github.com/users/lafrech/followers", "following_url": "https://api.github.com/users/lafrech/following{/other_user}", "gists_url": "https://api.github.com/users/lafrech/gists{/gist_id}", "starred_url": "https://api.github.com/users/lafrech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lafrech/subscriptions", "organizations_url": "https://api.github.com/users/lafrech/orgs", "repos_url": "https://api.github.com/users/lafrech/repos", "events_url": "https://api.github.com/users/lafrech/events{/privacy}", "received_events_url": "https://api.github.com/users/lafrech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-11T15:24:06Z", "updated_at": "2019-01-14T00:11:23Z", "closed_at": "2019-01-14T00:11:19Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/pulls/1100", "html_url": "https://github.com/marshmallow-code/marshmallow/pull/1100", "diff_url": "https://github.com/marshmallow-code/marshmallow/pull/1100.diff", "patch_url": "https://github.com/marshmallow-code/marshmallow/pull/1100.patch", "merged_at": "2019-01-14T00:11:19Z"}, "body": "Same as https://github.com/marshmallow-code/marshmallow/pull/1099 but on 2.x.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1100/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1052", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1052/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1052/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1052/events", "html_url": "https://github.com/marshmallow-code/marshmallow/pull/1052", "id": 381109707, "node_id": "MDExOlB1bGxSZXF1ZXN0MjMxMTUzNDM0", "number": 1052, "title": "Fix List and Dict valid_data", "user": {"login": "lafrech", "id": 1767010, "node_id": "MDQ6VXNlcjE3NjcwMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1767010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lafrech", "html_url": "https://github.com/lafrech", "followers_url": "https://api.github.com/users/lafrech/followers", "following_url": "https://api.github.com/users/lafrech/following{/other_user}", "gists_url": "https://api.github.com/users/lafrech/gists{/gist_id}", "starred_url": "https://api.github.com/users/lafrech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lafrech/subscriptions", "organizations_url": "https://api.github.com/users/lafrech/orgs", "repos_url": "https://api.github.com/users/lafrech/repos", "events_url": "https://api.github.com/users/lafrech/events{/privacy}", "received_events_url": "https://api.github.com/users/lafrech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10", "html_url": "https://github.com/marshmallow-code/marshmallow/milestone/10", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10/labels", "id": 1419130, "node_id": "MDk6TWlsZXN0b25lMTQxOTEzMA==", "number": 10, "title": "3.0", "description": "", "creator": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 130, "state": "closed", "created_at": "2015-11-19T03:17:00Z", "updated_at": "2019-08-18T23:07:05Z", "due_on": null, "closed_at": "2019-08-18T23:07:05Z"}, "comments": 2, "created_at": "2018-11-15T11:03:53Z", "updated_at": "2018-12-26T23:32:48Z", "closed_at": "2018-12-26T23:32:39Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/pulls/1052", "html_url": "https://github.com/marshmallow-code/marshmallow/pull/1052", "diff_url": "https://github.com/marshmallow-code/marshmallow/pull/1052.diff", "patch_url": "https://github.com/marshmallow-code/marshmallow/pull/1052.patch", "merged_at": "2018-12-26T23:32:39Z"}, "body": "I've been trying to fix a few issues about `valid_data` in `List` and `Dict`.\r\n\r\nFixes https://github.com/marshmallow-code/marshmallow/issues/766.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1052/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1051", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1051/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1051/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1051/events", "html_url": "https://github.com/marshmallow-code/marshmallow/pull/1051", "id": 380652869, "node_id": "MDExOlB1bGxSZXF1ZXN0MjMwNzk5MTcz", "number": 1051, "title": "Don't pass data to ValidationError in Nested._serialize and Nested._load", "user": {"login": "lafrech", "id": 1767010, "node_id": "MDQ6VXNlcjE3NjcwMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1767010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lafrech", "html_url": "https://github.com/lafrech", "followers_url": "https://api.github.com/users/lafrech/followers", "following_url": "https://api.github.com/users/lafrech/following{/other_user}", "gists_url": "https://api.github.com/users/lafrech/gists{/gist_id}", "starred_url": "https://api.github.com/users/lafrech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lafrech/subscriptions", "organizations_url": "https://api.github.com/users/lafrech/orgs", "repos_url": "https://api.github.com/users/lafrech/repos", "events_url": "https://api.github.com/users/lafrech/events{/privacy}", "received_events_url": "https://api.github.com/users/lafrech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10", "html_url": "https://github.com/marshmallow-code/marshmallow/milestone/10", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10/labels", "id": 1419130, "node_id": "MDk6TWlsZXN0b25lMTQxOTEzMA==", "number": 10, "title": "3.0", "description": "", "creator": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 130, "state": "closed", "created_at": "2015-11-19T03:17:00Z", "updated_at": "2019-08-18T23:07:05Z", "due_on": null, "closed_at": "2019-08-18T23:07:05Z"}, "comments": 2, "created_at": "2018-11-14T11:21:06Z", "updated_at": "2018-11-14T13:49:58Z", "closed_at": "2018-11-14T13:49:52Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/pulls/1051", "html_url": "https://github.com/marshmallow-code/marshmallow/pull/1051", "diff_url": "https://github.com/marshmallow-code/marshmallow/pull/1051.diff", "patch_url": "https://github.com/marshmallow-code/marshmallow/pull/1051.patch", "merged_at": "2018-11-14T13:49:52Z"}, "body": "I think we should pass `nested_obj`, here.\r\n\r\nI don't know how to test this. In fact, it is never used as it is swallowed by Marshaller.\r\n\r\n(I stumbled upon this while investigating https://github.com/marshmallow-code/marshmallow/issues/1046.)", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1051/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1048", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1048/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1048/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1048/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1048", "id": 380619120, "node_id": "MDU6SXNzdWUzODA2MTkxMjA=", "number": 1048, "title": "TypeError when serializing a Pluck field valuated to None", "user": {"login": "toffan", "id": 10775773, "node_id": "MDQ6VXNlcjEwNzc1Nzcz", "avatar_url": "https://avatars.githubusercontent.com/u/10775773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toffan", "html_url": "https://github.com/toffan", "followers_url": "https://api.github.com/users/toffan/followers", "following_url": "https://api.github.com/users/toffan/following{/other_user}", "gists_url": "https://api.github.com/users/toffan/gists{/gist_id}", "starred_url": "https://api.github.com/users/toffan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toffan/subscriptions", "organizations_url": "https://api.github.com/users/toffan/orgs", "repos_url": "https://api.github.com/users/toffan/repos", "events_url": "https://api.github.com/users/toffan/events{/privacy}", "received_events_url": "https://api.github.com/users/toffan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10", "html_url": "https://github.com/marshmallow-code/marshmallow/milestone/10", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10/labels", "id": 1419130, "node_id": "MDk6TWlsZXN0b25lMTQxOTEzMA==", "number": 10, "title": "3.0", "description": "", "creator": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 130, "state": "closed", "created_at": "2015-11-19T03:17:00Z", "updated_at": "2019-08-18T23:07:05Z", "due_on": null, "closed_at": "2019-08-18T23:07:05Z"}, "comments": 0, "created_at": "2018-11-14T09:57:20Z", "updated_at": "2018-11-14T13:59:53Z", "closed_at": "2018-11-14T13:59:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using `fields.Pluck` on an attribute valuated to `None` raises a `TypeError`, cf. the example below.\r\n```python\r\nfrom marshmallow import Schema, fields\r\nfrom dataclasses import dataclass\r\n\r\n@dataclass\r\nclass Nested:\r\n    key: str\r\n\r\n@dataclass\r\nclass Main:\r\n    nested: Nested\r\n\r\nclass NestedSchema(Schema):\r\n    key = fields.String()\r\n\r\nclass MainSchema(Schema):\r\n    nested = fields.Pluck(NestedSchema, 'key')\r\n\r\nm = Main(None)\r\ndumped = MainSchema().dump(m)  # ERROR\r\n# File \".../marshmallow/fields.py\", line 521, in _serialize\r\n#   return ret[self._field_data_key]\r\n# TypeError: 'NoneType' object is not subscriptable\r\n```", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1048/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1033", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1033/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1033/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1033/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1033", "id": 375787410, "node_id": "MDU6SXNzdWUzNzU3ODc0MTA=", "number": 1033, "title": "Examples link points to python", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 121211057, "node_id": "MDU6TGFiZWwxMjEyMTEwNTc=", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/docs", "name": "docs", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-10-31T03:51:42Z", "updated_at": "2018-11-09T02:09:28Z", "closed_at": "2018-11-09T02:09:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "The Examples link at the bottom points to the wrong page. It points to python.readthedocs.org instead of marshmallow's docs. \r\n\r\nhttps://marshmallow.readthedocs.io/en/3.0/quickstart.html", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1033/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1033/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1012", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1012/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1012/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1012/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/1012", "id": 371934041, "node_id": "MDU6SXNzdWUzNzE5MzQwNDE=", "number": 1012, "title": "Put TYPE_MAPPING back in Shema", "user": {"login": "lafrech", "id": 1767010, "node_id": "MDQ6VXNlcjE3NjcwMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1767010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lafrech", "html_url": "https://github.com/lafrech", "followers_url": "https://api.github.com/users/lafrech/followers", "following_url": "https://api.github.com/users/lafrech/following{/other_user}", "gists_url": "https://api.github.com/users/lafrech/gists{/gist_id}", "starred_url": "https://api.github.com/users/lafrech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lafrech/subscriptions", "organizations_url": "https://api.github.com/users/lafrech/orgs", "repos_url": "https://api.github.com/users/lafrech/repos", "events_url": "https://api.github.com/users/lafrech/events{/privacy}", "received_events_url": "https://api.github.com/users/lafrech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/14", "html_url": "https://github.com/marshmallow-code/marshmallow/milestone/14", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/14/labels", "id": 3736487, "node_id": "MDk6TWlsZXN0b25lMzczNjQ4Nw==", "number": 14, "title": "3.0.0rc1", "description": "", "creator": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 6, "state": "closed", "created_at": "2018-10-13T23:43:51Z", "updated_at": "2019-07-20T14:00:56Z", "due_on": null, "closed_at": "2018-12-01T21:32:02Z"}, "comments": 1, "created_at": "2018-10-19T12:20:17Z", "updated_at": "2018-10-25T03:02:42Z", "closed_at": "2018-10-25T03:02:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It was pulled away with the inference feature.\r\n\r\nhttps://github.com/marshmallow-code/marshmallow/pull/810#issuecomment-431284692", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1012/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1012/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1002", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1002/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1002/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1002/events", "html_url": "https://github.com/marshmallow-code/marshmallow/pull/1002", "id": 370046482, "node_id": "MDExOlB1bGxSZXF1ZXN0MjIyODE2ODYx", "number": 1002, "title": " Fix Date deserialization when using custom format", "user": {"login": "lafrech", "id": 1767010, "node_id": "MDQ6VXNlcjE3NjcwMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1767010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lafrech", "html_url": "https://github.com/lafrech", "followers_url": "https://api.github.com/users/lafrech/followers", "following_url": "https://api.github.com/users/lafrech/following{/other_user}", "gists_url": "https://api.github.com/users/lafrech/gists{/gist_id}", "starred_url": "https://api.github.com/users/lafrech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lafrech/subscriptions", "organizations_url": "https://api.github.com/users/lafrech/orgs", "repos_url": "https://api.github.com/users/lafrech/repos", "events_url": "https://api.github.com/users/lafrech/events{/privacy}", "received_events_url": "https://api.github.com/users/lafrech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/14", "html_url": "https://github.com/marshmallow-code/marshmallow/milestone/14", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/14/labels", "id": 3736487, "node_id": "MDk6TWlsZXN0b25lMzczNjQ4Nw==", "number": 14, "title": "3.0.0rc1", "description": "", "creator": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 6, "state": "closed", "created_at": "2018-10-13T23:43:51Z", "updated_at": "2019-07-20T14:00:56Z", "due_on": null, "closed_at": "2018-12-01T21:32:02Z"}, "comments": 0, "created_at": "2018-10-15T08:12:10Z", "updated_at": "2018-10-15T14:39:53Z", "closed_at": "2018-10-15T14:39:20Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/pulls/1002", "html_url": "https://github.com/marshmallow-code/marshmallow/pull/1002", "diff_url": "https://github.com/marshmallow-code/marshmallow/pull/1002.diff", "patch_url": "https://github.com/marshmallow-code/marshmallow/pull/1002.patch", "merged_at": "2018-10-15T14:39:20Z"}, "body": "Fixes #1001.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1002/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/1002/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/993", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/993/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/993/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/993/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/993", "id": 369094959, "node_id": "MDU6SXNzdWUzNjkwOTQ5NTk=", "number": 993, "title": "Method Errors Cause Missing Field", "user": {"login": "layoaster", "id": 4516478, "node_id": "MDQ6VXNlcjQ1MTY0Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4516478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/layoaster", "html_url": "https://github.com/layoaster", "followers_url": "https://api.github.com/users/layoaster/followers", "following_url": "https://api.github.com/users/layoaster/following{/other_user}", "gists_url": "https://api.github.com/users/layoaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/layoaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/layoaster/subscriptions", "organizations_url": "https://api.github.com/users/layoaster/orgs", "repos_url": "https://api.github.com/users/layoaster/repos", "events_url": "https://api.github.com/users/layoaster/events{/privacy}", "received_events_url": "https://api.github.com/users/layoaster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-11T12:21:41Z", "updated_at": "2018-10-13T23:18:42Z", "closed_at": "2018-10-13T23:18:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the following Schema:\r\n\r\n```python\r\nclass CallRecord(Schema):\r\n    #: Call start timestamp.\r\n    started_at = fields.Integer(required=True)\r\n    #: Call answer timestamp.\r\n    answered_at = fields.Integer(required=True, allow_none=True)\r\n    #: Call waiting time in seconds.\r\n    waiting = fields.Method('get_waiting_time')\r\n\r\n    def get_waiting_time(self, record: Schema) -> int:\r\n        answer_duration = None\r\n\r\n        if record.answered_at:\r\n            start_ts = datetime.fromtimestamp(record.started_at)\r\n            answer_ts = datetime.fromtimestamp(record.answered_at)\r\n            answer_duration = int((answer_ts - start_ts).total_seconds())\r\n\r\n        return answer_duration\r\n```\r\n\r\nConsider the following data:\r\n```python\r\nraw_data = {\r\n       \"id\": 79462182,\r\n       \"direct_link\": \"https://api.aircall.io/v1/calls/79462182\",\r\n       \"direction\": \"outbound\",\r\n       \"status\": \"done\",\r\n       \"missed_call_reason\": None,\r\n       \"started_at\": 1539177181,\r\n       \"answered_at\": 1539177194,\r\n       \"ended_at\": 1539177918,\r\n       \"duration\": 736\r\n}\r\n```\r\n\r\nWhen I call `dump` you can see the `data` dictionary doesn't contain the field `waiting`.\r\n\r\n```python\r\ntest = CallRecord().dump(raw_data)\r\nprint(test)\r\nMarshalResult(\r\n    data={'id': 79462182, 'answered_at': 1539177194, 'direction': 'outbound', 'duration': 736, 'status': 'done', 'started_at': 1539177181}, \r\n    errors={})\r\n\r\n```\r\n\r\nIn fact the function doesn't even get called. Any idea why ?\r\n\r\nI'm  running on Python 3.6.4 with `marshmallow==2.16.0`", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/993/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/990", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/990/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/990/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/990/events", "html_url": "https://github.com/marshmallow-code/marshmallow/pull/990", "id": 369021776, "node_id": "MDExOlB1bGxSZXF1ZXN0MjIyMDU5MDc2", "number": 990, "title": "Fix Pluck load with data_key", "user": {"login": "lafrech", "id": 1767010, "node_id": "MDQ6VXNlcjE3NjcwMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1767010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lafrech", "html_url": "https://github.com/lafrech", "followers_url": "https://api.github.com/users/lafrech/followers", "following_url": "https://api.github.com/users/lafrech/following{/other_user}", "gists_url": "https://api.github.com/users/lafrech/gists{/gist_id}", "starred_url": "https://api.github.com/users/lafrech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lafrech/subscriptions", "organizations_url": "https://api.github.com/users/lafrech/orgs", "repos_url": "https://api.github.com/users/lafrech/repos", "events_url": "https://api.github.com/users/lafrech/events{/privacy}", "received_events_url": "https://api.github.com/users/lafrech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10", "html_url": "https://github.com/marshmallow-code/marshmallow/milestone/10", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10/labels", "id": 1419130, "node_id": "MDk6TWlsZXN0b25lMTQxOTEzMA==", "number": 10, "title": "3.0", "description": "", "creator": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 130, "state": "closed", "created_at": "2015-11-19T03:17:00Z", "updated_at": "2019-08-18T23:07:05Z", "due_on": null, "closed_at": "2019-08-18T23:07:05Z"}, "comments": 0, "created_at": "2018-10-11T09:05:01Z", "updated_at": "2018-10-13T21:47:29Z", "closed_at": "2018-10-13T21:47:27Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/pulls/990", "html_url": "https://github.com/marshmallow-code/marshmallow/pull/990", "diff_url": "https://github.com/marshmallow-code/marshmallow/pull/990.diff", "patch_url": "https://github.com/marshmallow-code/marshmallow/pull/990.patch", "merged_at": "2018-10-13T21:47:27Z"}, "body": "The `data_key` must be managed also when deserializing.\r\n\r\n@deckar01 do you think you could check this is correct?", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/990/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/990/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/956", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/956/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/956/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/956/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/956", "id": 361427983, "node_id": "MDU6SXNzdWUzNjE0Mjc5ODM=", "number": 956, "title": "Root reference is broken for nested/container fields when using schema inheritance ", "user": {"login": "bmcbu", "id": 7058564, "node_id": "MDQ6VXNlcjcwNTg1NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7058564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmcbu", "html_url": "https://github.com/bmcbu", "followers_url": "https://api.github.com/users/bmcbu/followers", "following_url": "https://api.github.com/users/bmcbu/following{/other_user}", "gists_url": "https://api.github.com/users/bmcbu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmcbu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmcbu/subscriptions", "organizations_url": "https://api.github.com/users/bmcbu/orgs", "repos_url": "https://api.github.com/users/bmcbu/repos", "events_url": "https://api.github.com/users/bmcbu/events{/privacy}", "received_events_url": "https://api.github.com/users/bmcbu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-18T18:29:09Z", "updated_at": "2018-09-21T12:08:38Z", "closed_at": "2018-09-21T01:13:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use schema inheritance a lot to reuse shared parts of schemas. Additionally I have some custom fields with validation methods which use references to the field's root schema. When these custom fields are used in nested schemas or inside lists, then the same field instance is used in different schema classes and thus the root reference is \"broken\":\r\n\r\n```python\r\n>>> import marshmallow\r\n>>> marshmallow.__version__\r\n'3.0.0b13'\r\n>>> from marshmallow import fields\r\n>>> from marshmallow.schema import Schema\r\n>>> class A(Schema):\r\n...     f1 = fields.List(fields.Integer())\r\n... \r\n>>> class B(A):\r\n...     pass\r\n... \r\n>>> a = A()\r\n>>> b = B()\r\n>>> a_f1 = a.declared_fields['f1']\r\n>>> b_f1 = b.declared_fields['f1']\r\n>>> a_f1.root == a\r\nTrue\r\n>>> b_f1.root == b\r\nTrue\r\n>>> a_f1.container.root == a\r\nFalse\r\n>>> a_f1.container.root == b\r\nTrue\r\n```\r\nSo the problem is that the container root of field `f1` of schema instance `a` is schema instance `b`. In fact `a_f1.container` and `b_f1.container` point to the same object.\r\n\r\nIs this a problem of how I use marshmallow or is this a bug?\r\n\r\nI find the possibility to reference a field's root schema very valuable and the root property looks like it can be used like that. However, I think the problem here is that nested (or container) fields are not unique instances when used in multiple classes.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/956/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/948", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/948/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/948/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/948/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/948", "id": 359630301, "node_id": "MDU6SXNzdWUzNTk2MzAzMDE=", "number": 948, "title": "No attribute '_add_to_schema' when dumping Schema and Nested Field is None", "user": {"login": "vke-code", "id": 43219587, "node_id": "MDQ6VXNlcjQzMjE5NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/43219587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vke-code", "html_url": "https://github.com/vke-code", "followers_url": "https://api.github.com/users/vke-code/followers", "following_url": "https://api.github.com/users/vke-code/following{/other_user}", "gists_url": "https://api.github.com/users/vke-code/gists{/gist_id}", "starred_url": "https://api.github.com/users/vke-code/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vke-code/subscriptions", "organizations_url": "https://api.github.com/users/vke-code/orgs", "repos_url": "https://api.github.com/users/vke-code/repos", "events_url": "https://api.github.com/users/vke-code/events{/privacy}", "received_events_url": "https://api.github.com/users/vke-code/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-12T20:00:22Z", "updated_at": "2018-10-11T19:11:11Z", "closed_at": "2018-10-11T19:11:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Marshmallow Code!\r\n\r\nI have recently discovered and began implementing your code for my own projects and I must say you have changed how I work with databases forever! \r\n\r\nI have been running up against a wall with this issue however, and decided to reach out to the pros! It could be that I am missing something simple.\r\n\r\nFor context, I am storing hosts in a database. 'Hosts' have a one-to-many relationship with 'Ports'. \r\n\r\nI have developed a HostSchema and PortSchema using ModelSchema from marshmallow-sqlalchemy. This works BEAUTIFULLY, except when a host does not have any ports associated with it. \r\n\r\nAttached below is example code which demonstrates the expected behavior as well as the error. Please excuse me if this isn't an actual bug and just user error, although some insight would be very much appreciated.\r\n\r\n### Truncated Pip Freeze\r\n- Flask==1.0.2\r\n- flask-marshmallow==0.9.0\r\n- Flask-SQLAlchemy==2.3.2\r\n- marshmallow==2.15.4\r\n- marshmallow-sqlalchemy==0.14.1\r\n- SQLAlchemy==1.2.11\r\n\r\n### Minimal Example\r\n```py\r\nfrom flask import Flask\r\nfrom flask_sqlalchemy import SQLAlchemy\r\nfrom flask_marshmallow import Marshmallow\r\n\r\nfrom marshmallow import fields, post_dump, pre_dump\r\nimport json\r\n\r\napp = Flask(__name__)\r\ndb = SQLAlchemy(app)\r\nma = Marshmallow(app)\r\n\r\nclass Host(db.Model):\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    ip = db.Column(db.String(16), index=True, unique=True, nullable=False)\r\n\r\n    ports = db.relationship('Port', backref='host', lazy='dynamic')\r\n\r\n\r\nclass Port(db.Model):\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    host_id = db.Column(db.Integer, db.ForeignKey('host.id'), index=True)\r\n    port = db.Column(db.Integer)\r\n    transport = db.Column(db.String(8))\r\n    service = db.Column(db.String(16))\r\n\r\n\r\nclass PortSchema(ma.ModelSchema):\r\n    class Meta:\r\n        model = Port\r\n        exclude = ('id' , 'host')\r\n        sqla_session = db.Session\r\n\r\nclass HostSchema(ma.ModelSchema):\r\n    ports = fields.Nested(PortSchema, many=True)\r\n    class Meta:\r\n        model = Host\r\n        sqla_session = db.Session\r\n```\r\n### Behavior when 'ports' is defined in 'host' object.\r\nThis works as expected.\r\n\r\n```py\r\nhost = Host(ip='127.0.0.1')\r\nport = Port(port=80, transport='tcp', service='http')\r\nhost.ports.append(port)\r\n\r\nresult = HostSchema().dump(host)\r\n\r\nprint json.dumps(result.data, indent=2)\r\n\r\n\r\n# {\r\n#   \"ip\": \"127.0.0.1\",\r\n#   \"ports\": [\r\n#     {\r\n#       \"transport\": \"tcp\",\r\n#       \"service\": \"http\",\r\n#       \"port\": 80\r\n#     }\r\n#   ],\r\n#   \"id\": null\r\n# }\r\n```\r\n\r\n### Unexpected behavior when 'ports' is undefined in 'host' object.\r\nFrom what I've gathered from the documentation the default behavior is to skip any fields which are missing during serialization. I have also tried using `missing` and `default`, but if I understand correctly these only apply for deserialization. \r\n\r\n```py\r\nhost = Host(ip='127.0.0.1')\r\nresult = HostSchema().dump(host)\r\n```\r\n\r\n### Expected Behavior\r\n```py\r\n{\r\n  \"ip\": \"127.0.0.1\",\r\n  \"ports\": {},\r\n  \"id\": null\r\n}\r\n```\r\n### Actual result:\r\n```py\r\nTraceback (most recent call last):\r\n  File \"scratch/missing-field-nested-bug.py\", line 72, in <module>\r\n    result = HostSchema().dump(host)\r\n  File \"/Users/kai/.virtualenvs/SPEZZI/lib/python2.7/site-packages/marshmallow/schema.py\", line 509, in dump\r\n    **kwargs\r\n  File \"/Users/kai/.virtualenvs/SPEZZI/lib/python2.7/site-packages/marshmallow/marshalling.py\", line 138, in serialize\r\n    index=(index if index_errors else None)\r\n  File \"/Users/kai/.virtualenvs/SPEZZI/lib/python2.7/site-packages/marshmallow/marshalling.py\", line 62, in call_and_store\r\n    value = getter_func(data)\r\n  File \"/Users/kai/.virtualenvs/SPEZZI/lib/python2.7/site-packages/marshmallow/marshalling.py\", line 132, in <lambda>\r\n    getter = lambda d: field_obj.serialize(attr_name, d, accessor=accessor)\r\n  File \"/Users/kai/.virtualenvs/SPEZZI/lib/python2.7/site-packages/marshmallow/fields.py\", line 252, in serialize\r\n    return self._serialize(value, attr, obj)\r\n  File \"/Users/kai/.virtualenvs/SPEZZI/lib/python2.7/site-packages/marshmallow/fields.py\", line 447, in _serialize\r\n    schema._update_fields(obj=nested_obj, many=self.many)\r\n  File \"/Users/kai/.virtualenvs/SPEZZI/lib/python2.7/site-packages/marshmallow/schema.py\", line 767, in _update_fields\r\n    self.__set_field_attrs(ret)\r\n  File \"/Users/kai/.virtualenvs/SPEZZI/lib/python2.7/site-packages/marshmallow/schema.py\", line 788, in __set_field_attrs\r\n    field_obj._add_to_schema(field_name, self)\r\nAttributeError: 'NoneType' object has no attribute '_add_to_schema'\r\n```\r\n\r\n\r\nThank you all for any help or insights you can offer! Please let me know if further clarification is required.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/948/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/922", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/922/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/922/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/922/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/922", "id": 352731076, "node_id": "MDU6SXNzdWUzNTI3MzEwNzY=", "number": 922, "title": "Context is cached improperly on nested schemas", "user": {"login": "asthasr", "id": 466533, "node_id": "MDQ6VXNlcjQ2NjUzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/466533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asthasr", "html_url": "https://github.com/asthasr", "followers_url": "https://api.github.com/users/asthasr/followers", "following_url": "https://api.github.com/users/asthasr/following{/other_user}", "gists_url": "https://api.github.com/users/asthasr/gists{/gist_id}", "starred_url": "https://api.github.com/users/asthasr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asthasr/subscriptions", "organizations_url": "https://api.github.com/users/asthasr/orgs", "repos_url": "https://api.github.com/users/asthasr/repos", "events_url": "https://api.github.com/users/asthasr/events{/privacy}", "received_events_url": "https://api.github.com/users/asthasr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-08-21T22:15:27Z", "updated_at": "2018-12-04T13:56:25Z", "closed_at": "2018-12-04T13:56:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running into an issue where passing parameters down into a set of schemas is breaking. I essentially have this:\r\n\r\n```\r\nclass RelationshipSchema(Schema):\r\n    singular = fields.Nested(OtherSchema())\r\n    plural = fields.Nested(OtherSchema(many=True))\r\n```\r\n\r\nI have attempted to set up `plural` with both a `List(Nested(OtherSchema)))` structure and the current `Nested(OtherSchema(many=True))` structure. Both, initially, appear to work and parse. However, within a `@post_load` hook that needs to call `self.context['request'].dbsession` to get a database session, the `plural` fails: it will work on the first call after the services start, but then fail on subsequent calls as it somehow caches that `self.context` object.\r\n\r\nMy next workaround is going to be to use threadlocals.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/922/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/920", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/920/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/920/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/920/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/920", "id": 352000775, "node_id": "MDU6SXNzdWUzNTIwMDA3NzU=", "number": 920, "title": "bug in Nested field processing None value", "user": {"login": "zioniony", "id": 24883720, "node_id": "MDQ6VXNlcjI0ODgzNzIw", "avatar_url": "https://avatars.githubusercontent.com/u/24883720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zioniony", "html_url": "https://github.com/zioniony", "followers_url": "https://api.github.com/users/zioniony/followers", "following_url": "https://api.github.com/users/zioniony/following{/other_user}", "gists_url": "https://api.github.com/users/zioniony/gists{/gist_id}", "starred_url": "https://api.github.com/users/zioniony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zioniony/subscriptions", "organizations_url": "https://api.github.com/users/zioniony/orgs", "repos_url": "https://api.github.com/users/zioniony/repos", "events_url": "https://api.github.com/users/zioniony/events{/privacy}", "received_events_url": "https://api.github.com/users/zioniony/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 96590020, "node_id": "MDU6TGFiZWw5NjU5MDAyMA==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/help%20wanted", "name": "help wanted", "color": "0e8a16", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-08-20T06:27:28Z", "updated_at": "2018-08-22T00:40:23Z", "closed_at": "2018-08-22T00:40:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "##test.py\r\n```Python\r\nfrom marshmallow import Schema, fields, validates\r\n\r\n\r\nclass ArtistSchema(Schema):\r\n    name = fields.Str(required=True)\r\n\r\n    @validates('name')\r\n    def check_name(self, value):\r\n        pass\r\n\r\nclass AlbumSchema(Schema):\r\n    artists = fields.Nested(ArtistSchema, many=True)\r\n\r\ns = AlbumSchema()\r\ns.loads('{\"artists\": [null]}')\r\n```\r\n\r\nthis will cause TypeError:\r\n```\r\n~/.virtualenvs/py3/lib/python3.6/site-packages/marshmallow/schema.py in _invoke_field_validators(self, unmarshal, data, many)\r\n    880                 for idx, item in enumerate(data):\r\n    881                     try:\r\n--> 882                         value = item[field_obj.attribute or field_name]\r\n    883                     except KeyError:\r\n    884                         pass\r\n\r\nTypeError: 'NoneType' object is not subscriptable\r\n\r\n```\r\n\r\nwould it be better to check item first or catch more exception types?", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/920/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/920/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/912", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/912/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/912/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/912/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/912", "id": 349951065, "node_id": "MDU6SXNzdWUzNDk5NTEwNjU=", "number": 912, "title": "Misstype in shema docs", "user": {"login": "LizardWizzard", "id": 19991702, "node_id": "MDQ6VXNlcjE5OTkxNzAy", "avatar_url": "https://avatars.githubusercontent.com/u/19991702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LizardWizzard", "html_url": "https://github.com/LizardWizzard", "followers_url": "https://api.github.com/users/LizardWizzard/followers", "following_url": "https://api.github.com/users/LizardWizzard/following{/other_user}", "gists_url": "https://api.github.com/users/LizardWizzard/gists{/gist_id}", "starred_url": "https://api.github.com/users/LizardWizzard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LizardWizzard/subscriptions", "organizations_url": "https://api.github.com/users/LizardWizzard/orgs", "repos_url": "https://api.github.com/users/LizardWizzard/repos", "events_url": "https://api.github.com/users/LizardWizzard/events{/privacy}", "received_events_url": "https://api.github.com/users/LizardWizzard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-13T09:22:14Z", "updated_at": "2018-08-14T22:31:04Z", "closed_at": "2018-08-14T22:30:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I think there is a miss type [here](https://github.com/marshmallow-code/marshmallow/blob/dev/marshmallow/schema.py#L320) Sentence about default option is duplicated. Can I make a PR?", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/912/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/908", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/908/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/908/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/908/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/908", "id": 348688127, "node_id": "MDU6SXNzdWUzNDg2ODgxMjc=", "number": 908, "title": "RAISE should be default for Nested()", "user": {"login": "tuukkamustonen", "id": 94327, "node_id": "MDQ6VXNlcjk0MzI3", "avatar_url": "https://avatars.githubusercontent.com/u/94327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tuukkamustonen", "html_url": "https://github.com/tuukkamustonen", "followers_url": "https://api.github.com/users/tuukkamustonen/followers", "following_url": "https://api.github.com/users/tuukkamustonen/following{/other_user}", "gists_url": "https://api.github.com/users/tuukkamustonen/gists{/gist_id}", "starred_url": "https://api.github.com/users/tuukkamustonen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tuukkamustonen/subscriptions", "organizations_url": "https://api.github.com/users/tuukkamustonen/orgs", "repos_url": "https://api.github.com/users/tuukkamustonen/repos", "events_url": "https://api.github.com/users/tuukkamustonen/events{/privacy}", "received_events_url": "https://api.github.com/users/tuukkamustonen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10", "html_url": "https://github.com/marshmallow-code/marshmallow/milestone/10", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10/labels", "id": 1419130, "node_id": "MDk6TWlsZXN0b25lMTQxOTEzMA==", "number": 10, "title": "3.0", "description": "", "creator": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 130, "state": "closed", "created_at": "2015-11-19T03:17:00Z", "updated_at": "2019-08-18T23:07:05Z", "due_on": null, "closed_at": "2019-08-18T23:07:05Z"}, "comments": 2, "created_at": "2018-08-08T11:37:18Z", "updated_at": "2018-09-03T12:14:10Z", "closed_at": "2018-09-03T12:14:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Isn't it a bit weird that `Schema` defaults to `RAISE` but `Nested` defaults to `EXCLUDE`?\r\n\r\nIt's probably not what one expects (at least I didn't). How about changing the default? Or what might be the reasoning?", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/908/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/876", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/876/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/876/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/876/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/876", "id": 339105455, "node_id": "MDU6SXNzdWUzMzkxMDU0NTU=", "number": 876, "title": "EmailField validation misses unicode non-breaking space", "user": {"login": "WeishenMead", "id": 2069255, "node_id": "MDQ6VXNlcjIwNjkyNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/2069255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WeishenMead", "html_url": "https://github.com/WeishenMead", "followers_url": "https://api.github.com/users/WeishenMead/followers", "following_url": "https://api.github.com/users/WeishenMead/following{/other_user}", "gists_url": "https://api.github.com/users/WeishenMead/gists{/gist_id}", "starred_url": "https://api.github.com/users/WeishenMead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WeishenMead/subscriptions", "organizations_url": "https://api.github.com/users/WeishenMead/orgs", "repos_url": "https://api.github.com/users/WeishenMead/repos", "events_url": "https://api.github.com/users/WeishenMead/events{/privacy}", "received_events_url": "https://api.github.com/users/WeishenMead/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-07T01:07:06Z", "updated_at": "2019-09-14T02:07:14Z", "closed_at": "2019-09-14T02:07:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I believe there's a slight bug with how Marshmallow handles validating emails with certain Unicode characters. Example test case below. \r\n\r\nI believe this is because when validating the input [`domain_part.encode('idna').decode('ascii')`](https://github.com/marshmallow-code/marshmallow/blob/90d5160153442035980c2212d5ac3af5f96896c3/marshmallow/validate.py#L166) strips the zero-width space out of the string before validating on it, but does not change the actual string itself.\r\n\r\nI admit I'm also not entirely sure this is a problem, as I'm not certain if a zero-width space at the end of an email is really valid or not (I see this has been debated in [Django](https://code.djangoproject.com/ticket/17386)).\r\n\r\nApologies if this isn't really a bug for Marshmallow to handle. Because I'm not sure what the correct behavior should be I wanted to at least report it.\r\n\r\n```\r\nfrom marshmallow import fields, Schema\r\nclass Test(Schema):\r\n    email = fields.Email\r\n\r\ndata, err = schema.loads('{\"email\": \"test@lyft.com\\u200b\"}')\r\nprint(data['email'])\r\n```\r\n\r\nResults in `UnicodeEncodeError: 'ascii' codec can't encode character '\\u200b' in position 13: ordinal not in range(128)`", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/876/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/876/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/863", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/863/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/863/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/863/events", "html_url": "https://github.com/marshmallow-code/marshmallow/pull/863", "id": 337327375, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk4NTQ1NzY4", "number": 863, "title": "WIP - Fix 'error on Nested field is stored under \"_field\" key'", "user": {"login": "lafrech", "id": 1767010, "node_id": "MDQ6VXNlcjE3NjcwMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1767010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lafrech", "html_url": "https://github.com/lafrech", "followers_url": "https://api.github.com/users/lafrech/followers", "following_url": "https://api.github.com/users/lafrech/following{/other_user}", "gists_url": "https://api.github.com/users/lafrech/gists{/gist_id}", "starred_url": "https://api.github.com/users/lafrech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lafrech/subscriptions", "organizations_url": "https://api.github.com/users/lafrech/orgs", "repos_url": "https://api.github.com/users/lafrech/repos", "events_url": "https://api.github.com/users/lafrech/events{/privacy}", "received_events_url": "https://api.github.com/users/lafrech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10", "html_url": "https://github.com/marshmallow-code/marshmallow/milestone/10", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10/labels", "id": 1419130, "node_id": "MDk6TWlsZXN0b25lMTQxOTEzMA==", "number": 10, "title": "3.0", "description": "", "creator": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 130, "state": "closed", "created_at": "2015-11-19T03:17:00Z", "updated_at": "2019-08-18T23:07:05Z", "due_on": null, "closed_at": "2019-08-18T23:07:05Z"}, "comments": 3, "created_at": "2018-07-01T22:18:35Z", "updated_at": "2018-11-16T08:47:37Z", "closed_at": "2018-11-16T08:46:14Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/pulls/863", "html_url": "https://github.com/marshmallow-code/marshmallow/pull/863", "diff_url": "https://github.com/marshmallow-code/marshmallow/pull/863.diff", "patch_url": "https://github.com/marshmallow-code/marshmallow/pull/863.patch", "merged_at": null}, "body": "This is just a failing test case for the issue I described in https://github.com/marshmallow-code/marshmallow/pull/299#issuecomment-401607834.\r\n\r\n> The required constraint triggers an error inside the Nested field, and `errors` is equal to:\r\n> \r\n> ```python\r\n> {'inner': {0: {'req': ['Missing data for required field.']}, '_field': ['not a chance']}}\r\n> ```\r\n> \r\n> This is the behaviour that is tested.\r\n> \r\n> However, if the `required` constraint is removed from `Inner.req`, no error is raised from inside the Nested field, then we don't pass in \r\n> \r\n> ```python\r\n>             elif isinstance(errors.get(field_name), dict):\r\n>                 errors[field_name].setdefault(FIELD, []).extend(err.messages)\r\n> ```\r\n> \r\n> and error is :\r\n> \r\n> ```python\r\n> {'inner': ['not a chance']}\r\n> ```\r\n> \r\n> This is inconsistent.\r\n\r\nThe usage of `_field` seems like a good idea, but we need a more reliable way to determine that the field is a Nested field, or that `_field` should be used.\r\n\r\nI didn't see any obvious solution. This could be part of a larger reflection about the error structure (including https://github.com/marshmallow-code/marshmallow/issues/441).", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/863/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/837", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/837/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/837/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/837/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/837", "id": 330908921, "node_id": "MDU6SXNzdWUzMzA5MDg5MjE=", "number": 837, "title": "The removal of load_from/dump_to in 3.x is not documented", "user": {"login": "dequis", "id": 94108, "node_id": "MDQ6VXNlcjk0MTA4", "avatar_url": "https://avatars.githubusercontent.com/u/94108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dequis", "html_url": "https://github.com/dequis", "followers_url": "https://api.github.com/users/dequis/followers", "following_url": "https://api.github.com/users/dequis/following{/other_user}", "gists_url": "https://api.github.com/users/dequis/gists{/gist_id}", "starred_url": "https://api.github.com/users/dequis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dequis/subscriptions", "organizations_url": "https://api.github.com/users/dequis/orgs", "repos_url": "https://api.github.com/users/dequis/repos", "events_url": "https://api.github.com/users/dequis/events{/privacy}", "received_events_url": "https://api.github.com/users/dequis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10", "html_url": "https://github.com/marshmallow-code/marshmallow/milestone/10", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10/labels", "id": 1419130, "node_id": "MDk6TWlsZXN0b25lMTQxOTEzMA==", "number": 10, "title": "3.0", "description": "", "creator": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 130, "state": "closed", "created_at": "2015-11-19T03:17:00Z", "updated_at": "2019-08-18T23:07:05Z", "due_on": null, "closed_at": "2019-08-18T23:07:05Z"}, "comments": 5, "created_at": "2018-06-09T18:22:29Z", "updated_at": "2018-06-13T07:21:07Z", "closed_at": "2018-06-12T23:45:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "So if I'm getting this right, #717 appears to remove `load_from` (replacing it with `data_key`, new) and `dump_to` (replacing it with `attribute`, already existing).\r\n\r\nThis took me a bit too long to figure out and the fact that the default docs version is \"latest\", an unreleased 3.x, didn't help. I'm still using 2.x and the lack of mention that `load_from` and `dump_to` ever existed made me think that I must have messed up somewhere else when i tried to use `data_key` there.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/837/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/820", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/820/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/820/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/820/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/820", "id": 324366699, "node_id": "MDU6SXNzdWUzMjQzNjY2OTk=", "number": 820, "title": "Question: How can I pass the context in a nested field of a structured dict?", "user": {"login": "RosanneZe", "id": 25586561, "node_id": "MDQ6VXNlcjI1NTg2NTYx", "avatar_url": "https://avatars.githubusercontent.com/u/25586561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RosanneZe", "html_url": "https://github.com/RosanneZe", "followers_url": "https://api.github.com/users/RosanneZe/followers", "following_url": "https://api.github.com/users/RosanneZe/following{/other_user}", "gists_url": "https://api.github.com/users/RosanneZe/gists{/gist_id}", "starred_url": "https://api.github.com/users/RosanneZe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RosanneZe/subscriptions", "organizations_url": "https://api.github.com/users/RosanneZe/orgs", "repos_url": "https://api.github.com/users/RosanneZe/repos", "events_url": "https://api.github.com/users/RosanneZe/events{/privacy}", "received_events_url": "https://api.github.com/users/RosanneZe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 96590020, "node_id": "MDU6TGFiZWw5NjU5MDAyMA==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/help%20wanted", "name": "help wanted", "color": "0e8a16", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "deckar01", "id": 3108007, "node_id": "MDQ6VXNlcjMxMDgwMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3108007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deckar01", "html_url": "https://github.com/deckar01", "followers_url": "https://api.github.com/users/deckar01/followers", "following_url": "https://api.github.com/users/deckar01/following{/other_user}", "gists_url": "https://api.github.com/users/deckar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/deckar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deckar01/subscriptions", "organizations_url": "https://api.github.com/users/deckar01/orgs", "repos_url": "https://api.github.com/users/deckar01/repos", "events_url": "https://api.github.com/users/deckar01/events{/privacy}", "received_events_url": "https://api.github.com/users/deckar01/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "deckar01", "id": 3108007, "node_id": "MDQ6VXNlcjMxMDgwMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3108007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deckar01", "html_url": "https://github.com/deckar01", "followers_url": "https://api.github.com/users/deckar01/followers", "following_url": "https://api.github.com/users/deckar01/following{/other_user}", "gists_url": "https://api.github.com/users/deckar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/deckar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deckar01/subscriptions", "organizations_url": "https://api.github.com/users/deckar01/orgs", "repos_url": "https://api.github.com/users/deckar01/repos", "events_url": "https://api.github.com/users/deckar01/events{/privacy}", "received_events_url": "https://api.github.com/users/deckar01/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-05-18T11:04:16Z", "updated_at": "2018-05-22T07:12:27Z", "closed_at": "2018-05-20T14:35:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that if you use a nested field for values in a structured Dict, the context is not automatically given to the nested schema. Is there a way to pass it the context?\r\n\r\nExample:\r\n```python\r\nclass Inner(Schema):\r\n    foo = fields.String()\r\n\r\n    @validates('foo')\r\n    def validate_foo(self, value):\r\n        if 'foo_context' not in self.context:\r\n            raise ValidationError('no context!')\r\n\r\n\r\nclass Outer(Schema):\r\n    bar = fields.Dict(values=fields.Nested(Inner))\r\n\r\n# gives no error:\r\nInner(context={'foo_context': 'foo'}).load({'foo': 'some foo'})\r\n# gives 'no context!' error:\r\nOuter(context={'foo_context': 'foo'}).load({'bar': { 'key': {'foo': 'some foo'}}})\r\n```", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/820/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/800", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/800/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/800/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/800/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/800", "id": 321236472, "node_id": "MDU6SXNzdWUzMjEyMzY0NzI=", "number": 800, "title": "Nested single string 'only' behavior edge case", "user": {"login": "timc13", "id": 74982, "node_id": "MDQ6VXNlcjc0OTgy", "avatar_url": "https://avatars.githubusercontent.com/u/74982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timc13", "html_url": "https://github.com/timc13", "followers_url": "https://api.github.com/users/timc13/followers", "following_url": "https://api.github.com/users/timc13/following{/other_user}", "gists_url": "https://api.github.com/users/timc13/gists{/gist_id}", "starred_url": "https://api.github.com/users/timc13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timc13/subscriptions", "organizations_url": "https://api.github.com/users/timc13/orgs", "repos_url": "https://api.github.com/users/timc13/repos", "events_url": "https://api.github.com/users/timc13/events{/privacy}", "received_events_url": "https://api.github.com/users/timc13/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 260913230, "node_id": "MDU6TGFiZWwyNjA5MTMyMzA=", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/backwards%20incompat", "name": "backwards incompat", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "deckar01", "id": 3108007, "node_id": "MDQ6VXNlcjMxMDgwMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3108007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deckar01", "html_url": "https://github.com/deckar01", "followers_url": "https://api.github.com/users/deckar01/followers", "following_url": "https://api.github.com/users/deckar01/following{/other_user}", "gists_url": "https://api.github.com/users/deckar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/deckar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deckar01/subscriptions", "organizations_url": "https://api.github.com/users/deckar01/orgs", "repos_url": "https://api.github.com/users/deckar01/repos", "events_url": "https://api.github.com/users/deckar01/events{/privacy}", "received_events_url": "https://api.github.com/users/deckar01/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "deckar01", "id": 3108007, "node_id": "MDQ6VXNlcjMxMDgwMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3108007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deckar01", "html_url": "https://github.com/deckar01", "followers_url": "https://api.github.com/users/deckar01/followers", "following_url": "https://api.github.com/users/deckar01/following{/other_user}", "gists_url": "https://api.github.com/users/deckar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/deckar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deckar01/subscriptions", "organizations_url": "https://api.github.com/users/deckar01/orgs", "repos_url": "https://api.github.com/users/deckar01/repos", "events_url": "https://api.github.com/users/deckar01/events{/privacy}", "received_events_url": "https://api.github.com/users/deckar01/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10", "html_url": "https://github.com/marshmallow-code/marshmallow/milestone/10", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10/labels", "id": 1419130, "node_id": "MDk6TWlsZXN0b25lMTQxOTEzMA==", "number": 10, "title": "3.0", "description": "", "creator": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 130, "state": "closed", "created_at": "2015-11-19T03:17:00Z", "updated_at": "2019-08-18T23:07:05Z", "due_on": null, "closed_at": "2019-08-18T23:07:05Z"}, "comments": 9, "created_at": "2018-05-08T15:30:40Z", "updated_at": "2018-09-01T16:09:46Z", "closed_at": "2018-09-01T16:09:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using Nested fields, passing a single string field to `only` does not work as expected when applying a transform with `on_bind_field`\r\n\r\n\r\n```python\r\nfrom marshmallow import fields, Schema\r\n\r\n\r\ndef test_nested_only_on_bind_field():\r\n\r\n    def to_camel_case(snake_str):\r\n        components = snake_str.split('_')\r\n        return components[0] + ''.join(x.title() for x in components[1:])\r\n\r\n    class CamelCaseSchema(Schema):\r\n        def on_bind_field(self, field_name, field_obj):\r\n            field_obj.data_key = to_camel_case(field_name)\r\n\r\n    class UserRoleSchema(CamelCaseSchema):\r\n        user_id = fields.Number()\r\n        role_name = fields.String()\r\n\r\n    class UserSchema(CamelCaseSchema):\r\n        id = fields.Number()\r\n        roles = fields.Nested(UserRoleSchema, many=True, only='role_name')\r\n\r\n    user = {\r\n        'id': 1,\r\n        'roles': [\r\n            {'user_id': 1, 'role_name': 'admin'},\r\n            {'user_id': 1, 'role_name': 'test'},\r\n        ]\r\n    }\r\n\r\n    serialized_user = UserSchema().dumps(user)\r\n\r\n    assert serialized_user == {\"id\": 1, \"roles\": [\"admin\", \"test\"]}\r\n```\r\n\r\nThis results in the following error:\r\n\r\n```\r\n/env/lib/python3.6/site-packages/marshmallow/schema.py:476: in dumps\r\n    serialized = self.dump(obj, many=many, update_fields=update_fields)\r\n/env/lib/python3.6/site-packages/marshmallow/schema.py:428: in dump\r\n    **kwargs\r\n/env/lib/python3.6/site-packages/marshmallow/marshalling.py:147: in serialize\r\n    index=(index if index_errors else None)\r\n/env/lib/python3.6/site-packages/marshmallow/marshalling.py:68: in call_and_store\r\n    value = getter_func(data)\r\n/env/lib/python3.6/site-packages/marshmallow/marshalling.py:141: in <lambda>\r\n    getter = lambda d: field_obj.serialize(attr_name, d, accessor=accessor)\r\n/env/lib/python3.6/site-packages/marshmallow/fields.py:250: in serialize\r\n    return self._serialize(value, attr, obj)\r\n/env/lib/python3.6/site-packages/marshmallow/fields.py:455: in _serialize\r\n    return utils.pluck(ret, key=self.only)\r\n/env/lib/python3.6/site-packages/marshmallow/utils.py:318: in pluck\r\n    return [d[key] for d in dictlist]\r\nKeyError: 'role_name'\r\n```\r\n\r\nThis seems to be only affecting the single string case, as passing `only=['role_name']` works as expected.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/800/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/783", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/783/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/783/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/783/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/783", "id": 317458965, "node_id": "MDU6SXNzdWUzMTc0NTg5NjU=", "number": 783, "title": "Could I use a single schema instance on concurrent request?", "user": {"login": "yupeng0921", "id": 627115, "node_id": "MDQ6VXNlcjYyNzExNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/627115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yupeng0921", "html_url": "https://github.com/yupeng0921", "followers_url": "https://api.github.com/users/yupeng0921/followers", "following_url": "https://api.github.com/users/yupeng0921/following{/other_user}", "gists_url": "https://api.github.com/users/yupeng0921/gists{/gist_id}", "starred_url": "https://api.github.com/users/yupeng0921/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yupeng0921/subscriptions", "organizations_url": "https://api.github.com/users/yupeng0921/orgs", "repos_url": "https://api.github.com/users/yupeng0921/repos", "events_url": "https://api.github.com/users/yupeng0921/events{/privacy}", "received_events_url": "https://api.github.com/users/yupeng0921/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 96590020, "node_id": "MDU6TGFiZWw5NjU5MDAyMA==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/help%20wanted", "name": "help wanted", "color": "0e8a16", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-04-25T02:31:52Z", "updated_at": "2019-06-17T14:54:50Z", "closed_at": "2018-05-11T03:00:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example, I have an AlbumSchema class, then I create a global variable 'g_schema' from it:\r\ng_schema = AlbumSchema()\r\nCould I use the same g_schema on the concurrent http requests? Is it safe?", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/783/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/772", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/772/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/772/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/772/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/772", "id": 313917994, "node_id": "MDU6SXNzdWUzMTM5MTc5OTQ=", "number": 772, "title": "Empty Only Treated as None", "user": {"login": "deckar01", "id": 3108007, "node_id": "MDQ6VXNlcjMxMDgwMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3108007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deckar01", "html_url": "https://github.com/deckar01", "followers_url": "https://api.github.com/users/deckar01/followers", "following_url": "https://api.github.com/users/deckar01/following{/other_user}", "gists_url": "https://api.github.com/users/deckar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/deckar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deckar01/subscriptions", "organizations_url": "https://api.github.com/users/deckar01/orgs", "repos_url": "https://api.github.com/users/deckar01/repos", "events_url": "https://api.github.com/users/deckar01/events{/privacy}", "received_events_url": "https://api.github.com/users/deckar01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 96590020, "node_id": "MDU6TGFiZWw5NjU5MDAyMA==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/help%20wanted", "name": "help wanted", "color": "0e8a16", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-12T23:11:28Z", "updated_at": "2018-09-27T19:02:25Z", "closed_at": "2018-04-26T02:25:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When the `only` parameter is an empty list/set, it causes all the fields to be de/serialized like `None`. The implementation of 2.x and 3.0 are not in compliance with their respective docs.\r\n\r\n> **only** (_tuple_) \u2013 A list or tuple of fields to serialize. If **None**, all fields will be serialized.\r\n\r\n```py\r\nclass TestSchema(Schema):\r\n    foo = fields.Field()\r\nsch = TestSchema(only=())\r\ndata = dict(foo='bar')\r\nresult = sch.dump(data)\r\nassert 'foo' not in result\r\n\r\n# assert 'foo' not in {'foo': 'bar'}\r\n```\r\n\r\nThis could create a security vulnerability if an application was dynamically generating the field set based on security role. A filter that was meant to hide everything would inadvertently show everything.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/772/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/772/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/758", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/758/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/758/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/758/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/758", "id": 308620448, "node_id": "MDU6SXNzdWUzMDg2MjA0NDg=", "number": 758, "title": "DateTime deserializer cannot use dateutil", "user": {"login": "mchalek", "id": 3099936, "node_id": "MDQ6VXNlcjMwOTk5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3099936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mchalek", "html_url": "https://github.com/mchalek", "followers_url": "https://api.github.com/users/mchalek/followers", "following_url": "https://api.github.com/users/mchalek/following{/other_user}", "gists_url": "https://api.github.com/users/mchalek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mchalek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mchalek/subscriptions", "organizations_url": "https://api.github.com/users/mchalek/orgs", "repos_url": "https://api.github.com/users/mchalek/repos", "events_url": "https://api.github.com/users/mchalek/events{/privacy}", "received_events_url": "https://api.github.com/users/mchalek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 96590028, "node_id": "MDU6TGFiZWw5NjU5MDAyOA==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/feedback%20welcome", "name": "feedback welcome", "color": "0e8a16", "default": false, "description": ""}, {"id": 1011519607, "node_id": "MDU6TGFiZWwxMDExNTE5NjA3", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/datetime", "name": "datetime", "color": "432393", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10", "html_url": "https://github.com/marshmallow-code/marshmallow/milestone/10", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/10/labels", "id": 1419130, "node_id": "MDk6TWlsZXN0b25lMTQxOTEzMA==", "number": 10, "title": "3.0", "description": "", "creator": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 130, "state": "closed", "created_at": "2015-11-19T03:17:00Z", "updated_at": "2019-08-18T23:07:05Z", "due_on": null, "closed_at": "2019-08-18T23:07:05Z"}, "comments": 4, "created_at": "2018-03-26T15:26:45Z", "updated_at": "2018-10-12T00:46:42Z", "closed_at": "2018-10-12T00:46:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "The DateTime deserializer cannot use the dateutil library because it contains an inaccessible code path.\r\n\r\nFor example, parsing the string `2018/03/26` fails:\r\n```python\r\n>>> import marshmallow as ma\r\n>>> f = ma.fields.DateTime()\r\n>>> f.deserialize('2018/03/26')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"marshmallow/fields.py\", line 261, in deserialize\r\n    output = self._deserialize(value, attr, data)\r\n  File \"marshmallow/fields.py\", line 929, in _deserialize\r\n    raise self.fail('invalid')\r\n  File \"marshmallow/fields.py\", line 216, in fail\r\n    raise ValidationError(msg)\r\nmarshmallow.exceptions.ValidationError: Not a valid datetime.\r\n```\r\nEven though the `dateutil`-based parser knows how to deserialize it:\r\n```python\r\n>>> ma.utils.dateutil_available\r\nTrue\r\n>>> ma.utils.from_datestring('2018/03/26')\r\ndatetime.datetime(2018, 3, 26, 0, 0)\r\n```\r\n\r\nThe cause of this is located in [this code block](https://github.com/marshmallow-code/marshmallow/blob/dev/marshmallow/fields.py#L923-L935).  Specifically: `dateutil` is only used when the field does not have a pre-defined date format, but the `deserialize` method itself sets the field's date format to a default value before that condition is evaluated.\r\n\r\nI submitted #619 to address this last year, but I admit that the description was poorly worded and I never followed-up with it until recently, when user @znatty22 commented that she has run into the same issue.\r\n\r\nCould someone please advise on steps to take in order to get #619 merged?\r\n\r\nThanks,\r\n\r\nKevin", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/758/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/748", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/748/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/748/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/748/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/748", "id": 302360176, "node_id": "MDU6SXNzdWUzMDIzNjAxNzY=", "number": 748, "title": "Wrong field name in errors dict when using @validates on load_from/data_key aliased field", "user": {"login": "m-novikov", "id": 5163640, "node_id": "MDQ6VXNlcjUxNjM2NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5163640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-novikov", "html_url": "https://github.com/m-novikov", "followers_url": "https://api.github.com/users/m-novikov/followers", "following_url": "https://api.github.com/users/m-novikov/following{/other_user}", "gists_url": "https://api.github.com/users/m-novikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-novikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-novikov/subscriptions", "organizations_url": "https://api.github.com/users/m-novikov/orgs", "repos_url": "https://api.github.com/users/m-novikov/repos", "events_url": "https://api.github.com/users/m-novikov/events{/privacy}", "received_events_url": "https://api.github.com/users/m-novikov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 96590020, "node_id": "MDU6TGFiZWw5NjU5MDAyMA==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/help%20wanted", "name": "help wanted", "color": "0e8a16", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-05T16:09:50Z", "updated_at": "2018-08-04T13:09:40Z", "closed_at": "2018-08-04T13:09:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am using marshmallow 2.14.\r\nGiven following code:\r\n```python\r\nfrom marshmallow import Schema, fields, ValidationError, validates\r\n\r\nclass Broken(Schema):\r\n    f = fields.String(required=True, load_from='f-name')\r\n    f2 = fields.String(required=True, load_from='f2-name')\r\n\r\n    @validates('f')\r\n    def validate_string(self, data):\r\n        raise ValidationError('nope')\r\n\r\n_, err = Broken().load({'f': 'hello', 'f2': None}) # does not throw validation error\r\nprint(err)\r\n```\r\nI get following output:\r\n```\r\n{'f': ['nope'], 'f2-name': ['Field may not be null.']}\r\n```\r\nBut I would expect to end up with:\r\n```\r\n{'f-name': ['nope'], 'f2-name': ['Field may not be null.']}\r\n```\r\nThere is seems to be no way to override this behavior.\r\nI suppose it should use load_from field on load and dump_to on dump for errors.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/748/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/743", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/743/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/743/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/743/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/743", "id": 299845565, "node_id": "MDU6SXNzdWUyOTk4NDU1NjU=", "number": 743, "title": "Example of validating original input data fails on `many=True`", "user": {"login": "stj", "id": 66305, "node_id": "MDQ6VXNlcjY2MzA1", "avatar_url": "https://avatars.githubusercontent.com/u/66305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stj", "html_url": "https://github.com/stj", "followers_url": "https://api.github.com/users/stj/followers", "following_url": "https://api.github.com/users/stj/following{/other_user}", "gists_url": "https://api.github.com/users/stj/gists{/gist_id}", "starred_url": "https://api.github.com/users/stj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stj/subscriptions", "organizations_url": "https://api.github.com/users/stj/orgs", "repos_url": "https://api.github.com/users/stj/repos", "events_url": "https://api.github.com/users/stj/events{/privacy}", "received_events_url": "https://api.github.com/users/stj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-23T20:48:35Z", "updated_at": "2018-02-25T14:21:24Z", "closed_at": "2018-02-25T14:21:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://marshmallow.readthedocs.io/en/latest/extending.html#validating-original-input-data\r\n\r\nGiven a schema\r\n```python\r\nimport marshmallow\r\nimport marshmallow.fields\r\n\r\nclass X(marshmallow.Schema):\r\n    text = marshmallow.fields.String()\r\n\r\n    @marshmallow.validates_schema(pass_original=True)\r\n    def check_unknown_fields(self, data, original_data):\r\n        unknown = set(original_data) - set(self.fields)\r\n        if unknown:\r\n            raise marshmallow.ValidationError('Unknown field', unknown)\r\n\r\nclass Y(marshmallow.Schema):\r\n  nested = marshmallow.fields.Nested(nested=X, many=True)\r\n```\r\n\r\nWhen sending extra fields for validation the `set` fails with a TypeError\r\n\r\n```python\r\nschema = Y()\r\nschema.load({\"nested\": [{\"fail\": \"fast\", \"text\": \"text\"}]})\r\n```\r\n\r\nResult is:\r\n`TypeError: unhashable type: 'dict'`\r\n\r\nChanging `marschmallow/schema.py` line 841 from\r\n```python\r\n                        self._unmarshal.run_validator(validator,\r\n                                                  item, original_data, self.fields, many=many,\r\n                                                  index=idx, pass_original=pass_original)\r\n```\r\nto\r\n```python\r\n                        self._unmarshal.run_validator(validator,\r\n                                                  item, original_data[idx], self.fields, many=many,\r\n                                                  index=idx, pass_original=pass_original)\r\n```\r\nfixed the issue.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/743/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/743/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/732", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/732/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/732/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/732/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/732", "id": 294322387, "node_id": "MDU6SXNzdWUyOTQzMjIzODc=", "number": 732, "title": "memory leak occurs when creating a new type", "user": {"login": "zaxrok", "id": 1025654, "node_id": "MDQ6VXNlcjEwMjU2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1025654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zaxrok", "html_url": "https://github.com/zaxrok", "followers_url": "https://api.github.com/users/zaxrok/followers", "following_url": "https://api.github.com/users/zaxrok/following{/other_user}", "gists_url": "https://api.github.com/users/zaxrok/gists{/gist_id}", "starred_url": "https://api.github.com/users/zaxrok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zaxrok/subscriptions", "organizations_url": "https://api.github.com/users/zaxrok/orgs", "repos_url": "https://api.github.com/users/zaxrok/repos", "events_url": "https://api.github.com/users/zaxrok/events{/privacy}", "received_events_url": "https://api.github.com/users/zaxrok/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 96590020, "node_id": "MDU6TGFiZWw5NjU5MDAyMA==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/help%20wanted", "name": "help wanted", "color": "0e8a16", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-02-05T09:21:52Z", "updated_at": "2018-11-02T01:34:35Z", "closed_at": "2018-11-02T01:31:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use the following code,  I observe that memory leak is very fast \r\n**MsgSchema = type('MsgSchema', (marshmallow.Schema,), {})**\r\n```\r\n#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\nimport marshmallow\r\nimport time\r\nimport psutil\r\nimport os\r\n\r\nif __name__ == '__main__':\r\n    pid = os.getpid()\r\n    process = psutil.Process(pid)\r\n    while True:\r\n        MsgSchema = type('MsgSchema', (marshmallow.Schema,), {})\r\n        mem = process.get_memory_info()[0]\r\n        print(\"memory usage(%s):%d\" % (pid, mem))\r\n        time.sleep(0.01)\r\n```", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/732/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/728", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/728/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/728/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/728/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/728", "id": 291420688, "node_id": "MDU6SXNzdWUyOTE0MjA2ODg=", "number": 728, "title": "Nested excludes get overwritten", "user": {"login": "timc13", "id": 74982, "node_id": "MDQ6VXNlcjc0OTgy", "avatar_url": "https://avatars.githubusercontent.com/u/74982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timc13", "html_url": "https://github.com/timc13", "followers_url": "https://api.github.com/users/timc13/followers", "following_url": "https://api.github.com/users/timc13/following{/other_user}", "gists_url": "https://api.github.com/users/timc13/gists{/gist_id}", "starred_url": "https://api.github.com/users/timc13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timc13/subscriptions", "organizations_url": "https://api.github.com/users/timc13/orgs", "repos_url": "https://api.github.com/users/timc13/repos", "events_url": "https://api.github.com/users/timc13/events{/privacy}", "received_events_url": "https://api.github.com/users/timc13/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "deckar01", "id": 3108007, "node_id": "MDQ6VXNlcjMxMDgwMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3108007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deckar01", "html_url": "https://github.com/deckar01", "followers_url": "https://api.github.com/users/deckar01/followers", "following_url": "https://api.github.com/users/deckar01/following{/other_user}", "gists_url": "https://api.github.com/users/deckar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/deckar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deckar01/subscriptions", "organizations_url": "https://api.github.com/users/deckar01/orgs", "repos_url": "https://api.github.com/users/deckar01/repos", "events_url": "https://api.github.com/users/deckar01/events{/privacy}", "received_events_url": "https://api.github.com/users/deckar01/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "deckar01", "id": 3108007, "node_id": "MDQ6VXNlcjMxMDgwMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3108007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deckar01", "html_url": "https://github.com/deckar01", "followers_url": "https://api.github.com/users/deckar01/followers", "following_url": "https://api.github.com/users/deckar01/following{/other_user}", "gists_url": "https://api.github.com/users/deckar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/deckar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deckar01/subscriptions", "organizations_url": "https://api.github.com/users/deckar01/orgs", "repos_url": "https://api.github.com/users/deckar01/repos", "events_url": "https://api.github.com/users/deckar01/events{/privacy}", "received_events_url": "https://api.github.com/users/deckar01/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-01-25T01:34:08Z", "updated_at": "2018-05-11T02:23:42Z", "closed_at": "2018-05-11T02:23:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems whenever an parent level exclude is specified with dot notation, the child field level excludes are overwritten.  It would be great if they could be concatenated.\r\n\r\nHere's an example:\r\n```\r\nfrom marshmallow import fields, Schema\r\n\r\nclass FooChildSchema(Schema):\r\n    boo = fields.String()\r\n    far = fields.String()\r\n    faz = fields.String()\r\n\r\nclass FooSchema(Schema):\r\n    foo = fields.String()\r\n    bar = fields.String()\r\n    baz = fields.String()\r\n    child = fields.Nested(FooChildSchema, exclude=('boo',))\r\n\r\nobj = {\r\n    'foo': 'foo',\r\n    'bar': 'bar',\r\n    'baz': 'baz',\r\n    'child': {\r\n        'boo': 'boo',\r\n        'far': 'far',\r\n        'faz': 'faz',\r\n    },\r\n}\r\n\r\nserialized = FooSchema(exclude=('foo', 'child.faz')).dump(obj).data\r\nprint(serialized)\r\n```\r\nI expect :\r\n```\r\n{'child': {'far': 'far'}, 'baz': 'baz', 'bar': 'bar'}\r\n```\r\ninstead, I get:\r\n```\r\n{'child': {'far': 'far', 'boo': 'boo'}, 'baz': 'baz', 'bar': 'bar'}\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/728/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/728/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/636", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/636/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/636/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/636/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/636", "id": 232217647, "node_id": "MDU6SXNzdWUyMzIyMTc2NDc=", "number": 636, "title": "only is not bound by declared and additional fields on serializaton", "user": {"login": "jan-23", "id": 20188775, "node_id": "MDQ6VXNlcjIwMTg4Nzc1", "avatar_url": "https://avatars.githubusercontent.com/u/20188775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jan-23", "html_url": "https://github.com/jan-23", "followers_url": "https://api.github.com/users/jan-23/followers", "following_url": "https://api.github.com/users/jan-23/following{/other_user}", "gists_url": "https://api.github.com/users/jan-23/gists{/gist_id}", "starred_url": "https://api.github.com/users/jan-23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jan-23/subscriptions", "organizations_url": "https://api.github.com/users/jan-23/orgs", "repos_url": "https://api.github.com/users/jan-23/repos", "events_url": "https://api.github.com/users/jan-23/events{/privacy}", "received_events_url": "https://api.github.com/users/jan-23/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-05-30T11:07:54Z", "updated_at": "2018-07-01T18:32:37Z", "closed_at": "2018-07-01T18:32:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "The only parameter is correctly bound to the fields that are defined in Meta.fields (#183):\r\n```python\r\nclass MySchema(Schema):\r\n    class Meta:\r\n        fields = ('a', )\r\n\r\nMySchema(only=('b', )).dump({'a': 1, 'b': 2}).data == {}\r\n```\r\n\r\n\r\nStrangely it is not bound to the declared and additional fields:\r\n```python\r\nclass MySchema(Schema):\r\n    a = fields.Str()\r\n    class Meta:\r\n        additional = ('b', )\r\n\r\nMySchema(only=('c', )).dump({'a': 1, 'b': 2, 'c': 3}).data == {'c': 3}\r\n```\r\n\r\nIt would be more consistent if the second example also returns an empty dict.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/636/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/634", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/634/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/634/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/634/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/634", "id": 231023518, "node_id": "MDU6SXNzdWUyMzEwMjM1MTg=", "number": 634, "title": "Broken passing of context inside fields.List(fields.Nested(SomeSchema))", "user": {"login": "YuppY", "id": 448231, "node_id": "MDQ6VXNlcjQ0ODIzMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/448231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YuppY", "html_url": "https://github.com/YuppY", "followers_url": "https://api.github.com/users/YuppY/followers", "following_url": "https://api.github.com/users/YuppY/following{/other_user}", "gists_url": "https://api.github.com/users/YuppY/gists{/gist_id}", "starred_url": "https://api.github.com/users/YuppY/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YuppY/subscriptions", "organizations_url": "https://api.github.com/users/YuppY/orgs", "repos_url": "https://api.github.com/users/YuppY/repos", "events_url": "https://api.github.com/users/YuppY/events{/privacy}", "received_events_url": "https://api.github.com/users/YuppY/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-24T12:30:58Z", "updated_at": "2018-06-04T11:19:19Z", "closed_at": "2018-06-04T11:19:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "If schema is declared like this:\r\n```python\r\nclass ChildSchema(Schema):\r\n    foo = fields.Method('dump_foo')\r\n    def dump_foo(self, obj):\r\n        print 'context is', self.context\r\n  \r\nclass ParentSchema(Schema):\r\n    child = fields.List(fields.Nested(ChildSchema))\r\n```\r\nThen `context` is saved on first call and ignored on further calls:\r\n```python\r\n>>> ParentSchema(context={'bar': 1}).dump({'child': [{}]})\r\ncontext is {'bar': 1}\r\nMarshalResult(...)\r\n>>> ParentSchema(context={'baz': 2}).dump({'child': [{}]})\r\ncontext is {'bar': 1}\r\nMarshalResult(...)\r\n>>> ParentSchema().dump({'child': [{}]})\r\ncontext is {'bar': 1}\r\nMarshalResult(...)\r\n```\r\n\r\nIt is because `copy.deepcopy(self._declared_fields)` doesn't copy `List.container` field and schema with `context` is cached inside `Nested` field and saved inside `_declared_fields`.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/634/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/603", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/603/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/603/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/603/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/603", "id": 215210561, "node_id": "MDU6SXNzdWUyMTUyMTA1NjE=", "number": 603, "title": "validate.ContainsOnly raises error if input contains duplicate, valid entries ", "user": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 96590020, "node_id": "MDU6TGFiZWw5NjU5MDAyMA==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/help%20wanted", "name": "help wanted", "color": "0e8a16", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-18T17:59:12Z", "updated_at": "2017-03-19T03:50:29Z", "closed_at": "2017-03-19T03:50:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Reported in https://github.com/marshmallow-code/marshmallow/issues/516#issuecomment-287561530:\r\n\r\n> As pointed out by @maximkulkin \r\n> \r\n>     validate.ContainsOnly([1, 2, 3])([1, 2, 3, 3])\r\n> \r\n> raises `ValidationError`.\r\n> \r\n> It seems intended (explicit `del choices[index]` in the code) but is not explicit in the docs, and in fact, I don't get the rationale.\r\n> \r\n> The docs says \r\n> \r\n> > succeeds if ``value`` is a sequence and each element in the sequence is also in the sequence passed as ``choices``\r\n\r\nThis behavior is unintended. Duplicate, valid entries should be considered valid.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/603/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/597", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/597/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/597/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/597/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/597", "id": 213341046, "node_id": "MDU6SXNzdWUyMTMzNDEwNDY=", "number": 597, "title": "TypeError - unexpected keyword argument 'ordered'", "user": {"login": "Wesmania", "id": 4634112, "node_id": "MDQ6VXNlcjQ2MzQxMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/4634112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wesmania", "html_url": "https://github.com/Wesmania", "followers_url": "https://api.github.com/users/Wesmania/followers", "following_url": "https://api.github.com/users/Wesmania/following{/other_user}", "gists_url": "https://api.github.com/users/Wesmania/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wesmania/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wesmania/subscriptions", "organizations_url": "https://api.github.com/users/Wesmania/orgs", "repos_url": "https://api.github.com/users/Wesmania/repos", "events_url": "https://api.github.com/users/Wesmania/events{/privacy}", "received_events_url": "https://api.github.com/users/Wesmania/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-03-10T13:29:19Z", "updated_at": "2022-04-04T17:31:34Z", "closed_at": "2017-03-11T16:43:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running our tests with marshmallow-2.13.2 and marshmallow-jsonapi-0.10.2, we encountered this stack trace:\r\n\r\n```\r\ntests/fa/test_updater.py:3: in <module>\r\n    from fa import updater\r\nsrc/fa/__init__.py:15: in <module>\r\n    from game_process import instance as instance\r\nsrc/fa/game_process.py:8: in <module>\r\n    import util\r\nsrc/util/__init__.py:718: in <module>\r\n    from crash import CrashDialog\r\nsrc/util/crash.py:11: in <module>\r\n    from faf.api import BugReportSchema\r\n/usr/lib64/python2.7/site-packages/faf/api/__init__.py:4: in <module>\r\n    from faf.api.leaderboard_schema import LeaderboardSchema\r\n/usr/lib64/python2.7/site-packages/faf/api/leaderboard_schema.py:1: in <module>\r\n    from marshmallow_jsonapi import Schema, fields\r\n/usr/lib64/python2.7/site-packages/marshmallow_jsonapi/__init__.py:2: in <module>\r\n    from .schema import Schema, SchemaOpts\r\n/usr/lib64/python2.7/site-packages/marshmallow_jsonapi/schema.py:31: in <module>\r\n    class Schema(ma.Schema):\r\n/usr/lib64/python2.7/site-packages/marshmallow/schema.py:106: in __new__\r\n    klass.opts = klass.OPTIONS_CLASS(meta, ordered=ordered)\r\nE   TypeError: Error when calling the metaclass bases\r\nE       __init__() got an unexpected keyword argument 'ordered'\r\n```\r\n\r\nThis might be related to #593.", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/597/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/556", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/556/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/556/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/556/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/556", "id": 192618891, "node_id": "MDU6SXNzdWUxOTI2MTg4OTE=", "number": 556, "title": "Rationale behind fields.DateTime().deserialize('1916') returning datetime(1916, 11, 30, 0, 0)?", "user": {"login": "lafrech", "id": 1767010, "node_id": "MDQ6VXNlcjE3NjcwMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1767010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lafrech", "html_url": "https://github.com/lafrech", "followers_url": "https://api.github.com/users/lafrech/followers", "following_url": "https://api.github.com/users/lafrech/following{/other_user}", "gists_url": "https://api.github.com/users/lafrech/gists{/gist_id}", "starred_url": "https://api.github.com/users/lafrech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lafrech/subscriptions", "organizations_url": "https://api.github.com/users/lafrech/orgs", "repos_url": "https://api.github.com/users/lafrech/repos", "events_url": "https://api.github.com/users/lafrech/events{/privacy}", "received_events_url": "https://api.github.com/users/lafrech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-11-30T16:50:35Z", "updated_at": "2017-06-01T00:01:50Z", "closed_at": "2017-04-13T01:14:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I just noticed that when I deserialize a date expressed as a 'YY' or 'YY-mm' string, I get a datetime with month defaulting to 11 and day defaulting to 30 (except for february).\r\n\r\n```py\r\nf = fields.DateTime()\r\nf.deserialize('1916')\r\n# datetime.datetime(1916, 11, 30, 0, 0)\r\nf.deserialize('1916-2')\r\n# datetime.datetime(1916, 2, 29, 0, 0)\r\nf.deserialize('1916-3')\r\n# datetime.datetime(1916, 3, 30, 0, 0)\r\n```\r\n\r\nIs this intended?\r\n\r\nShouldn't this be either rejected or default to a documented value (could be january 1st)?\r\n\r\nTo prevent this seemingly non-deterministic behavior (it seems reproducible, but I don't get the rationale), as a workaround, it is possible to set a format explicitly, which rejects such incomplete inputs, but this might not always be desired (be loose on inputs / strict on outputs).\r\n\r\n```py\r\nf = fields.DateTime(format='%Y-%m-%d')\r\nf.deserialize('1916-05-04')\r\n# datetime.datetime(1916, 5, 4, 0, 0)\r\nf.deserialize('1916')\r\n# marshmallow.exceptions.ValidationError: Not a valid datetime.\r\n```", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/556/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/550", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/550/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/550/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/550/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/550", "id": 190271064, "node_id": "MDU6SXNzdWUxOTAyNzEwNjQ=", "number": 550, "title": "Allow strict=False to override strict setting in Meta options class.", "user": {"login": "douglas-treadwell", "id": 1559427, "node_id": "MDQ6VXNlcjE1NTk0Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1559427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/douglas-treadwell", "html_url": "https://github.com/douglas-treadwell", "followers_url": "https://api.github.com/users/douglas-treadwell/followers", "following_url": "https://api.github.com/users/douglas-treadwell/following{/other_user}", "gists_url": "https://api.github.com/users/douglas-treadwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/douglas-treadwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/douglas-treadwell/subscriptions", "organizations_url": "https://api.github.com/users/douglas-treadwell/orgs", "repos_url": "https://api.github.com/users/douglas-treadwell/repos", "events_url": "https://api.github.com/users/douglas-treadwell/events{/privacy}", "received_events_url": "https://api.github.com/users/douglas-treadwell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-18T09:19:54Z", "updated_at": "2017-01-08T21:23:19Z", "closed_at": "2017-01-08T21:23:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I prefer ```strict=True``` by default (as someone else requested in another issue), so I was setting it in the Meta class to True... but then I found I could not set it to False in cases when I wanted it to be False.\r\n\r\nWorkaround for now... implemented a BaseSchema with overridden strict kwarg like this:\r\n\r\n```python\r\nclass BaseSchema(Schema):\r\n    def __init__(self, strict=True, **kwargs):\r\n        super(BaseSchema, self).__init__(strict=strict, **kwargs)\r\n```", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/550/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/491", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/491/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/491/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/491/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/491", "id": 164311150, "node_id": "MDU6SXNzdWUxNjQzMTExNTA=", "number": 491, "title": "Serializing and deserializing Objects with a type attribute", "user": {"login": "ironhouzi", "id": 3307295, "node_id": "MDQ6VXNlcjMzMDcyOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3307295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ironhouzi", "html_url": "https://github.com/ironhouzi", "followers_url": "https://api.github.com/users/ironhouzi/followers", "following_url": "https://api.github.com/users/ironhouzi/following{/other_user}", "gists_url": "https://api.github.com/users/ironhouzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ironhouzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ironhouzi/subscriptions", "organizations_url": "https://api.github.com/users/ironhouzi/orgs", "repos_url": "https://api.github.com/users/ironhouzi/repos", "events_url": "https://api.github.com/users/ironhouzi/events{/privacy}", "received_events_url": "https://api.github.com/users/ironhouzi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/11", "html_url": "https://github.com/marshmallow-code/marshmallow/milestone/11", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/11/labels", "id": 2332082, "node_id": "MDk6TWlsZXN0b25lMjMzMjA4Mg==", "number": 11, "title": "3.0a", "description": "", "creator": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 13, "state": "closed", "created_at": "2017-02-18T17:35:13Z", "updated_at": "2017-03-04T15:53:45Z", "due_on": null, "closed_at": "2017-03-04T15:53:45Z"}, "comments": 4, "created_at": "2016-07-07T13:39:36Z", "updated_at": "2017-02-18T17:39:43Z", "closed_at": "2017-02-18T17:39:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the class:\n\n``` python\nclass Foo(object):\n    def __init__(self, datatype):\n        self.datatype = datatype\n\n```\n\nand the Schema:\n\n``` python\nclass FooSchema(Schema):\n    Meta:\n        fields = ('datatype',)\n```\n\nI do:\n\n```\n>>> foo = Foo(datetime.datetime)\n>>> schema = FooSchema()\n>>> data, errors = schema.dump(foo)\n```\n\nError:\n\n```\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/home/user/uWPS/venv/lib/python3.5/site-packages/marshmallow/utils.py in _get_value_for_key(key, obj, default)\n    318     try:\n--> 319         return obj[key]\n    320     except (KeyError, AttributeError, IndexError, TypeError):\n\nTypeError: 'Foo' object is not subscriptable\n\nDuring handling of the above exception, another exception occurred:\n\nTypeError                                 Traceback (most recent call last)\n<ipython-input-62-5580971ff97a> in <module>()\n----> 1 data, errors = schema.dump(baz)\n\n/home/user/uWPS/venv/lib/python3.5/site-packages/marshmallow/schema.py in dump(self, obj, many, update_fields, **kwargs)\n    494                 dict_class=self.dict_class,\n    495                 index_errors=self.opts.index_errors,\n--> 496                 **kwargs\n    497             )\n    498         except ValidationError as error:\n\n/home/user/uWPS/venv/lib/python3.5/site-packages/marshmallow/marshalling.py in serialize(self, obj, fields_dict, many, accessor, dict_class, index_errors, index)\n    144                 field_name=key,\n    145                 field_obj=field_obj,\n--> 146                 index=(index if index_errors else None)\n    147             )\n    148             if value is missing:\n\n/home/user/uWPS/venv/lib/python3.5/site-packages/marshmallow/marshalling.py in call_and_store(self, getter_func, data, field_name, field_obj, index)\n     65         \"\"\"\n     66         try:\n---> 67             value = getter_func(data)\n     68         except ValidationError as err:  # Store validation errors\n     69             self.error_kwargs.update(err.kwargs)\n\n/home/user/uWPS/venv/lib/python3.5/site-packages/marshmallow/marshalling.py in <lambda>(d)\n    138             key = ''.join([self.prefix or '', field_obj.dump_to or attr_name])\n    139\n--> 140             getter = lambda d: field_obj.serialize(attr_name, d, accessor=accessor)\n    141             value = self.call_and_store(\n    142                 getter_func=getter,\n\n/home/user/uWPS/venv/lib/python3.5/site-packages/marshmallow/fields.py in serialize(self, attr, obj, accessor)\n    239         \"\"\"\n    240         if self._CHECK_ATTRIBUTE:\n--> 241             value = self.get_value(attr, obj, accessor=accessor)\n    242             if value is missing_:\n    243                 if hasattr(self, 'default'):\n\n/home/user/uWPS/venv/lib/python3.5/site-packages/marshmallow/fields.py in get_value(self, attr, obj, accessor, default)\n    183         accessor_func = accessor or utils.get_value\n    184         check_key = attr if attribute is None else attribute\n--> 185         return accessor_func(check_key, obj, default)\n    186\n    187     def _validate(self, value):\n\n/home/user/uWPS/venv/lib/python3.5/site-packages/marshmallow/schema.py in get_attribute(self, attr, obj, default)\n    402         .. versionadded:: 2.0.0\n    403         \"\"\"\n--> 404         return utils.get_value(attr, obj, default)\n    405\n    406     ##### Handler decorators (deprecated) #####\n\n/home/user/uWPS/venv/lib/python3.5/site-packages/marshmallow/utils.py in get_value(key, obj, default)\n    304         return _get_value_for_key(key, obj, default)\n    305     else:\n--> 306         return _get_value_for_keys(key.split('.'), obj, default)\n    307\n    308\n\n/home/user/uWPS/venv/lib/python3.5/site-packages/marshmallow/utils.py in _get_value_for_keys(keys, obj, default)\n    309 def _get_value_for_keys(keys, obj, default):\n    310     if len(keys) == 1:\n--> 311         return _get_value_for_key(keys[0], obj, default)\n    312     else:\n    313         return _get_value_for_keys(\n\n/home/user/uWPS/venv/lib/python3.5/site-packages/marshmallow/utils.py in _get_value_for_key(key, obj, default)\n    321         try:\n    322             attr = getattr(obj, key)\n--> 323             return attr() if callable(attr) else attr\n    324         except AttributeError:\n    325             return default\n\nTypeError: Required argument 'year' (pos 1) not found\n\n```\n\nWhat I'm trying to do is to have a way to {,de}serialize a python type. There must be a better way, right?\n\n_Edit_: When I tried a less problematic type, like `int`, the serialized data had the default value for that type, instead of the string representation of the type .. even though I tried adding a `__repr__` to the `Foo` class.\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/491/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/484", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/484/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/484/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/484/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/484", "id": 162916096, "node_id": "MDU6SXNzdWUxNjI5MTYwOTY=", "number": 484, "title": "`Eqaul(False)` can't validate correctly", "user": {"login": "pktangyue", "id": 1276646, "node_id": "MDQ6VXNlcjEyNzY2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1276646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pktangyue", "html_url": "https://github.com/pktangyue", "followers_url": "https://api.github.com/users/pktangyue/followers", "following_url": "https://api.github.com/users/pktangyue/following{/other_user}", "gists_url": "https://api.github.com/users/pktangyue/gists{/gist_id}", "starred_url": "https://api.github.com/users/pktangyue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pktangyue/subscriptions", "organizations_url": "https://api.github.com/users/pktangyue/orgs", "repos_url": "https://api.github.com/users/pktangyue/repos", "events_url": "https://api.github.com/users/pktangyue/events{/privacy}", "received_events_url": "https://api.github.com/users/pktangyue/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-29T12:46:00Z", "updated_at": "2016-09-15T02:37:46Z", "closed_at": "2016-09-15T02:37:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nonline = fields.Bool(required=True, attribute='active', validate=Equal(False))\n```\n\nI add this field to my Schema to accept a `False` value, but when I pass a `False`, it will raise `{'online': [u'Invalid value.']}` error.\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/484/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/464", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/464/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/464/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/464/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/464", "id": 157187677, "node_id": "MDU6SXNzdWUxNTcxODc2Nzc=", "number": 464, "title": "Time field wrong result with microseconds", "user": {"login": "Tim-Erwin", "id": 802148, "node_id": "MDQ6VXNlcjgwMjE0OA==", "avatar_url": "https://avatars.githubusercontent.com/u/802148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tim-Erwin", "html_url": "https://github.com/Tim-Erwin", "followers_url": "https://api.github.com/users/Tim-Erwin/followers", "following_url": "https://api.github.com/users/Tim-Erwin/following{/other_user}", "gists_url": "https://api.github.com/users/Tim-Erwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tim-Erwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tim-Erwin/subscriptions", "organizations_url": "https://api.github.com/users/Tim-Erwin/orgs", "repos_url": "https://api.github.com/users/Tim-Erwin/repos", "events_url": "https://api.github.com/users/Tim-Erwin/events{/privacy}", "received_events_url": "https://api.github.com/users/Tim-Erwin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-27T11:34:57Z", "updated_at": "2016-08-30T06:37:04Z", "closed_at": "2016-08-30T06:37:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a schema with a `Time` field. When it serializes a value with microseconds, e.g. `2016-05-27T11:02:35.267899`, it results in  `2016-05-27T1`.\n\nThe reason are those lines:\n\n```\nif value.microsecond:\n    return ret[:12]\n```\n\nhttps://github.com/marshmallow-code/marshmallow/blob/dev/marshmallow/fields.py#L911\n\nI have no idea what your idea was behind that, @sloria . `ret[:19]` would do it in my case, don't know if there might be other cases.\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/464/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/450", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/450/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/450/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/450/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/450", "id": 152904014, "node_id": "MDU6SXNzdWUxNTI5MDQwMTQ=", "number": 450, "title": "`attribute` asymmetry", "user": {"login": "itajaja", "id": 697647, "node_id": "MDQ6VXNlcjY5NzY0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/697647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itajaja", "html_url": "https://github.com/itajaja", "followers_url": "https://api.github.com/users/itajaja/followers", "following_url": "https://api.github.com/users/itajaja/following{/other_user}", "gists_url": "https://api.github.com/users/itajaja/gists{/gist_id}", "starred_url": "https://api.github.com/users/itajaja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itajaja/subscriptions", "organizations_url": "https://api.github.com/users/itajaja/orgs", "repos_url": "https://api.github.com/users/itajaja/repos", "events_url": "https://api.github.com/users/itajaja/events{/privacy}", "received_events_url": "https://api.github.com/users/itajaja/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 96590020, "node_id": "MDU6TGFiZWw5NjU5MDAyMA==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/help%20wanted", "name": "help wanted", "color": "0e8a16", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-05-04T00:21:15Z", "updated_at": "2017-03-28T12:40:49Z", "closed_at": "2017-03-20T01:24:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "if I define a field like:\n\n``` py\nfoo = fields.String(attribute=\"bar.baz\")\n```\n\nthen I can serialize `{'bar': {'baz': 'myvalue'}}` to `{'bar': myvalue}`. I'd expect this to be symmetric, but if I load I get to `{'bar': myvalue}` to `{'bar.baz': 'myvalue'}`. Is there a better way to flatten a nested value or am I missing something? This behavior is a little weird, is there a reason for this to be asymmetric?\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/450/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/353", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/353/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/353/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/353", "id": 120419477, "node_id": "MDU6SXNzdWUxMjA0MTk0Nzc=", "number": 353, "title": "Serialization drops first item of custom iterators", "user": {"login": "jmcarp", "id": 1633460, "node_id": "MDQ6VXNlcjE2MzM0NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/1633460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmcarp", "html_url": "https://github.com/jmcarp", "followers_url": "https://api.github.com/users/jmcarp/followers", "following_url": "https://api.github.com/users/jmcarp/following{/other_user}", "gists_url": "https://api.github.com/users/jmcarp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmcarp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmcarp/subscriptions", "organizations_url": "https://api.github.com/users/jmcarp/orgs", "repos_url": "https://api.github.com/users/jmcarp/repos", "events_url": "https://api.github.com/users/jmcarp/events{/privacy}", "received_events_url": "https://api.github.com/users/jmcarp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-04T15:07:26Z", "updated_at": "2015-12-08T03:48:08Z", "closed_at": "2015-12-08T03:48:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\nfrom marshmallow import Schema, fields\n\nclass Range:\n\n    def __init__(self, max):\n        self.value = 0\n        self.max = max\n\n    def __iter__(self):\n        return self\n\n    def __next__(self):\n        self.value += 1\n        if self.value > self.max:\n            raise StopIteration\n        return {'value': self.value}\n\nclass RangeSchema(Schema):\n    value = fields.Int()\n\nRangeSchema(many=True).dump(Range(5)).data\n# [{'value': 2}, {'value': 3}, {'value': 4}, {'value': 5}]\n\nlist(Range(5))\n# [{'value': 1}, {'value': 2}, {'value': 3}, {'value': 4}, {'value': 5}]\n```\n\nI'm guessing this is the same problem described in #343, but this should be easier to reproduce. This could be solved by detecting that the value is an iterator and casting to a list, as for generators (which might not be straightforward), or using something like `itertools.tee` to get separate iterators (one for serializing, one for inspecting the first item). Or maybe this is all overkill--maybe values serialized with `many` should have to be eager sequences, so that it isn't marshmallow's responsibility to cast to lists or inspect iterators without advancing them.\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/353/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/350", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/350/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/350/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/350/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/350", "id": 120300514, "node_id": "MDU6SXNzdWUxMjAzMDA1MTQ=", "number": 350, "title": "@validates decorator doesn't work if attribute specified on field", "user": {"login": "density", "id": 2256484, "node_id": "MDQ6VXNlcjIyNTY0ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2256484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/density", "html_url": "https://github.com/density", "followers_url": "https://api.github.com/users/density/followers", "following_url": "https://api.github.com/users/density/following{/other_user}", "gists_url": "https://api.github.com/users/density/gists{/gist_id}", "starred_url": "https://api.github.com/users/density/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/density/subscriptions", "organizations_url": "https://api.github.com/users/density/orgs", "repos_url": "https://api.github.com/users/density/repos", "events_url": "https://api.github.com/users/density/events{/privacy}", "received_events_url": "https://api.github.com/users/density/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-03T23:59:20Z", "updated_at": "2015-12-06T17:54:53Z", "closed_at": "2015-12-06T17:46:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "tested on marshmallow 2.3.0, python 3.5.0\n\nif a field has an `attribute` set on it, then there is no way to use the decorator `@validates` to validate the field. see the following test cases:\n\n``` python\nfrom marshmallow import Schema, fields, ValidationError, validates\n\nclass Broken(Schema):\n    s = fields.String(attribute='string_name')\n\n    @validates('s')\n    def validate_string(self, data):\n        raise ValidationError('nope')\n\nclass Broken2(Schema):\n    s = fields.String(attribute='string_name')\n\n    @validates('string_name')\n    def validate_string(self, data):\n        raise ValidationError('nope')\n\nclass Working(Schema):\n    s = fields.String()\n\n    @validates('s')\n    def validate_string(self, data):\n        raise ValidationError('nope')\n\nBroken(strict=True).load({'s': 'hello'}) # does not throw validation error\nBroken2(strict=True).load({'s': 'hello'}) # complains that 'string_name' field doesn't exist\nWorking(strict=True).load({'s': 'hello'}) # works (i.e., raises ValidationError)\n```\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/350/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/348", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/348/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/348/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/348", "id": 120047556, "node_id": "MDU6SXNzdWUxMjAwNDc1NTY=", "number": 348, "title": "FormattedString either doesn't work or is mis-documented.", "user": {"login": "acaird", "id": 2907659, "node_id": "MDQ6VXNlcjI5MDc2NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2907659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acaird", "html_url": "https://github.com/acaird", "followers_url": "https://api.github.com/users/acaird/followers", "following_url": "https://api.github.com/users/acaird/following{/other_user}", "gists_url": "https://api.github.com/users/acaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/acaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acaird/subscriptions", "organizations_url": "https://api.github.com/users/acaird/orgs", "repos_url": "https://api.github.com/users/acaird/repos", "events_url": "https://api.github.com/users/acaird/events{/privacy}", "received_events_url": "https://api.github.com/users/acaird/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-02T22:12:18Z", "updated_at": "2015-12-04T04:31:11Z", "closed_at": "2015-12-04T04:30:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't think FormattedString is working.  Either that or the\nexample in the documentation is wrong:\n\n```\nimport marshmallow as m\nclass UserSchema(m.Schema):\n    name = m.fields.String()\n    greeting = m.fields.FormattedString('Hello {name}')\nuser={'name':'Andy'}\nser = UserSchema()\nprint ser.dump(user)\n```\n\nresults in:\n\n```\nMarshalResult(data={'name': u'Andy'}, errors={})\n```\n\nand I expect it to have be something like:\n\n```\nMarshalResult(data={'name': u'Andy', 'greeting':u'Hello Andy'}, errors={})\n```\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/348/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/320", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/320/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/320/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/320", "id": 115113830, "node_id": "MDU6SXNzdWUxMTUxMTM4MzA=", "number": 320, "title": "ValueError when using @validates decorator and passing only to schema.", "user": {"login": "carlos-alberto", "id": 1853495, "node_id": "MDQ6VXNlcjE4NTM0OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1853495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlos-alberto", "html_url": "https://github.com/carlos-alberto", "followers_url": "https://api.github.com/users/carlos-alberto/followers", "following_url": "https://api.github.com/users/carlos-alberto/following{/other_user}", "gists_url": "https://api.github.com/users/carlos-alberto/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlos-alberto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlos-alberto/subscriptions", "organizations_url": "https://api.github.com/users/carlos-alberto/orgs", "repos_url": "https://api.github.com/users/carlos-alberto/repos", "events_url": "https://api.github.com/users/carlos-alberto/events{/privacy}", "received_events_url": "https://api.github.com/users/carlos-alberto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-04T18:11:45Z", "updated_at": "2015-11-08T02:04:38Z", "closed_at": "2015-11-08T02:04:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "When providing a custom validator for a field, then instantiating the Schema with the `only` parameter, and not including the custom validated field, there is a `ValueError` raised. Not sure if this is intended behaviour but it seems like the custom validator should only be invoked if the field it applies to is passed in?\n\nAn example is shown below:\n\n```\nIn [4]: from marshmallow import Schema, validates, fields\n\nIn [5]:   1 class MySchema(Schema):\n          2     a = fields.Str()\n          3     b = fields.Str()\n          4\n          5     @validates('a')\n          6     def validate_a(self, value):\n          7         return value\n\nIn [6]: schema = MySchema(only=('b',)).load({'b': 'data'})\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-6-ee09f1164833> in <module>()\n----> 1 schema = MySchema(only=('b',)).load({'b': 'data'})\n\n~/.virtualenvs/connect/lib/python3.4/site-packages/marshmallow/schema.py in load(self, data, many)\n    532         .. versionadded:: 1.0.0\n    533         \"\"\"\n--> 534         result, errors = self._do_load(data, many, postprocess=True)\n    535         return UnmarshalResult(data=result, errors=errors)\n    536\n\n~/.virtualenvs/connect/lib/python3.4/site-packages/marshmallow/schema.py in _do_load(self, data, many, postprocess)\n    592         else:\n    593             errors = {}\n--> 594         self._invoke_field_validators(data=result, many=many)\n    595         errors = self._unmarshal.errors\n    596         # Run schema-level migration\n\n~/.virtualenvs/connect/lib/python3.4/site-packages/marshmallow/schema.py in _invoke_field_validators(self, data, many)\n    751                 field_obj = self.fields[field_name]\n    752             except KeyError:\n--> 753                 raise ValueError('\"{0}\" field does not exist.'.format(field_name))\n    754\n    755             if many:\n\nValueError: \"a\" field does not exist.\n```\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/320/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/298", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/298/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/298/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/298", "id": 111310956, "node_id": "MDU6SXNzdWUxMTEzMTA5NTY=", "number": 298, "title": "Field-level validation errors cannot be saved on a nested field with many=True", "user": {"login": "nelfin", "id": 205805, "node_id": "MDQ6VXNlcjIwNTgwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/205805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nelfin", "html_url": "https://github.com/nelfin", "followers_url": "https://api.github.com/users/nelfin/followers", "following_url": "https://api.github.com/users/nelfin/following{/other_user}", "gists_url": "https://api.github.com/users/nelfin/gists{/gist_id}", "starred_url": "https://api.github.com/users/nelfin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nelfin/subscriptions", "organizations_url": "https://api.github.com/users/nelfin/orgs", "repos_url": "https://api.github.com/users/nelfin/repos", "events_url": "https://api.github.com/users/nelfin/events{/privacy}", "received_events_url": "https://api.github.com/users/nelfin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-10-14T02:54:16Z", "updated_at": "2015-10-15T00:42:39Z", "closed_at": "2015-10-15T00:42:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When validating a field, all of its error messages are saved and appended to the list of messages for that field name in `call_and_store`, but for `fields.Nested` with `many=True` the error messages for child elements of the collection are saved and stored in a dictionary keyed by the element index. This causes the following exception on this minimal test case:\n\n``` python\nclass Inner(Schema):\n    req = fields.Field(required=True)\n\nclass Outer(Schema):\n    inner = fields.Nested(Inner, many=True)\n\n    @validates('inner')\n    def validates_inner(self, data):\n        raise ValidationError('not a chance')\n\nouter = Outer()\n_, errors = outer.load({'inner': [{}]})\n```\n\n``` pytb\nTraceback (most recent call last):\n  File \"/home/andrew/misc/marshmallow/tests/test_schema.py\", line 1238, in test_all_errors_on_many_nested_field_with_validates_decorator\n    _, errors = outer.load({'inner': [{}]})\n  File \"/home/andrew/misc/marshmallow/marshmallow/schema.py\", line 539, in load\n    result, errors = self._do_load(data, many, partial=partial, postprocess=True)\n  File \"/home/andrew/misc/marshmallow/marshmallow/schema.py\", line 610, in _do_load\n    self._invoke_field_validators(data=result, many=many)\n  File \"/home/andrew/misc/marshmallow/marshmallow/schema.py\", line 789, in _invoke_field_validators\n    field_obj=field_obj\n  File \"/home/andrew/misc/marshmallow/marshmallow/marshalling.py\", line 74, in call_and_store\n    errors.setdefault(field_name, []).extend(err.messages)\nAttributeError: 'dict' object has no attribute 'extend'\n```\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/298/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/297", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/297/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/297/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/297", "id": 111104385, "node_id": "MDU6SXNzdWUxMTExMDQzODU=", "number": 297, "title": "validates_schema(pass_many=True) does not pass many", "user": {"login": "d-sutherland", "id": 15100079, "node_id": "MDQ6VXNlcjE1MTAwMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/15100079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d-sutherland", "html_url": "https://github.com/d-sutherland", "followers_url": "https://api.github.com/users/d-sutherland/followers", "following_url": "https://api.github.com/users/d-sutherland/following{/other_user}", "gists_url": "https://api.github.com/users/d-sutherland/gists{/gist_id}", "starred_url": "https://api.github.com/users/d-sutherland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d-sutherland/subscriptions", "organizations_url": "https://api.github.com/users/d-sutherland/orgs", "repos_url": "https://api.github.com/users/d-sutherland/repos", "events_url": "https://api.github.com/users/d-sutherland/events{/privacy}", "received_events_url": "https://api.github.com/users/d-sutherland/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-13T05:01:25Z", "updated_at": "2015-10-15T00:42:54Z", "closed_at": "2015-10-15T00:42:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See: https://github.com/marshmallow-code/marshmallow/blob/dev/marshmallow/schema.py#L800\n\nDecorator `validates_schema(pass_many=True)` does not actually pass the whole collection to the decorated method but still passes them one at time. The reason is at the linked line above (whenever `many==True` objects are passed one by one). Replacing that line with `if many and not pass_many` appears to fix the problem. Also notice the test for this functionality, [here](https://github.com/marshmallow-code/marshmallow/blob/dev/tests/test_decorators.py#L313), still passes because the dictionary passed has 2 items so `len(data) == 2` (even though it is only one data entry, not a collection). \n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/297/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/291", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/291/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/291/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/291", "id": 110002073, "node_id": "MDU6SXNzdWUxMTAwMDIwNzM=", "number": 291, "title": "fields.Constant is confusing", "user": {"login": "fayazkhan", "id": 1227312, "node_id": "MDQ6VXNlcjEyMjczMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1227312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fayazkhan", "html_url": "https://github.com/fayazkhan", "followers_url": "https://api.github.com/users/fayazkhan/followers", "following_url": "https://api.github.com/users/fayazkhan/following{/other_user}", "gists_url": "https://api.github.com/users/fayazkhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/fayazkhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fayazkhan/subscriptions", "organizations_url": "https://api.github.com/users/fayazkhan/orgs", "repos_url": "https://api.github.com/users/fayazkhan/repos", "events_url": "https://api.github.com/users/fayazkhan/events{/privacy}", "received_events_url": "https://api.github.com/users/fayazkhan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-06T12:57:15Z", "updated_at": "2015-10-07T04:21:52Z", "closed_at": "2015-10-07T04:21:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "`fields.Contsant` only works for fields which are already present in the object.\n\n``` python\nfrom marshmallow import fields, Schema, pprint\n\nclass Test(Schema):\n    field = fields.Constant(0)\n    field2 = fields.Constant(1)\n\npprint(Test().load({'field': 1}))\n```\n\nI'd expect this code to give me:\n\n```\nUnmarshalResult(data={'field': 0, 'field2': 1}, errors={})\n```\n\nBut this is what I get:\n\n```\nUnmarshalResult(data={'field': 0}, errors={})\n```\n\nIf this is the expected behavior, it isn't really clear from the docs.\nSo either the docs or the behavior ought to be changed.\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/291/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/261", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/261/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/261/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/261", "id": 101722432, "node_id": "MDU6SXNzdWUxMDE3MjI0MzI=", "number": 261, "title": "deserialize() throws exception even if strict=False", "user": {"login": "density", "id": 2256484, "node_id": "MDQ6VXNlcjIyNTY0ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2256484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/density", "html_url": "https://github.com/density", "followers_url": "https://api.github.com/users/density/followers", "following_url": "https://api.github.com/users/density/following{/other_user}", "gists_url": "https://api.github.com/users/density/gists{/gist_id}", "starred_url": "https://api.github.com/users/density/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/density/subscriptions", "organizations_url": "https://api.github.com/users/density/orgs", "repos_url": "https://api.github.com/users/density/repos", "events_url": "https://api.github.com/users/density/events{/privacy}", "received_events_url": "https://api.github.com/users/density/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-18T18:38:25Z", "updated_at": "2015-08-23T14:49:52Z", "closed_at": "2015-08-23T14:48:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "See https://github.com/marshmallow-code/marshmallow/blob/2.0.0b4/marshmallow/marshalling.py#L254\n\nInstead of adding the validation error to self.errors, `Unmarshaller` throws an exception directly at this line. This can happen, for example, if the data you're trying to deserialize is a list instead of a dictionary. I think this should be treated like any other validation error and not actually throw the exception here.\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/261/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/257", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/257/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/257/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/257", "id": 99633757, "node_id": "MDU6SXNzdWU5OTYzMzc1Nw==", "number": 257, "title": "ordered = True not respected", "user": {"login": "annikaC", "id": 1790005, "node_id": "MDQ6VXNlcjE3OTAwMDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1790005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/annikaC", "html_url": "https://github.com/annikaC", "followers_url": "https://api.github.com/users/annikaC/followers", "following_url": "https://api.github.com/users/annikaC/following{/other_user}", "gists_url": "https://api.github.com/users/annikaC/gists{/gist_id}", "starred_url": "https://api.github.com/users/annikaC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/annikaC/subscriptions", "organizations_url": "https://api.github.com/users/annikaC/orgs", "repos_url": "https://api.github.com/users/annikaC/repos", "events_url": "https://api.github.com/users/annikaC/events{/privacy}", "received_events_url": "https://api.github.com/users/annikaC/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-08-07T11:47:53Z", "updated_at": "2020-07-28T21:36:04Z", "closed_at": "2015-09-17T00:23:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nclass BaseSchema(Schema):\n     id = fields.Int(dump_only=True)\n\nclass LineItemSchema(BaseSchema):\n    name = fields.Str(attribute='label')\n\nclass CampaignSchema(BaseSchema):\n    name = fields.Str(attribute='campaign_name')\n    line_items = fields.Nested(LineItemSchema, many=True)\n\n    class Meta:\n        fields = (\"id\", \"name\", \"line_items\")\n        ordered = True\n```\n\nWhen I run:\nresult = campaign_schema.dump(campaign)\njson.dumps(result.data)\n\nI get this output:\n\n```\n{\n    \"id\": 1, \n    \"line_items\": [\n        {\n            \"id\": 1, \n            \"name\": \"mpu\"\n        }, \n        {\n            \"id\": 3, \n            \"name\": \"banner\"\n        }\n    ], \n    \"name\": \"test\"\n}\n```\n\nI had a look in my debugger - think it's something to do with that some of the field names are the same? Perhaps something to do with how ret is constructed here: https://github.com/marshmallow-code/marshmallow/blob/dev/marshmallow/schema.py#L729\n\nLet me know if I'm missing something in my config somewhere!\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/257/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/253", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/253/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/253/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/253", "id": 98133385, "node_id": "MDU6SXNzdWU5ODEzMzM4NQ==", "number": 253, "title": "validate field should prior to make_object", "user": {"login": "sunsongxp", "id": 2234560, "node_id": "MDQ6VXNlcjIyMzQ1NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2234560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunsongxp", "html_url": "https://github.com/sunsongxp", "followers_url": "https://api.github.com/users/sunsongxp/followers", "following_url": "https://api.github.com/users/sunsongxp/following{/other_user}", "gists_url": "https://api.github.com/users/sunsongxp/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunsongxp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunsongxp/subscriptions", "organizations_url": "https://api.github.com/users/sunsongxp/orgs", "repos_url": "https://api.github.com/users/sunsongxp/repos", "events_url": "https://api.github.com/users/sunsongxp/events{/privacy}", "received_events_url": "https://api.github.com/users/sunsongxp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-30T10:16:42Z", "updated_at": "2015-08-01T17:42:54Z", "closed_at": "2015-08-01T17:42:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version: marshmallow==2.0.0b4\n\nExample:\n\n```\nclass UserSchema(Schema):\n    github_account_name = Str()\n\n    @validates('github_account_name')\n    def validate_github_account_name(self, value):\n          ........\n\n    def make_object(self, data):\n          return User(**data)\n```\n\nThis example lead to a error in line 771(value = data[field_name]) in schema.py, alleging \n\n```\nTypeError: 'User' object has no attribute '__getitem__'\n```\n\nThe problem is that the \"value\" in line 771 is actually the User object which returned by make_object, the 'field_name ' is exactly 'github_account_name' that defined needs to be validated.\n\nThis problem may be solved by validate fields prior to make_object.\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/253/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/226", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/226/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/226/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/226", "id": 89546288, "node_id": "MDU6SXNzdWU4OTU0NjI4OA==", "number": 226, "title": "validation fails when combining load_from and required=True", "user": {"login": "thomasbhatia", "id": 1307449, "node_id": "MDQ6VXNlcjEzMDc0NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1307449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasbhatia", "html_url": "https://github.com/thomasbhatia", "followers_url": "https://api.github.com/users/thomasbhatia/followers", "following_url": "https://api.github.com/users/thomasbhatia/following{/other_user}", "gists_url": "https://api.github.com/users/thomasbhatia/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasbhatia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasbhatia/subscriptions", "organizations_url": "https://api.github.com/users/thomasbhatia/orgs", "repos_url": "https://api.github.com/users/thomasbhatia/repos", "events_url": "https://api.github.com/users/thomasbhatia/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasbhatia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-06-19T11:57:34Z", "updated_at": "2017-02-22T16:18:28Z", "closed_at": "2015-06-19T14:43:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if by design but combining load_from and required=True results in validation failing.\n\n```\nclass UserSchema(Schema):\n    name = fields.String()\n    email = fields.Email(load_from='emailAddress', required=True)\n\ndata = {\n    'name': 'Mike',\n    'emailAddress': 'foo@bar.com'\n}\ns = UserSchema()\nresult, errors = s.load(data)\n```\n\n{'email': [u'Missing data for required field.']}\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/226/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/221", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/221/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/221/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/221", "id": 86797525, "node_id": "MDU6SXNzdWU4Njc5NzUyNQ==", "number": 221, "title": "Email address validation fails when mailbox name contains non-ASCII characters", "user": {"login": "lextoumbourou", "id": 1080552, "node_id": "MDQ6VXNlcjEwODA1NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1080552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lextoumbourou", "html_url": "https://github.com/lextoumbourou", "followers_url": "https://api.github.com/users/lextoumbourou/followers", "following_url": "https://api.github.com/users/lextoumbourou/following{/other_user}", "gists_url": "https://api.github.com/users/lextoumbourou/gists{/gist_id}", "starred_url": "https://api.github.com/users/lextoumbourou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lextoumbourou/subscriptions", "organizations_url": "https://api.github.com/users/lextoumbourou/orgs", "repos_url": "https://api.github.com/users/lextoumbourou/repos", "events_url": "https://api.github.com/users/lextoumbourou/events{/privacy}", "received_events_url": "https://api.github.com/users/lextoumbourou/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-10T01:42:54Z", "updated_at": "2015-08-08T19:48:48Z", "closed_at": "2015-08-08T19:48:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\n\nIt appears email address validation fails when non-ASCII characters are present in the mailbox name, which should be permitted as per [RFC 6530](http://en.wikipedia.org/wiki/Email_address#Internationalization). See example (tested on `dev` branch):\n\n```\nIn [1]: from marshmallow import fields, Schema\n\nIn [2]: class Test(Schema):\n   ...:     email = fields.Email()\n   ...:\n\nIn [3]: t = Test()\n\nIn [4]: t.load({'email': u'jos\u00e9@blah.com'})\nOut[4]: UnmarshalResult(data={}, errors={'email': [u'\"jos\\xe9@blah.com\" is not a valid email address.']})\n```\n\nChars outside of ASCII seem to work fine in the domain though.\n\nThanks,\n\nLex\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/221/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/207", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/207/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/207/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/207", "id": 72905025, "node_id": "MDU6SXNzdWU3MjkwNTAyNQ==", "number": 207, "title": "Unexpected `TypeError` raised using `Function` fields with list-like objects", "user": {"login": "jmcarp", "id": 1633460, "node_id": "MDQ6VXNlcjE2MzM0NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/1633460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmcarp", "html_url": "https://github.com/jmcarp", "followers_url": "https://api.github.com/users/jmcarp/followers", "following_url": "https://api.github.com/users/jmcarp/following{/other_user}", "gists_url": "https://api.github.com/users/jmcarp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmcarp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmcarp/subscriptions", "organizations_url": "https://api.github.com/users/jmcarp/orgs", "repos_url": "https://api.github.com/users/jmcarp/repos", "events_url": "https://api.github.com/users/jmcarp/events{/privacy}", "received_events_url": "https://api.github.com/users/jmcarp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-04T02:42:47Z", "updated_at": "2015-05-12T03:16:44Z", "closed_at": "2015-05-12T03:16:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following example raises an uncaught, and unexpected, `TypeError`:\n\n``` python\nimport marshmallow as ma\n\nclass SumSchema(ma.Schema):\n    sum = ma.fields.Function(lambda obj: sum(obj))\n\nSumSchema().dump([1,2,3])\n```\n\nThe error is raised in `_get_value_for_key`, which implicitly assumes that objects that are indexable, not strings, and not dictionaries will only raise a `KeyError` when we look up a value using square brackets. This isn't the case for lists and list-like objects: a list isn't a dict or a string, and it is indexable, but indexing into it with a string key raises `TypeError`, not `KeyError`.\n\nIt seems like the intention of `_get_value_for_key` is to look up keys in mappings, not in any indexable object. If that's the case, I think it would make sense to explicitly check whether the object is a mapping, like this:\n\n``` python\nimport collections\n\ndef _get_value_for_key(key, obj, default):\n    if isinstance(obj, collections.Mapping):\n        return obj.get(key, default)\n    if isinstance(key, basestring) and hasattr(obj, key):\n        return getattr(obj, key)\n    return default\n```\n\nOtherwise, if this helper is meant to be able to index into sequences as well, I think we need a more general exception check:\n\n``` python\ndef _get_value_for_key(key, obj, default):\n    if isinstance(obj, dict):\n        return obj.get(key, default)\n    if isinstance(key, basestring) and hasattr(obj, key):\n        return getattr(obj, key)\n    if is_indexable_but_not_string(obj):\n        try:\n            return obj[key]\n        except KeyError, IndexError, TypeError:\n            return default\n    return default\n```\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/207/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/188", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/188/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/188/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/188", "id": 66659139, "node_id": "MDU6SXNzdWU2NjY1OTEzOQ==", "number": 188, "title": "Nested field is not being validated correctly", "user": {"login": "juanrossi", "id": 569417, "node_id": "MDQ6VXNlcjU2OTQxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/569417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juanrossi", "html_url": "https://github.com/juanrossi", "followers_url": "https://api.github.com/users/juanrossi/followers", "following_url": "https://api.github.com/users/juanrossi/following{/other_user}", "gists_url": "https://api.github.com/users/juanrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/juanrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juanrossi/subscriptions", "organizations_url": "https://api.github.com/users/juanrossi/orgs", "repos_url": "https://api.github.com/users/juanrossi/repos", "events_url": "https://api.github.com/users/juanrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/juanrossi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-04-06T17:27:25Z", "updated_at": "2015-04-20T16:36:03Z", "closed_at": "2015-04-20T16:36:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I'm using marshmallow as a validation and marshalling library. In some validation classes I use Nested field.\n\nPart of my test suite tests that the validations are returning the corrected error when some unexpected data is sent. If I try to send a string to a Nested field I get an exception:\n\n``` python\nmarshmallow/fields.pyc in deserialize(self, data, fields_dict, many, validators, preprocess, postprocess, strict, dict_class)\n    283                     continue\n    284                 key = fields_dict[attr_name].attribute or attr_name\n--> 285                 raw_value = data.get(attr_name, missing)\n    286                 if raw_value is missing and not field_obj.required:\n    287                     continue\n\nAttributeError: 'str' object has no attribute 'get'\n```\n\nThe example code I'm using to replicate this error is:\n\n``` python\nfrom marshmallow import Schema, fields, validate\n\n\nclass ValidateClass(Schema):\n    item = fields.Nested('NestClass', many=True, required=True)\n\nclass NestClass(Schema):\n    item1 = fields.Integer(required=True, validate=validate.Range(min=2, max=24))\n    item2 = fields.String(required=True, validate=validate.Length(min=0))\n\n\nValidateClass().load({'item': 'a'})\n```\n\nI also tried adding a validator to item field where I check that I'm receiving a valid list of objects, but it's still raising the exception.\n\nAny thoughts? Thanks.\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/188/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/144", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/144/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/144/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/144", "id": 57042506, "node_id": "MDU6SXNzdWU1NzA0MjUwNg==", "number": 144, "title": "Bug with nested schemas and custom validators", "user": {"login": "vovanbo", "id": 877240, "node_id": "MDQ6VXNlcjg3NzI0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/877240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vovanbo", "html_url": "https://github.com/vovanbo", "followers_url": "https://api.github.com/users/vovanbo/followers", "following_url": "https://api.github.com/users/vovanbo/following{/other_user}", "gists_url": "https://api.github.com/users/vovanbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vovanbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vovanbo/subscriptions", "organizations_url": "https://api.github.com/users/vovanbo/orgs", "repos_url": "https://api.github.com/users/vovanbo/repos", "events_url": "https://api.github.com/users/vovanbo/events{/privacy}", "received_events_url": "https://api.github.com/users/vovanbo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-02-09T15:09:27Z", "updated_at": "2015-02-15T18:28:22Z", "closed_at": "2015-02-15T03:59:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Let's assume we have following code:\n\n``` python\nfrom marshmallow import Schema, fields, ValidationError\n\n\nclass ThirdLevel(Schema):\n    name = fields.String()\n\n\nclass SecondLevel(Schema):\n    third = fields.Nested(ThirdLevel, many=True, required=True)\n\n@SecondLevel.validator\ndef validate_emptiness_of_third(schema, input_data):\n    if not input_data.get('third'):\n        raise ValidationError('Custom error message from second level.', 'third')\n\n\nclass FirstLevel(Schema):\n    second = fields.Nested(SecondLevel, many=True, required=True)\n\n@FirstLevel.validator\ndef validate_emptiness_of_second(schema, input_data):\n    if not input_data.get('second'):\n        raise ValidationError('Custom error message from first level.', 'second')\n\n\ngood_data = {\n    'second': [\n        {\n            'third': [\n                {\n                    'name': 'Some'\n                }\n            ]\n        }\n    ]\n}\n\n\nbad_data = {\n    'second': [\n        {\n            'third': None\n        }\n    ]\n}\n\n\nresult, errors = FirstLevel().load(good_data)\n\nprint(result)  # Output: {'second': [{'third': [{'name': u'Some'}]}]}\n\nresult, errors = FirstLevel().load(bad_data)  # Raises AttributeError\n```\n\nLast serialization raises `AttributeError: 'dict' object has no attribute 'extend'`, because of `fields.Unmarshaller` have `errors` field which looks before error like:\n\n``` python\n{'second': {'third': [u'Field may not be null.', 'Custom error message from second level.']}}\n```\n\nSo, it's really dict which can't be extended with list of `err.messages` [here](https://github.com/marshmallow-code/marshmallow/blob/dev/marshmallow/fields.py#L246-L252).\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/144/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/123", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/123/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/123/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/123", "id": 53581546, "node_id": "MDU6SXNzdWU1MzU4MTU0Ng==", "number": 123, "title": "AttributeError exception when attempting to deserialize None", "user": {"login": "RealSalmon", "id": 943086, "node_id": "MDQ6VXNlcjk0MzA4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/943086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RealSalmon", "html_url": "https://github.com/RealSalmon", "followers_url": "https://api.github.com/users/RealSalmon/followers", "following_url": "https://api.github.com/users/RealSalmon/following{/other_user}", "gists_url": "https://api.github.com/users/RealSalmon/gists{/gist_id}", "starred_url": "https://api.github.com/users/RealSalmon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RealSalmon/subscriptions", "organizations_url": "https://api.github.com/users/RealSalmon/orgs", "repos_url": "https://api.github.com/users/RealSalmon/repos", "events_url": "https://api.github.com/users/RealSalmon/events{/privacy}", "received_events_url": "https://api.github.com/users/RealSalmon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-01-07T00:20:19Z", "updated_at": "2015-01-10T18:18:24Z", "closed_at": "2015-01-10T18:18:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When attempting to deserialize None into a Schema, an AttributeError exception is thrown.\n\n``` python\nfrom marshmallow import Schema\n\n\nclass MySchema(Schema):\n    class Meta:\n        fields = ('field1', 'field2')\n\n\ntest_dict = {'field1': 'value 1',\n             'field2': 'value 2',\n             'something': 'hey'}\n\nassert MySchema().load(test_dict).data == {k: test_dict[k] for k in test_dict\n                                           if k is not 'something'}\nassert MySchema().load({}).data == {}\nassert MySchema().load(None).data is None\n\n```\n\nThe final assert throws . . . \n\n``` sh\nTraceback (most recent call last):\n  File \"test.py\", line 16, in <module>\n    assert MySchema().load(None).data is None\n  File \"/Users/bjones/Desktop/marshmallow/lib/python2.7/site-packages/marshmallow/schema.py\", line 490, in load\n    result, errors = self._do_load(data, many, postprocess=True)\n  File \"/Users/bjones/Desktop/marshmallow/lib/python2.7/site-packages/marshmallow/schema.py\", line 598, in _do_load\n    dict_class=self.dict_class\n  File \"/Users/bjones/Desktop/marshmallow/lib/python2.7/site-packages/marshmallow/fields.py\", line 277, in deserialize\n    raw_value = data.get(attr_name, missing)\nAttributeError: 'NoneType' object has no attribute 'get'\n```\n\nThis is with 1.2.0.\n\nObvously the test case is trivial to work around, but in practice I am trying to deserialize a much larger collection where some of the members may be None.\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/123/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/121", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/121/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/121/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/121", "id": 53188169, "node_id": "MDU6SXNzdWU1MzE4ODE2OQ==", "number": 121, "title": "Use error_handler when valdating/deserializing", "user": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-31T15:21:39Z", "updated_at": "2015-01-02T02:40:29Z", "closed_at": "2015-01-01T23:56:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, the `error_handler` callback is only executed when  serialization error occurs. It should also be executed when a deserialization/validation error occurs.\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/121/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/110", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/110/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/110/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/110", "id": 52602591, "node_id": "MDU6SXNzdWU1MjYwMjU5MQ==", "number": 110, "title": "Using dictionaries in ValidationError when using validate()", "user": {"login": "ksesong", "id": 940567, "node_id": "MDQ6VXNlcjk0MDU2Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/940567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ksesong", "html_url": "https://github.com/ksesong", "followers_url": "https://api.github.com/users/ksesong/followers", "following_url": "https://api.github.com/users/ksesong/following{/other_user}", "gists_url": "https://api.github.com/users/ksesong/gists{/gist_id}", "starred_url": "https://api.github.com/users/ksesong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ksesong/subscriptions", "organizations_url": "https://api.github.com/users/ksesong/orgs", "repos_url": "https://api.github.com/users/ksesong/repos", "events_url": "https://api.github.com/users/ksesong/events{/privacy}", "received_events_url": "https://api.github.com/users/ksesong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/4", "html_url": "https://github.com/marshmallow-code/marshmallow/milestone/4", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/4/labels", "id": 894355, "node_id": "MDk6TWlsZXN0b25lODk0MzU1", "number": 4, "title": "1.2.0", "description": "", "creator": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2014-12-07T00:02:59Z", "updated_at": "2015-01-10T18:18:35Z", "due_on": null, "closed_at": "2015-01-10T18:18:35Z"}, "comments": 5, "created_at": "2014-12-21T18:40:04Z", "updated_at": "2014-12-22T06:11:41Z", "closed_at": "2014-12-22T06:11:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Calling ValidationError with a dictionary-type argument is not properly propagated to the resulting errors dictionary when using the `validate()` method from a `Schema instance`, despite the [documentation](http://marshmallow.readthedocs.org/en/dev/api_reference.html#marshmallow.exceptions.ValidationError).\n\nThe problem originates from the use of [`extend()`](https://github.com/sloria/marshmallow/blob/dev/marshmallow/fields.py#L391) when gathering the different errors. A solution is to wrap each dictionary within a list, i.e. change [how dictionaries are parsed](https://github.com/sloria/marshmallow/blob/dev/marshmallow/exceptions.py#L54), but I don't know how this would entail for the other methods.\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/110/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/96", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/96/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/96/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/96", "id": 51890159, "node_id": "MDU6SXNzdWU1MTg5MDE1OQ==", "number": 96, "title": "Error when deserializing empty Date()", "user": {"login": "svenstaro", "id": 1664, "node_id": "MDQ6VXNlcjE2NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svenstaro", "html_url": "https://github.com/svenstaro", "followers_url": "https://api.github.com/users/svenstaro/followers", "following_url": "https://api.github.com/users/svenstaro/following{/other_user}", "gists_url": "https://api.github.com/users/svenstaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/svenstaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svenstaro/subscriptions", "organizations_url": "https://api.github.com/users/svenstaro/orgs", "repos_url": "https://api.github.com/users/svenstaro/repos", "events_url": "https://api.github.com/users/svenstaro/events{/privacy}", "received_events_url": "https://api.github.com/users/svenstaro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/4", "html_url": "https://github.com/marshmallow-code/marshmallow/milestone/4", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/4/labels", "id": 894355, "node_id": "MDk6TWlsZXN0b25lODk0MzU1", "number": 4, "title": "1.2.0", "description": "", "creator": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2014-12-07T00:02:59Z", "updated_at": "2015-01-10T18:18:35Z", "due_on": null, "closed_at": "2015-01-10T18:18:35Z"}, "comments": 2, "created_at": "2014-12-13T15:09:12Z", "updated_at": "2014-12-15T02:29:53Z", "closed_at": "2014-12-15T02:29:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "So when deserializing an empty (but non-required) DateTime, everything works fine. When deserializing an empty (but non-required) Date(), I get:\n\n`File \"/home/svenstaro/prj/blah/blah.py\", line 181, in patch\n    result, errors = schema.load(request.json)\n  File \"/home/svenstaro/prj/blah/env/lib/python3.4/site-packages/marshmallow/schema.py\", line 481, in load\n    result, errors = self._do_load(data, many, postprocess=True)\n  File \"/home/svenstaro/prj/blah/env/lib/python3.4/site-packages/marshmallow/schema.py\", line 589, in _do_load\n    dict_class=self.dict_class\n  File \"/home/svenstaro/prj/blah/env/lib/python3.4/site-packages/marshmallow/fields.py\", line 282, in deserialize\n    strict=strict\n  File \"/home/svenstaro/prj/blah/env/lib/python3.4/site-packages/marshmallow/fields.py\", line 107, in _call_and_store\n    value = getter_func(data)\n  File \"/home/svenstaro/prj/blah/env/lib/python3.4/site-packages/marshmallow/fields.py\", line 453, in deserialize\n    return self._call_and_reraise(do_deserialization, UnmarshallingError)\n  File \"/home/svenstaro/prj/blah/env/lib/python3.4/site-packages/marshmallow/fields.py\", line 403, in _call_and_reraise\n    return func()\n  File \"/home/svenstaro/prj/blah/env/lib/python3.4/site-packages/marshmallow/fields.py\", line 450, in do_deserialization\n    output = self._deserialize(value)\n  File \"/home/svenstaro/prj/blah/env/lib/python3.4/site-packages/marshmallow/fields.py\", line 960, in _deserialize\n    return utils.from_iso_date(value)\n  File \"/home/svenstaro/prj/blah/env/lib/python3.4/site-packages/marshmallow/utils.py\", line 262, in from_iso_date\n    return parser.parse(datestring).date()\n  File \"/home/svenstaro/prj/blah/env/lib/python3.4/site-packages/dateutil/parser.py\", line 743, in parse\n    return DEFAULTPARSER.parse(timestr, **kwargs)\n  File \"/home/svenstaro/prj/blah/env/lib/python3.4/site-packages/dateutil/parser.py\", line 300, in parse\n    res = self._parse(timestr, **kwargs)\n  File \"/home/svenstaro/prj/blah/env/lib/python3.4/site-packages/dateutil/parser.py\", line 358, in _parse\n    l = _timelex.split(timestr)\n  File \"/home/svenstaro/prj/blah/env/lib/python3.4/site-packages/dateutil/parser.py\", line 139, in split\n    return list(cls(s))\n  File \"/home/svenstaro/prj/blah/env/lib/python3.4/site-packages/dateutil/parser.py\", line 130, in __next__\n    token = self.get_token()\n  File \"/home/svenstaro/prj/blah/env/lib/python3.4/site-packages/dateutil/parser.py\", line 61, in get_token\n    nextchar = self.instream.read(1)\nAttributeError: 'NoneType' object has no attribute 'read'`\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/96/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/96/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/88", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/88/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/88/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/88", "id": 51275840, "node_id": "MDU6SXNzdWU1MTI3NTg0MA==", "number": 88, "title": "Validators are shared between Schema subclasses", "user": {"login": "amikholap", "id": 4663402, "node_id": "MDQ6VXNlcjQ2NjM0MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/4663402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amikholap", "html_url": "https://github.com/amikholap", "followers_url": "https://api.github.com/users/amikholap/followers", "following_url": "https://api.github.com/users/amikholap/following{/other_user}", "gists_url": "https://api.github.com/users/amikholap/gists{/gist_id}", "starred_url": "https://api.github.com/users/amikholap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amikholap/subscriptions", "organizations_url": "https://api.github.com/users/amikholap/orgs", "repos_url": "https://api.github.com/users/amikholap/repos", "events_url": "https://api.github.com/users/amikholap/events{/privacy}", "received_events_url": "https://api.github.com/users/amikholap/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/4", "html_url": "https://github.com/marshmallow-code/marshmallow/milestone/4", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/4/labels", "id": 894355, "node_id": "MDk6TWlsZXN0b25lODk0MzU1", "number": 4, "title": "1.2.0", "description": "", "creator": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2014-12-07T00:02:59Z", "updated_at": "2015-01-10T18:18:35Z", "due_on": null, "closed_at": "2015-01-10T18:18:35Z"}, "comments": 5, "created_at": "2014-12-08T10:02:01Z", "updated_at": "2014-12-20T20:43:09Z", "closed_at": "2014-12-20T20:43:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The code:\n\n``` python\nfrom marshmallow import Schema\n\nclass AppBaseSchema(Schema):\n    pass\n\nclass Schema1(AppBaseSchema):\n    pass\n\nclass Schema2(AppBaseSchema):\n    pass\n\n@AppBaseSchema.validator\ndef validate_appbaseschema(schema, input_data):\n    print 'validating AppBaseSchema'\n    return True\n\n@Schema1.validator\ndef validate_schema1(schema, input_data):\n    print 'validating Schema1'\n    return True\n\n@Schema2.validator\ndef validate_schema2(schema, input_data):\n    print 'validating Schema2'\n    return True\n\n\n>>> s1 = Schema1()\n>>> s1.load({})\nvalidating AppBaseSchema\nvalidating Schema1\nvalidating Schema2\nUnmarshalResult(data={}, errors={})\n```\n\nName mangling doesn't occur for __validators__ attribute so all classes share the same dict.\nFixed this locally using a simple metaclass but this behavior seems undesired.\nMaybe __validators should be used instead?\n\nLocal fix:\n\n``` python\nimport copy\n\nfrom marshmallow import Schema\nfrom marshmallow.schema import SchemaMeta\n\n\nclass BaseSchemaMeta(SchemaMeta):\n    def __init__(cls, name, bases, d):\n        super(BaseSchemaMeta, cls).__init__(name, bases, d)\n        cls.__validators__ = copy.copy(cls.__validators__)\n\n\nclass AppBaseSchema(Schema):\n    __metaclass__ = BaseSchemaMeta\n```\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/88/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/88/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/86", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/86/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/86/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/86", "id": 51233863, "node_id": "MDU6SXNzdWU1MTIzMzg2Mw==", "number": 86, "title": "Price (and other Number based) field bug/question", "user": {"login": "philtay", "id": 7722913, "node_id": "MDQ6VXNlcjc3MjI5MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/7722913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philtay", "html_url": "https://github.com/philtay", "followers_url": "https://api.github.com/users/philtay/followers", "following_url": "https://api.github.com/users/philtay/following{/other_user}", "gists_url": "https://api.github.com/users/philtay/gists{/gist_id}", "starred_url": "https://api.github.com/users/philtay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philtay/subscriptions", "organizations_url": "https://api.github.com/users/philtay/orgs", "repos_url": "https://api.github.com/users/philtay/repos", "events_url": "https://api.github.com/users/philtay/events{/privacy}", "received_events_url": "https://api.github.com/users/philtay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}, {"id": 65183470, "node_id": "MDU6TGFiZWw2NTE4MzQ3MA==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/4", "html_url": "https://github.com/marshmallow-code/marshmallow/milestone/4", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/milestones/4/labels", "id": 894355, "node_id": "MDk6TWlsZXN0b25lODk0MzU1", "number": 4, "title": "1.2.0", "description": "", "creator": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2014-12-07T00:02:59Z", "updated_at": "2015-01-10T18:18:35Z", "due_on": null, "closed_at": "2015-01-10T18:18:35Z"}, "comments": 9, "created_at": "2014-12-07T22:12:11Z", "updated_at": "2014-12-20T17:49:07Z", "closed_at": "2014-12-20T17:49:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Below the steps to reproduce the bug:\n\n``` python\nfrom marshmallow.fields import Price\n\np = Price()\np.deserialize('23.545')\np.deserialize('23.555')\n\nassert p.deserialize('23.545') != p.deserialize('23.555')\n```\n\nThe problem is ROUND_HALF_EVEN used in utils.decimal_to_fixed.\nIn general, it's false that ROUND_HALF_EVEN is the right rounding method for an amount of money.\nFor instance, in Europe the law prescribes the use of ROUND_HALF_UP to round amounts in EUR currency.\n\nMoreover the use of float for money is _very_ dangerous. Something we are going to regret.\nMore info here: http://spin.atomicobject.com/2014/08/14/currency-rounding-errors/\n(a quick search on google will show a lot of horror stories about this)\n\nLast but not least a question. Why it deserializes to a string and not to a Decimal?\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/86/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/86/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/65", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/65/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/65/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/65", "id": 49773407, "node_id": "MDU6SXNzdWU0OTc3MzQwNw==", "number": 65, "title": "Inconsistent behavior between dump(obj, many=True) and Schema(many=True)", "user": {"login": "svenstaro", "id": 1664, "node_id": "MDQ6VXNlcjE2NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svenstaro", "html_url": "https://github.com/svenstaro", "followers_url": "https://api.github.com/users/svenstaro/followers", "following_url": "https://api.github.com/users/svenstaro/following{/other_user}", "gists_url": "https://api.github.com/users/svenstaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/svenstaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svenstaro/subscriptions", "organizations_url": "https://api.github.com/users/svenstaro/orgs", "repos_url": "https://api.github.com/users/svenstaro/repos", "events_url": "https://api.github.com/users/svenstaro/events{/privacy}", "received_events_url": "https://api.github.com/users/svenstaro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-11-22T05:11:07Z", "updated_at": "2014-11-28T17:12:21Z", "closed_at": "2014-11-28T17:12:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Doing\n\n```\n    schema = MySchema(many=True)\n    print(schema.dump(mythings))\n```\n\nI get the correct behavior and everything works fine. However, doing\n\n```\n    schema = MySchema()\n    print(schema.dump(mythings, many=True))\n```\n\nresults in\n\n`myfile.py:29: in get\n    print(schema.dump(mythings, many=True))\nenv/lib/python3.4/site-packages/marshmallow/schema.py:435: in dump\n    self._update_fields(obj)\nenv/lib/python3.4/site-packages/marshmallow/schema.py:583: in _update_fields\n    ret = self.__filter_fields(field_names, obj)\nenv/lib/python3.4/site-packages/marshmallow/schema.py:630: in __filter_fields\n    attribute_type = type(obj_dict[key])\nE   TypeError: list indices must be integers, not str`\n\nSomething's up here.\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/65/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/65/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/64", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/64/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/64/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/64", "id": 49620178, "node_id": "MDU6SXNzdWU0OTYyMDE3OA==", "number": 64, "title": "many=True renders wrong when given nothing to render", "user": {"login": "nickretallack", "id": 13291, "node_id": "MDQ6VXNlcjEzMjkx", "avatar_url": "https://avatars.githubusercontent.com/u/13291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickretallack", "html_url": "https://github.com/nickretallack", "followers_url": "https://api.github.com/users/nickretallack/followers", "following_url": "https://api.github.com/users/nickretallack/following{/other_user}", "gists_url": "https://api.github.com/users/nickretallack/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickretallack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickretallack/subscriptions", "organizations_url": "https://api.github.com/users/nickretallack/orgs", "repos_url": "https://api.github.com/users/nickretallack/repos", "events_url": "https://api.github.com/users/nickretallack/events{/privacy}", "received_events_url": "https://api.github.com/users/nickretallack/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-20T21:26:17Z", "updated_at": "2014-11-23T16:40:47Z", "closed_at": "2014-11-23T16:33:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nfrom marshmallow import Schema, fields, pprint\n\nclass User(object):\n    def __init__(self, name, email, age=None):\n        self.name = name\n\nclass ChildSchema(Schema):\n    name = fields.String()\n\nclass ParentSchema(Schema):\n    name = fields.String()\n    children = fields.Nested(ChildSchema, many=True)\n\nuser = User(name=\"Monty\")\nschema = ParentSchema()\nresult = schema.dump(user)\npprint(result.data)\n# -> {'children': {'name': ''}, 'name': u'Monty'}\n```\n\nI would expect the result to be `{'children': [], 'name': u'Monty'}`.  If I set a field to many=True, it should always be a list, no exceptions.  What I'm getting instead looks like a mistake.\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/64/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/64/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/62", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/62/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/62/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/62", "id": 49267205, "node_id": "MDU6SXNzdWU0OTI2NzIwNQ==", "number": 62, "title": "using an attribute named items when serializing a dict ", "user": {"login": "rozenm", "id": 8502362, "node_id": "MDQ6VXNlcjg1MDIzNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/8502362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rozenm", "html_url": "https://github.com/rozenm", "followers_url": "https://api.github.com/users/rozenm/followers", "following_url": "https://api.github.com/users/rozenm/following{/other_user}", "gists_url": "https://api.github.com/users/rozenm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rozenm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rozenm/subscriptions", "organizations_url": "https://api.github.com/users/rozenm/orgs", "repos_url": "https://api.github.com/users/rozenm/repos", "events_url": "https://api.github.com/users/rozenm/events{/privacy}", "received_events_url": "https://api.github.com/users/rozenm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-11-18T17:40:00Z", "updated_at": "2014-11-23T15:52:13Z", "closed_at": "2014-11-23T15:52:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "When serializing  a dict with an attribute called \"items\"\nthe fails to get the correct \"items\" value and instead gets the items function of the dict object.\nThe problem is in utils line 298:\n    if isinstance(key, basestring) and hasattr(obj, key):\nhasattr(obj,key) == True.\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/62/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/62/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/28", "repository_url": "https://api.github.com/repos/marshmallow-code/marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/28/comments", "events_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/28/events", "html_url": "https://github.com/marshmallow-code/marshmallow/issues/28", "id": 38561927, "node_id": "MDU6SXNzdWUzODU2MTkyNw==", "number": 28, "title": "Serialized SQLAlchemy Query resulting in empty dictionaries or an error ", "user": {"login": "xYDanTheManYx", "id": 8246818, "node_id": "MDQ6VXNlcjgyNDY4MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/8246818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xYDanTheManYx", "html_url": "https://github.com/xYDanTheManYx", "followers_url": "https://api.github.com/users/xYDanTheManYx/followers", "following_url": "https://api.github.com/users/xYDanTheManYx/following{/other_user}", "gists_url": "https://api.github.com/users/xYDanTheManYx/gists{/gist_id}", "starred_url": "https://api.github.com/users/xYDanTheManYx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xYDanTheManYx/subscriptions", "organizations_url": "https://api.github.com/users/xYDanTheManYx/orgs", "repos_url": "https://api.github.com/users/xYDanTheManYx/repos", "events_url": "https://api.github.com/users/xYDanTheManYx/events{/privacy}", "received_events_url": "https://api.github.com/users/xYDanTheManYx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 65183466, "node_id": "MDU6TGFiZWw2NTE4MzQ2Ng==", "url": "https://api.github.com/repos/marshmallow-code/marshmallow/labels/bug", "name": "bug", "color": "b60205", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2014-07-23T19:17:52Z", "updated_at": "2015-05-12T14:46:38Z", "closed_at": "2015-05-12T03:16:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using sqlalchemy, flask & marshmallow.\nI have an issue when Serializing an sqlalchemy query.\nI seem to get empty dictionaries when I serialize the query result.\nIf I try to specify column names to serialize then it errors.\nUsing a query such as:\n\nmodules = db.session.query(Hosts.hostname, Modules.name, HostMatrix.enabled).filter(Hosts.hostname == host).all()\n\nTo recreate:\n\nimport sqlalchemy\nfrom marshmallow import Serializer\n\nmodules = [sqlalchemy.util._collections.KeyedTuple((u'HostA', u'Backup', 1)), sqlalchemy.util._collections.KeyedTuple((u'HostA', u'Backup', 0)), sqlalchemy.util._collections.KeyedTuple((u'HostA', u'Backup', 0)), sqlalchemy.util._collections.KeyedTuple((u'HostA', u'Backup', 1))]\n\nSerializer(modules, many=True).data\n\n[OrderedDict(), OrderedDict(), OrderedDict(), OrderedDict()]\n\nSerializer(modules, only=('name', 'enabled'), many=True).data\n\nTraceback (most recent call last):\nFile \"\", line 1, in \nSerializer(modules, only=('name', 'enabled'), many=True).data\nFile \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/marshmallow/serializer.py\", line 193, in init\nself._update_fields(obj)\nFile \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/marshmallow/serializer.py\", line 294, in _update_fields\nret = self.__filter_fields(self.only)\nFile \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/marshmallow/serializer.py\", line 359, in __filter_fields\nattribute_type = type(obj_dict[key])\nTypeError: tuple indices must be integers, not str\n\nI also created a class to specify the fields to include but that results in the same error.\n", "reactions": {"url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/28/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/marshmallow-code/marshmallow/issues/28/timeline", "performed_via_github_app": null, "state_reason": "completed"}]