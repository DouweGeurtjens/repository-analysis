[{"url": "https://api.github.com/repos/django/channels/issues/1716", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1716/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1716/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1716/events", "html_url": "https://github.com/django/channels/issues/1716", "id": 934926122, "node_id": "MDU6SXNzdWU5MzQ5MjYxMjI=", "number": 1716, "title": "python 3.8.11 broke OriginValidator", "user": {"login": "jtremesay-sereema", "id": 74904025, "node_id": "MDQ6VXNlcjc0OTA0MDI1", "avatar_url": "https://avatars.githubusercontent.com/u/74904025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtremesay-sereema", "html_url": "https://github.com/jtremesay-sereema", "followers_url": "https://api.github.com/users/jtremesay-sereema/followers", "following_url": "https://api.github.com/users/jtremesay-sereema/following{/other_user}", "gists_url": "https://api.github.com/users/jtremesay-sereema/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtremesay-sereema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtremesay-sereema/subscriptions", "organizations_url": "https://api.github.com/users/jtremesay-sereema/orgs", "repos_url": "https://api.github.com/users/jtremesay-sereema/repos", "events_url": "https://api.github.com/users/jtremesay-sereema/events{/privacy}", "received_events_url": "https://api.github.com/users/jtremesay-sereema/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2021-07-01T14:47:18Z", "updated_at": "2021-11-19T13:38:26Z", "closed_at": "2021-07-05T10:35:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since upgrade from python 3.8.10 to 3.8.11, we observe a AttributeError exception when we use OriginValidator.\r\n\r\nMinimal testcase base on the [channels documentation](https://channels.readthedocs.io/en/latest/topics/security.html#websockets): \r\n\r\n```\r\nfrom django.core.asgi import get_asgi_application\r\nimport os\r\n\r\nos.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"proj.settings\")\r\napplication = get_asgi_application()\r\n\r\nfrom channels.auth import AuthMiddlewareStack\r\nfrom channels.routing import ProtocolTypeRouter, URLRouter\r\nfrom channels.security.websocket import OriginValidator\r\nfrom django.urls import path\r\nfrom app import consumers\r\n\r\napplication = ProtocolTypeRouter(\r\n    {\r\n        \"http\": application,\r\n        \"websocket\": OriginValidator(\r\n            AuthMiddlewareStack(\r\n                URLRouter([path(\"hello\", consumers.HelloConsumer.as_asgi())])\r\n            ),\r\n            [\"localhost\"],\r\n        ),\r\n    }\r\n)\r\n```\r\n\r\nStack trace:\r\n\r\n```\r\ndaphne proj.asgi:application\r\n2021-07-01 14:42:03,153 INFO     Starting server at tcp:port=8000:interface=127.0.0.1\r\n2021-07-01 14:42:03,153 INFO     HTTP/2 support not enabled (install the http2 and tls Twisted extras)\r\n2021-07-01 14:42:03,154 INFO     Configuring endpoint tcp:port=8000:interface=127.0.0.1\r\n2021-07-01 14:42:03,155 INFO     Listening on TCP address 127.0.0.1:8000\r\n127.0.0.1:53331 - - [01/Jul/2021:14:42:07] \"GET /\" 200 1187\r\n127.0.0.1:53332 - - [01/Jul/2021:14:42:07] \"WSCONNECTING /hello\" - -\r\n2021-07-01 14:42:08,163 ERROR    Exception inside application: 'NoneType' object has no attribute 'replace'\r\nTraceback (most recent call last):\r\n  File \"/Users/jtremesay/projects/django_channels/venv/lib/python3.8/site-packages/channels/routing.py\", line 71, in __call__\r\n    return await application(scope, receive, send)\r\n  File \"/Users/jtremesay/projects/django_channels/venv/lib/python3.8/site-packages/channels/security/websocket.py\", line 35, in __call__\r\n    if self.valid_origin(parsed_origin):\r\n  File \"/Users/jtremesay/projects/django_channels/venv/lib/python3.8/site-packages/channels/security/websocket.py\", line 54, in valid_origin\r\n    return self.validate_origin(parsed_origin)\r\n  File \"/Users/jtremesay/projects/django_channels/venv/lib/python3.8/site-packages/channels/security/websocket.py\", line 73, in validate_origin\r\n    return any(\r\n  File \"/Users/jtremesay/projects/django_channels/venv/lib/python3.8/site-packages/channels/security/websocket.py\", line 74, in <genexpr>\r\n    pattern == \"*\" or self.match_allowed_origin(parsed_origin, pattern)\r\n  File \"/Users/jtremesay/projects/django_channels/venv/lib/python3.8/site-packages/channels/security/websocket.py\", line 98, in match_allowed_origin\r\n    parsed_pattern = urlparse(pattern.lower(), scheme=None)\r\n  File \"/usr/local/Cellar/python@3.8/3.8.11/Frameworks/Python.framework/Versions/3.8/lib/python3.8/urllib/parse.py\", line 376, in urlparse\r\n    splitresult = urlsplit(url, scheme, allow_fragments)\r\n  File \"/usr/local/Cellar/python@3.8/3.8.11/Frameworks/Python.framework/Versions/3.8/lib/python3.8/urllib/parse.py\", line 433, in urlsplit\r\n    scheme = _remove_unsafe_bytes_from_url(scheme)\r\n  File \"/usr/local/Cellar/python@3.8/3.8.11/Frameworks/Python.framework/Versions/3.8/lib/python3.8/urllib/parse.py\", line 422, in _remove_unsafe_bytes_from_url\r\n    url = url.replace(b, \"\")\r\nAttributeError: 'NoneType' object has no attribute 'replace'\r\n127.0.0.1:53332 - - [01/Jul/2021:14:42:08] \"WSDISCONNECT /hello\" - -\r\n```\r\n\r\n```\r\n$ pip freeze\r\nasgiref==3.4.0\r\nattrs==21.2.0\r\nautobahn==21.3.1\r\nAutomat==20.2.0\r\ncffi==1.14.5\r\nchannels==3.0.3\r\nconstantly==15.1.0\r\ncryptography==3.4.7\r\ndaphne==3.0.2\r\nDjango==3.2.5\r\nhyperlink==21.0.0\r\nidna==3.2\r\nincremental==21.3.0\r\npyasn1==0.4.8\r\npyasn1-modules==0.2.8\r\npycparser==2.20\r\npyOpenSSL==20.0.1\r\npytz==2021.1\r\nservice-identity==21.1.0\r\nsix==1.16.0\r\nsqlparse==0.4.1\r\nTwisted==21.2.0\r\ntxaio==21.2.1\r\nzope.interface==5.4.0\r\n```\r\n\r\nFrom what I see in the python 3.8.11\u202fchangelog, the exception is caused by [this fix](https://bugs.python.org/issue43882) and the following versions of python should be affected: 3.9.6, 3.8.11, 3.7.11, 3.6.14 and probably >=3.10", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1716/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1588", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1588/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1588/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1588/events", "html_url": "https://github.com/django/channels/issues/1588", "id": 757676954, "node_id": "MDU6SXNzdWU3NTc2NzY5NTQ=", "number": 1588, "title": "ERROR: object.__init__() takes no parameters", "user": {"login": "lubomirhadziev", "id": 3432337, "node_id": "MDQ6VXNlcjM0MzIzMzc=", "avatar_url": "https://avatars.githubusercontent.com/u/3432337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lubomirhadziev", "html_url": "https://github.com/lubomirhadziev", "followers_url": "https://api.github.com/users/lubomirhadziev/followers", "following_url": "https://api.github.com/users/lubomirhadziev/following{/other_user}", "gists_url": "https://api.github.com/users/lubomirhadziev/gists{/gist_id}", "starred_url": "https://api.github.com/users/lubomirhadziev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lubomirhadziev/subscriptions", "organizations_url": "https://api.github.com/users/lubomirhadziev/orgs", "repos_url": "https://api.github.com/users/lubomirhadziev/repos", "events_url": "https://api.github.com/users/lubomirhadziev/events{/privacy}", "received_events_url": "https://api.github.com/users/lubomirhadziev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "carltongibson", "id": 64686, "node_id": "MDQ6VXNlcjY0Njg2", "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carltongibson", "html_url": "https://github.com/carltongibson", "followers_url": "https://api.github.com/users/carltongibson/followers", "following_url": "https://api.github.com/users/carltongibson/following{/other_user}", "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}", "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions", "organizations_url": "https://api.github.com/users/carltongibson/orgs", "repos_url": "https://api.github.com/users/carltongibson/repos", "events_url": "https://api.github.com/users/carltongibson/events{/privacy}", "received_events_url": "https://api.github.com/users/carltongibson/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "carltongibson", "id": 64686, "node_id": "MDQ6VXNlcjY0Njg2", "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carltongibson", "html_url": "https://github.com/carltongibson", "followers_url": "https://api.github.com/users/carltongibson/followers", "following_url": "https://api.github.com/users/carltongibson/following{/other_user}", "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}", "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions", "organizations_url": "https://api.github.com/users/carltongibson/orgs", "repos_url": "https://api.github.com/users/carltongibson/repos", "events_url": "https://api.github.com/users/carltongibson/events{/privacy}", "received_events_url": "https://api.github.com/users/carltongibson/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2020-12-05T13:04:32Z", "updated_at": "2021-07-10T14:35:39Z", "closed_at": "2021-07-10T14:35:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello guys when I try to open connection from my frontend to my socket this error I get can you help me?\r\n\r\n```\r\n2020-12-05 15:00:37,612 ERROR    Exception inside application: object.__init__() takes no parameters\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/channels/routing.py\", line 71, in __call__\r\n    return await application(scope, receive, send)\r\n  File \"/usr/local/lib/python3.6/site-packages/channels/sessions.py\", line 47, in __call__\r\n    return await self.inner(dict(scope, cookies=cookies), receive, send)\r\n  File \"/usr/local/lib/python3.6/site-packages/channels/sessions.py\", line 254, in __call__\r\n    return await self.inner(wrapper.scope, receive, wrapper.send)\r\n  File \"/usr/local/lib/python3.6/site-packages/channels/auth.py\", line 181, in __call__\r\n    return await super().__call__(scope, receive, send)\r\n  File \"/usr/local/lib/python3.6/site-packages/channels/middleware.py\", line 26, in __call__\r\n    return await self.inner(scope, receive, send)\r\n  File \"/usr/local/lib/python3.6/site-packages/channels/routing.py\", line 160, in __call__\r\n    send,\r\n  File \"/usr/local/lib/python3.6/site-packages/asgiref/compatibility.py\", line 33, in new_application\r\n    instance = application(scope)\r\n  File \"/usr/local/lib/python3.6/site-packages/channels/generic/websocket.py\", line 159, in __init__\r\n    super().__init__(*args, **kwargs)\r\nTypeError: object.__init__() takes no parameters\r\n```", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1588/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1551", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1551/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1551/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1551/events", "html_url": "https://github.com/django/channels/issues/1551", "id": 733550014, "node_id": "MDU6SXNzdWU3MzM1NTAwMTQ=", "number": 1551, "title": "channels 3.0.0: Only last connected socket receives all socket messages", "user": {"login": "accordioff", "id": 57903134, "node_id": "MDQ6VXNlcjU3OTAzMTM0", "avatar_url": "https://avatars.githubusercontent.com/u/57903134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/accordioff", "html_url": "https://github.com/accordioff", "followers_url": "https://api.github.com/users/accordioff/followers", "following_url": "https://api.github.com/users/accordioff/following{/other_user}", "gists_url": "https://api.github.com/users/accordioff/gists{/gist_id}", "starred_url": "https://api.github.com/users/accordioff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/accordioff/subscriptions", "organizations_url": "https://api.github.com/users/accordioff/orgs", "repos_url": "https://api.github.com/users/accordioff/repos", "events_url": "https://api.github.com/users/accordioff/events{/privacy}", "received_events_url": "https://api.github.com/users/accordioff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2020-10-30T22:20:55Z", "updated_at": "2021-06-03T16:58:25Z", "closed_at": "2020-11-04T10:11:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thank you for the great new release. I'm new to channels and therefore I built the tutorial chat app in v2.4.0. This worked perfectly fine.\r\nNow I switched to v.3.0.0, adapted the routing.py as well as asgi.py and have now a strange behaviour:\r\n1. Open one browser window. Sent messages are displayed just fine\r\n2. Add browser window. Messages displayed in the last window and there twice. Regardless which side sent them.\r\n3. Add browser window. Messages appear again only in the last window and displayed three times.\r\n\r\nAs CHANNEL_LAYERS I tested both 'channels_redis.core.RedisChannelLayer' as well as 'channels.layers.InMemoryChannelLayer' to sort this out.\r\n\r\nI use the testserver with 'python3 manage.py runserver'.\r\nThere is no error message I could give as starting point.\r\n\r\nRolling back to v2.4.0 and removing '.as_asgi()' in routing.py makes it work again...\r\nwebsocket_urlpatterns = [\r\n    re_path(r'ws/chat/(?P<room_name>\\w+)/$', consumers.ChatConsumer.as_asgi()),\r\n]\r\n\r\nEnvironment: python 3.8.5\r\naioredis==1.3.1\r\nasgiref==3.3.0\r\nasync-timeout==3.0.1\r\nattrs==20.2.0\r\nautobahn==20.7.1\r\nAutomat==20.2.0\r\ncffi==1.14.3\r\nchannels==3.0.0\r\nchannels-redis==3.2.0\r\nconstantly==15.1.0\r\ncryptography==3.2.1\r\ndaphne==3.0.0\r\nDjango==3.1.2\r\nhiredis==1.1.0\r\nhyperlink==20.0.1\r\nidna==2.10\r\nincremental==17.5.0\r\nmsgpack==1.0.0\r\npyasn1==0.4.8\r\npyasn1-modules==0.2.8\r\npycparser==2.20\r\nPyHamcrest==2.0.2\r\npyOpenSSL==19.1.0\r\npytz==2020.1\r\nservice-identity==18.1.0\r\nsix==1.15.0\r\nsqlparse==0.4.1\r\nTwisted==20.3.0\r\ntxaio==20.4.1\r\nzope.interface==5.1.2\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1551/reactions", "total_count": 10, "+1": 9, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1551/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1450", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1450/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1450/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1450/events", "html_url": "https://github.com/django/channels/issues/1450", "id": 616439975, "node_id": "MDU6SXNzdWU2MTY0Mzk5NzU=", "number": 1450, "title": "CookieMiddleware should decode() using `latin-1`. ", "user": {"login": "vaisaghvt", "id": 1639105, "node_id": "MDQ6VXNlcjE2MzkxMDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1639105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaisaghvt", "html_url": "https://github.com/vaisaghvt", "followers_url": "https://api.github.com/users/vaisaghvt/followers", "following_url": "https://api.github.com/users/vaisaghvt/following{/other_user}", "gists_url": "https://api.github.com/users/vaisaghvt/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaisaghvt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaisaghvt/subscriptions", "organizations_url": "https://api.github.com/users/vaisaghvt/orgs", "repos_url": "https://api.github.com/users/vaisaghvt/repos", "events_url": "https://api.github.com/users/vaisaghvt/events{/privacy}", "received_events_url": "https://api.github.com/users/vaisaghvt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-05-12T07:50:25Z", "updated_at": "2020-10-28T20:30:55Z", "closed_at": "2020-10-28T20:30:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have been periodically getting this error stack trace in our logs:\r\n\r\n```\r\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 745: ordinal not in range(128)\r\n  File \"/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py\", line 151, in maybeDeferred\r\n  File \"/usr/local/lib/python3.7/site-packages/daphne/server.py\", line 201, in create_application\r\n  File \"/usr/local/lib/python3.7/site-packages/channels/routing.py\", line 54, in __call__\r\n  File \"/usr/local/lib/python3.7/site-packages/channels/security/websocket.py\", line 37, in __call__\r\n  File \"/usr/local/lib/python3.7/site-packages/channels/sessions.py\", line 41, in __call__\r\n```\r\n\r\nWhen investigating, I found out that the issue is at this line: https://github.com/django/channels/blob/dd304566775d6f1ce3d40a4d6e2a100f33c54889/channels/sessions.py#L41\r\n when there is a cookie that has a non-ascii value. \r\n\r\nIs there a reason that it is assumed that the cookie value will not have non-ascii values? If so, what would be the work around?\r\n\r\nIf not, is there an issue with changing this?\r\n\r\nFor example, would it be safe to do this:\r\n`cookies = parse_cookie(value.decode(\"ascii\", errors='ignore'))`\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1450/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1319", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1319/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1319/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1319/events", "html_url": "https://github.com/django/channels/issues/1319", "id": 469038992, "node_id": "MDU6SXNzdWU0NjkwMzg5OTI=", "number": 1319, "title": "Recent version of channels doesn't support ASGI3", "user": {"login": "Avinash-Raj", "id": 3929632, "node_id": "MDQ6VXNlcjM5Mjk2MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/3929632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Avinash-Raj", "html_url": "https://github.com/Avinash-Raj", "followers_url": "https://api.github.com/users/Avinash-Raj/followers", "following_url": "https://api.github.com/users/Avinash-Raj/following{/other_user}", "gists_url": "https://api.github.com/users/Avinash-Raj/gists{/gist_id}", "starred_url": "https://api.github.com/users/Avinash-Raj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Avinash-Raj/subscriptions", "organizations_url": "https://api.github.com/users/Avinash-Raj/orgs", "repos_url": "https://api.github.com/users/Avinash-Raj/repos", "events_url": "https://api.github.com/users/Avinash-Raj/events{/privacy}", "received_events_url": "https://api.github.com/users/Avinash-Raj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-07-17T07:46:23Z", "updated_at": "2022-07-25T15:02:45Z", "closed_at": "2022-07-25T15:02:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since the recent version of daphne (`2.3.0`) added support for ASGI3, I no longer can't use channels (`2.2.0`).\r\n\r\nhttps://github.com/django/daphne/blob/master/daphne/cli.py#L30\r\n\r\nHere it would likely to call channel's router ( ProtocolTypeRouter) with additional two parameters (`send`, `receive`) which by now (https://github.com/django/channels/blob/2486738765064525cd8ee39294c44600140476ac/channels/routing.py#L56) is not supported.\r\n\r\nCan we have support for ASGI3?\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1319/reactions", "total_count": 7, "+1": 7, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1319/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1316", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1316/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1316/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1316/events", "html_url": "https://github.com/django/channels/issues/1316", "id": 462775911, "node_id": "MDU6SXNzdWU0NjI3NzU5MTE=", "number": 1316, "title": "Bundled middleware doesn't support ASGI 3 apps", "user": {"login": "rakyi", "id": 6129025, "node_id": "MDQ6VXNlcjYxMjkwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6129025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rakyi", "html_url": "https://github.com/rakyi", "followers_url": "https://api.github.com/users/rakyi/followers", "following_url": "https://api.github.com/users/rakyi/following{/other_user}", "gists_url": "https://api.github.com/users/rakyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/rakyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rakyi/subscriptions", "organizations_url": "https://api.github.com/users/rakyi/orgs", "repos_url": "https://api.github.com/users/rakyi/repos", "events_url": "https://api.github.com/users/rakyi/events{/privacy}", "received_events_url": "https://api.github.com/users/rakyi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-01T15:23:31Z", "updated_at": "2022-07-25T15:03:07Z", "closed_at": "2022-07-25T15:03:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "On ASGI 2 I was able to combine middleware provided by starlette and channels and their base apps (such as consumers and e.g. starlette's `GraphQLApp`). This no longer works since starlette moved to ASGI 3. I'd expect this to continue to work, since channels now also depends on ASGI 3. Minimal example of failing ASGI 3 app:\r\n\r\n```python\r\nfrom channels.sessions import CookieMiddleware\r\nfrom starlette.responses import PlainTextResponse\r\n\r\nasync def hello(scope, receive, send):\r\n    assert scope['type'] == 'http'\r\n    response = PlainTextResponse('Hello, world!')\r\n    await response(scope, receive, send)\r\n\r\napp = CookieMiddleware(hello)\r\n\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1316/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1316/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1226", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1226/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1226/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1226/events", "html_url": "https://github.com/django/channels/issues/1226", "id": 402079296, "node_id": "MDU6SXNzdWU0MDIwNzkyOTY=", "number": 1226, "title": "Replace cookie_date in sessions.py", "user": {"login": "ShadowLNC", "id": 6551471, "node_id": "MDQ6VXNlcjY1NTE0NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/6551471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShadowLNC", "html_url": "https://github.com/ShadowLNC", "followers_url": "https://api.github.com/users/ShadowLNC/followers", "following_url": "https://api.github.com/users/ShadowLNC/following{/other_user}", "gists_url": "https://api.github.com/users/ShadowLNC/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShadowLNC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShadowLNC/subscriptions", "organizations_url": "https://api.github.com/users/ShadowLNC/orgs", "repos_url": "https://api.github.com/users/ShadowLNC/repos", "events_url": "https://api.github.com/users/ShadowLNC/events{/privacy}", "received_events_url": "https://api.github.com/users/ShadowLNC/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-23T05:37:44Z", "updated_at": "2019-02-03T20:19:41Z", "closed_at": "2019-02-03T20:19:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "In `channels/sessions.py`, line 13:\r\n`from django.utils.http import cookie_date`\r\n\r\nThe [deprecation notice is in Django 2.1 release notes](https://docs.djangoproject.com/en/2.1/releases/2.1/#id2) (the recommended replacement is [django.utils.http.http_date](https://docs.djangoproject.com/en/2.1/ref/utils/#django.utils.http.http_date)). Since it was deprecated in 2.1, now that stable/2.2.x has been forked, the Django master branch has had `cookie_date` removed, and users with the development version are no longer able to use Channels.\r\n\r\nSee also: [Django commit 958a7b4c: Refs #28965 -- Removed utils.http.cookie_date() per deprecation timeline.](https://github.com/django/django/commit/958a7b4ca69434d0145fd569cf007e21841bb36c)\r\n\r\nThe following information is provided as it is requested in the template, but I don't see it being useful:\r\n\r\nInvocation: `python manage.py`\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 16, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"d:\\professional\\firstinspires\\fll-scoring\\fllfms\\venv\\src\\django\\django\\core\\management\\__init__.py\", line 381, in execute_from_command_line\r\n    utility.execute()\r\n  File \"d:\\professional\\firstinspires\\fll-scoring\\fllfms\\venv\\src\\django\\django\\core\\management\\__init__.py\", line 357, in execute\r\n    django.setup()\r\n  File \"d:\\professional\\firstinspires\\fll-scoring\\fllfms\\venv\\src\\django\\django\\__init__.py\", line 24, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"d:\\professional\\firstinspires\\fll-scoring\\fllfms\\venv\\src\\django\\django\\apps\\registry.py\", line 122, in populate\r\n    app_config.ready()\r\n  File \"D:\\Professional\\firstinspires\\fll-scoring\\fllfms\\fllfms\\apps.py\", line 9, in ready\r\n    from . import signals  # Bind signals.\r\n  File \"D:\\Professional\\firstinspires\\fll-scoring\\fllfms\\fllfms\\signals.py\", line 6, in <module>\r\n    from .consumers import TimerConsumer\r\n  File \"D:\\Professional\\firstinspires\\fll-scoring\\fllfms\\fllfms\\consumers.py\", line 7, in <module>\r\n    from channels.auth import get_user\r\n  File \"D:\\Professional\\firstinspires\\fll-scoring\\fllfms\\venv\\lib\\site-packages\\channels\\auth.py\", line 19, in <module>\r\n    from channels.sessions import CookieMiddleware, SessionMiddleware\r\n  File \"D:\\Professional\\firstinspires\\fll-scoring\\fllfms\\venv\\lib\\site-packages\\channels\\sessions.py\", line 13, in <module>\r\n    from django.utils.http import cookie_date\r\nImportError: cannot import name 'cookie_date'\r\n```\r\n\r\nSystem:\r\n\r\nPython 3.6.6 x64, Windows 10 (x64) Education, version 1809 (build 17763.194).\r\n\r\n```\r\n$ pip freeze\r\nasgiref==2.3.2\r\nasync-timeout==3.0.1\r\nattrs==18.2.0\r\nautobahn==18.12.1\r\nAutomat==0.7.0\r\nchannels==2.1.6\r\nconstantly==15.1.0\r\ncx-Freeze==5.1.1\r\ndaphne==2.2.4\r\n-e git+https://github.com/django/django@bff748df3e1e1c0077e02df2b77bda2b827ad129#egg=Django\r\ndjango-reversion==3.0.2\r\nhyperlink==18.0.0\r\nidna==2.8\r\nincremental==17.5.0\r\nNuitka==0.6.1\r\nPyHamcrest==1.9.0\r\npytz==2018.5\r\npywin32==224\r\nsix==1.12.0\r\nsqlparse==0.2.4\r\nTwisted==18.9.0\r\ntxaio==18.8.1\r\ntzlocal==1.5.1\r\nzope.interface==4.6.0\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1226/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1226/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1204", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1204/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1204/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1204/events", "html_url": "https://github.com/django/channels/issues/1204", "id": 394056964, "node_id": "MDU6SXNzdWUzOTQwNTY5NjQ=", "number": 1204, "title": "Django Debug Toolbar prevents logging/tracebacks appearing in runserver", "user": {"login": "Landver", "id": 15925657, "node_id": "MDQ6VXNlcjE1OTI1NjU3", "avatar_url": "https://avatars.githubusercontent.com/u/15925657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Landver", "html_url": "https://github.com/Landver", "followers_url": "https://api.github.com/users/Landver/followers", "following_url": "https://api.github.com/users/Landver/following{/other_user}", "gists_url": "https://api.github.com/users/Landver/gists{/gist_id}", "starred_url": "https://api.github.com/users/Landver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Landver/subscriptions", "organizations_url": "https://api.github.com/users/Landver/orgs", "repos_url": "https://api.github.com/users/Landver/repos", "events_url": "https://api.github.com/users/Landver/events{/privacy}", "received_events_url": "https://api.github.com/users/Landver/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407158344, "node_id": "MDU6TGFiZWw0MDcxNTgzNDQ=", "url": "https://api.github.com/repos/django/channels/labels/maybe", "name": "maybe", "color": "fbca04", "default": false, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-12-26T00:01:37Z", "updated_at": "2020-07-02T21:50:45Z", "closed_at": "2019-01-03T18:32:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Let's say I start Django channels server with command:\r\n`python3 manage.py runserver 0.0.0.0:8001\r\n`\r\nThere is no any customisation in settings.py regarding Logging except\r\n`DEBUG = True`\r\n\r\nAnd all what I can see in logging are 4 types of messages:\r\n`WebSocket HANDSHAKING`, `WebSocket CONNECT`, `WebSocket DISCONNECT` and `WebSocket REJECT`\r\n\r\nEven if I set `assert False` right before self.connect(), the only logs I get:\r\n```\r\nWebSocket HANDSHAKING /core/ [192.168.122.4:52494]\r\nWebSocket DISCONNECT /core/ [192.168.122.4:52494]\r\n```\r\nYes, just 2 lines. Nothing about assertion error or anything else.\r\n\r\nThis is how it suppose to be?\r\nHow can I see the same logging that shows errors as it was on WSGI?\r\n\r\nI'm using latest channels package, taken from github. There are some \"fixes\" in runserver.py file, but still the same. No normal logging, just messages about websocket sessions state.", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1204/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1181", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1181/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1181/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1181/events", "html_url": "https://github.com/django/channels/issues/1181", "id": 379064718, "node_id": "MDU6SXNzdWUzNzkwNjQ3MTg=", "number": 1181, "title": "Memory leak?", "user": {"login": "devxplorer", "id": 4733755, "node_id": "MDQ6VXNlcjQ3MzM3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4733755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devxplorer", "html_url": "https://github.com/devxplorer", "followers_url": "https://api.github.com/users/devxplorer/followers", "following_url": "https://api.github.com/users/devxplorer/following{/other_user}", "gists_url": "https://api.github.com/users/devxplorer/gists{/gist_id}", "starred_url": "https://api.github.com/users/devxplorer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devxplorer/subscriptions", "organizations_url": "https://api.github.com/users/devxplorer/orgs", "repos_url": "https://api.github.com/users/devxplorer/repos", "events_url": "https://api.github.com/users/devxplorer/events{/privacy}", "received_events_url": "https://api.github.com/users/devxplorer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159992, "node_id": "MDU6TGFiZWw0MDcxNTk5OTI=", "url": "https://api.github.com/repos/django/channels/labels/blocked/needs-investigation", "name": "blocked/needs-investigation", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2018-11-09T08:21:57Z", "updated_at": "2020-07-24T17:05:13Z", "closed_at": "2018-11-29T17:31:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! On the production service we faced with the problem of the constant infinite growth of memory consumption.\r\n\r\nTo reproduce the problem simple project was created (https://github.com/devxplorer/ws_test).\r\n\r\nWe test it with script `scripts/ws_test.py`, which makes opening a connection, sending a message and closing the connection.\r\nFor diagnostics we used `memory_profiler` package. An examples of the resulting graphs when running a test script can be found in the `plots/` folder.\r\n\r\nLocal environment (where the tests was made):\r\n- Linux Mint 18.3 Sylvia\r\n- Python 3.5.2 [GCC 5.4.0 20160609] on linux\r\n- versions of the packages can be found in the `requirements.txt`\r\n\r\nThe conclusions that we have been able to do:\r\n- changing the asgi server does not change the result, memory consumption continues to grow (daphne, uvicorn, gunicorn + uvicorn were tested);\r\n- periodic run of gc.collect() does not change the picture.\r\n\r\nPerhaps when creating/closing connections, there is some kind of memory leak in `channels`?. Or there is some mistake in our code that we are missing. \r\nMaybe someone faced with a similar problem and it turned out to be solved? Any help would be appreciated.\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1181/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1181/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1170", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1170/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1170/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1170/events", "html_url": "https://github.com/django/channels/issues/1170", "id": 370762352, "node_id": "MDU6SXNzdWUzNzA3NjIzNTI=", "number": 1170, "title": "Add a size limit for request bodies", "user": {"login": "dav20011", "id": 7550520, "node_id": "MDQ6VXNlcjc1NTA1MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/7550520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dav20011", "html_url": "https://github.com/dav20011", "followers_url": "https://api.github.com/users/dav20011/followers", "following_url": "https://api.github.com/users/dav20011/following{/other_user}", "gists_url": "https://api.github.com/users/dav20011/gists{/gist_id}", "starred_url": "https://api.github.com/users/dav20011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dav20011/subscriptions", "organizations_url": "https://api.github.com/users/dav20011/orgs", "repos_url": "https://api.github.com/users/dav20011/repos", "events_url": "https://api.github.com/users/dav20011/events{/privacy}", "received_events_url": "https://api.github.com/users/dav20011/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-16T19:24:15Z", "updated_at": "2019-02-07T14:39:29Z", "closed_at": "2019-01-25T22:18:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Upon reading the request body Django's request objects check the content length and compare it to a size limit set in the config:\r\n```\r\n# Limit the maximum request data size that will be handled in-memory.\r\nif (settings.DATA_UPLOAD_MAX_MEMORY_SIZE is not None and\r\n        int(self.META.get('CONTENT_LENGTH') or 0) > settings.DATA_UPLOAD_MAX_MEMORY_SIZE):\r\n    raise RequestDataTooBig('Request body exceeded settings.DATA_UPLOAD_MAX_MEMORY_SIZE.')\r\n```\r\nAsgiRequest objects do not perform this check, which is very dangerous. I was able to spam the server with only a few large request, which made the server incapable of handling any other request.", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1170/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1165", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1165/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1165/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1165/events", "html_url": "https://github.com/django/channels/issues/1165", "id": 366854510, "node_id": "MDU6SXNzdWUzNjY4NTQ1MTA=", "number": 1165, "title": "AsyncHttpConsumer doesn't have normal consumer attributes", "user": {"login": "strexicious", "id": 13009365, "node_id": "MDQ6VXNlcjEzMDA5MzY1", "avatar_url": "https://avatars.githubusercontent.com/u/13009365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/strexicious", "html_url": "https://github.com/strexicious", "followers_url": "https://api.github.com/users/strexicious/followers", "following_url": "https://api.github.com/users/strexicious/following{/other_user}", "gists_url": "https://api.github.com/users/strexicious/gists{/gist_id}", "starred_url": "https://api.github.com/users/strexicious/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/strexicious/subscriptions", "organizations_url": "https://api.github.com/users/strexicious/orgs", "repos_url": "https://api.github.com/users/strexicious/repos", "events_url": "https://api.github.com/users/strexicious/events{/privacy}", "received_events_url": "https://api.github.com/users/strexicious/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-10-04T15:46:24Z", "updated_at": "2018-11-27T03:35:38Z", "closed_at": "2018-10-26T21:23:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was trying to access `self.channel_name` and `self.channel_layer` within a consumer inherited from AsyncHttpConsumer and it raised exceptions saying that my consumer had no such attributes.\r\n\r\nHere is the toy code to reproduce this bug:\r\n\r\n**routing.py**\r\n```python\r\napplication = ProtocolTypeRouter({\r\n    \"http\": URLRouter([\r\n        url(r\"^test/me\", MeConsumer),\r\n        url(r\"\", AsgiHandler)\r\n    ])\r\n})\r\n```\r\n**consumers.py**\r\n```python\r\nclass MeConsumer(AsyncHttpConsumer):\r\n\r\n    async def handle(self, body):\r\n        my_channel_name = self.channel_name\r\n        self.channel_layer.group_add(\"my_group\", self.channel_name)\r\n        print(\"Here is the channel name:\", my_channel_name)\r\n        await asyncio.sleep(10)\r\n        await self.send_response(200, b\"Your response bytes\", headers=[\r\n            (\"Content-Type\", \"text/plain\"),\r\n        ])\r\n```\r\n\r\n*I couldn't help but peek into the source code, and I noticed that `AsyncHttpConsumer` overrides `__call__` of it's base class. I am not an expert but :eyes: it may be useful to know.*", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1165/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1135", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1135/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1135/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1135/events", "html_url": "https://github.com/django/channels/issues/1135", "id": 354893487, "node_id": "MDU6SXNzdWUzNTQ4OTM0ODc=", "number": 1135, "title": "Cryptic errors accessing self.scope['user'] in Consumers \"too early\"", "user": {"login": "wmorrell", "id": 15110872, "node_id": "MDQ6VXNlcjE1MTEwODcy", "avatar_url": "https://avatars.githubusercontent.com/u/15110872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wmorrell", "html_url": "https://github.com/wmorrell", "followers_url": "https://api.github.com/users/wmorrell/followers", "following_url": "https://api.github.com/users/wmorrell/following{/other_user}", "gists_url": "https://api.github.com/users/wmorrell/gists{/gist_id}", "starred_url": "https://api.github.com/users/wmorrell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wmorrell/subscriptions", "organizations_url": "https://api.github.com/users/wmorrell/orgs", "repos_url": "https://api.github.com/users/wmorrell/repos", "events_url": "https://api.github.com/users/wmorrell/events{/privacy}", "received_events_url": "https://api.github.com/users/wmorrell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-28T20:35:29Z", "updated_at": "2018-10-02T09:03:41Z", "closed_at": "2018-10-02T09:03:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am upgrading a project from Channels 2.0.2 to 2.1.3, and encountered errors using my websocket consumers that took a while to track down and diagnose. Log output would look something like this:\r\n\r\n```\r\n2018-08-28 19:49:48,877 Thread 139644781235080 daphne.ws_protocol ERROR    [Failure instance: Traceback: <class 'NotImplementedError'>: subclasses of LazyObject must provide a _setup() method\r\n/usr/local/lib/python3.6/site-packages/autobahn/websocket/protocol.py:2794:processHandshake\r\n/usr/local/lib/python3.6/site-packages/txaio/tx.py:429:as_future\r\n/usr/local/lib/python3.6/site-packages/twisted/internet/defer.py:151:maybeDeferred\r\n/usr/local/lib/python3.6/site-packages/daphne/ws_protocol.py:77:onConnect\r\n--- <exception caught here> ---\r\n/usr/local/lib/python3.6/site-packages/twisted/internet/defer.py:151:maybeDeferred\r\n/usr/local/lib/python3.6/site-packages/daphne/server.py:186:create_application\r\n/usr/local/lib/python3.6/site-packages/channels/routing.py:56:__call__\r\n/usr/local/lib/python3.6/site-packages/channels/sessions.py:43:__call__\r\n/usr/local/lib/python3.6/site-packages/channels/sessions.py:141:__call__\r\n/usr/local/lib/python3.6/site-packages/channels/sessions.py:163:__init__\r\n/usr/local/lib/python3.6/site-packages/channels/middleware.py:31:__call__\r\n/usr/local/lib/python3.6/site-packages/channels/routing.py:139:__call__\r\n/usr/local/lib/python3.6/site-packages/channels/generic/websocket.py:19:__init__\r\n./edd/notify/consumers.py:49:groups\r\n./edd/notify/backend.py:85:group_names\r\n/usr/local/lib/python3.6/site-packages/django/utils/functional.py:215:inner\r\n/usr/local/lib/python3.6/site-packages/django/utils/functional.py:259:_setup\r\n]\r\n172.18.0.2:60700 - - [28/Aug/2018:19:49:49] \"WSDISCONNECT /ws/notify/\" - -\r\n```\r\n\r\nI found the problem was in accessing any attributes of `self.scope['user']` before the Consumer calls `connect()`. Initially I was seeing this in overriding `__init__` in my Consumer subclass, and debug logging usernames. Then I saw the above traceback, because a property method for `group_names` was using attributes of `self.scope['user']` to generate the iterable of group names, and the base class `__init__` calls this property.\r\n\r\nI am still trying to wrap my head around the code, but I think it should be possible to have a subclass of `LazyObject` used that defines `_setup` to give a more useful error message for this specific case (e.g. \"accessing scope user before it is ready\"). I am unclear on what the final order of operations is, I have things working again by setting `self.groups` at the top of my consumer subclass `connect()`, but the base class `websocket_connect()` calls the `channel_layer.group_add` before calling `connect()`. It looks like it should not be working, but async has a way of twisting brains. Maybe it is also possible to explicitly force blocking so that the attributes of `self.scope['user']` are readable during consumer `__init__` again?", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1135/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1121", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1121/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1121/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1121/events", "html_url": "https://github.com/django/channels/issues/1121", "id": 349753394, "node_id": "MDU6SXNzdWUzNDk3NTMzOTQ=", "number": 1121, "title": "Performance drop when using Channels 2 with WhitenoiseMiddleware", "user": {"login": "OndrejSkalicka", "id": 3762385, "node_id": "MDQ6VXNlcjM3NjIzODU=", "avatar_url": "https://avatars.githubusercontent.com/u/3762385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OndrejSkalicka", "html_url": "https://github.com/OndrejSkalicka", "followers_url": "https://api.github.com/users/OndrejSkalicka/followers", "following_url": "https://api.github.com/users/OndrejSkalicka/following{/other_user}", "gists_url": "https://api.github.com/users/OndrejSkalicka/gists{/gist_id}", "starred_url": "https://api.github.com/users/OndrejSkalicka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OndrejSkalicka/subscriptions", "organizations_url": "https://api.github.com/users/OndrejSkalicka/orgs", "repos_url": "https://api.github.com/users/OndrejSkalicka/repos", "events_url": "https://api.github.com/users/OndrejSkalicka/events{/privacy}", "received_events_url": "https://api.github.com/users/OndrejSkalicka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-08-11T18:14:02Z", "updated_at": "2018-09-04T12:26:04Z", "closed_at": "2018-09-04T12:26:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've just upgraded my Django project's Channels from 1.x to 2.x (there seems to be an issue with 1.x that it creates new session for every connection), replacing my wsgi application with an asgi one + all other changes required by docs. \r\n\r\nAfter that, my response time for pure-html pages dropped from ~20ms to about 400ms. (I've tested on a real simple one, next to no db involved, no javascript evaluated)\r\n\r\nI've fiddled with settings and found out that when I disable `whitenoise.middleware.WhiteNoiseMiddleware` , response times are back to normal. (both `whitenoise==4.0` and `whitenoise==3.3.1`)\r\n\r\nIn Channels 1.x, inclusion / exclusion did not seem to make an impact (not measurable anyways). \r\n\r\nI run the project using simple `python manage.py runserver`, but using `daphne` produces same results.\r\n\r\nWhen I tried to add some logging to the middleware itself, it seems like the `__call__` itself is not performing bad (around 10ms), but the performance drop is roughly dependent on number of static files.\r\n\r\nI'm still in process of stripping my project to some bare version that I'm able to send (it's rather big now).", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1121/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1115", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1115/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1115/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1115/events", "html_url": "https://github.com/django/channels/issues/1115", "id": 347430035, "node_id": "MDU6SXNzdWUzNDc0MzAwMzU=", "number": 1115, "title": "AuthMiddleware not called during tests", "user": {"login": "Neraste", "id": 1684705, "node_id": "MDQ6VXNlcjE2ODQ3MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1684705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neraste", "html_url": "https://github.com/Neraste", "followers_url": "https://api.github.com/users/Neraste/followers", "following_url": "https://api.github.com/users/Neraste/following{/other_user}", "gists_url": "https://api.github.com/users/Neraste/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neraste/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neraste/subscriptions", "organizations_url": "https://api.github.com/users/Neraste/orgs", "repos_url": "https://api.github.com/users/Neraste/repos", "events_url": "https://api.github.com/users/Neraste/events{/privacy}", "received_events_url": "https://api.github.com/users/Neraste/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-08-03T14:58:21Z", "updated_at": "2018-08-14T07:00:43Z", "closed_at": "2018-08-14T07:00:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello channels devs team,\r\n\r\nI am writing the tests for the websocket consumers of my application and I cannot successfully test my authentication process. I use a custom  AuthMiddleware to use tokens instead of cookies ([this one](https://gist.github.com/rluts/22e05ed8f53f97bdd02eafdf38f3d60a)) and it seems that the middleware is not called at all during tests, whereas it is actually called with real-world testing (*i.e.* when running the app).\r\n\r\nI cannot say if my problem is related to #903, as I process the login by another way with Django REST Framework. The authentication only works if the user is already connected.\r\n\r\nHere is the test:\r\n```python\r\nimport pytest\r\nfrom channels.testing import WebsocketCommunicator\r\nfrom rest_framework.authtoken.models import Token\r\nfrom my_app.routing import application\r\n\r\n@pytest.mark.asyncio                                                           \r\n@pytest.mark.django_db(transaction=True)                                       \r\nasync def test_authentication():\r\n    # create a token                                                           \r\n    user = get_an_user_somehow()\r\n    token = Token.objects.create(user=user)                         \r\n    headers = [(b'authorization', \"Token {}\".format(token.key).encode())]      \r\n                                                                               \r\n    # create communicator and connect\r\n    communicator = WebsocketCommunicator(application, \"/ws/my/path/\",  \r\n                                         headers=headers)                      \r\n    connected, _ = await communicator.connect()                                \r\n                                                                               \r\n    assert connected  # fails here\r\n    await communicator.disconnect()                                            \r\n```\r\n\r\nAccording to the AuthMiddleware code, a user will always be added to the scope, even if the authentication fails (an anonymous user is added in this case). But there is no user in my scope after awaiting connect, this is why I believe that the AuthMIddleware is not called by the WebsocketCommunicatior. This does not seem to be a problem from the custom AuthMiddleware side.\r\n\r\nWhat do you think?\r\n\r\n* **OS and runtime environment** Linux kernel 4.17.11-1-default, Python 3.6.5;\r\n* **Versions** Channels 2.1.2, Daphne 2.2.0, Django 1.11.13, Django REST Framework 3.6.4, Twisted none, ASGI backend in memory;\r\n* **Running** in dev mode with runserver or with pytest.", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1115/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1101", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1101/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1101/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1101/events", "html_url": "https://github.com/django/channels/issues/1101", "id": 340154657, "node_id": "MDU6SXNzdWUzNDAxNTQ2NTc=", "number": 1101, "title": "Javascript library: latest version number lower than the current one", "user": {"login": "bluesurfer", "id": 4722772, "node_id": "MDQ6VXNlcjQ3MjI3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/4722772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluesurfer", "html_url": "https://github.com/bluesurfer", "followers_url": "https://api.github.com/users/bluesurfer/followers", "following_url": "https://api.github.com/users/bluesurfer/following{/other_user}", "gists_url": "https://api.github.com/users/bluesurfer/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluesurfer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluesurfer/subscriptions", "organizations_url": "https://api.github.com/users/bluesurfer/orgs", "repos_url": "https://api.github.com/users/bluesurfer/repos", "events_url": "https://api.github.com/users/bluesurfer/events{/privacy}", "received_events_url": "https://api.github.com/users/bluesurfer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159992, "node_id": "MDU6TGFiZWw0MDcxNTk5OTI=", "url": "https://api.github.com/repos/django/channels/labels/blocked/needs-investigation", "name": "blocked/needs-investigation", "color": "f9d0c4", "default": false, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-07-11T09:07:21Z", "updated_at": "2022-07-25T18:35:05Z", "closed_at": "2022-07-25T18:35:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Really minor issue here \ud83d\ude04 \r\n\r\nI have installed the Channels javascript library using `npm`. \r\nWhen I run `npm outdated` to get the list of outdated packages I always get `django-channels`. \r\n\r\n```\r\nPackage          Current   Wanted  Latest  Location\r\ndjango-channels    1.1.8    1.1.8   1.1.6  app\r\n```\r\nBut the current version is higher than the latest one \ud83e\udd14 ", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1101/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}, {"url": "https://api.github.com/repos/django/channels/issues/1100", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1100/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1100/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1100/events", "html_url": "https://github.com/django/channels/issues/1100", "id": 339683706, "node_id": "MDU6SXNzdWUzMzk2ODM3MDY=", "number": 1100, "title": "Error when trying to create or edit any model in django admin ", "user": {"login": "ivofrolov", "id": 576032, "node_id": "MDQ6VXNlcjU3NjAzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/576032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivofrolov", "html_url": "https://github.com/ivofrolov", "followers_url": "https://api.github.com/users/ivofrolov/followers", "following_url": "https://api.github.com/users/ivofrolov/following{/other_user}", "gists_url": "https://api.github.com/users/ivofrolov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivofrolov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivofrolov/subscriptions", "organizations_url": "https://api.github.com/users/ivofrolov/orgs", "repos_url": "https://api.github.com/users/ivofrolov/repos", "events_url": "https://api.github.com/users/ivofrolov/events{/privacy}", "received_events_url": "https://api.github.com/users/ivofrolov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-07-10T03:52:31Z", "updated_at": "2019-08-27T13:26:38Z", "closed_at": "2018-07-22T16:53:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to create or edit any model in Django admin the error occurs (browser shows it as \"page not available\"). It doesn't appear in Django log - it's like connection drop or something. The login procedure and deleting model item completes successfully. I notice the difference between these POST requests - login method content type is `application/x-www-form-urlencoded`, while add model item method is `multipart/form-data`. The problem disappears when channels app is not present in installed apps in `settings.py`.\r\n\r\nThe app is running from command line `manage.py runserver` with debug option on.\r\nPython 3.7.0, django-2.0.7, channels-2.1.2, daphne-2.2.0, asgiref-2.3.2, twisted-18.4.0\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1100/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1099", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1099/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1099/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1099/events", "html_url": "https://github.com/django/channels/issues/1099", "id": 339629593, "node_id": "MDU6SXNzdWUzMzk2Mjk1OTM=", "number": 1099, "title": "Channels render MiddlewareNotUsed unusable", "user": {"login": "nerdoc", "id": 2955584, "node_id": "MDQ6VXNlcjI5NTU1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2955584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nerdoc", "html_url": "https://github.com/nerdoc", "followers_url": "https://api.github.com/users/nerdoc/followers", "following_url": "https://api.github.com/users/nerdoc/following{/other_user}", "gists_url": "https://api.github.com/users/nerdoc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nerdoc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nerdoc/subscriptions", "organizations_url": "https://api.github.com/users/nerdoc/orgs", "repos_url": "https://api.github.com/users/nerdoc/repos", "events_url": "https://api.github.com/users/nerdoc/events{/privacy}", "received_events_url": "https://api.github.com/users/nerdoc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-07-09T22:31:10Z", "updated_at": "2022-07-25T18:30:55Z", "closed_at": "2022-07-25T18:30:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know if this is really a bug, and I needed several hours now to track it down. Please tell me if I just have some misconfig or did not understand basics of channels.\r\n\r\nBut I think that channels renders middleware - that should be run once - useless.\r\nUsing django==2.0.7, daphne==2.2.0, channels==2.1.2, Linux/Ubuntu 16.04, Firefox, just setup a simple Django project.\r\n\r\n```bash\r\npip install django\r\npip install django-channels\r\ndjango-admin startproject one\r\n\r\n```\r\nCreate a ` middleware.py` file:\r\n```python\r\nfrom django.core.exceptions import MiddlewareNotUsed\r\n\r\nclass OneMiddleware:\r\n    def __init__(self, get_response):\r\n        \"\"\"One-time configuration and initialization of plugins.\"\"\"\r\n        print('Middleware started.')\r\n        raise MiddlewareNotUsed\r\n```\r\nNow add the line \r\n```python\r\n    'one.middleware.OneMiddleware',\r\n```\r\nto settings.MIDDLEWARE and start it:\r\n\r\n```bash\r\ncd one\r\n./manage.py migrate\r\n./manage.py runserver\r\n```\r\n\r\nIt works: At server start, 'Middleware started.' is printed, and with every F5 in the browser nothing more happens in the middleware.\r\n\r\nIf I now set up channels/routing, which works basically, the \"statup-once\" effect of my middleware is gone - at every reload of the page, my middleware's `__init__()` is called again.\r\n\r\nIs this designed/desired functionality?\r\nIt breaks the only way you can write startup code for Django that should run **once**. (AppConfig.ready() is no way, and all other 'unofficial ways' neither...)\r\n\r\nI expected this middleware to run once since `MiddlewareNotUsed` was raised here, as described in the [Django docs](https://docs.djangoproject.com/en/2.0/topics/http/middleware/#marking-middleware-as-unused).\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1099/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}, {"url": "https://api.github.com/repos/django/channels/issues/1092", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1092/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1092/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1092/events", "html_url": "https://github.com/django/channels/issues/1092", "id": 338540586, "node_id": "MDU6SXNzdWUzMzg1NDA1ODY=", "number": 1092, "title": "ChannelsLiveServerTestCase doesn't load static files", "user": {"login": "kradem", "id": 7360633, "node_id": "MDQ6VXNlcjczNjA2MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/7360633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kradem", "html_url": "https://github.com/kradem", "followers_url": "https://api.github.com/users/kradem/followers", "following_url": "https://api.github.com/users/kradem/following{/other_user}", "gists_url": "https://api.github.com/users/kradem/gists{/gist_id}", "starred_url": "https://api.github.com/users/kradem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kradem/subscriptions", "organizations_url": "https://api.github.com/users/kradem/orgs", "repos_url": "https://api.github.com/users/kradem/repos", "events_url": "https://api.github.com/users/kradem/events{/privacy}", "received_events_url": "https://api.github.com/users/kradem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159992, "node_id": "MDU6TGFiZWw0MDcxNTk5OTI=", "url": "https://api.github.com/repos/django/channels/labels/blocked/needs-investigation", "name": "blocked/needs-investigation", "color": "f9d0c4", "default": false, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-07-05T11:47:01Z", "updated_at": "2018-09-02T16:00:39Z", "closed_at": "2018-09-02T16:00:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is the screenshot of the problem:\r\n![chrome-static-files](https://user-images.githubusercontent.com/7360633/42321299-bd431040-8058-11e8-8ac6-e1a7449e1fdd.png)\r\n\r\nDevelopment server works as intended:\r\n![chrome-devserver](https://user-images.githubusercontent.com/7360633/42321478-63a468da-8059-11e8-81fa-fd57cd759977.png)\r\n\r\nThat testing code you may found in this [channels-examples fork](https://github.com/kradem/channels-examples).\r\n\r\n\r\n    $ pip freeze\r\n    aioredis==1.1.0\r\n    asgiref==2.3.2\r\n    async-timeout==3.0.0\r\n    atomicwrites==1.1.5\r\n    attrs==18.1.0\r\n    autobahn==18.6.1\r\n    Automat==0.7.0\r\n    channels==2.1.2\r\n    channels-redis==2.2.1\r\n    constantly==15.1.0\r\n    daphne==2.2.0\r\n    Django==2.0.7\r\n    hiredis==0.2.0\r\n    hyperlink==18.0.0\r\n    idna==2.7\r\n    incremental==17.5.0\r\n    more-itertools==4.2.0\r\n    msgpack==0.5.6\r\n    pluggy==0.6.0\r\n    psycopg2-binary==2.7.5\r\n    py==1.5.4\r\n    pytest==3.6.3\r\n    pytest-asyncio==0.8.0\r\n    pytest-django==3.3.2\r\n    pytz==2018.5\r\n    selenium==3.13.0\r\n    six==1.11.0\r\n    Twisted==18.4.0\r\n    txaio==2.10.0\r\n    zope.interface==4.5.0\r\n\r\nI'm afraid I can't locate commit in time as [this solved bug would emerge](https://github.com/django/channels/issues/1008).\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1092/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1092/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1061", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1061/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1061/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1061/events", "html_url": "https://github.com/django/channels/issues/1061", "id": 326737155, "node_id": "MDU6SXNzdWUzMjY3MzcxNTU=", "number": 1061, "title": "URLs in channels tutorial are based on Django 1.11 but requirements.txt has Django 2.0. As a result some URLs don't work in Django 2.0.", "user": {"login": "amakarudze", "id": 13593285, "node_id": "MDQ6VXNlcjEzNTkzMjg1", "avatar_url": "https://avatars.githubusercontent.com/u/13593285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amakarudze", "html_url": "https://github.com/amakarudze", "followers_url": "https://api.github.com/users/amakarudze/followers", "following_url": "https://api.github.com/users/amakarudze/following{/other_user}", "gists_url": "https://api.github.com/users/amakarudze/gists{/gist_id}", "starred_url": "https://api.github.com/users/amakarudze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amakarudze/subscriptions", "organizations_url": "https://api.github.com/users/amakarudze/orgs", "repos_url": "https://api.github.com/users/amakarudze/repos", "events_url": "https://api.github.com/users/amakarudze/events{/privacy}", "received_events_url": "https://api.github.com/users/amakarudze/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 220071673, "node_id": "MDU6TGFiZWwyMjAwNzE2NzM=", "url": "https://api.github.com/repos/django/channels/labels/documentation", "name": "documentation", "color": "159818", "default": true, "description": null}, {"id": 407159992, "node_id": "MDU6TGFiZWw0MDcxNTk5OTI=", "url": "https://api.github.com/repos/django/channels/labels/blocked/needs-investigation", "name": "blocked/needs-investigation", "color": "f9d0c4", "default": false, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-05-26T13:09:32Z", "updated_at": "2019-10-31T17:44:54Z", "closed_at": "2019-03-28T20:17:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am learning to use channel and came across this issue with the Channels Tutorial Documentation.\r\n\r\n#chat/urls.py\r\n\r\n`urlpatterns = [\r\n    url(r'^$', views.index, name='index'),\r\n    url(r'^(?P<room_name>[^/]+)/$', views.room, name='room'),\r\n] `\r\n\r\nResults in a page not found. \r\n![channels issue](https://user-images.githubusercontent.com/13593285/40576404-f0caa950-60f5-11e8-9303-2d7592c3555c.PNG)\r\n\r\n\r\nshould be updated to \r\n\r\n`urlpatterns = [\r\n    url(r'^$', views.index, name='index'),\r\n    url(r'(?P<room_name>[^/]+)/$', views.room, name='room'),\r\n] `\r\n\r\nor use `path` keyword.\r\n\r\nAm using Django 2.0", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1061/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1017", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1017/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1017/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1017/events", "html_url": "https://github.com/django/channels/issues/1017", "id": 314196175, "node_id": "MDU6SXNzdWUzMTQxOTYxNzU=", "number": 1017, "title": "Cannot access scope[\"user\"] object from an async consumer", "user": {"login": "theof", "id": 8781784, "node_id": "MDQ6VXNlcjg3ODE3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8781784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theof", "html_url": "https://github.com/theof", "followers_url": "https://api.github.com/users/theof/followers", "following_url": "https://api.github.com/users/theof/following{/other_user}", "gists_url": "https://api.github.com/users/theof/gists{/gist_id}", "starred_url": "https://api.github.com/users/theof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theof/subscriptions", "organizations_url": "https://api.github.com/users/theof/orgs", "repos_url": "https://api.github.com/users/theof/repos", "events_url": "https://api.github.com/users/theof/events{/privacy}", "received_events_url": "https://api.github.com/users/theof/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2018-04-13T17:50:01Z", "updated_at": "2022-02-04T12:01:24Z", "closed_at": "2018-04-18T18:07:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Traceback:\r\n```\r\n2018-04-13 17:44:51,382 - ERROR - server - Exception inside application: You cannot use AsyncToSync in the same thread as an async event loop - just await the async function directly.\r\n  File \"/tmp/channels-examples/multichat/channels/consumer.py\", line 54, in __call__\r\n    await await_many_dispatch([receive, self.channel_receive], self.dispatch)\r\n  File \"/tmp/channels-examples/multichat/channels/utils.py\", line 50, in await_many_dispatch\r\n    await dispatch(result)\r\n  File \"/tmp/channels-examples/multichat/channels/consumer.py\", line 67, in dispatch\r\n    await handler(message)\r\n  File \"/tmp/channels-examples/multichat/channels/generic/websocket.py\", line 173, in websocket_connect\r\n    await self.connect()\r\n  File \"/tmp/channels-examples/multichat/chat/consumers.py\", line 26, in connect\r\n    if self.scope[\"user\"].is_anonymous:\r\n  File \"/tmp/channels-examples/multichat/env/lib/python3.6/site-packages/django/utils/functional.py\", line 215, in inner\r\n    self._setup()\r\n  File \"/tmp/channels-examples/multichat/env/lib/python3.6/site-packages/django/utils/functional.py\", line 349, in _setup\r\n    self._wrapped = self._setupfunc()\r\n  File \"/tmp/channels-examples/multichat/channels/auth.py\", line 142, in <lambda>\r\n    scope[\"user\"] = SimpleLazyObject(lambda: async_to_sync(get_user)(scope))\r\n  File \"/tmp/channels-examples/multichat/env/lib/python3.6/site-packages/asgiref/sync.py\", line 34, in __call__\r\n    \"You cannot use AsyncToSync in the same thread as an async event loop - \"\r\n  You cannot use AsyncToSync in the same thread as an async event loop - just await the async function directly.\r\n```\r\n\r\nUsing AuthMiddleware:\r\naccessing the scope[\"user\"] object from an asynchronous consumer triggers this error.\r\n\r\nThis happens since #923 was merged (published in Channels v2.1.0).\r\nThe traceback can be reproduced with the following steps:\r\n- clone andrewgodwin/channels-example and install dependencies.\r\n- create a superuser\r\n- create a chatroom on the admin site\r\n- try to connect to that chatroom\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1017/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1016", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1016/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1016/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1016/events", "html_url": "https://github.com/django/channels/issues/1016", "id": 314194722, "node_id": "MDU6SXNzdWUzMTQxOTQ3MjI=", "number": 1016, "title": "Enabling channels breaks `FORCE_SCRIPT_NAME`", "user": {"login": "prokher", "id": 399393, "node_id": "MDQ6VXNlcjM5OTM5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/399393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prokher", "html_url": "https://github.com/prokher", "followers_url": "https://api.github.com/users/prokher/followers", "following_url": "https://api.github.com/users/prokher/following{/other_user}", "gists_url": "https://api.github.com/users/prokher/gists{/gist_id}", "starred_url": "https://api.github.com/users/prokher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prokher/subscriptions", "organizations_url": "https://api.github.com/users/prokher/orgs", "repos_url": "https://api.github.com/users/prokher/repos", "events_url": "https://api.github.com/users/prokher/events{/privacy}", "received_events_url": "https://api.github.com/users/prokher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-13T17:44:56Z", "updated_at": "2018-05-26T16:14:21Z", "closed_at": "2018-05-26T16:14:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all!\r\n\r\nToday I suddenly figured out that enabling Channels breaks URL \"routing\" inside Django Admin when `FORCE_SCRIPT_NAME` is set. I have Django running behind Nginx reverse proxy with `/api/` URL prefix. To make Django respect this prefix I set `FORCE_SCRIPT_NAME = '/api'` in the Django setting file. Everything works fine until I enable Channels by `INSTALLED_APPS += ['channels']`. After this Django Admin login screen POSTs data the wrong URL, the one without `/api/` prefix. If I disable Channels it works fine again. I simply do not know where to dig further. Any help is appreciated.\r\n\r\nMy setup:\r\n- channels (2.1.0)\r\n- daphne (2.1.0)\r\n- Django (2.0.4)\r\n- Ubuntu Linux 16.04\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1016/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1009", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1009/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1009/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1009/events", "html_url": "https://github.com/django/channels/issues/1009", "id": 312700983, "node_id": "MDU6SXNzdWUzMTI3MDA5ODM=", "number": 1009, "title": "Dispatch missing required positional argument", "user": {"login": "KevinSooley", "id": 36239784, "node_id": "MDQ6VXNlcjM2MjM5Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/36239784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KevinSooley", "html_url": "https://github.com/KevinSooley", "followers_url": "https://api.github.com/users/KevinSooley/followers", "following_url": "https://api.github.com/users/KevinSooley/following{/other_user}", "gists_url": "https://api.github.com/users/KevinSooley/gists{/gist_id}", "starred_url": "https://api.github.com/users/KevinSooley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KevinSooley/subscriptions", "organizations_url": "https://api.github.com/users/KevinSooley/orgs", "repos_url": "https://api.github.com/users/KevinSooley/repos", "events_url": "https://api.github.com/users/KevinSooley/events{/privacy}", "received_events_url": "https://api.github.com/users/KevinSooley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-09T21:52:58Z", "updated_at": "2018-04-09T22:55:29Z", "closed_at": "2018-04-09T22:55:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nHi folks,\r\n\r\nI'm attempting to work through the tutorial, but i'm getting snagged with this on part 2:\r\n```\r\n2018-04-09 16:34:12,904 - ERROR - server - Exception inside application: dispatch() missing 1 required positional argument: 'message'\r\n  File \"/usr/local/lib/python3.5/asyncio/tasks.py\", line 242, in _step\r\n    result = coro.throw(exc)\r\n  File \"/usr/local/lib/python3.5/site-packages/channels/consumer.py\", line 54, in __call__\r\n    await await_many_dispatch([receive, self.channel_receive], self.dispatch)\r\n  File \"/usr/local/lib/python3.5/site-packages/channels/utils.py\", line 48, in await_many_dispatch\r\n    await dispatch(result)\r\n  File \"/usr/local/lib/python3.5/site-packages/asgiref/sync.py\", line 67, in __call__\r\n    return await asyncio.wait_for(future, timeout=None)\r\n  File \"/usr/local/lib/python3.5/asyncio/tasks.py\", line 387, in wait_for\r\n    return (yield from fut)\r\n  File \"/usr/local/lib/python3.5/asyncio/futures.py\", line 381, in __iter__\r\n    yield self  # This tells Task to wait for completion.\r\n  File \"/usr/local/lib/python3.5/asyncio/tasks.py\", line 310, in _wakeup\r\n    future.result()\r\n  File \"/usr/local/lib/python3.5/asyncio/futures.py\", line 294, in result\r\n    raise self._exception\r\n  File \"/usr/local/lib/python3.5/concurrent/futures/thread.py\", line 55, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/usr/local/lib/python3.5/site-packages/channels/db.py\", line 13, in thread_handler\r\n    return super().thread_handler(loop, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.5/site-packages/asgiref/sync.py\", line 76, in thread_handler\r\n    raise e\r\n  File \"/usr/local/lib/python3.5/site-packages/asgiref/sync.py\", line 74, in thread_handler\r\n    self.func(*args, **kwargs)\r\n  dispatch() missing 1 required positional argument: 'message'\r\n\r\n```\r\nVersions of things:\r\n```asgi-redis==1.4.3\r\nasgiref==2.1.0\r\nchannels==2.0.2\r\nchannels_redis==2.1.0\r\ndaphne==2.1.0\r\nDjango==2.0.1\r\nTwisted==17.9.0\r\n```\r\n\r\nrunning with runserver on python 3.5. Is there something obvious I'm missing?", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1009/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/1001", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/1001/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/1001/comments", "events_url": "https://api.github.com/repos/django/channels/issues/1001/events", "html_url": "https://github.com/django/channels/issues/1001", "id": 310726703, "node_id": "MDU6SXNzdWUzMTA3MjY3MDM=", "number": 1001, "title": "Chunked request body support", "user": {"login": "zemelLeong", "id": 26835087, "node_id": "MDQ6VXNlcjI2ODM1MDg3", "avatar_url": "https://avatars.githubusercontent.com/u/26835087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zemelLeong", "html_url": "https://github.com/zemelLeong", "followers_url": "https://api.github.com/users/zemelLeong/followers", "following_url": "https://api.github.com/users/zemelLeong/following{/other_user}", "gists_url": "https://api.github.com/users/zemelLeong/gists{/gist_id}", "starred_url": "https://api.github.com/users/zemelLeong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zemelLeong/subscriptions", "organizations_url": "https://api.github.com/users/zemelLeong/orgs", "repos_url": "https://api.github.com/users/zemelLeong/repos", "events_url": "https://api.github.com/users/zemelLeong/events{/privacy}", "received_events_url": "https://api.github.com/users/zemelLeong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-03T07:38:20Z", "updated_at": "2021-07-10T13:21:45Z", "closed_at": "2021-07-10T13:21:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "django 2.0.2\r\nchannels 2.0.2\r\nos: ubuntu\r\nmode: debugger\r\n\r\nHi,\r\nMy project can receive large file upload,  when using channels before. It will write a temporary file in the /tmp directory. But, when I use channels. Nothing in the /tmp directory.  About transmit 12M will fail.\r\nCould you tell me what is problem?\r\n\r\nMy settings.py config:\r\nINSTALLED_APPS = [... , channels]\r\nASGI_APPLICATION = \"myproject.routing.application\"\r\n\r\nI use javascript client test it can be connect success", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/1001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/1001/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/991", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/991/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/991/comments", "events_url": "https://api.github.com/repos/django/channels/issues/991/events", "html_url": "https://github.com/django/channels/issues/991", "id": 309868748, "node_id": "MDU6SXNzdWUzMDk4Njg3NDg=", "number": 991, "title": "Genorators using database_sync_to_async are called on the main thread", "user": {"login": "agronick", "id": 2042303, "node_id": "MDQ6VXNlcjIwNDIzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2042303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agronick", "html_url": "https://github.com/agronick", "followers_url": "https://api.github.com/users/agronick/followers", "following_url": "https://api.github.com/users/agronick/following{/other_user}", "gists_url": "https://api.github.com/users/agronick/gists{/gist_id}", "starred_url": "https://api.github.com/users/agronick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agronick/subscriptions", "organizations_url": "https://api.github.com/users/agronick/orgs", "repos_url": "https://api.github.com/users/agronick/repos", "events_url": "https://api.github.com/users/agronick/events{/privacy}", "received_events_url": "https://api.github.com/users/agronick/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-29T19:04:44Z", "updated_at": "2018-04-12T03:43:53Z", "closed_at": "2018-04-12T03:43:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is probably true for the other decorators as well. Same issue if you call the decorators directly.\r\n\r\n`threading.get_ident()` is the same as the async code when the function uses yield. If you change it to return a list it has a different ID.", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/991/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/981", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/981/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/981/comments", "events_url": "https://api.github.com/repos/django/channels/issues/981/events", "html_url": "https://github.com/django/channels/issues/981", "id": 307000790, "node_id": "MDU6SXNzdWUzMDcwMDA3OTA=", "number": 981, "title": "'AsgiRequest' object has no attribute 'user'", "user": {"login": "muchwakande", "id": 10800908, "node_id": "MDQ6VXNlcjEwODAwOTA4", "avatar_url": "https://avatars.githubusercontent.com/u/10800908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/muchwakande", "html_url": "https://github.com/muchwakande", "followers_url": "https://api.github.com/users/muchwakande/followers", "following_url": "https://api.github.com/users/muchwakande/following{/other_user}", "gists_url": "https://api.github.com/users/muchwakande/gists{/gist_id}", "starred_url": "https://api.github.com/users/muchwakande/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/muchwakande/subscriptions", "organizations_url": "https://api.github.com/users/muchwakande/orgs", "repos_url": "https://api.github.com/users/muchwakande/repos", "events_url": "https://api.github.com/users/muchwakande/events{/privacy}", "received_events_url": "https://api.github.com/users/muchwakande/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-03-20T19:09:48Z", "updated_at": "2023-04-24T03:38:45Z", "closed_at": "2018-03-21T04:33:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "After Installing channels 2.0, am getting this error when I visit the django admin site\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/981/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/981/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/972", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/972/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/972/comments", "events_url": "https://api.github.com/repos/django/channels/issues/972/events", "html_url": "https://github.com/django/channels/issues/972", "id": 304474069, "node_id": "MDU6SXNzdWUzMDQ0NzQwNjk=", "number": 972, "title": "WSDISCONNECT immedialty after connecting", "user": {"login": "tlebrize", "id": 10827478, "node_id": "MDQ6VXNlcjEwODI3NDc4", "avatar_url": "https://avatars.githubusercontent.com/u/10827478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlebrize", "html_url": "https://github.com/tlebrize", "followers_url": "https://api.github.com/users/tlebrize/followers", "following_url": "https://api.github.com/users/tlebrize/following{/other_user}", "gists_url": "https://api.github.com/users/tlebrize/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlebrize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlebrize/subscriptions", "organizations_url": "https://api.github.com/users/tlebrize/orgs", "repos_url": "https://api.github.com/users/tlebrize/repos", "events_url": "https://api.github.com/users/tlebrize/events{/privacy}", "received_events_url": "https://api.github.com/users/tlebrize/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-12T17:45:18Z", "updated_at": "2018-03-13T11:16:16Z", "closed_at": "2018-03-13T10:12:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried to make run the tutorial from the docs on my production server, using ssl.\r\nAfter a few hours i managed to get a connection but it instantly disconnects :\r\n```\r\nNone - - [12/Mar/2018:17:42:22] \"WSCONNECTING /ws/chat/bibou/\" - -\r\nNone - - [12/Mar/2018:17:42:22] \"WSCONNECT /ws/chat/bibou/\" - -\r\nNone - - [12/Mar/2018:17:42:23] \"WSDISCONNECT /ws/chat/bibou/\" - -\r\n```\r\nmy stack is\r\n```\r\nubuntu 16.04\r\nnginx 1.10.3\r\nchannels==2.0.2\r\ndaphne==2.1.0\r\nchannels-redis==2.1.0\r\nTwisted==17.9.0\r\n```\r\n\r\nI have the exact copy paste of the code from the tutorial, except for this part in room.html\r\n```\r\n    var chatSocket = new WebSocket(\r\n        'wss://' + window.location.host +\r\n        ':8443/ws/chat/' + roomName + '/');\r\n```\r\nand here is my nginx conf\r\n```\r\nserver {\r\n    #http\r\n    listen 80;\r\n    server_name domain.com;\r\n    root /usr/share/nginx/html;\r\n    include /etc/nginx/default.d/*.conf;\r\n\r\n    location / {\r\n        return 301 https://$server_name$request_uri;\r\n    }\r\n}\r\n\r\nserver {\r\n    #https\r\n    listen 443 ssl;\r\n    listen 8443 ssl;\r\n    server_name domain.com;\r\n    root /usr/share/nginx/html;\r\n\r\n    ssl_certificate \"/etc/letsencrypt/live/domain.com/fullchain.pem\";\r\n    ssl_certificate_key \"/etc/letsencrypt/live/domain.com/privkey.pem\";\r\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;\r\n\r\n    add_header Strict-Transport-Security \"max-age=31536000\";\r\n\r\n    include /etc/nginx/default.d/*.conf;\r\n\r\n    location /static/ {\r\n\troot /home/ubuntu;\r\n    }\r\n\r\n    location /media/ {\r\n        root /home/ubuntu;\r\n    }\r\n\r\n    location / {\r\n        proxy_set_header Host $host;\r\n        proxy_set_header X-Real-IP $remote_addr;\r\n        proxy_set_header X-Forwarded-Proto https;\r\n        proxy_set_header X-Forwarded-Host $host;\r\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n\r\n        proxy_pass http://unix:/home/ubuntu/tlebrize/Projectsock;\r\n    }\r\n    \r\n    location /ws/ {\r\n        proxy_set_header Host $host;\r\n        proxy_set_header X-Real-IP $remote_addr;\r\n        proxy_set_header X-Forwarded-Proto https;\r\n        proxy_set_header X-Forwarded-Host $host;\r\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n\tproxy_set_header Upgrade $http_upgrade;\r\n\tproxy_set_header Connection \"upgrade\";\r\n\r\n        proxy_pass http://unix:/home/ubuntu/tlebrize/Daphne.sock;\r\n    }\r\n}\r\n```\r\n\r\nI run daphne with `daphne -u Daphne.sock Groover.asgi:application -v 3`\r\n\r\nI also tried bypassing nginx and using `sudo daphne -e ssl:8443:privateKey=/etc/letsencrypt/live/groover.co/privkey.pem:certKey=/etc/letsencrypt/live/groove.co/fullchain.pem Groover.settings:CHANNEL_LAYERS -u Daphne.sock`\r\nbut i had the same results.\r\n\r\nThe front break with the message `Chat socket closed unexpectedly` with the error code 1011 (Internal Error) and no reason.", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/972/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/969", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/969/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/969/comments", "events_url": "https://api.github.com/repos/django/channels/issues/969/events", "html_url": "https://github.com/django/channels/issues/969", "id": 304207709, "node_id": "MDU6SXNzdWUzMDQyMDc3MDk=", "number": 969, "title": "create_unix_connection NotImplemented in asyncio", "user": {"login": "jzmiller1", "id": 7101735, "node_id": "MDQ6VXNlcjcxMDE3MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7101735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jzmiller1", "html_url": "https://github.com/jzmiller1", "followers_url": "https://api.github.com/users/jzmiller1/followers", "following_url": "https://api.github.com/users/jzmiller1/following{/other_user}", "gists_url": "https://api.github.com/users/jzmiller1/gists{/gist_id}", "starred_url": "https://api.github.com/users/jzmiller1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jzmiller1/subscriptions", "organizations_url": "https://api.github.com/users/jzmiller1/orgs", "repos_url": "https://api.github.com/users/jzmiller1/repos", "events_url": "https://api.github.com/users/jzmiller1/events{/privacy}", "received_events_url": "https://api.github.com/users/jzmiller1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-03-12T00:02:40Z", "updated_at": "2021-09-08T08:09:15Z", "closed_at": "2018-03-12T16:51:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm new to channels and trying to take another look after the jump to version 2.  I'm running Windows 10 with PyCharm as my IDE using Django 1.11.8, Channels 2.0.2, asgiref 2.2.0, channels-redis 2.1.0\r\n\r\nI'm working through the tutorial that is in PR https://github.com/django/channels/pull/954 and end up getting this message.  I'm willing to bet this is some kind of problem with my setup but I don't know enough about channels at this point to be sure.  The code I'm running is the state of the tutorial at the end of part 2.\r\n\r\n[2018/03/11 19:49:11] HTTP GET /starborne/stuff/ 200 [0.02, 127.0.0.1:53046]\r\n[2018/03/11 19:49:11] WebSocket HANDSHAKING /ws/chat/stuff/ [127.0.0.1:53088]\r\n2018-03-11 19:49:11,978 - ERROR - server - Exception inside application: \r\n  File \"C:\\Users\\jzmiller1\\PyCharmProjects\\virtualenvs\\apparatchiki\\lib\\site-packages\\channels\\consumer.py\", line 54, in __call__\r\n    await await_many_dispatch([receive, self.channel_receive], self.dispatch)\r\n  File \"C:\\Users\\jzmiller1\\PyCharmProjects\\virtualenvs\\apparatchiki\\lib\\site-packages\\channels\\utils.py\", line 48, in await_many_dispatch\r\n    await dispatch(result)\r\n  File \"C:\\Users\\jzmiller1\\PyCharmProjects\\virtualenvs\\apparatchiki\\lib\\site-packages\\asgiref\\sync.py\", line 110, in __call__\r\n    return await asyncio.wait_for(future, timeout=None)\r\n  File \"C:\\Users\\jzmiller1\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\asyncio\\tasks.py\", line 339, in wait_for\r\n    return (yield from fut)\r\n  File \"C:\\Users\\jzmiller1\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\concurrent\\futures\\thread.py\", line 55, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"C:\\Users\\jzmiller1\\PyCharmProjects\\virtualenvs\\apparatchiki\\lib\\site-packages\\channels\\db.py\", line 13, in thread_handler\r\n    return super().thread_handler(loop, *args, **kwargs)\r\n  File \"C:\\Users\\jzmiller1\\PyCharmProjects\\virtualenvs\\apparatchiki\\lib\\site-packages\\asgiref\\sync.py\", line 125, in thread_handler\r\n    return self.func(*args, **kwargs)\r\n  File \"C:\\Users\\jzmiller1\\PyCharmProjects\\virtualenvs\\apparatchiki\\lib\\site-packages\\channels\\consumer.py\", line 99, in dispatch\r\n    handler(message)\r\n  File \"C:\\Users\\jzmiller1\\PyCharmProjects\\virtualenvs\\apparatchiki\\lib\\site-packages\\channels\\generic\\websocket.py\", line 19, in websocket_connect\r\n    self.connect()\r\n  File \"C:\\Users\\jzmiller1\\PyCharmProjects\\apparatchiki\\starborne\\consumers.py\", line 14, in connect\r\n    self.channel_name\r\n  File \"C:\\Users\\jzmiller1\\PyCharmProjects\\virtualenvs\\apparatchiki\\lib\\site-packages\\asgiref\\sync.py\", line 64, in __call__\r\n    return call_result.result()\r\n  File \"C:\\Users\\jzmiller1\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\concurrent\\futures\\_base.py\", line 405, in result\r\n    return self.__get_result()\r\n  File \"C:\\Users\\jzmiller1\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\concurrent\\futures\\_base.py\", line 357, in __get_result\r\n    raise self._exception\r\n  File \"C:\\Users\\jzmiller1\\PyCharmProjects\\virtualenvs\\apparatchiki\\lib\\site-packages\\asgiref\\sync.py\", line 78, in main_wrap\r\n    result = await self.awaitable(*args, **kwargs)\r\n  File \"C:\\Users\\jzmiller1\\PyCharmProjects\\virtualenvs\\apparatchiki\\lib\\site-packages\\channels_redis\\core.py\", line 283, in group_add\r\n    async with self.connection(self.consistent_hash(group)) as connection:\r\n  File \"C:\\Users\\jzmiller1\\PyCharmProjects\\virtualenvs\\apparatchiki\\lib\\site-packages\\channels_redis\\core.py\", line 403, in __aenter__\r\n    self.conn = await aioredis.create_redis(**self.kwargs)\r\n  File \"C:\\Users\\jzmiller1\\PyCharmProjects\\virtualenvs\\apparatchiki\\lib\\site-packages\\aioredis\\commands\\__init__.py\", line 177, in create_redis\r\n    loop=loop)\r\n  File \"C:\\Users\\jzmiller1\\PyCharmProjects\\virtualenvs\\apparatchiki\\lib\\site-packages\\aioredis\\connection.py\", line 117, in create_connection\r\n    timeout, loop=loop)\r\n  File \"C:\\Users\\jzmiller1\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\asyncio\\tasks.py\", line 339, in wait_for\r\n    return (yield from fut)\r\n  File \"C:\\Users\\jzmiller1\\PyCharmProjects\\virtualenvs\\apparatchiki\\lib\\site-packages\\aioredis\\stream.py\", line 33, in open_unix_connection\r\n    lambda: protocol, address, **kwds)\r\n  File \"C:\\Users\\jzmiller1\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\asyncio\\events.py\", line 351, in create_unix_connection\r\n    raise NotImplementedError\r\n  \r\n[2018/03/11 19:49:11] WebSocket DISCONNECT /ws/chat/stuff/ [127.0.0.1:53088]\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/969/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/963", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/963/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/963/comments", "events_url": "https://api.github.com/repos/django/channels/issues/963/events", "html_url": "https://github.com/django/channels/issues/963", "id": 303432100, "node_id": "MDU6SXNzdWUzMDM0MzIxMDA=", "number": 963, "title": "override_settings doesn't work for my async test cases", "user": {"login": "bruecksen", "id": 3972738, "node_id": "MDQ6VXNlcjM5NzI3Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/3972738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bruecksen", "html_url": "https://github.com/bruecksen", "followers_url": "https://api.github.com/users/bruecksen/followers", "following_url": "https://api.github.com/users/bruecksen/following{/other_user}", "gists_url": "https://api.github.com/users/bruecksen/gists{/gist_id}", "starred_url": "https://api.github.com/users/bruecksen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bruecksen/subscriptions", "organizations_url": "https://api.github.com/users/bruecksen/orgs", "repos_url": "https://api.github.com/users/bruecksen/repos", "events_url": "https://api.github.com/users/bruecksen/events{/privacy}", "received_events_url": "https://api.github.com/users/bruecksen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-08T10:35:06Z", "updated_at": "2018-03-09T11:21:19Z", "closed_at": "2018-03-09T11:21:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to test my websocket consumer and send and receive a group message. I thought I do it simmilar to the `test_generic_websocket.py` test case (https://github.com/django/channels/blob/master/tests/test_generic_websocket.py#L143) and use `override_settings` to set the channel layer backend to `InMemoryChannelLayer`. But even though the setting is overridden, the `get_channel_layer()` function still returns a `RedisChannelLayer`. Am I doing something wrong or is this a bug?\r\n\r\n```\r\nfrom django.test import override_settings\r\nimport pytest\r\nfrom channels.layers import get_channel_layer\r\n\r\n@pytest.mark.asyncio\r\nasync def test_ws():\r\n    CHANNEL_LAYER_SETTINGS = {\r\n        \"default\": {\r\n            \"BACKEND\": \"channels.layers.InMemoryChannelLayer\",\r\n        },\r\n    }\r\n    with override_settings(CHANNEL_LAYERS=CHANNEL_LAYER_SETTINGS):\r\n        channel_layer = get_channel_layer()\r\n        raise Exception(type(channel_layer))\r\n```\r\n\r\nI'm using:\r\n- Mac OS X\r\n- channels@master, daphne==2.1.0, django==1.11\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/963/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/962", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/962/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/962/comments", "events_url": "https://api.github.com/repos/django/channels/issues/962/events", "html_url": "https://github.com/django/channels/issues/962", "id": 303418423, "node_id": "MDU6SXNzdWUzMDM0MTg0MjM=", "number": 962, "title": "ChannesLiveServerTestcase hanging", "user": {"login": "dgilge", "id": 33256939, "node_id": "MDQ6VXNlcjMzMjU2OTM5", "avatar_url": "https://avatars.githubusercontent.com/u/33256939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgilge", "html_url": "https://github.com/dgilge", "followers_url": "https://api.github.com/users/dgilge/followers", "following_url": "https://api.github.com/users/dgilge/following{/other_user}", "gists_url": "https://api.github.com/users/dgilge/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgilge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgilge/subscriptions", "organizations_url": "https://api.github.com/users/dgilge/orgs", "repos_url": "https://api.github.com/users/dgilge/repos", "events_url": "https://api.github.com/users/dgilge/events{/privacy}", "received_events_url": "https://api.github.com/users/dgilge/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300084, "node_id": "MDU6TGFiZWw0MzEzMDAwODQ=", "url": "https://api.github.com/repos/django/channels/labels/exp/advanced", "name": "exp/advanced", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 30, "created_at": "2018-03-08T09:51:55Z", "updated_at": "2019-11-06T18:51:01Z", "closed_at": "2019-11-06T18:51:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here's another issue I encountered...\r\n\r\n### What I expected to happen vs. what actually happened\r\n\r\nThis test should pass:\r\n\r\n```python\r\nfrom channels.testing.live import ChannelsLiveServerTestCase\r\nfrom selenium.webdriver.firefox.webdriver import WebDriver\r\n\r\nclass LiveTests(ChannelsLiveServerTestCase):\r\n    @classmethod\r\n    def setUpClass(cls):\r\n        super().setUpClass()\r\n        cls.selenium = WebDriver()\r\n        cls.selenium.implicitly_wait(5)\r\n\r\n    @classmethod\r\n    def tearDownClass(cls):\r\n        cls.selenium.quit()\r\n        super().tearDownClass()\r\n\r\n    def test_pass(self):\r\n        pass\r\n```\r\n\r\nBut it is hanging. Firefox opens and then nothing happens. In my \"real\" test it shows no URL and no content. I have to cancel the test.\r\n\r\nYou can even remove the selenium code showing the same behavior:\r\n\r\n```python\r\nfrom channels.testing.live import ChannelsLiveServerTestCase\r\n\r\nclass LiveTests(ChannelsLiveServerTestCase):\r\n    def test_pass(self):\r\n        pass\r\n```\r\n\r\nIt works with Channels 2.0.2 though. Therefore I think the issue is related to Channels somehow.\r\n\r\n### OS and runtime environment, and browser\r\n\r\nMacOS Sierra 10.12.6, Firefox 58.0.2\r\n\r\n### The versions of Channels, Daphne, Django, Twisted, and your ASGI backend (channels_redis normally)\r\n\r\n```\r\nmy-app==0.0.0\r\n  - channels [required: ~=2.0, installed: 2.0.2] - Using the newest code base from GitHub\r\n    - asgiref [required: ~=2.1, installed: 2.2.0] - Using the newest code base from GitHub\r\n      - async-timeout [required: ~=2.0, installed: 2.0.0]\r\n    - daphne [required: ~=2.0, installed: 2.1.0]\r\n      - autobahn [required: >=0.18, installed: 18.3.1]\r\n        - six [required: >=1.10.0, installed: 1.11.0]\r\n        - txaio [required: >=2.7.0, installed: 2.9.0]\r\n          - six [required: Any, installed: 1.11.0]\r\n      - twisted [required: >=17.5, installed: 17.9.0]\r\n        - Automat [required: >=0.3.0, installed: 0.6.0]\r\n          - attrs [required: Any, installed: 17.4.0]\r\n          - six [required: Any, installed: 1.11.0]\r\n        - constantly [required: >=15.1, installed: 15.1.0]\r\n        - hyperlink [required: >=17.1.1, installed: 18.0.0]\r\n          - idna [required: >=2.5, installed: 2.6]\r\n        - incremental [required: >=16.10.1, installed: 17.5.0]\r\n        - zope.interface [required: >=4.0.2, installed: 4.4.3]\r\n          - setuptools [required: Any, installed: 38.5.2]\r\n    - Django [required: >=1.11, installed: 2.0.3]\r\n      - pytz [required: Any, installed: 2018.3]\r\n  - django [required: ~=2.0, installed: 2.0.3]\r\n    - pytz [required: Any, installed: 2018.3]\r\npsycopg2==2.7.4\r\npytest-asyncio==0.8.0\r\n  - pytest [required: >=3.0.6, installed: 3.4.2]\r\n    - attrs [required: >=17.2.0, installed: 17.4.0]\r\n    - pluggy [required: >=0.5,<0.7, installed: 0.6.0]\r\n    - py [required: >=1.5.0, installed: 1.5.2]\r\n    - setuptools [required: Any, installed: 38.5.2]\r\n    - six [required: >=1.10.0, installed: 1.11.0]\r\npytest-django==3.1.2\r\n  - pytest [required: >=2.9, installed: 3.4.2]\r\n    - attrs [required: >=17.2.0, installed: 17.4.0]\r\n    - pluggy [required: >=0.5,<0.7, installed: 0.6.0]\r\n    - py [required: >=1.5.0, installed: 1.5.2]\r\n    - setuptools [required: Any, installed: 38.5.2]\r\n    - six [required: >=1.10.0, installed: 1.11.0]\r\nselenium==3.10.0\r\n```\r\n\r\n\r\n### How I'm running Channels\r\n\r\npytest\r\n\r\n### Console logs and full tracebacks of any errors\r\n\r\n```\r\npipenv run pytest tests/tests_selenium.py  --fulltrace\r\n======================================= test session starts ========================================\r\nplatform darwin -- Python 3.6.4, pytest-3.4.2, py-1.5.2, pluggy-0.6.0\r\nDjango settings: tests.settings (from ini file)\r\nrootdir: /Users/Daniel/git/my-app, inifile: setup.cfg\r\nplugins: django-3.1.2, asyncio-0.8.0\r\ncollected 1 item                                                                                   \r\n\r\ntests/tests_selenium.py ^C\r\n\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! KeyboardInterrupt !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\nconfig = <_pytest.config.Config object at 0x10d803c18>, doit = <function _main at 0x10d744620>\r\n\r\n    def wrap_session(config, doit):\r\n        \"\"\"Skeleton command line program\"\"\"\r\n        session = Session(config)\r\n        session.exitstatus = EXIT_OK\r\n        initstate = 0\r\n        try:\r\n            try:\r\n                config._do_configure()\r\n                initstate = 1\r\n                config.hook.pytest_sessionstart(session=session)\r\n                initstate = 2\r\n>               session.exitstatus = doit(config, session) or 0\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/_pytest/main.py:100: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nconfig = <_pytest.config.Config object at 0x10d803c18>\r\nsession = <Session 'my-app'>\r\n\r\n    def _main(config, session):\r\n        \"\"\" default command line protocol for initialization, session,\r\n        running tests and reporting. \"\"\"\r\n        config.hook.pytest_collection(session=session)\r\n>       config.hook.pytest_runtestloop(session=session)\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/_pytest/main.py:138: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <_HookCaller 'pytest_runtestloop'>, args = ()\r\nkwargs = {'session': <Session 'my-app'>}, notincall = set()\r\n\r\n    def __call__(self, *args, **kwargs):\r\n        if args:\r\n            raise TypeError(\"hook calling supports only keyword arguments\")\r\n        assert not self.is_historic()\r\n        if self.argnames:\r\n            notincall = set(self.argnames) - set(['__multicall__']) - set(\r\n                kwargs.keys())\r\n            if notincall:\r\n                warnings.warn(\r\n                    \"Argument(s) {} which are declared in the hookspec \"\r\n                    \"can not be found in this hook call\"\r\n                    .format(tuple(notincall)),\r\n                    stacklevel=2,\r\n                )\r\n>       return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/pluggy/__init__.py:617: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <_pytest.config.PytestPluginManager object at 0x10d0c0f60>\r\nhook = <_HookCaller 'pytest_runtestloop'>\r\nmethods = [<pluggy.HookImpl object at 0x10d815748>, <pluggy.HookImpl object at 0x10f4e47f0>]\r\nkwargs = {'session': <Session 'my-app'>}\r\n\r\n    def _hookexec(self, hook, methods, kwargs):\r\n        # called from all hookcaller instances.\r\n        # enable_tracing will set its own wrapping function at self._inner_hookexec\r\n>       return self._inner_hookexec(hook, methods, kwargs)\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/pluggy/__init__.py:222: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nhook = <_HookCaller 'pytest_runtestloop'>\r\nmethods = [<pluggy.HookImpl object at 0x10d815748>, <pluggy.HookImpl object at 0x10f4e47f0>]\r\nkwargs = {'session': <Session 'my-app'>}\r\n\r\n    self._inner_hookexec = lambda hook, methods, kwargs: \\\r\n        hook.multicall(\r\n            methods, kwargs,\r\n>           firstresult=hook.spec_opts.get('firstresult'),\r\n        )\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/pluggy/__init__.py:216: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nsession = <Session 'my-app'>\r\n\r\n    def pytest_runtestloop(session):\r\n        if (session.testsfailed and\r\n                not session.config.option.continue_on_collection_errors):\r\n            raise session.Interrupted(\r\n                \"%d errors during collection\" % session.testsfailed)\r\n    \r\n        if session.config.option.collectonly:\r\n            return True\r\n    \r\n        for i, item in enumerate(session.items):\r\n            nextitem = session.items[i + 1] if i + 1 < len(session.items) else None\r\n>           item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/_pytest/main.py:161: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <_HookCaller 'pytest_runtest_protocol'>, args = ()\r\nkwargs = {'item': <TestCaseFunction 'test_pass'>, 'nextitem': None}, notincall = set()\r\n\r\n    def __call__(self, *args, **kwargs):\r\n        if args:\r\n            raise TypeError(\"hook calling supports only keyword arguments\")\r\n        assert not self.is_historic()\r\n        if self.argnames:\r\n            notincall = set(self.argnames) - set(['__multicall__']) - set(\r\n                kwargs.keys())\r\n            if notincall:\r\n                warnings.warn(\r\n                    \"Argument(s) {} which are declared in the hookspec \"\r\n                    \"can not be found in this hook call\"\r\n                    .format(tuple(notincall)),\r\n                    stacklevel=2,\r\n                )\r\n>       return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/pluggy/__init__.py:617: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <_pytest.config.PytestPluginManager object at 0x10d0c0f60>\r\nhook = <_HookCaller 'pytest_runtest_protocol'>\r\nmethods = [<pluggy.HookImpl object at 0x10d826518>, <pluggy.HookImpl object at 0x10d826e80>, <pluggy.HookImpl object at 0x10d90e7f0>]\r\nkwargs = {'item': <TestCaseFunction 'test_pass'>, 'nextitem': None}\r\n\r\n    def _hookexec(self, hook, methods, kwargs):\r\n        # called from all hookcaller instances.\r\n        # enable_tracing will set its own wrapping function at self._inner_hookexec\r\n>       return self._inner_hookexec(hook, methods, kwargs)\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/pluggy/__init__.py:222: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nhook = <_HookCaller 'pytest_runtest_protocol'>\r\nmethods = [<pluggy.HookImpl object at 0x10d826518>, <pluggy.HookImpl object at 0x10d826e80>, <pluggy.HookImpl object at 0x10d90e7f0>]\r\nkwargs = {'item': <TestCaseFunction 'test_pass'>, 'nextitem': None}\r\n\r\n    self._inner_hookexec = lambda hook, methods, kwargs: \\\r\n        hook.multicall(\r\n            methods, kwargs,\r\n>           firstresult=hook.spec_opts.get('firstresult'),\r\n        )\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/pluggy/__init__.py:216: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nitem = <TestCaseFunction 'test_pass'>, nextitem = None\r\n\r\n    def pytest_runtest_protocol(item, nextitem):\r\n        item.ihook.pytest_runtest_logstart(\r\n            nodeid=item.nodeid, location=item.location,\r\n        )\r\n>       runtestprotocol(item, nextitem=nextitem)\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/_pytest/runner.py:62: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nitem = <TestCaseFunction 'test_pass'>, log = True, nextitem = None\r\n\r\n    def runtestprotocol(item, log=True, nextitem=None):\r\n        hasrequest = hasattr(item, \"_request\")\r\n        if hasrequest and not item._request:\r\n            item._initrequest()\r\n        rep = call_and_report(item, \"setup\", log)\r\n        reports = [rep]\r\n        if rep.passed:\r\n            if item.config.option.setupshow:\r\n                show_test_item(item)\r\n            if not item.config.option.setuponly:\r\n>               reports.append(call_and_report(item, \"call\", log))\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/_pytest/runner.py:79: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nitem = <TestCaseFunction 'test_pass'>, when = 'call', log = True, kwds = {}\r\n\r\n    def call_and_report(item, when, log=True, **kwds):\r\n>       call = call_runtest_hook(item, when, **kwds)\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/_pytest/runner.py:158: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nitem = <TestCaseFunction 'test_pass'>, when = 'call', kwds = {}, hookname = 'pytest_runtest_call'\r\n\r\n    def call_runtest_hook(item, when, **kwds):\r\n        hookname = \"pytest_runtest_\" + when\r\n        ihook = getattr(item.ihook, hookname)\r\n>       return CallInfo(lambda: ihook(item=item, **kwds), when=when)\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/_pytest/runner.py:178: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <[AttributeError(\"'CallInfo' object has no attribute 'result'\") raised in repr()] CallInfo object at 0x10f67b208>\r\nfunc = <function call_runtest_hook.<locals>.<lambda> at 0x10f793ea0>, when = 'call'\r\n\r\n    def __init__(self, func, when):\r\n        #: context of invocation: one of \"setup\", \"call\",\r\n        #: \"teardown\", \"memocollect\"\r\n        self.when = when\r\n        self.start = time()\r\n        try:\r\n>           self.result = func()\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/_pytest/runner.py:192: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\n>   return CallInfo(lambda: ihook(item=item, **kwds), when=when)\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/_pytest/runner.py:178: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <_HookCaller 'pytest_runtest_call'>, args = ()\r\nkwargs = {'item': <TestCaseFunction 'test_pass'>}, notincall = set()\r\n\r\n    def __call__(self, *args, **kwargs):\r\n        if args:\r\n            raise TypeError(\"hook calling supports only keyword arguments\")\r\n        assert not self.is_historic()\r\n        if self.argnames:\r\n            notincall = set(self.argnames) - set(['__multicall__']) - set(\r\n                kwargs.keys())\r\n            if notincall:\r\n                warnings.warn(\r\n                    \"Argument(s) {} which are declared in the hookspec \"\r\n                    \"can not be found in this hook call\"\r\n                    .format(tuple(notincall)),\r\n                    stacklevel=2,\r\n                )\r\n>       return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/pluggy/__init__.py:617: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <_pytest.config.PytestPluginManager object at 0x10d0c0f60>\r\nhook = <_HookCaller 'pytest_runtest_call'>\r\nmethods = [<pluggy.HookImpl object at 0x10d8264a8>, <pluggy.HookImpl object at 0x10dfb0588>, <pluggy.HookImpl object at 0x10f4e4710>]\r\nkwargs = {'item': <TestCaseFunction 'test_pass'>}\r\n\r\n    def _hookexec(self, hook, methods, kwargs):\r\n        # called from all hookcaller instances.\r\n        # enable_tracing will set its own wrapping function at self._inner_hookexec\r\n>       return self._inner_hookexec(hook, methods, kwargs)\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/pluggy/__init__.py:222: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nhook = <_HookCaller 'pytest_runtest_call'>\r\nmethods = [<pluggy.HookImpl object at 0x10d8264a8>, <pluggy.HookImpl object at 0x10dfb0588>, <pluggy.HookImpl object at 0x10f4e4710>]\r\nkwargs = {'item': <TestCaseFunction 'test_pass'>}\r\n\r\n    self._inner_hookexec = lambda hook, methods, kwargs: \\\r\n        hook.multicall(\r\n            methods, kwargs,\r\n>           firstresult=hook.spec_opts.get('firstresult'),\r\n        )\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/pluggy/__init__.py:216: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nitem = <TestCaseFunction 'test_pass'>\r\n\r\n    def pytest_runtest_call(item):\r\n        _update_current_test_var(item, 'call')\r\n        try:\r\n>           item.runtest()\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/_pytest/runner.py:109: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <TestCaseFunction 'test_pass'>\r\n\r\n    def runtest(self):\r\n        if self.config.pluginmanager.get_plugin(\"pdbinvoke\") is None:\r\n>           self._testcase(result=self)\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/_pytest/unittest.py:174: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <tests.tests_selenium.LiveTests testMethod=test_pass>\r\nresult = <TestCaseFunction 'test_pass'>\r\n\r\n    def __call__(self, result=None):\r\n        \"\"\"\r\n            Wrapper around default __call__ method to perform common Django test\r\n            set up. This means that user-defined Test Cases aren't required to\r\n            include a call to super().setUp().\r\n            \"\"\"\r\n        testMethod = getattr(self, self._testMethodName)\r\n        skipped = (\r\n            getattr(self.__class__, \"__unittest_skip__\", False) or\r\n            getattr(testMethod, \"__unittest_skip__\", False)\r\n        )\r\n    \r\n        if not skipped:\r\n            try:\r\n>               self._pre_setup()\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/django/test/testcases.py:202: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <tests.tests_selenium.LiveTests testMethod=test_pass>\r\n\r\n    def _pre_setup(self):\r\n        for connection in connections.all():\r\n            if self._is_in_memory_db(connection):\r\n                raise ImproperlyConfigured(\r\n                    \"ChannelLiveServerTestCase can not be used with in memory databases\"\r\n                )\r\n    \r\n        super(ChannelsLiveServerTestCase, self)._pre_setup()\r\n    \r\n        self._server_process = self.ProtocolServerProcess(\r\n            self.host,\r\n            get_default_application(),\r\n        )\r\n        self._server_process.start()\r\n>       self._server_process.ready.wait()\r\n\r\n/Users/daniel/.local/share/virtualenvs/env/lib/python3.6/site-packages/channels/testing/live.py:43: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <multiprocessing.synchronize.Event object at 0x10faa2f28>, timeout = None\r\n\r\n    def wait(self, timeout=None):\r\n        with self._cond:\r\n            if self._flag.acquire(False):\r\n                self._flag.release()\r\n            else:\r\n>               self._cond.wait(timeout)\r\n\r\n/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/multiprocessing/synchronize.py:361: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <Condition(<Lock(owner=unknown)>, unknown)>, timeout = None\r\n\r\n    def wait(self, timeout=None):\r\n        assert self._lock._semlock._is_mine(), \\\r\n               'must acquire() condition before using wait()'\r\n    \r\n        # indicate that this thread is going to sleep\r\n        self._sleeping_count.release()\r\n    \r\n        # release lock\r\n        count = self._lock._semlock._count()\r\n        for i in range(count):\r\n            self._lock.release()\r\n    \r\n        try:\r\n            # wait for notification or timeout\r\n>           return self._wait_semaphore.acquire(True, timeout)\r\nE           KeyboardInterrupt\r\n\r\n/usr/local/Cellar/python/3.6.4_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/multiprocessing/synchronize.py:262: KeyboardInterrupt\r\n================================== no tests ran in 12.25 seconds ===================================\r\n```", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/962/reactions", "total_count": 7, "+1": 7, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/962/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/944", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/944/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/944/comments", "events_url": "https://api.github.com/repos/django/channels/issues/944/events", "html_url": "https://github.com/django/channels/issues/944", "id": 301588204, "node_id": "MDU6SXNzdWUzMDE1ODgyMDQ=", "number": 944, "title": "Cannot test synchronous consumer that includes async_to_sync", "user": {"login": "jstray", "id": 1028628, "node_id": "MDQ6VXNlcjEwMjg2Mjg=", "avatar_url": "https://avatars.githubusercontent.com/u/1028628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstray", "html_url": "https://github.com/jstray", "followers_url": "https://api.github.com/users/jstray/followers", "following_url": "https://api.github.com/users/jstray/following{/other_user}", "gists_url": "https://api.github.com/users/jstray/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstray/subscriptions", "organizations_url": "https://api.github.com/users/jstray/orgs", "repos_url": "https://api.github.com/users/jstray/repos", "events_url": "https://api.github.com/users/jstray/events{/privacy}", "received_events_url": "https://api.github.com/users/jstray/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-03-01T22:44:51Z", "updated_at": "2019-08-07T20:18:24Z", "closed_at": "2018-04-12T03:41:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am having a problem calling async_to_sync from `python manage.py tests`. The relevant code is\r\n\r\n```\r\nclass MyHandler(SyncConsumer):\r\n\r\n    def websocket_connect(self, event):\r\n        self.send({ \"type\": \"websocket.accept\"})\r\n        async_to_sync(self.channel_layer.group_add('grpup', self.channel_name))\r\n```\r\n\r\nTest looks like this -- I use `asynctest` because I don't want this to be the only test in my project that uses `pytest` syntax.\r\n\r\n```\r\nclass ChannelTests(asynctest.TestCase):\r\n\r\n    async def test_websockets(self):\r\n        communicator = WebsocketCommunicator(MyHandler, path)\r\n        connected, subprotocol = await communicator.connect()\r\n        self.assertTrue(connected)\r\n```\r\n\r\nWhen I run this, I get `RuntimeError: You cannot use AsyncToSync in the same thread as an async event loop - just await the async function directly.` But I'm actually not sure it ever gets to my async_to_sync call. Looking at the call stack, it seems to bomb on the previous line:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/site-packages/asynctest/case.py\", line 297, in run\r\n    self._run_test_method(testMethod)\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/site-packages/asynctest/case.py\", line 354, in _run_test_method\r\n    self.loop.run_until_complete(result)\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/site-packages/asynctest/case.py\", line 224, in wrapper\r\n    return method(*args, **kwargs)\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/asyncio/base_events.py\", line 387, in run_until_complete\r\n    return future.result()\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/asyncio/futures.py\", line 274, in result\r\n    raise self._exception\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/asyncio/tasks.py\", line 241, in _step\r\n    result = coro.throw(exc)\r\n  File \"/Users/jonathanstray/PycharmProjects/cjworkbench/server/tests/test_websockets.py\", line 26, in test_websockets\r\n    connected, subprotocol = await communicator.connect()\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/site-packages/channels/testing/websocket.py\", line 33, in connect\r\n    response = await self.receive_output(timeout)\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/site-packages/asgiref/testing.py\", line 66, in receive_output\r\n    self.future.result()\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/asyncio/futures.py\", line 274, in result\r\n    raise self._exception\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/asyncio/tasks.py\", line 241, in _step\r\n    result = coro.throw(exc)\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/site-packages/channels/consumer.py\", line 54, in __call__\r\n    await await_many_dispatch([receive, self.channel_receive], self.dispatch)\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/site-packages/channels/utils.py\", line 48, in await_many_dispatch\r\n    await dispatch(result)\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/site-packages/asgiref/sync.py\", line 110, in __call__\r\n    return await asyncio.wait_for(future, timeout=None)\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/asyncio/tasks.py\", line 373, in wait_for\r\n    return (yield from fut)\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/asyncio/futures.py\", line 361, in __iter__\r\n    yield self  # This tells Task to wait for completion.\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/asyncio/tasks.py\", line 296, in _wakeup\r\n    future.result()\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/asyncio/futures.py\", line 274, in result\r\n    raise self._exception\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/concurrent/futures/thread.py\", line 55, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/site-packages/channels/db.py\", line 13, in thread_handler\r\n    return super().thread_handler(loop, *args, **kwargs)\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/site-packages/asgiref/sync.py\", line 125, in thread_handler\r\n    return self.func(*args, **kwargs)\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/site-packages/channels/consumer.py\", line 99, in dispatch\r\n    handler(message)\r\n  File \"/Users/jonathanstray/PycharmProjects/cjworkbench/server/websockets.py\", line 36, in websocket_connect\r\n    self.send({ \"type\": \"websocket.accept\"})\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/site-packages/channels/consumer.py\", line 107, in send\r\n    self.base_send(message)\r\n  File \"/Users/jonathanstray/anaconda/lib/python3.5/site-packages/asgiref/sync.py\", line 34, in __call__\r\n    \"You cannot use AsyncToSync in the same thread as an async event loop - \"\r\nRuntimeError: You cannot use AsyncToSync in the same thread as an async event loop - just await the async function directly.\r\n```\r\n\r\nThis is on OS X / django 1.11 / channels 2.0.2", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/944/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/944/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/943", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/943/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/943/comments", "events_url": "https://api.github.com/repos/django/channels/issues/943/events", "html_url": "https://github.com/django/channels/issues/943", "id": 301425504, "node_id": "MDU6SXNzdWUzMDE0MjU1MDQ=", "number": 943, "title": "Performance hit on websockets when upgrading to channels 2", "user": {"login": "remusmp", "id": 3688493, "node_id": "MDQ6VXNlcjM2ODg0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3688493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remusmp", "html_url": "https://github.com/remusmp", "followers_url": "https://api.github.com/users/remusmp/followers", "following_url": "https://api.github.com/users/remusmp/following{/other_user}", "gists_url": "https://api.github.com/users/remusmp/gists{/gist_id}", "starred_url": "https://api.github.com/users/remusmp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remusmp/subscriptions", "organizations_url": "https://api.github.com/users/remusmp/orgs", "repos_url": "https://api.github.com/users/remusmp/repos", "events_url": "https://api.github.com/users/remusmp/events{/privacy}", "received_events_url": "https://api.github.com/users/remusmp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-01T14:31:42Z", "updated_at": "2020-09-03T15:19:48Z", "closed_at": "2018-03-01T19:00:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've been running channels v1.x on a Raspberry pi for a couple of months now and I'm quite satisfied with the performance. However I wanted to test the new channels v2 and I noticed a performance hit when sending a message through websockets. I'm measuring send times in the following way:\r\n\r\nv2:\r\n```\r\nstart = time()\r\nMyConsumer.send(data)\r\nprint(\"Elapsed time send: {}\".format(time()-start))\r\n```\r\n\r\nwhere MyConsumer is:\r\n\r\n```\r\nclass AConsumer(AsyncJsonWebsocketConsumer):\r\n    groupName = None\r\n\r\n    def onConnect(self):\r\n        pass\r\n\r\n\r\n    async def connect(self):\r\n        self.onConnect()\r\n        await self.accept()\r\n        await self.channel_layer.group_add(self.groupName, self.channel_name)\r\n\r\n\r\n    async def disconnect(self, code):\r\n        await self.channel_layer.group_discard(\r\n            self.groupName,\r\n            self.channel_name,\r\n        )\r\n\r\n\r\n    async def group_message(self, event):\r\n        await self.send_json(event['json'])\r\n\r\n\r\n    @classmethod\r\n    def send(cls, json):\r\n        channelLayer = get_channel_layer()\r\n        async_to_sync(channelLayer.group_send)(cls.groupName, {\r\n            \"type\": \"group.message\",\r\n            \"json\": json\r\n        })\r\n\r\nclass MyConsumer(AConsumer):\r\n    groupName = \"test\"\r\n\r\n    def onConnect(self):\r\n        # I skip this code\r\n        pass\r\n```\r\n\r\nHere are the results with v2:\r\n```\r\nElapsed time send: 0.24855780601501465\r\nElapsed time send: 0.25104665756225586\r\nElapsed time send: 0.24920940399169922\r\nElapsed time send: 0.25311732292175293\r\nElapsed time send: 0.24442577362060547\r\nElapsed time send: 0.2445998191833496\r\nElapsed time send: 0.2364206314086914\r\nElapsed time send: 0.24710321426391602\r\nElapsed time send: 0.2509162425994873\r\nElapsed time send: 0.24585413932800293\r\n```\r\n\r\nServer is started this way:\r\n```\r\ndaphne -b 0.0.0.0 -p 8000 app.asgi:application\r\n```\r\n\r\nHere's how I measure time in v1.x:\r\n\r\n```\r\nstart = time()\r\nGroup('test').send({'text': json.dumps(data)})\r\nprint(\"Elapsed time send: {}\".format(time()-start))\r\n```\r\n\r\nHere are the results with v1.x (same data is being sent):\r\n```\r\nElapsed time send: 0.041016340255737305\r\nElapsed time send: 0.04160451889038086\r\nElapsed time send: 0.04173541069030762\r\nElapsed time send: 0.04191994667053223\r\nElapsed time send: 0.04093027114868164\r\nElapsed time send: 0.040888071060180664\r\nElapsed time send: 0.042260169982910156\r\nElapsed time send: 0.04185986518859863\r\nElapsed time send: 0.04205727577209473\r\nElapsed time send: 0.04068183898925781\r\n```\r\n\r\nServers are started this way in v1.x:\r\n```\r\nnohup daphne -b 0.0.0.0 -p 8000 app.asgi:channel_layer & > daphne.log\r\nnohup python manage.py runworker &\r\n```\r\n\r\npip versions in v1.x:\r\n```\r\nchannels==1.1.6\r\ndaphne==1.3.0\r\nDjango==2.0.2\r\nasgi-redis==1.4.2\r\nasgiref==1.1.2\r\nTwisted==17.5.0\r\n```\r\n\r\npip versions in v2:\r\n```\r\nchannels==2.0.2\r\nchannels-redis==2.1.0\r\ndaphne==2.0.4\r\nDjango==2.0.2\r\naioredis==1.0.0\r\nasgiref==2.1.6\r\nTwisted==17.9.0\r\n```\r\n\r\nCould you give me a hint what to change in order to have a similar performance as in v1.x? Many thanks in advance!\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/943/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/929", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/929/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/929/comments", "events_url": "https://api.github.com/repos/django/channels/issues/929/events", "html_url": "https://github.com/django/channels/issues/929", "id": 299939015, "node_id": "MDU6SXNzdWUyOTk5MzkwMTU=", "number": 929, "title": "Fix and improve OriginValidator", "user": {"login": "bluetech", "id": 1223550, "node_id": "MDQ6VXNlcjEyMjM1NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1223550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluetech", "html_url": "https://github.com/bluetech", "followers_url": "https://api.github.com/users/bluetech/followers", "following_url": "https://api.github.com/users/bluetech/following{/other_user}", "gists_url": "https://api.github.com/users/bluetech/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluetech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluetech/subscriptions", "organizations_url": "https://api.github.com/users/bluetech/orgs", "repos_url": "https://api.github.com/users/bluetech/repos", "events_url": "https://api.github.com/users/bluetech/events{/privacy}", "received_events_url": "https://api.github.com/users/bluetech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 220071672, "node_id": "MDU6TGFiZWwyMjAwNzE2NzI=", "url": "https://api.github.com/repos/django/channels/labels/enhancement", "name": "enhancement", "color": "1d76db", "default": true, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-24T12:54:07Z", "updated_at": "2018-05-26T08:38:00Z", "closed_at": "2018-05-26T08:38:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "> Your OS and runtime environment, and browser if applicable\r\n\r\nLinux, Firefox.\r\n\r\n> The versions of Channels, Daphne, Django, Twisted, and your ASGI backend (channels_redis normally)\r\n\r\n- Channels 2.0.2 \r\n- Django 2.0.2\r\n\r\n> How you're running Channels (runserver? daphne/runworker? Nginx/Apache in front?)\r\n\r\nAll of the above.\r\n\r\n> What you expected to happen vs. what actually happened\r\n\r\nRegarding this example https://github.com/django/channels/blob/d6643d96dd59e153cda13681a6d5a8963b9d577c/docs/topics/security.rst#websockets\r\n\r\n- The correct syntax for subdomain wildcard is `.goodsite.com` not `*.goodsite.com` ([reference](https://docs.djangoproject.com/en/2.0/ref/settings/#allowed-hosts)).\r\n\r\n- `.goodsite.com` includes `goodsite.com` so `goodsite.com` is redundant.\r\n\r\n- It should perhaps be mentioned that `*` is a special value that allows all.\r\n\r\n---\r\n\r\nRegarding `OriginValidator` itself, why does it only validate the domain rather than the full origin? (An [Origin](https://tools.ietf.org/html/rfc6454) is `scheme://domain:port`).\r\n\r\nIn terms of the web security model, the following are all different origins:\r\n\r\n```\r\nhttp://example.com:80\r\nhttp://example.com:8000\r\nhttps://example.com:443\r\nhttps://example.com:8443\r\n```\r\n\r\nand it should be possible to allow any subset of those rather than all or none.\r\n\r\nI know that Django's `ALLOWED_HOSTS` disregards the port (a [Host](https://tools.ietf.org/html/rfc7230#section-5.4) is `domain:port`, no scheme). I don't really agree with that decision, however I don't think it applies to Origins as well: `ALLOWED_HOSTS` can be seen as just an additional protection layer over what the webserver should be doing already; but the list of allowed origins is an explicit policy decision unrelated to the webserver, namely, which 3rd party web sites I want to allow to connect to my WebSocket server.", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/929/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/924", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/924/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/924/comments", "events_url": "https://api.github.com/repos/django/channels/issues/924/events", "html_url": "https://github.com/django/channels/issues/924", "id": 299211266, "node_id": "MDU6SXNzdWUyOTkyMTEyNjY=", "number": 924, "title": "self.channel_name doesn't exist in instance?", "user": {"login": "boscorona", "id": 8681317, "node_id": "MDQ6VXNlcjg2ODEzMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/8681317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boscorona", "html_url": "https://github.com/boscorona", "followers_url": "https://api.github.com/users/boscorona/followers", "following_url": "https://api.github.com/users/boscorona/following{/other_user}", "gists_url": "https://api.github.com/users/boscorona/gists{/gist_id}", "starred_url": "https://api.github.com/users/boscorona/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boscorona/subscriptions", "organizations_url": "https://api.github.com/users/boscorona/orgs", "repos_url": "https://api.github.com/users/boscorona/repos", "events_url": "https://api.github.com/users/boscorona/events{/privacy}", "received_events_url": "https://api.github.com/users/boscorona/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-22T03:38:35Z", "updated_at": "2018-02-28T19:11:51Z", "closed_at": "2018-02-28T19:11:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "- OSX Sierra \r\n- Channels  (2.0.2), Django 2.0 \r\n- Expecting self.channels_name to get the instances channel_name, instead got stack trace below\r\n- Using channels as server\r\n\r\n2018-02-21 19:35:41,474 - ERROR - server - Exception inside application: 'ExecutionList' object has no attribute 'channel_name'\r\nFile \"/usr/local/lib/python3.6/site-packages/channels/consumer.py\", line 56, in __call__\r\nawait await_many_dispatch([receive], self.dispatch)\r\nFile \"/usr/local/lib/python3.6/site-packages/channels/utils.py\", line 48, in await_many_dispatch\r\nawait dispatch(result)\r\nFile \"/usr/local/lib/python3.6/site-packages/asgiref/sync.py\", line 110, in __call__\r\n return await asyncio.wait_for(future, timeout=None)\r\nFile \"/usr/local/lib/python3.6/asyncio/tasks.py\", line 339, in wait_for\r\nreturn (yield from fut)\r\n File \"/usr/local/lib/python3.6/concurrent/futures/thread.py\", line 56, in run\r\n result = self.fn(*self.args, **self.kwargs)\r\nFile \"/usr/local/lib/python3.6/site-packages/channels/db.py\", line 13, in thread_handler\r\n return super().thread_handler(loop, *args, **kwargs)\r\n File \"/usr/local/lib/python3.6/site-packages/asgiref/sync.py\", line 125, in thread_handler\r\nreturn self.func(*args, **kwargs)\r\nFile \"/usr/local/lib/python3.6/site-packages/channels/consumer.py\", line 99, in dispatch\r\nhandler(message)\r\nFile \"/usr/local/lib/python3.6/site-packages/channels/generic/websocket.py\", line 19, in websocket_connect\r\n self.connect()\r\nFile \"/home/smart_dashboard/backend/apps/core/consumers.py\", line 75, in connect\r\nasync_to_sync(self.group_add)(\"scheduler\", self.channel_name)\r\n 'ExecutionList' object has no attribute 'channel_name'\r\nERROR   server                         Exception inside application: 'ExecutionList' object has no attribute 'channel_name'\r\nFile \"/usr/local/lib/python3.6/site-packages/channels/consumer.py\", line 56, in __call__\r\nawait await_many_dispatch([receive], self.dispatch)\r\nFile \"/usr/local/lib/python3.6/site-packages/channels/utils.py\", line 48, in await_many_dispatch\r\nawait dispatch(result)\r\nFile \"/usr/local/lib/python3.6/site-packages/asgiref/sync.py\", line 110, in __call__\r\nreturn await asyncio.wait_for(future, timeout=None)\r\nFile \"/usr/local/lib/python3.6/asyncio/tasks.py\", line 339, in wait_for\r\nreturn (yield from fut)\r\nFile \"/usr/local/lib/python3.6/concurrent/futures/thread.py\", line 56, in run\r\nresult = self.fn(*self.args, **self.kwargs)\r\nFile \"/usr/local/lib/python3.6/site-packages/channels/db.py\", line 13, in thread_handler\r\nreturn super().thread_handler(loop, *args, **kwargs)\r\nFile \"/usr/local/lib/python3.6/site-packages/asgiref/sync.py\", line 125, in thread_handler\r\nreturn self.func(*args, **kwargs)\r\nFile \"/usr/local/lib/python3.6/site-packages/channels/consumer.py\", line 99, in dispatch\r\nhandler(message)\r\n File \"/usr/local/lib/python3.6/site-packages/channels/generic/websocket.py\", line 19, in websocket_connect\r\n  self.connect()\r\n File \"/home/smart_dashboard/backend/apps/core/consumers.py\", line 75, in connect\r\n async_to_sync(self.group_add)(\"scheduler\", self.channel_name)\r\n 'ExecutionList' object has no attribute 'channel_name'\r\n [2018/02/21 19:35:41] WebSocket DISCONNECT /executions/ [172.18.0.1:57386]\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/924/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/918", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/918/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/918/comments", "events_url": "https://api.github.com/repos/django/channels/issues/918/events", "html_url": "https://github.com/django/channels/issues/918", "id": 298509341, "node_id": "MDU6SXNzdWUyOTg1MDkzNDE=", "number": 918, "title": "WebsocketCommunicator does not split out query string", "user": {"login": "bruecksen", "id": 3972738, "node_id": "MDQ6VXNlcjM5NzI3Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/3972738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bruecksen", "html_url": "https://github.com/bruecksen", "followers_url": "https://api.github.com/users/bruecksen/followers", "following_url": "https://api.github.com/users/bruecksen/following{/other_user}", "gists_url": "https://api.github.com/users/bruecksen/gists{/gist_id}", "starred_url": "https://api.github.com/users/bruecksen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bruecksen/subscriptions", "organizations_url": "https://api.github.com/users/bruecksen/orgs", "repos_url": "https://api.github.com/users/bruecksen/repos", "events_url": "https://api.github.com/users/bruecksen/events{/privacy}", "received_events_url": "https://api.github.com/users/bruecksen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-20T08:35:29Z", "updated_at": "2018-03-05T18:39:27Z", "closed_at": "2018-03-05T18:39:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "At the moment I'm trying to fix my test cases in channels 2 and found out, that the `WebsocketComunicator` doesn't consider any query parameters. Is it somehow possible to pass a query parameter into the scope? I implemented a token based authentication middleware which is extracting the token from a query string. \r\n\r\nTesting a custom authentication middleware should be possible in Channels. At the moment it is not  possible to write a test case for the custom authentication example from the documentation: \r\nhttp://channels.readthedocs.io/en/latest/topics/authentication.html#custom-authentication\r\n\r\nI'm using:\r\n```\r\nchannels==2.0.2\r\nchannels-redis==2.0.3\r\ndaphne==2.0.3\r\n```\r\n\r\nThanks for any help or advice.", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/918/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/911", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/911/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/911/comments", "events_url": "https://api.github.com/repos/django/channels/issues/911/events", "html_url": "https://github.com/django/channels/issues/911", "id": 298180282, "node_id": "MDU6SXNzdWUyOTgxODAyODI=", "number": 911, "title": "404 for non existing static files", "user": {"login": "dgilge", "id": 33256939, "node_id": "MDQ6VXNlcjMzMjU2OTM5", "avatar_url": "https://avatars.githubusercontent.com/u/33256939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgilge", "html_url": "https://github.com/dgilge", "followers_url": "https://api.github.com/users/dgilge/followers", "following_url": "https://api.github.com/users/dgilge/following{/other_user}", "gists_url": "https://api.github.com/users/dgilge/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgilge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgilge/subscriptions", "organizations_url": "https://api.github.com/users/dgilge/orgs", "repos_url": "https://api.github.com/users/dgilge/repos", "events_url": "https://api.github.com/users/dgilge/events{/privacy}", "received_events_url": "https://api.github.com/users/dgilge/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159992, "node_id": "MDU6TGFiZWw0MDcxNTk5OTI=", "url": "https://api.github.com/repos/django/channels/labels/blocked/needs-investigation", "name": "blocked/needs-investigation", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-19T07:17:14Z", "updated_at": "2018-04-12T03:42:46Z", "closed_at": "2018-04-12T03:42:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I ran into this issue using the `ChannelsLiveServerTestCase`. (`runserver` might also be affected, I didn\u2019t check it.) As far as I can see all URLs which match the `STATIC_URL` but match no file raise this exception:\r\n\r\n```\r\nException inside application: 'NoneType' object has no attribute 'items'\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py\", line 241, in _step\r\n    result = coro.throw(exc)\r\n  File \".venv/lib/python3.5/site-packages/channels/http.py\", line 191, in __call__\r\n    await self.handle(body)\r\n  File \".venv/lib/python3.5/site-packages/asgiref-2.1.4-py3.5.egg/asgiref/sync.py\", line 95, in __call__\r\n    return await asyncio.wait_for(future, timeout=None)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py\", line 381, in wait_for\r\n    return (yield from fut)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 380, in __iter__\r\n    yield self  # This tells Task to wait for completion.\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py\", line 304, in _wakeup\r\n    future.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 293, in result\r\n    raise self._exception\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/concurrent/futures/thread.py\", line 55, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \".venv/lib/python3.5/site-packages/asgiref-2.1.4-py3.5.egg/asgiref/sync.py\", line 110, in thread_handler\r\n    return self.func(*args, **kwargs)\r\n  File \".venv/lib/python3.5/site-packages/channels/http.py\", line 226, in handle\r\n    for response_message in self.encode_response(response):\r\n  File \".venv/lib/python3.5/site-packages/channels/http.py\", line 254, in encode_response\r\n    for header, value in response.items():\r\n  'NoneType' object has no attribute 'items'\r\n```\r\n\r\nMy packages:\r\n\r\n```\r\n...\r\n  - channels [required: ~=2.0, installed: 2.0.2] -> I just installed the latest code from master\r\n    - asgiref [required: ~=2.1, installed: 2.1.5] -> I just installed the latest code from master\r\n      - async-timeout [required: ~=2.0, installed: 2.0.0]\r\n    - daphne [required: ~=2.0, installed: 2.0.3]\r\n      - asgiref [required: ~=2.0, installed: 2.1.5]\r\n        - async-timeout [required: ~=2.0, installed: 2.0.0]\r\n      - autobahn [required: >=0.18, installed: 17.10.1]\r\n        - six [required: >=1.10.0, installed: 1.11.0]\r\n        - txaio [required: >=2.7.0, installed: 2.8.2]\r\n          - six [required: Any, installed: 1.11.0]\r\n      - twisted [required: >=17.5, installed: 17.9.0]\r\n        - Automat [required: >=0.3.0, installed: 0.6.0]\r\n          - attrs [required: Any, installed: 17.4.0]\r\n          - six [required: Any, installed: 1.11.0]\r\n        - constantly [required: >=15.1, installed: 15.1.0]\r\n        - hyperlink [required: >=17.1.1, installed: 17.3.1]\r\n        - incremental [required: >=16.10.1, installed: 17.5.0]\r\n        - zope.interface [required: >=4.0.2, installed: 4.4.3]\r\n          - setuptools [required: Any, installed: 38.5.1]\r\n    - Django [required: >=1.11, installed: 2.0.2]\r\n      - pytz [required: Any, installed: 2018.3]\r\n  - channels-redis [required: ~=2.0, installed: 2.0.2]\r\n    - aioredis [required: ~=1.0.0, installed: 1.0.0]\r\n      - async-timeout [required: Any, installed: 2.0.0]\r\n      - hiredis [required: Any, installed: 0.2.0]\r\n    - asgiref [required: ~=2.1, installed: 2.1.5]\r\n      - async-timeout [required: ~=2.0, installed: 2.0.0]\r\n    - channels [required: ~=2.0, installed: 2.0.2]\r\n      - asgiref [required: ~=2.1, installed: 2.1.5]\r\n        - async-timeout [required: ~=2.0, installed: 2.0.0]\r\n      - daphne [required: ~=2.0, installed: 2.0.3]\r\n        - asgiref [required: ~=2.0, installed: 2.1.5]\r\n          - async-timeout [required: ~=2.0, installed: 2.0.0]\r\n        - autobahn [required: >=0.18, installed: 17.10.1]\r\n          - six [required: >=1.10.0, installed: 1.11.0]\r\n          - txaio [required: >=2.7.0, installed: 2.8.2]\r\n            - six [required: Any, installed: 1.11.0]\r\n        - twisted [required: >=17.5, installed: 17.9.0]\r\n          - Automat [required: >=0.3.0, installed: 0.6.0]\r\n            - attrs [required: Any, installed: 17.4.0]\r\n            - six [required: Any, installed: 1.11.0]\r\n          - constantly [required: >=15.1, installed: 15.1.0]\r\n          - hyperlink [required: >=17.1.1, installed: 17.3.1]\r\n          - incremental [required: >=16.10.1, installed: 17.5.0]\r\n          - zope.interface [required: >=4.0.2, installed: 4.4.3]\r\n            - setuptools [required: Any, installed: 38.5.1]\r\n      - Django [required: >=1.11, installed: 2.0.2]\r\n        - pytz [required: Any, installed: 2018.3]\r\n    - msgpack [required: ~=0.5.0, installed: 0.5.4]\r\n  - django [required: ~=2.0, installed: 2.0.2]\r\n    - pytz [required: Any, installed: 2018.3]\r\npytest-asyncio==0.8.0\r\n  - async-generator [required: >=1.3, installed: 1.9]\r\n  - pytest [required: >=3.0.6, installed: 3.4.0]\r\n    - attrs [required: >=17.2.0, installed: 17.4.0]\r\n    - pluggy [required: >=0.5,<0.7, installed: 0.6.0]\r\n    - py [required: >=1.5.0, installed: 1.5.2]\r\n    - setuptools [required: Any, installed: 38.5.1]\r\n    - six [required: >=1.10.0, installed: 1.11.0]\r\npytest-django==3.1.2\r\n  - pytest [required: >=2.9, installed: 3.4.0]\r\n    - attrs [required: >=17.2.0, installed: 17.4.0]\r\n    - pluggy [required: >=0.5,<0.7, installed: 0.6.0]\r\n    - py [required: >=1.5.0, installed: 1.5.2]\r\n    - setuptools [required: Any, installed: 38.5.1]\r\n    - six [required: >=1.10.0, installed: 1.11.0]\r\n...\r\nselenium==3.9.0\r\n```\r\n\r\nHere my settings (they are used for py.test, not as a normal project):\r\n\r\n```python\r\nimport os\r\n\r\n\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\n\r\n\r\nSECRET_KEY = 'dummy'\r\n\r\n\r\nINSTALLED_APPS = (\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.staticfiles',\r\n    'channels',\r\n    'rest_framework',\r\n    'tests',\r\n)\r\n\r\n\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.db.backends.sqlite3',\r\n    }\r\n}\r\n\r\n\r\nMIDDLEWARE = [\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n]\r\n\r\n\r\nCHANNEL_LAYERS = {\r\n    'default': {\r\n        'BACKEND': 'channels.layers.InMemoryChannelLayer',\r\n    },\r\n}\r\n\r\n\r\nASGI_APPLICATION = 'tests.routing.application'\r\n\r\n\r\nROOT_URLCONF = 'tests.urls'\r\n\r\n\r\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static/apps')\r\n\r\nSTATIC_URL = '/static/'\r\n\r\n\r\nTEMPLATES = [\r\n    {\r\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n        'DIRS': [\r\n            os.path.join(BASE_DIR, 'templates'),\r\n        ],\r\n        'APP_DIRS': True,\r\n        'OPTIONS': {\r\n            'context_processors': [\r\n                'django.template.context_processors.debug',\r\n                'django.template.context_processors.request',\r\n                'django.contrib.auth.context_processors.auth',\r\n            ],\r\n        },\r\n    },\r\n]\r\n\r\n\r\nLOGOUT_REDIRECT_URL = '/auth/login/'\r\n```", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/911/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/908", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/908/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/908/comments", "events_url": "https://api.github.com/repos/django/channels/issues/908/events", "html_url": "https://github.com/django/channels/issues/908", "id": 297776989, "node_id": "MDU6SXNzdWUyOTc3NzY5ODk=", "number": 908, "title": "Testing with pytest-asyncio raises RuntimeError: Event loop is closed", "user": {"login": "kradem", "id": 7360633, "node_id": "MDQ6VXNlcjczNjA2MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/7360633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kradem", "html_url": "https://github.com/kradem", "followers_url": "https://api.github.com/users/kradem/followers", "following_url": "https://api.github.com/users/kradem/following{/other_user}", "gists_url": "https://api.github.com/users/kradem/gists{/gist_id}", "starred_url": "https://api.github.com/users/kradem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kradem/subscriptions", "organizations_url": "https://api.github.com/users/kradem/orgs", "repos_url": "https://api.github.com/users/kradem/repos", "events_url": "https://api.github.com/users/kradem/events{/privacy}", "received_events_url": "https://api.github.com/users/kradem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300084, "node_id": "MDU6TGFiZWw0MzEzMDAwODQ=", "url": "https://api.github.com/repos/django/channels/labels/exp/advanced", "name": "exp/advanced", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 38, "created_at": "2018-02-16T12:58:39Z", "updated_at": "2018-02-25T00:48:11Z", "closed_at": "2018-02-25T00:48:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, this is a duplicate [of this question](https://stackoverflow.com/questions/48790660/testing-channels-2-0-with-pytest-asyncio-getting-runtimeerror-event-loop-is-clo).\r\n\r\nI'm trying to test new `channels` 2.0 with `pytest-asyncio` (0.8.0). If I place different assertions in the same function like:\r\n\r\n    import json\r\n    import pytest\r\n    from concurrent.futures._base import TimeoutError\r\n    from channels.testing import WebsocketCommunicator\r\n    from someapp.consumers import MyConsumer\r\n\r\n\r\n    @pytest.mark.django_db\r\n    @pytest.mark.asyncio\r\n    async def setup_database_and_websocket():\r\n        path = 'foo'\r\n        communicator = WebsocketCommunicator(MyConsumer, path)\r\n        connected, subprotocol = await communicator.connect()\r\n        assert connected\r\n        return communicator\r\n\r\n\r\n    @pytest.mark.django_db\r\n    @pytest.mark.asyncio\r\n    async def test_1_and_2():\r\n        communicator = await setup_database_and_websocket()\r\n        sent = {\"message\": 'abc'}\r\n        await communicator.send_json_to(sent)\r\n        with pytest.raises(TimeoutError):\r\n            await communicator.receive_from()\r\n        await communicator.send_input({\r\n            \"type\": \"websocket.disconnect\",\r\n            \"code\": 1000,\r\n        })\r\n\r\n        communicator = await setup_database_and_websocket()\r\n        sent = {\"message\": 1}\r\n        await communicator.send_json_to(sent)\r\n        with pytest.raises(TimeoutError):\r\n            await communicator.receive_from()\r\n        await communicator.send_input({\r\n            \"type\": \"websocket.disconnect\",\r\n            \"code\": 1000,\r\n        })\r\n\r\nthen I'm not getting an error. But if I separate test cases like:\r\n\r\n    @pytest.mark.django_db\r\n    @pytest.mark.asyncio\r\n    async def test_1():\r\n        communicator = await setup_database_and_websocket()\r\n        sent = {\"message\": 'abc'}\r\n        await communicator.send_json_to(sent)\r\n        with pytest.raises(TimeoutError):\r\n            await communicator.receive_from()\r\n        await communicator.send_input({\r\n            \"type\": \"websocket.disconnect\",\r\n            \"code\": 1000,\r\n        })\r\n\r\n\r\n    @pytest.mark.django_db\r\n    @pytest.mark.asyncio\r\n    async def test_2():\r\n        communicator = await setup_database_and_websocket()\r\n        sent = {\"message\": 1}\r\n        await communicator.send_json_to(sent)\r\n        with pytest.raises(TimeoutError):\r\n            await communicator.receive_from()\r\n        await communicator.send_input({\r\n            \"type\": \"websocket.disconnect\",\r\n            \"code\": 1000,\r\n        })\r\n\r\nthen I'm getting following error upon the second `receive_form` call:\r\n\r\n    with pytest.raises(TimeoutError):\r\n    >           await communicator.receive_from()\r\n\r\n    someapp/tests/test_consumers_async.py:106: \r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/channels/testing/websocket.py:71: in receive_from\r\n    response = await self.receive_output(timeout)\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/asgiref/testing.py:66: in receive_output\r\n    self.future.result()\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/channels/consumer.py:54: in __call__\r\n    await await_many_dispatch([receive, self.channel_receive], self.dispatch)\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/channels/utils.py:48: in await_many_dispatch\r\n    await dispatch(result)\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/asgiref/sync.py:95: in __call__\r\n    return await asyncio.wait_for(future, timeout=None)\r\n    /usr/lib/python3.6/asyncio/tasks.py:339: in wait_for\r\n    return (yield from fut)\r\n    /usr/lib/python3.6/concurrent/futures/thread.py:56: in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/channels/db.py:13: in thread_handler\r\n    return super().thread_handler(loop, *args, **kwargs)\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/asgiref/sync.py:110: in thread_handler\r\n    return self.func(*args, **kwargs)\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/channels/consumer.py:99: in dispatch\r\n    handler(message)\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/channels/generic/websocket.py:19: in websocket_connect\r\n    self.connect()\r\n    someapp/consumers.py:22: in connect\r\n    self.group_name, self.channel_name)\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/asgiref/sync.py:49: in __call__\r\n    return call_result.result()\r\n    /usr/lib/python3.6/concurrent/futures/_base.py:432: in result\r\n    return self.__get_result()\r\n    /usr/lib/python3.6/concurrent/futures/_base.py:384: in __get_result\r\n    raise self._exception\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/asgiref/sync.py:63: in main_wrap\r\n    result = await self.awaitable(*args, **kwargs)\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/channels_redis/core.py:290: in group_add\r\n    await connection.expire(group_key, self.group_expiry)\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/aioredis/commands/__init__.py:152: in __exit__\r\n    self._release_callback(conn)\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/aioredis/pool.py:361: in release\r\n    conn.close()\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/aioredis/connection.py:352: in close\r\n    self._do_close(ConnectionForcedCloseError())\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/aioredis/connection.py:359: in _do_close\r\n    self._writer.transport.close()\r\n    /usr/lib/python3.6/asyncio/selector_events.py:621: in close\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n    /usr/lib/python3.6/asyncio/base_events.py:574: in call_soon\r\n    self._check_closed()\r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n    self = <_UnixSelectorEventLoop running=False closed=True debug=False>\r\n\r\n    def _check_closed(self):\r\n    if self._closed:\r\n    >           raise RuntimeError('Event loop is closed')\r\n    E           RuntimeError: Event loop is closed\r\n\r\n    /usr/lib/python3.6/asyncio/base_events.py:357: RuntimeError\r\n\r\nAlso if I do (as in https://channels.readthedocs.io/en/latest/topics/testing.html):\r\n\r\n    await communicator.disconnect()\r\n\r\ninstead of:\r\n\r\n    await communicator.send_input({\r\n        \"type\": \"websocket.disconnect\",\r\n        \"code\": 1000,\r\n    })\r\n\r\nthen the following error is raised:\r\n\r\n    >       await communicator.disconnect()\r\n\r\n    someapp/tests/test_consumers_async.py:96: \r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/channels/testing/websocket.py:100: in disconnect\r\n        await self.future\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/channels/consumer.py:54: in __call__\r\n        await await_many_dispatch([receive, self.channel_receive], self.dispatch)\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/channels/utils.py:48: in await_many_dispatch\r\n        await dispatch(result)\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/asgiref/sync.py:95: in __call__\r\n        return await asyncio.wait_for(future, timeout=None)\r\n    /usr/lib/python3.6/asyncio/tasks.py:339: in wait_for\r\n        return (yield from fut)\r\n    /usr/lib/python3.6/concurrent/futures/thread.py:56: in run\r\n        result = self.fn(*self.args, **self.kwargs)\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/channels/db.py:13: in thread_handler\r\n        return super().thread_handler(loop, *args, **kwargs)\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/asgiref/sync.py:110: in thread_handler\r\n        return self.func(*args, **kwargs)\r\n    ../../../.virtualenvs/some_env/lib/python3.6/site-packages/channels/consumer.py:99: in dispatch\r\n        handler(message)\r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n    self = <someapp.consumers.ChatConsumer object at 0x7f38fcc55240>\r\n    message = {'code': 1000, 'type': 'websocket.disconnect'}\r\n\r\n        def websocket_disconnect(self, message):\r\n            \"\"\"\r\n                Called when a WebSocket connection is closed. Base level so you don't\r\n                need to call super() all the time.\r\n                \"\"\"\r\n            # TODO: group leaving\r\n    >       self.disconnect(message[\"code\"])\r\n    E       TypeError: disconnect() takes 1 positional argument but 2 were given\r\n\r\nWhat should I do to separate those test cases in the respective individual test functions?", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/908/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/905", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/905/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/905/comments", "events_url": "https://api.github.com/repos/django/channels/issues/905/events", "html_url": "https://github.com/django/channels/issues/905", "id": 296942404, "node_id": "MDU6SXNzdWUyOTY5NDI0MDQ=", "number": 905, "title": "postgresql  deadlock error", "user": {"login": "brianmay", "id": 112729, "node_id": "MDQ6VXNlcjExMjcyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/112729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianmay", "html_url": "https://github.com/brianmay", "followers_url": "https://api.github.com/users/brianmay/followers", "following_url": "https://api.github.com/users/brianmay/following{/other_user}", "gists_url": "https://api.github.com/users/brianmay/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianmay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianmay/subscriptions", "organizations_url": "https://api.github.com/users/brianmay/orgs", "repos_url": "https://api.github.com/users/brianmay/repos", "events_url": "https://api.github.com/users/brianmay/events{/privacy}", "received_events_url": "https://api.github.com/users/brianmay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-14T01:07:25Z", "updated_at": "2018-02-15T05:35:42Z", "closed_at": "2018-02-15T05:35:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This happens when running tests. Not sure I want to spend too much time investigating why this happens until issues like #897 are fixed. Just want to document this for now.\r\n\r\n```\r\n[2018-02-14 12:01:32,887: ERROR/django.request] Internal Server Error: /api/internal/projects/\r\nTraceback (most recent call last):\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/django/db/backends/utils.py\", line 64, in execute\r\n    return self.cursor.execute(sql, params)\r\npsycopg2.extensions.TransactionRollbackError: deadlock detected\r\nLINE 1: ...ion\".\"codename\" FROM \"auth_permission\" INNER JOIN \"accounts_...\r\n                                                             ^\r\nDETAIL:  Process 6613 waits for AccessShareLock on relation 2476770 of database 2475262; blocked by process 6545.\r\nProcess 6545 waits for AccessExclusiveLock on relation 2476989 of database 2475262; blocked by process 6613.\r\nHINT:  See server log for query details.\r\n\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/django/core/handlers/base.py\", line 187, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/lib/python3.6/contextlib.py\", line 52, in inner\r\n    return func(*args, **kwds)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/rest_framework/viewsets.py\", line 95, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/rest_framework/views.py\", line 494, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/rest_framework/views.py\", line 454, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/rest_framework/views.py\", line 491, in dispatch\r\n    response = handler(request, *args, **kwargs)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/rest_framework/mixins.py\", line 45, in list\r\n    return self.get_paginated_response(serializer.data)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/rest_framework/serializers.py\", line 742, in data\r\n    ret = super(ListSerializer, self).data\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/rest_framework/serializers.py\", line 262, in data\r\n    self._data = self.to_representation(self.instance)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/rest_framework/serializers.py\", line 660, in to_representation\r\n    self.child.to_representation(item) for item in iterable\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/rest_framework/serializers.py\", line 660, in <listcomp>\r\n    self.child.to_representation(item) for item in iterable\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/rest_framework/serializers.py\", line 504, in to_representation\r\n    ret[field.field_name] = field.to_representation(attribute)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/rest_framework/serializers.py\", line 504, in to_representation\r\n    ret[field.field_name] = field.to_representation(attribute)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/rest_framework/relations.py\", line 518, in to_representation\r\n    for value in iterable\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/django/db/models/query.py\", line 250, in __iter__\r\n    self._fetch_all()\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/django/db/models/query.py\", line 1118, in _fetch_all\r\n    self._result_cache = list(self._iterable_class(self))\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/django/db/models/query.py\", line 53, in __iter__\r\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/django/db/models/sql/compiler.py\", line 899, in execute_sql\r\n    raise original_exception\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/django/db/models/sql/compiler.py\", line 889, in execute_sql\r\n    cursor.execute(sql, params)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/django/db/backends/utils.py\", line 79, in execute\r\n    return super(CursorDebugWrapper, self).execute(sql, params)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/django/db/backends/utils.py\", line 64, in execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/django/db/utils.py\", line 94, in __exit__\r\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/django/utils/six.py\", line 685, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/django/db/backends/utils.py\", line 64, in execute\r\n    return self.cursor.execute(sql, params)\r\ndjango.db.utils.OperationalError: deadlock detected\r\nLINE 1: ...ion\".\"codename\" FROM \"auth_permission\" INNER JOIN \"accounts_...\r\n                                                             ^\r\nDETAIL:  Process 6613 waits for AccessShareLock on relation 2476770 of database 2475262; blocked by process 6545.\r\nProcess 6545 waits for AccessExclusiveLock on relation 2476989 of database 2475262; blocked by process 6613.\r\nHINT:  See server log for query details.\r\n```", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/905/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/897", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/897/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/897/comments", "events_url": "https://api.github.com/repos/django/channels/issues/897/events", "html_url": "https://github.com/django/channels/issues/897", "id": 296238405, "node_id": "MDU6SXNzdWUyOTYyMzg0MDU=", "number": 897, "title": "ChannelsLiveServerTestCase ReactorNotRestartable exception", "user": {"login": "brianmay", "id": 112729, "node_id": "MDQ6VXNlcjExMjcyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/112729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianmay", "html_url": "https://github.com/brianmay", "followers_url": "https://api.github.com/users/brianmay/followers", "following_url": "https://api.github.com/users/brianmay/following{/other_user}", "gists_url": "https://api.github.com/users/brianmay/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianmay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianmay/subscriptions", "organizations_url": "https://api.github.com/users/brianmay/orgs", "repos_url": "https://api.github.com/users/brianmay/repos", "events_url": "https://api.github.com/users/brianmay/events{/privacy}", "received_events_url": "https://api.github.com/users/brianmay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300084, "node_id": "MDU6TGFiZWw0MzEzMDAwODQ=", "url": "https://api.github.com/repos/django/channels/labels/exp/advanced", "name": "exp/advanced", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 47, "created_at": "2018-02-11T23:44:31Z", "updated_at": "2018-02-28T07:53:41Z", "closed_at": "2018-02-28T07:53:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Yes, I updated all channels related stuff this morning :-)\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/nose/suite.py\", line 210, in run\r\n    self.setUp()\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/nose/suite.py\", line 293, in setUp\r\n    self.setupContext(ancestor)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/nose/suite.py\", line 316, in setupContext\r\n    try_run(context, names)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/nose/util.py\", line 471, in try_run\r\n    return func()\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/django/test/testcases.py\", line 1352, in setUpClass\r\n    raise cls.server_thread.error\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/channels/testing/live.py\", line 28, in run\r\n    self.daphne.run()\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/daphne/server.py\", line 132, in run\r\n    reactor.run(installSignalHandlers=self.signal_handlers)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/twisted/internet/asyncioreactor.py\", line 266, in run\r\n    self.startRunning(installSignalHandlers=installSignalHandlers)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/twisted/internet/base.py\", line 1222, in startRunning\r\n    ReactorBase.startRunning(self)\r\n  File \"/home/brian/.pyenv/versions/3.6.4/envs/myrocc/lib/python3.6/site-packages/twisted/internet/base.py\", line 730, in startRunning\r\n    raise error.ReactorNotRestartable()\r\ntwisted.internet.error.ReactorNotRestartable: \r\n```", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/897/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/889", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/889/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/889/comments", "events_url": "https://api.github.com/repos/django/channels/issues/889/events", "html_url": "https://github.com/django/channels/issues/889", "id": 295609136, "node_id": "MDU6SXNzdWUyOTU2MDkxMzY=", "number": 889, "title": "RuntimeError: Event loop is closed triggered randomly while trying to run tests form the original repo", "user": {"login": "sfehlandt", "id": 1159075, "node_id": "MDQ6VXNlcjExNTkwNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1159075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfehlandt", "html_url": "https://github.com/sfehlandt", "followers_url": "https://api.github.com/users/sfehlandt/followers", "following_url": "https://api.github.com/users/sfehlandt/following{/other_user}", "gists_url": "https://api.github.com/users/sfehlandt/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfehlandt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfehlandt/subscriptions", "organizations_url": "https://api.github.com/users/sfehlandt/orgs", "repos_url": "https://api.github.com/users/sfehlandt/repos", "events_url": "https://api.github.com/users/sfehlandt/events{/privacy}", "received_events_url": "https://api.github.com/users/sfehlandt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-08T17:57:03Z", "updated_at": "2018-02-08T18:41:30Z", "closed_at": "2018-02-08T18:41:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, while trying to upgrade my project from Channels 1.x to Channels 2.x using pytest to test my consumers I found the following error after the tests pass:\r\n\r\n`\r\n======================================= 1 passed in 0.03 seconds =======================================\r\nexception calling callback for <Future at 0x7f38bd050be0 state=finished returned list>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/concurrent/futures/_base.py\", line 324, in _invoke_callbacks\r\n    callback(self)\r\n  File \"/usr/lib/python3.6/asyncio/futures.py\", line 419, in _call_set_state\r\n    dest_loop.call_soon_threadsafe(_set_state, destination, source)\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 620, in call_soon_threadsafe\r\n    self._check_closed()\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 357, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\n`\r\n\r\nWhile trying to find the cause of this error, I copied and pasted in my project the test_generic.websockets.py file form this repo. Then I only executed those tests: `pytest myproject/test_generic_websocket.py`\r\n\r\nAs expected, the tests pass and I do not see the errors. \r\nHowever, If I delete (or comment) the tests and only run the test for the AsyncWebsocketConsumer I see the errors again.\r\n\r\nIn order to isolate possible causes I created a clean minimal working example: https://github.com/sfehlandt/channels2_example\r\nThis is just a Django Channels 2 project with 1 app and I copied the entire test_generic.websockets.py file from the channels repo. I reproduced the configuration from the instructions on the documentation.\r\n\r\nAgain, If I run all the test I have no issues, but if I run 1 or both of the tests for the async consumers the error is still triggered. If I keep at least one of the sync test I have no errors, If I remove both of them I have the errors.\r\n\r\nThis does not happen always, it happens randomly but very frequently.\r\nYou can fork and clone my example and execute pytest in order to reproduce the errors.\r\n\r\n- OS: Ubuntu 16.04.1 64 bits. Virtualenvironment with python 3.6.3\r\n- Versions:\r\naioredis==1.0.0\r\nasgiref==2.1.4\r\nasync-timeout==2.0.0\r\nattrs==17.4.0\r\nautobahn==17.10.1\r\nAutomat==0.6.0\r\nchannels==2.0.2\r\nchannels-redis==2.0.2\r\nconstantly==15.1.0\r\ndaphne==2.0.3\r\nDjango==2.0.2\r\nhiredis==0.2.0\r\nhyperlink==17.3.1\r\nincremental==17.5.0\r\nmsgpack==0.5.4\r\npkg-resources==0.0.0\r\npluggy==0.6.0\r\npy==1.5.2\r\npytest==3.4.0\r\npytest-asyncio==0.8.0\r\npytest-django==3.1.2\r\npytz==2017.3\r\nsix==1.11.0\r\nTwisted==17.9.0\r\ntxaio==2.8.2\r\nzope.interface==4.4.3\r\n\r\n- What you expected to happen vs. what actually happened:\r\nI expected no errors, but I have these errors randomly\r\n\r\n- How you're running Channels (runserver? daphne/runworker? Nginx/Apache in front?)\r\nI am just testing for now, so: `pytest`\r\n\r\n- Console logs and full tracebacks of any errors\r\n======================================= 1 passed in 0.03 seconds =======================================\r\nexception calling callback for <Future at 0x7f38bd050be0 state=finished returned list>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/concurrent/futures/_base.py\", line 324, in _invoke_callbacks\r\n    callback(self)\r\n  File \"/usr/lib/python3.6/asyncio/futures.py\", line 419, in _call_set_state\r\n    dest_loop.call_soon_threadsafe(_set_state, destination, source)\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 620, in call_soon_threadsafe\r\n    self._check_closed()\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 357, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\n`", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/889/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/882", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/882/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/882/comments", "events_url": "https://api.github.com/repos/django/channels/issues/882/events", "html_url": "https://github.com/django/channels/issues/882", "id": 295316038, "node_id": "MDU6SXNzdWUyOTUzMTYwMzg=", "number": 882, "title": "Issues with InMemoryChannelLayer", "user": {"login": "jproffitt", "id": 2227681, "node_id": "MDQ6VXNlcjIyMjc2ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/2227681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jproffitt", "html_url": "https://github.com/jproffitt", "followers_url": "https://api.github.com/users/jproffitt/followers", "following_url": "https://api.github.com/users/jproffitt/following{/other_user}", "gists_url": "https://api.github.com/users/jproffitt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jproffitt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jproffitt/subscriptions", "organizations_url": "https://api.github.com/users/jproffitt/orgs", "repos_url": "https://api.github.com/users/jproffitt/repos", "events_url": "https://api.github.com/users/jproffitt/events{/privacy}", "received_events_url": "https://api.github.com/users/jproffitt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159992, "node_id": "MDU6TGFiZWw0MDcxNTk5OTI=", "url": "https://api.github.com/repos/django/channels/labels/blocked/needs-investigation", "name": "blocked/needs-investigation", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-02-07T22:26:33Z", "updated_at": "2018-02-14T19:32:21Z", "closed_at": "2018-02-14T19:32:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "What is the recommended way to use channel layers for local development/testing?\r\n\r\nPreviously, in channels v1 I used asgi_redis for production environments, and asgiref.inmemory for local dev. I tried upgrading to channels v2 and noticed the in memory layer in asgiref was removed.\r\n\r\nI somehow stubbled upon the `InMemoryChannelLayer` in channels itself, and figured that might be the replacement for the old asgiref one, so I tried using it, but ran into issues. \r\n\r\nI don't get any error messages, and I have a very basic consumer. (actually just one `JsonWebsocketConsumer`) The console says it is `HANDSHAKING`, but then nothing happens, and actually freezes the local server until I restart it. I know it's a problem with `InMemoryChannelLayer`, because if I set `CHANNEL_LAYERS` to `{}`, the consumer works just fine. (but of course then I can't use `self.channel_layer`)\r\n\r\nAm I just using this the wrong way? I would like to not have to use redis for local development.", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/882/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/876", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/876/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/876/comments", "events_url": "https://api.github.com/repos/django/channels/issues/876/events", "html_url": "https://github.com/django/channels/issues/876", "id": 294922300, "node_id": "MDU6SXNzdWUyOTQ5MjIzMDA=", "number": 876, "title": "Testing with multiple asyncio loops and RedisChannelLayer", "user": {"login": "andriilahuta", "id": 13280256, "node_id": "MDQ6VXNlcjEzMjgwMjU2", "avatar_url": "https://avatars.githubusercontent.com/u/13280256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andriilahuta", "html_url": "https://github.com/andriilahuta", "followers_url": "https://api.github.com/users/andriilahuta/followers", "following_url": "https://api.github.com/users/andriilahuta/following{/other_user}", "gists_url": "https://api.github.com/users/andriilahuta/gists{/gist_id}", "starred_url": "https://api.github.com/users/andriilahuta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andriilahuta/subscriptions", "organizations_url": "https://api.github.com/users/andriilahuta/orgs", "repos_url": "https://api.github.com/users/andriilahuta/repos", "events_url": "https://api.github.com/users/andriilahuta/events{/privacy}", "received_events_url": "https://api.github.com/users/andriilahuta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300084, "node_id": "MDU6TGFiZWw0MzEzMDAwODQ=", "url": "https://api.github.com/repos/django/channels/labels/exp/advanced", "name": "exp/advanced", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-02-06T21:40:17Z", "updated_at": "2018-08-04T11:09:37Z", "closed_at": "2018-02-08T01:30:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Say, I have two unit tests and each has its own asyncio loop. In that case the first one will run successfully and the second one will fail with `Event loop is closed`. This happens because `ChannelLayerManager` caches `RedisChannelLayer` instance, which in turn caches `loop` instance. Running `channel_layers.backends.clear()` at the beginning of each test helps. I think, it should be mentioned in the docs.", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/876/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/871", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/871/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/871/comments", "events_url": "https://api.github.com/repos/django/channels/issues/871/events", "html_url": "https://github.com/django/channels/issues/871", "id": 294648013, "node_id": "MDU6SXNzdWUyOTQ2NDgwMTM=", "number": 871, "title": "Idle database connections not reaped", "user": {"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 54, "created_at": "2018-02-06T06:38:50Z", "updated_at": "2020-06-25T01:08:49Z", "closed_at": "2018-02-08T01:33:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Initially reported in https://github.com/django/daphne/issues/163\r\n\r\nI suspect this is due to the lack of calling close_old_connections, as seen in Channels 1 here: https://github.com/django/channels/blob/1.x/channels/signals.py#L10", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/871/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/859", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/859/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/859/comments", "events_url": "https://api.github.com/repos/django/channels/issues/859/events", "html_url": "https://github.com/django/channels/issues/859", "id": 294358019, "node_id": "MDU6SXNzdWUyOTQzNTgwMTk=", "number": 859, "title": "Cannot call AsyncToSync twice in one sync context for channels_redis", "user": {"login": "ahaltindis", "id": 1897850, "node_id": "MDQ6VXNlcjE4OTc4NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1897850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahaltindis", "html_url": "https://github.com/ahaltindis", "followers_url": "https://api.github.com/users/ahaltindis/followers", "following_url": "https://api.github.com/users/ahaltindis/following{/other_user}", "gists_url": "https://api.github.com/users/ahaltindis/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahaltindis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahaltindis/subscriptions", "organizations_url": "https://api.github.com/users/ahaltindis/orgs", "repos_url": "https://api.github.com/users/ahaltindis/repos", "events_url": "https://api.github.com/users/ahaltindis/events{/privacy}", "received_events_url": "https://api.github.com/users/ahaltindis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 42, "created_at": "2018-02-05T11:20:44Z", "updated_at": "2022-10-29T12:58:23Z", "closed_at": "2018-02-14T23:39:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using a SyncConsumer which adds itself to a group on `websocket.connect` with `group_add` method of channel_layer.\r\n\r\n    class TaskConsumer(JsonWebsocketConsumer):\r\n        def connect(self):\r\n            self.accept()\r\n            AsyncToSync(self.channel_layer.group_add)('task-i-1', self.channel_name)\r\n\r\n        def task_message(self, event):\r\n            self.send_json(event[\"text\"])\r\n\r\nIf I try to send message to this group using `group_send` method that is wrapped with AsyncToSync, first message is succeed but further messages throw this exception:\r\n\r\n` >>> c = get_channel_layer()`\r\n` >>> AsyncToSync(c.group_send)('task-i-1', {'type': 'task.message', 'text':{}})`\r\n` >>> AsyncToSync(c.group_send)('task-i-1', {'type': 'task.message', 'text':{}})`\r\nConnection <RedisConnection [db:0]> has pending commands, closing it.\r\nTraceback (most recent call last):\r\n  File \"/home/ahmet/websocket_channel/env/lib64/python3.6/site-packages/channel\r\ns_redis/core.py\", line 316, in group_send\r\n    await connection.zremrangebyscore(key, min=0, max=int(time.time()) - self.group_expiry)\r\nRuntimeError: Task <Task pending coro=<AsyncToSync.main_wrap() running at /home/ahmet/webso\r\ncket_channel/env/lib64/python3.6/site-packages/asgiref/sync.py:57> cb=[_run_until_complete_cb() \r\nat /usr/lib64/python3.6/asyncio/base_events.py:176]> got Future <Future pe\r\nnding> attached to a different loop\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/home/ahmet/websocket_channel/env/lib64/python3.6/site-packages/asgiref\r\n/sync.py\", line 49, in __call__\r\n    call_result.result()\r\n  File \"/usr/lib64/python3.6/concurrent/futures/_base.py\", line 425, in result\r\n    return self.__get_result()\r\n  File \"/usr/lib64/python3.6/concurrent/futures/_base.py\", line 384, in __get_result\r\n    raise self._exception\r\n  File \"/home/ahmet/websocket_channel/env/lib64/python3.6/site-packages/asgiref\r\n/sync.py\", line 57, in main_wrap\r\n    result = await self.awaitable(*args, **kwargs)\r\n  File \"/home/ahmet/websocket_channel/env/lib64/python3.6/site-packages/channel\r\ns_redis/core.py\", line 320, in group_send\r\n    await connection.zrange(key, 0, -1)\r\n  File \"/home/ahmet/websocket_channel/env/lib64/python3.6/site-packages/aioredi\r\ns/commands/__init__.py\", line 152, in __exit__\r\n    self._release_callback(conn)\r\n  File \"/home/ahmet/websocket_channel/env/lib64/python3.6/site-packages/aioredi\r\ns/pool.py\", line 361, in release\r\n    conn.close()\r\n  File \"/home/ahmet/websocket_channel/env/lib64/python3.6/site-packages/aioredi\r\ns/connection.py\", line 352, in close\r\n    self._do_close(ConnectionForcedCloseError())\r\n  File \"/home/ahmet/websocket_channel/env/lib64/python3.6/site-packages/aioredi\r\ns/connection.py\", line 359, in _do_close\r\n    self._writer.transport.close()\r\n  File \"/usr/lib64/python3.6/asyncio/selector_events.py\", line 621, in close\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"/usr/lib64/python3.6/asyncio/base_events.py\", line 574, in call_soon\r\n    self._check_closed()\r\n  File \"/usr/lib64/python3.6/asyncio/base_events.py\", line 357, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\n\r\n- OpenSuse Leap(42.2)\r\n- python[3.6.4], django[2.0.2], channels[2.0.0], daphne[2.0.2], channels-redis[2.0.2]. asgiref[2.1.3]\r\n- Django running with runserver\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/859/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/856", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/856/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/856/comments", "events_url": "https://api.github.com/repos/django/channels/issues/856/events", "html_url": "https://github.com/django/channels/issues/856", "id": 294272371, "node_id": "MDU6SXNzdWUyOTQyNzIzNzE=", "number": 856, "title": "AsyncToSync freezes threads for really long time on channel_layer.group_add", "user": {"login": "japrogramer", "id": 1387859, "node_id": "MDQ6VXNlcjEzODc4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1387859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japrogramer", "html_url": "https://github.com/japrogramer", "followers_url": "https://api.github.com/users/japrogramer/followers", "following_url": "https://api.github.com/users/japrogramer/following{/other_user}", "gists_url": "https://api.github.com/users/japrogramer/gists{/gist_id}", "starred_url": "https://api.github.com/users/japrogramer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japrogramer/subscriptions", "organizations_url": "https://api.github.com/users/japrogramer/orgs", "repos_url": "https://api.github.com/users/japrogramer/repos", "events_url": "https://api.github.com/users/japrogramer/events{/privacy}", "received_events_url": "https://api.github.com/users/japrogramer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-02-05T04:44:11Z", "updated_at": "2018-02-14T02:51:18Z", "closed_at": "2018-02-08T01:29:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Im trying to make the async call to group_add synchronous like in the docs .. but when I do the whole request cycle freezes and doesn't let me take other requests.\r\n\r\n```\r\n 39     def make_sub(info, gid):\r\n 40         inst = relay.Node.get_node_from_global_id(info, gid)\r\n 41         try:\r\n 42             gp_name = 'gqp.{0}-updated.{1}'.format(str.lower(inst.__class__.__name__), inst.pk)\r\n 43             # Group(gp_name).add(info.context.reply_channel)\r\n 44             # info.context.channel_session['Groups'] = ','.join( (gp_name, info.context.channel_session['Groups']))\r\n 45             __import__('pdb').set_trace()\r\n 46  ->         AsyncToSync(channel_layer.group_add)(\r\n 47                     gp_name,\r\n 48                     info.context['reply_channel']\r\n 49                 )\r\n 50             if 'Groups' in info.context.scope['session']:\r\n 51                 info.context.scope['session']['Groups'] = ','.join((gp_name, info.context.scope['session']['Groups']))\r\n 52         except:\r\n 53             pass\r\n 54         return iter([inst])\r\n(Pdb) channel_layer.group_add\r\n<bound method RedisChannelLayer.group_add of <channels_redis.core.RedisChannelLayer object at 0x7fb322c835f8>>\r\n(Pdb) gp_name\r\n'gqp.product-updated.1'\r\n(Pdb) info.context['reply_channel']\r\n'specific..YgcGdjPn!HfWtmWwbyFou'\r\n(Pdb) inst\r\n<Product: atests>\r\n(Pdb) AsyncToSync\r\n<class 'asgiref.sync.AsyncToSync'>\r\n(Pdb) c\r\n\r\n\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/856/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/848", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/848/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/848/comments", "events_url": "https://api.github.com/repos/django/channels/issues/848/events", "html_url": "https://github.com/django/channels/issues/848", "id": 294089613, "node_id": "MDU6SXNzdWUyOTQwODk2MTM=", "number": 848, "title": "Cannot use AsyncToSync inside SyncConsumer", "user": {"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300084, "node_id": "MDU6TGFiZWw0MzEzMDAwODQ=", "url": "https://api.github.com/repos/django/channels/labels/exp/advanced", "name": "exp/advanced", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-03T06:45:33Z", "updated_at": "2018-02-03T07:21:15Z", "closed_at": "2018-02-03T07:20:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Trying to do so causes threading errors:\r\n\r\n```2018-02-03 06:43:49,209 - ERROR - server - Exception inside application: There is no current event loop in thread 'Thread-4'.\r\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 241, in _step\r\n    result = coro.throw(exc)\r\n  File \"/mnt/c/Users/Andrew/Programs/channels/channels/consumer.py\", line 51, in __call__\r\n    await await_many_dispatch([receive, self.channel_receive], self.dispatch)\r\n  File \"/mnt/c/Users/Andrew/Programs/channels/channels/utils.py\", line 48, in await_many_dispatch\r\n    await dispatch(result)\r\n  File \"/home/andrew/Envs/django/lib/python3.5/site-packages/asgiref/sync.py\", line 81, in inner\r\n    return await async_func(*args, **kwargs)\r\n  File \"/home/andrew/Envs/django/lib/python3.5/site-packages/asgiref/sync.py\", line 65, in __call__\r\n    return await asyncio.wait_for(future, timeout=None)\r\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 373, in wait_for\r\n    return (yield from fut)\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 361, in __iter__\r\n    yield self  # This tells Task to wait for completion.\r\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 296, in _wakeup\r\n    future.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 274, in result\r\n    raise self._exception\r\n  File \"/usr/lib/python3.5/concurrent/futures/thread.py\", line 55, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/home/andrew/Envs/django/lib/python3.5/site-packages/asgiref/sync.py\", line 74, in thread_handler\r\n    raise e\r\n  File \"/home/andrew/Envs/django/lib/python3.5/site-packages/asgiref/sync.py\", line 72, in thread_handler\r\n    self.func(*args, **kwargs)\r\n  File \"/mnt/c/Users/Andrew/Programs/channels/channels/consumer.py\", line 93, in dispatch\r\n    handler(message)\r\n  File \"/mnt/c/Users/Andrew/Programs/channels/channels/generic/websocket.py\", line 19, in websocket_connect\r\n    self.connect()\r\n  File \"/mnt/c/Users/Andrew/Programs/django_test/messaging/consumers.py\", line 12, in connect\r\n    AsyncToSync(self.channel_layer.group_add)(\"chat\", self.channel_name)\r\n  File \"/home/andrew/Envs/django/lib/python3.5/site-packages/asgiref/sync.py\", line 17, in __init__\r\n    self.main_event_loop = asyncio.get_event_loop()\r\n  File \"/usr/lib/python3.5/asyncio/events.py\", line 632, in get_event_loop\r\n    return get_event_loop_policy().get_event_loop()\r\n  File \"/usr/lib/python3.5/asyncio/events.py\", line 578, in get_event_loop\r\n    % threading.current_thread().name)\r\n  There is no current event loop in thread 'Thread-4'.\r\n```\r\n\r\nThis is because AsyncToSync is designed to be bound to functions in the main thread, not inside a subthread, so the documentation is wrong. It needs either a differently-documented approach, or to be fixed so it can find its main thread.", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/848/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/848/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/846", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/846/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/846/comments", "events_url": "https://api.github.com/repos/django/channels/issues/846/events", "html_url": "https://github.com/django/channels/issues/846", "id": 294077082, "node_id": "MDU6SXNzdWUyOTQwNzcwODI=", "number": 846, "title": "Not able to see tracebacks", "user": {"login": "dvl", "id": 308337, "node_id": "MDQ6VXNlcjMwODMzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/308337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvl", "html_url": "https://github.com/dvl", "followers_url": "https://api.github.com/users/dvl/followers", "following_url": "https://api.github.com/users/dvl/following{/other_user}", "gists_url": "https://api.github.com/users/dvl/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvl/subscriptions", "organizations_url": "https://api.github.com/users/dvl/orgs", "repos_url": "https://api.github.com/users/dvl/repos", "events_url": "https://api.github.com/users/dvl/events{/privacy}", "received_events_url": "https://api.github.com/users/dvl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-02-03T02:48:57Z", "updated_at": "2018-02-03T20:42:47Z", "closed_at": "2018-02-03T20:42:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm trying to upgrade my project to channels 2 but I've noticed a weird behavior when an exception is raised on a consumer I'm not able to see the traceback in nowhere.\r\n\r\n```python\r\nclass BidConsumer(JsonWebsocketConsumer):\r\n\r\n    def receive_json(self, content):\r\n        print(content['non_existing_key'])  # KeyError is expected\r\n```\r\n\r\nI just noticed the error because I lost the connection to websocket on browser but I can't see anything on console.\r\n\r\nI'm using Python 3.6.4, Django 2.0.2, Channels 2.0.0 and since I'm still testing I didn't configure anything as ASGI backend.\r\n\r\nThis only happens when Channels are running via runserver if I use via daphne I'm able to see exceptions as expected.\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/846/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/834", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/834/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/834/comments", "events_url": "https://api.github.com/repos/django/channels/issues/834/events", "html_url": "https://github.com/django/channels/issues/834", "id": 292729381, "node_id": "MDU6SXNzdWUyOTI3MjkzODE=", "number": 834, "title": "channels 2.0 (django 2.0) runserver does not serve static files", "user": {"login": "richardbann", "id": 2426725, "node_id": "MDQ6VXNlcjI0MjY3MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/2426725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardbann", "html_url": "https://github.com/richardbann", "followers_url": "https://api.github.com/users/richardbann/followers", "following_url": "https://api.github.com/users/richardbann/following{/other_user}", "gists_url": "https://api.github.com/users/richardbann/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardbann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardbann/subscriptions", "organizations_url": "https://api.github.com/users/richardbann/orgs", "repos_url": "https://api.github.com/users/richardbann/repos", "events_url": "https://api.github.com/users/richardbann/events{/privacy}", "received_events_url": "https://api.github.com/users/richardbann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-01-30T10:26:55Z", "updated_at": "2018-02-01T08:31:51Z", "closed_at": "2018-02-01T08:31:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "- Your OS and runtime environment, and browser if applicable:\r\nubuntu 16.04, inside alpine docker\r\n- The versions of Channels, Daphne, Django, Twisted, and your ASGI backend (asgi_ipc or asgi_redis normally)\r\nchannels 2.0, django 2.0\r\n- What you expected to happen vs. what actually happened\r\n`runserver` should serve static files if `django.contrib.staticfiles` is in installed apps\r\n- How you're running Channels (runserver? daphne/runworker? Nginx/Apache in front?)\r\nrunserver\r\n- Console logs and full tracebacks of any errors\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/834/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/832", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/832/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/832/comments", "events_url": "https://api.github.com/repos/django/channels/issues/832/events", "html_url": "https://github.com/django/channels/issues/832", "id": 292057996, "node_id": "MDU6SXNzdWUyOTIwNTc5OTY=", "number": 832, "title": "ChannelLiveServerTestCase: MySQL server has gone away", "user": {"login": "davidfstr", "id": 764688, "node_id": "MDQ6VXNlcjc2NDY4OA==", "avatar_url": "https://avatars.githubusercontent.com/u/764688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidfstr", "html_url": "https://github.com/davidfstr", "followers_url": "https://api.github.com/users/davidfstr/followers", "following_url": "https://api.github.com/users/davidfstr/following{/other_user}", "gists_url": "https://api.github.com/users/davidfstr/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidfstr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidfstr/subscriptions", "organizations_url": "https://api.github.com/users/davidfstr/orgs", "repos_url": "https://api.github.com/users/davidfstr/repos", "events_url": "https://api.github.com/users/davidfstr/events{/privacy}", "received_events_url": "https://api.github.com/users/davidfstr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-26T23:03:45Z", "updated_at": "2018-02-02T07:58:01Z", "closed_at": "2018-02-02T07:58:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It appears that in test cases inheriting from ChannelLiveServerTestCase, performing an HTTP request against the Django test server somehow invalidates the database connection such that subsequent model accesses raise a \"MySQL server has gone away\" error.\r\n\r\nHere is a minimal repro, using Selenium to perform the HTTP request:\r\n\r\n```\r\nfrom channels.test import ChannelLiveServerTestCase\r\nfrom django.contrib.auth.models import User\r\nfrom selenium import webdriver\r\n\r\nclass ChannelSmokeTests(ChannelLiveServerTestCase):\r\n    def test_can_access_database(self):\r\n        # Create user\r\n        User(username='channel_test').save()  # ok\r\n        \r\n        # Probe user\r\n        User.objects.get(username='channel_test')  # ok\r\n        \r\n        # Perform HTTP request\r\n        webdriver.Firefox().get(self.live_server_url)  # ok\r\n        \r\n        # Probe user\r\n        # Fails with: django.db.utils.OperationalError: (2006, 'MySQL server has gone away')\r\n        User.objects.get(username='channel_test')  # ERROR\r\n```\r\n\r\nI ran the above test with:\r\n\r\n```\r\npython3 manage.py test myapp.tests.ChannelSmokeTests.test_can_access_database\r\n```\r\n\r\nMy environment:\r\n\r\n* Channels 1.1.6\r\n* Django 1.8.17\r\n* Python 3.4.4\r\n* MySQL 5.6.34\r\n* OS X 10.12.6 (Sierra)\r\n\r\nIs this a known issue?", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/832/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/806", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/806/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/806/comments", "events_url": "https://api.github.com/repos/django/channels/issues/806/events", "html_url": "https://github.com/django/channels/issues/806", "id": 282784921, "node_id": "MDU6SXNzdWUyODI3ODQ5MjE=", "number": 806, "title": "Sending messages from async coroutine", "user": {"login": "emakarov", "id": 395963, "node_id": "MDQ6VXNlcjM5NTk2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/395963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emakarov", "html_url": "https://github.com/emakarov", "followers_url": "https://api.github.com/users/emakarov/followers", "following_url": "https://api.github.com/users/emakarov/following{/other_user}", "gists_url": "https://api.github.com/users/emakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/emakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emakarov/subscriptions", "organizations_url": "https://api.github.com/users/emakarov/orgs", "repos_url": "https://api.github.com/users/emakarov/repos", "events_url": "https://api.github.com/users/emakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/emakarov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-18T07:20:13Z", "updated_at": "2017-12-18T08:47:09Z", "closed_at": "2017-12-18T08:47:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\n\r\nI'm using channels as a tool to transmit messages from server which calculates some events in async style to the web interface.\r\nEvent generation is done in asyncio-based coroutine. And I send messages (`Group('channel_name').send`) with `immediately=True` inside `asyncio`'s `loop.run_in_executor`.\r\n\r\nI'm using Redis as a backend\r\n\r\nI'm experiencing following behaviour (in runserver mode)\r\n\r\n1. Refreshing the browser, websocket is connected.\r\n2. Starting the asyncio-based coroutine to generate events.\r\n3. Browser is not receiving messages\r\n4. Coroutine is continuing to generate events.\r\n5. I'm refreshing the page (browser), and start receiving messages into browser\r\n\r\nThis looks strange to me and as a bug\r\n\r\nDetails: python3.6, (virtualenv) on Mac OS 10.13.1 (17B1003) High Sierra\r\n\r\nDjango==2.0, channels==1.1.8\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/806/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/798", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/798/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/798/comments", "events_url": "https://api.github.com/repos/django/channels/issues/798/events", "html_url": "https://github.com/django/channels/issues/798", "id": 278361246, "node_id": "MDU6SXNzdWUyNzgzNjEyNDY=", "number": 798, "title": "Duplicate websocket messages", "user": {"login": "xtrinch", "id": 7256491, "node_id": "MDQ6VXNlcjcyNTY0OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/7256491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xtrinch", "html_url": "https://github.com/xtrinch", "followers_url": "https://api.github.com/users/xtrinch/followers", "following_url": "https://api.github.com/users/xtrinch/following{/other_user}", "gists_url": "https://api.github.com/users/xtrinch/gists{/gist_id}", "starred_url": "https://api.github.com/users/xtrinch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xtrinch/subscriptions", "organizations_url": "https://api.github.com/users/xtrinch/orgs", "repos_url": "https://api.github.com/users/xtrinch/repos", "events_url": "https://api.github.com/users/xtrinch/events{/privacy}", "received_events_url": "https://api.github.com/users/xtrinch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159992, "node_id": "MDU6TGFiZWw0MDcxNTk5OTI=", "url": "https://api.github.com/repos/django/channels/labels/blocked/needs-investigation", "name": "blocked/needs-investigation", "color": "f9d0c4", "default": false, "description": null}, {"id": 431300084, "node_id": "MDU6TGFiZWw0MzEzMDAwODQ=", "url": "https://api.github.com/repos/django/channels/labels/exp/advanced", "name": "exp/advanced", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-01T05:23:08Z", "updated_at": "2018-02-02T07:50:25Z", "closed_at": "2018-02-02T07:50:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "- Your OS and runtime environment, and browser if applicable\r\n\r\nBrowser: chrome, OS: ubuntu\r\n\r\n- The versions of Channels, Daphne, Django, Twisted, and your ASGI backend (asgi_ipc or asgi_redis normally)\r\n\r\nasgi-redis==1.4.3\r\nchannels==1.1.8\r\nDjango==1.10.4\r\nTwisted==16.6.0\r\n\r\n- What you expected to happen vs. what actually happened\r\n\r\nI am receiving duplicate messages in my consumer. I have a java client that stays connected and attempts to reconnect at all times to the websocket. I also have web clients sending messages to websocket to a dedicated channels group just for them, which is then resent to a dedicated channels group for the java process. Especially if I restart daphne, runworker and celery a lot, I receive duplicate messages (or triplicate, or nplicate, you get the idea) from my web clients. I have verified that the messages are not sent twice by the clients. Note that I've logged the duplicate messages in python (def ws_message(message)), not just in my java process, which consequently also receives duplicates. Once I start to receive duplicates I have to restart the processes, and then it's ok until I restart it again. It seems rather random, the fact if I do or do not get duplicates within a lifecycle of the channels app, but the issue is never resolved without a restart. I receive n-plicates from all my clients, which are many.\r\n\r\n- How you're running Channels (runserver? daphne/runworker? Nginx/Apache in front?)\r\n\r\nI'm running it behind nginx with daphne & runworker.\r\n\r\n- Console logs and full tracebacks of any errors\r\n\r\nNo errors really, just duplicates.\r\n\r\nThis is how I'm logging my duplicates:\r\n\r\n```\r\nchannel_routing = [\r\n    route(\"websocket.connect\", ws_add),\r\n    route(\"websocket.receive\", ws_message),\r\n    route(\"websocket.disconnect\", ws_disconnect),\r\n]\r\n\r\ndef ws_add(message):\r\n    room = re.sub(\"/websocket/\", '', message.content['path'])\r\n    message.reply_channel.send({\"accept\": True})\r\n    Group(str(room)).add(message.reply_channel)\r\n\r\ndef ws_message(message):\r\n    room = re.sub(\"/websocket/\", '', message.content['path'])\r\n    text = message.content['text']\r\n    txt = json.loads(text)\r\n    print(txt)\r\n\r\ndef ws_disconnect(message):\r\n    Group(\"java\").discard(message.reply_channel)\r\n    Group(\"web\").discard(message.reply_channel)\r\n```\r\n\r\nI am using reconnecting-websocket (https://github.com/joewalnes/reconnecting-websocket) to connect to it via frontend.", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/798/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/798/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/791", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/791/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/791/comments", "events_url": "https://api.github.com/repos/django/channels/issues/791/events", "html_url": "https://github.com/django/channels/issues/791", "id": 276896573, "node_id": "MDU6SXNzdWUyNzY4OTY1NzM=", "number": 791, "title": "django.db.utils.DatabaseError: Forced update did not affect any rows.", "user": {"login": "brianmay", "id": 112729, "node_id": "MDQ6VXNlcjExMjcyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/112729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianmay", "html_url": "https://github.com/brianmay", "followers_url": "https://api.github.com/users/brianmay/followers", "following_url": "https://api.github.com/users/brianmay/following{/other_user}", "gists_url": "https://api.github.com/users/brianmay/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianmay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianmay/subscriptions", "organizations_url": "https://api.github.com/users/brianmay/orgs", "repos_url": "https://api.github.com/users/brianmay/repos", "events_url": "https://api.github.com/users/brianmay/events{/privacy}", "received_events_url": "https://api.github.com/users/brianmay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-27T04:15:57Z", "updated_at": "2017-12-15T00:28:20Z", "closed_at": "2017-12-15T00:28:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Please see the stack trace below.\r\n\r\nI am not absolutely convinced this is a channels issue, but the stack trace makes it look like a channels issue. My interpretation of this (somewhat confusing) stack trace is that ``channels/sessions.py`` line 58 has the call to ``save()`` that is causing this error.\r\n\r\nUnfortunately, it is somewhat random. In particular, when I start investigating the problem in detail, the problem tends to disappear.\r\n\r\nDjango version  1.11.5, Channels version 1.1.8.\r\n\r\nSome sort of race condition maybe???? I have some rough theories, none of them exactly make any sense yet.\r\n\r\n```\r\n[2017-11-27 14:39:27,803: ERROR/django.channels] Error processing message with consumer myrocc.consumers.Demultiplexer:\r\nTraceback (most recent call last):\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/django/contrib/sessions/backends/db.py\", line 87, in save\r\n    obj.save(force_insert=must_create, force_update=not must_create, using=using)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/django/db/models/base.py\", line 807, in save\r\n    force_update=force_update, update_fields=update_fields)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/django/db/models/base.py\", line 837, in save_base\r\n    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/django/db/models/base.py\", line 906, in _save_table\r\n    raise DatabaseError(\"Forced update did not affect any rows.\")\r\ndjango.db.utils.DatabaseError: Forced update did not affect any rows.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/channels/sessions.py\", line 54, in inner\r\n    return func(*args, **kwargs)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/channels/auth.py\", line 42, in inner\r\n    return func(message, *args, **kwargs)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/channels/generic/websockets.py\", line 71, in raw_connect\r\n    self.connect(message, **kwargs)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/channels/generic/websockets.py\", line 278, in connect\r\n    consumer(message, **kwargs)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/channels/generic/base.py\", line 32, in __init__\r\n    self.dispatch(message, **kwargs)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/channels/generic/base.py\", line 70, in dispatch\r\n    return self.get_handler(message, **kwargs)(message, **kwargs)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/channels/sessions.py\", line 193, in inner\r\n    return func(message, *args, **kwargs)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/channels/auth.py\", line 73, in inner\r\n    return func(message, *args, **kwargs)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/channels/sessions.py\", line 58, in inner\r\n    message.channel_session.save()\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/django/contrib/sessions/backends/db.py\", line 94, in save\r\n    raise UpdateError\r\ndjango.contrib.sessions.backends.base.UpdateError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/django/contrib/sessions/backends/db.py\", line 87, in save\r\n    obj.save(force_insert=must_create, force_update=not must_create, using=using)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/django/db/models/base.py\", line 807, in save\r\n    force_update=force_update, update_fields=update_fields)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/django/db/models/base.py\", line 837, in save_base\r\n    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/django/db/models/base.py\", line 906, in _save_table\r\n    raise DatabaseError(\"Forced update did not affect any rows.\")\r\ndjango.db.utils.DatabaseError: Forced update did not affect any rows.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/channels/sessions.py\", line 78, in inner\r\n    return func(*args, **kwargs)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/channels/auth.py\", line 89, in inner\r\n    return func(message, *args, **kwargs)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/channels/sessions.py\", line 58, in inner\r\n    message.channel_session.save()\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/django/contrib/sessions/backends/db.py\", line 94, in save\r\n    raise UpdateError\r\ndjango.contrib.sessions.backends.base.UpdateError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/django/contrib/sessions/backends/db.py\", line 87, in save\r\n    obj.save(force_insert=must_create, force_update=not must_create, using=using)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/django/db/models/base.py\", line 807, in save\r\n    force_update=force_update, update_fields=update_fields)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/django/db/models/base.py\", line 837, in save_base\r\n    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/django/db/models/base.py\", line 906, in _save_table\r\n    raise DatabaseError(\"Forced update did not affect any rows.\")\r\ndjango.db.utils.DatabaseError: Forced update did not affect any rows.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/channels/worker.py\", line 119, in run\r\n    consumer(message, **kwargs)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/channels/generic/base.py\", line 32, in __init__\r\n    self.dispatch(message, **kwargs)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/channels/generic/base.py\", line 70, in dispatch\r\n    return self.get_handler(message, **kwargs)(message, **kwargs)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/channels/sessions.py\", line 220, in inner\r\n    result = func(message, *args, **kwargs)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/channels/auth.py\", line 73, in inner\r\n    return func(message, *args, **kwargs)\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/channels/sessions.py\", line 82, in inner\r\n    session.save()\r\n  File \"/Users/brianmay/.pyenv/versions/3.6.2/envs/myrocc/lib/python3.6/site-packages/django/contrib/sessions/backends/db.py\", line 94, in save\r\n    raise UpdateError\r\ndjango.contrib.sessions.backends.base.UpdateError\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/791/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/783", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/783/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/783/comments", "events_url": "https://api.github.com/repos/django/channels/issues/783/events", "html_url": "https://github.com/django/channels/issues/783", "id": 272725496, "node_id": "MDU6SXNzdWUyNzI3MjU0OTY=", "number": 783, "title": "Worker threads that die are not restarted", "user": {"login": "agronick", "id": 2042303, "node_id": "MDQ6VXNlcjIwNDIzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2042303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agronick", "html_url": "https://github.com/agronick", "followers_url": "https://api.github.com/users/agronick/followers", "following_url": "https://api.github.com/users/agronick/following{/other_user}", "gists_url": "https://api.github.com/users/agronick/gists{/gist_id}", "starred_url": "https://api.github.com/users/agronick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agronick/subscriptions", "organizations_url": "https://api.github.com/users/agronick/orgs", "repos_url": "https://api.github.com/users/agronick/repos", "events_url": "https://api.github.com/users/agronick/events{/privacy}", "received_events_url": "https://api.github.com/users/agronick/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-09T21:11:31Z", "updated_at": "2018-02-02T07:49:46Z", "closed_at": "2018-02-02T07:49:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im running Channels 1.1.8 Django 1.11.7 Asgi Redis 1.4.3. I'm occasionally getting the following error.\r\nredis.exceptions.ConnectionError: Error while reading from socket: ('Connection closed by server.',)\r\n\r\nWhen the worker threads die, they never come back. Eventually the site grinds to a halt. This exception should be caught. ", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/783/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/780", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/780/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/780/comments", "events_url": "https://api.github.com/repos/django/channels/issues/780/events", "html_url": "https://github.com/django/channels/issues/780", "id": 271064879, "node_id": "MDU6SXNzdWUyNzEwNjQ4Nzk=", "number": 780, "title": "Error: WebSocket is closed before the connection is established", "user": {"login": "sachinrekhi", "id": 192650, "node_id": "MDQ6VXNlcjE5MjY1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/192650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sachinrekhi", "html_url": "https://github.com/sachinrekhi", "followers_url": "https://api.github.com/users/sachinrekhi/followers", "following_url": "https://api.github.com/users/sachinrekhi/following{/other_user}", "gists_url": "https://api.github.com/users/sachinrekhi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sachinrekhi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sachinrekhi/subscriptions", "organizations_url": "https://api.github.com/users/sachinrekhi/orgs", "repos_url": "https://api.github.com/users/sachinrekhi/repos", "events_url": "https://api.github.com/users/sachinrekhi/events{/privacy}", "received_events_url": "https://api.github.com/users/sachinrekhi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159992, "node_id": "MDU6TGFiZWw0MDcxNTk5OTI=", "url": "https://api.github.com/repos/django/channels/labels/blocked/needs-investigation", "name": "blocked/needs-investigation", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-03T17:53:50Z", "updated_at": "2018-02-02T07:52:48Z", "closed_at": "2018-02-02T07:52:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm occasionally seeing the following error in the console that occurs when initially loading my app. The web socket connection fails to establish.\r\n\r\n```\r\n\"WebSocket connection to 'wss://domain.com/' failed: WebSocket is closed before the connection is established.\"\r\n```\r\n\r\nSince I'm using reconnecting web socket, it continues to occur and usually doesn't ultimately connect in the same session. I've reloaded the app multiple times and continue to run into this. \r\n\r\nI'm currently seeing this in Google Chrome 62.0.3202.75 on Mac OS 10.13. When I tried loading in Firefox and Safari immediately after, it worked fine. So may be a Chrome-specific issue, but hard to say. I restarted Chrome and it occurred again on the first load. On the second load it was fine.\r\n\r\nI did recently upgrade to the latest versions of all channel-related libraries, but have been running them for days and this didn't occur initially. So also hard to say if it's a recent change related to channels or not since I've definitely seen this error once or twice in the past.\r\n\r\nCurrently running:\r\nchannels==1.1.8\r\ndaphne==1.3.0\r\nasgi-redis==1.4.3\r\nasgiref==1.1.2\r\n\r\nRunning Daphne/runworker/redis with Nginx in front.\r\n\r\nI'm seeing the following nginx error logs on the server that are around the same time, so may be related:\r\n\r\n```\r\n017/11/03 17:46:41 [error] 12230#0: *38300 recv() failed (104: Connection reset by peer) while proxying upgraded connection, client: 50.225.206.154, server: domain.com, request: \"GET / HTTP/1.1\", upstream: \"http://127.0.0.1:9000/\", host: \"domain.com\"\r\n```\r\n\r\nHas anyone run into this issue before? Any workarounds?\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/780/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/780/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/763", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/763/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/763/comments", "events_url": "https://api.github.com/repos/django/channels/issues/763/events", "html_url": "https://github.com/django/channels/issues/763", "id": 264773036, "node_id": "MDU6SXNzdWUyNjQ3NzMwMzY=", "number": 763, "title": "48% of WebSocket messages aren't being delivered", "user": {"login": "lsapan", "id": 3203257, "node_id": "MDQ6VXNlcjMyMDMyNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/3203257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lsapan", "html_url": "https://github.com/lsapan", "followers_url": "https://api.github.com/users/lsapan/followers", "following_url": "https://api.github.com/users/lsapan/following{/other_user}", "gists_url": "https://api.github.com/users/lsapan/gists{/gist_id}", "starred_url": "https://api.github.com/users/lsapan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lsapan/subscriptions", "organizations_url": "https://api.github.com/users/lsapan/orgs", "repos_url": "https://api.github.com/users/lsapan/repos", "events_url": "https://api.github.com/users/lsapan/events{/privacy}", "received_events_url": "https://api.github.com/users/lsapan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159992, "node_id": "MDU6TGFiZWw0MDcxNTk5OTI=", "url": "https://api.github.com/repos/django/channels/labels/blocked/needs-investigation", "name": "blocked/needs-investigation", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2017-10-12T00:00:19Z", "updated_at": "2017-10-17T18:52:56Z", "closed_at": "2017-10-17T17:41:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "First off, great work with Channels, this is very exciting stuff!\r\n\r\nI've just updated one of my sites that required browsers to poll the site every 10 seconds for the latest data. There are around 800-1200 users on the site at any given time. Instead of polling, I'm now using a single `Group` to send updates every time there is new data available (every 10 seconds).\r\n\r\nIt works, but I've noticed that many messages aren't actually making it down to the browser. I watched the python process send messages for 500 seconds, and only 26/50 were received by my browser. The socket did not have to reconnect at all during that time, it simply didn't receive the other 24 messages. It's worth noting that when the messages did deliver, it was instantaneous.\r\n\r\nHere's what my setup looks like:\r\n- Everything is running inside of Docker on a single Ubuntu 16.04 LTS server.\r\n- I'm testing with Chrome 61.\r\n- I'm running Django 1.11.6, channels 1.1.8, asgi_redis 1.4.3, and celery 4.1.0 (more on that in a moment).\r\n- Here's a list of all the containers in the stack:\r\n  - Nginx (proxies daphne and serves static files directly)\r\n  - Daphne\r\n  - Workers (3 of them, chosen admittedly arbitrarily)\r\n  - Celery\r\n  - Celerybeat\r\n  - Redis\r\n  - PostgreSQL\r\n\r\nNginx is configured to use 4 worker_processes with 1024 worker_connections each. Coupled with the fact the websocket isn't actually getting disconnected, I don't think that's the issue.\r\n\r\nThere are only two things that immediately come to mind:\r\n1) I'm actually sending the `Group` messages from within celery. Every 10 seconds, celerybeat sends a task to celery to get the latest data from an API, and broadcast it to the `Group`. The only reason this is still on celery is just because I haven't changed it yet, but it should still theoretically work, right? The process runs without errors every time.\r\n2) I'm using redis as the channel layer, but it's also being used as Celery's broker, *and* Django's caching backend.\r\n\r\nIs there anything obvious here? Thanks in advance!\r\n\r\nUpdate: I just performed the test on two machines at the same time. Some messages delivered to both, some delivered to just one, and some weren't delivered to either. I think it's safe to say that celery is always getting the Group message out, so I'm not sure where the disconnect is. One other thought that comes to mind: is the `Group` creating a separate redis entry for each user in the group per message? If so, I'm wondering if adding 1000 entries all at once is causing some to be expunged?", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/763/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/753", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/753/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/753/comments", "events_url": "https://api.github.com/repos/django/channels/issues/753/events", "html_url": "https://github.com/django/channels/issues/753", "id": 261028009, "node_id": "MDU6SXNzdWUyNjEwMjgwMDk=", "number": 753, "title": "Channels + rest framework: exception after file upload causes endless exception loop", "user": {"login": "alexmnazarenko", "id": 13042821, "node_id": "MDQ6VXNlcjEzMDQyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/13042821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexmnazarenko", "html_url": "https://github.com/alexmnazarenko", "followers_url": "https://api.github.com/users/alexmnazarenko/followers", "following_url": "https://api.github.com/users/alexmnazarenko/following{/other_user}", "gists_url": "https://api.github.com/users/alexmnazarenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexmnazarenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexmnazarenko/subscriptions", "organizations_url": "https://api.github.com/users/alexmnazarenko/orgs", "repos_url": "https://api.github.com/users/alexmnazarenko/repos", "events_url": "https://api.github.com/users/alexmnazarenko/events{/privacy}", "received_events_url": "https://api.github.com/users/alexmnazarenko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-09-27T15:55:50Z", "updated_at": "2018-02-02T07:56:29Z", "closed_at": "2018-02-02T07:56:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've encountered a very annoying bug that seems directly related to channels.AsgiRequest.\r\n\r\n* Channels + asgi_redis\r\n* Django debug turned on\r\n* Have a django/rest_framework handler accepting a file upload\r\n* raise from this handler\r\n* While attempting to return 500 response page, Django will raise exception again\r\n* Catches exception, and tries to return 500 again...\r\n\r\n-----------\r\n\r\n* OS, runtime environment,browser: Ubuntu 16.04, Python 3.6, curl )\r\n* Library versions: channels-1.1.8, daphne-1.3.0, django-1.11.5, twisted-17.9.0, asgi_redis-1.4.3, rest_framework-3.6.4\r\n* Django debug turned on (important)\r\n* Expected behavior: show an exception message in log, return 500 to the client\r\n* Actual behavior: exception loops in the server, client hangs\r\n* How you're running Channels: runserver + redis. Same situation with daphne.\r\n* Console logs and full tracebacks of any errors:\r\nThis exception repeats in the 'loop':\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/alexey.nazarenko/.pyenv/versions/p7reloaded_py/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/home/alexey.nazarenko/.pyenv/versions/p7reloaded_py/lib/python3.6/site-packages/django/utils/deprecation.py\", line 140, in __call__\r\n    response = self.get_response(request)\r\n  File \"/home/alexey.nazarenko/.pyenv/versions/p7reloaded_py/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 43, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/home/alexey.nazarenko/.pyenv/versions/p7reloaded_py/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 93, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/home/alexey.nazarenko/.pyenv/versions/p7reloaded_py/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 139, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/home/alexey.nazarenko/.pyenv/versions/p7reloaded_py/lib/python3.6/site-packages/django/views/debug.py\", line 81, in technical_500_response\r\n    text = reporter.get_traceback_text()\r\n  File \"/home/alexey.nazarenko/.pyenv/versions/p7reloaded_py/lib/python3.6/site-packages/django/views/debug.py\", line 333, in get_traceback_text\r\n    c = Context(self.get_traceback_data(), autoescape=False, use_l10n=False)\r\n  File \"/home/alexey.nazarenko/.pyenv/versions/p7reloaded_py/lib/python3.6/site-packages/django/views/debug.py\", line 300, in get_traceback_data\r\n    'filtered_POST_items': list(self.filter.get_post_parameters(self.request).items()),\r\n  File \"/home/alexey.nazarenko/.pyenv/versions/p7reloaded_py/lib/python3.6/site-packages/django/views/debug.py\", line 167, in get_post_parameters\r\n    return request.POST\r\n  File \"/home/alexey.nazarenko/.pyenv/versions/p7reloaded_py/lib/python3.6/site-packages/channels/handler.py\", line 160, in _get_post\r\n    self._load_post_and_files()\r\n  File \"/home/alexey.nazarenko/.pyenv/versions/p7reloaded_py/lib/python3.6/site-packages/django/http/request.py\", line 299, in _load_post_and_files\r\n    self._post, self._files = self.parse_file_upload(self.META, data)\r\n  File \"/home/alexey.nazarenko/.pyenv/versions/p7reloaded_py/lib/python3.6/site-packages/django/http/request.py\", line 255, in parse_file_upload\r\n    warning=\"You cannot alter upload handlers after the upload has been processed.\"\r\n  File \"/home/alexey.nazarenko/.pyenv/versions/p7reloaded_py/lib/python3.6/site-packages/django/http/request.py\", line 248, in upload_handlers\r\n    raise AttributeError(\"You cannot set the upload handlers after the upload has been processed.\")\r\nAttributeError: You cannot set the upload handlers after the upload has been processed.\r\n\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/753/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/753/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/746", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/746/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/746/comments", "events_url": "https://api.github.com/repos/django/channels/issues/746/events", "html_url": "https://github.com/django/channels/issues/746", "id": 259328911, "node_id": "MDU6SXNzdWUyNTkzMjg5MTE=", "number": 746, "title": "503 in the middle of long requests", "user": {"login": "lightninglu10", "id": 2453737, "node_id": "MDQ6VXNlcjI0NTM3Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/2453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lightninglu10", "html_url": "https://github.com/lightninglu10", "followers_url": "https://api.github.com/users/lightninglu10/followers", "following_url": "https://api.github.com/users/lightninglu10/following{/other_user}", "gists_url": "https://api.github.com/users/lightninglu10/gists{/gist_id}", "starred_url": "https://api.github.com/users/lightninglu10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lightninglu10/subscriptions", "organizations_url": "https://api.github.com/users/lightninglu10/orgs", "repos_url": "https://api.github.com/users/lightninglu10/repos", "events_url": "https://api.github.com/users/lightninglu10/events{/privacy}", "received_events_url": "https://api.github.com/users/lightninglu10/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 28, "created_at": "2017-09-20T23:09:19Z", "updated_at": "2023-03-02T17:34:27Z", "closed_at": "2018-02-04T20:28:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you're submitting a bug report, please include:\r\n\r\n- Your OS and runtime environment, and browser if applicable\r\n- The versions of Channels, Daphne, Django, Twisted, and your ASGI backend (asgi_ipc or asgi_redis normally)\r\n- What you expected to happen vs. what actually happened\r\n- How you're running Channels (runserver? daphne/runworker? Nginx/Apache in front?)\r\n- Console logs and full tracebacks of any errors\r\n\r\n**OS**: Mac OS Sierra\r\n**Browser**: Google Chrome\r\n**Channels**: 1.1.6\r\n**daphne**: 1.3.0\r\n**Twisted**: 17.5.0\r\n**Django**: 1.11.5\r\n**ASGI Backend**: asgi_redis\r\n\r\nRunning channels from just runserver, heres my redis config:\r\n\r\n```python\r\nREDIS_HOST = os.environ['REDIS_HOST'] if 'REDIS_HOST' in os.environ else 'localhost'\r\nREDIS_PORT = os.environ['REDIS_PORT'] if 'REDIS_PORT' in os.environ else 6379\r\n\r\nCHANNEL_LAYERS = {\r\n    \"default\": {\r\n        \"BACKEND\": \"asgi_redis.RedisChannelLayer\",\r\n        \"CONFIG\": {\r\n            \"hosts\": [(REDIS_HOST, REDIS_PORT)],\r\n        },\r\n        \"ROUTING\": \"helloDeploy.routing.channel_routing\",\r\n    },\r\n}\r\n```\r\n\r\nso on long requests, django returns a 503 to the frontend in the middle of the request. If I set a breakpoint somewhere, then leave the breakpoint running, then a 503 is returned. I'm fairly sure that  this is caused by channels somehow as this has never happened before. Anybody have any insight here? ", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/746/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/739", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/739/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/739/comments", "events_url": "https://api.github.com/repos/django/channels/issues/739/events", "html_url": "https://github.com/django/channels/issues/739", "id": 257813552, "node_id": "MDU6SXNzdWUyNTc4MTM1NTI=", "number": 739, "title": "JS Binding: websocket.connect throws an exception on Chrome", "user": {"login": "beaugunderson", "id": 61791, "node_id": "MDQ6VXNlcjYxNzkx", "avatar_url": "https://avatars.githubusercontent.com/u/61791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beaugunderson", "html_url": "https://github.com/beaugunderson", "followers_url": "https://api.github.com/users/beaugunderson/followers", "following_url": "https://api.github.com/users/beaugunderson/following{/other_user}", "gists_url": "https://api.github.com/users/beaugunderson/gists{/gist_id}", "starred_url": "https://api.github.com/users/beaugunderson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beaugunderson/subscriptions", "organizations_url": "https://api.github.com/users/beaugunderson/orgs", "repos_url": "https://api.github.com/users/beaugunderson/repos", "events_url": "https://api.github.com/users/beaugunderson/events{/privacy}", "received_events_url": "https://api.github.com/users/beaugunderson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159992, "node_id": "MDU6TGFiZWw0MDcxNTk5OTI=", "url": "https://api.github.com/repos/django/channels/labels/blocked/needs-investigation", "name": "blocked/needs-investigation", "color": "f9d0c4", "default": false, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-09-14T18:26:50Z", "updated_at": "2022-07-25T18:32:00Z", "closed_at": "2022-07-25T18:31:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "- Your OS and runtime environment, and browser if applicable\r\n  - macOS 10.12.6, Chrome 60.0.3112.113 (Official Build) (64-bit)\r\n- The versions of Channels, Daphne, Django, Twisted, and your ASGI backend (asgi_ipc or asgi_redis normally)\r\n  - django-channels npm 1.1.7\r\n- What you expected to happen vs. what actually happened\r\n  - `websocket.connect` throws an exception due to https://github.com/django/channels/commit/3111f3b8ac470bad36b9e4a2445834d0b3c62f97\r\n- Console logs and full tracebacks of any errors\r\n\r\n```\r\n1.5c785a1282571f2fc038.js:22959 Uncaught (in promise) DOMException: Failed to construct 'WebSocket': The subprotocol '' is invalid.\r\n    at connect (http://localhost:8000/static/dist/1.5c785a1282571f2fc038.js:22959:14)\r\n    at new ReconnectingWebsocket (http://localhost:8000/static/dist/1.5c785a1282571f2fc038.js:22986:5)\r\n    at WebSocketBridge.connect (http://localhost:8000/static/dist/1.5c785a1282571f2fc038.js:22719:21)\r\n    at MessagingContainer.componentDidMount (http://localhost:8000/static/dist/1.5c785a1282571f2fc038.js:112:22)\r\n    at http://localhost:8000/static/dist/commons.6b7292565c22eda20bcf.js:18629:25\r\n    at measureLifeCyclePerf (http://localhost:8000/static/dist/commons.6b7292565c22eda20bcf.js:18440:12)\r\n    at http://localhost:8000/static/dist/commons.6b7292565c22eda20bcf.js:18628:11\r\n    at CallbackQueue.notifyAll (http://localhost:8000/static/dist/commons.6b7292565c22eda20bcf.js:8249:22)\r\n    at ReactReconcileTransaction.close (http://localhost:8000/static/dist/commons.6b7292565c22eda20bcf.js:20412:26)\r\n    at ReactReconcileTransaction.closeAll (http://localhost:8000/static/dist/commons.6b7292565c22eda20bcf.js:4139:25)\r\n```", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/739/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}, {"url": "https://api.github.com/repos/django/channels/issues/684", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/684/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/684/comments", "events_url": "https://api.github.com/repos/django/channels/issues/684/events", "html_url": "https://github.com/django/channels/issues/684", "id": 238648200, "node_id": "MDU6SXNzdWUyMzg2NDgyMDA=", "number": 684, "title": "The worker never comes up with runserver", "user": {"login": "decentral1se", "id": 1991377, "node_id": "MDQ6VXNlcjE5OTEzNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/1991377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decentral1se", "html_url": "https://github.com/decentral1se", "followers_url": "https://api.github.com/users/decentral1se/followers", "following_url": "https://api.github.com/users/decentral1se/following{/other_user}", "gists_url": "https://api.github.com/users/decentral1se/gists{/gist_id}", "starred_url": "https://api.github.com/users/decentral1se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decentral1se/subscriptions", "organizations_url": "https://api.github.com/users/decentral1se/orgs", "repos_url": "https://api.github.com/users/decentral1se/repos", "events_url": "https://api.github.com/users/decentral1se/events{/privacy}", "received_events_url": "https://api.github.com/users/decentral1se/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-06-26T19:41:54Z", "updated_at": "2018-09-26T16:42:55Z", "closed_at": "2017-06-26T21:04:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Over at [a project I'm working on](https://github.com/giving-a-fuck-about-climate-change/carbondoomsday), I'm trying to get `django-channels` set up. \r\n\r\nWith the typical `asgiref.inmemory.ChanelLayer` (in my [settings here](https://github.com/giving-a-fuck-about-climate-change/carbondoomsday/blob/f9f2b8c03576c259f1c5a463063597da9ef973f1/carbondoomsday/settings.py#L174)), and running `runserver`, I see no logs from the worker and am unable to make a websocket connection (using `websocket-client` in the REPL) - I have no indication that the worker is up at all.  I only have some dummy code set up for the routing, but should that matter? I should at least see some confirmation that the worker is listening, right?\r\n\r\nSo, I started to think that channels must be borked with the versions of my dependencies.\r\n\r\nI'm on `Django==1.11.2`, `channels==1.1.5`, `daphne==1.3.0`, and `Twisted==17.5.0`.\r\n\r\n---\r\n\r\n<details>\r\n<summary>Here' my entire environment</summary>\r\n\r\n```\r\n$ pipenv run pip freeze\r\namqp==2.1.4\r\nasgi-redis==1.4.2\r\nasgiref==1.1.2\r\nattrs==17.2.0\r\nautobahn==17.6.2\r\nAutomat==0.6.0\r\nbilliard==3.5.0.2\r\ncached-property==1.3.0\r\ncelery==4.0.2\r\ncertifi==2017.4.17\r\nchannels==1.1.5\r\nchardet==3.0.4\r\nclick==6.7\r\ncolorama==0.3.9\r\nconstantly==15.1.0\r\ncoreapi==2.3.1\r\ncoreapi-cli==1.0.6\r\ncoreschema==0.0.4\r\ncoverage==4.4.1\r\ndaphne==1.3.0\r\ndecorator==4.0.11\r\ndj-database-url==0.4.2\r\nDjango==1.11.2\r\ndjango-celery-beat==1.0.1\r\ndjango-configurations==2.0\r\ndjango-cors-headers==2.1.0\r\ndjango-extensions==1.7.9\r\ndjango-filter==1.0.4\r\ndjango-rest-swagger==2.1.2\r\ndjango-webpack-loader==0.5.0\r\ndjangorestframework==3.6.3\r\ndjangorestframework-csv==2.0.0\r\ndjangorestframework-filters==0.10.1\r\ndocker==2.3.0\r\ndocker-compose==1.14.0\r\ndocker-pycreds==0.2.1\r\ndockerpty==0.4.1\r\ndocopt==0.6.2\r\ngreenlet==0.4.12\r\nhttpie==0.9.9\r\nhyperlink==17.2.1\r\nidna==2.5\r\nincremental==17.5.0\r\nipdb==0.10.3\r\nipython==6.1.0\r\nipython-genutils==0.2.0\r\nisort==4.2.15\r\nitypes==1.1.0\r\njedi==0.10.2\r\nJinja2==2.9.6\r\njsonschema==2.6.0\r\njupyter-core==4.3.0\r\nkombu==4.0.2\r\nMarkupSafe==1.0\r\nmccabe==0.6.1\r\nmsgpack-python==0.4.8\r\nnbformat==4.3.0\r\nneovim==0.1.13\r\nopbeat==3.5.2\r\nopenapi-codec==1.3.1\r\npexpect==4.2.1\r\npickleshare==0.7.4\r\nplotly==2.0.11\r\nprompt-toolkit==1.0.14\r\npsycopg2==2.7.1\r\nptyprocess==0.5.2\r\npy==1.4.34\r\npycodestyle==2.3.1\r\npydocstyle==2.0.0\r\npyflakes==1.5.0\r\nPygments==2.2.0\r\npylama==7.3.3\r\npytest==3.1.2\r\npytest-capturelog==0.7\r\npytest-cov==2.5.1\r\npytest-django==3.1.2\r\npytest-mock==1.6.0\r\npython-dateutil==1.5\r\npytz==2017.2\r\nPyYAML==3.12\r\nredis==2.10.5\r\nrequests==2.18.1\r\nsimplegeneric==0.8.1\r\nsimplejson==3.11.1\r\nsix==1.10.0\r\nsnowballstemmer==1.2.1\r\ntexttable==0.8.8\r\ntraitlets==4.3.2\r\nTwisted==17.5.0\r\ntxaio==2.8.0\r\nunicodecsv==0.14.1\r\nuritemplate==3.0.0\r\nurllib3==1.21.1\r\nuWSGI==2.0.15\r\nvine==1.1.3\r\nwcwidth==0.1.7\r\nwebsocket-client==0.42.1\r\nWerkzeug==0.12.2\r\nwhitenoise==3.3.0\r\nzope.interface==4.4.2\r\n```\r\n</details>\r\n\r\n---\r\n\r\nThanks :+1: ", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/684/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/679", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/679/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/679/comments", "events_url": "https://api.github.com/repos/django/channels/issues/679/events", "html_url": "https://github.com/django/channels/issues/679", "id": 237920847, "node_id": "MDU6SXNzdWUyMzc5MjA4NDc=", "number": 679, "title": "Fix runworker/daphne to not require yielding receive()", "user": {"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-06-22T17:40:04Z", "updated_at": "2018-02-01T08:39:57Z", "closed_at": "2018-02-01T08:39:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As reported in https://github.com/django/asgi_redis/issues/50, if the synchronous receive() method used on the channel layer is totally blocking, one or more of `runworker` or `daphne` block in a way where no responses go out to clients. The cause needs to be found and fixed; my suspicion is personally on Daphne.", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/679/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/675", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/675/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/675/comments", "events_url": "https://api.github.com/repos/django/channels/issues/675/events", "html_url": "https://github.com/django/channels/issues/675", "id": 237330594, "node_id": "MDU6SXNzdWUyMzczMzA1OTQ=", "number": 675, "title": "Messages getting lost, connections dropped", "user": {"login": "matteing", "id": 7959397, "node_id": "MDQ6VXNlcjc5NTkzOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/7959397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matteing", "html_url": "https://github.com/matteing", "followers_url": "https://api.github.com/users/matteing/followers", "following_url": "https://api.github.com/users/matteing/following{/other_user}", "gists_url": "https://api.github.com/users/matteing/gists{/gist_id}", "starred_url": "https://api.github.com/users/matteing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matteing/subscriptions", "organizations_url": "https://api.github.com/users/matteing/orgs", "repos_url": "https://api.github.com/users/matteing/repos", "events_url": "https://api.github.com/users/matteing/events{/privacy}", "received_events_url": "https://api.github.com/users/matteing/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-06-20T20:10:09Z", "updated_at": "2017-06-20T21:39:19Z", "closed_at": "2017-06-20T21:39:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm currently running Channels on a load-balanced Azure configuration, with two Daphne dedicated servers, one redis cache, and one database. For some reason however, after a few minutes, channels don't accept messages from the frontend and get stuck. I keep sending messages, usually like 20 times over, and nothing gets acknowledged on the server. There are also no errors on the console. I'm suspecting the load balancer servers are switching or something, but I'm not so sure.\r\n\r\nI don't use channel sessions much, so I don't think it could be sessions being dropped. Here's a look at the consumers:\r\nhttps://github.com/taleship/taleship/blob/master/rooms/consumers.py\r\n(yes, it's kinda messy)", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/675/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/656", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/656/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/656/comments", "events_url": "https://api.github.com/repos/django/channels/issues/656/events", "html_url": "https://github.com/django/channels/issues/656", "id": 232570909, "node_id": "MDU6SXNzdWUyMzI1NzA5MDk=", "number": 656, "title": "Don't allow enforce_ordering on a multiplexed sub-consumer", "user": {"login": "millar", "id": 19176, "node_id": "MDQ6VXNlcjE5MTc2", "avatar_url": "https://avatars.githubusercontent.com/u/19176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/millar", "html_url": "https://github.com/millar", "followers_url": "https://api.github.com/users/millar/followers", "following_url": "https://api.github.com/users/millar/following{/other_user}", "gists_url": "https://api.github.com/users/millar/gists{/gist_id}", "starred_url": "https://api.github.com/users/millar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/millar/subscriptions", "organizations_url": "https://api.github.com/users/millar/orgs", "repos_url": "https://api.github.com/users/millar/repos", "events_url": "https://api.github.com/users/millar/events{/privacy}", "received_events_url": "https://api.github.com/users/millar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-31T13:45:57Z", "updated_at": "2018-02-02T07:50:48Z", "closed_at": "2018-02-02T07:50:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're having problems using `string_ordering = True` on multiplexed consumers:\r\n\r\nIf you use >1 consumer, the connect event message will be sent to each consumer registered on the demultiplexer. This breaks ordering since the `order` value in this message (as copied to all consumers) is `0`.\r\n\r\nThe `__channels_next_order` value will be incremented after the first consumer is finished, then the next consumer tries to handle the connect event but it can't since the message `order` value is 0 and `__channels_next_order` on the session is 1.\r\n\r\nSubsequent messages are handled OK but if, for example, data should be stored in `channel_session` by any of the stuck connect event handlers this will cause problems should the messages rely on it (as they do for us).\r\n\r\nI have produced a workaround this by tweaking the `enforce_ordering` decorator but I'm not convinced it's the best approach (I will submit this as a PR nonetheless).", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/656/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/651", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/651/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/651/comments", "events_url": "https://api.github.com/repos/django/channels/issues/651/events", "html_url": "https://github.com/django/channels/issues/651", "id": 232154193, "node_id": "MDU6SXNzdWUyMzIxNTQxOTM=", "number": 651, "title": "HTTP/WS send decode error: 'dict' object has no attribute 'encode'", "user": {"login": "mssever", "id": 17238705, "node_id": "MDQ6VXNlcjE3MjM4NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/17238705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mssever", "html_url": "https://github.com/mssever", "followers_url": "https://api.github.com/users/mssever/followers", "following_url": "https://api.github.com/users/mssever/following{/other_user}", "gists_url": "https://api.github.com/users/mssever/gists{/gist_id}", "starred_url": "https://api.github.com/users/mssever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mssever/subscriptions", "organizations_url": "https://api.github.com/users/mssever/orgs", "repos_url": "https://api.github.com/users/mssever/repos", "events_url": "https://api.github.com/users/mssever/events{/privacy}", "received_events_url": "https://api.github.com/users/mssever/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-30T06:28:06Z", "updated_at": "2017-06-09T07:24:14Z", "closed_at": "2017-05-30T17:12:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "It appears that `Group('channel').send()` is trying to call `encode()` on `dict` objects, rather than the inside `str`s. `runserver` reports the following error:\r\n\r\n    ERROR - server - HTTP/WS send decode error: 'dict' object has no attribute 'encode'\r\n\r\nSending an empty `dict` doesn't error out, but an actual (JSON-serializable) `dict` causes this error. To try to track it down, I subclassed `dict` to add my own `encode()` method:\r\n\r\n    class MyDict(dict):\r\n        def __init__(self, **kwargs):\r\n            for k, v in kwargs.items():\r\n                self[k] = v\r\n    \r\n        def encode(self, *args, **kwargs):\r\n            print('args: {}\\tkwargs: {}'.format(args, kwargs))\r\n            return self\r\n\r\nThe print statement shows that it's getting called as `the_dict.encode('utf-8')`. Is it trying to call the method on some part of the dict? All the docs say is that `send()` expects a dict, and when I tried passing in a `str`, I got an exception to the same effect. Yet, it's calling a method which doesn't exist on a normal dict.\r\n\r\nMy environment:\r\n\r\n- Ubuntu 16.04\r\n- Python 3.5.2\r\n- Software versions:\r\n    - asgiref (1.1.2)\r\n    - channels (1.1.3)\r\n    - daphne (1.2.0)\r\n    - Django (1.11.1)\r\n    - Twisted (17.1.0)\r\n    - ASGI backend: Just the default in-process one for now\r\n- What you expected to happen vs. what actually happened: I expected to be able to exchange messages without errors.\r\n- How you're running Channels: runserver\r\n- Console logs and full tracebacks of any errors: See above. No tracebacks were generated, unfortunately.\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/651/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/650", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/650/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/650/comments", "events_url": "https://api.github.com/repos/django/channels/issues/650/events", "html_url": "https://github.com/django/channels/issues/650", "id": 232072817, "node_id": "MDU6SXNzdWUyMzIwNzI4MTc=", "number": 650, "title": "Implement graceful exit in WorkerGroup", "user": {"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-29T17:50:45Z", "updated_at": "2018-02-02T07:51:57Z", "closed_at": "2018-02-02T07:51:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It needs the ability to read the `in_job` status of all subthreads and set the `termed` flag so they all end up terminated or outside of a job before they quit. Follows on from #640.", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/650/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/642", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/642/comments", "events_url": "https://api.github.com/repos/django/channels/issues/642/events", "html_url": "https://github.com/django/channels/issues/642", "id": 231342513, "node_id": "MDU6SXNzdWUyMzEzNDI1MTM=", "number": 642, "title": "Daphne not cleaning up unix socket and does not bind to unix socket if previous file exists", "user": {"login": "robdoesstuff", "id": 3971396, "node_id": "MDQ6VXNlcjM5NzEzOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/3971396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robdoesstuff", "html_url": "https://github.com/robdoesstuff", "followers_url": "https://api.github.com/users/robdoesstuff/followers", "following_url": "https://api.github.com/users/robdoesstuff/following{/other_user}", "gists_url": "https://api.github.com/users/robdoesstuff/gists{/gist_id}", "starred_url": "https://api.github.com/users/robdoesstuff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robdoesstuff/subscriptions", "organizations_url": "https://api.github.com/users/robdoesstuff/orgs", "repos_url": "https://api.github.com/users/robdoesstuff/repos", "events_url": "https://api.github.com/users/robdoesstuff/events{/privacy}", "received_events_url": "https://api.github.com/users/robdoesstuff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159992, "node_id": "MDU6TGFiZWw0MDcxNTk5OTI=", "url": "https://api.github.com/repos/django/channels/labels/blocked/needs-investigation", "name": "blocked/needs-investigation", "color": "f9d0c4", "default": false, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-25T13:39:49Z", "updated_at": "2022-01-11T16:47:51Z", "closed_at": "2018-02-02T07:53:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "In our deployed environment, we find that daphne does not always bind to the unix socket correctly. Cases where I've seen it not bind:\r\n\r\n- On shutdown, daphne does not remove the socket or lock from /var/sockets/daphne.sock or /var/sockets/daphne.sock.lock\r\n- On startup, if there is already a socket at /var/sockets/daphne.sock, daphne will not bind, but will startup without an error message. \r\n\r\nFor now we are reverting to using ports, but if unix sockets would work more reliably, we'd switch back (and prefer to switch back) in the future.\r\n\r\nWe are running daphne via supervisord in a debian-based docker container (python-2.7).", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/642/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/642/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/614", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/614/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/614/comments", "events_url": "https://api.github.com/repos/django/channels/issues/614/events", "html_url": "https://github.com/django/channels/issues/614", "id": 222272079, "node_id": "MDU6SXNzdWUyMjIyNzIwNzk=", "number": 614, "title": "ChannelLiveServerTestCase closes DB connection prematurely", "user": {"login": "jricardo27", "id": 4009357, "node_id": "MDQ6VXNlcjQwMDkzNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4009357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jricardo27", "html_url": "https://github.com/jricardo27", "followers_url": "https://api.github.com/users/jricardo27/followers", "following_url": "https://api.github.com/users/jricardo27/following{/other_user}", "gists_url": "https://api.github.com/users/jricardo27/gists{/gist_id}", "starred_url": "https://api.github.com/users/jricardo27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jricardo27/subscriptions", "organizations_url": "https://api.github.com/users/jricardo27/orgs", "repos_url": "https://api.github.com/users/jricardo27/repos", "events_url": "https://api.github.com/users/jricardo27/events{/privacy}", "received_events_url": "https://api.github.com/users/jricardo27/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159992, "node_id": "MDU6TGFiZWw0MDcxNTk5OTI=", "url": "https://api.github.com/repos/django/channels/labels/blocked/needs-investigation", "name": "blocked/needs-investigation", "color": "f9d0c4", "default": false, "description": null}, {"id": 431300084, "node_id": "MDU6TGFiZWw0MzEzMDAwODQ=", "url": "https://api.github.com/repos/django/channels/labels/exp/advanced", "name": "exp/advanced", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-04-18T01:01:41Z", "updated_at": "2017-07-01T22:59:45Z", "closed_at": "2017-07-01T22:59:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python:     3.5\r\nDjango:     1.11.0\r\nChannels:   commit 5445d31\r\nDaphne:     commit bd03fab\r\nasgi_redis: 1.3.0\r\npsycopg2: 2.7.1\r\n\r\nDatabase:   Postgres\r\n\\-----------------------------\r\n\r\nI'm using the new `ChannelLiveServerTestCase` in conjunction with `Aloe` (former `Lettuce`) for BDD testing.\r\n\r\nThe test:\r\n- Opens the browser.\r\n- Checks that \"Hello World\" is visible.\r\n- It doesn't open a websocket.\r\n\r\nIt works when using `django.contrib.staticfiles.testing.StaticLiveServerTestCase` but not when using `ChannelLiveServerTestCase`.\r\n\r\nIt fails after finishing the test:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/django/db/backends/utils.py\", line 63, in execute\r\n    return self.cursor.execute(sql)\r\npsycopg2.DatabaseError: server closed the connection unexpectedly\r\n\tThis probably means the server terminated abnormally\r\n\tbefore or while processing the request.\r\n```\r\n\r\nThe whole output can be seem at https://travis-ci.org/jricardo27/channels_example/builds/222972480\r\n\r\nI set up a dummy project to reproduce this error, you can access the pull request at:\r\nhttps://github.com/jricardo27/channels_example/pull/6\r\n\r\nAs I mentioned, running it with `StaticLiveServerTestCase` works:\r\nhttps://github.com/jricardo27/channels_example/pull/7\r\nTravis output for the successful test.\r\nhttps://travis-ci.org/jricardo27/channels_example/builds/222975961\r\n\r\nFull Traceback:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/django/db/backends/utils.py\", line 63, in execute\r\n    return self.cursor.execute(sql)\r\npsycopg2.DatabaseError: server closed the connection unexpectedly\r\n\tThis probably means the server terminated abnormally\r\n\tbefore or while processing the request.\r\nThe above exception was the direct cause of the following exception:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/django/test/testcases.py\", line 216, in __call__\r\n    self._post_teardown()\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/channels/test/liveserver.py\", line 224, in _post_teardown\r\n    super(ChannelLiveServerTestCase, self)._post_teardown()\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/django/test/testcases.py\", line 925, in _post_teardown\r\n    self._fixture_teardown()\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/django/test/testcases.py\", line 960, in _fixture_teardown\r\n    inhibit_post_migrate=inhibit_post_migrate)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/django/core/management/__init__.py\", line 130, in call_command\r\n    return command.execute(*args, **defaults)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/django/core/management/base.py\", line 330, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/django/core/management/commands/flush.py\", line 54, in handle\r\n    allow_cascade=allow_cascade)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/django/core/management/sql.py\", line 15, in sql_flush\r\n    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/django/db/backends/base/introspection.py\", line 86, in django_table_names\r\n    existing_tables = self.table_names(include_views=include_views)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/django/db/backends/base/introspection.py\", line 54, in table_names\r\n    return get_names(cursor)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/django/db/backends/base/introspection.py\", line 50, in get_names\r\n    return sorted(ti.name for ti in self.get_table_list(cursor)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/django/db/backends/postgresql/introspection.py\", line 67, in get_table_list\r\n    AND pg_catalog.pg_table_is_visible(c.oid)\"\"\")\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/django/db/backends/utils.py\", line 80, in execute\r\n    return super(CursorDebugWrapper, self).execute(sql, params)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/django/db/backends/utils.py\", line 65, in execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/django/db/utils.py\", line 94, in __exit__\r\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/django/utils/six.py\", line 685, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/django/db/backends/utils.py\", line 63, in execute\r\n    return self.cursor.execute(sql)\r\ndjango.db.utils.DatabaseError: server closed the connection unexpectedly\r\n\tThis probably means the server terminated abnormally\r\n\tbefore or while processing the request.\r\n```", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/614/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/595", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/595/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/595/comments", "events_url": "https://api.github.com/repos/django/channels/issues/595/events", "html_url": "https://github.com/django/channels/issues/595", "id": 220115474, "node_id": "MDU6SXNzdWUyMjAxMTU0NzQ=", "number": 595, "title": "Seeing HTTP/WS send decode error after upgrading to channels 1.1.3", "user": {"login": "sachinrekhi", "id": 192650, "node_id": "MDQ6VXNlcjE5MjY1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/192650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sachinrekhi", "html_url": "https://github.com/sachinrekhi", "followers_url": "https://api.github.com/users/sachinrekhi/followers", "following_url": "https://api.github.com/users/sachinrekhi/following{/other_user}", "gists_url": "https://api.github.com/users/sachinrekhi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sachinrekhi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sachinrekhi/subscriptions", "organizations_url": "https://api.github.com/users/sachinrekhi/orgs", "repos_url": "https://api.github.com/users/sachinrekhi/repos", "events_url": "https://api.github.com/users/sachinrekhi/events{/privacy}", "received_events_url": "https://api.github.com/users/sachinrekhi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159992, "node_id": "MDU6TGFiZWw0MDcxNTk5OTI=", "url": "https://api.github.com/repos/django/channels/labels/blocked/needs-investigation", "name": "blocked/needs-investigation", "color": "f9d0c4", "default": false, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 54, "created_at": "2017-04-07T05:31:52Z", "updated_at": "2023-03-21T18:17:55Z", "closed_at": "2017-06-18T04:49:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I just upgraded Django channels to 1.1.3 as well as the following related libraries:\r\n\r\nchannels==1.1.3\r\ndaphne==1.2.0\r\nasgi-redis==1.3.0\r\nasgiref==1.1.1\r\n\r\nEverything ran fine in my dev environment. But once I pushed to production, installed the new libraries, and completely restarted all services, I immediately started seeing the following error:\r\n\r\n```\r\nERROR: HTTP/WS send decode error: Cannot dispatch message on channel u'daphne.response.dUTtOgoynk!bNiNpvqevU'\r\n```\r\n\r\nThe client was showing the following error:\r\n```\r\nWebSocket connection to 'wss://<url>.com/' failed: Error during WebSocket handshake: Unexpected response code: 403\r\n```\r\n\r\nWhen I downgraded to the previous library versions, everything worked fine again.\r\n\r\nIt appears the issue is during the websocket connect / initial handshake?\r\n\r\nI'm using the enforce_ordering decorator on all my websocket consumers as well as the asgi redis back-end.\r\n\r\nAny thoughts on what's going on?", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/595/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/577", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/577/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/577/comments", "events_url": "https://api.github.com/repos/django/channels/issues/577/events", "html_url": "https://github.com/django/channels/issues/577", "id": 217666053, "node_id": "MDU6SXNzdWUyMTc2NjYwNTM=", "number": 577, "title": "\"scheme\" from Daphne ignored by Channels", "user": {"login": "JohnDoee", "id": 667117, "node_id": "MDQ6VXNlcjY2NzExNw==", "avatar_url": "https://avatars.githubusercontent.com/u/667117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnDoee", "html_url": "https://github.com/JohnDoee", "followers_url": "https://api.github.com/users/JohnDoee/followers", "following_url": "https://api.github.com/users/JohnDoee/following{/other_user}", "gists_url": "https://api.github.com/users/JohnDoee/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnDoee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnDoee/subscriptions", "organizations_url": "https://api.github.com/users/JohnDoee/orgs", "repos_url": "https://api.github.com/users/JohnDoee/repos", "events_url": "https://api.github.com/users/JohnDoee/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnDoee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-28T19:24:05Z", "updated_at": "2017-03-28T20:38:15Z", "closed_at": "2017-03-28T20:38:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Channels ignore the `scheme` key sent by Daphne and this is now a problem with https://github.com/django/daphne/issues/100 fixed.", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/577/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/489", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/489/comments", "events_url": "https://api.github.com/repos/django/channels/issues/489/events", "html_url": "https://github.com/django/channels/issues/489", "id": 201432882, "node_id": "MDU6SXNzdWUyMDE0MzI4ODI=", "number": 489, "title": "Sometimes Django throws 404 when using Redis backend with remote Redis server", "user": {"login": "javiermatos", "id": 2723080, "node_id": "MDQ6VXNlcjI3MjMwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/2723080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javiermatos", "html_url": "https://github.com/javiermatos", "followers_url": "https://api.github.com/users/javiermatos/followers", "following_url": "https://api.github.com/users/javiermatos/following{/other_user}", "gists_url": "https://api.github.com/users/javiermatos/gists{/gist_id}", "starred_url": "https://api.github.com/users/javiermatos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javiermatos/subscriptions", "organizations_url": "https://api.github.com/users/javiermatos/orgs", "repos_url": "https://api.github.com/users/javiermatos/repos", "events_url": "https://api.github.com/users/javiermatos/events{/privacy}", "received_events_url": "https://api.github.com/users/javiermatos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-17T23:09:18Z", "updated_at": "2017-01-18T00:50:20Z", "closed_at": "2017-01-18T00:50:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running a test django project to learn more about channels. I am using latest django version (1.10.5) and also latest channel version (1.0.2). My test project works fine but sometimes I get a 404 error even on django admin page when using runserver. If I disabling channels then runserver works fine.\r\n\r\nI have been changing my settings file and I have found where the problem is. I am having this issue when using `asgi_redis.RedisChannelLayer` backend for CHANNEL_LAYERS while using a remote server. If I change the backend it works fine. If I use the Redis backend but with a local Redis server it works fine. I am only having this issue with remove Redis servers.\r\n\r\nI have tried doing ssh -L 6379:localhost:6379 user@server for local port forwarding to the remote Redis server but I also have the issue when doing this. My remote server is a LXD container in my local network (no latency issue), but I don't think that will be the issue because the database connection works fine and the issue is not happening when changing the channels backend.\r\n\r\nYou can reproduce the issue using a remote redis server with the example project that is in the channels documentation site. I can reproduce the issue in two independent projects that I have done.", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/489/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/484", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/484/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/484/comments", "events_url": "https://api.github.com/repos/django/channels/issues/484/events", "html_url": "https://github.com/django/channels/issues/484", "id": 200791793, "node_id": "MDU6SXNzdWUyMDA3OTE3OTM=", "number": 484, "title": "Channel_session data seems to disappear between messages in class-based consumer.", "user": {"login": "germanjoey", "id": 838930, "node_id": "MDQ6VXNlcjgzODkzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/838930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/germanjoey", "html_url": "https://github.com/germanjoey", "followers_url": "https://api.github.com/users/germanjoey/followers", "following_url": "https://api.github.com/users/germanjoey/following{/other_user}", "gists_url": "https://api.github.com/users/germanjoey/gists{/gist_id}", "starred_url": "https://api.github.com/users/germanjoey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/germanjoey/subscriptions", "organizations_url": "https://api.github.com/users/germanjoey/orgs", "repos_url": "https://api.github.com/users/germanjoey/repos", "events_url": "https://api.github.com/users/germanjoey/events{/privacy}", "received_events_url": "https://api.github.com/users/germanjoey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-01-14T09:04:30Z", "updated_at": "2017-01-18T00:20:45Z", "closed_at": "2017-01-18T00:20:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm currently working on re-implementing the multichat example using class-based Consumers as a way to prep myself (i.e. learn Channels) for my actual project, and I've run into an issue with channel-sessions that I can't figure out. \r\n\r\nMy setup is this:\r\n\r\n1.) the ws_connect function is identical (decorated with @channel_session_user_from_http and routed the same way). it sets message.channel_session['rooms'] = []\r\n2.) chat_join/chat_leave/chat_send are now part of a ChatConsumer class, connected inside of a Demultiplexer class. \r\n\r\nThe user connects just fine, and is able to successfully call chat_join. So, at least something in the session code is working correctly. That is to say, the lines:\r\n\r\n   rooms = self.message.channel_session['rooms']\r\n   rooms_set = set(rooms)\r\n\r\ndo not create any error; the session recognizes that 'rooms' was initialized to an empty list in ws_connect. However, immediately after this, I try to chat_leave the room, and I get a \"TypeError: NoneType is not iterable\" on the equivalent \"rooms_set = set(rooms)\" line in chat_leave, meaning that the 'rooms' key is now undefined in the channel_session for some reason.\r\n\r\nAt this point, I'm stuck because I don't really understand how the sessions are implemented here. I've confirmed that the same session_key is used both times for chat_join and chat_leave, and AFAIK there should be no connection issues with the user that might cause a new session to start. So, what I'm wondering is: when can the session be cleared and/or recreated? Does using demux/mux cause anything goofy to happen with the reply_channels such that session data might be dropped?\r\n\r\nAs an aside, I also noticed that when I tried to create the 'rooms' key in a ChatConsumer.connect method, the session would \"forget\" before I was able to join. It was only after I moved the connect code back to ws_connect that I was able to join the room. So I suspect that something in the class-based-consumer code is causing a session flush? Maybe?\r\n\r\nAny ideas?", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/484/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/482", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/482/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/482/comments", "events_url": "https://api.github.com/repos/django/channels/issues/482/events", "html_url": "https://github.com/django/channels/issues/482", "id": 200403925, "node_id": "MDU6SXNzdWUyMDA0MDM5MjU=", "number": 482, "title": "Data Binding documentation on WebsocketBinding.group_names() inconsistent with implementation", "user": {"login": "devmapal", "id": 5060138, "node_id": "MDQ6VXNlcjUwNjAxMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/5060138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devmapal", "html_url": "https://github.com/devmapal", "followers_url": "https://api.github.com/users/devmapal/followers", "following_url": "https://api.github.com/users/devmapal/following{/other_user}", "gists_url": "https://api.github.com/users/devmapal/gists{/gist_id}", "starred_url": "https://api.github.com/users/devmapal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devmapal/subscriptions", "organizations_url": "https://api.github.com/users/devmapal/orgs", "repos_url": "https://api.github.com/users/devmapal/repos", "events_url": "https://api.github.com/users/devmapal/events{/privacy}", "received_events_url": "https://api.github.com/users/devmapal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-01-12T15:53:38Z", "updated_at": "2017-01-12T18:15:18Z", "closed_at": "2017-01-12T18:09:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Channels version: 1.0.1\r\nAccording to the documentation, `WebsocketBinding.group_names()` dropped the `action` argument, however in the implementation it is still required.\r\n\r\nDocumentation:\r\nhttps://github.com/django/channels/blob/1.0.1/docs/binding.rst\r\n\r\nImplementation:\r\nhttps://github.com/django/channels/blob/1.0.1/channels/binding/base.py#L189\r\n\r\nThanks for looking into it.", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/482/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/481", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/481/comments", "events_url": "https://api.github.com/repos/django/channels/issues/481/events", "html_url": "https://github.com/django/channels/issues/481", "id": 200237527, "node_id": "MDU6SXNzdWUyMDAyMzc1Mjc=", "number": 481, "title": "Messages sent from outside consumers are never sent unless immediate=True is set", "user": {"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-11T23:25:29Z", "updated_at": "2017-01-11T23:35:57Z", "closed_at": "2017-01-11T23:35:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There's a bad interaction between the new message buffering and sending information from outside consumers - because there's no consumer finished signal, the results are never flushed out and sent.", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/481/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/470", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/470/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/470/comments", "events_url": "https://api.github.com/repos/django/channels/issues/470/events", "html_url": "https://github.com/django/channels/issues/470", "id": 199697650, "node_id": "MDU6SXNzdWUxOTk2OTc2NTA=", "number": 470, "title": " 'unicode' object has no attribute 'parseStreamServer'", "user": {"login": "Coder1400", "id": 6343555, "node_id": "MDQ6VXNlcjYzNDM1NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6343555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Coder1400", "html_url": "https://github.com/Coder1400", "followers_url": "https://api.github.com/users/Coder1400/followers", "following_url": "https://api.github.com/users/Coder1400/following{/other_user}", "gists_url": "https://api.github.com/users/Coder1400/gists{/gist_id}", "starred_url": "https://api.github.com/users/Coder1400/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Coder1400/subscriptions", "organizations_url": "https://api.github.com/users/Coder1400/orgs", "repos_url": "https://api.github.com/users/Coder1400/repos", "events_url": "https://api.github.com/users/Coder1400/events{/privacy}", "received_events_url": "https://api.github.com/users/Coder1400/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-01-10T00:04:13Z", "updated_at": "2017-01-10T03:12:21Z", "closed_at": "2017-01-10T02:30:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Howdy partners! First of all I would like to thank @andrewgodwin for such a great app and of course everyone who contributed as well. \r\n\r\nI am receiving an error (traceback below) when I run `./manage.py runserver`. The odd part is that if I run the server on any port other than 8000, it runs and works fine. For instance `./manage.py runserver localhost:8001` works perfectly fine. Another interesting aspect of this issue is that If I run `daphne -p 8000 testproject.asgi:channel_layer` then `./manage.py runworker` everything seems to run fine.  So the problem occurs only when I use runserver with port 8000 (default). \r\n\r\n./manage.py runserver\r\nPerforming system checks...\r\n\r\nSystem check identified no issues (0 silenced).\r\nJanuary 10, 2017 - 01:02:44\r\nDjango version 1.9.7, using settings 'testproject.settings'\r\nStarting Channels development server at http://127.0.0.1:8000/\r\nChannel layer default (asgiref.inmemory.ChannelLayer)\r\nQuit the server with CONTROL-C.\r\n2017-01-10 01:02:44,265 - INFO - worker - Listening on channels http.request, websocket.connect, websocket.disconnect, websocket.receive\r\n2017-01-10 01:02:44,265 - INFO - worker - Listening on channels http.request, websocket.connect, websocket.disconnect, websocket.receive\r\n2017-01-10 01:02:44,266 - INFO - worker - Listening on channels http.request, websocket.connect, websocket.disconnect, websocket.receive\r\n2017-01-10 01:02:44,266 - INFO - worker - Listening on channels http.request, websocket.connect, websocket.disconnect, websocket.receive\r\n2017-01-10 01:02:44,267 - INFO - server - Using busy-loop synchronous mode on channel layer\r\n2017-01-10 01:02:44,267 - INFO - server - Listening on endpoint tcp:port=8000:interface=127.0.0.1\r\nUnhandled exception in thread started by <function wrapper at 0x112596f50>\r\nTraceback (most recent call last):\r\n  File \"/Users/arkenibrahim/.virtualenvs/book/lib/python2.7/site-packages/django/utils/autoreload.py\", line 226, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/Users/arkenibrahim/.virtualenvs/book/lib/python2.7/site-packages/channels/management/commands/runserver.py\", line 89, in inner_run\r\n    root_path=getattr(settings, 'FORCE_SCRIPT_NAME', '') or '',\r\n  File \"/Users/arkenibrahim/.virtualenvs/book/lib/python2.7/site-packages/daphne/server.py\", line 96, in run\r\n    ep = serverFromString(reactor, socket_description)\r\n  File \"/Users/arkenibrahim/.virtualenvs/book/lib/python2.7/site-packages/twisted/internet/endpoints.py\", line 1522, in serverFromString\r\n    return _serverFromStringLegacy(reactor, description, _NO_DEFAULT)\r\n  File \"/Users/arkenibrahim/.virtualenvs/book/lib/python2.7/site-packages/twisted/internet/endpoints.py\", line 1438, in _serverFromStringLegacy\r\n    return plugin.parseStreamServer(reactor, *args, **kw)\r\nAttributeError: 'unicode' object has no attribute 'parseStreamServer'\r\n\r\n\r\n\r\nTraceback is posted above.\r\n\r\n Im using daphne 1.0, channels 1.0, django 1.9.7, asgiref 1.0, Im also using the InMemory layer. \r\n\r\n\r\n\r\nplease help. ", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/470/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/465", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/465/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/465/comments", "events_url": "https://api.github.com/repos/django/channels/issues/465/events", "html_url": "https://github.com/django/channels/issues/465", "id": 199492869, "node_id": "MDU6SXNzdWUxOTk0OTI4Njk=", "number": 465, "title": "Deprecation error when running channels via docker-compose", "user": {"login": "xtrinch", "id": 7256491, "node_id": "MDQ6VXNlcjcyNTY0OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/7256491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xtrinch", "html_url": "https://github.com/xtrinch", "followers_url": "https://api.github.com/users/xtrinch/followers", "following_url": "https://api.github.com/users/xtrinch/following{/other_user}", "gists_url": "https://api.github.com/users/xtrinch/gists{/gist_id}", "starred_url": "https://api.github.com/users/xtrinch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xtrinch/subscriptions", "organizations_url": "https://api.github.com/users/xtrinch/orgs", "repos_url": "https://api.github.com/users/xtrinch/repos", "events_url": "https://api.github.com/users/xtrinch/events{/privacy}", "received_events_url": "https://api.github.com/users/xtrinch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-01-09T07:41:22Z", "updated_at": "2017-01-10T00:05:28Z", "closed_at": "2017-01-09T08:05:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the following exception when running runserver via docker-compose:\r\n\r\n> django_1            | Unhandled exception in thread started by <function wrapper at 0x7f068a02cd70>\r\n> django_1            | Traceback (most recent call last):\r\n> django_1            |   File \"/usr/local/lib/python2.7/site-packages/django/utils/autoreload.py\", line 226, in wrapper\r\n> django_1            |     fn(*args, **kwargs)\r\n> django_1            |   File \"/usr/local/lib/python2.7/site-packages/channels/management/commands/runserver.py\", line 84, in inner_run\r\n> django_1            |     ws_protocols=getattr(settings, 'CHANNELS_WS_PROTOCOLS', None),\r\n> django_1            |   File \"/usr/local/lib/python2.7/site-packages/daphne/server.py\", line 41, in __init__\r\n> django_1            |     ''' % self.__class__.__name__)\r\n> django_1            | Performin\r\ng system checks...\r\n\r\nI have no idea where to go from here, as django is not running serving requests after this exception.\r\n\r\nWhen I run it locally on my machine, everything works okay.\r\n\r\nHere's my requirements.txt:\r\n\r\n> Django==1.10.4 \r\n> psycopg2==2.6.2 \r\n> channels==0.17.3 \r\n> asgi-redis==1.0.0\r\n\r\nAnd here's my docker-compose file:\r\n\r\n    version: '2' \r\n      services:\r\n        redis:\r\n          image: redis:3.0-alpine\r\n        postgres:\r\n            image: postgres\r\n        django:\r\n            build: ../backend\r\n            command:  python backend/manage.py runserver 0.0.0.0:8000\r\n            volumes:\r\n                - ../backend:/backend\r\n            ports:\r\n                - \"8000:8000\"\r\n            depends_on:\r\n                - postgres\r\n                - redis\r\n                - django-migration\r\n        django-migration:\r\n            build: ../backend\r\n            command: python backend/manage.py migrate\r\n            volumes:\r\n              - ../backend:/backend\r\n            depends_on:\r\n              - postgres\r\n        client:\r\n            image: node\r\n            command: bash -c \"cd src && npm start\"\r\n            ports:\r\n                - \"3000:3000\"\r\n\r\nAny ideas?", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/465/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/462", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/462/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/462/comments", "events_url": "https://api.github.com/repos/django/channels/issues/462/events", "html_url": "https://github.com/django/channels/issues/462", "id": 199252044, "node_id": "MDU6SXNzdWUxOTkyNTIwNDQ=", "number": 462, "title": "Test Client causing \"InterfaceError: connection already closed\" on Postgresql", "user": {"login": "linuxlewis", "id": 611649, "node_id": "MDQ6VXNlcjYxMTY0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/611649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linuxlewis", "html_url": "https://github.com/linuxlewis", "followers_url": "https://api.github.com/users/linuxlewis/followers", "following_url": "https://api.github.com/users/linuxlewis/following{/other_user}", "gists_url": "https://api.github.com/users/linuxlewis/gists{/gist_id}", "starred_url": "https://api.github.com/users/linuxlewis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linuxlewis/subscriptions", "organizations_url": "https://api.github.com/users/linuxlewis/orgs", "repos_url": "https://api.github.com/users/linuxlewis/repos", "events_url": "https://api.github.com/users/linuxlewis/events{/privacy}", "received_events_url": "https://api.github.com/users/linuxlewis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-01-06T18:00:59Z", "updated_at": "2017-01-26T01:00:19Z", "closed_at": "2017-01-26T01:00:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We're trying to upgrade from 0.17.3 to master to get the recent `PendingMessageStore` functionality and seeing a bunch of our tests using `channels.tests.Client` fail with an `InterfaceError: connection already closed`\r\n\r\nI've tracked the error down to this commit: https://github.com/django/channels/commit/0ed04a9c06707388687bc85637baaf4909f88961\r\n\r\nIt appears after using the `Client.consume` method the `consumer_finished` signal is sent and subsequently `django.db.close_old_connections` ends up being called which closes the connection.\r\nThe next time that connection is used the `InterfaceError` is thrown\r\n\r\nI'm not so clear this is a bug in channels, django or psycopg2 but I figured I would start here.\r\nWe've worked around the issue by deregistering the `close_old_connections` signal receiver in tests but this doesn't feel like an ideal solution.\r\n\r\nI've pushed a branch demonstrating this error here: https://github.com/linuxlewis/channels/tree/bug/postgresql-interface-closed\r\n\r\nThank you for your time\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/462/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/462/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/432", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/432/comments", "events_url": "https://api.github.com/repos/django/channels/issues/432/events", "html_url": "https://github.com/django/channels/issues/432", "id": 188099766, "node_id": "MDU6SXNzdWUxODgwOTk3NjY=", "number": 432, "title": "'module' object has no attribute 'FunctionType'", "user": {"login": "sento93", "id": 14055414, "node_id": "MDQ6VXNlcjE0MDU1NDE0", "avatar_url": "https://avatars.githubusercontent.com/u/14055414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sento93", "html_url": "https://github.com/sento93", "followers_url": "https://api.github.com/users/sento93/followers", "following_url": "https://api.github.com/users/sento93/following{/other_user}", "gists_url": "https://api.github.com/users/sento93/gists{/gist_id}", "starred_url": "https://api.github.com/users/sento93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sento93/subscriptions", "organizations_url": "https://api.github.com/users/sento93/orgs", "repos_url": "https://api.github.com/users/sento93/repos", "events_url": "https://api.github.com/users/sento93/events{/privacy}", "received_events_url": "https://api.github.com/users/sento93/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2016-11-08T20:49:46Z", "updated_at": "2017-09-20T07:39:56Z", "closed_at": "2016-11-14T17:28:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Channels connect but doesn't send.\r\n\r\nIn the worker console the following error is raised:\r\n\r\n```\r\n2016-11-08 21:38:26,407 - INFO - runworker - Using single-threaded worker.\r\nTraceback (most recent call last):\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/logging/__init__.py\", line 859, in emit\r\n    msg = self.format(record)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/logging/__init__.py\", line 732, in format\r\n    return fmt.format(record)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/logging/__init__.py\", line 471, in format\r\n    record.message = record.getMessage()\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/logging/__init__.py\", line 335, in getMessage\r\n    msg = msg % self.args\r\n  File \"/Library/Python/2.7/site-packages/channels/asgi.py\", line 86, in __str__\r\n    return \"%s (%s)\" % (self.alias, name_that_thing(self.channel_layer))\r\n  File \"/Library/Python/2.7/site-packages/channels/utils.py\", line 25, in name_that_thing\r\n    return name_that_thing(thing.__class__)\r\n  File \"/Library/Python/2.7/site-packages/channels/utils.py\", line 16, in name_that_thing\r\n    if hasattr(thing, \"__class__\") and not isinstance(thing, (types.FunctionType, types.MethodType)):\r\nAttributeError: 'module' object has no attribute 'FunctionType'\r\nLogged from file runworker.py, line 71\r\n```\r\n\r\nInstalled versions:\r\nasgi-redis==1.0.0\r\nasgiref==1.0.0\r\nchannels==0.17.3\r\ndaphne==0.15.0\r\nDjango==1.10.3\r\nredis==2.10.5\r\ntxredisapi==1.4.3", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/432/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/398", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/398/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/398/comments", "events_url": "https://api.github.com/repos/django/channels/issues/398/events", "html_url": "https://github.com/django/channels/issues/398", "id": 183135345, "node_id": "MDU6SXNzdWUxODMxMzUzNDU=", "number": 398, "title": "IPCChannelLayer is unstable", "user": {"login": "bakatrouble", "id": 7340354, "node_id": "MDQ6VXNlcjczNDAzNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7340354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bakatrouble", "html_url": "https://github.com/bakatrouble", "followers_url": "https://api.github.com/users/bakatrouble/followers", "following_url": "https://api.github.com/users/bakatrouble/following{/other_user}", "gists_url": "https://api.github.com/users/bakatrouble/gists{/gist_id}", "starred_url": "https://api.github.com/users/bakatrouble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bakatrouble/subscriptions", "organizations_url": "https://api.github.com/users/bakatrouble/orgs", "repos_url": "https://api.github.com/users/bakatrouble/repos", "events_url": "https://api.github.com/users/bakatrouble/events{/privacy}", "received_events_url": "https://api.github.com/users/bakatrouble/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-10-14T19:45:38Z", "updated_at": "2017-04-06T07:15:08Z", "closed_at": "2017-04-06T07:15:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Title. In websocket consumer, receive method is often called twice or even three times (didn't happen more, yet), sometimes it loses messages. inmemory and redis channels are a lot more stable (switching to redis resolved the problem, as I could see).\n\nI'm running my code on Digitalocean Debian 8.6 jessie box, two workers (runworker) and daphne runned using supervisord, web server is nginx simply redirecting everything to Daphne unix socket.\n\nPython (3.4.2) package versions:\n\n```\nasgi-ipc==1.1.0\nasgi-redis==0.14.1\nasgiref==0.14.0\nautobahn==0.16.0\nchannels==0.17.2\ndaphne==0.15.0\ndefusedxml==0.4.1\nDjango==1.10.1\ndjango-allauth==0.27.0\njsonschema==2.5.1\nmsgpack-python==0.4.8\noauthlib==2.0.0\nPillow==3.3.1\nposix-ipc==1.0.0\npsycopg2==2.6.2\npython3-openid==3.0.10\nredis==2.10.5\nrequests==2.11.1\nrequests-oauthlib==0.7.0\nsix==1.10.0\nTwisted==16.4.1\ntxaio==2.5.1\nzope.interface==4.3.2\n```\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/398/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/394", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/394/comments", "events_url": "https://api.github.com/repos/django/channels/issues/394/events", "html_url": "https://github.com/django/channels/issues/394", "id": 182284140, "node_id": "MDU6SXNzdWUxODIyODQxNDA=", "number": 394, "title": "Very naive checking __all__ fields in WebsocketBinding", "user": {"login": "approxit", "id": 6125496, "node_id": "MDQ6VXNlcjYxMjU0OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/6125496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/approxit", "html_url": "https://github.com/approxit", "followers_url": "https://api.github.com/users/approxit/followers", "following_url": "https://api.github.com/users/approxit/following{/other_user}", "gists_url": "https://api.github.com/users/approxit/gists{/gist_id}", "starred_url": "https://api.github.com/users/approxit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/approxit/subscriptions", "organizations_url": "https://api.github.com/users/approxit/orgs", "repos_url": "https://api.github.com/users/approxit/repos", "events_url": "https://api.github.com/users/approxit/events{/privacy}", "received_events_url": "https://api.github.com/users/approxit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-10-11T14:47:18Z", "updated_at": "2016-10-19T11:59:35Z", "closed_at": "2016-10-15T01:56:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently making bindings to render all fields are done with [single-element-list checking](https://github.com/django/channels/blob/075897d9107b89edadcb5aca34d371df46370820/channels/binding/websockets.py#L58):\n\n``` python\ndef serialize_data(self, instance):\n    \"\"\"\n    Serializes model data into JSON-compatible types.\n    \"\"\"\n    if self.fields == ['__all__']:\n        fields = None\n    else:\n        fields = self.fields\n    data = serializers.serialize('json', [instance], fields=fields)\n    return json.loads(data)[0]['fields']\n```\n\nWe have couple of problems here:\n1. Forces to use only `list`. Many peoples (including me) are using `tuples` for constant data like fields definition in classes. \n   \n   ```\n   # python console\n   > ('__all__',) == ['__all__']\n   False\n   ```\n2. It's not django-like. Django uses [`fields = '__all__'`](https://docs.djangoproject.com/en/1.10/topics/forms/modelforms/#selecting-the-fields-to-use) for all fields. Not `['__all__']`. Let's make it the same!\n3. Using `tuple` results empty `payload.data` pushed via websocket (is it necessary anyways?) which is hard to debug for developers that are not so advanced to browse libraries source code.\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/394/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/393", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/393/comments", "events_url": "https://api.github.com/repos/django/channels/issues/393/events", "html_url": "https://github.com/django/channels/issues/393", "id": 182225252, "node_id": "MDU6SXNzdWUxODIyMjUyNTI=", "number": 393, "title": "Strict ordering of messages leads to only some of the websocket messages getting stuck and unread", "user": {"login": "yatishb", "id": 2919567, "node_id": "MDQ6VXNlcjI5MTk1Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/2919567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yatishb", "html_url": "https://github.com/yatishb", "followers_url": "https://api.github.com/users/yatishb/followers", "following_url": "https://api.github.com/users/yatishb/following{/other_user}", "gists_url": "https://api.github.com/users/yatishb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yatishb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yatishb/subscriptions", "organizations_url": "https://api.github.com/users/yatishb/orgs", "repos_url": "https://api.github.com/users/yatishb/repos", "events_url": "https://api.github.com/users/yatishb/events{/privacy}", "received_events_url": "https://api.github.com/users/yatishb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300084, "node_id": "MDU6TGFiZWw0MzEzMDAwODQ=", "url": "https://api.github.com/repos/django/channels/labels/exp/advanced", "name": "exp/advanced", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-10-11T10:09:04Z", "updated_at": "2019-06-26T19:54:08Z", "closed_at": "2016-10-21T18:59:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm currently running Channels@0.17.2 and faced an issue when using the strict ordering of messages through the `@enforce_ordering` decorator. I've noticed that when multiple messages were sent to my application on a single websocket, the strict ordering restriction seemed to cause some of the messages to get stuck and consequently unread.\n\nThe instruction sequence between lines L96-L117 of the `enforce_ordering` decorator (get next_order from session, test it against current message order, process message, increment next_order in session) is safe against concurrent message processing and ensures proper ordering.\n\nRace condition issues might arise if `session.save()` is called again in the caller function (`finally` in the `channel_session` decorator) at line L66-68. It will then try to save again the same next_order in session while a subsequent message is being processed by another worker.\n\nImproper ordering of the `session.save()` in the caller function can result in an incorrect `__channels_next_order` in the session and cause subsequent messages to get stuck.\n\nHere's how I've been able to reproduce this issue:\n- A couple of messages sent on the websocket. At this time, the message with order 0 would be picked up by the worker 1 and consumed.\n- Upon the first message consumption, worker 1 would increment `__channels_next_order` to 1 and save the session within the `enforce_ordering` decorator.\n- Worker 1 would continue to requeue all messages in the `__wait__` channel and return to the caller function (`@channel_session`) to save `channel_session` again with the next_order=1.\n- At this time, it so happens that worker 1 gets stuck attempting to save the session.\n- Another worker 2, now picks up the second message with order 1. It reads the `next_order=1` and proceeds with consumption.\n- Upon consumption of the second message, worker 2 proceeds to increment next_order to 2 and successfully saves the session.\n- Sometimes it so happens that worker 1 gets unstuck at this point and re-writes the channel_session with an incorrect next_order of 1. This causes an issue when third message (with order 2) can no longer be read as all workers are expecting a message with order 1.\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/393/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/381", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/381/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/381/comments", "events_url": "https://api.github.com/repos/django/channels/issues/381/events", "html_url": "https://github.com/django/channels/issues/381", "id": 180235501, "node_id": "MDU6SXNzdWUxODAyMzU1MDE=", "number": 381, "title": "WebSocket connection denied: origin 'null' not allowed", "user": {"login": "generationtech", "id": 19810545, "node_id": "MDQ6VXNlcjE5ODEwNTQ1", "avatar_url": "https://avatars.githubusercontent.com/u/19810545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/generationtech", "html_url": "https://github.com/generationtech", "followers_url": "https://api.github.com/users/generationtech/followers", "following_url": "https://api.github.com/users/generationtech/following{/other_user}", "gists_url": "https://api.github.com/users/generationtech/gists{/gist_id}", "starred_url": "https://api.github.com/users/generationtech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/generationtech/subscriptions", "organizations_url": "https://api.github.com/users/generationtech/orgs", "repos_url": "https://api.github.com/users/generationtech/repos", "events_url": "https://api.github.com/users/generationtech/events{/privacy}", "received_events_url": "https://api.github.com/users/generationtech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-09-30T07:09:26Z", "updated_at": "2016-10-03T23:35:07Z", "closed_at": "2016-10-03T23:35:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to run the examples on this getting started page\nhttp://channels.readthedocs.io/en/latest/getting-started.html\n\nBut the javascript examples do not work. From an IE console, I get \"WebSocket Error: Incorrect HTTP response. Status code 400, WebSocket connection denied: origin 'null' not allowed\"\n\nFirefox: \"Firefox can't establish a connection to the server at ....\"\n\nChrome: \"WebSocket connection to... failed: Error during WebSocket handshake: Unexpected response code: 400\"\n\nThe django/runserver error logs: \"ws_protocol - WebSocket closed before handshake established\n2016-09-30 07:01:34,442 - DEBUG - http_protocol - Connection http.response!Fimiifon did not get successful WS handshake.\"\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/381/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/368", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/368/comments", "events_url": "https://api.github.com/repos/django/channels/issues/368/events", "html_url": "https://github.com/django/channels/issues/368", "id": 177256719, "node_id": "MDU6SXNzdWUxNzcyNTY3MTk=", "number": 368, "title": "Tests fail after version update", "user": {"login": "DebVortex", "id": 1127882, "node_id": "MDQ6VXNlcjExMjc4ODI=", "avatar_url": "https://avatars.githubusercontent.com/u/1127882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DebVortex", "html_url": "https://github.com/DebVortex", "followers_url": "https://api.github.com/users/DebVortex/followers", "following_url": "https://api.github.com/users/DebVortex/following{/other_user}", "gists_url": "https://api.github.com/users/DebVortex/gists{/gist_id}", "starred_url": "https://api.github.com/users/DebVortex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DebVortex/subscriptions", "organizations_url": "https://api.github.com/users/DebVortex/orgs", "repos_url": "https://api.github.com/users/DebVortex/repos", "events_url": "https://api.github.com/users/DebVortex/events{/privacy}", "received_events_url": "https://api.github.com/users/DebVortex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-09-15T18:45:16Z", "updated_at": "2016-12-05T02:39:55Z", "closed_at": "2016-12-05T02:39:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nfor my sideprojects to play around with channels, I have quite a good testcoverage and also use a CI System and requires.io to keep my versions up to date. However, the current pullrequests fails and I struggle to find the reason.\n\nThe related version changes are:\n- asgiref from 0.13.3 to 0.14.0\n- channels from 0.16.1 to 0.17.2\n- daphne from 0.14.2 to 0.15.0\n- Django from 1.9.7 to 1.10.1\n\nIn the pullrequest are a few other changes, yet I doubt they are related to the problem.\n\nAll tests fail with the message, that a consumer can't be found for the supplied message. Has the `apply_routes` decorator changed lately?\n\nI tried to reproduce the problem with an \"empty\" project. Here Is was I did:\n- created a new virtualenv with python 3\n- installed the packages above in the provided versions with `pip install Django==1.10.1 daphne==0.15.0 channels==0.17.2 asgiref==0.14.0`\n- created a new project with `django-admin startproject channels_test` and go into the directory\n- created a app with `python manage.py startapp foo`\n- added `channels` and `foo` to installed apps\n- added a `routing.py`, a `tests.py` and a `consumers.py` to the foo app with the content below\n- added the following `CHANNEL_LAYERS` setting\n\nin settings.py\n\n```\nCHANNEL_LAYERS = {\n    \"default\": {\n        \"BACKEND\": \"asgiref.inmemory.ChannelLayer\",\n        \"ROUTING\": \"foo.routing.channel_routing\",\n    },\n}\n```\n\nrouting.py\n\n```\nfrom channels.routing import route\n\nfrom .consumers import ws_connect\n\nchannel_routing = [\n    route(\"websocket.connect\", ws_connect, path=r\"/ws\"),\n]\n```\n\ncomsumers.py\n\n```\nfrom channels import Group\nfrom channels.auth import channel_session_user_from_http\n\n\n@channel_session_user_from_http\ndef ws_connect(message):\n    if message.user.is_authenticated():\n        Group('user-{}'.format(message.user.pk)).add(message.reply_channel)\n        Group('user-{}'.format(message.user.pk)).send({'text': \"Connected!\"})\n    else:\n        message.reply_channel.send({'text': \"Not authenticated.\"})\n```\n\ntests.py\n\n```\nfrom channels.tests import ChannelTestCase, apply_routes\nfrom channels.tests.http import HttpClient\nfrom django.contrib.auth import get_user_model\n\nfrom foo.routing import channel_routing\n\nuser_model = get_user_model()\n\n\n@apply_routes([channel_routing])\nclass TestWebsocketConsumer(ChannelTestCase):\n    \"\"\"Test the Websocket consumers.\"\"\"\n\n    def test_ws_connect_not_authenticated(self):\n        \"\"\"Test that ws_connect is not possible if user is not logged in.\"\"\"\n        client = HttpClient()\n        client.send_and_consume(u'websocket.connect', {'path': \"/ws\"})\n        response = client.receive()\n        self.assertEqual(response, {'text': \"Not authenticated.\"})\n\n    def test_ws_connect_authenticated(self):\n        \"\"\"Test that ws_connect is possible if user is logged in.\"\"\"\n        user_model.objects.create_user('Ada Lovelace', 'user_1@test.test', '123')\n        client = HttpClient()\n        client.login(username='Ada Lovelace', password='123')\n        client.send_and_consume(u'websocket.connect', {'path': \"/ws\"})\n        response = client.receive()\n        self.assertEqual(response, {'text': '{\"info\": \"Connected!\"}'})\n```\n\nNow, when I run the tests I get the following output:\n\n```\n$ python manage.py test\nCreating test database for alias 'default'...\nFF\n======================================================================\nFAIL: test_ws_connect_authenticated (foo.tests.TestWebsocketConsumer)\nTest that ws_connect is possible if user is logged in.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/foo/channels_test/foo/tests.py\", line 26, in test_ws_connect_authenticated\n    client.send_and_consume(u'websocket.connect', {'path': \"/ws\"})\n  File \"/home/max/.virtualenvs/channel-test/lib/python3.4/site-packages/channels/tests/base.py\", line 127, in send_and_consume\n    return self.consume(channel, fail_on_none=fail_on_none)\n  File \"/home/max/.virtualenvs/channel-test/lib/python3.4/site-packages/channels/tests/base.py\", line 118, in consume\n    raise AssertionError(\"Can't find consumer for message %s\" % message)\nAssertionError: Can't find consumer for message <channels.message.Message object at 0x7f5029927b38>\n\n======================================================================\nFAIL: test_ws_connect_not_authenticated (foo.tests.TestWebsocketConsumer)\nTest that ws_connect is not possible if user is not logged in.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/foo/channels_test/foo/tests.py\", line 17, in test_ws_connect_not_authenticated\n    client.send_and_consume(u'websocket.connect', {'path': \"/ws\"})\n  File \"/home/max/.virtualenvs/channel-test/lib/python3.4/site-packages/channels/tests/base.py\", line 127, in send_and_consume\n    return self.consume(channel, fail_on_none=fail_on_none)\n  File \"/home/max/.virtualenvs/channel-test/lib/python3.4/site-packages/channels/tests/base.py\", line 118, in consume\n    raise AssertionError(\"Can't find consumer for message %s\" % message)\nAssertionError: Can't find consumer for message <channels.message.Message object at 0x7f5029932b00>\n\n----------------------------------------------------------------------\nRan 2 tests in 0.087s\n\nFAILED (failures=2)\nDestroying test database for alias 'default'...\n```\n\nWhat change have I missed? Unfortunately, the test client is not documented, yet.\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/368/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/366", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/366/comments", "events_url": "https://api.github.com/repos/django/channels/issues/366/events", "html_url": "https://github.com/django/channels/issues/366", "id": 177122946, "node_id": "MDU6SXNzdWUxNzcxMjI5NDY=", "number": 366, "title": "request.META['SERVER_PORT'] should be a string (?)", "user": {"login": "txels", "id": 874958, "node_id": "MDQ6VXNlcjg3NDk1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/874958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/txels", "html_url": "https://github.com/txels", "followers_url": "https://api.github.com/users/txels/followers", "following_url": "https://api.github.com/users/txels/following{/other_user}", "gists_url": "https://api.github.com/users/txels/gists{/gist_id}", "starred_url": "https://api.github.com/users/txels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/txels/subscriptions", "organizations_url": "https://api.github.com/users/txels/orgs", "repos_url": "https://api.github.com/users/txels/repos", "events_url": "https://api.github.com/users/txels/events{/privacy}", "received_events_url": "https://api.github.com/users/txels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-09-15T08:55:11Z", "updated_at": "2016-09-23T18:37:45Z", "closed_at": "2016-09-23T18:37:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Found while debugging an issue with Opbeat: https://github.com/opbeat/opbeat_python/issues/131\n\nASGI request in django channels initialises `request.META['SERVER_PORT']` using an integer value: https://github.com/django/channels/blob/master/channels/handler.py#L68\n\n```\nipdb> self.message['server']\n['127.0.0.1', 7000]\n```\n\nThis later results in:\n\n```\nipdb> request.META['SERVER_PORT']\n7000\n```\n\nThis appears to be in contradiction with the django docs (https://docs.djangoproject.com/en/1.10/ref/request-response/#django.http.HttpRequest.META) that state:\n\n> SERVER_PORT \u2013 The port of the server (as a string).\n\nWhich causes the mismatch and failure to validate when posting to opbeat.\n\nTo me it feels that port should be handled as an integer rather than a string, but I see that using a string goes back to the WSGI spec https://www.python.org/dev/peps/pep-0333/#environ-variables and probably is a heritage from CGI times.\n\nI wonder which is the correct way forward. If this should be a string in ASGI requests as well, I'm happy to volunteer a PR.\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/366/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/365", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/365/comments", "events_url": "https://api.github.com/repos/django/channels/issues/365/events", "html_url": "https://github.com/django/channels/issues/365", "id": 177053361, "node_id": "MDU6SXNzdWUxNzcwNTMzNjE=", "number": 365, "title": "Transport WebSocket Origin header through ASGI", "user": {"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-14T23:57:36Z", "updated_at": "2017-04-08T14:15:34Z", "closed_at": "2017-04-08T14:15:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is so it can be used at connection time to deny the connection via #327, mitigating cross-site websocket forgery attacks.\n\n(Issue was first mentioned as #364)\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/365/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/356", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/356/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/356/comments", "events_url": "https://api.github.com/repos/django/channels/issues/356/events", "html_url": "https://github.com/django/channels/issues/356", "id": 176255961, "node_id": "MDU6SXNzdWUxNzYyNTU5NjE=", "number": 356, "title": "Forwarding connect message to another channel and session creation", "user": {"login": "raphael-boucher", "id": 3764018, "node_id": "MDQ6VXNlcjM3NjQwMTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3764018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raphael-boucher", "html_url": "https://github.com/raphael-boucher", "followers_url": "https://api.github.com/users/raphael-boucher/followers", "following_url": "https://api.github.com/users/raphael-boucher/following{/other_user}", "gists_url": "https://api.github.com/users/raphael-boucher/gists{/gist_id}", "starred_url": "https://api.github.com/users/raphael-boucher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raphael-boucher/subscriptions", "organizations_url": "https://api.github.com/users/raphael-boucher/orgs", "repos_url": "https://api.github.com/users/raphael-boucher/repos", "events_url": "https://api.github.com/users/raphael-boucher/events{/privacy}", "received_events_url": "https://api.github.com/users/raphael-boucher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-09-11T17:59:21Z", "updated_at": "2018-02-02T07:46:08Z", "closed_at": "2018-02-02T07:46:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm forwarding the connection message from a channel that creates the session to another channel that suppose the session exists, like this:\n\n``` python\nclass AnotherConsumer(BaseConsumer):\n    # get the session, that needs to be already created\n    channel_user_session = True\n\n    method_mapping = {\n        'another.connect': 'raw_connect',\n    }\n\nclass MyConsumer(JSONWebsocketConsumer):\n    # create the session from http cookies sent on connect message\n    http_user = True\n\n    def connect(message):\n         Channel('another').send(message.content)\n```\n\nWhen using `runserver`, the session is lost in the second consumer most of the time (it works randomly and rarely).\nWhen using `runserver --no_worker` + `runworker` or setting a breaking point just before the fowarding, it works fine all the time.\n\nA solution I have right now is to create the session again on the second consumer, but I would like to avoid that if possible.\nI suppose the session is not fully registered when the message is forwarded to the second channel in `runserver` mode. Any idea how to ensure that ?\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/356/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/349", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/349/comments", "events_url": "https://api.github.com/repos/django/channels/issues/349/events", "html_url": "https://github.com/django/channels/issues/349", "id": 176135848, "node_id": "MDU6SXNzdWUxNzYxMzU4NDg=", "number": 349, "title": "ValueError exceptions are getting swallowed so there's effectively no error checking on messages", "user": {"login": "ssteinerx", "id": 43063, "node_id": "MDQ6VXNlcjQzMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/43063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssteinerx", "html_url": "https://github.com/ssteinerx", "followers_url": "https://api.github.com/users/ssteinerx/followers", "following_url": "https://api.github.com/users/ssteinerx/following{/other_user}", "gists_url": "https://api.github.com/users/ssteinerx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssteinerx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssteinerx/subscriptions", "organizations_url": "https://api.github.com/users/ssteinerx/orgs", "repos_url": "https://api.github.com/users/ssteinerx/repos", "events_url": "https://api.github.com/users/ssteinerx/events{/privacy}", "received_events_url": "https://api.github.com/users/ssteinerx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300040, "node_id": "MDU6TGFiZWw0MzEzMDAwNDA=", "url": "https://api.github.com/repos/django/channels/labels/exp/beginner", "name": "exp/beginner", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-09-09T23:22:52Z", "updated_at": "2016-09-11T17:12:15Z", "closed_at": "2016-09-11T17:12:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you pass in totally bogus information into e.g. a Group.send(), the raised ValueError is being caught inside Channels rendering the error checking basically null and void.\n\nFor example, you can do this without complaint:\n\n```\nfrom channels import Group\n\ndef should_oughta_do_bad_things():\n  Group('any_old_group').send(\"anything at all\")\n```\n\nI haven't hunted it down, but someone catches the ValueError raised in the Groups class:\n\n```\n def send(self, content):\n        if not isinstance(content, dict):\n            raise ValueError(\"You can only send dicts as content on channels.\")\n        self.channel_layer.send_group(self.name, content)\n```\n\nAnd no error ever shows up -- the send() call is just silently ignored.\n\nThis makes silly mistakes (like typing \"test\" instead of \"text\" for a dictionary key!) incredibly difficult to track down.\n\nEven with `manage.py runserver -v 2`, nothing ever comes out, just silent failure.\n\nAm I just missing something?\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/349/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/337", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/337/comments", "events_url": "https://api.github.com/repos/django/channels/issues/337/events", "html_url": "https://github.com/django/channels/issues/337", "id": 174934885, "node_id": "MDU6SXNzdWUxNzQ5MzQ4ODU=", "number": 337, "title": "Authentication decorators not working under 1.9?", "user": {"login": "houbysoft", "id": 212043, "node_id": "MDQ6VXNlcjIxMjA0Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/212043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houbysoft", "html_url": "https://github.com/houbysoft", "followers_url": "https://api.github.com/users/houbysoft/followers", "following_url": "https://api.github.com/users/houbysoft/following{/other_user}", "gists_url": "https://api.github.com/users/houbysoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/houbysoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houbysoft/subscriptions", "organizations_url": "https://api.github.com/users/houbysoft/orgs", "repos_url": "https://api.github.com/users/houbysoft/repos", "events_url": "https://api.github.com/users/houbysoft/events{/privacy}", "received_events_url": "https://api.github.com/users/houbysoft/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}, {"id": 441051344, "node_id": "MDU6TGFiZWw0NDEwNTEzNDQ=", "url": "https://api.github.com/repos/django/channels/labels/res/worksforme", "name": "res/worksforme", "color": "dddddd", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "andrewgodwin", "id": 36182, "node_id": "MDQ6VXNlcjM2MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgodwin", "html_url": "https://github.com/andrewgodwin", "followers_url": "https://api.github.com/users/andrewgodwin/followers", "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions", "organizations_url": "https://api.github.com/users/andrewgodwin/orgs", "repos_url": "https://api.github.com/users/andrewgodwin/repos", "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgodwin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2016-09-04T06:56:34Z", "updated_at": "2016-09-12T10:54:06Z", "closed_at": "2016-09-12T10:53:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure what I could be doing wrong. This is a very similar question to https://github.com/andrewgodwin/channels/issues/176; I am also seeing only an `AnonymousUser` instead of the logged in user. \n\nI described how I'm calling stuff here : http://stackoverflow.com/questions/39314097/channel-session-user-from-http-not-working-on-heroku-working-locally \n\nWhen running locally everything works fine. But when running on Heroku with the exact same code, I only ever get an AnonymousUser.\n\nI also checked the headers as suggested in issue 176; they seem to be forwarded fine to heroku -- message['headers'] contains a ['cookie', X] tuple where X are the exact same cookies as a normal view gets in request.COOKIES. \n\nAny ideas what could be going on? Again, exact same code is running on both local and heroku, I don't know what else to try.\n\nThanks :)\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/337/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/330", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/330/comments", "events_url": "https://api.github.com/repos/django/channels/issues/330/events", "html_url": "https://github.com/django/channels/issues/330", "id": 174334034, "node_id": "MDU6SXNzdWUxNzQzMzQwMzQ=", "number": 330, "title": "How to write unittest for WebSocketConsumer class?", "user": {"login": "cambridge0427", "id": 10479720, "node_id": "MDQ6VXNlcjEwNDc5NzIw", "avatar_url": "https://avatars.githubusercontent.com/u/10479720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cambridge0427", "html_url": "https://github.com/cambridge0427", "followers_url": "https://api.github.com/users/cambridge0427/followers", "following_url": "https://api.github.com/users/cambridge0427/following{/other_user}", "gists_url": "https://api.github.com/users/cambridge0427/gists{/gist_id}", "starred_url": "https://api.github.com/users/cambridge0427/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cambridge0427/subscriptions", "organizations_url": "https://api.github.com/users/cambridge0427/orgs", "repos_url": "https://api.github.com/users/cambridge0427/repos", "events_url": "https://api.github.com/users/cambridge0427/events{/privacy}", "received_events_url": "https://api.github.com/users/cambridge0427/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-08-31T17:39:28Z", "updated_at": "2016-09-09T12:50:26Z", "closed_at": "2016-09-09T12:50:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\n\nI am trying to write some test cases for my websocket consumer class (which inherits JsonWebsocketConsumer ) But I keep getting an error saying \"AssertionError: Channel name not valid\".  Could you kindly provide some help about where went wrong?\n\nHere is approximately my test code:\n\n```\nclass MyTestCase(ChannelTestCase): \n       def test_a_thing(self):\n            with apply_routes([route_class(WSConsumer)]):\n                    client = Client()\n                    consumer = client.send_and_consume('websocket.receive', {'METHOD': 'subscribe'})\n```\n\nIs there any examples about how to unittest websocket consumer class? I was looking at the code under channels.tests.test_generic.\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/330/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/315", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/315/comments", "events_url": "https://api.github.com/repos/django/channels/issues/315/events", "html_url": "https://github.com/django/channels/issues/315", "id": 173112512, "node_id": "MDU6SXNzdWUxNzMxMTI1MTI=", "number": 315, "title": "Redis DB keeps growing", "user": {"login": "oTree-org", "id": 5423929, "node_id": "MDQ6VXNlcjU0MjM5Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/5423929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oTree-org", "html_url": "https://github.com/oTree-org", "followers_url": "https://api.github.com/users/oTree-org/followers", "following_url": "https://api.github.com/users/oTree-org/following{/other_user}", "gists_url": "https://api.github.com/users/oTree-org/gists{/gist_id}", "starred_url": "https://api.github.com/users/oTree-org/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oTree-org/subscriptions", "organizations_url": "https://api.github.com/users/oTree-org/orgs", "repos_url": "https://api.github.com/users/oTree-org/repos", "events_url": "https://api.github.com/users/oTree-org/events{/privacy}", "received_events_url": "https://api.github.com/users/oTree-org/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-25T04:38:13Z", "updated_at": "2016-08-25T05:39:31Z", "closed_at": "2016-08-25T05:11:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use my app, the number of `asgi` keys in my Redis DB keeps growing, and does not return to its baseline after use (or after restarting the server, etc). This sometimes results in an memory-over-limit error (>30 MB after 1 hour of use by about 100 people).\n\nThe keys look like this:\n\n```\n\"asgi::chgroups:websocket.send!QnCLrDsVtZwK\"\n\"asgi::chgroups:websocket.send!DzDyqqEiaaXB\"\n\"asgi::chgroups:websocket.send!dBXxcujwEAcQ\"\n```\n\nAnd their values correspond to my various channel-group names, e.g.:\n\n```\n{b'wait-page-26-page10-group2'}\n{b'auto-advance-3fautb4x'}\n{b'auto-advance-ky4g5ia0'}\n{b'browser-bots-client-vrlwv5o6'}\n{b'auto-advance-tqwtvyki'}\n```\n\nIt seems most keys are getting deleted, but many are not. For example, I have a test suite that simulates clicking through ~500 pages. During the test run, the number of Redis keys jumps from 0 to 1000, and within a minute of completion it drops down to 300 and stays there. Most pages just have 1 websocket channel connection; it's the auto-advance-\\* groups, which account for 80% of the Redis keys.\n\nIs it expected that the Redis DB accumulates ASGI keys over time that need to be flushed by my code explicitly?\n\nHere is my [consumers.py](https://github.com/oTree-org/otree-core/blob/master/otree/channels/consumers.py); I am discarding each channel on disconnect.\n\nAdditional info:\n- Same thing happens locally and on Heroku.\n- It happens whether I use Chrome or Firefox.\n- I'm using the latest Channels (channels==0.17.2) and Daphne (0.14.3), but this also happened with channels 0.13.\n- Python 3.5\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/315/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/295", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/295/comments", "events_url": "https://api.github.com/repos/django/channels/issues/295/events", "html_url": "https://github.com/django/channels/issues/295", "id": 170791434, "node_id": "MDU6SXNzdWUxNzA3OTE0MzQ=", "number": 295, "title": "ImportError: cannot import name 'DEFAULT_CHANNEL_LAYER'", "user": {"login": "lexygon", "id": 9084622, "node_id": "MDQ6VXNlcjkwODQ2MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/9084622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lexygon", "html_url": "https://github.com/lexygon", "followers_url": "https://api.github.com/users/lexygon/followers", "following_url": "https://api.github.com/users/lexygon/following{/other_user}", "gists_url": "https://api.github.com/users/lexygon/gists{/gist_id}", "starred_url": "https://api.github.com/users/lexygon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lexygon/subscriptions", "organizations_url": "https://api.github.com/users/lexygon/orgs", "repos_url": "https://api.github.com/users/lexygon/repos", "events_url": "https://api.github.com/users/lexygon/events{/privacy}", "received_events_url": "https://api.github.com/users/lexygon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-08-12T03:16:01Z", "updated_at": "2022-12-23T08:52:24Z", "closed_at": "2016-08-26T04:43:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I cannot say I'm good at submitting issues etc. But I'm going to try it. So I hope this will help. I just faced an error when I'm trying to run the databinding example which is in your channels-examples repo.\n\nMy channels version is 0.17.2 and I installed it from pip. Here is the error:\n\n```\nTraceback (most recent call last):\n  File \"manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/usr/lib/python3.5/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\n    utility.execute()\n  File \"/usr/lib/python3.5/site-packages/django/core/management/__init__.py\", line 341, in execute\n    django.setup()\n  File \"/usr/lib/python3.5/site-packages/django/__init__.py\", line 27, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/usr/lib/python3.5/site-packages/django/apps/registry.py\", line 108, in populate\n    app_config.import_models(all_models)\n  File \"/usr/lib/python3.5/site-packages/django/apps/config.py\", line 199, in import_models\n    self.models_module = import_module(models_module_name)\n  File \"/usr/lib/python3.5/importlib/__init__.py\", line 126, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\n  File \"<frozen importlib._bootstrap_external>\", line 665, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\n  File \"/home/lexygon/Downloads/channels-examples-master/databinding/values/models.py\", line 2, in <module>\n    from channels.binding.websockets import WebsocketBinding\n  File \"/usr/lib/python3.5/site-packages/channels/binding/__init__.py\", line 1, in <module>\n    from .base import Binding  # NOQA isort:skip\n  File \"/usr/lib/python3.5/site-packages/channels/binding/base.py\", line 8, in <module>\n    from ..channel import Group\n  File \"/usr/lib/python3.5/site-packages/channels/channel.py\", line 5, in <module>\n    from channels import DEFAULT_CHANNEL_LAYER, channel_layers\nImportError: cannot import name 'DEFAULT_CHANNEL_LAYER'\n```\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/295/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/285", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/285/comments", "events_url": "https://api.github.com/repos/django/channels/issues/285/events", "html_url": "https://github.com/django/channels/issues/285", "id": 169178347, "node_id": "MDU6SXNzdWUxNjkxNzgzNDc=", "number": 285, "title": "Workers reconnecting after the Channel Layer (Redis) briefly goes offline ", "user": {"login": "Zacharilius", "id": 3036743, "node_id": "MDQ6VXNlcjMwMzY3NDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3036743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zacharilius", "html_url": "https://github.com/Zacharilius", "followers_url": "https://api.github.com/users/Zacharilius/followers", "following_url": "https://api.github.com/users/Zacharilius/following{/other_user}", "gists_url": "https://api.github.com/users/Zacharilius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zacharilius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zacharilius/subscriptions", "organizations_url": "https://api.github.com/users/Zacharilius/orgs", "repos_url": "https://api.github.com/users/Zacharilius/repos", "events_url": "https://api.github.com/users/Zacharilius/events{/privacy}", "received_events_url": "https://api.github.com/users/Zacharilius/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2016-08-03T16:44:27Z", "updated_at": "2017-03-16T00:43:56Z", "closed_at": "2016-09-23T19:21:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think I'm having an issue with workers reconnecting to Daphne after Redis goes offline.\n1. Run python manage.py runserver\n2. 1+ Web socket connects. \n3. Redis stops, this causes the workers to die. \n4. Redis starts. \n5. Workers are restarted. \n6. No HTTP  requests succeed and I get a **503 Service Unavailable Worker server failed to respond within time limit. Daphne** error. \n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/285/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/280", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/280/comments", "events_url": "https://api.github.com/repos/django/channels/issues/280/events", "html_url": "https://github.com/django/channels/issues/280", "id": 168775674, "node_id": "MDU6SXNzdWUxNjg3NzU2NzQ=", "number": 280, "title": "Websocket close user", "user": {"login": "kowsari", "id": 1079552, "node_id": "MDQ6VXNlcjEwNzk1NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1079552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kowsari", "html_url": "https://github.com/kowsari", "followers_url": "https://api.github.com/users/kowsari/followers", "following_url": "https://api.github.com/users/kowsari/following{/other_user}", "gists_url": "https://api.github.com/users/kowsari/gists{/gist_id}", "starred_url": "https://api.github.com/users/kowsari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kowsari/subscriptions", "organizations_url": "https://api.github.com/users/kowsari/orgs", "repos_url": "https://api.github.com/users/kowsari/repos", "events_url": "https://api.github.com/users/kowsari/events{/privacy}", "received_events_url": "https://api.github.com/users/kowsari/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-08-02T00:50:05Z", "updated_at": "2016-08-26T04:42:20Z", "closed_at": "2016-08-26T04:42:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\nFirst of all I would like thank you for the wonderfully useful module that you have developed. This will provide alot of realtime functionality for us.\n\nI would like to implement a presence module that allow me to keep track of exactly who is logged into the server and available to chat at any moment. \n\nI am a channels newbie and my question is how to get the message.user info in a websocket_disconnect. I have added the channel_session_user_from_http decorator to my consumers.py but I seem to be getting Anonymous user. For me to keep track of logged in/out users I need to be able to get the user info for both connecton and disconnection from the server.\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/280/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/268", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/268/comments", "events_url": "https://api.github.com/repos/django/channels/issues/268/events", "html_url": "https://github.com/django/channels/issues/268", "id": 167239200, "node_id": "MDU6SXNzdWUxNjcyMzkyMDA=", "number": 268, "title": "WebSocket is closed before the connection is established.", "user": {"login": "RamezIssac", "id": 6247918, "node_id": "MDQ6VXNlcjYyNDc5MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6247918?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RamezIssac", "html_url": "https://github.com/RamezIssac", "followers_url": "https://api.github.com/users/RamezIssac/followers", "following_url": "https://api.github.com/users/RamezIssac/following{/other_user}", "gists_url": "https://api.github.com/users/RamezIssac/gists{/gist_id}", "starred_url": "https://api.github.com/users/RamezIssac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RamezIssac/subscriptions", "organizations_url": "https://api.github.com/users/RamezIssac/orgs", "repos_url": "https://api.github.com/users/RamezIssac/repos", "events_url": "https://api.github.com/users/RamezIssac/events{/privacy}", "received_events_url": "https://api.github.com/users/RamezIssac/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-07-24T15:40:03Z", "updated_at": "2017-09-28T04:58:07Z", "closed_at": "2016-07-25T21:00:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello ,\n\nThis issue is regarding troubleshooting channels deployment behind Nginx. \n\nWhen code executes the websocket connect , browser developer console logs :\n`WebSocket connection to 'ws://mydomain/ws-conversation/' failed: WebSocket is closed before the connection is established.`\nand it keeps on repeating.\n\nrunserver output pattern looks like this \n\n```\n2016-07-24 15:21:24,822 - DEBUG - runserver - Worker thread running\n2016-07-24 15:21:24,823 - INFO - worker - Listening on channels http.request, websocket.connect, websocket.disconnect, websocket.receive\n2016-07-24 15:21:24,823 - DEBUG - runserver - Daphne running, listening on 127.0.0.1:8008\n2016-07-24 15:21:24,830 - DEBUG - runserver - Worker thread running\n2016-07-24 15:21:24,830 - INFO - worker - Listening on channels http.request, websocket.connect, websocket.disconnect, websocket.receive\n2016-07-24 15:22:07,778 - DEBUG - ws_protocol - WebSocket open for websocket.send!HyxutRQa\n[2016/07/24 15:22:07] WebSocket CONNECT /ws-conversation/ [127.0.0.1:55202]\n2016-07-24 15:22:07,780 - DEBUG - worker - Got message on websocket.connect (reply websocket.send!HyxutRQa)\n2016-07-24 15:22:07,781 - DEBUG - worker - Dispatching message on websocket.connect to channels.auth.inner\n2016-07-24 15:22:07,787 - DEBUG - http_protocol - Upgraded connection http.response!UcYwJRBL to WebSocket websocket.send!HyxutRQa\n2016-07-24 15:22:09,352 - DEBUG - ws_protocol - WebSocket closed for websocket.send!HyxutRQa\n[2016/07/24 15:22:09] WebSocket DISCONNECT /ws-conversation/ [127.0.0.1:55202]\n2016-07-24 15:22:09,357 - DEBUG - worker - Got message on websocket.disconnect (reply websocket.send!HyxutRQa)\n2016-07-24 15:22:09,358 - DEBUG - worker - Dispatching message on websocket.disconnect to conversations.consumers.ws_disconnect\n2016-07-24 15:22:40,976 - DEBUG - ws_protocol - WebSocket open for websocket.send!uinbgbns\n[2016/07/24 15:22:40] WebSocket CONNECT /ws-conversation/ [127.0.0.1:55203]\n2016-07-24 15:22:40,978 - DEBUG - http_protocol - Upgraded connection http.response!mFuNtCCl to WebSocket websocket.send!uinbgbns\n2016-07-24 15:22:40,980 - DEBUG - worker - Got message on websocket.connect (reply websocket.send!uinbgbns)\n2016-07-24 15:22:40,981 - DEBUG - worker - Dispatching message on websocket.connect to channels.auth.inner\n2016-07-24 15:23:11,784 - DEBUG - ws_protocol - WebSocket open for websocket.send!PjtLvmxT\n[2016/07/24 15:23:11] WebSocket CONNECT /ws-conversation/ [127.0.0.1:55204]\n2016-07-24 15:23:11,785 - DEBUG - http_protocol - Upgraded connection http.response!dQdBXPPt to WebSocket websocket.send!PjtLvmxT\n2016-07-24 15:23:11,791 - DEBUG - worker - Got message on websocket.connect (reply websocket.send!PjtLvmxT)\n2016-07-24 15:23:11,792 - DEBUG - worker - Dispatching message on websocket.connect to channels.auth.inner\n2016-07-24 15:23:13,359 - DEBUG - ws_protocol - WebSocket closed for websocket.send!PjtLvmxT\n[2016/07/24 15:23:13] WebSocket DISCONNECT /ws-conversation/ [127.0.0.1:55204]\n\n```\n\nMy nginx configuration looks like this \n\n_/etc/nginx/nginx.conf_\n\n```\nhttp {\n          map $http_upgrade $connection_upgrade {\n        default upgrade;\n        ''      close;\n        }\n ..\nserver {\n    listen 80;\n    server_name mydomain;\n    location /static {\n        alias /var/www/mydomain/collected_static;\n    }\n    location /media {\n        alias /var/www/mydomain/media;\n    }\n    location / {\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection $connection_upgrade;\n        proxy_pass http://127.0.0.1:8008;\n    }\n}\n\n```\n\nI tried both\n1- proxy_pass to daphne (with workers running of course, all from supervisord) \n2- proxy_pass to runserver ip\n\nI also tried to change the channels layer backend from asgi_redis.RedisChannelLayer to asgiref.inmemory.ChannelLayer, didn't help.\nI also upgraded Nginx (from 1.4.6  to 1.11.2) and is running on Ubuntu 14.04 \npip freeze :\n\n```\nchannels==0.17.0\ndaphne==0.14.3\nDjango==1.9.8\n...\n```\n\nAny thoughts / help on why this is happening ?!\n\nThank you so much .\n\n---\n\nUpdate:\nI've been using reconnecting-websocket; I dropped it for \"natural\" socket (used in the docs) , minimized the code in consumers to be just `ws_message` (the docs message round trip test) \nSadly, problem still occurs, \nThe developer console log \n\n```\nFailed to execute 'send' on 'WebSocket': Still in CONNECTING state.\n```\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/268/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/241", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/241/comments", "events_url": "https://api.github.com/repos/django/channels/issues/241/events", "html_url": "https://github.com/django/channels/issues/241", "id": 164842486, "node_id": "MDU6SXNzdWUxNjQ4NDI0ODY=", "number": 241, "title": "Its impossible to declare GenericConsumer without path - KeyError path", "user": {"login": "michaelkuty", "id": 3372169, "node_id": "MDQ6VXNlcjMzNzIxNjk=", "avatar_url": "https://avatars.githubusercontent.com/u/3372169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelkuty", "html_url": "https://github.com/michaelkuty", "followers_url": "https://api.github.com/users/michaelkuty/followers", "following_url": "https://api.github.com/users/michaelkuty/following{/other_user}", "gists_url": "https://api.github.com/users/michaelkuty/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelkuty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelkuty/subscriptions", "organizations_url": "https://api.github.com/users/michaelkuty/orgs", "repos_url": "https://api.github.com/users/michaelkuty/repos", "events_url": "https://api.github.com/users/michaelkuty/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelkuty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-11T13:53:38Z", "updated_at": "2016-07-14T11:48:36Z", "closed_at": "2016-07-14T09:06:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\nfrom .consumers FrontendEditConsumer\nfrom channels import route_class\n\nchannel_routing = [\n    route_class(FrontendEditConsumer),\n]\n\n2016-07-11 06:54:01,636 - ERROR - worker - Error processing message with consumer leonardo.module.web.widgets.consumers.FrontendEditConsumer:\nTraceback (most recent call last):\n  File \"/Users/michaelkuty/projects/leonardo-dev/leonardo_venv/lib/python2.7/site-packages/channels/worker.py\", line 107, in run\n    consumer(message, **kwargs)\n  File \"/Users/michaelkuty/projects/leonardo-dev/leonardo_venv/lib/python2.7/site-packages/channels/generic/base.py\", line 30, in __init__\n    self.dispatch(message, **kwargs)\n  File \"/Users/michaelkuty/projects/leonardo-dev/leonardo_venv/lib/python2.7/site-packages/channels/generic/base.py\", line 56, in dispatch\n    return self.get_handler(message, **kwargs)(message, **kwargs)\n  File \"/Users/michaelkuty/projects/leonardo-dev/leonardo_venv/lib/python2.7/site-packages/channels/generic/websockets.py\", line 30, in get_handler\n    self.path = message['path']\n  File \"/Users/michaelkuty/projects/leonardo-dev/leonardo_venv/lib/python2.7/site-packages/channels/message.py\", line 32, in __getitem__\n    return self.content[key]\nKeyError: 'path'\n```\n\nit is possible to use GenericConsumer without path or path is required ?\n\nstandard route without path works, therefore, I would assume the same functionality for generic consumers\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/241/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/211", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/211/comments", "events_url": "https://api.github.com/repos/django/channels/issues/211/events", "html_url": "https://github.com/django/channels/issues/211", "id": 160865671, "node_id": "MDU6SXNzdWUxNjA4NjU2NzE=", "number": 211, "title": "Trying to run testproject/benchmark.py with default values endless loop...", "user": {"login": "ssteinerx", "id": 43063, "node_id": "MDQ6VXNlcjQzMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/43063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssteinerx", "html_url": "https://github.com/ssteinerx", "followers_url": "https://api.github.com/users/ssteinerx/followers", "following_url": "https://api.github.com/users/ssteinerx/following{/other_user}", "gists_url": "https://api.github.com/users/ssteinerx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssteinerx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssteinerx/subscriptions", "organizations_url": "https://api.github.com/users/ssteinerx/orgs", "repos_url": "https://api.github.com/users/ssteinerx/repos", "events_url": "https://api.github.com/users/ssteinerx/events{/privacy}", "received_events_url": "https://api.github.com/users/ssteinerx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 431300069, "node_id": "MDU6TGFiZWw0MzEzMDAwNjk=", "url": "https://api.github.com/repos/django/channels/labels/exp/intermediate", "name": "exp/intermediate", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-06-17T11:13:40Z", "updated_at": "2016-11-05T14:16:43Z", "closed_at": "2016-11-05T14:16:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am writing some documentation about how to run testproject/benchmark.py:\n\n[README.rst](https://github.com/ssteinerx/channels/blob/update-channels-test-readme/testproject/README.rst)\n\nUnfortunately, once the docker image is running, running the benchmark code using default parameters goes into space (after ramping up), repeating:\n\n```\n10 open, 17 total\n```\n\nEndlessly.\n\nIs this maintained and expected to work?  I didn't really delve into the code as my focus at the moment is on understanding _how_ to run things, not to be digging into the code until I can at least run it successfully.\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/211/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/195", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/195/comments", "events_url": "https://api.github.com/repos/django/channels/issues/195/events", "html_url": "https://github.com/django/channels/issues/195", "id": 158437075, "node_id": "MDU6SXNzdWUxNTg0MzcwNzU=", "number": 195, "title": "enforce_ordering message dropping should close a WebSocket", "user": {"login": "trainman419", "id": 103991, "node_id": "MDQ6VXNlcjEwMzk5MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/103991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trainman419", "html_url": "https://github.com/trainman419", "followers_url": "https://api.github.com/users/trainman419/followers", "following_url": "https://api.github.com/users/trainman419/following{/other_user}", "gists_url": "https://api.github.com/users/trainman419/gists{/gist_id}", "starred_url": "https://api.github.com/users/trainman419/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trainman419/subscriptions", "organizations_url": "https://api.github.com/users/trainman419/orgs", "repos_url": "https://api.github.com/users/trainman419/repos", "events_url": "https://api.github.com/users/trainman419/events{/privacy}", "received_events_url": "https://api.github.com/users/trainman419/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 220071672, "node_id": "MDU6TGFiZWwyMjAwNzE2NzI=", "url": "https://api.github.com/repos/django/channels/labels/enhancement", "name": "enhancement", "color": "1d76db", "default": true, "description": null}, {"id": 431300084, "node_id": "MDU6TGFiZWw0MzEzMDAwODQ=", "url": "https://api.github.com/repos/django/channels/labels/exp/advanced", "name": "exp/advanced", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2016-06-03T19:24:53Z", "updated_at": "2018-02-02T07:44:20Z", "closed_at": "2018-02-02T07:44:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I use `enforce_ordering` and I send messages over a websocket more quickly than my consumer can process them, eventually the `__wait__` channel becomes full and starts dropping messages.\n\nSince `enforce_ordering` expects messages with sequential IDs, if a message gets dropped it causes the enforce_ordering filter to wait forever for that message.\n\nThe stack trace that I get when this happens is:\n\n```\n2016-06-03 18:25:37,917 - ERROR - worker - Error processing message with consumer model.consumers.ws_receive:\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/channels/worker.py\", line 106, in run\n    consumer(message, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/channels/sessions.py\", line 64, in inner\n    return func(message, *args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/channels/sessions.py\", line 127, in inner\n    \"full __wait__ channel for socket %s\" % message.reply_channel.name\nChannelFull: Cannot add unordered message to already full __wait__ channel for socket websocket.send!XzbYSOku\n```\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/195/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/184", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/184/comments", "events_url": "https://api.github.com/repos/django/channels/issues/184/events", "html_url": "https://github.com/django/channels/issues/184", "id": 157755294, "node_id": "MDU6SXNzdWUxNTc3NTUyOTQ=", "number": 184, "title": "memory leak for simple http requests", "user": {"login": "lbickston", "id": 12073894, "node_id": "MDQ6VXNlcjEyMDczODk0", "avatar_url": "https://avatars.githubusercontent.com/u/12073894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lbickston", "html_url": "https://github.com/lbickston", "followers_url": "https://api.github.com/users/lbickston/followers", "following_url": "https://api.github.com/users/lbickston/following{/other_user}", "gists_url": "https://api.github.com/users/lbickston/gists{/gist_id}", "starred_url": "https://api.github.com/users/lbickston/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lbickston/subscriptions", "organizations_url": "https://api.github.com/users/lbickston/orgs", "repos_url": "https://api.github.com/users/lbickston/repos", "events_url": "https://api.github.com/users/lbickston/events{/privacy}", "received_events_url": "https://api.github.com/users/lbickston/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2016-05-31T19:51:49Z", "updated_at": "2018-10-19T23:10:00Z", "closed_at": "2016-07-21T19:00:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I started testing my django app with channels and I'm running into memory issues for normal requests. \n\nTo demonstrate the issue, I deployed this app to heroku:\nhttps://github.com/jacobian/channels-example\n\nAnd then wrote a simple script to constantly request the home page:\n\n```\nimport urllib2\n\ndef get():\n    url = \"https://channels-demo.herokuapp.com\"\n    response = urllib2.urlopen(url)\n    html = response.read()\n\nfor i in range(0,30000):\n    get()\n    if (i%10 == 0):\n        print i \n```\n\nFrom heroku's memory metrics, you can see that the memory is slowly creeping up. For this simple example, the memory went from 35 to 90 MB in 90 minutes. \n\n![screen shot 2016-05-31 at 3 46 44 pm](https://cloud.githubusercontent.com/assets/12073894/15688241/06e92df0-2747-11e6-9405-f41fee713aee.png)\n\nI am experiencing this on my own app using channels version 0.14.0.\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/184/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/184/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/152", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/152/comments", "events_url": "https://api.github.com/repos/django/channels/issues/152/events", "html_url": "https://github.com/django/channels/issues/152", "id": 154948581, "node_id": "MDU6SXNzdWUxNTQ5NDg1ODE=", "number": 152, "title": "Tests relying on django.core.mail.outbox fail with channels", "user": {"login": "pydanny", "id": 62857, "node_id": "MDQ6VXNlcjYyODU3", "avatar_url": "https://avatars.githubusercontent.com/u/62857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pydanny", "html_url": "https://github.com/pydanny", "followers_url": "https://api.github.com/users/pydanny/followers", "following_url": "https://api.github.com/users/pydanny/following{/other_user}", "gists_url": "https://api.github.com/users/pydanny/gists{/gist_id}", "starred_url": "https://api.github.com/users/pydanny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pydanny/subscriptions", "organizations_url": "https://api.github.com/users/pydanny/orgs", "repos_url": "https://api.github.com/users/pydanny/repos", "events_url": "https://api.github.com/users/pydanny/events{/privacy}", "received_events_url": "https://api.github.com/users/pydanny/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 407159546, "node_id": "MDU6TGFiZWw0MDcxNTk1NDY=", "url": "https://api.github.com/repos/django/channels/labels/blocked/user-response", "name": "blocked/user-response", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-16T02:13:51Z", "updated_at": "2017-04-06T07:17:07Z", "closed_at": "2017-04-06T07:17:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Testing of emails in Django's Unittest system is a bit more challenging when using Channels. When sending emails via channels, `django.core.mail.outbox` always is an empty list.\n\nAlso, outside of Unittest, we can see the emails in the console. Twice. Yes, in the console they appear twice. I don't know if that's somehow related.\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/152/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/django/channels/issues/148", "repository_url": "https://api.github.com/repos/django/channels", "labels_url": "https://api.github.com/repos/django/channels/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/django/channels/issues/148/comments", "events_url": "https://api.github.com/repos/django/channels/issues/148/events", "html_url": "https://github.com/django/channels/issues/148", "id": 153868083, "node_id": "MDU6SXNzdWUxNTM4NjgwODM=", "number": 148, "title": "Django channels uses persistent database connections?", "user": {"login": "sachinrekhi", "id": 192650, "node_id": "MDQ6VXNlcjE5MjY1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/192650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sachinrekhi", "html_url": "https://github.com/sachinrekhi", "followers_url": "https://api.github.com/users/sachinrekhi/followers", "following_url": "https://api.github.com/users/sachinrekhi/following{/other_user}", "gists_url": "https://api.github.com/users/sachinrekhi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sachinrekhi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sachinrekhi/subscriptions", "organizations_url": "https://api.github.com/users/sachinrekhi/orgs", "repos_url": "https://api.github.com/users/sachinrekhi/repos", "events_url": "https://api.github.com/users/sachinrekhi/events{/privacy}", "received_events_url": "https://api.github.com/users/sachinrekhi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220071670, "node_id": "MDU6TGFiZWwyMjAwNzE2NzA=", "url": "https://api.github.com/repos/django/channels/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-05-09T20:57:11Z", "updated_at": "2018-09-11T06:30:43Z", "closed_at": "2016-07-12T22:01:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "One of the things I've seemed to notice in my app that is deployed via django channels vs. my app that is deployed via gunicorn is that the django channels app seems to persist database connections for some time wheres they open/close for each request in gunicorn.\n\nIn both cases I have the Django setting CONN_MAX_AGE set to the default, meaning the db connection should open/close on each request. But it appears django channels ignores this option? If I add the option in, will django channels respect the timeframe given for max age?\n", "reactions": {"url": "https://api.github.com/repos/django/channels/issues/148/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/django/channels/issues/148/timeline", "performed_via_github_app": null, "state_reason": "completed"}]