[{"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2810", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2810/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2810/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2810/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2810", "id": 1671079780, "node_id": "I_kwDOA5FfHs5jmqdk", "number": 2810, "title": "Bug in Ampl file generation", "user": {"login": "vova292", "id": 19894323, "node_id": "MDQ6VXNlcjE5ODk0MzIz", "avatar_url": "https://avatars.githubusercontent.com/u/19894323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vova292", "html_url": "https://github.com/vova292", "followers_url": "https://api.github.com/users/vova292/followers", "following_url": "https://api.github.com/users/vova292/following{/other_user}", "gists_url": "https://api.github.com/users/vova292/gists{/gist_id}", "starred_url": "https://api.github.com/users/vova292/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vova292/subscriptions", "organizations_url": "https://api.github.com/users/vova292/orgs", "repos_url": "https://api.github.com/users/vova292/repos", "events_url": "https://api.github.com/users/vova292/events{/privacy}", "received_events_url": "https://api.github.com/users/vova292/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-04-17T12:36:47Z", "updated_at": "2023-04-20T23:04:21Z", "closed_at": "2023-04-20T23:04:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a model which can be successfully solved by pyomo 6.4.2\r\n\r\nWhen i upgrade to 6.5.0, it generates the following ampl file ([tmpptnjgdzypynumero.nl.txt](https://github.com/Pyomo/pyomo/files/11250039/tmpptnjgdzypynumero.nl.txt) ) which has problems starting from line 1021\r\n\r\nThe constraint in question looks something like this: \r\n```\r\nMember of gain_cons} : Size=72, Index=splitter.gain_cons_index, Active=True\r\n    Key : Lower : Body : Upper : Active\r\n      4 :   0.0      : 100.00000000000001*(- splitter.split_fraction_1_ctx_var_oper[12]) + 0.49999999999999983*(- splitter.inlet_mass_flow_ctx_var_oper[12]) + 100.00000000000001*splitter.split_fraction_1_ctx_var[12] + 0.49999999999999983*splitter.inlet_mass_flow_ctx_var[12] - (splitter.outlet_1_mass_flow_ctx_var[12] - splitter.outlet_1_mass_flow_ctx_var_oper[12]) :   0.0 :   True\r\n```\r\nOn line 682 of nl_writer.py the `expr.const` ends up being type `NPV_SumExpression`, which may be the problem\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2810/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2803", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2803/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2803/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2803/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2803", "id": 1665146363, "node_id": "I_kwDOA5FfHs5jQB37", "number": 2803, "title": "Sympy expressions leaking out of differentiation code", "user": {"login": "andrewlee94", "id": 16341343, "node_id": "MDQ6VXNlcjE2MzQxMzQz", "avatar_url": "https://avatars.githubusercontent.com/u/16341343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewlee94", "html_url": "https://github.com/andrewlee94", "followers_url": "https://api.github.com/users/andrewlee94/followers", "following_url": "https://api.github.com/users/andrewlee94/following{/other_user}", "gists_url": "https://api.github.com/users/andrewlee94/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewlee94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewlee94/subscriptions", "organizations_url": "https://api.github.com/users/andrewlee94/orgs", "repos_url": "https://api.github.com/users/andrewlee94/repos", "events_url": "https://api.github.com/users/andrewlee94/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewlee94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-04-12T19:45:15Z", "updated_at": "2023-04-14T18:44:54Z", "closed_at": "2023-04-14T18:44:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nWhen using the `solve_strongly_connected_components` solver, I ran into an error message about converting expressions to floats. From looking at the stack trace, the issue appears to be coming from the Pyomo differentiation tools which are being called via `calculate_variable_from_constraint`. It appears that the value returned from the differentiation code is a `sympy.core.mul.Mul`, which is causing an exception to be raised when Pyomo attempts to evaluate this derivative (there is a corresponding warning logged about dynamically registering a new numeric type).\r\n\r\n### Steps to reproduce the issue\r\n\r\nI do not have a simple case to replicate the issue, however the code I am running can be found here:\r\n\r\nhttps://github.com/andrewlee94/idaes-pse/blob/initializers_4/idaes/models/unit_models/tests/test_pressure_changer.py\r\n\r\nThe specific failing test is at line 1023, `test_block_triangularization`\r\n\r\n### Error Message\r\n\r\nidaes/core/initialization/initializer_base.py:192: in initialize\r\n    results = self.initialization_routine(model)\r\nidaes/core/initialization/block_triangularization.py:115: in initialization_routine\r\n    self._solve_block_data(model, solver)\r\nidaes/core/initialization/block_triangularization.py:122: in _solve_block_data\r\n    solve_strongly_connected_components(\r\n../../pyomo/pyomo/pyomo/contrib/incidence_analysis/scc_solver.py:153: in solve_strongly_connected_components\r\n    results = calculate_variable_from_constraint(\r\n../../pyomo/pyomo/pyomo/util/calc_var_value.py:179: in calculate_variable_from_constraint\r\n    expr_deriv = differentiate(expr, wrt=variable, mode=diff_mode)\r\n../../pyomo/pyomo/pyomo/core/expr/calculus/derivatives.py:116: in differentiate\r\n    res = sympy_diff(expr=expr, wrt=wrt, wrt_list=wrt_list)\r\n../../pyomo/pyomo/pyomo/core/expr/calculus/diff_with_sympy.py:47: in differentiate\r\n    objectMap, sympy_expr = sympyify_expression(expr)\r\n../../pyomo/pyomo/pyomo/core/expr/sympy_tools.py:215: in sympyify_expression\r\n    return object_map, visitor.walk_expression(expr)\r\n../../pyomo/pyomo/pyomo/core/expr/visitor.py:256: in walk_expression\r\n    result = self._process_node(root, RECURSION_LIMIT)\r\n../../pyomo/pyomo/pyomo/core/expr/visitor.py:455: in _process_node_bx\r\n    data.append(self._process_node(child, recursion_limit))\r\n../../pyomo/pyomo/pyomo/core/expr/visitor.py:455: in _process_node_bx\r\n    data.append(self._process_node(child, recursion_limit))\r\n../../pyomo/pyomo/pyomo/core/expr/visitor.py:455: in _process_node_bx\r\n    data.append(self._process_node(child, recursion_limit))\r\n../../pyomo/pyomo/pyomo/core/expr/visitor.py:466: in _process_node_bx\r\n    return self.exitNode(node, data)\r\n../../pyomo/pyomo/pyomo/core/expr/sympy_tools.py:152: in exitNode\r\n    return node._apply_operation(values)\r\n../../pyomo/pyomo/pyomo/core/expr/numeric_expr.py:311: in _apply_operation\r\n    return self._fcn.evaluate( result )\r\n../../pyomo/pyomo/pyomo/core/base/external.py:216: in evaluate\r\n    return self._evaluate(args_, None, 0)[0]\r\n../../pyomo/pyomo/pyomo/core/base/external.py:360: in _evaluate\r\n    arglist = _ARGLIST(args, fgh, fixed)\r\n../../pyomo/pyomo/pyomo/core/base/external.py:654: in __init__\r\n    self.ra = (c_double*nr)(*_reals)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = 0.055508472036053*x0\r\n\r\n    def __float__(self):\r\n        # Don't bother testing if it's a number; if it's not this is going\r\n        # to fail, and if it is we still need to check that it evalf'ed to\r\n        # a number.\r\n        result = self.evalf()\r\n        if result.is_Number:\r\n            return float(result)\r\n        if result.is_number and result.as_real_imag()[1]:\r\n            raise TypeError(\"Cannot convert complex to float\")\r\n>       raise TypeError(\"Cannot convert expression to float\")\r\nE       TypeError: Cannot convert expression to float\r\n\r\n../../anaconda3/lib/python3.9/site-packages/sympy/core/expr.py:345: TypeError\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2803/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2802", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2802/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2802/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2802/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2802", "id": 1664623547, "node_id": "I_kwDOA5FfHs5jOCO7", "number": 2802, "title": "DeveloperError: Internal Pyomo implementation error", "user": {"login": "abb-omidi", "id": 42294317, "node_id": "MDQ6VXNlcjQyMjk0MzE3", "avatar_url": "https://avatars.githubusercontent.com/u/42294317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abb-omidi", "html_url": "https://github.com/abb-omidi", "followers_url": "https://api.github.com/users/abb-omidi/followers", "following_url": "https://api.github.com/users/abb-omidi/following{/other_user}", "gists_url": "https://api.github.com/users/abb-omidi/gists{/gist_id}", "starred_url": "https://api.github.com/users/abb-omidi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abb-omidi/subscriptions", "organizations_url": "https://api.github.com/users/abb-omidi/orgs", "repos_url": "https://api.github.com/users/abb-omidi/repos", "events_url": "https://api.github.com/users/abb-omidi/events{/privacy}", "received_events_url": "https://api.github.com/users/abb-omidi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-04-12T13:56:54Z", "updated_at": "2023-04-14T18:44:53Z", "closed_at": "2023-04-14T18:44:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear support team,\r\n\r\nI have tried to run the following code. The first part is compiled without any issues, but the last shows the following note:\r\n\r\n```\r\nDeveloperError: Internal Pyomo implementation error:\r\n\t\"sympy expression type '<class 'sympy.core.relational.LessThan'>' not found in the operator map\"\r\n\tPlease report this to the Pyomo Developers.\r\n```\r\n\r\nThe code:\r\n```\r\nml = ConcreteModel()\r\nml.I = RangeSet(3)\r\nml.M = RangeSet(2)\r\nml.PAIRS = Set(initialize = ml.I * ml.I, dimen=2, filter=lambda ml, i, j : i < j)\r\n\r\nml.x = BooleanVar(ml.I, ml.I)\r\nml.start = Var(ml.I, bounds=(0, 10))\r\nml.finish = Var(ml.I, bounds=(0, 10))\r\n\r\nml.c1 = LogicalConstraint(ml.PAIRS, ml.M, rule=lambda ml, i, j, m: land(ml.x[i,j], ml.x[j,m]).implies(lor(ml.finish[j]<=ml.start[i], ml.finish[i]<=ml.start[j])))\r\nml.c1.pprint()\r\n\r\n# where the issue is occurred: \r\nTransformationFactory('core.logical_to_linear').apply_to(ml)\r\nml.logic_to_linear.transformed_constraints.pprint()\r\n```\r\n\r\nWould you please, how can I fix this?\r\nRegards", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2802/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2802/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2793", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2793/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2793/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2793/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2793", "id": 1648319528, "node_id": "I_kwDOA5FfHs5iP1wo", "number": 2793, "title": "NL_v2 no symbolic solver labels for named expressions", "user": {"login": "bknueven", "id": 30801372, "node_id": "MDQ6VXNlcjMwODAxMzcy", "avatar_url": "https://avatars.githubusercontent.com/u/30801372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bknueven", "html_url": "https://github.com/bknueven", "followers_url": "https://api.github.com/users/bknueven/followers", "following_url": "https://api.github.com/users/bknueven/following{/other_user}", "gists_url": "https://api.github.com/users/bknueven/gists{/gist_id}", "starred_url": "https://api.github.com/users/bknueven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bknueven/subscriptions", "organizations_url": "https://api.github.com/users/bknueven/orgs", "repos_url": "https://api.github.com/users/bknueven/repos", "events_url": "https://api.github.com/users/bknueven/events{/privacy}", "received_events_url": "https://api.github.com/users/bknueven/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-03-30T21:04:32Z", "updated_at": "2023-03-30T22:02:13Z", "closed_at": "2023-03-30T22:02:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\nNL_v2 does not pass names of named Expressions to the solver when using `symbolic_solver_labels = True`.\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```python\r\nfrom pyomo.environ import *                                                                                                                                                                                                 \r\n\r\nm = ConcreteModel()\r\nm.x = Var(initialize=-1)\r\nm.my_expression = Expression( expr = m.x**0.5 )\r\n\r\nm.my_constraint = Constraint( expr = m.my_expression == 0 ) \r\n\r\ns = SolverFactory(\"ipopt\")\r\ns.options[\"halt_on_ampl_error\"] = \"yes\"\r\n\r\ns.solve(m, tee=True, symbolic_solver_labels=True)\r\n```\r\n\r\n### Error Message\r\n\r\nWhen NL_v1, the message returned by Ipopt is:\r\n```console\r\nError evaluating constraint my_constraint: can't evaluate pow(-1,0.5).\r\n```\r\n\r\nWith NL_v2 I get the less helpful message below:\r\n```console\r\nError evaluating \"var =\" definition 1: can't evaluate pow(-1,0.5).\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.5.1.dev0 (a6446ae)\r\nPython version: 3.10.9\r\nOperating system: macOS x86_64\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable): Ipopt\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2793/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2764", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2764/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2764/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2764/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2764", "id": 1617310326, "node_id": "I_kwDOA5FfHs5gZjJ2", "number": 2764, "title": "Indexing error", "user": {"login": "Malena205", "id": 43754196, "node_id": "MDQ6VXNlcjQzNzU0MTk2", "avatar_url": "https://avatars.githubusercontent.com/u/43754196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Malena205", "html_url": "https://github.com/Malena205", "followers_url": "https://api.github.com/users/Malena205/followers", "following_url": "https://api.github.com/users/Malena205/following{/other_user}", "gists_url": "https://api.github.com/users/Malena205/gists{/gist_id}", "starred_url": "https://api.github.com/users/Malena205/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Malena205/subscriptions", "organizations_url": "https://api.github.com/users/Malena205/orgs", "repos_url": "https://api.github.com/users/Malena205/repos", "events_url": "https://api.github.com/users/Malena205/events{/privacy}", "received_events_url": "https://api.github.com/users/Malena205/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-03-09T13:55:54Z", "updated_at": "2023-03-09T17:53:39Z", "closed_at": "2023-03-09T17:53:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, when trying to add an extra constraint I get the following error:\r\nraise DeveloperError(\r\npyomo.common.errors.DeveloperError: Internal Pyomo implementation error:\r\n        'Unknown problem encountered when trying to retrieve index for component assign_to_open_cstr'\r\n        Please report this to the Pyomo Developers.\r\n\r\nThis happens due to the following code:\r\nm.travel_pairs = pyo.Set(initialize=[(i, j) for i in m.set1 for j in m.set2])\r\nm.assign_to_open_cstr = pyo.Constraint(m.pairs, rule=assign_to_open_cstr)\r\nAnd then later I try to add constraints: \r\nfor (i,j) in new_pairs:\r\n        m.assign_to_open_cstr.add(expr=assign_to_open_cstr(m,i,j), index=[i,j])\r\n\r\nI think the way I format the index might just be wrong, but since the error told me to report this, this what I am doing. ", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2764/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2699", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2699/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2699/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2699/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2699", "id": 1548397432, "node_id": "I_kwDOA5FfHs5cSqt4", "number": 2699, "title": "pyomo not working with cbc solver", "user": {"login": "grgmiller", "id": 45949268, "node_id": "MDQ6VXNlcjQ1OTQ5MjY4", "avatar_url": "https://avatars.githubusercontent.com/u/45949268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grgmiller", "html_url": "https://github.com/grgmiller", "followers_url": "https://api.github.com/users/grgmiller/followers", "following_url": "https://api.github.com/users/grgmiller/following{/other_user}", "gists_url": "https://api.github.com/users/grgmiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/grgmiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grgmiller/subscriptions", "organizations_url": "https://api.github.com/users/grgmiller/orgs", "repos_url": "https://api.github.com/users/grgmiller/repos", "events_url": "https://api.github.com/users/grgmiller/events{/privacy}", "received_events_url": "https://api.github.com/users/grgmiller/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2023-01-19T01:50:29Z", "updated_at": "2023-01-19T20:27:58Z", "closed_at": "2023-01-19T20:27:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\n<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `pyomo solve` to optimize a model and ...\" -->\r\n\r\nWhen attempting to solve a model using the CBC solver, I am getting an error about the `-printingOptions` option being invalid. I'm not sure if this option was removed in the newest version of CBC and if I need to try using an older version of CBC for this to work?\r\n\r\n### Error Message\r\n\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\nERROR: Solver (cbc) returned non-zero return code (4294967295)\r\nERROR: Solver log: Error: invalid option '-printingOptions'\r\nTraceback (most recent call last):\r\n  File \"A:\\miniconda3\\envs\\match_model\\Scripts\\match-script.py\", line 33, in <module>\r\n    sys.exit(load_entry_point('match-model', 'console_scripts', 'match')())\r\n  File \"a:\\github\\match-model\\match_model\\main.py\", line 38, in main\r\n    main()\r\n  File \"a:\\github\\match-model\\match_model\\solve_scenarios.py\", line 169, in main\r\n    solve.main(args=args)\r\n  File \"a:\\github\\match-model\\match_model\\solve.py\", line 171, in main\r\n    results = solve(instance)\r\n  File \"a:\\github\\match-model\\match_model\\solve.py\", line 902, in solve\r\n    results = model.solver_manager.solve(model, opt=model.solver, **solver_args)\r\n  File \"A:\\miniconda3\\envs\\match_model\\lib\\site-packages\\pyomo\\opt\\parallel\\async_solver.py\", line 28, in solve\r\n    return self.execute(*args, **kwds)\r\n  File \"A:\\miniconda3\\envs\\match_model\\lib\\site-packages\\pyomo\\opt\\parallel\\manager.py\", line 118, in execute\r\n    ah = self.queue(*args, **kwds)\r\n  File \"A:\\miniconda3\\envs\\match_model\\lib\\site-packages\\pyomo\\opt\\parallel\\manager.py\", line 133, in queue\r\n    return self._perform_queue(ah, *args, **kwds)\r\n  File \"A:\\miniconda3\\envs\\match_model\\lib\\site-packages\\pyomo\\opt\\parallel\\local.py\", line 52, in _perform_queue\r\n    results = opt.solve(*args, **kwds)\r\n  File \"A:\\miniconda3\\envs\\match_model\\lib\\site-packages\\pyomo\\opt\\base\\solvers.py\", line 595, in solve\r\n    raise ApplicationError(\r\npyomo.common.errors.ApplicationError: Solver (cbc) did not exit normally\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.0\r\nPython version: 3.10.8\r\nOperating system: Windows 10\r\nHow Pyomo was installed (PyPI, conda, source): conda\r\nSolver (if applicable): cbc v20221228\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2699/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2684", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2684/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2684/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2684/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2684", "id": 1521101902, "node_id": "I_kwDOA5FfHs5aqixO", "number": 2684, "title": "Pass options as part of the call to the solve function", "user": {"login": "ZedongPeng", "id": 15854830, "node_id": "MDQ6VXNlcjE1ODU0ODMw", "avatar_url": "https://avatars.githubusercontent.com/u/15854830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZedongPeng", "html_url": "https://github.com/ZedongPeng", "followers_url": "https://api.github.com/users/ZedongPeng/followers", "following_url": "https://api.github.com/users/ZedongPeng/following{/other_user}", "gists_url": "https://api.github.com/users/ZedongPeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZedongPeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZedongPeng/subscriptions", "organizations_url": "https://api.github.com/users/ZedongPeng/orgs", "repos_url": "https://api.github.com/users/ZedongPeng/repos", "events_url": "https://api.github.com/users/ZedongPeng/events{/privacy}", "received_events_url": "https://api.github.com/users/ZedongPeng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 850798628, "node_id": "MDU6TGFiZWw4NTA3OTg2Mjg=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/documentation", "name": "documentation", "color": "000000", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mrmundt", "id": 55767766, "node_id": "MDQ6VXNlcjU1NzY3NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/55767766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrmundt", "html_url": "https://github.com/mrmundt", "followers_url": "https://api.github.com/users/mrmundt/followers", "following_url": "https://api.github.com/users/mrmundt/following{/other_user}", "gists_url": "https://api.github.com/users/mrmundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrmundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrmundt/subscriptions", "organizations_url": "https://api.github.com/users/mrmundt/orgs", "repos_url": "https://api.github.com/users/mrmundt/repos", "events_url": "https://api.github.com/users/mrmundt/events{/privacy}", "received_events_url": "https://api.github.com/users/mrmundt/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrmundt", "id": 55767766, "node_id": "MDQ6VXNlcjU1NzY3NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/55767766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrmundt", "html_url": "https://github.com/mrmundt", "followers_url": "https://api.github.com/users/mrmundt/followers", "following_url": "https://api.github.com/users/mrmundt/following{/other_user}", "gists_url": "https://api.github.com/users/mrmundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrmundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrmundt/subscriptions", "organizations_url": "https://api.github.com/users/mrmundt/orgs", "repos_url": "https://api.github.com/users/mrmundt/repos", "events_url": "https://api.github.com/users/mrmundt/events{/privacy}", "received_events_url": "https://api.github.com/users/mrmundt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-01-05T17:23:28Z", "updated_at": "2023-01-11T14:32:58Z", "closed_at": "2023-01-11T14:32:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\n<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `pyomo solve` to optimize a model and ...\" -->\r\nI follow the example in the document. However, it failed. Does `ipopt` support this way of passing options?\r\n> Sometimes it is desirable to pass options as part of the call to the solve function as in this snippet:\r\n`results = optimizer.solve(instance, options=\"threads=4\", tee=True)`\r\n\r\nhttps://pyomo.readthedocs.io/en/stable/working_models.html#sending-options-to-the-solver\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```\r\n# example.py\r\nfrom pyomo.environ import *\r\nfrom pyomo.contrib.mindtpy.tests.eight_process_problem import EightProcessFlowsheet\r\nmodel = EightProcessFlowsheet(convex=True)\r\nopt = SolverFactory('ipopt')\r\nresult = opt.solve(model,tee=True,options=\"maxit=100\")\r\n```\r\n\r\n### Error Message\r\n\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\nTraceback (most recent call last):\r\n  File \"/Users/zedongpeng/Github/sofc_models-main/test.py\", line 33, in <module>\r\n    result = opt.solve(model,tee=True,options=\"maxit=100\")\r\n  File \"/Users/zedongpeng/Github/pyomo/pyomo/opt/base/solvers.py\", line 562, in solve\r\n    self.options.update(kwds.pop('options', {}))\r\n  File \"/Users/zedongpeng/Github/pyomo/pyomo/common/collections/bunch.py\", line 51, in update\r\n    if type(d[k]) is dict:\r\nTypeError: string indices must be integers\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.3.dev0\r\nPython version: 3.7.12\r\nOperating system: MacOS Version 12.2\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable): ipopt\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2684/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2677", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2677/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2677/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2677/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2677", "id": 1508007692, "node_id": "I_kwDOA5FfHs5Z4l8M", "number": 2677, "title": "`Bunch.__delattr__` does not (necessarily) remove attribute from `Bunch` object", "user": {"login": "shermanjasonaf", "id": 29937582, "node_id": "MDQ6VXNlcjI5OTM3NTgy", "avatar_url": "https://avatars.githubusercontent.com/u/29937582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shermanjasonaf", "html_url": "https://github.com/shermanjasonaf", "followers_url": "https://api.github.com/users/shermanjasonaf/followers", "following_url": "https://api.github.com/users/shermanjasonaf/following{/other_user}", "gists_url": "https://api.github.com/users/shermanjasonaf/gists{/gist_id}", "starred_url": "https://api.github.com/users/shermanjasonaf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shermanjasonaf/subscriptions", "organizations_url": "https://api.github.com/users/shermanjasonaf/orgs", "repos_url": "https://api.github.com/users/shermanjasonaf/repos", "events_url": "https://api.github.com/users/shermanjasonaf/events{/privacy}", "received_events_url": "https://api.github.com/users/shermanjasonaf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-12-22T14:40:30Z", "updated_at": "2023-01-07T03:43:33Z", "closed_at": "2023-01-07T03:43:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\n<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `pyomo solve` to optimize a model and ...\" -->\r\nWhen attempting attribute deletion on a `Bunch` object (from `pyomo.common.collections`), such as through `delattr` or `del`, the attribute does not seem to have been removed from the underlying `dict` structure. Complete removal of the attribute seems to require calls to both `Bunch.__delattr__` and `Bunch.__delitem__` successively.\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```python\r\n# example.py\r\nfrom pyomo.common.collections import Bunch\r\n\r\n\r\ndef display_bunch_attr_val(bunch_obj, attr):\r\n    # attribute value remains unchanged after delattr\r\n    print(\"-\" * 30)\r\n    print(\"Attribute value check:\")\r\n    print(\"Getattr:\", getattr(bunch_obj, attr, None))\r\n    print(\"Getitem:\", bunch_obj[attr])\r\n\r\n\r\ndef display_bunch_attr_in_keys(bunch_obj):\r\n    print(\"-\" * 30)\r\n    print(\"Bunch keys check:\")\r\n    print(bunch_obj.keys())  # remains unchanged after delattr\r\n    print(f\"Attribute in Bunch keys: {attr_name in bunch_obj.keys()}\")\r\n    print(\r\n        \"Attribute in Bunch.__dict__ keys: \"\r\n        f\"{attr_name in bunch_obj.__dict__}\"\r\n    )\r\n\r\n\r\nbunch = Bunch()\r\nattr_name = \"example\"\r\nval = 300\r\n\r\nprint(f\"Setting attribute name {attr_name!r} to value {val}\")\r\nsetattr(bunch, attr_name, val)\r\nprint(f\"Bunch keys: {bunch.keys()}\")\r\n\r\nprint(\"-\" * 30)\r\nprint(\"Invoking delattr\")\r\ndelattr(bunch, attr_name)\r\n\r\n# attribute value remains unchanged after delattr\r\ndisplay_bunch_attr_val(bunch, attr_name)\r\n\r\n# bunch keys check\r\ndisplay_bunch_attr_in_keys(bunch)\r\n\r\nprint(\"-\" * 30)\r\nprint(\"Invoking delitem\")\r\ndel bunch[attr_name]\r\n\r\n# keys and the attribute value\r\ndisplay_bunch_attr_val(bunch, attr_name)\r\n\r\n# bunch keys check\r\ndisplay_bunch_attr_in_keys(bunch)\r\n```\r\n\r\n### Error Message\r\n\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n\r\n```console\r\n$ python example.py\r\nSetting attribute name 'example' to value 300\r\nBunch keys: dict_keys(['example'])\r\n------------------------------\r\nInvoking delattr\r\n------------------------------\r\nAttribute value check:\r\nGetattr: 300\r\nGetitem: 300\r\n------------------------------\r\nBunch keys check:\r\ndict_keys(['example'])\r\nAttribute in bunch keys: True\r\nAttribute in bunch.__dict__ keys: False\r\n------------------------------\r\nInvoking delitem\r\n------------------------------\r\nAttribute value check:\r\nGetattr: None\r\nGetitem: None\r\n------------------------------\r\nBunch keys check:\r\ndict_keys([])\r\nAttribute in bunch keys: False\r\nAttribute in bunch.__dict__ keys: False\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.5dev0\r\nPython version: 3.9.13\r\nOperating system: Ubuntu 20.04\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable): N/A\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2677/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2656", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2656/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2656/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2656/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2656", "id": 1477130646, "node_id": "I_kwDOA5FfHs5YCzmW", "number": 2656, "title": "Inconsistent behavior between the CBC and HiGHS", "user": {"login": "SolverMax", "id": 106039124, "node_id": "U_kgDOBlIHVA", "avatar_url": "https://avatars.githubusercontent.com/u/106039124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SolverMax", "html_url": "https://github.com/SolverMax", "followers_url": "https://api.github.com/users/SolverMax/followers", "following_url": "https://api.github.com/users/SolverMax/following{/other_user}", "gists_url": "https://api.github.com/users/SolverMax/gists{/gist_id}", "starred_url": "https://api.github.com/users/SolverMax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SolverMax/subscriptions", "organizations_url": "https://api.github.com/users/SolverMax/orgs", "repos_url": "https://api.github.com/users/SolverMax/repos", "events_url": "https://api.github.com/users/SolverMax/events{/privacy}", "received_events_url": "https://api.github.com/users/SolverMax/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-12-05T18:12:43Z", "updated_at": "2023-03-10T18:12:54Z", "closed_at": "2023-03-10T18:12:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm puzzled by inconsistent behavior between the CBC and HiGHS solvers.\r\n\r\nGiven the attached model, CBC returns the correct optimal solution of 15, while HiGHS fails with an error: \"ValueError: Error when adding rows\". The choice of solver is specified on line 3.\r\n\r\nThe HiGHS error occurs on line 30. However, if we comment out line 30 and uncomment line 31, then HiGHS works correctly.\r\n\r\nWhen using HiGHS, why is it necessary to use pyo.value(Model.ShelfHeights[s]) rather than just Model.ShelfHeights[s] like we can with CBC (and GLPK)?\r\n\r\nPyomo version 6.4.3\r\nHiGHS version 1.4.0\r\n\r\n[HiGHS_test.txt](https://github.com/Pyomo/pyomo/files/10156757/HiGHS_test.txt)\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2656/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2650", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2650/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2650/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2650/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2650", "id": 1473378946, "node_id": "I_kwDOA5FfHs5X0fqC", "number": 2650, "title": "Error in FBBT if non-numeric leaf types encountered: TypeError: unsupported operand type(s) for -: 'str' and 'str'", "user": {"login": "lbianchi-lbl", "id": 48035537, "node_id": "MDQ6VXNlcjQ4MDM1NTM3", "avatar_url": "https://avatars.githubusercontent.com/u/48035537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lbianchi-lbl", "html_url": "https://github.com/lbianchi-lbl", "followers_url": "https://api.github.com/users/lbianchi-lbl/followers", "following_url": "https://api.github.com/users/lbianchi-lbl/following{/other_user}", "gists_url": "https://api.github.com/users/lbianchi-lbl/gists{/gist_id}", "starred_url": "https://api.github.com/users/lbianchi-lbl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lbianchi-lbl/subscriptions", "organizations_url": "https://api.github.com/users/lbianchi-lbl/orgs", "repos_url": "https://api.github.com/users/lbianchi-lbl/repos", "events_url": "https://api.github.com/users/lbianchi-lbl/events{/privacy}", "received_events_url": "https://api.github.com/users/lbianchi-lbl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-12-02T19:59:08Z", "updated_at": "2022-12-06T18:49:41Z", "closed_at": "2022-12-06T18:49:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\n- IDAES recently (IDAES/idaes-pse@bf61436) introduced a new implementation for Helmholtz EOS\r\n- As a consequence of that change (as shown by `git bisect` on the IDAES/idaes-pse repository), one of the models for the DISPATCHES project fails to solve with the exception `TypeError: unsupported operand type(s) for -: 'str' and 'str'` being thrown from `pyomo.contrib.fbbt.fbbt:_FBBTVisitorRootToLeaf.visiting_potential_leaf()`\r\n- The stack trace (and the pytest debug information) seems to point to one of the encountered node being a `str`, possibly as a consequence of external functions being involved in the new IDAES Helmholtz implementation\r\n\r\n### Steps to reproduce the issue\r\n\r\n```sh\r\nconda create --yes --name test-dispatches-165 python=3.8 && conda activate test-dispatches-165\r\npip install https://github.com/gmlc-dispatches/dispatches/archive/edba882.zip\r\npip uninstall idaes-pse --yes && pip install https://github.com/IDAES/idaes-pse/archive/bf61436.zip && idaes get-extensions --verbose\r\npytest --pyargs dispatches.case_studies.fossil_case.ultra_supercritical_plant.storage.tests.test_discharge_usc_powerplant -k test_main_function -svv  # adding the --pdb flag will open a pdb session at the location where the exception is thrown\r\n```\r\n\r\n### Error Message\r\n\r\n```\r\nSolved in 1 iterations and 8.34069 seconds\r\nOptimal objective value inf\r\nRelative optimality gap nan%\r\nNo feasible solutions found.\r\nFAILED\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> captured log >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\nWARNING  pyomo.core:PyomoModel.py:209 Loading a SolverResults object with a warning status into model.name=\"fs.discharge.es_turbine\";\r\n  - termination condition: other\r\n  - message from solver: Too few degrees of freedom (rethrown)!\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> traceback >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\n    @pytest.mark.gdpopt\r\n    @pytest.mark.integration\r\n    def test_main_function():\r\n    \r\n        # Build ultra-supercritical plant base model\r\n        m_usc = usc.build_plant_model()\r\n    \r\n        # Initialize ultra-supercritical plant base model\r\n        usc.initialize(m_usc)\r\n    \r\n        # Build discharge model\r\n        m = discharge_usc.main(m_usc, solver=solver, optarg=optarg)\r\n    \r\n        discharge_usc.model_analysis(m, heat_duty=heat_duty)\r\n    \r\n        # Solve model using GDPopt\r\n>       results = discharge_usc.run_gdp(m)\r\n\r\n../../dispatches/dispatches/case_studies/fossil_case/ultra_supercritical_plant/storage/tests/test_discharge_usc_powerplant.py:86: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n../../dispatches/dispatches/case_studies/fossil_case/ultra_supercritical_plant/storage/discharge_design_ultra_supercritical_power_plant.py:1181: in run_gdp\r\n    results = opt.solve(\r\n../pyomo/pyomo/contrib/gdpopt/GDPopt.py:133: in solve\r\n    return SolverFactory(\r\n../pyomo/pyomo/contrib/gdpopt/algorithm_base_class.py:119: in solve\r\n    self._solve_gdp(model, config)\r\n../pyomo/pyomo/contrib/gdpopt/loa.py:108: in _solve_gdp\r\n    self._fix_discrete_soln_solve_subproblem_and_add_cuts(\r\n../pyomo/pyomo/contrib/gdpopt/oa_algorithm_utils.py:25: in _fix_discrete_soln_solve_subproblem_and_add_cuts\r\n    nlp_termination = solve_subproblem(subprob_util_block, self,\r\n../pyomo/pyomo/contrib/gdpopt/solve_subproblem.py:342: in solve_subproblem\r\n    with preprocess_subproblem(subprob_util_block, config) as call_solver:\r\n../pyomo/pyomo/contrib/gdpopt/solve_subproblem.py:238: in __enter__\r\n    fbbt(m, integer_tol=self.config.integer_tolerance,\r\n../pyomo/pyomo/contrib/fbbt/fbbt.py:1528: in fbbt\r\n    _new_var_bounds = _fbbt_block(comp, config)\r\n../pyomo/pyomo/contrib/fbbt/fbbt.py:1425: in _fbbt_block\r\n    _new_var_bounds = _fbbt_con(c, config)\r\n../pyomo/pyomo/contrib/fbbt/fbbt.py:1354: in _fbbt_con\r\n    visitorB.dfs_postorder_stack(con.body)\r\n../pyomo/pyomo/core/expr/visitor.py:880: in dfs_postorder_stack\r\n    flag, value = self.visiting_potential_leaf(_sub)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <pyomo.contrib.fbbt.fbbt._FBBTVisitorRootToLeaf object at 0x7ff05835ca90>, node = 'H2O'\r\n\r\n    def visiting_potential_leaf(self, node):\r\n        if node.__class__ in nonpyomo_leaf_types:\r\n            lb, ub = self.bnds_dict[node]\r\n            _debug_node(node)\r\n>           if abs(lb - value(node)) > self.feasibility_tol:\r\nE           TypeError: unsupported operand type(s) for -: 'str' and 'str'\r\n\r\n../pyomo/pyomo/contrib/fbbt/fbbt.py:1204: TypeError\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.2\r\nPython version: 3.8.15\r\nOperating system: Ubuntu 20.04.5\r\nHow Pyomo was installed (PyPI, conda, source): Pyomo installed via pip from GitHub ZIP URL in a Conda environment\r\nSolver (if applicable): GDPopt (?)\r\n\r\n### Additional information\r\n\r\nSee gmlc-dispatches/dispatches#165 for the downstream bug report.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2650/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2642", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2642/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2642/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2642/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2642", "id": 1470529490, "node_id": "I_kwDOA5FfHs5Xpn_S", "number": 2642, "title": "pyomo.common.deprecation failure with 6.4.3 if installed from PyPI", "user": {"login": "lbianchi-lbl", "id": 48035537, "node_id": "MDQ6VXNlcjQ4MDM1NTM3", "avatar_url": "https://avatars.githubusercontent.com/u/48035537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lbianchi-lbl", "html_url": "https://github.com/lbianchi-lbl", "followers_url": "https://api.github.com/users/lbianchi-lbl/followers", "following_url": "https://api.github.com/users/lbianchi-lbl/following{/other_user}", "gists_url": "https://api.github.com/users/lbianchi-lbl/gists{/gist_id}", "starred_url": "https://api.github.com/users/lbianchi-lbl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lbianchi-lbl/subscriptions", "organizations_url": "https://api.github.com/users/lbianchi-lbl/orgs", "repos_url": "https://api.github.com/users/lbianchi-lbl/repos", "events_url": "https://api.github.com/users/lbianchi-lbl/events{/privacy}", "received_events_url": "https://api.github.com/users/lbianchi-lbl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-12-01T01:56:43Z", "updated_at": "2022-12-02T15:34:33Z", "closed_at": "2022-12-02T15:34:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\nThis issue emerged as part of the IDAES release earlier today (a test in IDAES uses an import path that has been deprecated in pyomo 6.4.3, which is used below to reproduce the error), but it doesn't seem to be IDAES-specific.\r\n\r\nIt appears that the same version of Pyomo 6.4.3 results in different behaviors depending on whether it was installed from PyPI or from a source-like URL. \r\n\r\nIf pyomo 6.4.3 is installed from source, e.g. using `pip install \"pyomo @ https://github.com/Pyomo/pyomo/archive/6.4.3.zip\"`, then the deprecation infrastructure seems to work as expected:\r\n\r\n```sh\r\n$ python -c \"from pyomo.core.expr.logical_expr import EqualityExpression\"\r\nWARNING: DEPRECATED: the 'EqualityExpression' class has been moved to\r\n    'pyomo.core.expr.relational_expr.EqualityExpression'.  Please update your\r\n    import.  (deprecated in 6.4.3)\r\n```\r\n\r\nHowever, if the same version of Pyomo is installed from PyPI with `pip install pyomo==6.4.3`, the exact same import fails with `ImportError`:\r\n\r\n```sh\r\n$ python -c \"from pyomo.core.expr.logical_expr import EqualityExpression\"\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nImportError: cannot import name 'EqualityExpression' from 'pyomo.core.expr.logical_expr' (/opt/conda/envs/test-pyomo-6.4.3/lib/python3.9/site-packages/pyomo/core/expr/logical_expr.cpython-39-x86_64-linux-gnu.so)\r\n```\r\n\r\n### Steps to reproduce the issue\r\n\r\n```sh\r\nconda create --name test-pyomo-6.4.3-pypi --yes python=3.9 && conda activate test-pyomo-6.4.3-pypi\r\npip install pyomo==6.4.3\r\npython -c \"from pyomo.core.expr.logical_expr import EqualityExpression\"  # ImportError\r\nconda deactivate\r\nconda create --name test-pyomo-6.4.3-gh --yes python=3.9 && conda activate test-pyomo-6.4.3-gh\r\npip install \"pyomo @ https://github.com/Pyomo/pyomo/archive/6.4.3.zip\"\r\npython -c \"from pyomo.core.expr.logical_expr import EqualityExpression\"  # deprecation warning\r\n```\r\n\r\n### Error Message\r\n\r\n```log\r\nImportError: cannot import name 'EqualityExpression' from 'pyomo.core.expr.logical_expr' (/opt/conda/envs/test-pyomo-6.4.3/lib/python3.9/site-packages/pyomo/core/expr/logical_expr.cpython-39-x86_64-linux-gnu.so)\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.3\r\nPython version: 3.9\r\nOperating system: Ubuntu 20.04.5\r\nHow Pyomo was installed (PyPI, conda, source): See above\r\nSolver (if applicable): N/A\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2642/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2626", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2626/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2626/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2626/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2626", "id": 1464708849, "node_id": "I_kwDOA5FfHs5XTa7x", "number": 2626, "title": "Fixed Vars unpickle as stale", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-11-25T15:50:35Z", "updated_at": "2022-11-29T07:24:33Z", "closed_at": "2022-11-29T07:24:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nI'm not sure if this is a bug, but it seems unexpected? Anyway, if you pickle a model that has a fixed variable (not stale), when you unpickle it, it comes back as stale.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\nfrom pyomo.environ import *\r\nimport pickle\r\n\r\nm = ConcreteModel()\r\nm.x = Var(domain=Binary)\r\nm.x.fix(1)\r\n\r\nunpickle = pickle.loads(pickle.dumps(m))\r\n\r\nm.x.pprint()\r\nunpickle.x.pprint()\r\n```\r\n\r\n```\r\nx : Size=1, Index=None\r\n    Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n    None :     0 :     1 :     1 :  True : False : Binary\r\nx : Size=1, Index=None\r\n    Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n    None :     0 :     1 :     1 :  True :  True : Binary\r\n```\r\n\r\n### Error Message\r\n\r\nIt seems like these models should be identical, even up to stale-ness, right?\r\n\r\n### Information on your system\r\n\r\nPyomo version: main\r\nPython version: 3.8\r\nOperating system: linux\r\nHow Pyomo was installed (PyPI, conda, source): source \r\nSolver (if applicable):", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2626/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2623", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2623/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2623/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2623/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2623", "id": 1462229588, "node_id": "I_kwDOA5FfHs5XJ9pU", "number": 2623, "title": "Pyomo solution does not agree with gams solution", "user": {"login": "David-Linan", "id": 61439879, "node_id": "MDQ6VXNlcjYxNDM5ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/61439879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/David-Linan", "html_url": "https://github.com/David-Linan", "followers_url": "https://api.github.com/users/David-Linan/followers", "following_url": "https://api.github.com/users/David-Linan/following{/other_user}", "gists_url": "https://api.github.com/users/David-Linan/gists{/gist_id}", "starred_url": "https://api.github.com/users/David-Linan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/David-Linan/subscriptions", "organizations_url": "https://api.github.com/users/David-Linan/orgs", "repos_url": "https://api.github.com/users/David-Linan/repos", "events_url": "https://api.github.com/users/David-Linan/events{/privacy}", "received_events_url": "https://api.github.com/users/David-Linan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-23T18:36:17Z", "updated_at": "2022-11-23T21:32:13Z", "closed_at": "2022-11-23T21:26:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nI am using GAMS solvers to solve an optimization problem involving pyomo.gdp and pyomo.dae. I have noticed several times that the solution obtained by GAMS is not the same as the one reported by pyomo in the attached file. It seems to me that there is an error when GAMS passes the results back to pyomo. \r\n\r\n### Steps to reproduce the issue\r\n\r\n An example script is attached\r\n```\r\n# test_borrar.py\r\nfrom __future__ import division\r\nimport pyomo.environ as pe\r\nimport pyomo.dae as dae\r\nimport math\r\nimport os\r\nfrom pyomo.opt import SolverFactory\r\nfrom pyomo.gdp import Disjunct, Disjunction\r\nimport itertools\r\n\r\n\r\ndef scheduling_and_control():\r\n    # Data\r\n    Infty = 1e+8\r\n    # ------------pyomo model------------------------------------------------\r\n    # ------------------------------------------------------------------------\r\n\r\n    m = pe.ConcreteModel(name='reaction_1')\r\n\r\n    # ------------scalars    ------------------------------------------------\r\n    # TODO: Update as required\r\n    m.delta = pe.Param(\r\n        initialize=1, doc='lenght of time periods of discretized time grid for scheduling [units of time]')\r\n    # TODO: Update as required\r\n    m.lastT = pe.Param(\r\n        initialize=14, doc='last discrete time value in the scheduling time grid')\r\n\r\n    # -----------sets--------------------------------------------------------\r\n    # Main sets\r\n    m.T = pe.RangeSet(0, m.lastT, 1, doc='Discrete time set')\r\n    # TODO: Note that here I only consider species relevant for the dynamic model\r\n    m.Q = pe.Set(initialize=['A', 'B', 'C', 'D',\r\n                 'E', 'F'], doc='Chemical species')\r\n    m.J = pe.Set(initialize=['Mix', 'R_large',\r\n                 'R_small', 'Sep', 'Pack'], doc='Set of Units')\r\n    m.I = pe.Set(initialize=['Mix', 'R1', 'R2', 'R3',\r\n                 'Sep', 'Pack1', 'Pack2'], doc='Set of tasks')\r\n    m.K = pe.Set(initialize=['S1', 'M1', 'M2', 'M3', 'W1', 'P1',\r\n                 'P2', 'I1', 'I2', 'I3', 'I4', 'I5', 'I6'], doc='Set of states')\r\n    # Subsets\r\n    m.J_reactors = pe.Set(initialize=['R_large', 'R_small'], within=m.J)\r\n    m.I_reactions = pe.Set(initialize=['R1', 'R2', 'R3'], within=m.I)\r\n    m.J_noDynamics = m.J-m.J_reactors\r\n    m.I_noDynamics = m.I-m.I_reactions\r\n    m.K_inputs = pe.Set(initialize=['S1', 'M1', 'M2', 'M3'], within=m.K)\r\n    m.K_products = pe.Set(initialize=['P1', 'P2'], within=m.K)\r\n    # ----------Scalars that depend on sets\r\n    m.eta = pe.Param(initialize=(m.T.__len__()-1)*m.delta,\r\n                     doc='scheduling horizon [units of nntime]')\r\n\r\n    # -----------parameters--------------------------------------------------\r\n    _I_i_k_minus = {}\r\n    _I_i_k_minus['Mix', 'S1'] = 1\r\n    _I_i_k_minus['Mix', 'M1'] = 1\r\n\r\n    _I_i_k_minus['R1', 'M2'] = 1\r\n    _I_i_k_minus['R1', 'M3'] = 1\r\n\r\n    _I_i_k_minus['R2', 'I1'] = 1\r\n    _I_i_k_minus['R2', 'I2'] = 1\r\n\r\n    _I_i_k_minus['R3', 'I3'] = 1\r\n    _I_i_k_minus['R3', 'M3'] = 1\r\n\r\n    _I_i_k_minus['Sep', 'I4'] = 1\r\n\r\n    _I_i_k_minus['Pack1', 'I5'] = 1\r\n\r\n    _I_i_k_minus['Pack2', 'I6'] = 1\r\n    m.I_i_k_minus = pe.Param(m.I, m.K, initialize=_I_i_k_minus,\r\n                             default=0, doc='State-task mapping: outputs from states')\r\n\r\n    _I_i_k_plus = {}\r\n    _I_i_k_plus['Mix', 'I1'] = 1\r\n\r\n    _I_i_k_plus['R1', 'I2'] = 1\r\n\r\n    _I_i_k_plus['R2', 'I3'] = 1\r\n    _I_i_k_plus['R2', 'I5'] = 1\r\n\r\n    _I_i_k_plus['R3', 'I4'] = 1\r\n\r\n    _I_i_k_plus['Sep', 'W1'] = 1\r\n    _I_i_k_plus['Sep', 'I6'] = 1\r\n\r\n    _I_i_k_plus['Pack1', 'P1'] = 1\r\n\r\n    _I_i_k_plus['Pack2', 'P2'] = 1\r\n    m.I_i_k_plus = pe.Param(m.I, m.K, initialize=_I_i_k_plus,\r\n                            default=0, doc=\"Task-state mapping: inputs to states\")\r\n\r\n    _rho_minus = {}\r\n    _rho_minus['Mix', 'S1'] = 3/5\r\n    _rho_minus['Mix', 'M1'] = 2/5\r\n\r\n    _rho_minus['R1', 'M2'] = 1/2\r\n    _rho_minus['R1', 'M3'] = 1/2\r\n\r\n    _rho_minus['R2', 'I1'] = 1/2\r\n    _rho_minus['R2', 'I2'] = 1/2\r\n\r\n    _rho_minus['R3', 'I3'] = 1/2\r\n    _rho_minus['R3', 'M3'] = 1/2\r\n\r\n    _rho_minus['Sep', 'I4'] = 1\r\n\r\n    _rho_minus['Pack1', 'I5'] = 1\r\n\r\n    _rho_minus['Pack2', 'I6'] = 1\r\n    m.rho_minus = pe.Param(m.I, m.K, initialize=_rho_minus, default=0,\r\n                           doc=\"Fraction of material in state k consumed by task i \")\r\n\r\n    _rho_plus = {}\r\n    _rho_plus['Mix', 'I1'] = 1\r\n\r\n    _rho_plus['R1', 'I2'] = 1\r\n\r\n    _rho_plus['R2', 'I3'] = 3/5\r\n    _rho_plus['R2', 'I5'] = 2/5\r\n\r\n    _rho_plus['R3', 'I4'] = 1\r\n\r\n    _rho_plus['Sep', 'W1'] = 2/5\r\n    _rho_plus['Sep', 'I6'] = 3/5\r\n\r\n    _rho_plus['Pack1', 'P1'] = 1\r\n\r\n    _rho_plus['Pack2', 'P2'] = 1\r\n    m.rho_plus = pe.Param(m.I, m.K, initialize=_rho_plus, default=0,\r\n                          doc=\"Fraction of material in state k produced by task i \")\r\n\r\n    _I_i_j_prod = {}\r\n    _I_i_j_prod['Mix', 'Mix'] = 1\r\n\r\n    _I_i_j_prod['R1', 'R_large'] = 1\r\n    _I_i_j_prod['R1', 'R_small'] = 1\r\n\r\n    _I_i_j_prod['R2', 'R_large'] = 1\r\n    _I_i_j_prod['R2', 'R_small'] = 1\r\n\r\n    _I_i_j_prod['R3', 'R_large'] = 1\r\n    _I_i_j_prod['R3', 'R_small'] = 1\r\n\r\n    _I_i_j_prod['Sep', 'Sep'] = 1\r\n\r\n    _I_i_j_prod['Pack1', 'Pack'] = 1\r\n    _I_i_j_prod['Pack2', 'Pack'] = 1\r\n    m.I_i_j_prod = pe.Param(m.I, m.J, initialize=_I_i_j_prod, default=0,\r\n                            doc=\"Unit-task mapping (Definition of units that are allowed to perform a given task\")\r\n\r\n    _beta_min = {}\r\n    _beta_min['Mix', 'Mix'] = 0.2\r\n\r\n    _beta_min['R1', 'R_large'] = 0.15\r\n    _beta_min['R1', 'R_small'] = 0.1\r\n\r\n    _beta_min['R2', 'R_large'] = 0.15\r\n    _beta_min['R2', 'R_small'] = 0.1\r\n\r\n    _beta_min['R3', 'R_large'] = 0.15\r\n    _beta_min['R3', 'R_small'] = 0.1\r\n\r\n    _beta_min['Sep', 'Sep'] = 0.2\r\n\r\n    _beta_min['Pack1', 'Pack'] = 0.1\r\n    _beta_min['Pack2', 'Pack'] = 0.1\r\n    # Note that I am using volumes, altough mass would be more general.\r\n    m.beta_min = pe.Param(m.I, m.J, initialize=_beta_min, default=0,\r\n                          doc=\"minimum capacity of unit j for task i [m^3]\")\r\n\r\n    _beta_max = {}\r\n    _beta_max['Mix', 'Mix'] = 2\r\n\r\n    _beta_max['R1', 'R_large'] = 1.5\r\n    _beta_max['R1', 'R_small'] = 1\r\n\r\n    _beta_max['R2', 'R_large'] = 1.5\r\n    _beta_max['R2', 'R_small'] = 1\r\n\r\n    _beta_max['R3', 'R_large'] = 1.5\r\n    _beta_max['R3', 'R_small'] = 1\r\n\r\n    _beta_max['Sep', 'Sep'] = 2\r\n\r\n    _beta_max['Pack1', 'Pack'] = 1\r\n    _beta_max['Pack2', 'Pack'] = 1\r\n    # Note that I am using volumes, altough mass would be more general.\r\n    m.beta_max = pe.Param(m.I, m.J, initialize=_beta_max, default=0,\r\n                          doc=\"maximum capacity of unit j for task i [m^3]\")\r\n\r\n    m.gamma = pe.Param(m.K, initialize={'S1': Infty, 'M1': Infty, 'M2': Infty, 'M3': Infty, 'W1': Infty, 'P1': Infty, 'P2': Infty,\r\n                       'I1': 2, 'I2': 2, 'I3': 2, 'I4': 2, 'I5': 5, 'I6': 5}, default=0, doc=\"maximum amount of material k that can be stored [m^3]\")\r\n\r\n    # Parameters of reactor units\r\n    # m.v_R_max = pe.Param(m.J_reactors,initialize={'R_large':1.5,'R_small':1},doc='Maximum capacity of the reactor [m^3]') #TODO: Probably not used\r\n    m.v_J = pe.Param(m.J_reactors, initialize={\r\n                     'R_large': 0.5, 'R_small': 0.3}, doc='Volume of the Jacket [m^3]')\r\n    m.rho_J = pe.Param(m.J_reactors, initialize={\r\n                       'R_large': 1e+3, 'R_small': 1e+3}, doc='Density of the jacket [kg/m^3]')\r\n    m.c_J = pe.Param(m.J_reactors, initialize={\r\n                     'R_large': 4.2, 'R_small': 4.2}, doc='Heat capacity of jacket [kJ/kg K]')\r\n    m.ua = pe.Param(m.J_reactors, initialize={\r\n                    'R_large': 3e+4, 'R_small': 2e+4}, doc='Heat transfer coefficient [kJ/h K]')\r\n    m.T_H = pe.Param(m.J_reactors, initialize={\r\n                     'R_large': 370, 'R_small': 370}, doc='Temperature of heating water [K]')\r\n    m.T_C = pe.Param(m.J_reactors, initialize={\r\n                     'R_large': 300, 'R_small': 300}, doc='Temperature of cooling water [K]')\r\n    m.T_R_max = pe.Param(m.J_reactors, initialize={\r\n                         'R_large': 370, 'R_small': 370}, doc='Maximum temperature of reactor [K]')\r\n    m.T_J_max = pe.Param(m.J_reactors, initialize={\r\n                         'R_large': 370, 'R_small': 370}, doc='Maximum temperature of jacket [K]')\r\n    m.F_max = pe.Param(m.J_reactors, initialize={\r\n                       'R_large': 10, 'R_small': 5}, doc='Maximum flow rate of heating and cooling water [m^3/h]')\r\n\r\n    # Parameters of reaction tasks\r\n    m.z = pe.Param(m.I_reactions, initialize={\r\n                   'R1': 1e+7, 'R2': 1.2e+3, 'R3': 2e+4}, doc='Pre-exponential factors [m^3/kmol h]')\r\n    m.er = pe.Param(m.I_reactions, initialize={\r\n                    'R1': 5e+3, 'R2': 2e+3, 'R3': 3e+3}, doc='Normalized activation energy [K]')\r\n    m.delta_h = pe.Param(m.I_reactions, initialize={\r\n                         'R1': 1e+3, 'R2': -2e+3, 'R3': 5e+3}, doc='Heat of reaction [kJ/kmol]')\r\n    m.rho_R = pe.Param(m.I_reactions, initialize={\r\n                       'R1': 1e+3, 'R2': 1e+3, 'R3': 1e+3}, doc='Density of reaction mixture [kg/m^3]')\r\n    m.c_R = pe.Param(m.I_reactions, initialize={\r\n                     'R1': 3, 'R2': 3.5, 'R3': 4}, doc='Heat capacity of reaction mixture [kJ/kg K]')\r\n    _coef = {}\r\n\r\n    _coef['R1', 'B'] = -1\r\n    _coef['R1', 'C'] = -1\r\n    _coef['R1', 'D'] = 2\r\n\r\n    _coef['R2', 'A'] = -1\r\n    _coef['R2', 'D'] = -1\r\n    _coef['R2', 'E'] = 2\r\n\r\n    _coef['R3', 'C'] = -1\r\n    _coef['R3', 'E'] = -1\r\n    _coef['R3', 'F'] = 1\r\n    m.coef = pe.Param(m.I_reactions, m.Q, default=0,\r\n                      initialize=_coef, doc='Stoichiometric coefficient')\r\n\r\n    # Composition of states #TODO: In general the problem is formulated using mass balances, but in the paper there is an assumption, so balances are performed in terms of volumes\r\n    _C = {}\r\n    _C['M1', 'A'] = 5\r\n\r\n    _C['M2', 'B'] = 2\r\n\r\n    _C['M3', 'C'] = 2\r\n\r\n    _C['P1', 'E'] = 1.8  # This has the same composition as I3 and I5\r\n    # Based on the abouve comment and a balance, I had to add this (based on mole balance)\r\n    _C['P1', 'A'] = 0.1\r\n    # Based on the abouve comment and a balance, I had to add this (based on mole balance)\r\n    _C['P1', 'D'] = 0.05\r\n    # Based on the abouve comment and a balance, I had to add this (based on mole balance)\r\n    _C['P1', 'B'] = 0.025\r\n    # Based on the abouve comment and a balance, I had to add this (based on mole balance)\r\n    _C['P1', 'C'] = 0.025\r\n\r\n    # Other component compositions are unknown due to unknown conditions in distillation. Perfect separation is assumed\r\n    _C['P2', 'F'] = 1\r\n\r\n    _C['I1', 'A'] = 2\r\n\r\n    _C['I2', 'B'] = 0.05\r\n    _C['I2', 'C'] = 0.05\r\n    _C['I2', 'D'] = 1.9  # TODO: Note that composition of output states from reactors is being specified, i.e., I already know the exact desired composition I want as output from each reactor\r\n\r\n    # TODO (solved): There are \"others\" component here. Check if there is any assumption, given that inerts are usually considered in balances\r\n    _C['I3', 'E'] = 1.8\r\n    # Based on the abouve comment and a balance, I had to add this (based on mole balance)\r\n    _C['I3', 'A'] = 0.1\r\n    # Based on the abouve comment and a balance, I had to add this (based on mole balance)\r\n    _C['I3', 'D'] = 0.05\r\n    # Based on the abouve comment and a balance, I had to add this (based on mole balance)\r\n    _C['I3', 'B'] = 0.025\r\n    # Based on the abouve comment and a balance, I had to add this (based on mole balance)\r\n    _C['I3', 'C'] = 0.025\r\n\r\n    _C['I4', 'F'] = 0.8\r\n    # Based on the abouve comment and a balance, I had to add this (based on mole balance)\r\n    _C['I4', 'C'] = 0.2125\r\n    # Based on the abouve comment and a balance, I had to add this (based on mole balance)\r\n    _C['I4', 'E'] = 0.1\r\n    # Based on the abouve comment and a balance, I had to add this (based on mole balance)\r\n    _C['I4', 'A'] = 0.05\r\n    # Based on the abouve comment and a balance, I had to add this (based on mole balance)\r\n    _C['I4', 'D'] = 0.025\r\n    # Based on the abouve comment and a balance, I had to add this (based on mole balance)\r\n    _C['I4', 'B'] = 0.0125\r\n\r\n    _C['I5', 'E'] = 1.8\r\n    # Based on the abouve comment and a balance, I had to add this (based on mole balance)\r\n    _C['I5', 'A'] = 0.1\r\n    # Based on the abouve comment and a balance, I had to add this (based on mole balance)\r\n    _C['I5', 'D'] = 0.05\r\n    # Based on the abouve comment and a balance, I had to add this (based on mole balance)\r\n    _C['I5', 'B'] = 0.025\r\n    # Based on the abouve comment and a balance, I had to add this (based on mole balance)\r\n    _C['I5', 'C'] = 0.025\r\n\r\n    # Other component compositions are unknown due to unknown conditions in distillation\r\n    _C['I6', 'F'] = 1\r\n    # Waste composition is unknown\r\n    m.C = pe.Param(m.K, m.Q, initialize=_C, default=0,\r\n                   doc='Composition of different reactive components at each state [kmol/m^3]')\r\n\r\n    # Initial composition and final composition inside reactors. This is important for dynamics, but these parameters are not going to be used in scheduling\r\n\r\n    def _C_initial(m, I, Q):\r\n        return sum(m.rho_minus[I, K]*m.C[K, Q] for K in m.K if m.I_i_k_minus[I, K] == 1)\r\n    # TODO: Check assumptions that lead to this equation in you article. Same assumptions here\r\n    m.C_initial = pe.Param(m.I_reactions, m.Q, initialize=_C_initial,\r\n                           doc='Initial composition inside reactor for this reaction and component [kmol/m^3]')\r\n    # m.C_initial.display()\r\n\r\n    def _C_final(m, I, Q):\r\n        return sum(m.rho_plus[I, K]*m.C[K, Q] for K in m.K if m.I_i_k_plus[I, K] == 1)\r\n    m.C_final = pe.Param(m.I_reactions, m.Q, initialize=_C_final,\r\n                         doc='Final composition inside reactor for this reaction and component [kmol/m^3]')\r\n\r\n    # Initial temperature of reactors and heating medium for each task\r\n    m.T_R_initial = pe.Param(m.I_reactions, initialize={\r\n                             'R1': 300, 'R2': 300, 'R3': 300}, doc='Initial condition for reaction temperatures inside reactor [K]')\r\n    m.T_J_initial = pe.Param(m.I_reactions, initialize={\r\n                             'R1': 300, 'R2': 300, 'R3': 300}, doc='Initial condition for jacket temperatures [K]')\r\n    # Final temperature of reactions\r\n    m.T_R_final = pe.Param(m.I_reactions, initialize={\r\n                           'R1': 320, 'R2': 320, 'R3': 320}, doc='Maximum temperature at the end of the reaction [K]')\r\n\r\n    def _demand(m, K, T):\r\n        if K == 'P1' and T == m.lastT:\r\n            # 1 is the parameter in you article\r\n            return (1)/sum(m.C[K, Q] for Q in m.Q)\r\n        elif K == 'P2' and T == m.lastT:\r\n            # 1 is the parameter in you article\r\n            return (1)/sum(m.C[K, Q] for Q in m.Q)\r\n        else:\r\n            return 0\r\n    m.demand = pe.Param(m.K, m.T, initialize=_demand, default=0,\r\n                        doc=\"Minimum demand of material k at time t [m^3]\")\r\n    # You is not reporting this, so I am assuming it is infinity. This makes sense with the objective function his defines if it is assumed that raw material is available whenever we want to buy it, and that it can instantanelusly go to our production facility\r\n    m.S0 = pe.Param(m.K, initialize={'M1': Infty, 'M2': Infty, 'M3': Infty,\r\n                    'S1': Infty}, default=0, doc=\"Initial amount of state k [m^3]\")\r\n\r\n    _fixed_cost = {}\r\n    _fixed_cost['Mix', 'Mix'] = 10\r\n\r\n    _fixed_cost['R1', 'R_large'] = 30\r\n    _fixed_cost['R1', 'R_small'] = 20\r\n\r\n    _fixed_cost['R2', 'R_large'] = 30\r\n    _fixed_cost['R2', 'R_small'] = 20\r\n\r\n    _fixed_cost['R3', 'R_large'] = 30\r\n    _fixed_cost['R3', 'R_small'] = 20\r\n\r\n    _fixed_cost['Sep', 'Sep'] = 100\r\n\r\n    _fixed_cost['Pack1', 'Pack'] = 50\r\n    _fixed_cost['Pack2', 'Pack'] = 50\r\n\r\n    m.fixed_cost = pe.Param(m.I, m.J, default=0, initialize=_fixed_cost,\r\n                            doc=\"Fixed cost to run task i in unit j [m.u./batch]\")\r\n\r\n    _variable_cost_param = {}\r\n    _variable_cost_param['Mix', 'Mix'] = 30\r\n\r\n    _variable_cost_param['Sep', 'Sep'] = 100\r\n\r\n    _variable_cost_param['Pack1', 'Pack'] = 50\r\n    _variable_cost_param['Pack2', 'Pack'] = 50\r\n\r\n    m.variable_cost = pe.Param(\r\n        m.I, m.J, default=0, initialize=_variable_cost_param, doc=\"Variabe batch cost [m.u/m^3]\")\r\n\r\n    def _raw_cost(m, K):\r\n        if K == 'S1':\r\n            return 0\r\n        elif K == 'M1':  # A\r\n            return 100*sum(m.C[K, Q] for Q in m.Q)\r\n        elif K == 'M2':  # B\r\n            return 150*sum(m.C[K, Q] for Q in m.Q)\r\n        elif K == 'M3':  # C\r\n            return 200*sum(m.C[K, Q] for Q in m.Q)\r\n        else:\r\n            return 0\r\n    m.raw_cost = pe.Param(m.K, default=0, initialize=_raw_cost,\r\n                          doc='Unit cost of raw materials [m.u./m^3]')\r\n\r\n    m.hot_cost = pe.Param(\r\n        initialize=10, doc='Unit cost of heating fluid [m.u./m^3]')\r\n    m.cold_cost = pe.Param(\r\n        initialize=1, doc='Unit cost of cooling fluid [m.u./m^3]')\r\n\r\n    def _revenue(m, K):\r\n        if K == 'P1':\r\n            return 700*sum(m.C[K, Q] for Q in m.Q)\r\n        elif K == 'P2':\r\n            return 1200*sum(m.C[K, Q] for Q in m.Q)\r\n        else:\r\n            return 0\r\n    m.revenue = pe.Param(m.K, default=0, initialize=_revenue,\r\n                         doc='revenue from selling one unit of material k [m.u/m^3]')\r\n\r\n    m.t_p = pe.Param(m.T, initialize=[\r\n                     m.delta*j for j in m.T], doc='physical time [units of time]')\r\n\r\n    _tau_p = {}\r\n\r\n    _tau_p['Mix', 'Mix'] = 1.5\r\n\r\n    _tau_p['Sep', 'Sep'] = 3\r\n\r\n    _tau_p['Pack1', 'Pack'] = 1.5\r\n    _tau_p['Pack2', 'Pack'] = 1.5\r\n\r\n    # TODO: the input info I am declaring here is in HOURS. Check that it makes sense with respect to the time discretization in reactors balances!!!!!!!\r\n    m.tau_p = pe.Param(m.I, m.J, initialize=_tau_p, mutable=True, default=0,\r\n                       doc=\"Physical processing time for tasks [units of time]\")\r\n\r\n    def _tau(m, I, J):\r\n        return math.ceil(pe.value(m.tau_p[I, J])/m.delta)\r\n    m.tau = pe.Param(m.I, m.J, initialize=_tau, mutable=True, default=0,\r\n                     doc=\"Processing time with respect to the time grid: how many grid spaces do I need for the task ?\")\r\n\r\n    # # -----------scheduling variables -----------------------------------------\r\n    m.X = pe.Var(m.I, m.J, m.T, within=pe.Binary, initialize=0,\r\n                 doc='1 if unit j processes task i starting at time t')\r\n    # help(pe.Var)\r\n\r\n    def _B_bounds(m, I, J, T):\r\n        return (0, m.beta_max[I, J])\r\n    m.B = pe.Var(m.I, m.J, m.T, within=pe.NonNegativeReals, bounds=_B_bounds,\r\n                 initialize=0, doc='Batch size of task i processed in unit j starting at time t')\r\n\r\n    def _S_bounds(m, K, T):\r\n        return (0, m.gamma[K])\r\n    m.S = pe.Var(m.K, m.T, within=pe.NonNegativeReals, bounds=_S_bounds,\r\n                 initialize=0, doc='Inventory of material k at time t')\r\n\r\n    # # ----------Reactor variables that do not depend on disjunctions------------------------------------------------------\r\n    def _Vreactor_bounds(m, I, J):\r\n        return (m.model().beta_min[I, J], m.model().beta_max[I, J])\r\n    m.Vreactor = pe.Var(m.I_reactions, m.J_reactors, within=pe.NonNegativeReals, bounds=_Vreactor_bounds,\r\n                        doc='Reactive mixture volume for reaction I in reactor J [m^3]')  # TODO: link this variable with batch size variables\r\n\r\n    # # ----------Scheduling Constraints that DO NOT depend on disjunctions-----------------------------------------\r\n    def _E2_CAPACITY_LOW(m, I, J, T):\r\n        if m.I_i_j_prod[I, J] != 1:\r\n            return pe.Constraint.Skip\r\n        else:\r\n            return m.beta_min[I, J]*m.X[I, J, T] <= m.B[I, J, T]\r\n\r\n    m.E2_CAPACITY_LOW = pe.Constraint(\r\n        m.I, m.J, m.T, rule=_E2_CAPACITY_LOW, doc='UNIT CAPACITY LOWER BOUND')\r\n\r\n    def _E2_CAPACITY_UP(m, I, J, T):\r\n        if m.I_i_j_prod[I, J] != 1:\r\n            return pe.Constraint.Skip\r\n        else:\r\n            return m.B[I, J, T] <= m.beta_max[I, J]*m.X[I, J, T]\r\n\r\n    m.E2_CAPACITY_UP = pe.Constraint(\r\n        m.I, m.J, m.T, rule=_E2_CAPACITY_UP, doc='UNIT CAPACITY UPPER BOUND')\r\n\r\n    def _E3_BALANCE_INIT(m, K):\r\n        # -m.demand[K,0]\r\n        return m.S[K, 0] == m.S0[K]-sum(m.rho_minus[I, K]*sum(m.B[I, J, 0] for J in m.J if m.I_i_j_prod[I, J] == 1) for I in m.I if m.I_i_k_minus[I, K] == 1)\r\n    m.E3_BALANCE_INIT = pe.Constraint(\r\n        m.K, rule=_E3_BALANCE_INIT, doc='MATERIAL BALANCES INITIAL CONDITION')\r\n\r\n    def _E_DEMAND_SATISFACTION(m, K):\r\n        return m.S[K, m.lastT] >= m.demand[K, m.lastT]\r\n    m.E_DEMAND_SATISFACTION = pe.Constraint(\r\n        m.K_products, rule=_E_DEMAND_SATISFACTION, doc='INVENTORY LEVEL OF PRODUCTS NEEDS TO MEET THE ORDER DEMAND')\r\n\r\n    # -------------------------------------------------------------------------------------\r\n    # -------------------------------------------------------------------------------------\r\n    # -----------------DISJUNCTIVE SECTION-------------------------------------------------\r\n    _minTau = {}\r\n    _minTau['R1', 'R_large'] = math.ceil(2/m.delta)\r\n    _minTau['R1', 'R_small'] = math.ceil(2/m.delta)\r\n\r\n    _minTau['R2', 'R_large'] = math.ceil(3/m.delta)\r\n    _minTau['R2', 'R_small'] = math.ceil(3/m.delta)\r\n\r\n    _minTau['R3', 'R_large'] = math.ceil(2/m.delta)\r\n    _minTau['R3', 'R_small'] = math.ceil(2/m.delta)\r\n    m.minTau = pe.Param(m.I_reactions, m.J_reactors, initialize=_minTau,\r\n                        doc='Minimum number of discrete elements required to complete task [dimensionless]')\r\n\r\n    _maxTau = {}\r\n    _maxTau['R1', 'R_large'] = math.ceil(2/m.delta)\r\n    _maxTau['R1', 'R_small'] = math.ceil(2/m.delta)\r\n\r\n    _maxTau['R2', 'R_large'] = math.ceil(3/m.delta)\r\n    _maxTau['R2', 'R_small'] = math.ceil(3/m.delta)\r\n\r\n    _maxTau['R3', 'R_large'] = math.ceil(2/m.delta)\r\n    _maxTau['R3', 'R_small'] = math.ceil(2/m.delta)\r\n    m.maxTau = pe.Param(m.I_reactions, m.J_reactors, initialize=_maxTau,\r\n                        doc='Maximum number of discrete elements required to complete task [dimensionless]')\r\n\r\n    def _varTime_bounds(m, I, J):\r\n        return (m.minTau[I, J]*m.delta, m.maxTau[I, J]*m.delta)\r\n    m.varTime = pe.Var(m.I_reactions, m.J_reactors, within=pe.NonNegativeReals,\r\n                       bounds=_varTime_bounds, doc='Variable processing time for units that consider dynamics [h]')\r\n\r\n    m.ordered_set = {}\r\n    m.YR = {}\r\n    m.oneYR = {}\r\n    for I in m.I_reactions:\r\n        for J in m.J_reactors:\r\n\r\n            m.ordered_set[I, J] = pe.RangeSet(\r\n                m.minTau[I, J], m.maxTau[I, J], doc='Ordered set for each reaction-reactor pair')\r\n            setattr(m, 'ordered_set_%s_%s' % (I, J), m.ordered_set[I, J])\r\n\r\n            m.YR[I, J] = pe.BooleanVar(m.ordered_set[I, J], initialize=False)\r\n            setattr(m, 'YR_%s_%s' % (I, J), m.YR[I, J])\r\n\r\n            # Constraint that allow to apply the reformulation over YR\r\n            def _select_one(m):\r\n                return pe.exactly(1, m.YR[I, J])\r\n            m.oneYR[I, J] = pe.LogicalConstraint(rule=_select_one)\r\n            setattr(m, 'oneYR_%s_%s' % (I, J), m.oneYR[I, J])\r\n\r\n    # Declaration of disjuncts\r\n    def _initDisjuncset(m):\r\n        return list(itertools.product(*m.ordered_set.values()))\r\n    m.disjunctionsset = pe.Set(initialize=_initDisjuncset)\r\n\r\n    m.Y = pe.BooleanVar(m.disjunctionsset, initialize=False,\r\n                        doc=\"Boolean variable that defines the disjunction that decides which scheduling model will be used, depending on the current durantion of each task\")\r\n\r\n    def _YR_Y_equivalence(m, *args):\r\n        disjunctionsset = args\r\n        return_list = []\r\n        current = -1\r\n        for I in m.I_reactions:\r\n            for J in m.J_reactors:\r\n                current = current+1\r\n                for order in m.ordered_set[I, J]:\r\n                    if order == disjunctionsset[current]:\r\n                        return_list.append(m.YR[I, J][order])\r\n        return m.Y[disjunctionsset].equivalent_to(pe.land(return_list))\r\n\r\n    m.YR_Y_equivalence = pe.LogicalConstraint(\r\n        m.disjunctionsset, rule=_YR_Y_equivalence)\r\n\r\n    # -----First disjunction\r\n    def _build_disjuncts(m, *args):  # Disjuncts for first Boolean variable\r\n        disjunctionsset = args\r\n        current = -1\r\n        for I in m.model().I_reactions:\r\n            for J in m.model().J_reactors:\r\n                current = current+1\r\n                m.model().tau[I, J] = disjunctionsset[current]\r\n                # Both times are assumed to be discrete\r\n                m.model().tau_p[I, J] = disjunctionsset[current] * \\\r\n                    m.model().delta\r\n        # #----------- Variable processing times----------------------------------------------------------------\r\n\r\n        def _DEF_VAR_TIME(m, I, J):\r\n            return m.model().varTime[I, J] == pe.value(m.model().tau_p[I, J])\r\n        m.DEF_VAR_TIME = pe.Constraint(m.model().I_reactions, m.model(\r\n        ).J_reactors, rule=_DEF_VAR_TIME, doc='Assignment of variable time value')\r\n        # # ----------Scheduling Constraints that depend on disjunctions-----------------------------------------\r\n        # TODO: The following equations make the disjunction require a lot of time to generate and therefore the model requires a lot of time to construct\r\n\r\n        def _E1_UNIT(m, J, T):\r\n            return sum(sum(m.model().X[I, J, TP] for TP in m.model().T if TP <= T and TP >= T-pe.value(m.model().tau[I, J])+1) for I in m.model().I if m.model().I_i_j_prod[I, J] == 1) <= 1\r\n        m.E1_UNIT = pe.Constraint(\r\n            m.model().J, m.model().T, rule=_E1_UNIT, doc='UNIT UTILIZATION')\r\n        # m.E1_UNIT.display()\r\n\r\n        def _E3_BALANCE(m, K, T):\r\n            if T == 0:\r\n                return pe.Constraint.Skip\r\n            else:\r\n                return m.model().S[K, T] == m.model().S[K, T-1]+sum(m.model().rho_plus[I, K]*sum(m.model().B[I, J, T-pe.value(m.model().tau[I, J])] for J in m.model().J if m.model().I_i_j_prod[I, J] == 1 and T-pe.value(m.model().tau[I, J]) >= 0) for I in m.model().I if m.model().I_i_k_plus[I, K] == 1) - sum(m.model().rho_minus[I, K]*sum(m.model().B[I, J, T] for J in m.model().J if m.model().I_i_j_prod[I, J] == 1) for I in m.model().I if m.model().I_i_k_minus[I, K] == 1)  # -m.model().demand[K,T]\r\n        m.E3_BALANCE = pe.Constraint(\r\n            m.model().K, m.model().T, rule=_E3_BALANCE, doc='MATERIAL BALANCES')\r\n    m.Y_disjuncts = Disjunct(m.disjunctionsset, rule=_build_disjuncts,\r\n                             doc=\"each disjunct defines a scheduling model with different operation times for reactor tasks\")\r\n\r\n    # Create disjunction\r\n    def Disjunction1(m):  # Disjunction for first Boolean variable\r\n        return [m.Y_disjuncts[disjunctionsset] for disjunctionsset in m.disjunctionsset]\r\n    m.Disjunction1 = Disjunction(rule=Disjunction1, xor=True)\r\n\r\n    # Associate disjuncts with boolean variables\r\n    for index in m.disjunctionsset:\r\n        m.Y[index].associate_binary_var(\r\n            m.Y_disjuncts[index].binary_indicator_var)\r\n\r\n    # --------END OF DISJUNCTIVE SECTION------------------------------------------\r\n    # ----------------------------------------------------------------------------\r\n    # ----------------------------------------------------------------------------\r\n\r\n    # # ----------Linking constraints-------------------------------------------\r\n    def _linking1_1(m, I, J, T):\r\n        return m.B[I, J, T]-m.Vreactor[I, J] <= (m.beta_max[I, J]-m.beta_min[I, J])*(1-m.X[I, J, T])\r\n    m.linking1 = pe.Constraint(m.I_reactions, m.J_reactors, m.T, rule=_linking1_1,\r\n                               doc='Linking constraint to fuarantee that batch sizes agree with reactor volumes')\r\n\r\n    def _linking1_2(m, I, J, T):\r\n        return -(m.B[I, J, T]-m.Vreactor[I, J]) <= m.beta_max[I, J]*(1-m.X[I, J, T])\r\n    m.linking2 = pe.Constraint(m.I_reactions, m.J_reactors, m.T, rule=_linking1_2,\r\n                               doc='Linking constraint to fuarantee that batch sizes agree with reactor volumes')\r\n\r\n    # -----------Reactors dynamic models--------------------------------\r\n\r\n    # Sets\r\n    m.N = {}  # Continuous time set\r\n    m.Q_balance = {}  # Species of interest in mole and energy balances\r\n\r\n    # Variables\r\n    m.Cvar = {}  # Composition profiles\r\n    m.TRvar = {}  # Reactor temperature profiles\r\n    m.TJvar = {}  # Jacket temperature profile\r\n    # Hot fluid volumetric flow rate profile (manipulated variable)\r\n    m.Fhot = {}\r\n    # Cold fluid volumetric flow rate profile (manipulated variable)\r\n    m.Fcold = {}\r\n\r\n    # Derivativa variables\r\n    m.dCdtheta = {}  # Composition derivatives\r\n    m.dTRdtheta = {}  # Reactor temperature derivatives\r\n    m.dTJdtheta = {}  # Jacket temperature derivatives\r\n\r\n    # Differential equations\r\n    m.c_dCdtheta = {}\r\n    m.c_dTRdtheta = {}\r\n    m.c_dTJdtheta = {}\r\n\r\n    # Final constraint\r\n    m.finalCon = {}\r\n    m.finalTemp = {}\r\n\r\n    # Integrals for cost calcualtion\r\n    m.Integral_hot = {}\r\n    m.Integral_cold = {}\r\n\r\n    m.dIntegral_hotdtheta = {}\r\n    m.dIntegral_colddtheta = {}\r\n    m.c_dIntegral_hotdtheta = {}\r\n    m.c_dIntegral_colddtheta = {}\r\n\r\n    for I in m.I_reactions:\r\n        m.Q_balance[I] = pe.Set(initialize=[Q for Q in m.Q if m.coef[I, Q] != 0],\r\n                                within=m.Q, doc='Species of interest for reaction I')\r\n        setattr(m, 'Q_balance_[%s]' % I, m.Q_balance[I])\r\n        for J in m.J_reactors:\r\n            # TODO: chek units of time, are they consistent? should I use hours?\r\n            m.N[I, J] = dae.ContinuousSet(\r\n                bounds=(0, 1), doc='Continuous time set for reaction I in reactor J [-]')\r\n            # TODO: I think the name of the pyomo object do not affect, because I can access these sets through dictionary m.N. Check if this is correct\r\n            setattr(m, 'N_%s_%s' % (I, J), m.N[I, J])\r\n\r\n            def _Cvar_bounds(m, N, Q):\r\n                # TODO: Check bounds\r\n                return (min([m.C_initial[I, Q], m.C_final[I, Q]]), max([m.C_initial[I, Q], m.C_final[I, Q]]))\r\n            m.Cvar[I, J] = pe.Var(m.N[I, J], m.Q_balance[I], within=pe.NonNegativeReals,\r\n                                  bounds=_Cvar_bounds, doc='Component composition profile [kmol/m^3]')\r\n            setattr(m, 'Cvar_(%s,%s)' % (I, J), m.Cvar[I, J])\r\n\r\n            def _TRvar_bounds(m, N):\r\n                return (m.T_R_initial[I], m.T_R_max[J])  # TODO: Check bounds\r\n            m.TRvar[I, J] = pe.Var(m.N[I, J], within=pe.NonNegativeReals,\r\n                                   bounds=_TRvar_bounds, doc='Reactor temperatrue profile [K]')\r\n            setattr(m, 'TRvar_(%s,%s)' % (I, J), m.TRvar[I, J])\r\n\r\n            def _TJvar_bounds(m, N):\r\n                return (m.T_J_initial[I], m.T_J_max[J])  # TODO: Check bounds\r\n            m.TJvar[I, J] = pe.Var(m.N[I, J], within=pe.NonNegativeReals,\r\n                                   bounds=_TJvar_bounds, doc='Jacket temperature profile [K]')\r\n            setattr(m, 'TJvar_(%s,%s)' % (I, J), m.TJvar[I, J])\r\n\r\n            m.Fhot[I, J] = pe.Var(m.N[I, J], within=pe.NonNegativeReals, bounds=(\r\n                0, m.F_max[J]), doc='Flow of heating fluid [m^3/h]')  # TODO: Check bounds\r\n            setattr(m, 'Fhot_(%s,%s)' % (I, J), m.Fhot[I, J])\r\n\r\n            m.Fcold[I, J] = pe.Var(m.N[I, J], within=pe.NonNegativeReals, bounds=(\r\n                0, m.F_max[J]), doc='Flow of cooling fluid [m^3/h]')  # TODO: Check bounds\r\n            setattr(m, 'Fcold_(%s,%s)' % (I, J), m.Fcold[I, J])\r\n\r\n            m.dCdtheta[I, J] = dae.DerivativeVar(\r\n                m.Cvar[I, J], withrespectto=m.N[I, J], doc='Derivative of composition')\r\n            setattr(m, 'dCdtheta_(%s,%s)' % (I, J), m.dCdtheta[I, J])\r\n\r\n            m.dTRdtheta[I, J] = dae.DerivativeVar(\r\n                m.TRvar[I, J], withrespectto=m.N[I, J], doc='Derivative of reactor temperature')\r\n            setattr(m, 'dTRdtheta_(%s,%s)' % (I, J), m.dTRdtheta[I, J])\r\n\r\n            m.dTJdtheta[I, J] = dae.DerivativeVar(\r\n                m.TJvar[I, J], withrespectto=m.N[I, J], doc='Derivative of jacket temperature')\r\n            setattr(m, 'dTJdtheta_(%s,%s)' % (I, J), m.dTJdtheta[I, J])\r\n\r\n            def _dCdtheta(m, N, Q):\r\n                if N == m.N[I, J].first():\r\n                    # Initial condition\r\n                    return m.Cvar[I, J][N, Q] == m.C_initial[I, Q]\r\n                else:  # This is what the author calls Rb\r\n                    return m.dCdtheta[I, J][N, Q] == m.varTime[I, J]*(m.coef[I, Q] * m.z[I]*pe.exp(-m.er[I]/m.TRvar[I, J][N])*pe.prod([m.Cvar[I, J][N, Q_2] for Q_2 in m.Q_balance[I] if m.coef[I, Q_2] <= -1]))\r\n            m.c_dCdtheta[I, J] = pe.Constraint(\r\n                m.N[I, J], m.Q_balance[I], rule=_dCdtheta)\r\n            setattr(m, 'c_dCdtheta_(%s,%s)' % (I, J), m.c_dCdtheta[I, J])\r\n\r\n            def _dTRdtheta(m, N):\r\n                if N == m.N[I, J].first():\r\n                    # Initial condition\r\n                    return m.TRvar[I, J][N] == m.T_R_initial[I]\r\n                else:\r\n                    return m.dTRdtheta[I, J][N] == m.varTime[I, J]*((((m.z[I]*pe.exp(-m.er[I]/m.TRvar[I, J][N])*pe.prod([m.Cvar[I, J][N, Q_2] for Q_2 in m.Q_balance[I] if m.coef[I, Q_2] <= -1]))*(-m.delta_h[I]))/(m.rho_R[I]*m.c_R[I]))+((m.ua[J]*(m.TJvar[I, J][N] - m.TRvar[I, J][N]))/(m.Vreactor[I, J]*m.rho_R[I]*m.c_R[I])))\r\n            m.c_dTRdtheta[I, J] = pe.Constraint(m.N[I, J], rule=_dTRdtheta)\r\n            setattr(m, 'c_dTRdtheta_(%s,%s)' % (I, J), m.c_dTRdtheta[I, J])\r\n            # m.c_dTRdt[I,J].pprint()\r\n\r\n            def _dTJdtheta(m, N):\r\n                if N == m.N[I, J].first():\r\n                    # Initial condition\r\n                    return m.TJvar[I, J][N] == m.T_J_initial[I]\r\n                else:\r\n                    return m.dTJdtheta[I, J][N] == m.varTime[I, J]*((((m.Fhot[I, J][N]*(m.T_H[J]-m.TJvar[I, J][N]))+(m.Fcold[I, J][N]*(m.T_C[J]-m.TJvar[I, J][N])))/(m.v_J[J]))+((m.ua[J]*(m.TRvar[I, J][N]-m.TJvar[I, J][N]))/(m.v_J[J]*m.rho_J[J]*m.c_J[J])))\r\n            m.c_dTJdtheta[I, J] = pe.Constraint(m.N[I, J], rule=_dTJdtheta)\r\n            setattr(m, 'c_dTJdtheta_(%s,%s)' % (I, J), m.c_dTJdtheta[I, J])\r\n\r\n            # Constraints when finishing reaction tasks\r\n\r\n            # Final concentration constraint\r\n            def _finalCon(m, N, Q):\r\n                if N == m.N[I, J].last():\r\n                    return m.Cvar[I, J][N, Q] == m.C_final[I, Q]\r\n                else:\r\n                    return pe.Constraint.Skip\r\n            m.finalCon[I, J] = pe.Constraint(\r\n                m.N[I, J], m.Q_balance[I], rule=_finalCon)\r\n            setattr(m, 'finalCon_(%s,%s)' % (I, J), m.finalCon[I, J])\r\n\r\n            # Final temperature constraints\r\n\r\n            def _finalTemp(m, N):\r\n                if N == m.N[I, J].last():\r\n                    return m.TRvar[I, J][N] <= m.T_R_final[I]\r\n                else:\r\n                    return pe.Constraint.Skip\r\n            m.finalTemp[I, J] = pe.Constraint(m.N[I, J], rule=_finalTemp)\r\n            setattr(m, 'finalTemp_(%s,%s)' % (I, J), m.finalTemp[I, J])\r\n\r\n           # Integrals for cost calculation\r\n            def _Integral_hot_bounds(m, N):\r\n                return (0, m.F_max[J]*m.maxTau[I, J]*m.delta)\r\n            m.Integral_hot[I, J] = pe.Var(m.N[I, J], within=pe.NonNegativeReals, initialize=0,\r\n                                          bounds=_Integral_hot_bounds, doc='Integral of F_hot evaluated at every point [m^3]')\r\n            setattr(m, 'Integral_hot_%s_%s' % (I, J), m.Integral_hot[I, J])\r\n\r\n            def _Integral_cold_bounds(m, N):\r\n                return (0, m.F_max[J]*m.maxTau[I, J]*m.delta)\r\n            m.Integral_cold[I, J] = pe.Var(m.N[I, J], within=pe.NonNegativeReals, initialize=0,\r\n                                           bounds=_Integral_cold_bounds, doc='Integral of F_cold evaluated at every point [m^3]')\r\n            setattr(m, 'Integral_cold_%s_%s' % (I, J), m.Integral_cold[I, J])\r\n\r\n            m.dIntegral_hotdtheta[I, J] = dae.DerivativeVar(\r\n                m.Integral_hot[I, J], withrespectto=m.N[I, J], doc='Derivative of hot integral')\r\n            setattr(m, 'dIntegral_hotdtheta_(%s,%s)' %\r\n                    (I, J), m.dIntegral_hotdtheta[I, J])\r\n            m.dIntegral_colddtheta[I, J] = dae.DerivativeVar(\r\n                m.Integral_cold[I, J], withrespectto=m.N[I, J], doc='Derivative of cold integral')\r\n            setattr(m, 'dIntegral_colddtheta_(%s,%s)' %\r\n                    (I, J), m.dIntegral_colddtheta[I, J])\r\n\r\n            def _c_dIntegral_hotdtheta(m, N):\r\n                if N == m.N[I, J].first():\r\n                    return m.Integral_hot[I, J][N] == 0\r\n                else:\r\n                    return m.dIntegral_hotdtheta[I, J][N] == m.varTime[I, J]*m.Fhot[I, J][N]\r\n            m.c_dIntegral_hotdtheta[I, J] = pe.Constraint(\r\n                m.N[I, J], rule=_c_dIntegral_hotdtheta)\r\n            setattr(m, 'c_dIntegral_hotdtheta_(%s,%s)' %\r\n                    (I, J), m.c_dIntegral_hotdtheta[I, J])\r\n\r\n            def _c_dIntegral_colddtheta(m, N):\r\n                if N == m.N[I, J].first():\r\n                    return m.Integral_cold[I, J][N] == 0\r\n                else:\r\n                    return m.dIntegral_colddtheta[I, J][N] == m.varTime[I, J]*m.Fcold[I, J][N]\r\n            m.c_dIntegral_colddtheta[I, J] = pe.Constraint(\r\n                m.N[I, J], rule=_c_dIntegral_colddtheta)\r\n            setattr(m, 'c_dIntegral_colddtheta_(%s,%s)' %\r\n                    (I, J), m.c_dIntegral_colddtheta[I, J])\r\n\r\n    # # -------Discretization---------------------------------------------------\r\n    # Constant control actions\r\n    m.Constant_control1 = {}\r\n    m.Constant_control2 = {}\r\n    keep_constant_Fhot = 3  # Keep Fhot constant every three discretization points\r\n    keep_constant_Fcold = 3  # Keep Fcold constant every three discretization points\r\n\r\n    # dae.finite_difference is also possible\r\n    discretizer = pe.TransformationFactory('dae.collocation')\r\n\r\n    for I in m.I_reactions:\r\n        for J in m.J_reactors:\r\n            discretizer.apply_to(\r\n                m, nfe=10, ncp=3, wrt=m.N[I, J], scheme='LAGRANGE-RADAU')\r\n\r\n            # ------Constant control\r\n    for I in m.I_reactions:\r\n        for J in m.J_reactors:\r\n            def _Constant_control1(m, N):\r\n                if (N != m.N[I, J].first() and (m.N[I, J].ord(N)-1) % keep_constant_Fhot != 0) or (N == m.N[I, J].last()):\r\n                    return m.Fhot[I, J][N] == m.Fhot[I, J][m.N[I, J].prev(N)]\r\n                else:\r\n                    return pe.Constraint.Skip\r\n            m.Constant_control1[I, J] = pe.Constraint(\r\n                m.N[I, J], rule=_Constant_control1, doc='Constant control action every keep_constant_Fhot discrete points and the last one')\r\n            setattr(m, 'Constant_control1_(%s,%s)' %\r\n                    (I, J), m.Constant_control1[I, J])\r\n\r\n            def _Constant_control2(m, N):\r\n                if (N != m.N[I, J].first() and (m.N[I, J].ord(N)-1) % keep_constant_Fcold != 0) or (N == m.N[I, J].last()):\r\n                    return m.Fcold[I, J][N] == m.Fcold[I, J][m.N[I, J].prev(N)]\r\n                else:\r\n                    return pe.Constraint.Skip\r\n            m.Constant_control2[I, J] = pe.Constraint(\r\n                m.N[I, J], rule=_Constant_control2, doc='Constant control action every keep_constant_Fcold discrete points and the last one')\r\n            setattr(m, 'Constant_control2_(%s,%s)' %\r\n                    (I, J), m.Constant_control2[I, J])\r\n\r\n    # # -------Reformulation----------------------------------------------------\r\n    def _I_J(m):\r\n        return ((I, J) for I in m.I for J in m.J if m.I_i_j_prod[I, J] == 1)\r\n    m.I_J = pe.Set(dimen=2, initialize=_I_J, doc='task-unit nodes')\r\n    # m.I_J.display()\r\n\r\n    def _lastN(m, I, J):\r\n        if I in m.I_reactions and J in m.J_reactors:\r\n            # TODO: Note that I am using the minimum, or I can use Tau, but I would have to incorporate this within the disjunction.\r\n            return math.floor((m.T.__len__()-1)/m.minTau[I, J])\r\n        else:\r\n            return math.floor((m.T.__len__()-1)/pe.value(m.tau[I, J]))\r\n    m.lastN = pe.Param(m.I_J, initialize=_lastN,\r\n                       doc='last element for subsets of ordered set')\r\n    # m.lastN.display()\r\n\r\n    def _Nref_bounds(m, I, J):\r\n        return (0, m.lastN[I, J])\r\n    m.Nref = pe.Var(m.I_J, within=pe.Integers, bounds=_Nref_bounds,\r\n                    doc='reformulation variables from 0 to lastN')\r\n\r\n    def _X_Z_relation(m, I, J):\r\n        return sum(m.X[I, J, T] for T in m.T) == m.Nref[I, J]\r\n    m.X_Z_relation = pe.Constraint(\r\n        m.I_J, rule=_X_Z_relation, doc='constraint that specifies the relationship between Integer and binary variables')\r\n\r\n    # # ----------Objective function----------------------------------------------\r\n    def _obj(m):\r\n        return (\r\n            # TPC: Fixed costs for all unit-tasks\r\n            sum(sum(sum(m.fixed_cost[I, J]*m.X[I, J, T]\r\n                for J in m.J) for I in m.I) for T in m.T)\r\n            # TPC: Variable cost for unit-tasks that do not consider dynamics\r\n            + sum(sum(sum(m.variable_cost[I, J]*m.B[I, J, T]\r\n                  for J in m.J_noDynamics) for I in m.I_noDynamics) for T in m.T)\r\n            + sum(sum(sum(m.X[I, J, T]*(m.hot_cost*m.Integral_hot[I, J][m.N[I, J].last()] + m.cold_cost*m.Integral_cold[I, J][m.N[I, J].last()])\r\n                  for T in m.T) for I in m.I_reactions)for J in m.J_reactors)  # TPC: Variable cost for unit-tasks that do consider dynamics\r\n            + sum(m.raw_cost[K]*(m.S0[K]-m.S[K, m.lastT])\r\n                  for K in m.K_inputs)  # TMC: Total material cost\r\n            # SALES: Revenue form selling products\r\n            - sum(m.revenue[K]*m.S[K, m.lastT] for K in m.K_products)\r\n        )/100\r\n    m.obj = pe.Objective(rule=_obj, sense=pe.minimize)\r\n\r\n    return m\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    #--- model\r\n    m = scheduling_and_control()\r\n    # --- Solver declaration\r\n    minlp_solver = 'dicopt'\r\n    nlp_solver = 'conopt4'\r\n    sub_options = {'add_options': ['GAMS_MODEL.optfile = 1;', 'option optcr=0;\\n', 'option optca=0;\\n', '\\n',\r\n                                   '$onecho > dicopt.opt \\n', 'nlpsolver '+nlp_solver+'\\n', 'stop 1 \\n', 'maxcycles 2000 \\n', '$offecho \\n']}\r\n\r\n    # --Transformation step\r\n    pe.TransformationFactory('core.logical_to_linear').apply_to(m)\r\n    transformation_string = 'gdp.hull'\r\n    pe.TransformationFactory(transformation_string).apply_to(m)\r\n\r\n    # --minlp options\r\n    minlp_options = {}\r\n    minlp_options['add_options'] = sub_options.get('add_options', [])\r\n    minlp_options['add_options'].append('option reslim=1000;')\r\n    minlp_options['add_options'].append('option optcr=0;')\r\n\r\n    # --Solve\r\n    solvername = 'gams'\r\n    opt = SolverFactory(solvername, solver=minlp_solver)\r\n    m.results = opt.solve(m, tee=True, **minlp_options)\r\n\r\n    # --pyomo objective function\r\n    print('Objective value PYOMO: ', str(pe.value(m.obj)))\r\n    # --pyomo objective function (from variable values)\r\n    TPC1 = sum(sum(sum(m.fixed_cost[I, J]*pe.value(m.X[I, J, T])\r\n               for J in m.J)for I in m.I)for T in m.T)\r\n    TPC2 = sum(sum(sum(m.variable_cost[I, J]*pe.value(m.B[I, J, T])\r\n               for J in m.J_noDynamics) for I in m.I_noDynamics) for T in m.T)\r\n    TPC3 = sum(sum(sum(pe.value(m.X[I, J, T])*(m.hot_cost*pe.value(m.Integral_hot[I, J][m.N[I, J].last()]) + m.cold_cost *\r\n               pe.value(m.Integral_cold[I, J][m.N[I, J].last()])) for T in m.T) for I in m.I_reactions)for J in m.J_reactors)\r\n    TMC = sum(m.raw_cost[K]*(m.S0[K]-pe.value(m.S[K, m.lastT]))\r\n              for K in m.K_inputs)\r\n    SALES = sum(m.revenue[K]*pe.value(m.S[K, m.lastT]) for K in m.K_products)\r\n    OBJVAL = (TPC1+TPC2+TPC3+TMC-SALES)/100\r\n    print('Objective value PYOMO (from variables):', str(OBJVAL))\r\n\r\n\r\n```\r\n\r\n### Error Message\r\n\r\nThere is no error message, but the objective obtained by GAMS (-8.37) differs from the one reported by pyomo (-12.37). \r\n```console\r\n$ # \r\n--- DICOPT: Best integer solution found: -8.370436\r\n--- Reading solution for model GAMS_MODEL\r\n--- GDX Point C:\\Users\\dlinanro\\AppData\\Local\\Temp\\tmpq7nl_wsp\\GAMS_MODEL_p.gdx\r\n--- Executing after solve: elapsed 0:00:19.932\r\n--- model.gms(17936) 8 Mb\r\n--- model.gms(17959) 8 Mb\r\n--- GDX File (execute_unload) C:\\Users\\dlinanro\\AppData\\Local\\Temp\\tmpq7nl_wsp\\results_s.gdx\r\n*** Status: Normal completion\r\n--- Job model.gms Stop 11/23/22 12:34:12 elapsed 0:00:19.934\r\nObjective value PYOMO:  -12.37043586559782\r\nObjective value PYOMO (from variables): -12.37043586559782\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: Pyomo 6.4.2, GAMS 37.1.0\r\nPython version: 3.10.6\r\nOperating system: Windows 10\r\nHow Pyomo was installed (PyPI, conda, source): conda\r\nSolver (if applicable):\r\n\r\n\r\n### Additional information\r\n\r\nI think the problem is not related to the recent GAMS-pyomo issues, because I am using an older GAMS version. Note that I was able to reproduce the situation from another computer using:\r\n\r\nPyomo version: Pyomo 6.2, GAMS 34.3.0\r\nPython version: 3.8.5\r\nOperating system: Linux 5.4.72-microsoft-standard-WSL2\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable):\r\n\r\nPlease contact me if additional info is required\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2623/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2621", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2621/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2621/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2621/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2621", "id": 1459926070, "node_id": "I_kwDOA5FfHs5XBLQ2", "number": 2621, "title": "error in recuperated results from mindtpy", "user": {"login": "Layebuniv", "id": 79048847, "node_id": "MDQ6VXNlcjc5MDQ4ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/79048847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Layebuniv", "html_url": "https://github.com/Layebuniv", "followers_url": "https://api.github.com/users/Layebuniv/followers", "following_url": "https://api.github.com/users/Layebuniv/following{/other_user}", "gists_url": "https://api.github.com/users/Layebuniv/gists{/gist_id}", "starred_url": "https://api.github.com/users/Layebuniv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Layebuniv/subscriptions", "organizations_url": "https://api.github.com/users/Layebuniv/orgs", "repos_url": "https://api.github.com/users/Layebuniv/repos", "events_url": "https://api.github.com/users/Layebuniv/events{/privacy}", "received_events_url": "https://api.github.com/users/Layebuniv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-11-22T13:58:00Z", "updated_at": "2022-11-23T18:32:54Z", "closed_at": "2022-11-23T18:32:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nI have coded the pressure veessel problem using pyomo. the results obtain are not in the right order, k1, and k2 are Integer \r\nx1: 7.0\r\nx2: 0.4375\r\nx3: 13.0\r\nx4: 0.8125\r\nk1: 42.09844611396906\r\nk2: 176.63658709460654\r\n\r\nthe right order for the solution\r\nk1: 7.0\r\nx1: 0.4375\r\nk2: 13.0\r\nx2: 0.8125\r\nx3: 42.09844611396906\r\nx4: 176.63658709460654\r\n\r\n### Steps to reproduce the issue\r\n\r\n\r\n\r\n```console\r\n$ command1 [options]\r\n$ command2 [options]\r\n...\r\n```\r\n\r\n```\r\n# example.py\r\nimport pyomo.environ\r\n...# Pressure Vessel Design Problem with pyomo and integer constraints\r\n# abdesslem Layeb\r\nfrom pyomo.environ import *\r\nimport math\r\n\r\nm = ConcreteModel()\r\nm.x1 = Var(bounds=(0,99),initialize=0.0)\r\nm.x2 = Var(bounds=(0,99),initialize=0.0,)\r\nm.x3 = Var(bounds=(10,200),initialize=20.0)\r\nm.x4 = Var(bounds=(10,200),initialize=20.0)\r\nm.k1 = Var(domain=PositiveIntegers,initialize=1) # i have added  k1 and k2 to force x1 nad x2 to pultiple of 0.0625\r\nm.k2 = Var(domain=PositiveIntegers,initialize=1)\r\n\r\n\r\nm.c1 = Constraint(expr=-m.x1+0.0625*m.k1==0) # x1 is multiple of 0.0625\r\nm.c2 = Constraint(expr=-m.x2+0.0625*m.k2==0)  # x2 is multiple of 0.0625\r\nm.c3 = Constraint(expr=-m.x1+0.0193*m.x3<=0)\r\nm.c4 = Constraint(expr=-m.x2+0.00954*m.x3<=0) \r\nm.c5 = Constraint(expr=-m.x4-240<=0)\r\nm.c6 = Constraint(expr=-math.pi*m.x3**2 *m.x4 - 4/3*math.pi*m.x3**3 + 1296000<=0)\r\ndef funobj(m):\r\n    return ((0.6224*m.x1*m.x3*m.x4)+(1.7781*m.x2*m.x3**2) + (3.1661*m.x1**2*m.x4)+(19.84*m.x1**2*m.x3))\r\n   \r\n\r\n\r\nm.Obj=Objective(rule=funobj,sense=minimize) # Objective\r\n\r\nsolver = SolverFactory('mindtpy')\r\nresult=solver.solve(m,\r\n                tee=True)\r\n# solver = SolverFactory('mindtpy').solve(m,\r\n#                                    strategy='OA',\r\n#                                    time_limit=3600,\r\n#                                    mip_solver='cplex',\r\n#                                    mip_solver_args=dict(solver='cplex', warmstart=True),\r\n#                                    nlp_solver='ipopt',\r\n#                                    tee=True)\r\n\r\n\r\nprint()\r\nprint('*** Solution *** :')\r\nprint('fonction objectif:', value(m.Obj))\r\nprint('x1:', value(m.x1))\r\nprint('x2:', value(m.x2))\r\nprint('x3:', value(m.x3))\r\nprint('x4:', value(m.x4))\r\nprint('k1:', value(m.k1))\r\nprint('k2:', value(m.k2))\r\n```\r\n\r\n### Error Message\r\n\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\n$ # Output message here, including entire stack trace, if available\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version:\r\nPython version:\r\nOperating system:\r\nHow Pyomo was installed (PyPI, conda, source):\r\nSolver (if applicable):\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2621/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2613", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2613/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2613/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2613/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2613", "id": 1457090493, "node_id": "I_kwDOA5FfHs5W2W-9", "number": 2613, "title": "Warmstart broken for MOSEK>=10", "user": {"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-11-20T23:34:13Z", "updated_at": "2022-12-05T20:45:38Z", "closed_at": "2022-12-05T20:45:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Summary\r\n\r\nIt appears that warmstart is partially broken on MOSEK 10.  The example below was pulled from `pyomo/solvers/tests/models/MIQP_simple.py`.  While it worked in MOSEK 8 / 9, it is failing in MOSEK 10.\r\n\r\nAs the assertion is on the C side, this error is untrappable and kills the entire Python interpreter.\r\n\r\n@Utkarsh-Detha, can you provide more insight on what may be happening?\r\n\r\n### Steps to reproduce the issue\r\n\r\n```python\r\nfrom pyomo.environ import *\r\n\r\nmodel = ConcreteModel()\r\n\r\nmodel.a = Param(initialize=1.0)\r\nmodel.x = Var(within=NonNegativeReals, initialize=1)\r\nmodel.y = Var(within=Binary, initialize=1)\r\n\r\nmodel.obj = Objective(expr=model.x**2 + 3.0*model.y**2)\r\nmodel.c1 = Constraint(expr=model.a <= model.y)\r\nmodel.c2 = Constraint(expr=(2.0, model.x/model.a - model.y, 10))\r\n\r\nsolver = SolverFactory('mosek_direct').solve(\r\n    model, warmstart=True, load_solutions=False)\r\n```\r\n\r\n### Error Message\r\n\r\n```\r\nMOSEK fatal error stoptask\r\nVersion : 10.0.28\r\nFile    : src/mosek/mosekqo.c\r\nLine    : 5104\r\nMsg     : Assertion failed\r\nMOSEK fatal error stopenv\r\nVersion : 10.0.28\r\nPlatform: Linux/64-X86\r\nFile    : src/mosek/mosekqo.c\r\nLine    : 5104\r\nMsg     : Assertion failed\r\nSegmentation fault (core dumped)\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.3.dev0\r\nPython version: 3.7\r\nOperating system: Linux\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable): MOSEK 10.0.27 and 10.0.28\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2613/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2609", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2609/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2609/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2609/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2609", "id": 1452180184, "node_id": "I_kwDOA5FfHs5WjoLY", "number": 2609, "title": "Broken link on pyomo website", "user": {"login": "ckaldemeyer", "id": 12557363, "node_id": "MDQ6VXNlcjEyNTU3MzYz", "avatar_url": "https://avatars.githubusercontent.com/u/12557363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ckaldemeyer", "html_url": "https://github.com/ckaldemeyer", "followers_url": "https://api.github.com/users/ckaldemeyer/followers", "following_url": "https://api.github.com/users/ckaldemeyer/following{/other_user}", "gists_url": "https://api.github.com/users/ckaldemeyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/ckaldemeyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ckaldemeyer/subscriptions", "organizations_url": "https://api.github.com/users/ckaldemeyer/orgs", "repos_url": "https://api.github.com/users/ckaldemeyer/repos", "events_url": "https://api.github.com/users/ckaldemeyer/events{/privacy}", "received_events_url": "https://api.github.com/users/ckaldemeyer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-11-16T19:45:50Z", "updated_at": "2022-11-17T16:23:28Z", "closed_at": "2022-11-17T07:03:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nour project \"Open Energy Modelling Framework (oemof)\" is linked on your website but the URL has changed:  http://www.pyomo.org/impact\r\n\r\nCould you change the URL to www.oemof.org?\r\n\r\nBest wishes and thanks for creating pyomo,\r\nCord", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2609/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2604", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2604/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2604/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2604/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2604", "id": 1444416888, "node_id": "I_kwDOA5FfHs5WGA14", "number": 2604, "title": "Unable to run precompiled `Highs` executable with Pyomo 6.4.3.dev0", "user": {"login": "alejandro-yousef", "id": 93203189, "node_id": "U_kgDOBY4q9Q", "avatar_url": "https://avatars.githubusercontent.com/u/93203189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alejandro-yousef", "html_url": "https://github.com/alejandro-yousef", "followers_url": "https://api.github.com/users/alejandro-yousef/followers", "following_url": "https://api.github.com/users/alejandro-yousef/following{/other_user}", "gists_url": "https://api.github.com/users/alejandro-yousef/gists{/gist_id}", "starred_url": "https://api.github.com/users/alejandro-yousef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alejandro-yousef/subscriptions", "organizations_url": "https://api.github.com/users/alejandro-yousef/orgs", "repos_url": "https://api.github.com/users/alejandro-yousef/repos", "events_url": "https://api.github.com/users/alejandro-yousef/events{/privacy}", "received_events_url": "https://api.github.com/users/alejandro-yousef/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-11-10T19:01:55Z", "updated_at": "2022-11-28T02:51:08Z", "closed_at": "2022-11-28T02:51:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\nI know it may be too soon and I should wait for the official release but maybe it is useful to report it...\r\n\r\nI tried to run Highs with Pyomo 6.4.3.dev0 (from source) having previously installed the precompiled executable from https://github.com/JuliaBinaryWrappers/HiGHS_jll.jl/releases without success \r\n\r\nAnyway thank you for supporting Highs, I'm looking forward for the next release :)\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```python\r\nimport pyomo.environ as pe\r\n\r\nopt_solver = pe.SolverFactory(\"highs\")\r\nopt_solver.solve(model)\r\n```\r\n\r\n### Error Message\r\n\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\nERROR:   Error parsing options: Option 'A' does not exist\r\nERROR: Solver (asl) returned non-zero return code (4294967295)\r\nERROR: See the solver log above for diagnostic information.\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.3.dev0\r\nPython version: 3.9\r\nOperating system: Windows 10\r\nHow Pyomo was installed (PyPI, conda, source): Source\r\nSolver (if applicable): Highs\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2604/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2600", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2600/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2600/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2600/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2600", "id": 1437955175, "node_id": "I_kwDOA5FfHs5VtXRn", "number": 2600, "title": "Unable to import pyomo.environ on python 3.11", "user": {"login": "trigaut", "id": 7863528, "node_id": "MDQ6VXNlcjc4NjM1Mjg=", "avatar_url": "https://avatars.githubusercontent.com/u/7863528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trigaut", "html_url": "https://github.com/trigaut", "followers_url": "https://api.github.com/users/trigaut/followers", "following_url": "https://api.github.com/users/trigaut/following{/other_user}", "gists_url": "https://api.github.com/users/trigaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/trigaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trigaut/subscriptions", "organizations_url": "https://api.github.com/users/trigaut/orgs", "repos_url": "https://api.github.com/users/trigaut/repos", "events_url": "https://api.github.com/users/trigaut/events{/privacy}", "received_events_url": "https://api.github.com/users/trigaut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-07T08:23:00Z", "updated_at": "2022-11-07T15:25:27Z", "closed_at": "2022-11-07T15:25:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nWith pyomo 6.4.2 on python 3.11 importing pyomo.environ raises an error.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```console\r\nimport pyomo.environ as pyo\r\n```\r\n\r\n### Error Message\r\n\r\n```console\r\npyomo\\core\\base\\component.py\", line 471, in __getstate__\r\n    state[key] = val\r\n    ~~~~~^^^^^\r\nTypeError: 'tuple' object does not support item assignment\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.2\r\nPython version: 3.11\r\nOperating system: Windows 10\r\nHow Pyomo was installed: Pypi", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2600/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2598", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2598/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2598/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2598/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2598", "id": 1437131032, "node_id": "I_kwDOA5FfHs5VqOEY", "number": 2598, "title": "Import pyomo.environ fails", "user": {"login": "GianmarcoAndreana", "id": 42800762, "node_id": "MDQ6VXNlcjQyODAwNzYy", "avatar_url": "https://avatars.githubusercontent.com/u/42800762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GianmarcoAndreana", "html_url": "https://github.com/GianmarcoAndreana", "followers_url": "https://api.github.com/users/GianmarcoAndreana/followers", "following_url": "https://api.github.com/users/GianmarcoAndreana/following{/other_user}", "gists_url": "https://api.github.com/users/GianmarcoAndreana/gists{/gist_id}", "starred_url": "https://api.github.com/users/GianmarcoAndreana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GianmarcoAndreana/subscriptions", "organizations_url": "https://api.github.com/users/GianmarcoAndreana/orgs", "repos_url": "https://api.github.com/users/GianmarcoAndreana/repos", "events_url": "https://api.github.com/users/GianmarcoAndreana/events{/privacy}", "received_events_url": "https://api.github.com/users/GianmarcoAndreana/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-05T18:03:40Z", "updated_at": "2022-11-05T21:31:14Z", "closed_at": "2022-11-05T21:31:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.11\r\nOS: Windows\r\nPyomo: 6.4.2\r\n\r\nHow to replicate issue:\r\n`import pyomo.environ as pyo`\r\n\r\nOutput of error message below\r\n________________________________________________________________________\r\nTypeError                                 Traceback (most recent call last)\r\nCell In [19], line 1\r\n----> 1 import pyomo.environ as pyo\r\n      2 import numpy as np\r\n      3 import pandas as pd\r\n\r\nFile c:\\Users\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pyomo\\environ\\__init__.py:79\r\n     75         pkg = _sys.modules[pname]\r\n     76         pkg.load()\r\n---> 79 _import_packages()\r\n     81 #\r\n     82 # Expose the symbols from pyomo.core\r\n     83 #\r\n     84 from pyomo.dataportal import DataPortal\r\n\r\nFile c:\\Users\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pyomo\\environ\\__init__.py:61, in _import_packages()\r\n     59 pname = _package + '.plugins'\r\n     60 try:\r\n---> 61     _do_import(pname)\r\n     62 except ImportError:\r\n     63     exctype, err, tb = _sys.exc_info()  # BUG?\r\n\r\nFile c:\\Users\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pyomo\\environ\\__init__.py:16, in _do_import(pkg_name)\r\n     15 def _do_import(pkg_name):\r\n...\r\n--> 471             state[key] = val\r\n    472 else:\r\n    473     state = dict(self.__dict__)\r\n\r\nTypeError: 'tuple' object does not support item assignment", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2598/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2586", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2586/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2586/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2586/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2586", "id": 1425567608, "node_id": "I_kwDOA5FfHs5U-G94", "number": 2586, "title": "Pyomo: a bug in how MindtPy is setting the termination_condition in the results object", "user": {"login": "guanghuidatafuelx", "id": 109567901, "node_id": "U_kgDOBoffnQ", "avatar_url": "https://avatars.githubusercontent.com/u/109567901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guanghuidatafuelx", "html_url": "https://github.com/guanghuidatafuelx", "followers_url": "https://api.github.com/users/guanghuidatafuelx/followers", "following_url": "https://api.github.com/users/guanghuidatafuelx/following{/other_user}", "gists_url": "https://api.github.com/users/guanghuidatafuelx/gists{/gist_id}", "starred_url": "https://api.github.com/users/guanghuidatafuelx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guanghuidatafuelx/subscriptions", "organizations_url": "https://api.github.com/users/guanghuidatafuelx/orgs", "repos_url": "https://api.github.com/users/guanghuidatafuelx/repos", "events_url": "https://api.github.com/users/guanghuidatafuelx/events{/privacy}", "received_events_url": "https://api.github.com/users/guanghuidatafuelx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-10-27T12:37:35Z", "updated_at": "2022-11-12T02:36:27Z", "closed_at": "2022-11-12T02:36:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran a simple problem: Objective is Max exp(x[0]+x[1]) Constraints are x[0]+x[1]>=5, 0<=x[0]<=2, 0 <=x[1]<=2. x[0] and x[1] are integers. It is supposed to be infeasible because x[0]+x[1] <=4. But the solver.status =ok and solver.termination_condition = feasible. variables x[0], x[1] and objective contain None. \r\n\r\nBelow is the Python test code\r\n\r\n\r\n\r\nimport pandas as pd\r\nimport numpy as np\r\n\r\nimport pyomo.environ as pe \r\nfrom pyomo.opt import SolverStatus, TerminationCondition\r\n\r\n\r\nmodel = pe.ConcreteModel(name=\"Pyomo Test Optimization\")\r\n\r\nmodel.x = pe.Var( [0, 1], within=pe.NonNegativeIntegers, bounds= (0, 2) )\r\n\r\nmodel.objective = pe.Objective(expr=pe.exp(model.x[0] +model.x[1]), sense= pe.maximize)\r\n\r\nmodel.Constraint_Budget_lb= pe.Constraint(expr= model.x[0]+model.x[1] >= 5  ) \r\n\r\n\r\n\r\nmodel.pprint()\r\n\r\nresults=pe.SolverFactory('mindtpy').solve(model)\r\n \r\nprint()\r\nprint(\"Results=\", results)\r\n\r\n\r\nstatus= results.solver.termination_condition\r\n\r\n\r\nprint(\"############################## Status ############################\")\r\nprint()\r\nprint( \"results.solver.status =\", results.solver.status)\r\nprint(\"results.solver.termination_condition =\", results.solver.termination_condition )\r\nprint(\"SolverStatus.warning =\", SolverStatus.warning)\r\n\r\nprint()\r\n\r\nprint(\"Solution:\")\r\nprint()\r\n\r\n\r\nprint( \"pe.value(model.objective)=\",  pe.value(model.objective) )\r\nprint( \"Decision variable x =\", [model.x[0].value, model.x[1].value ] )\r\n\r\nprint(\"################################################################\")\r\n\r\n\r\n\r\n\r\nBelow is the output I observed. Why is it that results.solver.termination_condition = feasible while the solver identified \"MindtPy exiting due to MILP main problem infeasibility\"?\r\n\r\nI tried to change model.x[0]+model.x[1] >= 5 to model.x[0]+model.x[1] >= 4. It was able to find optimal solution. So the question is the wrong flags for results.solver.status and results.solver.termination_condition.\r\n\r\n\r\n1 Set Declarations\r\n    x_index : Size=1, Index=None, Ordered=Insertion\r\n        Key  : Dimen : Domain : Size : Members\r\n        None :     1 :    Any :    2 : {0, 1}\r\n\r\n1 Var Declarations\r\n    x : Size=2, Index=x_index\r\n        Key : Lower : Value : Upper : Fixed : Stale : Domain\r\n          0 :     0 :  None :     2 : False :  True : NonNegativeIntegers\r\n          1 :     0 :  None :     2 : False :  True : NonNegativeIntegers\r\n\r\n1 Objective Declarations\r\n    objective : Size=1, Index=None, Active=True\r\n        Key  : Active : Sense    : Expression\r\n        None :   True : maximize : exp(x[0] + x[1])\r\n\r\n1 Constraint Declarations\r\n    Constraint_Budget_lb : Size=1, Index=None, Active=True\r\n        Key  : Lower : Body        : Upper : Active\r\n        None :   5.0 : x[0] + x[1] :  +Inf :   True\r\n\r\n4 Declarations: x_index x objective Constraint_Budget_lb\r\n---------------------------------------------------------------------------------------------\r\n              Mixed-Integer Nonlinear Decomposition Toolbox in Pyomo (MindtPy)               \r\n---------------------------------------------------------------------------------------------\r\nFor more information, please visit https://pyomo.readthedocs.io/en/stable/contributed_packages/mindtpy.html\r\nOriginal model has 1 constraints (0 nonlinear) and 0 disjunctions, with 2 variables, of which 0 are binary, 2 are integer, and 0 are continuous.\r\nObjective is nonlinear. Moving it to constraint set.\r\nrNLP is the initial strategy being used.\r\n\r\n ===============================================================================================\r\n Iteration | Subproblem Type | Objective Value | Primal Bound |   Dual Bound |   Gap   | Time(s)\r\n\r\nInitial relaxed NLP problem is infeasible. Problem may be infeasible.\r\nMILP main problem is infeasible. Problem may have no more feasible binary configurations.\r\nMindtPy initialization may have generated poor quality cuts.\r\nMindtPy exiting due to MILP main problem infeasibility.\r\n ===============================================================================================\r\n Primal integral          :       nan \r\n Dual integral            :       nan \r\n Primal-dual gap integral :       nan \r\n\r\nResults= \r\nProblem: \r\n- Name: Pyomo Test Optimization\r\n  Lower bound: -inf\r\n  Upper bound: inf\r\n  Number of objectives: 1\r\n  Number of constraints: 1\r\n  Number of variables: 2\r\n  Number of binary variables: 0\r\n  Number of integer variables: 2\r\n  Number of continuous variables: 0\r\n  Number of nonzeros: None\r\n  Sense: maximize\r\n  Number of disjunctions: 0\r\nSolver: \r\n- Name: MindtPyOA\r\n  Status: ok\r\n  Message: None\r\n  User time: None\r\n  System time: None\r\n  Wallclock time: None\r\n  Termination condition: feasible\r\n  Termination message: None\r\n  Timing: initialization: 0.050159021047875285\r\nmain loop: 0.024332273053005338\r\nmain: 0.02267576800659299\r\nmain_timer_start_time: 771443.781539982\r\ntotal: 0.08562357001937926\r\n  Iterations: 1\r\n  Num infeasible nlp subproblem: 0\r\n  Best solution found time: None\r\n  Primal integral: nan\r\n  Dual integral: nan\r\n  Primal dual gap integral: nan\r\n\r\n############################## Status ############################\r\n\r\nresults.solver.status = ok\r\nresults.solver.termination_condition = feasible\r\nSolverStatus.warning = warning\r\n\r\nSolution:\r\n\r\nERROR: evaluating object as numeric value: x[0]\r\n        (object: <class 'pyomo.core.base.var._GeneralVarData'>)\r\n    No value for uninitialized NumericValue object x[0]\r\nERROR: evaluating object as numeric value: objective\r\n        (object: <class 'pyomo.core.base.objective.ScalarObjective'>)\r\n    No value for uninitialized NumericValue object x[0]\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2586/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2577", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2577/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2577/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2577/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2577", "id": 1422308227, "node_id": "I_kwDOA5FfHs5UxrOD", "number": 2577, "title": "Piecewise runtime extremely inefficient", "user": {"login": "limkhaixi", "id": 63392948, "node_id": "MDQ6VXNlcjYzMzkyOTQ4", "avatar_url": "https://avatars.githubusercontent.com/u/63392948?v=4", "gravatar_id": "", "url": "https://api.github.com/users/limkhaixi", "html_url": "https://github.com/limkhaixi", "followers_url": "https://api.github.com/users/limkhaixi/followers", "following_url": "https://api.github.com/users/limkhaixi/following{/other_user}", "gists_url": "https://api.github.com/users/limkhaixi/gists{/gist_id}", "starred_url": "https://api.github.com/users/limkhaixi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/limkhaixi/subscriptions", "organizations_url": "https://api.github.com/users/limkhaixi/orgs", "repos_url": "https://api.github.com/users/limkhaixi/repos", "events_url": "https://api.github.com/users/limkhaixi/events{/privacy}", "received_events_url": "https://api.github.com/users/limkhaixi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-10-25T11:26:42Z", "updated_at": "2022-10-26T20:50:29Z", "closed_at": "2022-10-26T20:50:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nI am running a pyomo model that requires converting a variable matrix containing NonNegativeIntergers to Binary values. I have opted to use Pyomo's Piecewise function in order to do so, however the runtime is extremely long. \r\n\r\nMy goal is to match RL to Coachee, while optimising to minimise RL to Coach interactions.\r\n\r\nI have created 3 decision variables here, whereby:\r\n1. model.coachee_rl: matches RL to Cocahee\r\n2. model.rl_coach: contains information on RL to Coach interactions\r\n3. model.rl_coach_binary: converts model.rl_coach into binary.\r\n\r\nMy problem is 3, where I have to use a Piecewise function. I have downsized my data significantly to realize that it is computationally inefficient. On my original dataset, it took more than 10 hours to solve the model. Without the Piecewise constraint, it usually takes less than a minute.  I have experimented with varying data sizes and I have validated that it is the issue of the Piecewise constraint.\r\n\r\nI have chosen DCC as my piecewise representation to use as it is the fastest among all others, but it is still not a scalable solution.\r\n\r\nIs this expected behaviour? Is there an easy fix that I am missing?\r\n\r\nUnfortunately I have been cracking my head for a week and am out of ideas on how to convert a NonNegative matrix into binary if I can't use the Piecewise function effectively, so any tips would also be much appreciated.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\nfrom pyomo.core import *\r\nfrom pyomo.environ import *\r\n\r\nmodel = ConcreteModel() \r\n\r\nmodel.rl = Set(initialize=['RL1', 'RL2', 'RL3', 'RL4', 'RL5'])\r\nmodel.coach = Set(initialize=['Coach1', 'Coach2', 'Coach3', 'Coach4', 'Coach5', \"Coach6\"])\r\nmodel.coachee = Set(initialize=['Coachee1', 'Coachee2', 'Coachee3', 'Coachee4', 'Coachee5', 'Coachee6', 'Coachee7', 'Coachee8', 'Coachee9'])\r\n\r\nsample = {\r\n    ('Coach1', 'Coachee1'): 1,\r\n    ('Coach1', 'Coachee2'): 0,\r\n    ('Coach1', 'Coachee3'): 0,\r\n    ('Coach1', 'Coachee4'): 0,\r\n    ('Coach1', 'Coachee5'): 0,\r\n    ('Coach1', 'Coachee6'): 0,\r\n    ('Coach1', 'Coachee7'): 1,\r\n    ('Coach1', 'Coachee8'): 0,\r\n    ('Coach1', 'Coachee9'): 0,\r\n    ('Coach2', 'Coachee1'): 0,\r\n    ('Coach2', 'Coachee2'): 1,\r\n    ('Coach2', 'Coachee3'): 0,\r\n    ('Coach2', 'Coachee4'): 0,\r\n    ('Coach2', 'Coachee5'): 0,\r\n    ('Coach2', 'Coachee6'): 1,\r\n    ('Coach2', 'Coachee7'): 0,\r\n    ('Coach2', 'Coachee8'): 0,\r\n    ('Coach2', 'Coachee9'): 0,\r\n    ('Coach3', 'Coachee1'): 0,\r\n    ('Coach3', 'Coachee2'): 0,\r\n    ('Coach3', 'Coachee3'): 1,\r\n    ('Coach3', 'Coachee4'): 0,\r\n    ('Coach3', 'Coachee5'): 1,\r\n    ('Coach3', 'Coachee6'): 0,\r\n    ('Coach3', 'Coachee7'): 0,\r\n    ('Coach3', 'Coachee8'): 0,\r\n    ('Coach3', 'Coachee9'): 0,\r\n    ('Coach4', 'Coachee1'): 0,\r\n    ('Coach4', 'Coachee2'): 0,\r\n    ('Coach4', 'Coachee3'): 0,\r\n    ('Coach4', 'Coachee4'): 0,\r\n    ('Coach4', 'Coachee5'): 0,\r\n    ('Coach4', 'Coachee6'): 0,\r\n    ('Coach4', 'Coachee7'): 0,\r\n    ('Coach4', 'Coachee8'): 1,\r\n    ('Coach4', 'Coachee9'): 0,\r\n    ('Coach5', 'Coachee1'): 0,\r\n    ('Coach5', 'Coachee2'): 0,\r\n    ('Coach5', 'Coachee3'): 0,\r\n    ('Coach5', 'Coachee4'): 0,\r\n    ('Coach5', 'Coachee5'): 0,\r\n    ('Coach5', 'Coachee6'): 0,\r\n    ('Coach5', 'Coachee7'): 0,\r\n    ('Coach5', 'Coachee8'): 0,\r\n    ('Coach5', 'Coachee9'): 1,\r\n    ('Coach6', 'Coachee1'): 0,\r\n    ('Coach6', 'Coachee2'): 0,\r\n    ('Coach6', 'Coachee3'): 0,\r\n    ('Coach6', 'Coachee4'): 1,\r\n    ('Coach6', 'Coachee5'): 0,\r\n    ('Coach6', 'Coachee6'): 0,\r\n    ('Coach6', 'Coachee7'): 0,\r\n    ('Coach6', 'Coachee8'): 0,\r\n    ('Coach6', 'Coachee9'): 0\r\n }\r\n\r\nmodel.coachee_coach = Param(model.coach, model.coachee, initialize = sample)\r\nmodel.coachee_rl = Var(model.rl, model.coachee, domain = Binary) \r\nmodel.rl_coach = Var(model.rl, model.coach, domain=NonNegativeIntegers, initialize=0)\r\nmodel.rl_coach_binary = Var(model.rl, model.coach, domain = Binary, initialize=0) \r\n\r\nDOMAIN_PTS = [0,0.5,0.5,2]\r\nRANGE_PTS  = [0,0,1,1]\r\nmodel.eq1 = Piecewise(\r\n      model.rl, model.coach,\r\n      model.rl_coach_binary, model.rl_coach,\r\n      pw_pts=DOMAIN_PTS,\r\n      pw_repn='CC',\r\n      pw_constr_type = 'EQ',\r\n      f_rule = RANGE_PTS,\r\n      unbounded_domain_var = True)\r\n\r\ndef rule2(model, coachee):\r\n    return sum(model.coachee_rl[rl, coachee] for rl in model.rl) == 1\r\nmodel.eq2 = Constraint(model.coachee, rule = rule2, doc = 'Each coachee must have exactly one RL.')\r\n\r\ndef rule3(model, rl, coach):\r\n    return model.rl_coach[rl, coach] == sum ( model.coachee_rl[rl, coachee] * model.coachee_coach[coach, coachee] for coachee in model.coachee)\r\nmodel.eq3 = Constraint(model.rl, model.coach, rule = rule3, doc = \"Helper variable to perform matmul of coachee_rl matrix and coachee_coach matrix\")\r\n\r\ndef objective_rule(model):\r\n    return sum(model.rl_coach_binary[rl,coach] for rl in model.rl for coach in model.coach)\r\nmodel.objective = Objective(rule = objective_rule, sense=minimize)\r\n\r\nsolverpath_exe = r\"..\\glpk-4.65\\w64\\glpsol.exe\"\r\nresults = SolverFactory('glpk', executable=solverpath_exe).solve(model)\r\n\r\nresults.write()\r\n```\r\n\r\n### Error Message\r\n\r\nThe example above takes 3m33s to complete. If I reduce the size of model.rl by 1, eg:\r\n\r\n```\r\nmodel.rl = Set(initialize=['RL1', 'RL2', 'RL3', 'RL4'])\r\n```\r\n\r\nruntime goes down to 6s.\r\n\r\n### Information on your system\r\n\r\nPyomo version:\r\nPython version: 3.10\r\nOperating system: Windows\r\nHow Pyomo was installed (PyPI, conda, source): PyPI\r\nSolver (if applicable): glpk\r\n\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2577/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2572", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2572/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2572/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2572/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2572", "id": 1419020101, "node_id": "I_kwDOA5FfHs5UlIdF", "number": 2572, "title": "GAMS Shell Solver `logfile` Option Behavior Differs from that of Other Solvers", "user": {"login": "shermanjasonaf", "id": 29937582, "node_id": "MDQ6VXNlcjI5OTM3NTgy", "avatar_url": "https://avatars.githubusercontent.com/u/29937582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shermanjasonaf", "html_url": "https://github.com/shermanjasonaf", "followers_url": "https://api.github.com/users/shermanjasonaf/followers", "following_url": "https://api.github.com/users/shermanjasonaf/following{/other_user}", "gists_url": "https://api.github.com/users/shermanjasonaf/gists{/gist_id}", "starred_url": "https://api.github.com/users/shermanjasonaf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shermanjasonaf/subscriptions", "organizations_url": "https://api.github.com/users/shermanjasonaf/orgs", "repos_url": "https://api.github.com/users/shermanjasonaf/repos", "events_url": "https://api.github.com/users/shermanjasonaf/events{/privacy}", "received_events_url": "https://api.github.com/users/shermanjasonaf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-10-22T01:30:38Z", "updated_at": "2022-10-26T17:44:37Z", "closed_at": "2022-10-26T17:44:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\nThe `solve` method for a typical Pyomo solver interface provides an optional argument `logfile`, meant to be a desired path to which to write the solver log. A handful of interfaces (such as those of BARON and IPOPT) write the logfile to the specified path. However, the GAMS shell solver interface writes this logfile to the temporary working directory used by the solver. The temporary directory is removed unless `keepfiles=True`. \r\n\r\n<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `pyomo solve` to optimize a model and ...\" -->\r\n\r\n### Steps to reproduce the issue\r\n1. Install local BARON, IPOPT, and GAMS executables.\r\n2. Simple working example script:\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```python\r\nimport pyomo.environ as pyo\r\n\r\n\r\nm = pyo.ConcreteModel()\r\n\r\nm.S = pyo.Set(initialize=list(range(5)))\r\nm.x = pyo.Var(m.S, bounds=(0, 1), initialize=1)\r\nm.obj = pyo.Objective(expr=2000 * pyo.summation(m.x), sense=pyo.maximize)\r\n\r\nipopt = pyo.SolverFactory(\"ipopt\")\r\nbaron = pyo.SolverFactory(\"baron\")\r\ngams = pyo.SolverFactory(\"gams:ipopt\")\r\n\r\n# ipopt and baron solve. logfiles written to working directory\r\nipopt.solve(m, logfile=\"ipopt_log.log\")\r\nbaron.solve(m, logfile=\"baron_log.log\")\r\n\r\n# logfile written to automatically generated\r\n# temporary working directory, along with other\r\n# output files. since keepfiles=False, the directory\r\n# is deleted.\r\ngams.solve(\r\n    m,\r\n    keepfiles=False,\r\n    logfile=\"gams_logfile.txt\",\r\n    tmpdir=None,\r\n)\r\n\r\n# logfile written to automatically generated\r\n# temporary working directory, along with other\r\n# output files. path to the temporary directory\r\n# is displayed in console output\r\ngams.solve(\r\n    m,\r\n    keepfiles=True,\r\n    logfile=\"gams_logfile.txt\",\r\n    tmpdir=None,\r\n)\r\n\r\n# logfile written to automatically generated\r\n# temporary working directory, along with other\r\n# output files. since keepfiles=False, the directory\r\n# is deleted\r\ngams.solve(\r\n    m,\r\n    keepfiles=False,\r\n    logfile=\"gams_logfile.txt\",\r\n    tmpdir=\"./example_dir\",\r\n)\r\n\r\n# logfile written to specified\r\n# temporary working directory, along with other\r\n# output files. path to the specified directory\r\n# is displayed in console output\r\ngams.solve(\r\n    m,\r\n    keepfiles=True,\r\n    logfile=\"gams_logfile.txt\",\r\n    tmpdir=\"./example_dir\",\r\n)\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.3dev0\r\nPython version: 3.9.13\r\nOperating system: Ubuntu 20.04\r\nHow Pyomo was installed (PyPI, conda, source): source (main branch)\r\nSolver (if applicable): GAMS\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2572/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2571", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2571/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2571/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2571/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2571", "id": 1418682661, "node_id": "I_kwDOA5FfHs5Uj2El", "number": 2571, "title": "GAMS Solver Results Parser Exception for Objective Values Over `1E4`", "user": {"login": "shermanjasonaf", "id": 29937582, "node_id": "MDQ6VXNlcjI5OTM3NTgy", "avatar_url": "https://avatars.githubusercontent.com/u/29937582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shermanjasonaf", "html_url": "https://github.com/shermanjasonaf", "followers_url": "https://api.github.com/users/shermanjasonaf/followers", "following_url": "https://api.github.com/users/shermanjasonaf/following{/other_user}", "gists_url": "https://api.github.com/users/shermanjasonaf/gists{/gist_id}", "starred_url": "https://api.github.com/users/shermanjasonaf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shermanjasonaf/subscriptions", "organizations_url": "https://api.github.com/users/shermanjasonaf/orgs", "repos_url": "https://api.github.com/users/shermanjasonaf/repos", "events_url": "https://api.github.com/users/shermanjasonaf/events{/privacy}", "received_events_url": "https://api.github.com/users/shermanjasonaf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-10-21T18:00:01Z", "updated_at": "2022-10-26T14:56:28Z", "closed_at": "2022-10-26T14:56:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\nThe `solve` method of the Pyomo GAMS shell solver interface may encounter an `IndexError` when parsing the `GAMS_OBJECTIVE` line of the `results.dat` file output by GAMS to obtain a final model solution. This occurs in the event that the final objective value is no less than `1E4`. Whether this exception is encountered is also contingent on the version of the GAMS executable.\r\n\r\n### Steps to Reproduce the issue\r\n1. Install GAMS (39.1.0 or later) according to the [GAMS documentation](https://www.gams.com/download/).\r\n2. Invoke Pyomo GAMS solver interface on a model with optimal value not exceeding 10,000. Simple working example:\r\n```python\r\nimport pyomo.environ as pyo\r\n\r\nm = pyo.ConcreteModel()\r\n\r\nm.S = pyo.Set(initialize=list(range(5)))\r\nm.x = pyo.Var(m.S, bounds=(0, 1), initialize=1)\r\nm.obj = pyo.Objective(expr=2000 * pyo.summation(m.x), sense=pyo.maximize)\r\n\r\nsolver = pyo.SolverFactory(\"gams:conopt\")\r\nres = solver.solve(m)\r\n```\r\n\r\n### Error Message\r\n\r\nI encounter this exception with a GAMS 39.1.0 executable:\r\n\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\nTraceback (most recent call last):\r\n  File \"/home/jasherma/Documents/vim_example/test_solvers/test_gams_large_lp.py\", line 23, in <module>\r\n    res = solver.solve(\r\n  File \"/home/jasherma/Documents/cmu/phd-project/pyomo_repo/pyomo/pyomo/solvers/plugins/solvers/GAMS.py\", line 853, in solve\r\n    model_soln, stat_vars = self._parse_dat_results(\r\n  File \"/home/jasherma/Documents/cmu/phd-project/pyomo_repo/pyomo/pyomo/solvers/plugins/solvers/GAMS.py\", line 1235, in _parse_dat_results\r\n    model_soln[items[0]] = (items[1], items[2])\r\nIndexError: list index out of range\r\n\r\n```\r\nWith GAMS 35.2, I encounter no exception, and the solver successfully returns an optimal solution.\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.3dev0 (main), with GAMS 39.1.0 executable academic license\r\nPython version: 3.9.13\r\nOperating system: Ubuntu 20.04\r\nHow Pyomo was installed (PyPI, conda, source): source (main branch)\r\nSolver (if applicable): Any GAMS solver (linked with GAMS 39.1.0 and 35.2.0 executables, try other versions as necessary). Problem holds for CONOPT, IPOPT, KNITRO, CPLEX. Appears to be independent of the solver called by GAMS.\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2571/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2563", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2563/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2563/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2563/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2563", "id": 1405824706, "node_id": "I_kwDOA5FfHs5Tyy7C", "number": 2563, "title": "SolverStatus.error exception: Can't access solver results", "user": {"login": "fleimgruber", "id": 7400038, "node_id": "MDQ6VXNlcjc0MDAwMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/7400038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fleimgruber", "html_url": "https://github.com/fleimgruber", "followers_url": "https://api.github.com/users/fleimgruber/followers", "following_url": "https://api.github.com/users/fleimgruber/following{/other_user}", "gists_url": "https://api.github.com/users/fleimgruber/gists{/gist_id}", "starred_url": "https://api.github.com/users/fleimgruber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fleimgruber/subscriptions", "organizations_url": "https://api.github.com/users/fleimgruber/orgs", "repos_url": "https://api.github.com/users/fleimgruber/repos", "events_url": "https://api.github.com/users/fleimgruber/events{/privacy}", "received_events_url": "https://api.github.com/users/fleimgruber/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-10-12T08:50:15Z", "updated_at": "2022-10-25T19:31:41Z", "closed_at": "2022-10-25T19:31:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\n`SolverStatus.error` leads to exception instead of showing up in `results.solver.status`.\r\n\r\n### Steps to reproduce the issue\r\n\r\nSolve a model leading e.g. to the CPLEX error [1256](https://www.ibm.com/docs/en/cofz/12.8.0?topic=api-cpxerr-singular) during `opt.solve()` .\r\n\r\n```python\r\nresults = opt.solve()\r\n_handle(results.solver.status)  # Not reached\r\n```\r\n\r\n### Error Message\r\n\r\n```console\r\n  File \"/.../lib/python3.10/site-packages/pyomo/opt/base/solvers.py\", line 627, in solve\r\n    _model.solutions.load_from(\r\n  File \"/.../lib/python3.10/site-packages/pyomo/core/base/PyomoModel.py\", line 226, in load_from\r\n    raise ValueError(\"Cannot load a SolverResults object \"\r\nValueError: Cannot load a SolverResults object with bad status: error\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.2\r\nPython version: 3.10\r\nOperating system: GNU/Linux\r\nHow Pyomo was installed (PyPI, conda, source): conda\r\nSolver (if applicable): CPLEX\r\n\r\n### Additional information\r\n\r\nWhy is `SolverStatus.error` handled differently than `SolverStatus.aborted`? https://github.com/Pyomo/pyomo/blob/6fd5b8aa94b21bfe3290bdb019b33b822d51b681/pyomo/core/base/PyomoModel.py#L226\r\n\r\nIt could issue a warning similar to the \"aborted\" case, e.g.: \"Loading a SolverResults object with an 'error' status, containing no solution\" which would enable the calling code to continue with solver results handling according to application logic.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2563/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2562", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2562/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2562/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2562/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2562", "id": 1403255289, "node_id": "I_kwDOA5FfHs5To_n5", "number": 2562, "title": "Could not write legal LP file", "user": {"login": "Betristor", "id": 55777837, "node_id": "MDQ6VXNlcjU1Nzc3ODM3", "avatar_url": "https://avatars.githubusercontent.com/u/55777837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Betristor", "html_url": "https://github.com/Betristor", "followers_url": "https://api.github.com/users/Betristor/followers", "following_url": "https://api.github.com/users/Betristor/following{/other_user}", "gists_url": "https://api.github.com/users/Betristor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Betristor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Betristor/subscriptions", "organizations_url": "https://api.github.com/users/Betristor/orgs", "repos_url": "https://api.github.com/users/Betristor/repos", "events_url": "https://api.github.com/users/Betristor/events{/privacy}", "received_events_url": "https://api.github.com/users/Betristor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-10-10T14:18:06Z", "updated_at": "2022-10-11T06:15:12Z", "closed_at": "2022-10-11T06:15:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\nPyomo could not solve the linear model and report bug as follows:\r\n```\r\n  File \"pyomo/repn/plugins/cpxlp.pyx\", line 158, in pyomo.repn.plugins.cpxlp.ProblemWriter_cpxlp.__call__\r\n  File \"pyomo/repn/plugins/cpxlp.pyx\", line 159, in pyomo.repn.plugins.cpxlp.ProblemWriter_cpxlp.__call__\r\n  File \"pyomo/repn/plugins/cpxlp.pyx\", line 160, in pyomo.repn.plugins.cpxlp.ProblemWriter_cpxlp.__call__\r\n  File \"pyomo/repn/plugins/cpxlp.pyx\", line 532, in pyomo.repn.plugins.cpxlp.ProblemWriter_cpxlp._print_model_LP\r\nRuntimeError: Cannot write legal LP file.  Objective 'objective' has nonlinear terms that are not quadratic.\r\n```\r\n\r\nMain problem may be related to cpxlp.pyx file.\r\n<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `pyomo solve` to optimize a model and ...\" -->\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n### Error Message\r\n\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\nTraceback (most recent call last):\r\n  File \"/Users/xxx/Documents/GitHub/Adaptive-clustering-for-ESOM/src/main.py\", line 90, in <module>\r\n    m = solve(m, config)\r\n  File \"/Users/xxx/Documents/GitHub/Adaptive-clustering-for-ESOM/src/solve_model.py\", line 13, in solve\r\n    opt.solve(m)\r\n  File \"/Users/xxx/miniforge3/envs/eso/lib/python3.8/site-packages/pyomo/opt/base/solvers.py\", line 570, in solve\r\n    self._presolve(*args, **kwds)\r\n  File \"/Users/xxx/miniforge3/envs/eso/lib/python3.8/site-packages/pyomo/solvers/plugins/solvers/GUROBI.py\", line 234, in _presolve\r\n    ILMLicensedSystemCallSolver._presolve(self, *args, **kwds)\r\n  File \"/Users/xxx/miniforge3/envs/eso/lib/python3.8/site-packages/pyomo/opt/solver/shellcmd.py\", line 209, in _presolve\r\n    OptSolver._presolve(self, *args, **kwds)\r\n  File \"/Users/xxx/miniforge3/envs/eso/lib/python3.8/site-packages/pyomo/opt/base/solvers.py\", line 667, in _presolve\r\n    self._convert_problem(args,\r\n  File \"/Users/xxx/miniforge3/envs/eso/lib/python3.8/site-packages/pyomo/opt/base/solvers.py\", line 718, in _convert_problem\r\n    return convert_problem(args,\r\n  File \"/Users/xxx/miniforge3/envs/eso/lib/python3.8/site-packages/pyomo/opt/base/convert.py\", line 101, in convert_problem\r\n    problem_files, symbol_map = converter.apply(*tmp, **tmpkw)\r\n  File \"/Users/xxx/miniforge3/envs/eso/lib/python3.8/site-packages/pyomo/solvers/plugins/converter/model.py\", line 78, in apply\r\n    instance.write(\r\n  File \"/Users/xxx/miniforge3/envs/eso/lib/python3.8/site-packages/pyomo/core/base/block.py\", line 1976, in write\r\n    (filename, smap) = problem_writer(self,\r\n  File \"pyomo/repn/plugins/cpxlp.pyx\", line 158, in pyomo.repn.plugins.cpxlp.ProblemWriter_cpxlp.__call__\r\n  File \"pyomo/repn/plugins/cpxlp.pyx\", line 159, in pyomo.repn.plugins.cpxlp.ProblemWriter_cpxlp.__call__\r\n  File \"pyomo/repn/plugins/cpxlp.pyx\", line 160, in pyomo.repn.plugins.cpxlp.ProblemWriter_cpxlp.__call__\r\n  File \"pyomo/repn/plugins/cpxlp.pyx\", line 532, in pyomo.repn.plugins.cpxlp.ProblemWriter_cpxlp._print_model_LP\r\nRuntimeError: Cannot write legal LP file.  Objective 'objective' has nonlinear terms that are not quadratic.\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.2\r\nPython version: 3.8.13\r\nOperating system: MacOS Monterey, M1 Pro\r\nHow Pyomo was installed (PyPI, conda, source): conda\r\nSolver (if applicable): gurobi, cbc, clp, highs, ipopt, glpk are all tested. Gurobi, cbc, glpk reports the same error and clp didn't find the temporary model file. So maybe the underlying logic is the same. \r\n\r\n\r\n### Additional information\r\nSame problem on stackoverflow.\r\nhttps://stackoverflow.com/questions/61217721/runtimeerror-cannot-write-legal-lp-file-objective-maximum-profit-has-nonline/74016061#74016061\r\nAnd like my post on this problem, neither my code did have some nonlinear terms nor pyomo has somthing wrong.\r\nI will have another guy check my code as well, but at the same time, I report the problem for insurance.\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2562/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2548", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2548/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2548/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2548/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2548", "id": 1387707065, "node_id": "I_kwDOA5FfHs5Strq5", "number": 2548, "title": "Unallowed character (@) found in CPLEX solution file path/name", "user": {"login": "fleimgruber", "id": 7400038, "node_id": "MDQ6VXNlcjc0MDAwMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/7400038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fleimgruber", "html_url": "https://github.com/fleimgruber", "followers_url": "https://api.github.com/users/fleimgruber/followers", "following_url": "https://api.github.com/users/fleimgruber/following{/other_user}", "gists_url": "https://api.github.com/users/fleimgruber/gists{/gist_id}", "starred_url": "https://api.github.com/users/fleimgruber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fleimgruber/subscriptions", "organizations_url": "https://api.github.com/users/fleimgruber/orgs", "repos_url": "https://api.github.com/users/fleimgruber/repos", "events_url": "https://api.github.com/users/fleimgruber/events{/privacy}", "received_events_url": "https://api.github.com/users/fleimgruber/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mrmundt", "id": 55767766, "node_id": "MDQ6VXNlcjU1NzY3NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/55767766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrmundt", "html_url": "https://github.com/mrmundt", "followers_url": "https://api.github.com/users/mrmundt/followers", "following_url": "https://api.github.com/users/mrmundt/following{/other_user}", "gists_url": "https://api.github.com/users/mrmundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrmundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrmundt/subscriptions", "organizations_url": "https://api.github.com/users/mrmundt/orgs", "repos_url": "https://api.github.com/users/mrmundt/repos", "events_url": "https://api.github.com/users/mrmundt/events{/privacy}", "received_events_url": "https://api.github.com/users/mrmundt/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrmundt", "id": 55767766, "node_id": "MDQ6VXNlcjU1NzY3NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/55767766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrmundt", "html_url": "https://github.com/mrmundt", "followers_url": "https://api.github.com/users/mrmundt/followers", "following_url": "https://api.github.com/users/mrmundt/following{/other_user}", "gists_url": "https://api.github.com/users/mrmundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrmundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrmundt/subscriptions", "organizations_url": "https://api.github.com/users/mrmundt/orgs", "repos_url": "https://api.github.com/users/mrmundt/repos", "events_url": "https://api.github.com/users/mrmundt/events{/privacy}", "received_events_url": "https://api.github.com/users/mrmundt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-09-27T12:49:34Z", "updated_at": "2022-11-02T22:14:02Z", "closed_at": "2022-11-02T22:14:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nOn Linux, solving a model with CPLEX solver where the user has a name of the form `user@D01.arc.local` is not allowed.\r\n\r\n### Steps to reproduce the issue\r\n\r\nAs outlined in Summary above\r\n\r\n### Error Message\r\n\r\n```console\r\nTraceback (most recent call last):\r\n  File \"/trinity/home/user/proj/src/model_concrete.py\", line 1603, in <module>\r\n    RESULTS = SOLVER.solve(MODEL, tee=True, logfile=\"solve.log\")\r\n  File \"/trinity/home/user/opt/miniconda3/envs/env/lib/python3.10/site-packages/pyomo/opt/base/solvers.py\", line 570, in solve\r\n    self._presolve(*args, **kwds)\r\n  File \"/trinity/home/user/opt/miniconda3/envs/env/lib/python3.10/site-packages/pyomo/solvers/plugins/solvers/CPLEX.py\", line 342, in _presolve\r\n    ILMLicensedSystemCallSolver._presolve(self, *args, **kwds)\r\n  File \"/trinity/home/user/opt/miniconda3/envs/env/lib/python3.10/site-packages/pyomo/opt/solver/shellcmd.py\", line 221, in _presolve\r\n    self._command = self.create_command_line(\r\n  File \"/trinity/home/user/opt/miniconda3/envs/env/lib/python3.10/site-packages/pyomo/solvers/plugins/solvers/CPLEX.py\", line 417, in create_command_line\r\n    self._soln_file = _validate_file_name(self, self._soln_file, \"solution\")\r\n  File \"/trinity/home/user/opt/miniconda3/envs/env/lib/python3.10/site-packages/pyomo/solvers/plugins/solvers/CPLEX.py\", line 53, in _validate_file_name\r\n    raise ValueError(\r\nValueError: Unallowed character (@) found in CPLEX solution file path/name.\r\n        For portability reasons, only [a-zA-Z0-9 ~:.-_/] are allowed.\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.2\r\nPython version: 3.10.4\r\nOperating system: x86_64 GNU/Linux\r\nHow Pyomo was installed (PyPI, conda, source): conda\r\nSolver (if applicable): CPLEX\r\n\r\n\r\n### Additional information\r\n\r\nManually adding \"@\" to the list of validation characters [here](https://github.com/Pyomo/pyomo/blob/3c50ee20e8d93f6803cbc960b194c0372b9fd207/pyomo/solvers/plugins/solvers/CPLEX.py#L69) makes the error go away.\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2548/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2544", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2544/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2544/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2544/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2544", "id": 1383502055, "node_id": "I_kwDOA5FfHs5SdpDn", "number": 2544, "title": "ValueError: No value for uninitialized NumericValue object a['12','55',0,0,'12','13']", "user": {"login": "xiyangcanyi", "id": 37542652, "node_id": "MDQ6VXNlcjM3NTQyNjUy", "avatar_url": "https://avatars.githubusercontent.com/u/37542652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiyangcanyi", "html_url": "https://github.com/xiyangcanyi", "followers_url": "https://api.github.com/users/xiyangcanyi/followers", "following_url": "https://api.github.com/users/xiyangcanyi/following{/other_user}", "gists_url": "https://api.github.com/users/xiyangcanyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiyangcanyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiyangcanyi/subscriptions", "organizations_url": "https://api.github.com/users/xiyangcanyi/orgs", "repos_url": "https://api.github.com/users/xiyangcanyi/repos", "events_url": "https://api.github.com/users/xiyangcanyi/events{/privacy}", "received_events_url": "https://api.github.com/users/xiyangcanyi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-09-23T09:03:12Z", "updated_at": "2022-10-16T21:05:48Z", "closed_at": "2022-10-16T21:05:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\n<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `pyomo solve` to optimize a model and ...\" -->\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```console\r\n$ command1 [options]\r\n$ command2 [options]\r\n...\r\n```\r\n\r\n```\r\n# example.py\r\nimport pyomo.environ\r\n...\r\n```\r\n\r\n### Error Message\r\n\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\n$ # Output message here, including entire stack trace, if available\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version:\r\nPython version:\r\nOperating system:\r\nHow Pyomo was installed (PyPI, conda, source):\r\nSolver (if applicable):\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n```\r\n#!/usr/bin/env python3\r\n# -*- coding: utf-8 -*-\r\n\r\nCreated on Siun Jan 27 16:44:41 2019\r\n@author: ali(zamaniali1995@gmail.com)\r\n\r\nfrom coopr.pyomo import *\r\nimport pyomo.environ as pyo\r\nimport time\r\n# import pyomo.environ as pyo\r\nfrom Given import InputConstants\r\nimport matplotlib.pyplot as plt\r\nfrom pyomo.environ import *\r\nimport cplex\r\n# Must be changed\r\nclass MILP_batch_model:\r\n    def __init__(self):\r\n        self.input_cons = InputConstants.Inputs()\r\n\r\n    def run(self, graph, chains, functions, k, alpha, user_num, batch_size):\r\n        start_time =time.time()\r\n        chains_sorted = []\r\n        batch_chains = []\r\n        cnt = 0\r\n        batch_num = 0\r\n        nodes_set = []\r\n        sources = []\r\n        destinations = []\r\n        for c in chains.chains_list:\r\n            for u in c.users:\r\n                chains_sorted.append([c, u, c.cpu_usage * c.tra, c.tra])\r\n                \r\n        chains_sorted.sort(key=lambda x: x[2], reverse=True)\r\n        chains_sorted.sort(key=lambda x: x[3], reverse=True)\r\n        links_num = 0\r\n        for c, u, _, _ in chains_sorted:\r\n            batch_chains.append([c.name, u])\r\n            sources.append(u[0])\r\n            destinations.append(u[1])\r\n            for p in graph.k_path(u[0], u[1], k):\r\n                nodes_set.extend(p)\r\n            cnt += 1\r\n            if cnt == batch_size or cnt == user_num or (batch_num == user_num // batch_size and cnt == user_num % batch_size):               \r\n                batch_num += 1\r\n                M = 100000\r\n                tmp = []\r\n                model = ConcreteModel()\r\n                model.k_path = graph.k_path\r\n                for (s_1, d_1) in zip(sources, destinations):\r\n                    tmp.append(len(model.k_path(s_1, d_1, k)))\r\n                model.P = range(max(tmp))\r\n                nodes_set = list(dict.fromkeys(nodes_set))\r\n                sources = list(dict.fromkeys(sources))\r\n                destinations = list(dict.fromkeys(destinations))       \r\n                                                                        \r\n        \r\n                ##########################################\r\n                # Define concrete model\r\n                ###########################################\r\n               # model = ConcreteModel()\r\n\r\n                ###########################################\r\n                # Sets\r\n                ###########################################\r\n                # Set of nodes: v\r\n                model.V = nodes_set\r\n                # Set of functions: F\r\n                model.F = range(functions.num())\r\n                # Set of chains: C\r\n                model.C = [c for c, _ in batch_chains]\r\n                model.C = list(dict.fromkeys(model.C))\r\n                # Set of sources: S\r\n                model.S = sources\r\n                # Set of distinations: D\r\n                model.D = destinations\r\n                # Set of K shortest paths: K_sd\r\n                #model.k_path = graph.k_path\r\n                # Set of k paths\r\n                #tmp = []\r\n                #for (s_1, d_1) in zip(model.S, model.D):\r\n                #    tmp.append(len(model.k_path(s_1, d_1, k)))\r\n                #model.P = range(max(tmp))\r\n                # Set of function of each chain\r\n                model.nc = {}\r\n                for c in model.C:\r\n                    model.nc[c] = chains.funs_num(c)\r\n                # cpus usage of each function\r\n                model.nf = []\r\n                for f in functions.functions_list.keys():\r\n                    model.nf.append(functions.cpu_usage(f))\r\n                # mem usage of each function\r\n                model.mf = []\r\n                for f in functions.functions_list.keys():\r\n                    model.mf.append(functions.mem_usage(f))\r\n                # Set of links\r\n                model.L = range(graph.links_num())\r\n                # Set of users\r\n                model.R = {}\r\n                for c, u in batch_chains:\r\n                    try:\r\n                        model.R[c].append(u) \r\n                    except:\r\n                        model.R[c] = []\r\n                        model.R[c].append(u)\r\n                # Set of IDs\r\n                flag = 0\r\n                model.phi = {}\r\n                for c in model.C:\r\n                    for (s, d) in model.R[c]:\r\n                        P = model.k_path(s, d, k)\r\n                        for p in range(len(P)):\r\n                            for l in model.L:\r\n                                flag = 0\r\n                                for n in range(len(P[p]) - 1):\r\n                                    if (model.k_path(s, d, k)[p][n], model.k_path(s, d, k)[p][n + 1])\\\r\n                                            == graph.link_list[l].name:\r\n                                        model.phi[(l, p, s, d)] = 1\r\n                                        flag = 1\r\n                                    elif flag == 0:\r\n                                        model.phi[(l, p, s, d)] = 0\r\n                model.I = {}\r\n                for c in model.C:\r\n                    for f_num, f_name in enumerate(functions.functions_list.keys()):\r\n                        for i in range(model.nc[c]):\r\n                            if chains.chains_list[chains.name_to_num(c)].fun[i] == f_name:\r\n                                model.I[(f_num, i, c)] = 1\r\n                            else:\r\n                                model.I[(f_num, i, c)] = 0\r\n                \r\n                ###########################################\r\n                # Variables\r\n                ###########################################\r\n                max_of_chain_function = max([model.nc[c] for c in model.C])\r\n                model.t = Var(within=pyo.NonNegativeReals)\r\n                model.t_prime = Var(within=pyo.NonNegativeReals)\r\n                # I use within=binary is replaced NoNnegative\r\n                model.a = Var(model.V, model.C, model.P, range(max_of_chain_function), model.S, model.D, within=pyo.Binary)\r\n                model.b = Var(model.P, model.C, model.S, model.D, within=pyo.Binary)\r\n                \r\n                ###########################################\r\n                # Objective function: min. t\r\n                ###########################################\r\n                model.obj = Objective(expr=alpha * model.t + (1 - alpha) * model.t_prime\r\n                                    , sense=minimize)\r\n\r\n                ###########################################\r\n                # Constraints\r\n                ##########################################\r\n                # 1st constraint\r\n                model.balance_CPU_cons = ConstraintList()\r\n                for v in model.V:\r\n                    v_num = graph.name_to_num_node(v)\r\n                    model.balance_CPU_cons.add(sum([model.a[v, c, p, i, s, d] *\r\n                                                    model.I[(f, i, c)] *\r\n                                                    model.nf[f] *\r\n                                                    chains.chains_list[chains.name_to_num(c)].tra /\r\n                                                    graph.node_list[v_num].cap_cpu\r\n                                                    for c in model.C\r\n                                                    for s, d in model.R[c]\r\n                                                    for p in model.P\r\n                                                    for i in range(model.nc[c])\r\n                                                    for f in model.F\r\n                                                    ]) +\r\n                                                    graph.node_list[v_num].cons_cpu\r\n                                                    <= model.t\r\n                                            )\r\n                \r\n                # 2nd constraint\r\n                model.node_CPU_cap_cons = ConstraintList()\r\n                model.node_CPU_cap_cons.add(model.t <= 1)\r\n                \r\n                # 3rd constraint\r\n                model.node_memory_cap_cons = ConstraintList()\r\n                for v in model.V:\r\n                    v_num = graph.name_to_num_node(v)\r\n                    model.node_memory_cap_cons.add(sum([model.a[v, c, p, i, s, d] *\r\n                                                        model.I[(f, i, c)] *\r\n                                                        model.mf[f] *\r\n                                                        chains.chains_list[chains.name_to_num(c)].tra /\r\n                                                        graph.node_list[v_num].cap_mem\r\n                                                        for c in model.C\r\n                                                        for (s, d) in model.R[c]\r\n                                                        for p in model.P\r\n                                                        for i in range(model.nc[c])\r\n                                                        for f in model.F\r\n                                                        ]) + \r\n                                                        graph.node_list[v_num].cons_mem\r\n                                                <=\r\n                                                1)\r\n\r\n                # 4th constraint\r\n                model.link_balance_cons = ConstraintList()\r\n                for l in model.L:\r\n                    model.link_balance_cons.add(sum([model.b[p, c, s, d] *\r\n                                                    model.phi[(l, p, s, d)] *\r\n                                                    chains.chains_list[chains.name_to_num(c)].tra /\r\n                                                    graph.link_list[l].ban\r\n                                                    for c in model.C\r\n                                                    for (s, d) in model.R[c]\r\n                                                    for p in range(len(model.k_path(s, d, k)))\r\n                                                    ])+\r\n                                                    graph.link_list[l].cons\r\n                                                <=\r\n                                                model.t_prime\r\n                                                )\r\n                # 5th constraint\r\n                model.link_cap_cons = ConstraintList()\r\n                model.link_cap_cons.add(model.t_prime <= 1)\r\n                \r\n                # 6th constraint\r\n                model.path_selection_cons = ConstraintList()\r\n                for c in model.C:\r\n                    for (s, d) in model.R[c]:\r\n                        model.path_selection_cons.add(sum([model.b[p, c, s, d]\r\n                                                        for p in range(len(model.k_path(s, d, k)))\r\n                                                        ]) == 1\r\n                                                    )\r\n                \r\n                # 7th constraint\r\n                model.satisfy_req_2_cons = ConstraintList()\r\n                for c in model.C:\r\n                    for (s, d) in model.R[c]:\r\n                        for p in range(len(model.k_path(s, d, k))):\r\n                            for i in range(model.nc[c]):\r\n\r\n                                model.satisfy_req_2_cons.add(sum([\r\n                                    model.a[v, c, p, i, s, d]\r\n                                    for v in model.V\r\n                                ])\r\n                                                            <=\r\n                                                            model.b[p, c, s, d]\r\n                                                            )\r\n\r\n                # 8th constraint\r\n                model.satisfy_req_3_cons = ConstraintList()\r\n                for c in model.C:\r\n                    for (s, d) in model.R[c]:\r\n                        P = model.k_path(s, d, k)\r\n                        for p in range(len(P)):\r\n                            for i in range(model.nc[c]):\r\n                                model.satisfy_req_3_cons.add(sum([\r\n                                    model.a[v, c, p, i, s, d]\r\n                                    for v in P[p]\r\n\r\n                                ])\r\n                                                            >=\r\n                                                            model.b[p, c, s, d]\r\n                                                            )\r\n                # 9th constraint:\r\n                model.seq_cons = ConstraintList()\r\n                for c in model.C:\r\n                    for (s, d) in model.R[c]:\r\n                        P = model.k_path(s, d, k)\r\n                        for p in range(len(P)):\r\n                            for i in range(model.nc[c] - 1):\r\n                                for v_num, v in enumerate(P[p]):\r\n                                    if v_num != 0:\r\n                                        model.seq_cons.add(sum([\r\n                                            model.a[v_1, c, p, i_1, s, d]\r\n                                            for v_1 in model.k_path(s, d, k)[p][: v_num]\r\n                                            for i_1 in range(i + 1, model.nc[c])\r\n                                        ])\r\n                                                        <=\r\n                                                        M * (2 - model.b[p, c, s, d] - model.a[v, c, p, i, s, d])\r\n                                                        )\r\n                opt = SolverFactory('cplex', executable=self.input_cons.path_cplex)\r\n                opt.options[\"threads\"] = self.input_cons.threads_num\r\n                opt.options['timelimit'] = 2000\r\n                opt.solve(model)\r\n                model.pprint()\r\n\r\n                node_cpu_cap = []\r\n                node_mem_cap = []\r\n                for v in model.V:\r\n                    v_num = graph.name_to_num_node(v)\r\n                    for c in model.C:\r\n                        for (s, d) in model.R[c]:\r\n                            for p in range(len(model.k_path(s, d, k))):\r\n                                for i in range(model.nc[c]):\r\n                                    for f in model.F:\r\n                                        graph.node_list[v_num].cons_cpu += \\\r\n                                            value(model.a[v, c, p, i, s, d] )* model.I[(f, i, c)] *model.nf[f] * chains.chains_list[chains.name_to_num(c)].tra/ graph.node_list[v_num].cap_cpu\r\n                                        graph.node_list[v_num].cons_mem += value(model.a[v, c, p, i, s, d]) * model.I[(f, i, c)]* model.mf[f] * chains.chains_list[chains.name_to_num(c)].tra/ graph.node_list[v_num].cap_mem\r\n\r\n                link_cap = []\r\n                for l in model.L:\r\n                    for c in model.C:\r\n                        for (s, d) in model.R[c]:\r\n                            for p in range(len(model.k_path(s, d, k))):\r\n                                graph.link_list[l].cons += value(model.b[p, c, s, d])* model.phi[(l, p, s, d)] * chains.chains_list[chains.name_to_num(c)].tra / graph.link_list[l].ban\r\n                                links_num += value(model.b[p, c, s, d])*model.phi[(l, p, s, d)]\r\n                                #*(len(model.k_path(s, d, k)[p])-1)\r\n                nodes_set = []\r\n                batch_chains = []\r\n                sources = []\r\n                destinations = []\r\n                cnt = 0\r\n    \r\n        end_time = time.time()\r\n        node_cpu_cap = []\r\n        node_mem_cap = []\r\n        for v in range(graph.nodes_num()):\r\n            node_cpu_cap.append(graph.node_list[v].cons_cpu * 100)\r\n            node_mem_cap.append(graph.node_list[v].cons_mem * 100)\r\n        \r\n        link_cap = []\r\n        for l in range(len(graph.link_list)):\r\n            link_cap.append(graph.link_list[l].cons * 100)\r\n        \r\n        print('MILP batch:', sum(node_cpu_cap))\r\n        return max(node_cpu_cap), sum(node_cpu_cap)/len(node_cpu_cap), max(link_cap), sum(link_cap)/len(link_cap), end_time - start_time, links_num\r\n\r\n            \r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2544/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2542", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2542/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2542/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2542/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2542", "id": 1381310357, "node_id": "I_kwDOA5FfHs5SVR-V", "number": 2542, "title": "Bug when using solve_strongly_connected_components", "user": {"login": "andrewlee94", "id": 16341343, "node_id": "MDQ6VXNlcjE2MzQxMzQz", "avatar_url": "https://avatars.githubusercontent.com/u/16341343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewlee94", "html_url": "https://github.com/andrewlee94", "followers_url": "https://api.github.com/users/andrewlee94/followers", "following_url": "https://api.github.com/users/andrewlee94/following{/other_user}", "gists_url": "https://api.github.com/users/andrewlee94/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewlee94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewlee94/subscriptions", "organizations_url": "https://api.github.com/users/andrewlee94/orgs", "repos_url": "https://api.github.com/users/andrewlee94/repos", "events_url": "https://api.github.com/users/andrewlee94/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewlee94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-09-21T18:11:21Z", "updated_at": "2022-10-21T14:57:07Z", "closed_at": "2022-10-21T14:57:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\nI have been attempting to apply the `solve_strongly_connected_components` method to the IDAES model libraries and have encountered a couple of bugs the underlying Pyomo code. The first issue that comes up appears to be a missing import in `pyomo/core/base/external.py`, however fixing this unearths a deeper issue.\r\n\r\n\r\n### Steps to reproduce the issue\r\n\r\nThe best replication I have is to run the IDAES test suite using the following branch: https://github.com/andrewlee94/idaes-pse/tree/bt_solver\r\n\r\nOne test that reproduces this error is:\r\n\r\n`pytest idaes/models/properties/modular_properties/examples/tests/test_CO2_bmimPF6_PR.py::TestFlashIntegration::test_initialize`\r\n\r\n### Error Message\r\n\r\nThe first bug lies in `external.py`, where it appears that the `value` method needs to be imported from `pyomo.core.expr.numvalue`\r\n\r\n```\r\n../../pyomo/pyomo/pyomo/core/base/external.py:214: in evaluate\r\n    args_ = [arg if arg.__class__ in native_types else value(arg)\r\n\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n>   args_ = [arg if arg.__class__ in native_types else value(arg) for arg in args]\r\nE   NameError: name 'value' is not defined\r\n\r\n../../pyomo/pyomo/pyomo/core/base/external.py:214: NameError\r\n```\r\n\r\nHowever, fixing this results in a second error from deeper in the code:\r\n\r\n```\r\nidaes/core/base/unit_model.py:527: in initialize\r\n    return solve_strongly_connected_components(\r\n../../pyomo/pyomo/pyomo/contrib/incidence_analysis/util.py:147: in solve_strongly_connected_components\r\n    results = calculate_variable_from_constraint(\r\n../../pyomo/pyomo/pyomo/util/calc_var_value.py:158: in calculate_variable_from_constraint\r\n    expr_deriv = differentiate(expr, wrt=variable,\r\n../../pyomo/pyomo/pyomo/core/expr/calculus/derivatives.py:116: in differentiate\r\n    res = sympy_diff(expr=expr, wrt=wrt, wrt_list=wrt_list)\r\n../../pyomo/pyomo/pyomo/core/expr/calculus/diff_with_sympy.py:47: in differentiate\r\n    objectMap, sympy_expr = sympyify_expression(expr)\r\n../../pyomo/pyomo/pyomo/core/expr/sympy_tools.py:215: in sympyify_expression\r\n    return object_map, visitor.walk_expression(expr)\r\n../../pyomo/pyomo/pyomo/core/expr/visitor.py:256: in walk_expression\r\n    result = self._process_node(root, RECURSION_LIMIT)\r\n../../pyomo/pyomo/pyomo/core/expr/visitor.py:455: in _process_node_bx\r\n    data.append(self._process_node(child, recursion_limit))\r\n../../pyomo/pyomo/pyomo/core/expr/visitor.py:455: in _process_node_bx\r\n    data.append(self._process_node(child, recursion_limit))\r\n../../pyomo/pyomo/pyomo/core/expr/visitor.py:455: in _process_node_bx\r\n    data.append(self._process_node(child, recursion_limit))\r\n../../pyomo/pyomo/pyomo/core/expr/visitor.py:455: in _process_node_bx\r\n    data.append(self._process_node(child, recursion_limit))\r\n../../pyomo/pyomo/pyomo/core/expr/visitor.py:455: in _process_node_bx\r\n    data.append(self._process_node(child, recursion_limit))\r\n../../pyomo/pyomo/pyomo/core/expr/visitor.py:455: in _process_node_bx\r\n    data.append(self._process_node(child, recursion_limit))\r\n../../pyomo/pyomo/pyomo/core/expr/visitor.py:466: in _process_node_bx\r\n    return self.exitNode(node, data)\r\n../../pyomo/pyomo/pyomo/core/expr/sympy_tools.py:152: in exitNode\r\n    return node._apply_operation(values)\r\n../../pyomo/pyomo/pyomo/core/expr/numeric_expr.py:650: in _apply_operation\r\n    return self._fcn.evaluate( result )\r\n../../pyomo/pyomo/pyomo/core/base/external.py:216: in evaluate\r\n    return self._evaluate(args_, None, 0)[0]\r\n../../pyomo/pyomo/pyomo/core/base/external.py:360: in _evaluate\r\n    arglist = _ARGLIST(args, fgh, fixed)\r\n../../pyomo/pyomo/pyomo/core/base/external.py:652: in __init__\r\n    self.ra = (c_double*nr)(*_reals)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nself = 0.120272355044943*x6*(0.6468651916804*x0*x5/x1 + 0.6468651916804*x2*x3/x4)/x7 - 1.0\r\n\r\n    def __float__(self):\r\n        # Don't bother testing if it's a number; if it's not this is going\r\n        # to fail, and if it is we still need to check that it evalf'ed to\r\n        # a number.\r\n        result = self.evalf()\r\n        if result.is_Number:\r\n            return float(result)\r\n        if result.is_number and result.as_real_imag()[1]:\r\n            raise TypeError(\"Cannot convert complex to float\")\r\n\r\n>       raise TypeError(\"Cannot convert expression to float\")\r\n\r\nE       TypeError: Cannot convert expression to float\r\n\r\n../../anaconda3/lib/python3.9/site-packages/sympy/core/expr.py:345: TypeError\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2542/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2529", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2529/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2529/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2529/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2529", "id": 1366367444, "node_id": "I_kwDOA5FfHs5RcRzU", "number": 2529, "title": "Pyomo DAE flatten ignores whether blocks are active", "user": {"login": "dallan-keylogic", "id": 88728506, "node_id": "MDQ6VXNlcjg4NzI4NTA2", "avatar_url": "https://avatars.githubusercontent.com/u/88728506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dallan-keylogic", "html_url": "https://github.com/dallan-keylogic", "followers_url": "https://api.github.com/users/dallan-keylogic/followers", "following_url": "https://api.github.com/users/dallan-keylogic/following{/other_user}", "gists_url": "https://api.github.com/users/dallan-keylogic/gists{/gist_id}", "starred_url": "https://api.github.com/users/dallan-keylogic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dallan-keylogic/subscriptions", "organizations_url": "https://api.github.com/users/dallan-keylogic/orgs", "repos_url": "https://api.github.com/users/dallan-keylogic/repos", "events_url": "https://api.github.com/users/dallan-keylogic/events{/privacy}", "received_events_url": "https://api.github.com/users/dallan-keylogic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 835396803, "node_id": "MDU6TGFiZWw4MzUzOTY4MDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.dae", "name": "pyomo.dae", "color": "209fbc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-09-08T13:45:08Z", "updated_at": "2023-02-15T16:05:52Z", "closed_at": "2023-02-15T16:05:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nIn July, I ran into unexpected behavior when the PETSc interface in IDAES uses `pyomo.dae.flatten` to create the block with variables/equations to be solved. It appears that the flattening process ignores whether the block it's aggregating variables from is active or not, and so variables and constraints from deactivated blocks end up being used in the problem because they are not individually deactivated.\r\n\r\n@jsiirola suggested the following fix, which has worked for my applications:\r\n\r\n```\r\ndiff --git a/pyomo/dae/flatten.py b/pyomo/dae/flatten.py\r\nindex 922ffa9..13f56ee 100644\r\n--- a/pyomo/dae/flatten.py\r\n+++ b/pyomo/dae/flatten.py\r\n@@ -305,7 +305,10 @@ def generate_sliced_components(b, index_stack, slice_, sets, ctype, index_map):\r\n                 if type(descend_data) is IndexedComponent_slice:\r\n                     try:\r\n                         # Attempt to find a data object matching this slice\r\n-                        descend_data = next(iter(descend_data))\r\n+                        _data = next(iter(descend_data))\r\n+                        while not _data.active:\r\n+                            _data = next(iter(descend_data))\r\n+                        descend_data = _data\r\n                     except StopIteration:\r\n                         # For this particular idx (and given indices), no\r\n                         # block data object exists to descend into.\r\n@@ -313,6 +316,8 @@ def generate_sliced_components(b, index_stack, slice_, sets, ctype, index_map):\r\n                         continue\r\n             else:\r\n                 descend_data = sub\r\n+                if not descend_data.active:\r\n+                    continue\r\n\r\n             # Recursively generate sliced components from this data object\r\n             for st, v in generate_sliced_components(\r\n```\r\n\r\nI didn't open an issue then, because I assumed our conversation meant it would be fixed without it, but it probably got forgotten about as soon as a more important issue came to the fore.\r\n\r\nEdit: Also, it would be good to make including inactive components an option. I can imagine contexts (like scaling methods) where including them would be the desired behavior.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2529/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2528", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2528/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2528/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2528/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2528", "id": 1364757664, "node_id": "I_kwDOA5FfHs5RWIyg", "number": 2528, "title": "ExternalFunction evaluate_fgh doesn't work correctly with string arguments", "user": {"login": "eslickj", "id": 16341333, "node_id": "MDQ6VXNlcjE2MzQxMzMz", "avatar_url": "https://avatars.githubusercontent.com/u/16341333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eslickj", "html_url": "https://github.com/eslickj", "followers_url": "https://api.github.com/users/eslickj/followers", "following_url": "https://api.github.com/users/eslickj/following{/other_user}", "gists_url": "https://api.github.com/users/eslickj/gists{/gist_id}", "starred_url": "https://api.github.com/users/eslickj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eslickj/subscriptions", "organizations_url": "https://api.github.com/users/eslickj/orgs", "repos_url": "https://api.github.com/users/eslickj/repos", "events_url": "https://api.github.com/users/eslickj/events{/privacy}", "received_events_url": "https://api.github.com/users/eslickj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-09-07T14:29:56Z", "updated_at": "2022-09-29T20:28:56Z", "closed_at": "2022-09-29T20:28:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nWhen you have an ExternalFunction that expects string arguments, the evaluate_fgh method includes the string arguments when counting how big the gradient and hessian arrays are. This means that you get the gradient and hessian but they are larger than they should be and padded with random junk from memory at the end.\r\n\r\n### Steps to reproduce the issue\r\n\r\nRun the example below (requires IDAES).  If you have an example function that uses string args that will work too. \r\n\r\n```\r\n# example.py\r\nimport pyomo.environ as pyo\r\nfrom idaes.models.properties.general_helmholtz.helmholtz_functions import (\r\n    add_helmholtz_external_functions,\r\n    HelmholtzParameterBlock,\r\n    HelmholtzThermoExpressions,\r\n    AmountBasis,\r\n)\r\n\r\nm = pyo.ConcreteModel()\r\nm.param_block = HelmholtzParameterBlock(\r\n    pure_component=\"r134a\", amount_basis=AmountBasis.MASS\r\n)\r\n\r\nte = HelmholtzThermoExpressions(m, m.param_block)\r\n\r\nadd_helmholtz_external_functions(m, \"tau_func\")\r\n\r\ny, g, h = m.tau_func.evaluate_fgh(args=(\"r134a\", 529.47, 100))\r\nprint(f\"T = {374.18/y}\")\r\nprint(g)\r\nprint(h)\r\n```\r\n\r\n### Error Message\r\n\r\nThere is no error message. \r\n\r\n### Information on your system\r\n\r\nPyomo version: Pyomo 6.4.2 (devel {typing-overload}) (CPython 3.10.4 on Darwin 21.6.0)\r\n\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2528/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2526", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2526/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2526/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2526/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2526", "id": 1363723368, "node_id": "I_kwDOA5FfHs5RSMRo", "number": 2526, "title": "GDPopt doesn't remove the dummy objective it adds when the model doesn't have any objectives", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-09-06T19:29:38Z", "updated_at": "2022-09-29T17:43:32Z", "closed_at": "2022-09-29T17:43:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nGDPopt adds a dummy objective (and issues a warning) if the model it's solving doesn't have an active objective. It then fails to remove it, so if you add one and then solve again, you trigger an error about there being multiple active objectives. \r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\nfrom pyomo.environ import *\r\nfrom pyomo.gdp import *\r\n\r\nm = ConcreteModel()\r\nm.x = Var(bounds=(0,10))\r\nm.disjunction = Disjunction(expr=[[m.x == 0], [m.x >= 5, m.x <= 7]])\r\n\r\nric = SolverFactory('gdpopt.ric')\r\n\r\nric.solve(m)\r\n\r\nm.obj = Objective(expr=m.x)\r\n\r\nric.solve(m)\r\n```\r\n\r\n### Error Message\r\n\r\n```\r\nWARNING: Model has no active objectives. Adding dummy objective.\r\nWARNING: Constant objective detected, replacing with a placeholder to prevent\r\n    solver failure.\r\nWARNING: Constant objective detected, replacing with a placeholder to prevent\r\n    solver failure.\r\nTraceback (most recent call last):\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/gdpopt/algorithm_base_class.py\", line 114, in solve\r\n    results = self._gather_problem_info_and_solve_non_gdps(\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/gdpopt/algorithm_base_class.py\", line 185, in _gather_problem_info_and_solve_non_gdps\r\n    self._create_pyomo_results_object_with_problem_info(model, config)\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/gdpopt/algorithm_base_class.py\", line 420, in _create_pyomo_results_object_with_problem_info\r\n    raise ValueError('Model has multiple active objectives.')\r\nValueError: Model has multiple active objectives.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"argh.py\", line 14, in <module>\r\n    ric.solve(m)\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/gdpopt/algorithm_base_class.py\", line 132, in solve\r\n    self._delete_original_model_util_block()\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/gdpopt/algorithm_base_class.py\", line 454, in _delete_original_model_util_block\r\n    blk.parent_block().del_component(blk)\r\nAttributeError: 'NoneType' object has no attribute 'del_component'\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: main branch\r\nPython version:\r\nOperating system:\r\nHow Pyomo was installed (PyPI, conda, source):\r\nSolver (if applicable):\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2526/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2524", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2524/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2524/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2524/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2524", "id": 1362591337, "node_id": "I_kwDOA5FfHs5RN35p", "number": 2524, "title": "value is not imported in pyomo.core.base.external", "user": {"login": "zssatgit", "id": 27882477, "node_id": "MDQ6VXNlcjI3ODgyNDc3", "avatar_url": "https://avatars.githubusercontent.com/u/27882477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zssatgit", "html_url": "https://github.com/zssatgit", "followers_url": "https://api.github.com/users/zssatgit/followers", "following_url": "https://api.github.com/users/zssatgit/following{/other_user}", "gists_url": "https://api.github.com/users/zssatgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/zssatgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zssatgit/subscriptions", "organizations_url": "https://api.github.com/users/zssatgit/orgs", "repos_url": "https://api.github.com/users/zssatgit/repos", "events_url": "https://api.github.com/users/zssatgit/events{/privacy}", "received_events_url": "https://api.github.com/users/zssatgit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-09-06T01:27:44Z", "updated_at": "2022-09-06T20:26:03Z", "closed_at": "2022-09-06T20:26:03Z", "author_association": "NONE", "active_lock_reason": null, "body": null, "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2524/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2500", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2500/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2500/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2500/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2500", "id": 1344897893, "node_id": "I_kwDOA5FfHs5QKYNl", "number": 2500, "title": "Setting CONFIG attributes for gdpopt results in ValueError: Key '...' not defined in ConfigDict '' and Dict disallows implicit entries", "user": {"login": "lbianchi-lbl", "id": 48035537, "node_id": "MDQ6VXNlcjQ4MDM1NTM3", "avatar_url": "https://avatars.githubusercontent.com/u/48035537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lbianchi-lbl", "html_url": "https://github.com/lbianchi-lbl", "followers_url": "https://api.github.com/users/lbianchi-lbl/followers", "following_url": "https://api.github.com/users/lbianchi-lbl/following{/other_user}", "gists_url": "https://api.github.com/users/lbianchi-lbl/gists{/gist_id}", "starred_url": "https://api.github.com/users/lbianchi-lbl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lbianchi-lbl/subscriptions", "organizations_url": "https://api.github.com/users/lbianchi-lbl/orgs", "repos_url": "https://api.github.com/users/lbianchi-lbl/repos", "events_url": "https://api.github.com/users/lbianchi-lbl/events{/privacy}", "received_events_url": "https://api.github.com/users/lbianchi-lbl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-08-19T21:10:13Z", "updated_at": "2022-08-22T21:33:23Z", "closed_at": "2022-08-22T21:33:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nAfter updating (indirectly, through IDAES) Pyomo to 6.4.2 in gmlc-dispatches/dispatches#136, this code snippet results in an error:\r\n\r\n```py\r\nopt = SolverFactory('gdpopt')\r\nopt.CONFIG.strategy = 'RIC'\r\nopt.CONFIG.tee = False\r\nopt.CONFIG.mip_solver = 'cbc'\r\nopt.CONFIG.nlp_solver = 'ipopt'\r\nopt.CONFIG.init_strategy = \"no_init\"\r\n```\r\n\r\n```txt\r\nself = <pyomo.common.config.ConfigDict object at 0x7fda20ef81b0>\r\nname = 'strategy', config = 'RIC'\r\n\r\n    def add(self, name, config):\r\n        if not self._implicit_declaration:\r\n            raise ValueError(\"Key '%s' not defined in ConfigDict '%s'\"\r\n                             \" and Dict disallows implicit entries\" %\r\n>                            (name, self.name(True)))\r\nE           ValueError: Key 'strategy' not defined in ConfigDict '' and Dict disallows implicit entries\r\n\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/pyomo/common/config.py:2262: ValueError\r\n```\r\n\r\nI've managed to strip down the issue to `from pyomo.environ import SolverFactory as F; F('gdpopt').CONFIG.strategy = 'RIC'`, and using that for `git bisect` between 6.4.1 and 6.4.2 of Pyomo/pyomo:main, I got the following:\r\n\r\n```console\r\n$ git bisect run pip uninstall --yes pyomo ; pip install . ; python -c \"from pyomo.environ import SolverFactory as F; F('gdpopt').CONFIG.strategy = 'RIC'\"\r\nrunning pip uninstall --yes pyomo\r\nFound existing installation: Pyomo 6.4.2\r\nUninstalling Pyomo-6.4.2:\r\n  Successfully uninstalled Pyomo-6.4.2\r\nBisecting: 169 revisions left to test after this (roughly 7 steps)\r\n[0bff05db3722be5836f276b4ed7e1b49002faae8] Fix logic when tracing through nested named expressions\r\nrunning pip uninstall --yes pyomo\r\nWARNING: Skipping pyomo as it is not installed.\r\nBisecting: 84 revisions left to test after this (roughly 6 steps)\r\n[5481d2bf76ff76946d538ac018fc88b6fe2dc529] Merge branch 'Pyomo:main' into fix_error_handling_in_quicksum\r\nrunning pip uninstall --yes pyomo\r\nWARNING: Skipping pyomo as it is not installed.\r\nBisecting: 42 revisions left to test after this (roughly 5 steps)\r\n[afe8b61b99f9773b9af3377b1fb88fcc20c99f48] Adding placeholder for using appsi fbbt eventually.\r\nrunning pip uninstall --yes pyomo\r\nWARNING: Skipping pyomo as it is not installed.\r\nBisecting: 23 revisions left to test after this (roughly 5 steps)\r\n[59eb1043ed45e079833a97f77c2461b83a2d010d] NFC: additional documentation\r\nrunning pip uninstall --yes pyomo\r\nWARNING: Skipping pyomo as it is not installed.\r\nBisecting: 10 revisions left to test after this (roughly 4 steps)\r\n[e73b024ff562ae9120da415fd1e5bdd64fd8cea6] Merge pull request #2490 from jsiirola/timer-tests-win10\r\nrunning pip uninstall --yes pyomo\r\nWARNING: Skipping pyomo as it is not installed.\r\nBisecting: 5 revisions left to test after this (roughly 3 steps)\r\n[9f043902df7315a4fc65e128fa1aacd5fbfb7afe] Make test platform agnostic\r\nrunning pip uninstall --yes pyomo\r\nWARNING: Skipping pyomo as it is not installed.\r\nBisecting: 2 revisions left to test after this (roughly 2 steps)\r\n[c568fbe290553513e8d43147c905f04f16623d18] Merge pull request #2492 from jsiirola/relocate-module\r\nrunning pip uninstall --yes pyomo\r\nWARNING: Skipping pyomo as it is not installed.\r\nBisecting: 0 revisions left to test after this (roughly 1 step)\r\n[b61a4ac522920f09f94e352215f1b45432ee0ab1] Finalizing the 6.4.2 release (readme, deprecations, changelog, version number)\r\nrunning pip uninstall --yes pyomo\r\nWARNING: Skipping pyomo as it is not installed.\r\n3333cecec999c7c0f205a4b015f84dc0178668cb is the first bad commit\r\ncommit 3333cecec999c7c0f205a4b015f84dc0178668cb\r\nMerge: c568fbe29 b61a4ac52\r\nAuthor: Bethany Nicholson <blnicho@users.noreply.github.com>\r\nDate:   Wed Aug 17 11:55:55 2022 -0400\r\n\r\n    Merge pull request #2495 from blnicho/finalize-release-6.4.2\r\n    \r\n    Finalize release 6.4.2\r\n\r\n .coin-or/projDesc.xml                          |  4 +-\r\n CHANGELOG.txt                                  | 73 +++++++++++++++++++++++---\r\n README.md                                      |  2 -\r\n RELEASE.txt                                    |  2 +-\r\n pyomo/common/timing.py                         |  4 +-\r\n pyomo/contrib/gdpopt/config_options.py         |  4 +-\r\n pyomo/contrib/gdpopt/solve_discrete_problem.py |  4 +-\r\n pyomo/contrib/gdpopt/util.py                   |  2 +-\r\n pyomo/contrib/parmest/ipopt_solver_wrapper.py  | 10 ++--\r\n pyomo/version/info.py                          |  4 +-\r\n setup.py                                       |  1 +\r\n 11 files changed, 82 insertions(+), 28 deletions(-)\r\nbisect run success\r\nProcessing /tmp/pyomo\r\n  Preparing metadata (setup.py) ... done\r\nRequirement already satisfied: ply in /opt/conda/envs/test-pyomo-gdpopt/lib/python3.8/site-packages (from Pyomo==6.4.2) (3.11)\r\nBuilding wheels for collected packages: Pyomo\r\n  Building wheel for Pyomo (setup.py) ... done\r\n  Created wheel for Pyomo: filename=Pyomo-6.4.2-py2.py3-none-any.whl size=2800261 sha256=98611e962a9b0a6da9f392ff7942640186f19b815bfe0775ec0cfcbcc5e642f4\r\n  Stored in directory: /tmp/pip-ephem-wheel-cache-gy1nibm7/wheels/e3/c2/c1/234366e9ec833a6c71309fcdf10afa69d0545987d8c55fea96\r\nSuccessfully built Pyomo\r\nInstalling collected packages: Pyomo\r\nSuccessfully installed Pyomo-6.4.2\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/tmp/pyomo/pyomo/common/config.py\", line 2179, in __setattr__\r\n    ConfigDict.__setitem__(self, name, value)\r\n  File \"/tmp/pyomo/pyomo/common/config.py\", line 2140, in __setitem__\r\n    self.add(key, val)\r\n  File \"/tmp/pyomo/pyomo/common/config.py\", line 2260, in add\r\n    raise ValueError(\"Key '%s' not defined in ConfigDict '%s'\"\r\nValueError: Key 'strategy' not defined in ConfigDict '' and Dict disallows implicit entries\r\n```\r\n\r\nLooking at 3333cece (which happens to have a very pleasant hash), I thought this deprecation could somehow be causing the issue: https://github.com/Pyomo/pyomo/commit/3333cecec999c7c0f205a4b015f84dc0178668cb#diff-904ca7208d20f2752cee5dc67fce46d0cd1f2b5b1cc90818f199f0159519d1fa\r\n\r\nHowever, even after using the new `algorithm` key, the problem still persists:\r\n\r\n```console\r\n$ pip install pyomo==6.4.2 && python -c \"from pyomo.environ import SolverFactory as F; F('gdpopt').CONFIG.algorithm = 'RIC'\"\r\nCollecting pyomo==6.4.2\r\n  Using cached Pyomo-6.4.2-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (14.6 MB)\r\nRequirement already satisfied: ply in /opt/conda/envs/test-pyomo-gdpopt/lib/python3.8/site-packages (from pyomo==6.4.2) (3.11)\r\nInstalling collected packages: pyomo\r\n  Attempting uninstall: pyomo\r\n    Found existing installation: Pyomo 6.4.1\r\n    Uninstalling Pyomo-6.4.1:\r\n      Successfully uninstalled Pyomo-6.4.1\r\nSuccessfully installed pyomo-6.4.2\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/tmp/pyomo/pyomo/common/config.py\", line 2179, in __setattr__\r\n    ConfigDict.__setitem__(self, name, value)\r\n  File \"/tmp/pyomo/pyomo/common/config.py\", line 2140, in __setitem__\r\n    self.add(key, val)\r\n  File \"/tmp/pyomo/pyomo/common/config.py\", line 2260, in add\r\n    raise ValueError(\"Key '%s' not defined in ConfigDict '%s'\"\r\nValueError: Key 'algorithm' not defined in ConfigDict '' and Dict disallows implicit entries\r\n```\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```console\r\n$ pip install pyomo==6.4.2 && python -c \"from pyomo.environ import SolverFactory as F; F('gdpopt').CONFIG.algorithm = 'RIC'\"\r\n```\r\n\r\n### Error Message\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/tmp/pyomo/pyomo/common/config.py\", line 2179, in __setattr__\r\n    ConfigDict.__setitem__(self, name, value)\r\n  File \"/tmp/pyomo/pyomo/common/config.py\", line 2140, in __setitem__\r\n    self.add(key, val)\r\n  File \"/tmp/pyomo/pyomo/common/config.py\", line 2260, in add\r\n    raise ValueError(\"Key '%s' not defined in ConfigDict '%s'\"\r\nValueError: Key 'algorithm' not defined in ConfigDict '' and Dict disallows implicit entries\r\n```\r\n\r\n### Information on your system\r\n\r\nSolver: `gdpopt`\r\n\r\n```sh\r\n$ bash -c 'for cmd in \"pyomo --version\" \"python --version\" \"uname -a\" \"which python\" ; do echo \"$cmd:\" $($cmd) ; done'\r\npyomo --version: Pyomo 6.4.2 (CPython 3.8.13 on Linux 5.4.0-122-generic)\r\npython --version: Python 3.8.13\r\nuname -a: Linux eks 5.4.0-122-generic #138-Ubuntu SMP Wed Jun 22 15:00:31 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux\r\nwhich python: /opt/conda/envs/test-pyomo-gdpopt/bin/python\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2500/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2491", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2491/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2491/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2491/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2491", "id": 1340557980, "node_id": "I_kwDOA5FfHs5P50qc", "number": 2491, "title": "Appsi fbbt doesn't know about AutoLinkedBinaryVars", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-08-16T15:50:16Z", "updated_at": "2022-09-23T17:36:51Z", "closed_at": "2022-09-23T17:36:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nThere's a `KeyError` when using the appsi implementation of fbbt on transformed GDP models.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\nfrom pyomo.environ import *\r\nfrom pyomo.gdp import *\r\nfrom pyomo.contrib import appsi\r\n\r\nm = ConcreteModel()\r\nm.x = Var(bounds=(3, 4))\r\nm.disjunction = Disjunction(expr=[[m.x == 3.5], [m.x >= 3.9]])\r\nTransformationFactory('gdp.bigm').apply_to(m)\r\n\r\nit = appsi.fbbt.IntervalTightener()\r\nit.perform_fbbt(m)\r\n```\r\n\r\n### Error Message\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"appsi_bug.py\", line 11, in <module>\r\n    it.perform_fbbt(m)\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/appsi/fbbt.py\", line 219, in perform_fbbt\r\n    self.set_instance(model, symbolic_solver_labels=symbolic_solver_labels)\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/appsi/fbbt.py\", line 94, in set_instance\r\n    self.add_block(model)\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/appsi/base.py\", line 915, in add_block\r\n    self.add_constraints([con for con in block.component_data_objects(Constraint, descend_into=True,\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/appsi/base.py\", line 842, in add_constraints\r\n    self._add_constraints(cons)\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/appsi/fbbt.py\", line 122, in _add_constraints\r\n    cmodel.process_fbbt_constraints(self._cmodel, self._pyomo_expr_types, cons, self._var_map, self._param_map,\r\nKeyError: <class 'pyomo.gdp.disjunct.AutoLinkedBinaryVar'>\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: main\r\nPython version: 3.8\r\nOperating system: linux\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable):", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2491/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2475", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2475/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2475/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2475/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2475", "id": 1325095759, "node_id": "I_kwDOA5FfHs5O-1tP", "number": 2475, "title": "Can't run solve() inside a ThreadPool with GLPK", "user": {"login": "ldeluigi", "id": 44567586, "node_id": "MDQ6VXNlcjQ0NTY3NTg2", "avatar_url": "https://avatars.githubusercontent.com/u/44567586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldeluigi", "html_url": "https://github.com/ldeluigi", "followers_url": "https://api.github.com/users/ldeluigi/followers", "following_url": "https://api.github.com/users/ldeluigi/following{/other_user}", "gists_url": "https://api.github.com/users/ldeluigi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldeluigi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldeluigi/subscriptions", "organizations_url": "https://api.github.com/users/ldeluigi/orgs", "repos_url": "https://api.github.com/users/ldeluigi/repos", "events_url": "https://api.github.com/users/ldeluigi/events{/privacy}", "received_events_url": "https://api.github.com/users/ldeluigi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2022-08-01T23:24:48Z", "updated_at": "2022-09-13T18:58:22Z", "closed_at": "2022-09-13T18:58:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nFrom https://stackoverflow.com/questions/73064859/pyomo-how-do-i-run-multiple-solve-concurrently-in-parallel-on-the-same-model:\r\n\r\n> I'm using opt = pyo.SolverFactory('glpk'), and I'd like to call opt.solve(), multiple times, inside a map function of a ThreadPool, but it gives error caused by race conditions.\r\n>\r\n> \r\n> It doesn't work even if I instanciate opt inside the map function.\r\n> \r\n> The errors I get are random, but in many cases they refer to a log_file which can't be opened.\r\n> \r\n> I'm even cloning the model for each map function call, to avoid race conditions on it.\r\n> \r\n> I can't use MPI, I need to use a ThreadPool (which parallelizes only I/O ops, like waiting for the solver to end the task, which is good enough for me)\r\n\r\n### Steps to reproduce the issue\r\n\r\n```python\r\nimport pyomo.environ as pyo\r\nfrom pyomo.opt import SolverFactory\r\nfrom multiprocessing.dummy import Pool as ThreadPool\r\n\r\nmodel = pyo.ConcreteModel()\r\nmodel.nVars = pyo.Param(initialize=4)\r\nmodel.N = pyo.RangeSet(model.nVars)\r\nmodel.x = pyo.Var(model.N, within=pyo.Binary)\r\nmodel.obj = pyo.Objective(expr=pyo.summation(model.x))\r\nmodel.cuts = pyo.ConstraintList()\r\n\r\ndef test(_):\r\n    opt = SolverFactory('glpk')\r\n    opt.solve(model) \r\n\r\n    # Iterate, adding a cut to exclude the previously found solution\r\n    for i in range(5):\r\n        expr = 0\r\n        for j in model.x:\r\n            if pyo.value(model.x[j]) < 0.5:\r\n                expr += model.x[j]\r\n            else:\r\n                expr += (1 - model.x[j])\r\n        model.cuts.add( expr >= 1 )\r\n        results = opt.solve(model)\r\n        return results\r\n\r\ntp = ThreadPool(4)\r\nresults = tp.map(test, range(5))\r\nprint(results)\r\n```\r\nor:\r\n```python\r\nimport pyomo.environ as pyo\r\nfrom pyomo.opt import SolverFactory\r\nfrom multiprocessing.dummy import Pool as ThreadPool\r\n\r\nmodel = pyo.ConcreteModel()\r\nmodel.nVars = pyo.Param(initialize=4)\r\nmodel.N = pyo.RangeSet(model.nVars)\r\nmodel.x = pyo.Var(model.N, within=pyo.Binary)\r\nmodel.obj = pyo.Objective(expr=pyo.summation(model.x))\r\nmodel.cuts = pyo.ConstraintList()\r\n\r\ndef test(model):\r\n    opt = SolverFactory('glpk')\r\n    opt.solve(model) \r\n\r\n    # Iterate, adding a cut to exclude the previously found solution\r\n    for i in range(5):\r\n        expr = 0\r\n        for j in model.x:\r\n            if pyo.value(model.x[j]) < 0.5:\r\n                expr += model.x[j]\r\n            else:\r\n                expr += (1 - model.x[j])\r\n        model.cuts.add( expr >= 1 )\r\n        results = opt.solve(model)\r\n        return results\r\n\r\ntp = ThreadPool(4)\r\nresults = tp.map(test, [model.clone() for i in range(4)])\r\nprint(results)\r\n```\r\n\r\n### Error Message\r\n\r\n```console\r\nWARNING: Empty constraint block written in LP format - solver may error\r\nWARNING: Empty constraint block written in LP format - solver may error\r\nWARNING: Empty constraint block written in LP format - solver may error\r\nWARNING: Empty constraint block written in LP format - solver may error\r\nTraceback (most recent call last):\r\n  File \"c:\\Users\\_\\Desktop\\problem.py\", line 29, in <module>\r\n    results = tp.map(test, [model.clone() for i in range(4)])\r\n  File \"D:\\Programs\\Python310\\lib\\multiprocessing\\pool.py\", line 364, in map\r\n    return self._map_async(func, iterable, mapstar, chunksize).get()\r\n  File \"D:\\Programs\\Python310\\lib\\multiprocessing\\pool.py\", line 771, in get\r\n    raise self._value\r\n  File \"D:\\Programs\\Python310\\lib\\multiprocessing\\pool.py\", line 125, in worker\r\n    result = (True, func(*args, **kwds))\r\n  File \"D:\\Programs\\Python310\\lib\\multiprocessing\\pool.py\", line 48, in mapstar\r\n    return list(map(*args))\r\n  File \"c:\\Users\\_\\Desktop\\problem.py\", line 14, in test\r\n    opt.solve(model)\r\n  File \"D:\\Programs\\Python310\\lib\\site-packages\\pyomo\\opt\\base\\solvers.py\", line 602, in solve\r\n    result = self._postsolve()\r\n  File \"D:\\Programs\\Python310\\lib\\site-packages\\pyomo\\opt\\solver\\shellcmd.py\", line 281, in _postsolve\r\n    results = self.process_output(self._rc)\r\n  File \"D:\\Programs\\Python310\\lib\\site-packages\\pyomo\\opt\\solver\\shellcmd.py\", line 354, in process_output\r\n    results = self.process_logfile()\r\n  File \"D:\\Programs\\Python310\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\GLPK.py\", line 213, in process_logfile\r\n    with open(self._log_file, 'r') as output:\r\nOSError: [WinError 6] The handle is invalid\r\nException ignored in: <function TeeStream.__del__ at 0x00000237C62AE830>\r\nTraceback (most recent call last):\r\n  File \"D:\\Programs\\Python310\\lib\\site-packages\\pyomo\\common\\tee.py\", line 425, in __del__\r\n    self.close()\r\n  File \"D:\\Programs\\Python310\\lib\\site-packages\\pyomo\\common\\tee.py\", line 407, in close\r\n    h.finalize(self.ostreams)\r\n  File \"D:\\Programs\\Python310\\lib\\site-packages\\pyomo\\common\\tee.py\", line 267, in finalize\r\n    os.close(self.read_pipe)\r\nOSError: [Errno 9] Bad file descriptor\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.1\r\nPython version: 3.10.5\r\nOperating system: Windows\r\nHow Pyomo was installed (PyPI, conda, source): PyPI\r\nSolver (if applicable): GLPK\r\n\r\n\r\n### Additional information\r\n\r\nI posted on the forum too, but none responded:\r\nhttps://groups.google.com/g/pyomo-forum/c/CovfenBC0wg", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2475/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2470", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2470/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2470/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2470/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2470", "id": 1316049781, "node_id": "I_kwDOA5FfHs5OcVN1", "number": 2470, "title": "Solver returns \u201cA feasible solution was not found, so no solution can be loaded\u201d, even though a feasible solution is clearly available. ", "user": {"login": "makansij", "id": 8031047, "node_id": "MDQ6VXNlcjgwMzEwNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/8031047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/makansij", "html_url": "https://github.com/makansij", "followers_url": "https://api.github.com/users/makansij/followers", "following_url": "https://api.github.com/users/makansij/following{/other_user}", "gists_url": "https://api.github.com/users/makansij/gists{/gist_id}", "starred_url": "https://api.github.com/users/makansij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/makansij/subscriptions", "organizations_url": "https://api.github.com/users/makansij/orgs", "repos_url": "https://api.github.com/users/makansij/repos", "events_url": "https://api.github.com/users/makansij/events{/privacy}", "received_events_url": "https://api.github.com/users/makansij/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2022-07-25T00:16:47Z", "updated_at": "2022-08-20T22:41:24Z", "closed_at": "2022-08-20T22:41:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\nI\u2019m running a fairly simple robust optimization problem, to which I know there exists a feasible solution.   The separation problem seems to find an optimal solution many times, but for some reason when it reports its results back to the master problem, it\u2019s not able to find a feasible solution. \r\n\r\nI changed the solver settings to make the problem easier:  \u201cobjective_focus = pyros.ObjectiveType.nominal\u201d and \u201csolve_master_globally: False\u201d, and objective = 0, but to no avail. I know that the nominal values for the uncertain parameters are in the uncertainty set, or else PyROS would complain. \r\n\r\nI reduced the problem dimensions as much as possible to try to figure out why the solver can\u2019t find this solution.  In the code excerpt below, I show that there exists a feasible solution by showing that the constraints are satisfied, but \u201cappsi_ipopt\u201d is unable to find this solution. \r\n\r\nIs there anything else I can do to help this problem along?  Or is this what I should expect when using IPOPT as the local and global solver using PyROS for a problem like this? \r\n\r\nThanks. \r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```import pyomo.environ as pe\r\nimport numpy as np\r\ndef create_model():\r\n    m = pe.ConcreteModel()\r\n \r\n    m.del_component('N')\r\n    m.add_component('N', pe.Param(mutable=True, within=pe.Reals, initialize=2))\r\n    N = pe.value(m.N)\r\n \r\n    m.del_component('n')\r\n    m.add_component('n', pe.Param(mutable=True, within=pe.Reals, initialize=3))\r\n    n = pe.value(m.n)\r\n \r\n    def x_0_init(m, i):\r\n        x_0_val = 0.5*np.ones((1,3))\r\n        return x_0_val[0,i]\r\n\r\n    m.del_component('x_0_val')\r\n    m.add_component('x_0_val', pe.Param(range(n), mutable=True, initialize=x_0_init))\r\n\r\n    def v_init(m, i):\r\n        v = np.ones((1,n))\r\n        return v[0, i]\r\n\r\n    m.del_component('v')\r\n    m.add_component('v', pe.Param(range(n), mutable=True, initialize=v_init)) # \r\n\r\n    def h_init(m, i):\r\n        h = np.ones((1,n))\r\n        return h[0, i]\r\n\r\n    m.del_component('h')\r\n    m.add_component('h', pe.Param(range(n), mutable=True, initialize=h_init)) # \r\n\r\n    m.del_component('T_s')\r\n    m.add_component('T_s', pe.Param(mutable=True, within=pe.Reals, initialize=1)) # \r\n\r\n    def r_init(m, i):\r\n        r = np.array([[1,0,0]])\r\n        return r[0, i]\r\n\r\n    m.del_component('r')\r\n    m.add_component('r', pe.Param(range(n), mutable=True, initialize=r_init)) #  1 by n \r\n\r\n    def gamma_init(m, i):\r\n        gamma = np.array([1000, 100, 100]) \r\n        return gamma[i]\r\n\r\n    m.del_component('gamma')\r\n    m.add_component('gamma', pe.Param(range(n), mutable=True, initialize=gamma_init)) # n by n \r\n\r\n    return m\r\n\r\nm=create_model()\r\nq = 1\r\nQ = 2\r\nn = pe.value(m.n)\r\nN = pe.value(m.N)\r\n\r\n\r\nm.del_component('q')\r\nm.add_component('q', pe.Param(mutable=True, within=pe.NonNegativeIntegers, initialize=q)) \r\n\r\nm.del_component('Q')\r\nm.add_component('Q', pe.Param(mutable=True, within=pe.NonNegativeIntegers, initialize=Q))\r\n\r\ndef d_init(m, ix):\r\n    if ix == m.q.value:\r\n        return 1\r\n    return 0\r\n\r\nm.del_component('d')\r\nm.add_component('d', pe.Param(range(m.Q.value), mutable=True, initialize=d_init))  \r\n\r\nl_optimal = np.array([[0,0,0,1,0,0]])\r\nl_value = np.concatenate([np.zeros((1, N*n*(q-1))), l_optimal, np.zeros((1, (Q-q)*n*N))], axis=1)\r\ndef l_init(m, ix):\r\n    return l_value[0, ix]\r\n\r\nm.del_component('l')\r\nm.add_component('l', pe.Param(range(n*Q*N), mutable=True, initialize=l_init)) \r\n\r\nm.del_component('L')\r\nm.add_component('L', pe.Var(range(n), range(n*Q*N), within=pe.Reals))\r\n\r\nn = pe.value(m.n)\r\nN = pe.value(m.N)\r\n\r\nL_1 = np.eye(n,n)\r\nL_2 = np.zeros((n,n))\r\nL_2[1, 0] = 1\r\nL_2[2, 1] = 1\r\nL_optimal = np.concatenate([L_1, L_2], axis=1)\r\n\r\n\r\nL_value = np.concatenate([np.zeros((n, q*n*N)), L_optimal, np.zeros((n, (Q-q-1)*n*N))], axis=1)\r\ndef assign_values(model, L_value):\r\n    [m, n] = np.shape(L_value)\r\n    for i in range(m):\r\n        for j in range(n):\r\n            model.L[i,j].value = L_value[i,j]\r\n    return\r\n\r\nassign_values(m, L_value)\r\n\r\nm.del_component('c1')\r\nm.add_component('c1', pe.Constraint(expr = 0 <=  m.x_0_val[0]*m.d[0]*m.L[0,0] + m.x_0_val[1]*m.d[0]*m.L[0,1] + m.d[0]*m.L[0,2]*m.x_0_val[2] + m.d[1]*m.L[0,6]*m.x_0_val[0] + m.d[1]*m.L[0,7]*m.x_0_val[1] + m.d[1]*m.L[0,8]*m.x_0_val[2] + (m.d[0]*m.l[0] + m.d[1]*m.l[6])))\r\n\r\nm.del_component('c2')\r\nm.add_component('c2', pe.Constraint(expr = 0  <=  m.x_0_val[0]*m.d[0]*m.L[0,3] + m.x_0_val[1]*m.d[0]*m.L[0,4] + m.d[0]*m.L[0,5]*m.x_0_val[2] + m.d[1]*m.L[0,9]*m.x_0_val[0] + m.d[1]*m.L[0,10]*m.x_0_val[1] + m.d[1]*m.L[0,11]*m.x_0_val[2] + (m.d[0]*m.l[3] + m.d[1]*m.l[9])))\r\n\r\nm.del_component('c3')\r\nm.add_component('c3', pe.Constraint(expr = 0  <=  m.x_0_val[0]*m.d[0]*m.L[1,0] + m.x_0_val[1]*m.d[0]*m.L[1,1] + m.d[0]*m.L[1,2]*m.x_0_val[2] + m.d[1]*m.L[1,6]*m.x_0_val[0] + m.d[1]*m.L[1,7]*m.x_0_val[1] + m.d[1]*m.L[1,8]*m.x_0_val[2] + (m.d[0]*m.l[1] + m.d[1]*m.l[7])))\r\n\r\nm.del_component('c4')\r\nm.add_component('c4', pe.Constraint(expr = 0  <=  m.x_0_val[0]*m.d[0]*m.L[1,3] + m.x_0_val[1]*m.d[0]*m.L[1,4] + m.d[0]*m.L[1,5]*m.x_0_val[2] + m.d[1]*m.L[1,9]*m.x_0_val[0] + m.d[1]*m.L[1,10]*m.x_0_val[1] + m.d[1]*m.L[1,11]*m.x_0_val[2] + (m.d[0]*m.l[4] + m.d[1]*m.l[10])))\r\n\r\nm.del_component('c5')\r\nm.add_component('c5', pe.Constraint(expr = 0  <=  m.x_0_val[0]*m.d[0]*m.L[2,0] + m.x_0_val[1]*m.d[0]*m.L[2,1] + m.d[0]*m.L[2,2]*m.x_0_val[2] + m.d[1]*m.L[2,6]*m.x_0_val[0] + m.d[1]*m.L[2,7]*m.x_0_val[1] + m.d[1]*m.L[2,8]*m.x_0_val[2] + (m.d[0]*m.l[2] + m.d[1]*m.l[8])))\r\n\r\nm.del_component('c6')\r\nm.add_component('c6', pe.Constraint(expr = 0  <=  m.x_0_val[0]*m.d[0]*m.L[2,3] + m.x_0_val[1]*m.d[0]*m.L[2,4] + m.d[0]*m.L[2,5]*m.x_0_val[2] + m.d[1]*m.L[2,9]*m.x_0_val[0] + m.d[1]*m.L[2,10]*m.x_0_val[1] + m.d[1]*m.L[2,11]*m.x_0_val[2] + (m.d[0]*m.l[5] + m.d[1]*m.l[11])))\r\n\r\nm.del_component('c7')\r\nm.add_component('c7', pe.Constraint(expr = m.x_0_val[0]*m.d[0]*m.L[0,0] + m.x_0_val[1]*m.d[0]*m.L[0,1] + m.d[0]*m.L[0,2]*m.x_0_val[2] + m.d[1]*m.L[0,6]*m.x_0_val[0] + m.d[1]*m.L[0,7]*m.x_0_val[1] + m.d[1]*m.L[0,8]*m.x_0_val[2] + (m.d[0]*m.l[0] + m.d[1]*m.l[6])  <=  m.x_0_val[0]))\r\n\r\nm.del_component('c8')\r\nm.add_component('c8', pe.Constraint(expr = m.x_0_val[0]*m.d[0]*m.L[0,3] + m.x_0_val[1]*m.d[0]*m.L[0,4] + m.d[0]*m.L[0,5]*m.x_0_val[2] + m.d[1]*m.L[0,9]*m.x_0_val[0] + m.d[1]*m.L[0,10]*m.x_0_val[1] + m.d[1]*m.L[0,11]*m.x_0_val[2] + (m.d[0]*m.l[3] + m.d[1]*m.l[9])  <=  m.x_0_val[0] + m.r[0]*m.T_s - m.T_s*(m.d[0]*m.l[0] + m.d[1]*m.l[6] + m.x_0_val[0]*m.d[0]*m.L[0,0] + m.x_0_val[1]*m.d[0]*m.L[0,1] + m.x_0_val[2]*m.d[0]*m.L[0,2] + m.x_0_val[0]*m.d[1]*m.L[0,6] + m.x_0_val[1]*m.d[1]*m.L[0,7] + m.x_0_val[2]*m.d[1]*m.L[0,8])))\r\n\r\nm.del_component('c8')\r\nm.add_component('c8', pe.Constraint(expr = m.x_0_val[0]*m.d[0]*m.L[0,3] + m.x_0_val[1]*m.d[0]*m.L[0,4] + m.d[0]*m.L[0,5]*m.x_0_val[2] + m.d[1]*m.L[0,9]*m.x_0_val[0] + m.d[1]*m.L[0,10]*m.x_0_val[1] + m.d[1]*m.L[0,11]*m.x_0_val[2] + (m.d[0]*m.l[3] + m.d[1]*m.l[9])  <=  m.x_0_val[0] + m.r[0]*m.T_s - m.T_s*(m.d[0]*m.l[0] + m.d[1]*m.l[6] + m.x_0_val[0]*m.d[0]*m.L[0,0] + m.x_0_val[1]*m.d[0]*m.L[0,1] + m.x_0_val[2]*m.d[0]*m.L[0,2] + m.x_0_val[0]*m.d[1]*m.L[0,6] + m.x_0_val[1]*m.d[1]*m.L[0,7] + m.x_0_val[2]*m.d[1]*m.L[0,8])))\r\n\r\n\r\nm.del_component('c9')\r\nm.add_component('c9', pe.Constraint(expr = m.x_0_val[0]*m.d[0]*m.L[1,0] + m.x_0_val[1]*m.d[0]*m.L[1,1] + m.d[0]*m.L[1,2]*m.x_0_val[2] + m.d[1]*m.L[1,6]*m.x_0_val[0] + m.d[1]*m.L[1,7]*m.x_0_val[1] + m.d[1]*m.L[1,8]*m.x_0_val[2] + (m.d[0]*m.l[1] + m.d[1]*m.l[7])  <=  m.x_0_val[1]))\r\n\r\n\r\nm.del_component('c10')\r\nm.add_component('c10', pe.Constraint(expr = m.x_0_val[0]*m.d[0]*m.L[1,3] + m.x_0_val[1]*m.d[0]*m.L[1,4] + m.d[0]*m.L[1,5]*m.x_0_val[2] + m.d[1]*m.L[1,9]*m.x_0_val[0] + m.d[1]*m.L[1,10]*m.x_0_val[1] + m.d[1]*m.L[1,11]*m.x_0_val[2] + (m.d[0]*m.l[4] + m.d[1]*m.l[10])  <=  m.x_0_val[1] + m.v[1]/m.h[1]*(1 - m.r[1])*(m.v[1]/m.h[1])*m.T_s*(m.x_0_val[0]*m.d[0]*m.L[0,0] + m.x_0_val[1]*m.d[0]*m.L[0,1] + m.d[0]*m.L[0,2]*m.x_0_val[2] + m.d[1]*m.L[0,6]*m.x_0_val[0] + m.d[1]*m.L[0,7]*m.x_0_val[1] + m.d[1]*m.L[0,8]*m.x_0_val[2] + (m.d[0]*m.l[0] + m.d[1]*m.l[6])) - m.T_s*(m.d[0]*m.l[1] + m.d[1]*m.l[7] + m.x_0_val[0]*m.d[0]*m.L[1,0] + m.x_0_val[1]*m.d[0]*m.L[1,1] + m.x_0_val[2]*m.d[0]*m.L[1,2] + m.x_0_val[0]*m.d[1]*m.L[1,6] + m.x_0_val[1]*m.d[1]*m.L[1,7] + m.x_0_val[2]*m.d[1]*m.L[1,8])))\r\n\r\n\r\nm.del_component('c11')\r\nm.add_component('c11', pe.Constraint(expr = m.x_0_val[0]*m.d[0]*m.L[2,0] + m.x_0_val[1]*m.d[0]*m.L[2,1] + m.d[0]*m.L[2,2]*m.x_0_val[2] + m.d[1]*m.L[2,6]*m.x_0_val[0] + m.d[1]*m.L[2,7]*m.x_0_val[1] + m.d[1]*m.L[2,8]*m.x_0_val[2] + (m.d[0]*m.l[2] + m.d[1]*m.l[8])  <=  m.x_0_val[2]))\r\n\r\n\r\nm.del_component('c12')\r\nm.add_component('c12', pe.Constraint(expr = m.x_0_val[0]*m.d[0]*m.L[2,3] + m.x_0_val[1]*m.d[0]*m.L[2,4] + m.d[0]*m.L[2,5]*m.x_0_val[2] + m.d[1]*m.L[2,9]*m.x_0_val[0] + m.d[1]*m.L[2,10]*m.x_0_val[1] + m.d[1]*m.L[2,11]*m.x_0_val[2] + (m.d[0]*m.l[5] + m.d[1]*m.l[11])  <=  m.x_0_val[2] + m.v[2]/m.h[2]*(1 - m.r[2])*(m.v[2]/m.h[2])*m.T_s*(m.x_0_val[0]*m.d[0]*m.L[1,0] + m.x_0_val[1]*m.d[0]*m.L[1,1] + m.d[0]*m.L[1,2]*m.x_0_val[2] + m.d[1]*m.L[1,6]*m.x_0_val[0] + m.d[1]*m.L[1,7]*m.x_0_val[1] + m.d[1]*m.L[1,8]*m.x_0_val[2] + (m.d[0]*m.l[1] + m.d[1]*m.l[7])) - m.T_s*(m.d[0]*m.l[2] + m.d[1]*m.l[8] + m.x_0_val[0]*m.d[0]*m.L[2,0] + m.x_0_val[1]*m.d[0]*m.L[2,1] + m.x_0_val[2]*m.d[0]*m.L[2,2] + m.x_0_val[0]*m.d[1]*m.L[2,6] + m.x_0_val[1]*m.d[1]*m.L[2,7] + m.x_0_val[2]*m.d[1]*m.L[2,8])))\r\n\r\n# ===== show that constraints are satisfied for the above values for the decision variable, and fixed parameter \"l\"\r\ndef all_satisfied():\r\n    Truth_array = []\r\n    for i in range(n):\r\n        for k in range(N):\r\n            eval_str = 'Truth_array.append(pe.value(m.c'+str((i*2)+k+1)+'.expr))'\r\n            eval(eval_str)\r\n    if all(Truth_array):\r\n        return True\r\n    else:\r\n        return False\r\n\r\nif all_satisfied():\r\n    print('feasible')\r\nelse:\r\n    print('infeasible')\r\n    \r\n# === Specify the objective function ===\r\nm.del_component('objective_function')\r\nm.add_component('objective_fn_expression', pe.Objective(expr = 0, sense = pe.minimize))\r\n\r\nimport pyomo.contrib.pyros as pyros\r\n# === Instantiate the PyROS solver object ===\r\npyros_solver = pe.SolverFactory(\"pyros\")\r\n\r\ngamma = [pe.value(m.gamma[0]), pe.value(m.gamma[1]), pe.value(m.gamma[2])]\r\nh = [pe.value(m.h[0]), pe.value(m.h[1]), pe.value(m.h[2])]\r\nmax_densities = np.array([gamma_h[0]*gamma_h[1] for gamma_h in zip(gamma, h)])\r\n\r\nbounds_x_0_val = list(zip([0]*m.n.value, max_densities))\r\nbounds_d = [(0,1)]*m.Q.value\r\n  \r\n# === Specify which parameters are uncertain ===\r\nuncertain_parameters = [m.d, m.x_0_val]\r\n\r\n# === Construct the desirable uncertainty set ===\r\nuncertainty_set = pyros.BoxSet(bounds = bounds_x_0_val + bounds_d)\r\n\r\n# === Designate local and global NLP solvers ===\r\nipopt_solver = pe.SolverFactory('appsi_ipopt')\r\nlocal_solver = ipopt_solver\r\nglobal_solver = ipopt_solver\r\n\r\n# === Designate which variables correspond to first- and second-stage degrees of freedom ===\r\nfirst_stage_variables = [m.L]\r\nsecond_stage_variables = []\r\n# The remaining variables are implicitly designated to be state variables\r\n\r\n# === Call PyROS to solve the robust optimization problem ===\r\nresults = pyros_solver.solve(model = m,\r\n                                 first_stage_variables = first_stage_variables,\r\n                                 second_stage_variables = second_stage_variables,\r\n                                 uncertain_params = uncertain_parameters,\r\n                                 uncertainty_set = uncertainty_set,\r\n                                 local_solver = local_solver,\r\n                                 global_solver = global_solver,\r\n                                 tee = True,\r\n                                 options = {\r\n                                    \"objective_focus\": pyros.ObjectiveType.nominal,\r\n                                    \"solve_master_globally\": False,\r\n                                    \"load_solution\":False\r\n                                  })\r\n\r\n\r\n# === Query results ===\r\ntime = results.time\r\niterations = results.iterations\r\ntermination_condition = results.pyros_termination_condition\r\nobjective = results.final_objective_value\r\n\r\n# === Print some results ===\r\nsingle_stage_final_objective = round(objective, -1)\r\nprint(\"Final objective value: %s\" % single_stage_final_objective)\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2470/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2457", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2457/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2457/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2457/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2457", "id": 1300569598, "node_id": "I_kwDOA5FfHs5NhR3-", "number": 2457, "title": "'quicksum' hides exceptions raised in generator from the user, leading to a wrong model", "user": {"login": "shishouyuan", "id": 52651469, "node_id": "MDQ6VXNlcjUyNjUxNDY5", "avatar_url": "https://avatars.githubusercontent.com/u/52651469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shishouyuan", "html_url": "https://github.com/shishouyuan", "followers_url": "https://api.github.com/users/shishouyuan/followers", "following_url": "https://api.github.com/users/shishouyuan/following{/other_user}", "gists_url": "https://api.github.com/users/shishouyuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/shishouyuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shishouyuan/subscriptions", "organizations_url": "https://api.github.com/users/shishouyuan/orgs", "repos_url": "https://api.github.com/users/shishouyuan/repos", "events_url": "https://api.github.com/users/shishouyuan/events{/privacy}", "received_events_url": "https://api.github.com/users/shishouyuan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-07-11T11:21:45Z", "updated_at": "2022-08-08T14:42:18Z", "closed_at": "2022-08-08T14:42:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\nIf the generator passed to `quicksum` raises an exception at the first call to __next__, the exception handling logic of `quicksum` will hide the exception from the user and return an expression as `0`.  This behavior of `quicksum` may produce a wrong model unintentionally.\r\n\r\nThe example below shows that the user misspells `param.aaa` as `param.bbb` in the expression,  in fact it is a non-exsiting attribute of the class. However, the code can run fluently without any exception occurs.  \r\n\r\n### Steps to reproduce the issue\r\n\r\n```python\r\nimport pyomo.environ as pyo\r\n\r\nclass Param:\r\n    def __init__(self) -> None:\r\n        self.aaa = [1.1, 2.2, 3.3]\r\n\r\nparam = Param()\r\n\r\nm = pyo.ConcreteModel()\r\nm.i = pyo.RangeSet(0, 3 - 1)\r\nm.x = pyo.Var(m.i)\r\n\r\nm.expr = pyo.Expression(expr=pyo.quicksum(m.x[i] * param.aaa[i] for i in m.i))\r\nm.expr.pprint()\r\n\r\nm.expr2 = pyo.Expression(expr=pyo.quicksum(m.x[i] * param.bbb[i] for i in m.i))\r\nm.expr2.pprint()\r\n```\r\n### Error Message\r\n```console\r\nexpr : Size=1, Index=None\r\n    Key  : Expression\r\n    None : 1.1*x[0] + 2.2*x[1] + 3.3*x[2]\r\nexpr2 : Size=1, Index=None\r\n    Key  : Expression\r\n    None :        0.0\r\n```\r\n\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.1\r\nPython version: 3.9.12\r\nOperating system: Windows 11\r\nHow Pyomo was installed (PyPI, conda, source): conda\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2457/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2455", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2455/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2455/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2455/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2455", "id": 1298020687, "node_id": "I_kwDOA5FfHs5NXjlP", "number": 2455, "title": "model.clone() fails to properly clone indexed Expression", "user": {"login": "brentertainer", "id": 42847267, "node_id": "MDQ6VXNlcjQyODQ3MjY3", "avatar_url": "https://avatars.githubusercontent.com/u/42847267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brentertainer", "html_url": "https://github.com/brentertainer", "followers_url": "https://api.github.com/users/brentertainer/followers", "following_url": "https://api.github.com/users/brentertainer/following{/other_user}", "gists_url": "https://api.github.com/users/brentertainer/gists{/gist_id}", "starred_url": "https://api.github.com/users/brentertainer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brentertainer/subscriptions", "organizations_url": "https://api.github.com/users/brentertainer/orgs", "repos_url": "https://api.github.com/users/brentertainer/repos", "events_url": "https://api.github.com/users/brentertainer/events{/privacy}", "received_events_url": "https://api.github.com/users/brentertainer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-07-07T19:58:15Z", "updated_at": "2022-08-16T15:11:32Z", "closed_at": "2022-08-16T15:11:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nWhen I attempt to invoke `model.clone()` on `ConcreteModel` object , Pyomo writes errors to the terminal indicating it is failing to clone one of the `Expression` objects, but the script terminates normally with an exit code of 0.\r\n\r\nI experience this issue with `pyomo==6.4.1`. If I roll back to `pyomo==6.2`, I still experience the issue. But if I revert to `pyomo==6.1.2`, I do not observe the issue, and the clone works as expected.\r\n\r\n\r\n### Steps to reproduce the issue\r\n\r\nI experienced this issue with a model I built using EGRET. A zip archive containing the referenced data file is attached.\r\n[case_ACTIVSg200.zip](https://github.com/Pyomo/pyomo/files/9066929/case_ACTIVSg200.zip)\r\n\r\n\r\n```python\r\nfrom egret.models.dcopf import create_ptdf_dcopf_model\r\nfrom egret.parsers.matpower_parser import create_ModelData\r\n\r\nmd_dict = create_ModelData('case_ACTIVSg200.m')\r\nmd_dict.data['system']['load_mismatch_cost'] = 1\r\nmodel, md_dict = create_ptdf_dcopf_model(md_dict, include_feasibility_slack=True, ptdf_options={'lazy': False})\r\n\r\nmodel_clone = model.clone()\r\n```\r\n\r\n### Error Message\r\n\r\nPyomo prints messages like the following to the console but does not terminate.\r\n\r\n```console\r\nERROR: Unable to clone Pyomo component attribute. Component 'pf['1']' contains\r\n    an uncopyable field '_expr' (<class\r\n    'pyomo.core.expr.numeric_expr.SumExpression'>)\r\n...\r\n...\r\n...\r\nERROR: Unable to clone Pyomo component attribute. Component 'pf['245']'\r\n    contains an uncopyable field '_expr' (<class\r\n    'pyomo.core.expr.numeric_expr.SumExpression'>)\r\n```\r\n\r\nBy hacking at `pyomo/core/base/component.py`, I was able to coerce Pyomo into printing the following traceback:\r\n\r\n```console\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py\", line 187, in __deepcopy__\r\n    new_state = deepcopy(state, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 172, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 270, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 205, in _deepcopy_list\r\n    append(deepcopy(a, memo))\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 172, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 272, in _reconstruct\r\n    y.__setstate__(state)\r\n  File \"pyomo\\core\\expr\\numvalue.pyx\", line 507, in pyomo.core.expr.numvalue.NumericValue.__setstate__\r\n  File \"pyomo\\core\\expr\\numeric_expr.pyx\", line 1355, in pyomo.core.expr.numeric_expr.LinearExpression._args_\r\nIndexError: list index out of range\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py\", line 187, in __deepcopy__\r\n    new_state = deepcopy(state, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 172, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 270, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 205, in _deepcopy_list\r\n    append(deepcopy(a, memo))\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 172, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 272, in _reconstruct\r\n    y.__setstate__(state)\r\n  File \"pyomo\\core\\expr\\numvalue.pyx\", line 507, in pyomo.core.expr.numvalue.NumericValue.__setstate__\r\n  File \"pyomo\\core\\expr\\numeric_expr.pyx\", line 1355, in pyomo.core.expr.numeric_expr.LinearExpression._args_\r\nIndexError: list index out of range\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\block.py\", line 1237, in clone\r\n    new_block = copy.deepcopy(\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 153, in deepcopy\r\n    y = copier(memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py\", line 187, in __deepcopy__\r\n    new_state = deepcopy(state, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 205, in _deepcopy_list\r\n    append(deepcopy(a, memo))\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 210, in _deepcopy_tuple\r\n    y = [deepcopy(a, memo) for a in x]\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 210, in <listcomp>\r\n    y = [deepcopy(a, memo) for a in x]\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 153, in deepcopy\r\n    y = copier(memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py\", line 187, in __deepcopy__\r\n    new_state = deepcopy(state, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 153, in deepcopy\r\n    y = copier(memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py\", line 193, in __deepcopy__\r\n    sys.exit()\r\nSystemExit\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py\", line 187, in __deepcopy__\r\n    new_state = deepcopy(state, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 172, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 270, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 205, in _deepcopy_list\r\n    append(deepcopy(a, memo))\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 172, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 272, in _reconstruct\r\n    y.__setstate__(state)\r\n  File \"pyomo\\core\\expr\\numvalue.pyx\", line 507, in pyomo.core.expr.numvalue.NumericValue.__setstate__\r\n  File \"pyomo\\core\\expr\\numeric_expr.pyx\", line 1355, in pyomo.core.expr.numeric_expr.LinearExpression._args_\r\nIndexError: list index out of range\r\n\r\nERROR:root:Internal Python error in the inspect module.\r\nBelow is the traceback from this internal error.\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py\", line 187, in __deepcopy__\r\n    new_state = deepcopy(state, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 172, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 270, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 205, in _deepcopy_list\r\n    append(deepcopy(a, memo))\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 172, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 272, in _reconstruct\r\n    y.__setstate__(state)\r\n  File \"pyomo\\core\\expr\\numvalue.pyx\", line 507, in pyomo.core.expr.numvalue.NumericValue.__setstate__\r\n  File \"pyomo\\core\\expr\\numeric_expr.pyx\", line 1355, in pyomo.core.expr.numeric_expr.LinearExpression._args_\r\nIndexError: list index out of range\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\block.py\", line 1237, in clone\r\n    new_block = copy.deepcopy(\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 153, in deepcopy\r\n    y = copier(memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py\", line 187, in __deepcopy__\r\n    new_state = deepcopy(state, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 205, in _deepcopy_list\r\n    append(deepcopy(a, memo))\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 210, in _deepcopy_tuple\r\n    y = [deepcopy(a, memo) for a in x]\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 210, in <listcomp>\r\n    y = [deepcopy(a, memo) for a in x]\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 153, in deepcopy\r\n    y = copier(memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py\", line 187, in __deepcopy__\r\n    new_state = deepcopy(state, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 153, in deepcopy\r\n    y = copier(memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py\", line 193, in __deepcopy__\r\n    sys.exit()\r\nSystemExit\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py\", line 187, in __deepcopy__\r\n    new_state = deepcopy(state, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 172, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 270, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 205, in _deepcopy_list\r\n    append(deepcopy(a, memo))\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 172, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 272, in _reconstruct\r\n    y.__setstate__(state)\r\n  File \"pyomo\\core\\expr\\numvalue.pyx\", line 507, in pyomo.core.expr.numvalue.NumericValue.__setstate__\r\n  File \"pyomo\\core\\expr\\numeric_expr.pyx\", line 1355, in pyomo.core.expr.numeric_expr.LinearExpression._args_\r\nIndexError: list index out of range\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 3444, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-2-dfad7addae03>\", line 1, in <module>\r\n    model.clone()\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\block.py\", line 1243, in clone\r\n    new_block = copy.deepcopy(\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 153, in deepcopy\r\n    y = copier(memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py\", line 187, in __deepcopy__\r\n    new_state = deepcopy(state, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 205, in _deepcopy_list\r\n    append(deepcopy(a, memo))\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 210, in _deepcopy_tuple\r\n    y = [deepcopy(a, memo) for a in x]\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 210, in <listcomp>\r\n    y = [deepcopy(a, memo) for a in x]\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 153, in deepcopy\r\n    y = copier(memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py\", line 187, in __deepcopy__\r\n    new_state = deepcopy(state, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py\", line 153, in deepcopy\r\n    y = copier(memo)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py\", line 193, in __deepcopy__\r\n    sys.exit()\r\nSystemExit\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\IPython\\core\\ultratb.py\", line 1101, in get_records\r\n    return _fixed_getinnerframes(etb, number_of_lines_of_context, tb_offset)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\IPython\\core\\ultratb.py\", line 248, in wrapped\r\n    return f(*args, **kwargs)\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\IPython\\core\\ultratb.py\", line 281, in _fixed_getinnerframes\r\n    records = fix_frame_records_filenames(inspect.getinnerframes(etb, context))\r\n  File \"C:\\Users\\bgaustg\\Anaconda3\\envs\\mpi-sppy\\lib\\inspect.py\", line 1541, in getinnerframes\r\n    frameinfo = (tb.tb_frame,) + getframeinfo(tb, context)\r\nAttributeError: 'tuple' object has no attribute 'tb_frame'\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py in __deepcopy__(self, memo)\r\n    186                 saved_memo = dict(memo)\r\n--> 187             new_state = deepcopy(state, memo)\r\n    188         #except:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _deepcopy_dict(x, memo, deepcopy)\r\n    229     for key, value in x.items():\r\n--> 230         y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n    231     return y\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    171                 else:\r\n--> 172                     y = _reconstruct(x, memo, *rv)\r\n    173\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _reconstruct(x, memo, func, args, state, listiter, dictiter, deepcopy)\r\n    269         if deep:\r\n--> 270             state = deepcopy(state, memo)\r\n    271         if hasattr(y, '__setstate__'):\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _deepcopy_dict(x, memo, deepcopy)\r\n    229     for key, value in x.items():\r\n--> 230         y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n    231     return y\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _deepcopy_list(x, memo, deepcopy)\r\n    204     for a in x:\r\n--> 205         append(deepcopy(a, memo))\r\n    206     return y\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    171                 else:\r\n--> 172                     y = _reconstruct(x, memo, *rv)\r\n    173\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _reconstruct(x, memo, func, args, state, listiter, dictiter, deepcopy)\r\n    271         if hasattr(y, '__setstate__'):\r\n--> 272             y.__setstate__(state)\r\n    273         else:\r\n\r\npyomo\\core\\expr\\numvalue.pyx in pyomo.core.expr.numvalue.NumericValue.__setstate__()\r\n\r\npyomo\\core\\expr\\numeric_expr.pyx in pyomo.core.expr.numeric_expr.LinearExpression._args_()\r\n\r\nIndexError: list index out of range\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nSystemExit                                Traceback (most recent call last)\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\block.py in clone(self)\r\n   1236         try:\r\n-> 1237             new_block = copy.deepcopy(\r\n   1238                 self, {\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    152             if copier is not None:\r\n--> 153                 y = copier(memo)\r\n    154             else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py in __deepcopy__(self, memo)\r\n    186                 saved_memo = dict(memo)\r\n--> 187             new_state = deepcopy(state, memo)\r\n    188         #except:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _deepcopy_dict(x, memo, deepcopy)\r\n    229     for key, value in x.items():\r\n--> 230         y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n    231     return y\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _deepcopy_list(x, memo, deepcopy)\r\n    204     for a in x:\r\n--> 205         append(deepcopy(a, memo))\r\n    206     return y\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _deepcopy_tuple(x, memo, deepcopy)\r\n    209 def _deepcopy_tuple(x, memo, deepcopy=deepcopy):\r\n--> 210     y = [deepcopy(a, memo) for a in x]\r\n    211     # We're not going to put the tuple in the memo, but it's still important we\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in <listcomp>(.0)\r\n    209 def _deepcopy_tuple(x, memo, deepcopy=deepcopy):\r\n--> 210     y = [deepcopy(a, memo) for a in x]\r\n    211     # We're not going to put the tuple in the memo, but it's still important we\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    152             if copier is not None:\r\n--> 153                 y = copier(memo)\r\n    154             else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py in __deepcopy__(self, memo)\r\n    186                 saved_memo = dict(memo)\r\n--> 187             new_state = deepcopy(state, memo)\r\n    188         #except:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _deepcopy_dict(x, memo, deepcopy)\r\n    229     for key, value in x.items():\r\n--> 230         y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n    231     return y\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _deepcopy_dict(x, memo, deepcopy)\r\n    229     for key, value in x.items():\r\n--> 230         y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n    231     return y\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    152             if copier is not None:\r\n--> 153                 y = copier(memo)\r\n    154             else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py in __deepcopy__(self, memo)\r\n    192             print(traceback.format_exc())\r\n--> 193             sys.exit()\r\n    194             if paranoid:\r\n\r\nSystemExit:\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nIndexError                                Traceback (most recent call last)\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py in __deepcopy__(self, memo)\r\n    186                 saved_memo = dict(memo)\r\n--> 187             new_state = deepcopy(state, memo)\r\n    188         #except:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _deepcopy_dict(x, memo, deepcopy)\r\n    229     for key, value in x.items():\r\n--> 230         y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n    231     return y\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    171                 else:\r\n--> 172                     y = _reconstruct(x, memo, *rv)\r\n    173\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _reconstruct(x, memo, func, args, state, listiter, dictiter, deepcopy)\r\n    269         if deep:\r\n--> 270             state = deepcopy(state, memo)\r\n    271         if hasattr(y, '__setstate__'):\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _deepcopy_dict(x, memo, deepcopy)\r\n    229     for key, value in x.items():\r\n--> 230         y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n    231     return y\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _deepcopy_list(x, memo, deepcopy)\r\n    204     for a in x:\r\n--> 205         append(deepcopy(a, memo))\r\n    206     return y\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    171                 else:\r\n--> 172                     y = _reconstruct(x, memo, *rv)\r\n    173\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _reconstruct(x, memo, func, args, state, listiter, dictiter, deepcopy)\r\n    271         if hasattr(y, '__setstate__'):\r\n--> 272             y.__setstate__(state)\r\n    273         else:\r\n\r\npyomo\\core\\expr\\numvalue.pyx in pyomo.core.expr.numvalue.NumericValue.__setstate__()\r\n\r\npyomo\\core\\expr\\numeric_expr.pyx in pyomo.core.expr.numeric_expr.LinearExpression._args_()\r\n\r\nIndexError: list index out of range\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nSystemExit                                Traceback (most recent call last)\r\n    [... skipping hidden 1 frame]\r\n\r\n<ipython-input-2-dfad7addae03> in <module>\r\n----> 1 model.clone()\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\block.py in clone(self)\r\n   1242         except:\r\n-> 1243             new_block = copy.deepcopy(\r\n   1244                 self, {\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    152             if copier is not None:\r\n--> 153                 y = copier(memo)\r\n    154             else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py in __deepcopy__(self, memo)\r\n    186                 saved_memo = dict(memo)\r\n--> 187             new_state = deepcopy(state, memo)\r\n    188         #except:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _deepcopy_dict(x, memo, deepcopy)\r\n    229     for key, value in x.items():\r\n--> 230         y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n    231     return y\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _deepcopy_list(x, memo, deepcopy)\r\n    204     for a in x:\r\n--> 205         append(deepcopy(a, memo))\r\n    206     return y\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _deepcopy_tuple(x, memo, deepcopy)\r\n    209 def _deepcopy_tuple(x, memo, deepcopy=deepcopy):\r\n--> 210     y = [deepcopy(a, memo) for a in x]\r\n    211     # We're not going to put the tuple in the memo, but it's still important we\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in <listcomp>(.0)\r\n    209 def _deepcopy_tuple(x, memo, deepcopy=deepcopy):\r\n--> 210     y = [deepcopy(a, memo) for a in x]\r\n    211     # We're not going to put the tuple in the memo, but it's still important we\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    152             if copier is not None:\r\n--> 153                 y = copier(memo)\r\n    154             else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\pyomo\\core\\base\\component.py in __deepcopy__(self, memo)\r\n    186                 saved_memo = dict(memo)\r\n--> 187             new_state = deepcopy(state, memo)\r\n    188         #except:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _deepcopy_dict(x, memo, deepcopy)\r\n    229     for key, value in x.items():\r\n--> 230         y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n    231     return y\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in _deepcopy_dict(x, memo, deepcopy)\r\n    229     for key, value in x.items():\r\n--> 230         y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n    231     return y\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\copy.py in deepcopy(x, memo, _nil)\r\n    152             if copier is not None:\r\n--> 153                 y = copier(memo)\r\n    154             else:\r\n\r\n    192             print(traceback.format_exc())\r\n--> 193             sys.exit()\r\n    194             if paranoid:\r\n\r\nSystemExit:\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n    [... skipping hidden 1 frame]\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\IPython\\core\\interactiveshell.py in showtraceback(self, exc_tuple, filename, tb_offset, exception_only, running_compiled_code)\r\n   2055                     stb = ['An exception has occurred, use %tb to see '\r\n   2056                            'the full traceback.\\n']\r\n-> 2057                     stb.extend(self.InteractiveTB.get_exception_only(etype,\r\n   2058                                                                      value))\r\n   2059                 else:\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\IPython\\core\\ultratb.py in get_exception_only(self, etype, value)\r\n    752         value : exception value\r\n    753         \"\"\"\r\n--> 754         return ListTB.structured_traceback(self, etype, value)\r\n    755\r\n    756     def show_exception_only(self, etype, evalue):\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\IPython\\core\\ultratb.py in structured_traceback(self, etype, evalue, etb, tb_offset, context)\r\n    628             out_list = (\r\n--> 629                 self.structured_traceback(\r\n    630                     etype, evalue, (etb, chained_exc_ids),\r\n    631                     chained_exceptions_tb_offset, context)\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\IPython\\core\\ultratb.py in structured_traceback(self, etype, value, tb, tb_offset, number_of_lines_of_context)\r\n   1365         else:\r\n   1366             self.tb = tb\r\n-> 1367         return FormattedTB.structured_traceback(\r\n   1368             self, etype, value, tb, tb_offset, number_of_lines_of_context)\r\n   1369\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\IPython\\core\\ultratb.py in structured_traceback(self, etype, value, tb, tb_offset, number_of_lines_of_context)\r\n   1265         if mode in self.verbose_modes:\r\n   1266             # Verbose modes need a full traceback\r\n-> 1267             return VerboseTB.structured_traceback(\r\n   1268                 self, etype, value, tb, tb_offset, number_of_lines_of_context\r\n   1269             )\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\IPython\\core\\ultratb.py in structured_traceback(self, etype, evalue, etb, tb_offset, number_of_lines_of_context)\r\n   1122         \"\"\"Return a nice text document describing the traceback.\"\"\"\r\n   1123\r\n-> 1124         formatted_exception = self.format_exception_as_a_whole(etype, evalue, etb, number_of_lines_of_context,\r\n   1125                                                                tb_offset)\r\n   1126\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\IPython\\core\\ultratb.py in format_exception_as_a_whole(self, etype, evalue, etb, number_of_lines_of_context, tb_offset)\r\n   1080\r\n   1081\r\n-> 1082         last_unique, recursion_repeat = find_recursion(orig_etype, evalue, records)\r\n   1083\r\n   1084         frames = self.format_records(records, last_unique, recursion_repeat)\r\n\r\n~\\Anaconda3\\envs\\mpi-sppy\\lib\\site-packages\\IPython\\core\\ultratb.py in find_recursion(etype, value, records)\r\n    380     # first frame (from in to out) that looks different.\r\n    381     if not is_recursion_error(etype, value, records):\r\n--> 382         return len(records), 0\r\n    383\r\n    384     # Select filename, lineno, func_name to track frames with\r\n\r\nTypeError: object of type 'NoneType' has no len()\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.1\r\nPython version: 3.9.5\r\nOperating system: Windows 10.0.19044 Build 19044\r\nHow Pyomo was installed (PyPI, conda, source): conda\r\nSolver (if applicable): N/A\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2455/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2447", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2447/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2447/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2447/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2447", "id": 1284392361, "node_id": "I_kwDOA5FfHs5MjkWp", "number": 2447, "title": "SCIP cannot read temp problem file", "user": {"login": "yuhuishi-convect", "id": 74702693, "node_id": "MDQ6VXNlcjc0NzAyNjkz", "avatar_url": "https://avatars.githubusercontent.com/u/74702693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuhuishi-convect", "html_url": "https://github.com/yuhuishi-convect", "followers_url": "https://api.github.com/users/yuhuishi-convect/followers", "following_url": "https://api.github.com/users/yuhuishi-convect/following{/other_user}", "gists_url": "https://api.github.com/users/yuhuishi-convect/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuhuishi-convect/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuhuishi-convect/subscriptions", "organizations_url": "https://api.github.com/users/yuhuishi-convect/orgs", "repos_url": "https://api.github.com/users/yuhuishi-convect/repos", "events_url": "https://api.github.com/users/yuhuishi-convect/events{/privacy}", "received_events_url": "https://api.github.com/users/yuhuishi-convect/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-06-25T01:01:52Z", "updated_at": "2022-07-19T16:13:46Z", "closed_at": "2022-07-19T16:13:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\n<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `pyomo solve` to optimize a model and ...\" -->\r\n\r\nSCIP 8 executable cannot read temp problem file when using with pyomo\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```\r\n# example.py\r\n\r\nfrom pyomo.environ import *\r\nm = ConcreteModel()\r\nm.x1 = Var(bounds=(0,6))\r\nm.x2 = Var(bounds=(0,4))\r\nm.cons1 = Constraint(expr= (m.x1)*(m.x2) <= 4)\r\nm.obj = Objective(expr= -(m.x1+m.x2))\r\nsolver = SolverFactory('scip', executable=\"/usr/bin/scip\")\r\nresult = solver.solve(m, tee=True)\r\n```\r\n\r\n### Error Message\r\n\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\nSCIP version 8.0.0 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: SoPlex 6.0.0] [GitHash: a740f0891e]\r\nCopyright (C) 2002-2021 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)\r\n\r\nExternal libraries: \r\n  SoPlex 6.0.0         Linear Programming Solver developed at Zuse Institute Berlin (soplex.zib.de) [GitHash: 71a5873d]\r\n  CppAD 20180000.0     Algorithmic Differentiation of C++ algorithms developed by B. Bell (github.com/coin-or/CppAD)\r\n  ZLIB 1.2.11          General purpose compression library by J. Gailly and M. Adler (zlib.net)\r\n  GMP 6.2.1            GNU Multiple Precision Arithmetic Library developed by T. Granlund (gmplib.org)\r\n  ZIMPL 3.5.1          Zuse Institute Mathematical Programming Language developed by T. Koch (zimpl.zib.de)\r\n  AMPL/MP 4e2d45c4     AMPL .nl file reader library (github.com/ampl/mp)\r\n  PaPILO 2.0.0         parallel presolve for integer and linear optimization (github.com/scipopt/papilo) [GitHash: 76cafc1]\r\n  bliss 0.73p          Computing Graph Automorphism Groups by T. Junttila and P. Kaski (www.tcs.hut.fi/Software/bliss/)\r\n  Ipopt 3.13.2         Interior Point Optimizer developed by A. Waechter et.al. (github.com/coin-or/Ipopt)\r\n\r\nuser parameter file <scip.set> not found - using default parameters\r\n\r\nread problem </tmp/tmp5m7wz69a.pyomo.nl.nl>\r\n============\r\n\r\n[reader_nl.cpp:1351] ERROR: cannot open file /tmp/tmp5m7wz69a.pyomo.nl.nl: No such file or directory\r\n[scipshell.c:190] ERROR: Error <-4> in function call\r\n[scipshell.c:246] ERROR: Error <-4> in function call\r\n[scipshell.c:533] ERROR: Error <-4> in function call\r\nSCIP Error (-4): file not found error\r\nERROR: Solver (scip) returned non-zero return code (255)\r\nERROR: See the solver log above for diagnostic information.\r\n---------------------------------------------------------------------------\r\nApplicationError                          Traceback (most recent call last)\r\nInput In [1], in <cell line: 8>()\r\n      6 m.obj = Objective(expr= -(m.x1+m.x2))\r\n      7 solver = SolverFactory('scip', executable=\"/usr/bin/scip\")\r\n----> 8 result = solver.solve(m, tee=True)\r\n\r\nFile ~/.conda/envs/ortools/lib/python3.8/site-packages/pyomo/opt/base/solvers.py:596, in OptSolver.solve(self, *args, **kwds)\r\n    594     elif hasattr(_status, 'log') and _status.log:\r\n    595         logger.error(\"Solver log:\\n\" + str(_status.log))\r\n--> 596     raise ApplicationError(\r\n    597         \"Solver (%s) did not exit normally\" % self.name)\r\n    598 solve_completion_time = time.time()\r\n    599 if self._report_timing:\r\n\r\nApplicationError: Solver (scip) did not exit normally\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: Pyomo 6.4.1 (CPython 3.8.0 on Linux 5.4.181-99.354.amzn2.x86_64)\r\nPython version: Python 3.8.0\r\nOperating system: ubuntu20.04\r\nHow Pyomo was installed (PyPI, conda, source): pip\r\nSolver (if applicable): SCIP\r\n\r\n```console\r\n$ scip --version\r\n\r\nSCIP version 8.0.0 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: SoPlex 6.0.0] [GitHash: a740f0891e]\r\nCopyright (C) 2002-2021 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)\r\n\r\nExternal libraries: \r\n  SoPlex 6.0.0         Linear Programming Solver developed at Zuse Institute Berlin (soplex.zib.de) [GitHash: 71a5873d]\r\n  CppAD 20180000.0     Algorithmic Differentiation of C++ algorithms developed by B. Bell (github.com/coin-or/CppAD)\r\n  ZLIB 1.2.11          General purpose compression library by J. Gailly and M. Adler (zlib.net)\r\n  GMP 6.2.1            GNU Multiple Precision Arithmetic Library developed by T. Granlund (gmplib.org)\r\n  ZIMPL 3.5.1          Zuse Institute Mathematical Programming Language developed by T. Koch (zimpl.zib.de)\r\n  AMPL/MP 4e2d45c4     AMPL .nl file reader library (github.com/ampl/mp)\r\n  PaPILO 2.0.0         parallel presolve for integer and linear optimization (github.com/scipopt/papilo) [GitHash: 76cafc1]\r\n  bliss 0.73p          Computing Graph Automorphism Groups by T. Junttila and P. Kaski (www.tcs.hut.fi/Software/bliss/)\r\n  Ipopt 3.13.2         Interior Point Optimizer developed by A. Waechter et.al. (github.com/coin-or/Ipopt)\r\n\r\nCompiler: gcc 9.3.0\r\n\r\nBuild options:\r\n ARCH=x86_64\r\n OSTYPE=Linux-4.19.0-18-amd64\r\n COMP=GNU 9.3.0\r\n BUILD=Release\r\n DEBUGSOL=OFF\r\n EXPRINT=cppad\r\n SYM=bliss\r\n GMP=ON\r\n IPOPT=ON\r\n WORHP=OFF\r\n LPS=spx\r\n LPSCHECK=OFF\r\n NOBLKBUFMEM=OFF\r\n NOBLKMEM=OFF\r\n NOBUFMEM=OFF\r\n THREADSAFE=ON\r\n READLINE=off\r\n SANITIZE_ADDRESS=OFF\r\n SANITIZE_MEMORY=OFF\r\n SANITIZE_UNDEFINED=OFF\r\n SANITIZE_THREAD=OFF\r\n SHARED=ON\r\n VERSION=8.0.0.0\r\n API_VERSION=104\r\n ZIMPL=ON\r\n ZLIB=ON\r\n```\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2447/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2447/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2446", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2446/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2446/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2446/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2446", "id": 1283800761, "node_id": "I_kwDOA5FfHs5MhT65", "number": 2446, "title": "Issue running pyomo via GAMS (using idaes models)", "user": {"login": "MAZamarripa", "id": 24570008, "node_id": "MDQ6VXNlcjI0NTcwMDA4", "avatar_url": "https://avatars.githubusercontent.com/u/24570008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MAZamarripa", "html_url": "https://github.com/MAZamarripa", "followers_url": "https://api.github.com/users/MAZamarripa/followers", "following_url": "https://api.github.com/users/MAZamarripa/following{/other_user}", "gists_url": "https://api.github.com/users/MAZamarripa/gists{/gist_id}", "starred_url": "https://api.github.com/users/MAZamarripa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MAZamarripa/subscriptions", "organizations_url": "https://api.github.com/users/MAZamarripa/orgs", "repos_url": "https://api.github.com/users/MAZamarripa/repos", "events_url": "https://api.github.com/users/MAZamarripa/events{/privacy}", "received_events_url": "https://api.github.com/users/MAZamarripa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-06-24T14:09:16Z", "updated_at": "2022-06-28T18:24:58Z", "closed_at": "2022-06-28T13:39:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\nPyomo GAMS writer is failing to convert IDAES models to GAMS code. \r\npotential issues: expressions are not included in the GAMS writer (example below \"func_tau\" showing error $140 \"unknown symbol\"\r\n\r\nI get these errors:\r\n      34  c1.. x1 - ((647.096/func_tau((222.03374024716794), (101.325))) -\r\n      (647.096/func_tau((0.05550843506179198*x2), (0.001*x3)))) =e= 0 ;\r\n    ****                             $140,145              $8,37,409 ****   8\r\n    ')' expected ****  37  '=l=' or '=e=' or '=g=' operator expected **** 140\r\n    Unknown symbol **** 145  Set identifier or quoted element expected ****\r\n    409  Unrecognizable item - skip to find a new statement ****\r\n    looking for a ';' or a key word to get started again\r\n      35  c2.. x4 - ((647.096/func_tau((0.05550843506179198*x5), (0.001*x6)))\r\n      - (647.096/func_tau((194.27952271627194), (101.325)))) =e= 0 ;\r\n    ****                               $145                $8  $8,37,409 ****\r\n    8  ')' expected ****  37  '=l=' or '=e=' or '=g=' operator expected ****\r\n    145  Set identifier or quoted element expected **** 409  Unrecognizable\r\n    item - skip to find a new statement ****        looking for a ';' or a key\r\n    word to get started again\r\n      44  c11.. GAMS_OBJECTIVE =e= x11  ==  1 ;\r\n    ****                                 $119 **** 119  Number (primary)\r\n    expected\r\n      77  SOLVE GAMS_MODEL USING nlp minimizing GAMS_OBJECTIVE;\r\n    ****                                                      $257 **** 257\r\n    Solve statement not checked because of previous errors\r\n     119  put c1 c1.l c1.m /;\r\n    ****            $141 **** 141  Symbol declared but no values have been\r\n    assigned. Check for missing ****         data definition, assignment, data\r\n    loading or implicit assignment ****         via a solve statement. ****\r\n    A wild shot: You may have spurious commas in the explanatory ****\r\n    text of a declaration. Check symbol reference list.\r\n     120  put c2 c2.l c2.m /;\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\nrun example attached (run_heat_exchanger.py)\r\n\r\n\r\n### Error Message\r\n\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\n$ # Output message here, including entire stack trace, if available\r\n```\r\nTraceback (most recent call last):\r\n  File \".\\run_heat_exchanger.py\", line 157, in <module>\r\n    add_options=['gams_model.optfile=1;'])\r\n  File \"C:\\Users\\ZAMARRIM\\.conda\\envs\\idaes\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\GAMS.py\", line 845, in solve\r\n    raise RuntimeError(\"GAMS encountered an error during solve. \"\r\nRuntimeError: GAMS encountered an error during solve. Check listing file for details.\r\n### Information on your system\r\n\r\nPyomo version: 6.4.0\r\nPython version: 3.7.13\r\nOperating system: Windows 10\r\nHow Pyomo was installed (PyPI, conda, source): via idaes extensions (I will guess via conda)\r\n\r\nSolver (if applicable): GAMS\r\nRelease: GAMS Studio 1.10.2 64 bit\r\nBuild Date: May 13 2022 14:35:10\r\nGAMS Release: 39.1.1 dbf03b78 WEX-WEI x86 64bit/MS Windows\r\nRelease Date: 2022         \r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\nthe attachment includes an idaes model that can be used to replicate the issue.\r\n[run_heat_exchanger.zip](https://github.com/Pyomo/pyomo/files/8976703/run_heat_exchanger.zip)\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\nThere are other issues that I observed during testing but cannot replicate with the small example. \r\n\r\n**Issue with Baron solver:**  failing to run Baron solver (see below) \r\n For information on BARON, see https://minlp.com/about-baron\r\nERROR: Solver (baron) returned non-zero return code (3)\r\nERROR: See the solver log above for diagnostic information.\r\nTraceback (most recent call last):\r\n  File \"c:/Users/ZAMARRIM/Documents/IDAES2/idaes_examples_run/run_heat_exchanger.py\", line 164, in <module>\r\n    results = solver.solve(m, tee=True)\r\n  File \"C:\\Users\\ZAMARRIM\\.conda\\envs\\idaes\\lib\\site-packages\\pyomo\\opt\\base\\solvers.py\", line 596, in solve\r\n    \"Solver (%s) did not exit normally\" % self.name)\r\npyomo.common.errors.ApplicationError: Solver (baron) did not exit normally\r\n\r\n\r\n**Issue with pyomo model:** The pyomo model is running in GAMS (solving to optimal) but failing to return variable values from GAMS to Pyomo\r\n\r\n--- DICOPT: Best integer solution found: 367758.749140\r\n--- Reading solution for model GAMS_MODEL\r\n--- Executing after solve: elapsed 0:00:25.021\r\n--- model.gms(277999) 90 Mb\r\n--- model.gms(287562) 90 Mb\r\n--- model.gms(403886) 90 Mb\r\n--- model.gms(417031) 90 Mb\r\n--- Putfile results C:\\Users\\ZAMARRIM\\Documents\\IDAES2\\idaes_examples_run\\temp\\results.dat\r\n--- Putfile statresults C:\\Users\\ZAMARRIM\\Documents\\IDAES2\\idaes_examples_run\\temp\\resultsstat.dat\r\n*** Status: Normal completion\r\n--- model.gms(417031) 86 Mb\r\n--- Job model.gms Stop 06/24/22 10:03:30 elapsed 0:00:25.265\r\n\r\nGAMS WORKING DIRECTORY: temp\r\n\r\nTraceback (most recent call last):\r\n  File \"c:/Users/ZAMARRIM/Documents/Github/project-pareto/pareto/strategic_water_management/run_strategic_model.py\", line 139, in <module>\r\n    solve_model(model=strategic_model, options=options)\r\n  File \"c:\\users\\zamarrim\\documents\\github\\project-pareto\\pareto\\strategic_water_management\\strategic_produced_water_optimization.py\", line 7509, in solve_model\r\n    solve_MINLP_quality(model, opt)\r\n  File \"c:\\users\\zamarrim\\documents\\github\\project-pareto\\pareto\\strategic_water_management\\strategic_produced_water_optimization.py\", line 7126, in solve_MINLP_quality\r\n    results = SolverFactory(solver_source).solve(\r\n  File \"C:\\Users\\ZAMARRIM\\.conda\\envs\\pareto\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\GAMS.py\", line 852, in solve\r\n    model_soln, stat_vars = self._parse_dat_results(\r\n  File \"C:\\Users\\ZAMARRIM\\.conda\\envs\\pareto\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\GAMS.py\", line 1222, in _parse_dat_results\r\n    **stat_vars[items[0]] = float(items[1])\r\nIndexError: list index out of range**\r\n(idaes) PS C:\\Users\\ZAMARRIM\\Documents\\IDA", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2446/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2441", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2441/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2441/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2441/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2441", "id": 1279300643, "node_id": "I_kwDOA5FfHs5MQJQj", "number": 2441, "title": "Unknown attribute `time' when using APPSI IPOPT", "user": {"login": "makansij", "id": 8031047, "node_id": "MDQ6VXNlcjgwMzEwNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/8031047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/makansij", "html_url": "https://github.com/makansij", "followers_url": "https://api.github.com/users/makansij/followers", "following_url": "https://api.github.com/users/makansij/following{/other_user}", "gists_url": "https://api.github.com/users/makansij/gists{/gist_id}", "starred_url": "https://api.github.com/users/makansij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/makansij/subscriptions", "organizations_url": "https://api.github.com/users/makansij/orgs", "repos_url": "https://api.github.com/users/makansij/repos", "events_url": "https://api.github.com/users/makansij/events{/privacy}", "received_events_url": "https://api.github.com/users/makansij/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-06-22T01:06:13Z", "updated_at": "2022-10-11T18:59:58Z", "closed_at": "2022-10-11T18:59:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nWhen solving using IPOPT, it solves successfully, but when loading the results, it checks for timing data in `pyros_algorithm_methods.py`, and then doesn't find them so it barfs.  We should handle this more gracefully.\r\n\r\n### Steps to reproduce the issue\r\nRun the code below:\r\n```\r\n# === Required import ===\r\nimport pyomo.kernel as pmo\r\nimport numpy as np\r\nimport pyomo.environ as pyo\r\nimport pyomo.contrib.pyros as pyros\r\n\r\npyros_solver = pyo.SolverFactory(\"pyros\")\r\nm = pyo.ConcreteModel()\r\nm.L = pyo.Var(within=pyo.Reals)\r\n\r\nn=3\r\nm.add_component('x1', pyo.Param(range(n), initialize=x_0_init, mutable=True))\r\n\r\ndef expression_1(m, i):\r\n    return 0 <= m.x1[i]\r\n\r\nfn_1 = m.x1[0]**2 + m.L\r\nfn_2 = m.x1[0]**2 + m.L - m.x1[1]\r\nm.obj = pyo.Objective(expr = fn_1, sense = pyo.minimize)\r\nm.c1 = pyo.Constraint(expr = 0 <= fn_2)\r\nm.c_rule = pyo.Constraint(range(n), rule = expression_1)\r\nnew = m.clone()\r\nuncertain_parameters = [m.x1] # We can pass IndexedParams this way to PyROS, or as an expanded list per index\r\nrelative_deviation = 0.9\r\nnominal_values = {0:1, 1:1, 2:0.5} \r\nbounds = [(nominal_values[i] - relative_deviation*nominal_values[i],\r\n              nominal_values[i] + relative_deviation*nominal_values[i])\r\n              for i in range(len(nominal_values))]\r\n\r\nbox_uncertainty_set = pyros.BoxSet(bounds=bounds)\r\n\r\nsolvername = 'appsi_ipopt'\r\nipopt_solver = pyo.SolverFactory(solvername)\r\n\r\n\r\nlocal_solver = ipopt_solver\r\nglobal_solver = ipopt_solver\r\n\r\nfirst_stage_variables =[m.L]\r\nsecond_stage_variables = []\r\n\r\nresults_1 = pyros_solver.solve(model = m,\r\n                                   first_stage_variables = first_stage_variables,\r\n                                   second_stage_variables = second_stage_variables,\r\n                                   uncertain_params = uncertain_parameters,\r\n                                   uncertainty_set = box_uncertainty_set,\r\n                                   local_solver = local_solver,\r\n                                   global_solver= global_solver,\r\n                                   tee=True,\r\n                                   options = {\r\n                                      \"objective_focus\": pyros.ObjectiveType.worst_case,\r\n                                      \"solve_master_globally\": True,\r\n                                      \"load_solution\":False\r\n                                    })\r\n```\r\n\r\n### Error Message\r\nHere's the stack trace:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-7-c7c5873063e3> in <module>\r\n     58                                         \"objective_focus\": pyros.ObjectiveType.worst_case,\r\n     59                                         \"solve_master_globally\": True,\r\n---> 60                                         \"load_solution\":False\r\n     61                                       })\r\n     62 else:\r\n\r\n/usr/local/lib/python3.7/site-packages/pyomo/contrib/pyros/pyros.py in solve(self, model, first_stage_variables, second_stage_variables, uncertain_params, uncertainty_set, local_solver, global_solver, **kwds)\r\n    431 \r\n    432             # === Solve and load solution into model\r\n--> 433             pyros_soln, final_iter_separation_solns = ROSolver_iterative_solve(model_data, config)\r\n    434 \r\n    435 \r\n\r\n/usr/local/lib/python3.7/site-packages/pyomo/contrib/pyros/pyros_algorithm_methods.py in ROSolver_iterative_solve(model_data, config)\r\n    170         #timing_data.total_master_solve_time += get_time_from_solver(master_soln.results)\r\n    171 \r\n--> 172         if k > 0:  # master feas problem not solved for iteration 0\r\n    173             #timing_data.total_master_solve_time += get_time_from_solver(master_soln.feasibility_problem_results)\r\n    174             pass\r\n\r\n/usr/local/lib/python3.7/site-packages/pyomo/contrib/pyros/separation_problem_methods.py in solve_separation_problem(model_data, config)\r\n    325                                 local_solve_time += get_time_from_solver(s.results)\r\n    326                     else:\r\n--> 327                         local_solve_time += get_time_from_solver(solve_data.results)\r\n    328 \r\n    329                 # === Terminate for timing\r\n\r\n/usr/local/lib/python3.7/site-packages/pyomo/contrib/pyros/util.py in get_time_from_solver(results)\r\n    181                 raise ValueError(\"Accessing the time for this type of solver is not supported by get_time_from_solver.\")\r\n    182         else:\r\n--> 183             return results.solver.time\r\n    184     else:\r\n    185         return results.solver.time\r\n\r\n/usr/local/lib/python3.7/site-packages/pyomo/opt/results/container.py in __getattr__(self, name)\r\n    173         if len(self) == 0:\r\n    174             self.add()\r\n--> 175         return getattr(self._list[0], name)\r\n    176 \r\n    177     def __setattr__(self,name,val):\r\n\r\n/usr/local/lib/python3.7/site-packages/pyomo/opt/results/container.py in __getattr__(self, name)\r\n    282         except Exception:\r\n    283             pass\r\n--> 284         raise AttributeError(\"Unknown attribute `\"+str(name)+\"' for object with type \"+str(type(self)))\r\n    285 \r\n    286     def __setattr__(self,name,val):\r\n\r\nAttributeError: Unknown attribute `time' for object with type <class 'pyomo.opt.results.solver.SolverInformation'>\r\n```\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2441/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2440", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2440/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2440/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2440/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2440", "id": 1278662535, "node_id": "I_kwDOA5FfHs5MNteH", "number": 2440, "title": "GAMS put file output with GAMS version >= 39", "user": {"login": "renkekuhlmann", "id": 24522546, "node_id": "MDQ6VXNlcjI0NTIyNTQ2", "avatar_url": "https://avatars.githubusercontent.com/u/24522546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/renkekuhlmann", "html_url": "https://github.com/renkekuhlmann", "followers_url": "https://api.github.com/users/renkekuhlmann/followers", "following_url": "https://api.github.com/users/renkekuhlmann/following{/other_user}", "gists_url": "https://api.github.com/users/renkekuhlmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/renkekuhlmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/renkekuhlmann/subscriptions", "organizations_url": "https://api.github.com/users/renkekuhlmann/orgs", "repos_url": "https://api.github.com/users/renkekuhlmann/repos", "events_url": "https://api.github.com/users/renkekuhlmann/events{/privacy}", "received_events_url": "https://api.github.com/users/renkekuhlmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-06-21T15:59:09Z", "updated_at": "2022-06-30T16:29:07Z", "closed_at": "2022-06-30T16:29:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nGAMS 39 has a breaking update to the put file statements. Put statements of the form \r\nhttps://github.com/Pyomo/pyomo/blob/6fd5b8aa94b21bfe3290bdb019b33b822d51b681/pyomo/repn/plugins/gams_writer.py#L816\r\nare faulty (now) as numbers don't get printed with a leading space. Therefore you can get space-less lines, thus your parsing of those files fails. You can fix by adding spaces in between values.\r\n\r\nSame in:\r\nhttps://github.com/Pyomo/pyomo/blob/6fd5b8aa94b21bfe3290bdb019b33b822d51b681/pyomo/repn/plugins/gams_writer.py#L818\r\nhttps://github.com/Pyomo/pyomo/blob/6fd5b8aa94b21bfe3290bdb019b33b822d51b681/pyomo/repn/plugins/gams_writer.py#L829\r\n\r\n### Steps to reproduce the issue\r\n\r\nNot sure, was brought to our attention through GAMS support.\r\n\r\n### Error Message\r\n\r\nNot sure, was brought to our attention through GAMS support.\r\n\r\n### Information on your system\r\n\r\nPyomo version: latest\r\nPython version:\r\nOperating system:\r\nHow Pyomo was installed (PyPI, conda, source):\r\nSolver (if applicable): GAMS 39\r\n\r\n\r\n### Additional information\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2440/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2439", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2439/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2439/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2439/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2439", "id": 1278163003, "node_id": "I_kwDOA5FfHs5MLzg7", "number": 2439, "title": "Gurobi direct does not work with DerivativeVars", "user": {"login": "kenasa92", "id": 107914059, "node_id": "U_kgDOBm6jSw", "avatar_url": "https://avatars.githubusercontent.com/u/107914059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenasa92", "html_url": "https://github.com/kenasa92", "followers_url": "https://api.github.com/users/kenasa92/followers", "following_url": "https://api.github.com/users/kenasa92/following{/other_user}", "gists_url": "https://api.github.com/users/kenasa92/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenasa92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenasa92/subscriptions", "organizations_url": "https://api.github.com/users/kenasa92/orgs", "repos_url": "https://api.github.com/users/kenasa92/repos", "events_url": "https://api.github.com/users/kenasa92/events{/privacy}", "received_events_url": "https://api.github.com/users/kenasa92/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-06-21T09:28:07Z", "updated_at": "2022-06-21T13:40:23Z", "closed_at": "2022-06-21T13:37:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nWhen working with `DerivativeVar` from pyomo.dae and the gurobi solver, the option `SolverFactory('gurobi', solver_io='direct')` raises an error. This also happens when using the `persistent` option. However, the problem solves well for `solver_io ='lp'`\r\n\r\n\r\n### Steps to reproduce the issue\r\n\r\nThis short code snippet should reproduce the error: \r\n\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```console\r\nfrom pyomo.environ import ConcreteModel, Constraint, Var, Set, Objective, SolverFactory, Binary\r\nfrom pyomo.dae import DerivativeVar, ContinuousSet\r\n\r\n\r\ncost = [100, 50, 400, 200, 50]\r\nmodel = ConcreteModel(name='model')\r\nmodel.time_set = ContinuousSet(initialize=[0, 1, 2, 3, 4])\r\nmodel.x = Var(model.time_set, domain=Binary, initialize=1)\r\nmodel.x_dt = DerivativeVar(model.x, wrt=model.time_set)\r\n\r\n# Constraints\r\ndef cons1_rule(model, ti):\r\n    return model.x_dt[ti] >= 0\r\n\r\nmodel.cons1 = Constraint(model.time_set, rule=cons1_rule)\r\n\r\ndef cons2_rule(model):\r\n    return sum(model.x[i] for i in model.time_set) >= 2\r\n\r\nmodel.cons2 = Constraint(rule=cons2_rule)\r\n\r\n\r\ndef obj_rule(model):\r\n    return sum(model.x[ti]*ci for ti, ci in zip(model.time_set, cost))\r\n\r\nmodel.obj = Objective(rule=obj_rule)\r\n\r\n\r\nopt = SolverFactory('gurobi', solver_io='direct')\r\nopt.solve(model, tee=True)\r\n\r\n```\r\n\r\n### Error Message\r\n\r\n\r\n```console\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\testenviroment\\lib\\site-packages\\pyomo\\common\\collections\\component_map.py\", line 94, in __getitem__\r\n    return self._dict[id(obj)][1]\r\nKeyError: 2419757942488\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:/Users/test_reproduce_error_derivative_gurobi.py\", line 42, in <module>\r\n    opt.solve(model, tee=True)\r\n  File \"C:\\Users\\testenviroment\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\direct_solver.py\", line 119, in solve\r\n    self._presolve(*args, **kwds)\r\n  File \"C:\\Users\\testenviroment\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\direct_solver.py\", line 62, in _presolve\r\n    self._set_instance(model, kwds)\r\n  File \"C:\\Users\\testenviroment\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\gurobi_direct.py\", line 297, in _set_instance\r\n    self._add_block(model)\r\n  File \"C:\\Users\\testenviroment\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\gurobi_direct.py\", line 314, in _add_block\r\n    DirectOrPersistentSolver._add_block(self, block)\r\n  File \"C:\\Users\\testenviroment\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\direct_or_persistent_solver.py\", line 217, in _add_block\r\n    self._add_constraint(con)\r\n  File \"C:\\Users\\testenviroment\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\gurobi_direct.py\", line 337, in _add_constraint\r\n    self._max_constraint_degree)\r\n  File \"C:\\Users\\testenviroment\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\gurobi_direct.py\", line 242, in _get_expr_from_pyomo_expr\r\n    gurobi_expr, referenced_vars = self._get_expr_from_pyomo_repn(repn, max_degree)\r\n  File \"C:\\Users\\testenviroment\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\gurobi_direct.py\", line 221, in _get_expr_from_pyomo_repn\r\n    new_expr = gurobipy.LinExpr(repn.linear_coefs, [self._pyomo_var_to_solver_var_map[i] for i in repn.linear_vars])\r\n  File \"C:\\Users\\testenviroment\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\gurobi_direct.py\", line 221, in <listcomp>\r\n    new_expr = gurobipy.LinExpr(repn.linear_coefs, [self._pyomo_var_to_solver_var_map[i] for i in repn.linear_vars])\r\n  File \"C:\\Users\\testenviroment\\lib\\site-packages\\pyomo\\common\\collections\\component_map.py\", line 97, in __getitem__\r\n    % (id(obj), str(obj)))\r\nKeyError: \"Component with id '2419757942488': x_dt[0]\"\r\n\r\nProcess finished with exit code 1\r\n\r\n```\r\n\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.0 \r\nPython version: 3.7.7\r\nOperating system: Windows\r\nHow Pyomo was installed (PyPI, conda, source): pip\r\nSolver (if applicable): gurobi\r\n\r\n\r\n### Additional information\r\n\r\nI think this error is because direct gurobi solvers try to link `DerivativeVar` to an equivalent in gurobipy. However, this is not currently possible since in Gurobi discretizations must be made \"by hand\". \r\n\r\nI think that one possible way of solving this could be avoiding linking gurobipy and pyomo for `DerivativeVar`, since (as I understand) they are translated into constraints for the model. \r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2439/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2436", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2436/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2436/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2436/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2436", "id": 1275437524, "node_id": "I_kwDOA5FfHs5MBaHU", "number": 2436, "title": "Expression should validate rule result is an expression", "user": {"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-06-17T20:39:40Z", "updated_at": "2022-06-28T21:30:51Z", "closed_at": "2022-06-28T21:30:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Summary\r\n\r\nAs reported on the [pyomo-forum](https://groups.google.com/g/pyomo-forum/c/x3IEN3ybp9M/m/Wc3msdBTAgAJ), `Expression` components do not validate that the result from the rule is actually a valid numeric expression.  In particular, the following does not produce an error (but should):\r\n\r\n### Steps to reproduce the issue\r\n\r\n```python\r\nmodel = ConcreteModel()\r\nmodel.TIME = RangeSet(2)\r\nmodel.x = Var(model.TIME)\r\n@model.Expression(model.TIME)\r\ndef exp1(m, t):\r\n    return m.x[t]\r\n\r\n@model.Expression(model.TIME)\r\ndef exp2(m, t):\r\n    return m.exp1\r\n\r\nmodel.pprint()\r\n```\r\n\r\n```\r\n1 RangeSet Declarations\r\n    TIME : Dimen=1, Size=2, Bounds=(1, 2)\r\n        Key  : Finite : Members\r\n        None :   True :   [1:2]\r\n\r\n1 Var Declarations\r\n    x : Size=2, Index=TIME\r\n        Key : Lower : Value : Upper : Fixed : Stale : Domain\r\n          1 :  None :  None :  None : False :  True :  Reals\r\n          2 :  None :  None :  None : False :  True :  Reals\r\n\r\n2 Expression Declarations\r\n    exp1 : Size=2, Index=TIME\r\n        Key : Expression\r\n          1 :       x[1]\r\n          2 :       x[2]\r\n    exp2 : Size=2, Index=TIME\r\n        Key : Expression\r\n          1 :       exp1\r\n          2 :       exp1\r\n\r\n4 Declarations: TIME x exp1 exp2\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2436/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2435", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2435/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2435/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2435/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2435", "id": 1274534977, "node_id": "I_kwDOA5FfHs5L99xB", "number": 2435, "title": "Is `Unable to find/load CPLEX library dlopen(libcplex.dylib, 0x0001): tried: ` concerning?", "user": {"login": "makansij", "id": 8031047, "node_id": "MDQ6VXNlcjgwMzEwNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/8031047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/makansij", "html_url": "https://github.com/makansij", "followers_url": "https://api.github.com/users/makansij/followers", "following_url": "https://api.github.com/users/makansij/following{/other_user}", "gists_url": "https://api.github.com/users/makansij/gists{/gist_id}", "starred_url": "https://api.github.com/users/makansij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/makansij/subscriptions", "organizations_url": "https://api.github.com/users/makansij/orgs", "repos_url": "https://api.github.com/users/makansij/repos", "events_url": "https://api.github.com/users/makansij/events{/privacy}", "received_events_url": "https://api.github.com/users/makansij/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-06-17T03:55:53Z", "updated_at": "2022-06-17T15:44:17Z", "closed_at": "2022-06-17T15:29:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nI have a small example below of solving a single-stage Robust NLP.  You\u2019ll notice that it calls the \u201cbaron\u201d solver.  This problem returns what seems to be the a robustly optimal solution as indicated by the termination condition `pyrosTerminationCondition.robust_optimal`.   \r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\n# === Required import ===\r\nimport pyomo.kernel as pmo\r\nimport numpy as np\r\nimport pyomo.environ as pyo\r\nimport pyomo.contrib.pyros as pyros\r\n\r\n# === Instantiate the PyROS solver object ===\r\npyros_solver = pyo.SolverFactory(\"pyros\")\r\n# === Construct the Pyomo model object ===\r\nm = pyo.ConcreteModel()\r\n\r\n# === Define continuous variables ===\r\nm.x = pyo.Var(within=pyo.Reals,bounds=(0,1),initialize=0.5)\r\n\r\n# === Define parameters ===\r\nm.q_continuous = pyo.Param(initialize=0.5, mutable=True)\r\n\r\n# === Specify the objective function ===\r\nm.obj = pyo.Objective(expr= m.q_continuous*m.x, sense=pyo.minimize)\r\n\r\n# === Specify the constraints ===\r\nm.c1 = pyo.Constraint(expr= 0 <= m.q_continuous*m.x)\r\nm.c2 = pyo.Constraint(expr= 0 <= m.x)\r\n\r\n# === Specify which parameters are uncertain ===\r\nuncertain_parameters = [m.q_continuous] # We can pass IndexedParams this way to PyROS, or as an expanded list per index\r\n\r\n# === Define the pertinent data ===\r\nrelative_deviation = 0.9\r\nnominal_values = {0:1} #, 1:4.97, 2:4.97, 3:1800}\r\n\r\nbounds = [(nominal_values[i] - relative_deviation*nominal_values[i],\r\n              nominal_values[i] + relative_deviation*nominal_values[i])\r\n              for i in range(1)]\r\n\r\n\r\n\r\n# === Construct the desirable uncertainty set ===\r\nbox_uncertainty_set = pyros.BoxSet(bounds=bounds)\r\n\r\n# === Designate local and global NLP solvers ===\r\nsolvername = 'baron'\r\nsolverpath_exe = <path>\r\nbaron_solver = pyo.SolverFactory(solvername, executable=solverpath_exe)\r\n\r\nlocal_solver = baron_solver\r\nglobal_solver = baron_solver\r\n\r\n# === Designate which variables correspond to first- and second-stage degrees of freedom ===\r\nfirst_stage_variables =[m.x]\r\nsecond_stage_variables = []\r\n# The remaining variables are implicitly designated to be state variables\r\n\r\n# === Call PyROS to solve the robust optimization problem ===\r\nresults_1 = pyros_solver.solve(model = m,\r\n                                 first_stage_variables = first_stage_variables,\r\n                                 second_stage_variables = second_stage_variables,\r\n                                 uncertain_params = uncertain_parameters,\r\n                                 uncertainty_set = box_uncertainty_set,\r\n                                 local_solver = local_solver,\r\n                                 global_solver= global_solver,\r\n                                 tee=True,\r\n                                 options = {\r\n                                    \"objective_focus\": pyros.ObjectiveType.worst_case,\r\n                                    \"solve_master_globally\": True,\r\n                                    \"load_solution\":False\r\n                                  })\r\n\r\n# === Query results ===\r\ntime = results_1.time\r\niterations = results_1.iterations\r\ntermination_condition = results_1.pyros_termination_condition\r\nobjective = results_1.final_objective_value\r\n# === Print some results ===\r\nsingle_stage_final_objective = round(objective,-1)\r\nprint(\"Final objective value: %s\" % single_stage_final_objective)\r\n\r\nprint(\"PyROS termination condition: %s\" % termination_condition)\r\n\r\n```\r\n\r\n### Error Message\r\n\r\n```\r\nUnable to find/load CPLEX library dlopen(libcplex.dylib, 0x0001): tried: '/opt/intel/compilers_and_libraries_2020.4.301/mac/compiler/lib/libcplex.dylib' (no such file), '/opt/intel/compilers_and_libraries_2020.4.301/mac/compiler/lib/libcplex.dylib' (no such file), 'libcplex.dylib' (no such file)...\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2435/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2429", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2429/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2429/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2429/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2429", "id": 1268331540, "node_id": "I_kwDOA5FfHs5LmTQU", "number": 2429, "title": "Pyomo solver.solve stuck for big problem using cbc", "user": {"login": "lucazav", "id": 6104437, "node_id": "MDQ6VXNlcjYxMDQ0Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/6104437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucazav", "html_url": "https://github.com/lucazav", "followers_url": "https://api.github.com/users/lucazav/followers", "following_url": "https://api.github.com/users/lucazav/following{/other_user}", "gists_url": "https://api.github.com/users/lucazav/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucazav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucazav/subscriptions", "organizations_url": "https://api.github.com/users/lucazav/orgs", "repos_url": "https://api.github.com/users/lucazav/repos", "events_url": "https://api.github.com/users/lucazav/events{/privacy}", "received_events_url": "https://api.github.com/users/lucazav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2022-06-11T17:25:16Z", "updated_at": "2022-06-20T08:06:30Z", "closed_at": "2022-06-16T19:17:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I create my model for one product, I tried to solve it with cbc and all worked fine.\r\n\r\nThen I tried to use multiple products to build a bigger model. After 10 minutes, the model was correctly defined. But when I run the following code:\r\n\r\n```python\r\n# Solve the model\r\nsolver = SolverFactory('cbc')\r\n\r\nn_threads = os.cpu_count()\r\nsolver.options['threads'] = n_threads-1\r\n\r\n# Set a timeout after that a solution is returned\r\nsolver.options['seconds'] = solver_timeout_sec * (n_threads-1)\r\n\r\n# Set the integer tolerance. The integer feasibility tolerance determines when a fractional variable\r\n# can be considered \u201cautomatically\u201d integer during the branch-and-bound search (default 1E-7).\r\nsolver.options['integerTolerance'] = 1E-3\r\n\r\nresults = solver.solve(model, tee=True)\r\n```\r\n\r\nthe execution stuck on it without trying to solve the problem. In fact I can't see any output in the console as I can in the case of the simpler problem.\r\n\r\nAny hint? I could also privately provide the code and data to the team to find a possible bug.\r\n\r\nI'm using coincbc 2.10.5 and pyomo 6.4.1 on an Ubuntu machine.\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2429/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2427", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2427/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2427/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2427/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2427", "id": 1254965781, "node_id": "I_kwDOA5FfHs5KzUIV", "number": 2427, "title": "Inconsitency in expression generation", "user": {"login": "vova292", "id": 19894323, "node_id": "MDQ6VXNlcjE5ODk0MzIz", "avatar_url": "https://avatars.githubusercontent.com/u/19894323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vova292", "html_url": "https://github.com/vova292", "followers_url": "https://api.github.com/users/vova292/followers", "following_url": "https://api.github.com/users/vova292/following{/other_user}", "gists_url": "https://api.github.com/users/vova292/gists{/gist_id}", "starred_url": "https://api.github.com/users/vova292/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vova292/subscriptions", "organizations_url": "https://api.github.com/users/vova292/orgs", "repos_url": "https://api.github.com/users/vova292/repos", "events_url": "https://api.github.com/users/vova292/events{/privacy}", "received_events_url": "https://api.github.com/users/vova292/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-06-01T05:05:30Z", "updated_at": "2022-06-01T09:22:19Z", "closed_at": "2022-06-01T09:22:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nThe expression generation seems to behave differently if it involves a ScalarVar or a _GeneralVarData. \r\n\r\n### Steps to reproduce the issue\r\n\r\nI encountered this while using idaes, but the bug seems to be in pyomo in not in its usage in idaes. The following steps can be used\r\nto recreate it. Even though it uses idaes, it will reveal the pyomo issue\r\n\r\n\r\n```\r\n# example.py\r\nimport pandas\r\nimport pyomo.environ as pyo\r\nfrom idaes.surrogate.pysmo import kriging\r\n\r\n\r\nx = [0, 30, 50, 70, 100]\r\ny = [0, 40, 70, 80, 100]\r\n\r\ndf = pandas.DataFrame(data=zip(x, y), columns=['x', 'y'])\r\nkrg_init = kriging.KrigingModel(df)\r\nkrg_init.training()\r\n\r\nm1 = pyo.ConcreteModel()\r\nm1.v1 = pyo.ScalarVar(initialize=0)\r\nm1.s1 = pyo.Set(initialize=[0,1])\r\nm1.v2 = pyo.Var(m1.s1, initialize=0)\r\n\r\nexpr = krg_init.generate_expression([m1.v2[0]])\r\nexpr = krg_init.generate_expression([m1.v1])\r\n\r\n```\r\n\r\n### Error Message\r\n\r\n```console\r\n\r\n\r\ntests/pyomo_test/model3/test_block_temp.py:None (tests/pyomo_test/model3/test_block_temp.py)\r\ntest_block_temp.py:19: in <module>\r\n    expr = krg_init.generate_expression([m1.v1])\r\n/home/admin/.virtualenvs/empc/lib/python3.9/site-packages/idaes/surrogate/pysmo/kriging.py:551: in generate_expression\r\n    curr_term = exp(-curr_term)\r\n/home/admin/.virtualenvs/empc/lib/python3.9/site-packages/pyomo/core/expr/current.py:179: in exp\r\n    return _generate_intrinsic_function_expression(arg, 'exp', math.exp)\r\npyomo/core/expr/numeric_expr.pyx:1985: in pyomo.core.expr.numeric_expr._generate_intrinsic_function_expression\r\n    ???\r\npyomo/core/expr/numvalue.pyx:616: in pyomo.core.expr.numvalue.NumericValue.__float__\r\n    ???\r\nE   TypeError: Implicit conversion of Pyomo numeric value (- 0.5925597988832185*(0.01*v1)**2) to float is disabled.\r\nE   This error is often the result of using Pyomo components as arguments to\r\nE   one of the Python built-in math module functions when defining\r\nE   expressions. Avoid this error by using Pyomo-provided math functions or\r\nE   explicitly resolving the numeric value using the Pyomo value() function.\r\n\r\npyomo/core/expr/numvalue.pyx:616: TypeError\r\n\r\n\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.1\r\nPython version: 3.9\r\nOperating system: Debian\r\nHow Pyomo was installed (PyPI, conda, source): PyPI\r\nSolver (if applicable):\r\n\r\n\r\n### Additional information\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2427/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2417", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2417/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2417/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2417/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2417", "id": 1243733245, "node_id": "I_kwDOA5FfHs5KIdz9", "number": 2417, "title": "Transformed GDP models don't pickle with non-dill pickles", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838440520, "node_id": "MDU6TGFiZWw4Mzg0NDA1MjA=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.gdp", "name": "pyomo.gdp", "color": "a848f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-05-20T22:05:04Z", "updated_at": "2022-11-02T17:46:05Z", "closed_at": "2022-11-02T17:46:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nThe GDP transformations create weakrefs, meaning that transformed models are currently unpickleable.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2417/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2414", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2414/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2414/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2414/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2414", "id": 1243679447, "node_id": "I_kwDOA5FfHs5KIQrX", "number": 2414, "title": "Test failure in kernel with Dill 0.3.5.1", "user": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 851808904, "node_id": "MDU6TGFiZWw4NTE4MDg5MDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/testing_and_ci", "name": "testing_and_ci", "color": "ef8da4", "default": false, "description": "Any issues related to testing and/or continuous integration (e.g., github, travis, etc.)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-05-20T21:30:51Z", "updated_at": "2022-05-24T15:58:07Z", "closed_at": "2022-05-24T15:58:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Summary\r\n\r\nLooks like the latest release of Dill on May 20, 2022 has caused a test failure in pyomo/core/tests/unit/kernel/test_parameter.py. Currently seeing this test failure across all operating systems and all Python versions.\r\n\r\n### Error Message\r\n```\r\n_______________________ Test_functional_value.test_dill ________________________\r\n\r\nself = <pyomo.core.tests.unit.kernel.test_parameter.Test_functional_value testMethod=test_dill>\r\n\r\n    @unittest.skipIf(not has_dill,\r\n                     \"The dill module is not available\")\r\n    def test_dill(self):\r\n        p = parameter(1)\r\n        f = functional_value(lambda: p())\r\n        self.assertEqual(f(), 1)\r\n        fup = dill.loads(\r\n>           dill.dumps(f))\r\n\r\npyomo/core/tests/unit/kernel/test_parameter.py:190: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/dill/_dill.py:364: in dumps\r\n    dump(obj, file, protocol, byref, fmode, recurse, **kwds)#, strictio)\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/dill/_dill.py:336: in dump\r\n    Pickler(file, protocol, **_kwds).dump(obj)\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/dill/_dill.py:620: in dump\r\n    StockPickler.dump(self, obj)\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/pickle.py:437: in dump\r\n    self.save(obj)\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/pickle.py:549: in save\r\n    self.save_reduce(obj=obj, *rv)\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/pickle.py:662: in save_reduce\r\n    save(state)\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/pickle.py:504: in save\r\n    f(self, obj) # Call unbound method with explicit self\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/dill/_dill.py:1251: in save_module_dict\r\n    StockPickler.save_dict(pickler, obj)\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/pickle.py:859: in save_dict\r\n    self._batch_setitems(obj.items())\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/pickle.py:885: in _batch_setitems\r\n    save(v)\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/pickle.py:504: in save\r\n    f(self, obj) # Call unbound method with explicit self\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/dill/_dill.py:1966: in save_function\r\n    ), state), obj=obj, postproc_list=postproc_list)\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/dill/_dill.py:1159: in _save_with_postproc\r\n    pickler.save_reduce(*reduction)\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/pickle.py:637: in save_reduce\r\n    save(func)\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/pickle.py:549: in save\r\n    self.save_reduce(obj=obj, *rv)\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/pickle.py:638: in save_reduce\r\n    save(args)\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/pickle.py:504: in save\r\n    f(self, obj) # Call unbound method with explicit self\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/pickle.py:774: in save_tuple\r\n    save(element)\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/pickle.py:504: in save\r\n    f(self, obj) # Call unbound method with explicit self\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/dill/_dill.py:1770: in save_module\r\n    pickler.save_global(obj, name=\"_dill\")\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/pickle.py:952: in save_global\r\n    module_name = whichmodule(obj, name)\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/pickle.py:313: in whichmodule\r\n    if _getattribute(module, name)[0] is obj:\r\n/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/pickle.py:296: in _getattribute\r\n    obj = getattr(obj, subpath)\r\npyomo/common/dependencies.py:146: in __getattr__\r\n    return getattr(_mod, attr)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <pyomo.common.dependencies.ModuleUnavailable object at 0x7ff34e8b5cd0>\r\nattr = '_dill'\r\n\r\n    def __getattr__(self, attr):\r\n        if attr in ModuleUnavailable._getattr_raises_attributeerror:\r\n            raise AttributeError(\"'%s' object has no attribute '%s'\"\r\n                                 % (type(self).__name__, attr))\r\n>       raise DeferredImportError(self._moduleunavailable_message())\r\nE       pyomo.common.dependencies.DeferredImportError: The pympler module (an optional Pyomo dependency) failed to import: ModuleNotFoundError: No module named 'pympler'\r\n\r\npyomo/common/dependencies.py:69: DeferredImportError\r\n------- generated xml file: /home/runner/work/pyomo/pyomo/TEST-pyomo.xml -------\r\n=========================== short test summary info ============================\r\nFAILED pyomo/core/tests/unit/kernel/test_parameter.py::Test_functional_value::test_dill\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2414/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2413", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2413/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2413/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2413/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2413", "id": 1243516290, "node_id": "I_kwDOA5FfHs5KHo2C", "number": 2413, "title": "Tests failures in pyomo.contrib.community_detection with NetworkX 2.8.1", "user": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 851808904, "node_id": "MDU6TGFiZWw4NTE4MDg5MDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/testing_and_ci", "name": "testing_and_ci", "color": "ef8da4", "default": false, "description": "Any issues related to testing and/or continuous integration (e.g., github, travis, etc.)"}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-05-20T19:07:11Z", "updated_at": "2022-05-23T13:51:09Z", "closed_at": "2022-05-23T13:51:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Summary\r\n\r\nLooks like the latest release of NetworkX on May 18, 2022 has caused some test failures in `pyomo.contrib.community_detection`. Currently seeing test failures across all operating systems and all Python versions 3.8 and above. \r\n\r\n### Error Message\r\n```\r\n=================================== FAILURES ===================================\r\n_____________________ TestDecomposition.test_communities_3 _____________________\r\n\r\nself = <pyomo.contrib.community_detection.tests.test_detection.TestDecomposition testMethod=test_communities_3>\r\n\r\n    def test_communities_3(self):\r\n        m_class = LP_unbounded()\r\n        m_class._generate_model()\r\n        model = m = m_class.model\r\n    \r\n>       test_community_maps, test_partitions = _collect_community_maps(model)\r\n\r\npyomo/contrib/community_detection/tests/test_detection.py:177: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\npyomo/contrib/community_detection/tests/test_detection.py:820: in _collect_community_maps\r\n    latest_community_map = detect_communities(model, type_of_community_map=community_map_type,\r\npyomo/contrib/community_detection/detection.py:107: in detect_communities\r\n    model_graph, number_component_map, constraint_variable_map = generate_model_graph(\r\npyomo/contrib/community_detection/community_graph.py:144: in generate_model_graph\r\n    projected_model_graph = nx.bipartite.weighted_projected_graph(bipartite_model_graph, graph_nodes)\r\n<class 'networkx.utils.decorators.argmap'> compilation 8:4: in argmap_weighted_projected_graph_5\r\n    ???\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nB = <networkx.classes.graph.Graph object at 0x12f49cd90>, nodes = {0, 1}\r\nratio = False\r\n\r\n    @not_implemented_for(\"multigraph\")\r\n    def weighted_projected_graph(B, nodes, ratio=False):\r\n        r\"\"\"Returns a weighted projection of B onto one of its node sets.\r\n    \r\n        The weighted projected graph is the projection of the bipartite\r\n        network B onto the specified nodes with weights representing the\r\n        number of shared neighbors or the ratio between actual shared\r\n        neighbors and possible shared neighbors if ``ratio is True`` [1]_.\r\n        The nodes retain their attributes and are connected in the resulting\r\n        graph if they have an edge to a common node in the original graph.\r\n    \r\n        Parameters\r\n        ----------\r\n        B : NetworkX graph\r\n            The input graph should be bipartite.\r\n    \r\n        nodes : list or iterable\r\n            Distinct nodes to project onto (the \"bottom\" nodes).\r\n    \r\n        ratio: Bool (default=False)\r\n            If True, edge weight is the ratio between actual shared neighbors\r\n            and maximum possible shared neighbors (i.e., the size of the other\r\n            node set). If False, edges weight is the number of shared neighbors.\r\n    \r\n        Returns\r\n        -------\r\n        Graph : NetworkX graph\r\n           A graph that is the projection onto the given nodes.\r\n    \r\n        Examples\r\n        --------\r\n        >>> from networkx.algorithms import bipartite\r\n        >>> B = nx.path_graph(4)\r\n        >>> G = bipartite.weighted_projected_graph(B, [1, 3])\r\n        >>> list(G)\r\n        [1, 3]\r\n        >>> list(G.edges(data=True))\r\n        [(1, 3, {'weight': 1})]\r\n        >>> G = bipartite.weighted_projected_graph(B, [1, 3], ratio=True)\r\n        >>> list(G.edges(data=True))\r\n        [(1, 3, {'weight': 0.5})]\r\n    \r\n        Notes\r\n        -----\r\n        No attempt is made to verify that the input graph B is bipartite, or that\r\n        the input nodes are distinct. However, if the length of the input nodes is\r\n        greater than or equal to the nodes in the graph B, an exception is raised.\r\n        If the nodes are not distinct but don't raise this error, the output weights\r\n        will be incorrect.\r\n        The graph and node properties are (shallow) copied to the projected graph.\r\n    \r\n        See :mod:`bipartite documentation <networkx.algorithms.bipartite>`\r\n        for further details on how bipartite graphs are handled in NetworkX.\r\n    \r\n        See Also\r\n        --------\r\n        is_bipartite,\r\n        is_bipartite_node_set,\r\n        sets,\r\n        collaboration_weighted_projected_graph,\r\n        overlap_weighted_projected_graph,\r\n        generic_weighted_projected_graph\r\n        projected_graph\r\n    \r\n        References\r\n        ----------\r\n        .. [1] Borgatti, S.P. and Halgin, D. In press. \"Analyzing Affiliation\r\n            Networks\". In Carrington, P. and Scott, J. (eds) The Sage Handbook\r\n            of Social Network Analysis. Sage Publications.\r\n        \"\"\"\r\n        if B.is_directed():\r\n            pred = B.pred\r\n            G = nx.DiGraph()\r\n        else:\r\n            pred = B.adj\r\n            G = nx.Graph()\r\n        G.graph.update(B.graph)\r\n        G.add_nodes_from((n, B.nodes[n]) for n in nodes)\r\n        n_top = float(len(B) - len(nodes))\r\n    \r\n        if n_top < 1:\r\n>           raise NetworkXAlgorithmError(\r\n                f\"the size of the nodes to project onto ({len(nodes)}) is >= the graph size ({len(B)}).\\n\"\r\n                \"They are either not a valid bipartite partition or contain duplicates\"\r\n            )\r\nE           networkx.exception.NetworkXAlgorithmError: the size of the nodes to project onto (2) is >= the graph size (2).\r\nE           They are either not a valid bipartite partition or contain duplicates\r\n\r\n../../../hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/networkx/algorithms/bipartite/projection.py:200: NetworkXAlgorithmError\r\n------------------------------ Captured log call -------------------------------\r\nWARNING  pyomo.contrib.community_detection:event_log.py:118 No constraints found in the model\r\nWARNING  pyomo.contrib.community_detection:event_log.py:134 No nodes were created for the graph (based on the model and the given parameters)\r\nWARNING  pyomo.contrib.community_detection:event_log.py:136 No edges were created for the graph (based on the model and the given parameters)\r\nERROR    pyomo.contrib.community_detection:detection.py:186 in detect_communities: Empty community map was returned\r\nWARNING  pyomo.contrib.community_detection:event_log.py:118 No constraints found in the model\r\nWARNING  pyomo.contrib.community_detection:event_log.py:136 No edges were created for the graph (based on the model and the given parameters)\r\nWARNING  pyomo.contrib.community_detection:detection.py:188 Community detection found that with the given parameters, the model could not be decomposed - only one community was found\r\nWARNING  pyomo.contrib.community_detection:event_log.py:118 No constraints found in the model\r\nWARNING  pyomo.contrib.community_detection:event_log.py:134 No nodes were created for the graph (based on the model and the given parameters)\r\nWARNING  pyomo.contrib.community_detection:event_log.py:136 No edges were created for the graph (based on the model and the given parameters)\r\nERROR    pyomo.contrib.community_detection:detection.py:186 in detect_communities: Empty community map was returned\r\nWARNING  pyomo.contrib.community_detection:event_log.py:118 No constraints found in the model\r\nWARNING  pyomo.contrib.community_detection:event_log.py:136 No edges were created for the graph (based on the model and the given parameters)\r\nWARNING  pyomo.contrib.community_detection:detection.py:188 Community detection found that with the given parameters, the model could not be decomposed - only one community was found\r\nWARNING  pyomo.contrib.community_detection:event_log.py:118 No constraints found in the model\r\nWARNING  pyomo.contrib.community_detection:event_log.py:134 No nodes were created for the graph (based on the model and the given parameters)\r\nWARNING  pyomo.contrib.community_detection:event_log.py:136 No edges were created for the graph (based on the model and the given parameters)\r\nERROR    pyomo.contrib.community_detection:detection.py:186 in detect_communities: Empty community map was returned\r\nWARNING  pyomo.contrib.community_detection:event_log.py:118 No constraints found in the model\r\nWARNING  pyomo.contrib.community_detection:event_log.py:136 No edges were created for the graph (based on the model and the given parameters)\r\nWARNING  pyomo.contrib.community_detection:detection.py:188 Community detection found that with the given parameters, the model could not be decomposed - only one community was found\r\nWARNING  pyomo.contrib.community_detection:event_log.py:118 No constraints found in the model\r\nWARNING  pyomo.contrib.community_detection:event_log.py:134 No nodes were created for the graph (based on the model and the given parameters)\r\nWARNING  pyomo.contrib.community_detection:event_log.py:136 No edges were created for the graph (based on the model and the given parameters)\r\nERROR    pyomo.contrib.community_detection:detection.py:186 in detect_communities: Empty community map was returned\r\nWARNING  pyomo.contrib.community_detection:event_log.py:118 No constraints found in the model\r\nWARNING  pyomo.contrib.community_detection:event_log.py:136 No edges were created for the graph (based on the model and the given parameters)\r\nWARNING  pyomo.contrib.community_detection:detection.py:188 Community detection found that with the given parameters, the model could not be decomposed - only one community was found\r\nWARNING  pyomo.contrib.community_detection:event_log.py:118 No constraints found in the model\r\nWARNING  pyomo.contrib.community_detection:event_log.py:136 No edges were created for the graph (based on the model and the given parameters)\r\nWARNING  pyomo.contrib.community_detection:event_log.py:118 No constraints found in the model\r\nWARNING  pyomo.contrib.community_detection:detection.py:188 Community detection found that with the given parameters, the model could not be decomposed - only one community was found\r\n_____________________ TestDecomposition.test_communities_8 _____________________\r\n\r\nself = <pyomo.contrib.community_detection.tests.test_detection.TestDecomposition testMethod=test_communities_8>\r\n\r\n    def test_communities_8(self):\r\n        output = StringIO()\r\n    \r\n        with LoggingIntercept(output, 'pyomo.contrib.community_detection', logging.ERROR):\r\n>           detect_communities(ConcreteModel())\r\n\r\npyomo/contrib/community_detection/tests/test_detection.py:576: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\npyomo/contrib/community_detection/detection.py:107: in detect_communities\r\n    model_graph, number_component_map, constraint_variable_map = generate_model_graph(\r\npyomo/contrib/community_detection/community_graph.py:144: in generate_model_graph\r\n    projected_model_graph = nx.bipartite.weighted_projected_graph(bipartite_model_graph, graph_nodes)\r\n<class 'networkx.utils.decorators.argmap'> compilation 8:4: in argmap_weighted_projected_graph_5\r\n    ???\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nB = <networkx.classes.graph.Graph object at 0x12fee3820>, nodes = set()\r\nratio = False\r\n\r\n    @not_implemented_for(\"multigraph\")\r\n    def weighted_projected_graph(B, nodes, ratio=False):\r\n        r\"\"\"Returns a weighted projection of B onto one of its node sets.\r\n    \r\n        The weighted projected graph is the projection of the bipartite\r\n        network B onto the specified nodes with weights representing the\r\n        number of shared neighbors or the ratio between actual shared\r\n        neighbors and possible shared neighbors if ``ratio is True`` [1]_.\r\n        The nodes retain their attributes and are connected in the resulting\r\n        graph if they have an edge to a common node in the original graph.\r\n    \r\n        Parameters\r\n        ----------\r\n        B : NetworkX graph\r\n            The input graph should be bipartite.\r\n    \r\n        nodes : list or iterable\r\n            Distinct nodes to project onto (the \"bottom\" nodes).\r\n    \r\n        ratio: Bool (default=False)\r\n            If True, edge weight is the ratio between actual shared neighbors\r\n            and maximum possible shared neighbors (i.e., the size of the other\r\n            node set). If False, edges weight is the number of shared neighbors.\r\n    \r\n        Returns\r\n        -------\r\n        Graph : NetworkX graph\r\n           A graph that is the projection onto the given nodes.\r\n    \r\n        Examples\r\n        --------\r\n        >>> from networkx.algorithms import bipartite\r\n        >>> B = nx.path_graph(4)\r\n        >>> G = bipartite.weighted_projected_graph(B, [1, 3])\r\n        >>> list(G)\r\n        [1, 3]\r\n        >>> list(G.edges(data=True))\r\n        [(1, 3, {'weight': 1})]\r\n        >>> G = bipartite.weighted_projected_graph(B, [1, 3], ratio=True)\r\n        >>> list(G.edges(data=True))\r\n        [(1, 3, {'weight': 0.5})]\r\n    \r\n        Notes\r\n        -----\r\n        No attempt is made to verify that the input graph B is bipartite, or that\r\n        the input nodes are distinct. However, if the length of the input nodes is\r\n        greater than or equal to the nodes in the graph B, an exception is raised.\r\n        If the nodes are not distinct but don't raise this error, the output weights\r\n        will be incorrect.\r\n        The graph and node properties are (shallow) copied to the projected graph.\r\n    \r\n        See :mod:`bipartite documentation <networkx.algorithms.bipartite>`\r\n        for further details on how bipartite graphs are handled in NetworkX.\r\n    \r\n        See Also\r\n        --------\r\n        is_bipartite,\r\n        is_bipartite_node_set,\r\n        sets,\r\n        collaboration_weighted_projected_graph,\r\n        overlap_weighted_projected_graph,\r\n        generic_weighted_projected_graph\r\n        projected_graph\r\n    \r\n        References\r\n        ----------\r\n        .. [1] Borgatti, S.P. and Halgin, D. In press. \"Analyzing Affiliation\r\n            Networks\". In Carrington, P. and Scott, J. (eds) The Sage Handbook\r\n            of Social Network Analysis. Sage Publications.\r\n        \"\"\"\r\n        if B.is_directed():\r\n            pred = B.pred\r\n            G = nx.DiGraph()\r\n        else:\r\n            pred = B.adj\r\n            G = nx.Graph()\r\n        G.graph.update(B.graph)\r\n        G.add_nodes_from((n, B.nodes[n]) for n in nodes)\r\n        n_top = float(len(B) - len(nodes))\r\n    \r\n        if n_top < 1:\r\n>           raise NetworkXAlgorithmError(\r\n                f\"the size of the nodes to project onto ({len(nodes)}) is >= the graph size ({len(B)}).\\n\"\r\n                \"They are either not a valid bipartite partition or contain duplicates\"\r\n            )\r\nE           networkx.exception.NetworkXAlgorithmError: the size of the nodes to project onto (0) is >= the graph size (0).\r\nE           They are either not a valid bipartite partition or contain duplicates\r\n\r\n../../../hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/networkx/algorithms/bipartite/projection.py:200: NetworkXAlgorithmError\r\n------ generated xml file: /Users/runner/work/pyomo/pyomo/TEST-pyomo.xml -------\r\n=========================== short test summary info ============================\r\nFAILED pyomo/contrib/community_detection/tests/test_detection.py::TestDecomposition::test_communities_3\r\nFAILED pyomo/contrib/community_detection/tests/test_detection.py::TestDecomposition::test_communities_8\r\n\r\n```\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2413/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2411", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2411/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2411/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2411/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2411", "id": 1241629532, "node_id": "I_kwDOA5FfHs5KAcNc", "number": 2411, "title": "Pickling logical to linear transformed model fails", "user": {"login": "loke202", "id": 35227595, "node_id": "MDQ6VXNlcjM1MjI3NTk1", "avatar_url": "https://avatars.githubusercontent.com/u/35227595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loke202", "html_url": "https://github.com/loke202", "followers_url": "https://api.github.com/users/loke202/followers", "following_url": "https://api.github.com/users/loke202/following{/other_user}", "gists_url": "https://api.github.com/users/loke202/gists{/gist_id}", "starred_url": "https://api.github.com/users/loke202/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loke202/subscriptions", "organizations_url": "https://api.github.com/users/loke202/orgs", "repos_url": "https://api.github.com/users/loke202/repos", "events_url": "https://api.github.com/users/loke202/events{/privacy}", "received_events_url": "https://api.github.com/users/loke202/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838440520, "node_id": "MDU6TGFiZWw4Mzg0NDA1MjA=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.gdp", "name": "pyomo.gdp", "color": "a848f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-05-19T11:27:46Z", "updated_at": "2022-05-24T18:37:46Z", "closed_at": "2022-05-24T18:37:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\n<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `pyomo solve` to optimize a model and ...\" -->\r\n\r\n(dill) pickling a transformed gdp model containing a disjunction fails.\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```console\r\n$ python picktest.py\r\n```\r\n\r\n```python\r\n# picktest.py\r\n\r\nimport dill as dill\r\n\r\nfrom pyomo.environ import *\r\nfrom pyomo.gdp import *\r\n\r\nmodel = ConcreteModel()\r\n\r\nmodel.x = Var(bounds=(0,5))\r\nmodel.y = Var(bounds=(0,5))\r\n\r\n# Two conditions\r\ndef _d(disjunct, flag):\r\n   model = disjunct.model()\r\n   if flag:\r\n      # x == 0\r\n      disjunct.c = Constraint(expr=model.x == 0)\r\n   else:\r\n      # y == 0\r\n      disjunct.c = Constraint(expr=model.y == 0)\r\nmodel.d = Disjunct([0,1], rule=_d)\r\n\r\n# Define the disjunction\r\ndef _c(model):\r\n   return [model.d[0], model.d[1]]\r\nmodel.c = Disjunction(rule=_c)\r\n\r\n# works\r\nwith open('test_gdp_pickle', \"wb\") as f:\r\n   dill.dump(model, f)\r\n\r\nwith open('test_gdp_pickle', \"rb\") as f:\r\n   dill.load(f)\r\n\r\nTransformationFactory('gdp.bigm').apply_to(model)\r\n\r\n# fails\r\nwith open('test_gdp_pickle', \"wb\") as f:\r\n   dill.dump(model, f)\r\n\r\nwith open('test_gdp_pickle', \"rb\") as f:\r\n   dill.load(f)\r\n```\r\n\r\n### Error Message\r\n\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\n$ Traceback (most recent call last):\r\n  File \"/mnt/c/Users/Loke/tex/masters/mathprog/RRI/RRI/picktest.py\", line 40, in <module>\r\n    dill.dump(model, f)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/site-packages/dill/_dill.py\", line 276, in dump\r\n    Pickler(file, protocol, **_kwds).dump(obj)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/site-packages/dill/_dill.py\", line 498, in dump\r\n    StockPickler.dump(self, obj)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 487, in dump\r\n    self.save(obj)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 603, in save\r\n    self.save_reduce(obj=obj, *rv)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 717, in save_reduce\r\n    save(state)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 560, in save\r\n    f(self, obj)  # Call unbound method with explicit self\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/site-packages/dill/_dill.py\", line 990, in save_module_dict\r\n    StockPickler.save_dict(pickler, obj)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 972, in save_dict\r\n    self._batch_setitems(obj.items())\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 998, in _batch_setitems\r\n    save(v)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 560, in save\r\n    f(self, obj)  # Call unbound method with explicit self\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 932, in save_list\r\n    self._batch_appends(obj)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 956, in _batch_appends\r\n    save(x)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 560, in save\r\n    f(self, obj)  # Call unbound method with explicit self\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 887, in save_tuple\r\n    save(element)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 603, in save\r\n    self.save_reduce(obj=obj, *rv)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 717, in save_reduce\r\n    save(state)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 560, in save\r\n    f(self, obj)  # Call unbound method with explicit self\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/site-packages/dill/_dill.py\", line 990, in save_module_dict\r\n    StockPickler.save_dict(pickler, obj)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 972, in save_dict\r\n    self._batch_setitems(obj.items())\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 998, in _batch_setitems\r\n    save(v)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 560, in save\r\n    f(self, obj)  # Call unbound method with explicit self\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/site-packages/dill/_dill.py\", line 990, in save_module_dict\r\n    StockPickler.save_dict(pickler, obj)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 972, in save_dict\r\n    self._batch_setitems(obj.items())\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 998, in _batch_setitems\r\n    save(v)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 603, in save\r\n    self.save_reduce(obj=obj, *rv)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 717, in save_reduce\r\n    save(state)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 560, in save\r\n    f(self, obj)  # Call unbound method with explicit self\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/site-packages/dill/_dill.py\", line 990, in save_module_dict\r\n    StockPickler.save_dict(pickler, obj)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 972, in save_dict\r\n    self._batch_setitems(obj.items())\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 998, in _batch_setitems\r\n    save(v)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 560, in save\r\n    f(self, obj)  # Call unbound method with explicit self\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/site-packages/dill/_dill.py\", line 1317, in save_weakref\r\n    pickler.save_reduce(_create_weakref, (refobj,), obj=obj)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 692, in save_reduce\r\n    save(args)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 560, in save\r\n    f(self, obj)  # Call unbound method with explicit self\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 887, in save_tuple\r\n    save(element)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 603, in save\r\n    self.save_reduce(obj=obj, *rv)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 717, in save_reduce\r\n    save(state)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 560, in save\r\n    f(self, obj)  # Call unbound method with explicit self\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/site-packages/dill/_dill.py\", line 990, in save_module_dict\r\n    StockPickler.save_dict(pickler, obj)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 972, in save_dict\r\n    self._batch_setitems(obj.items())\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 998, in _batch_setitems\r\n    save(v)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 560, in save\r\n    f(self, obj)  # Call unbound method with explicit self\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 932, in save_list\r\n    self._batch_appends(obj)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 956, in _batch_appends\r\n    save(x)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 560, in save\r\n    f(self, obj)  # Call unbound method with explicit self\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 887, in save_tuple\r\n    save(element)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 603, in save\r\n    self.save_reduce(obj=obj, *rv)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 717, in save_reduce\r\n    save(state)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 560, in save\r\n    f(self, obj)  # Call unbound method with explicit self\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/site-packages/dill/_dill.py\", line 990, in save_module_dict\r\n    StockPickler.save_dict(pickler, obj)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 972, in save_dict\r\n    self._batch_setitems(obj.items())\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 998, in _batch_setitems\r\n    save(v)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 560, in save\r\n    f(self, obj)  # Call unbound method with explicit self\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 932, in save_list\r\n    self._batch_appends(obj)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 956, in _batch_appends\r\n    save(x)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 560, in save\r\n    f(self, obj)  # Call unbound method with explicit self\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 887, in save_tuple\r\n    save(element)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 603, in save\r\n    self.save_reduce(obj=obj, *rv)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 717, in save_reduce\r\n    save(state)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 560, in save\r\n    f(self, obj)  # Call unbound method with explicit self\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/site-packages/dill/_dill.py\", line 990, in save_module_dict\r\n    StockPickler.save_dict(pickler, obj)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 972, in save_dict\r\n    self._batch_setitems(obj.items())\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 998, in _batch_setitems\r\n    save(v)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/pickle.py\", line 578, in save\r\n    rv = reduce(self.proto)\r\n  File \"/home/loke/miniconda3/envs/matprog/lib/python3.10/site-packages/pyomo/core/base/global_set.py\", line 23, in __reduce__\r\n    return _get_global_set, (self.local_name,)\r\nAttributeError: '_UnindexedComponent_set' object has no attribute 'local_name'\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.1\r\nPython version: 3.10.4\r\nOperating system: windows 10 (wsl)\r\nHow Pyomo was installed (PyPI, conda, source): conda\r\nSolver: Cplex\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\nPickling the model returned by create_using(model) also fails, and the same happens with the hull transformation.\r\n\r\nMy use case is that I want to later create multiple new models each of which is a modification of the pickled model and use the solution to the pickled model as part of their own (it's important they all agree on this part of the solution). So a sufficient work-around would be to store only the results of solving the first model, build the new models from scratch, and then load the requisite variables from the first into them. I would appreciate some guidance on the best way to do this with gdp models.\r\n\r\nAnother approach (this is actually what I did at first) would be to build and solve the base model over again every time, since in theory CPLEX should return the same solution every time (with the deterministic setting on of course). I say in theory since this was not case for me. Whether this was to due with the transformation or something else I dont' know.\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2411/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2393", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2393/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2393/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2393/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2393", "id": 1233224351, "node_id": "I_kwDOA5FfHs5JgYKf", "number": 2393, "title": "units error when multiple terms are involved causing unit consistency tests to fail", "user": {"login": "nareshsusarla", "id": 49756992, "node_id": "MDQ6VXNlcjQ5NzU2OTky", "avatar_url": "https://avatars.githubusercontent.com/u/49756992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nareshsusarla", "html_url": "https://github.com/nareshsusarla", "followers_url": "https://api.github.com/users/nareshsusarla/followers", "following_url": "https://api.github.com/users/nareshsusarla/following{/other_user}", "gists_url": "https://api.github.com/users/nareshsusarla/gists{/gist_id}", "starred_url": "https://api.github.com/users/nareshsusarla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nareshsusarla/subscriptions", "organizations_url": "https://api.github.com/users/nareshsusarla/orgs", "repos_url": "https://api.github.com/users/nareshsusarla/repos", "events_url": "https://api.github.com/users/nareshsusarla/events{/privacy}", "received_events_url": "https://api.github.com/users/nareshsusarla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-05-11T21:59:25Z", "updated_at": "2022-05-13T17:24:52Z", "closed_at": "2022-05-13T17:24:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\nThe following error is reported in evaluating units for expressions with multiple terms involved. \r\n\r\nIn my model, there are expressions involving several dimensionless terms such as Nusselt number, Reynolds number, and Prandtl number with fractional powers. For one such expressions the units are `joule ** 0.4 * kilogram ** 0.2 * watt ** 0.6 / kelvin / meter ** 2.2 / pascal ** 0.2 / second ** 0.8`, which when resolved in the basic units are equivalent to `kilogram / kelvin / second ** 3`. However, a test on unit consistency for this expression is raising the following assertion error:\r\n`UnitsError: Units between joule ** 0.4 * kilogram ** 0.2 * watt ** 0.6 / kelvin / meter ** 2.2 / pascal ** 0.2 / second ** 0.8 and kilogram / kelvin / second ** 3 are not consistent. `\r\n<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `pyomo solve` to optimize a model and ...\" -->\r\n\r\n### Steps to reproduce the issue\r\nA test script is attached which simply contains 2 variables with units shown above and when `assert_units_equivalent `method is called for the two variables the aforementioned error can be seen.\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n[units_consistency_failure_example.zip](https://github.com/Pyomo/pyomo/files/8673656/units_consistency_failure_example.zip)\r\n\r\n### Error Message\r\n`UnitsError: Units between joule ** 0.4 * kilogram ** 0.2 * watt ** 0.6 / kelvin / meter ** 2.2 / pascal ** 0.2 / second ** 0.8 and kilogram / kelvin / second ** 3 are not consistent. `\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\n$ # Output message here, including entire stack trace, if available\r\n\r\n  File \"c:\\gmlc\\source_code\\dispatches\\dispatches\\models\\fossil_case\\ultra_supercritical_plant\\storage\\units_consistency_failure_example.py\", line 51, in <module>\r\n    assert_units_equivalent(m.var_1, m.var_2)\r\n\r\n  File \"C:\\Users\\susarlan\\Anaconda3\\envs\\gmlc\\lib\\site-packages\\pyomo\\util\\check_units.py\", line 73, in assert_units_equivalent\r\n    raise UnitsError(\r\n\r\nUnitsError: Units between joule ** 0.4 * kilogram ** 0.2 * watt ** 0.6 / kelvin / meter ** 2.2 / pascal ** 0.2 / second ** 0.8 and kilogram / kelvin / second ** 3 are not consistent.\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: Pyomo 6.4.0 (CPython 3.9.12 on Windows 10)\r\nPython version:\r\nOperating system:\r\nHow Pyomo was installed (PyPI, conda, source): This pyomo version comes with IDAES/Dispatches\r\nSolver (if applicable):\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2393/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2390", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2390/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2390/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2390/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2390", "id": 1233054841, "node_id": "I_kwDOA5FfHs5Jfux5", "number": 2390, "title": "Linux-Conda-3.9 Tests Failing", "user": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 851808904, "node_id": "MDU6TGFiZWw4NTE4MDg5MDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/testing_and_ci", "name": "testing_and_ci", "color": "ef8da4", "default": false, "description": "Any issues related to testing and/or continuous integration (e.g., github, travis, etc.)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-05-11T18:51:22Z", "updated_at": "2022-05-12T16:23:24Z", "closed_at": "2022-05-12T16:23:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\nIn the linux-conda-3.9 build, it looks like conda is removing some packages (e.g., seaborn) when installing cyipopt and pymumps. The lack of these packages is causing test failures.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2390/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2387", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2387/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2387/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2387/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2387", "id": 1233004190, "node_id": "I_kwDOA5FfHs5Jfiae", "number": 2387, "title": "Valid CPLEX solution raises a \"Cannot load a SolverResults object with bad status: error\"", "user": {"login": "PascalLesage", "id": 16614268, "node_id": "MDQ6VXNlcjE2NjE0MjY4", "avatar_url": "https://avatars.githubusercontent.com/u/16614268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PascalLesage", "html_url": "https://github.com/PascalLesage", "followers_url": "https://api.github.com/users/PascalLesage/followers", "following_url": "https://api.github.com/users/PascalLesage/following{/other_user}", "gists_url": "https://api.github.com/users/PascalLesage/gists{/gist_id}", "starred_url": "https://api.github.com/users/PascalLesage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PascalLesage/subscriptions", "organizations_url": "https://api.github.com/users/PascalLesage/orgs", "repos_url": "https://api.github.com/users/PascalLesage/repos", "events_url": "https://api.github.com/users/PascalLesage/events{/privacy}", "received_events_url": "https://api.github.com/users/PascalLesage/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-05-11T17:59:58Z", "updated_at": "2022-05-12T09:57:47Z", "closed_at": "2022-05-12T09:57:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nI ran `pyomo solve` to optimize a LP model with CPLEX. CPLEX runs fine, and finds a solution. The head of the solution file that CPLEX generates (.sol file) is as follows:\r\n\r\nproblemName=\"foo/bar/tmp_a68s6z1.pyomo.lp\"\r\n   objectiveValue=\"-4177903795921.9199\"\r\n   solutionTypeValue=\"1\"\r\n   solutionTypeString=\"basic\"\r\n   solutionStatusValue=\"1\"\r\n   solutionStatusString=\"optimal\"\r\n   solutionMethodString=\"primal\"\r\n   primalFeasible=\"1\"\r\n   dualFeasible=\"1\"\r\n   simplexIterations=\"73645\"\r\n   barrierIterations=\"215\"\r\n   writeLevel=\"1\"/>\r\n<quality\r\n   epRHS=\"9.9999999999999995e-07\"\r\n   epOpt=\"9.9999999999999995e-07\"\r\n   maxPrimalInfeas=\"1.2278178473934531e-10\"\r\n   maxDualInfeas=\"1.862645149230957e-09\"\r\n   maxPrimalResidual=\"2.9863804229535162e-07\"\r\n   maxDualResidual=\"1.4435499906539917e-07\"\r\n   maxX=\"458054325.10083282\"\r\n   maxPi=\"149099314451.14331\"\r\n   maxSlack=\"331116492.39024293\"\r\n   maxRedCost=\"56188111.8913645\"\r\n   kappa=\"2239051055.6802301\"/>\r\n\r\nThen, once CPLEX prints to standard out that \"CPLEX> Solution written to file: path_to_file\", pyomo raises \"Cannot load a SolverResults object with bad status: error\".\r\n\r\nPyomo version: 6.3.0\r\nPython version: 3.10\r\nOperating system: Windows 10\r\nHow Pyomo was installed (PyPI, conda, source): pip\r\nSolver (if applicable): CPLEX 22.1.0", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2387/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2382", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2382/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2382/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2382/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2382", "id": 1231435929, "node_id": "I_kwDOA5FfHs5JZjiZ", "number": 2382, "title": "Erroneous print message in plugin availability printout", "user": {"login": "mrmundt", "id": 55767766, "node_id": "MDQ6VXNlcjU1NzY3NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/55767766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrmundt", "html_url": "https://github.com/mrmundt", "followers_url": "https://api.github.com/users/mrmundt/followers", "following_url": "https://api.github.com/users/mrmundt/following{/other_user}", "gists_url": "https://api.github.com/users/mrmundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrmundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrmundt/subscriptions", "organizations_url": "https://api.github.com/users/mrmundt/orgs", "repos_url": "https://api.github.com/users/mrmundt/repos", "events_url": "https://api.github.com/users/mrmundt/events{/privacy}", "received_events_url": "https://api.github.com/users/mrmundt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-05-10T16:53:03Z", "updated_at": "2022-05-12T20:23:42Z", "closed_at": "2022-05-12T20:23:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\nIn debugging a different issue, we discovered that some solver or interface is printing an extra message at the beginning of the `pyomo help --solvers || exit 1` command.\r\n\r\n### Steps to reproduce the issue\r\nAssuming APPSI is available (as we presume currently that the issue comes from APPSI):\r\n\r\n```console\r\n$ pyomo help --solvers\r\n...\r\nSerial Solver Interfaces\r\n------------------------\r\nThe serial manager supports the following solver interfaces:\r\n\r\nVersion identifier: 22.1.0.0 | 2022-03-25 | 54982fbec\r\nCPXPARAM_Read_DataCheck                          1\r\nTried aggregator 1 time.\r\nLP Presolve eliminated 0 rows and 1 columns.\r\nAll rows and columns eliminated.\r\nPresolve time = 0.00 sec. (0.00 ticks)\r\n   +appsi_cbc         2.10.4    Automated persistent interface to Cbc\r\n   +appsi_cplex       22.1      Automated persistent interface to\r\n                                Cplex\r\n```\r\n\r\n### Error Message\r\nThere is no error, but a print message from CPLEX is not being suppressed.\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.0\r\nPython version: All where APPSI is available\r\nOperating system: All where APPSI is available\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable): cplex\r\n\r\n\r\n### Additional information\r\nSee this job for an example: https://github.com/Pyomo/pyomo/runs/6281085876?check_suite_focus=true", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2382/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2381", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2381/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2381/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2381/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2381", "id": 1230054866, "node_id": "I_kwDOA5FfHs5JUSXS", "number": 2381, "title": "Missing symbol _cbc_glp_prob on macOS", "user": {"login": "mzhaaao", "id": 9564010, "node_id": "MDQ6VXNlcjk1NjQwMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/9564010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzhaaao", "html_url": "https://github.com/mzhaaao", "followers_url": "https://api.github.com/users/mzhaaao/followers", "following_url": "https://api.github.com/users/mzhaaao/following{/other_user}", "gists_url": "https://api.github.com/users/mzhaaao/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzhaaao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzhaaao/subscriptions", "organizations_url": "https://api.github.com/users/mzhaaao/orgs", "repos_url": "https://api.github.com/users/mzhaaao/repos", "events_url": "https://api.github.com/users/mzhaaao/events{/privacy}", "received_events_url": "https://api.github.com/users/mzhaaao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-05-09T17:51:47Z", "updated_at": "2022-05-11T14:21:02Z", "closed_at": "2022-05-11T14:21:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nWhen I try to use Pyomo on macOS, I get an error about a missing symbol called `_cbc_glp_prob` in a C library.\r\n\r\n### Steps to reproduce the issue\r\n1. `pip install pyomo==6.4.0`\r\n2. Put this in a file and run:\r\n```\r\nfrom pyomo.environ import *\r\n\r\nmodel = ConcreteModel()\r\n\r\n# declare decision variables\r\nmodel.x = Var(domain=NonNegativeReals)\r\n\r\n# declare objective\r\nmodel.profit = Objective(\r\n    expr = 40*model.x,\r\n    sense = maximize)\r\n\r\n# declare constraints\r\nmodel.demand = Constraint(expr = model.x <= 40)\r\nmodel.laborA = Constraint(expr = model.x <= 80)\r\nmodel.laborB = Constraint(expr = 2*model.x <= 100)\r\n\r\n# solve\r\nSolverFactory('cbc').solve(model).write()\r\n```\r\n\r\n### Error Message\r\n\r\n```console\r\nERROR: Solver (cbc) returned non-zero return code (-6)\r\nERROR: Solver log: dyld: Symbol not found: _cbc_glp_prob\r\n      Referenced from: /usr/local/opt/clp/lib/libClpSolver.1.dylib Expected\r\n      in: /usr/local/opt/coinutils/lib/libCoinUtils.3.dylib\r\n     in /usr/local/opt/clp/lib/libClpSolver.1.dylib\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 19, in <module>\r\n    SolverFactory('cbc').solve(model).write()\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.0\r\nPython version: 3.7.5\r\nOperating system: macOS 11.6.1\r\nHow Pyomo was installed (PyPI, conda, source): PyPI\r\nSolver (if applicable): cbc\r\n\r\n\r\n### Additional information\r\nclp was installed with Homebrew:\r\n```\r\n$ greadlink -f /usr/local/opt/clp/lib/libClpSolver.1.dylib\r\n/usr/local/Cellar/clp/1.17.7/lib/libClpSolver.1.14.7.dylib\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2381/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2379", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2379/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2379/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2379/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2379", "id": 1224436448, "node_id": "I_kwDOA5FfHs5I-2rg", "number": 2379, "title": "Pyomo.environ doesn't initialize when called by cython", "user": {"login": "wrcannon", "id": 15097940, "node_id": "MDQ6VXNlcjE1MDk3OTQw", "avatar_url": "https://avatars.githubusercontent.com/u/15097940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wrcannon", "html_url": "https://github.com/wrcannon", "followers_url": "https://api.github.com/users/wrcannon/followers", "following_url": "https://api.github.com/users/wrcannon/following{/other_user}", "gists_url": "https://api.github.com/users/wrcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/wrcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wrcannon/subscriptions", "organizations_url": "https://api.github.com/users/wrcannon/orgs", "repos_url": "https://api.github.com/users/wrcannon/repos", "events_url": "https://api.github.com/users/wrcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/wrcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-05-03T18:16:35Z", "updated_at": "2022-05-11T17:25:20Z", "closed_at": "2022-05-11T17:25:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "See full details on stack overflow:\r\nhttps://stackoverflow.com/questions/71902579/pyomo-doesnt-load-when-called-via-cython\r\n\r\nAlso see\r\n https://github.com/Pyomo/pyomo/issues/2374#issuecomment-1115424111_ :\r\n\r\n\"...(The linked question is probably either a problem with how the pyomo driver script interacts with argparse [it really shouldn't be doing that much when pyomo.environ is imported - that is almost certainly a bug], or with how cython and argparse interact).\"\r\n\r\n_Originally posted by @jsiirola in https://github.com/Pyomo/pyomo/issues/2374#issuecomment-1115424111_", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2379/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2376", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2376/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2376/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2376/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2376", "id": 1222229822, "node_id": "I_kwDOA5FfHs5I2b8-", "number": 2376, "title": "Error with CPLEX 22.1.0.0", "user": {"login": "ernestoar", "id": 1004098, "node_id": "MDQ6VXNlcjEwMDQwOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1004098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ernestoar", "html_url": "https://github.com/ernestoar", "followers_url": "https://api.github.com/users/ernestoar/followers", "following_url": "https://api.github.com/users/ernestoar/following{/other_user}", "gists_url": "https://api.github.com/users/ernestoar/gists{/gist_id}", "starred_url": "https://api.github.com/users/ernestoar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ernestoar/subscriptions", "organizations_url": "https://api.github.com/users/ernestoar/orgs", "repos_url": "https://api.github.com/users/ernestoar/repos", "events_url": "https://api.github.com/users/ernestoar/events{/privacy}", "received_events_url": "https://api.github.com/users/ernestoar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-05-01T17:41:18Z", "updated_at": "2022-05-02T09:11:59Z", "closed_at": "2022-05-02T09:11:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nI am facing a solution parsing error when calling CPLEX to solve a Pyomo model. This seems an issue that is resurfacing this time on CPLEX version 22.1.0.0\r\n\r\n### Example code\r\n\r\n```\r\n# example.py\r\nimport pyomo.environ as pyo\r\nmodel = pyo.ConcreteModel()\r\nmodel.x = pyo.Var([1, 2], domain=pyo.NonNegativeReals)\r\nmodel.OBJ = pyo.Objective(expr=2 * model.x[1] + 3 * model.x[2])\r\nmodel.Constraint1 = pyo.Constraint(expr=3 * model.x[1] + 4 * model.x[2] >= 1)\r\nsolver = pyo.SolverFactory(\"cplex\")\r\nresults = solver.solve(model, tee=True)\r\n```\r\n\r\n### Error Message\r\n\r\n```\r\nWelcome to IBM(R) ILOG(R) CPLEX(R) Interactive Optimizer 22.1.0.0\r\n  with Simplex, Mixed Integer & Barrier Optimizers\r\n5725-A06 5725-A29 5724-Y48 5724-Y49 5724-Y54 5724-Y55 5655-Y21\r\nCopyright IBM Corp. 1988, 2022.  All Rights Reserved.\r\n\r\nType 'help' for a list of available commands.\r\nType 'help' followed by a command name for more\r\ninformation on commands.\r\n\r\nCPLEX> Logfile 'cplex.log' closed.\r\nLogfile '/var/folders/87/h47k8xb11z973ssypvcqgmq80000gn/T/tmpxm3u9qwg.cplex.log' open.\r\nCPLEX> Problem '/var/folders/87/h47k8xb11z973ssypvcqgmq80000gn/T/tmpm0zpegx3.pyomo.lp' read.\r\nRead time = 0.01 sec. (0.00 ticks)\r\nCPLEX> Problem name         : /var/folders/87/h47k8xb11z973ssypvcqgmq80000gn/T/tmpm0zpegx3.pyomo.lp\r\nObjective sense      : Minimize\r\nVariables            :       3\r\nObjective nonzeros   :       2\r\nLinear constraints   :       2  [Greater: 1,  Equal: 1]\r\n  Nonzeros           :       3\r\n  RHS nonzeros       :       2\r\n\r\nVariables            : Min LB: 0.000000         Max UB: all infinite   \r\nObjective nonzeros   : Min   : 2.000000         Max   : 3.000000       \r\nLinear constraints   :\r\n  Nonzeros           : Min   : 1.000000         Max   : 4.000000       \r\n  RHS nonzeros       : Min   : 1.000000         Max   : 1.000000       \r\nCPLEX> Version identifier: 22.1.0.0 | 2022-03-09 | 1a383f8ce\r\nTried aggregator 1 time.\r\nLP Presolve eliminated 2 rows and 3 columns.\r\nAll rows and columns eliminated.\r\nPresolve time = 0.00 sec. (0.00 ticks)\r\n\r\nDual simplex - Optimal:  Objective =  6.6666666667e-01\r\nSolution time =    0.01 sec.  Iterations = 0 (0)\r\nDeterministic time = 0.00 ticks  (0.13 ticks/sec)\r\n\r\nCPLEX> Solution written to file '/var/folders/87/h47k8xb11z973ssypvcqgmq80000gn/T/tmp2td6qj9h.cplex.sol'.\r\nCPLEX> Traceback (most recent call last):\r\n  File \"/Users/ernesto/python_projects/cplex_test/main.py\", line 27, in <module>\r\n    run_model()\r\n  File \"/Users/ernesto/python_projects/cplex_test/main.py\", line 21, in run_model\r\n    results = solver.solve(model, tee=True)\r\n  File \"/Users/ernesto/python_projects/pump-facility-optimizer/__pypackages__/3.9/lib/pyomo/opt/base/solvers.py\", line 605, in solve\r\n    result = self._postsolve()\r\n  File \"/Users/ernesto/python_projects/pump-facility-optimizer/__pypackages__/3.9/lib/pyomo/solvers/plugins/solvers/CPLEX.py\", line 885, in _postsolve\r\n    results = ILMLicensedSystemCallSolver._postsolve(self)\r\n  File \"/Users/ernesto/python_projects/pump-facility-optimizer/__pypackages__/3.9/lib/pyomo/opt/solver/shellcmd.py\", line 270, in _postsolve\r\n    results = self.process_output(self._rc)\r\n  File \"/Users/ernesto/python_projects/pump-facility-optimizer/__pypackages__/3.9/lib/pyomo/opt/solver/shellcmd.py\", line 332, in process_output\r\n    self.process_soln_file(results)\r\n  File \"/Users/ernesto/python_projects/pump-facility-optimizer/__pypackages__/3.9/lib/pyomo/solvers/plugins/solvers/CPLEX.py\", line 771, in process_soln_file\r\n    objective_value = (tokens[0].split('=')[1].strip()).lstrip(\"\\\"\").rstrip(\"\\\"\")\r\nIndexError: list index out of range\r\n\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.0\r\nPython version: 3.9.7\r\nOperating system: macOS 11.6\r\nPyomo was installed using PyPI\r\nSolver: CPLEX 22.1.0.0\r\n\r\n### Additional information\r\n\r\nHere is the .sol file:\r\n\r\n```\r\n<?xml version = \"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<CPLEXSolution version=\"1.2\">\r\n <header\r\n   problemName=\"/var/folders/87/h47k8xb11z973ssypvcqgmq80000gn/T/tmpm0zpegx3.pyomo.lp\"\r\n   objectiveValue=\"0.66666666666666663\"\r\n   solutionTypeValue=\"1\"\r\n   solutionTypeString=\"basic\"\r\n   solutionStatusValue=\"1\"\r\n   solutionStatusString=\"optimal\"\r\n   solutionMethodString=\"dual\"\r\n   primalFeasible=\"1\"\r\n   dualFeasible=\"1\"\r\n   simplexIterations=\"0\"\r\n   writeLevel=\"1\"/>\r\n <quality\r\n   epRHS=\"9.9999999999999995e-07\"\r\n   epOpt=\"9.9999999999999995e-07\"\r\n   maxPrimalInfeas=\"0\"\r\n   maxDualInfeas=\"0\"\r\n   maxPrimalResidual=\"5.5511151231257827e-17\"\r\n   maxDualResidual=\"0\"\r\n   maxX=\"1\"\r\n   maxPi=\"0.66666666666666663\"\r\n   maxSlack=\"0\"\r\n   maxRedCost=\"0.33333333333333348\"\r\n   kappa=\"3\"/>\r\n <linearConstraints>\r\n  <constraint name=\"c_l_x4_\" index=\"0\" status=\"LL\" slack=\"0\" dual=\"0.66666666666666663\"/>\r\n  <constraint name=\"c_e_ONE_VAR_CONSTANT\" index=\"1\" status=\"LL\" slack=\"0\" dual=\"0\"/>\r\n </linearConstraints>\r\n <variables>\r\n  <variable name=\"x1\" index=\"0\" status=\"BS\" value=\"0.33333333333333331\" reducedCost=\"0\"/>\r\n  <variable name=\"x2\" index=\"1\" status=\"LL\" value=\"0\" reducedCost=\"0.33333333333333348\"/>\r\n  <variable name=\"ONE_VAR_CONSTANT\" index=\"2\" status=\"BS\" value=\"1\" reducedCost=\"0\"/>\r\n </variables>\r\n <objectiveValues>\r\n  <objective index=\"0\" name=\"x3\" value=\"0.66666666666666663\"/>\r\n </objectiveValues>\r\n</CPLEXSolution>\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2376/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2375", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2375/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2375/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2375/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2375", "id": 1222078586, "node_id": "I_kwDOA5FfHs5I13B6", "number": 2375, "title": "APPSI-IPOPT: NLWriter currently only supports continuous variables.", "user": {"login": "ZedongPeng", "id": 15854830, "node_id": "MDQ6VXNlcjE1ODU0ODMw", "avatar_url": "https://avatars.githubusercontent.com/u/15854830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZedongPeng", "html_url": "https://github.com/ZedongPeng", "followers_url": "https://api.github.com/users/ZedongPeng/followers", "following_url": "https://api.github.com/users/ZedongPeng/following{/other_user}", "gists_url": "https://api.github.com/users/ZedongPeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZedongPeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZedongPeng/subscriptions", "organizations_url": "https://api.github.com/users/ZedongPeng/orgs", "repos_url": "https://api.github.com/users/ZedongPeng/repos", "events_url": "https://api.github.com/users/ZedongPeng/events{/privacy}", "received_events_url": "https://api.github.com/users/ZedongPeng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-05-01T08:56:49Z", "updated_at": "2022-05-13T15:45:52Z", "closed_at": "2022-05-13T15:45:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\n<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `pyomo solve` to optimize a model and ...\" -->\r\n\r\nI using appsi_ipopt to solve fixed-NLP subplem in MindtPy.  \r\nI know that in APPSI-IPOPT, NLWriter currently only supports continuous variables.\r\nI manually tested that NLWriter now can support fixed discrete variables.  For example, the following code works well. \r\n\r\n```\r\nfrom pyomo.environ import *\r\nfrom pyomo.contrib.mindtpy.tests.MINLP2_simple import SimpleMINLP as SimpleMINLP2\r\n\r\nmodel = SimpleMINLP2()\r\nTransformationFactory('core.fix_integer_vars').apply_to(model)\r\nopt = SolverFactory('appsi_ipopt')\r\nresult = opt.solve(model, tee=True)\r\nprint(result)\r\n```\r\n\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\nHowever, if I change **SimpleMINLP2** to **SimpleMINLP5**, the continuous variables not supported ERROR will be reported.\r\n\r\n\r\n```\r\n# example.py\r\nfrom pyomo.environ import *\r\nfrom pyomo.contrib.mindtpy.tests.MINLP2_simple import SimpleMINLP as SimpleMINLP2\r\nfrom pyomo.contrib.mindtpy.tests.MINLP5_simple import SimpleMINLP5\r\n\r\nmodel = SimpleMINLP5()\r\nTransformationFactory('core.fix_integer_vars').apply_to(model)\r\nopt = SolverFactory('appsi_ipopt')\r\nresult = opt.solve(model, tee=True)\r\nprint(result)\r\n```\r\n\r\n### Error Message\r\n\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\n$ # Output message here, including entire stack trace, if available\r\nTraceback (most recent call last):\r\n  File \"/Users/zedongpeng/Github/pyomo-MINLP-benchmarking/test5.py\", line 8, in <module>\r\n    result = opt.solve(model, tee=True)\r\n  File \"/Users/zedongpeng/Github/pyomo/pyomo/contrib/appsi/base.py\", line 1230, in solve\r\n    results: Results = super(LegacySolverInterface, self).solve(model)\r\n  File \"/Users/zedongpeng/Github/pyomo/pyomo/contrib/appsi/solvers/ipopt.py\", line 264, in solve\r\n    self._writer.write(model, self._filename+'.nl', timer=timer)\r\n  File \"/Users/zedongpeng/Github/pyomo/pyomo/contrib/appsi/writers/nl_writer.py\", line 187, in write\r\n    self._writer.write(filename)\r\nValueError: NLWriter currently only supports continuous variables.\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.1.dev0\r\nPython version: Python 3.7.7\r\nOperating system: MacOS\r\nHow Pyomo was installed (PyPI, conda, source):\r\nSolver (if applicable): appsi_ipopt\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2375/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2372", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2372/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2372/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2372/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2372", "id": 1213348365, "node_id": "I_kwDOA5FfHs5IUjoN", "number": 2372, "title": "appsi_gurobi    gurobipy.GurobiError: Unable to retrieve attribute 'Pi'", "user": {"login": "ZedongPeng", "id": 15854830, "node_id": "MDQ6VXNlcjE1ODU0ODMw", "avatar_url": "https://avatars.githubusercontent.com/u/15854830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZedongPeng", "html_url": "https://github.com/ZedongPeng", "followers_url": "https://api.github.com/users/ZedongPeng/followers", "following_url": "https://api.github.com/users/ZedongPeng/following{/other_user}", "gists_url": "https://api.github.com/users/ZedongPeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZedongPeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZedongPeng/subscriptions", "organizations_url": "https://api.github.com/users/ZedongPeng/orgs", "repos_url": "https://api.github.com/users/ZedongPeng/repos", "events_url": "https://api.github.com/users/ZedongPeng/events{/privacy}", "received_events_url": "https://api.github.com/users/ZedongPeng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-04-23T15:55:49Z", "updated_at": "2022-05-11T18:44:29Z", "closed_at": "2022-05-11T18:44:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\n<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `pyomo solve` to optimize a model and ...\" -->\r\n\r\nI am using  `SolverFactory('appsi_gurobi')` to solve a MILP and get its dual.\r\nAn error is reported `gurobipy.GurobiError: Unable to retrieve attribute 'Pi'`.\r\nHow can I fix it? @michaelbynum \r\n`appsi_cplex` does not support getting duals for MILP. Is this also applied to `appsi_gurobi`?\r\n\r\n### Steps to reproduce the issue\r\n\r\n\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```\r\n# example.py\r\nfrom pyomo.environ import *\r\nfrom pyomo.contrib.mindtpy.tests.eight_process_problem import EightProcessFlowsheet\r\n\r\nmodel = EightProcessFlowsheet()\r\nfor constr in model.component_data_objects(Constraint):\r\n    if constr.body.polynomial_degree() not in {0, 1}:\r\n        constr.deactivate()\r\nmodel.dual = Suffix(direction=Suffix.IMPORT)\r\nopt = SolverFactory('appsi_gurobi')\r\nres = opt.solve(model, tee=True)\r\nprint(res)\r\n```\r\n\r\n### Error Message\r\n\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\n$ # Output message here, including entire stack trace, if available\r\n\r\nGurobi Optimizer version 9.0.0 build v9.0.0rc2 (mac64)\r\nOptimize a model with 26 rows, 32 columns and 66 nonzeros\r\nModel fingerprint: 0x68b3ce51\r\nVariable types: 24 continuous, 8 integer (8 binary)\r\nCoefficient statistics:\r\n  Matrix range     [4e-01, 1e+01]\r\n  Objective range  [1e+00, 8e+01]\r\n  Bounds range     [1e+00, 1e+01]\r\n  RHS range        [1e+00, 1e+00]\r\nFound heuristic solution: objective -523.0000000\r\nPresolve removed 20 rows and 26 columns\r\nPresolve time: 0.00s\r\nPresolved: 6 rows, 6 columns, 17 nonzeros\r\nFound heuristic solution: objective -1973.000000\r\nVariable types: 4 continuous, 2 integer (2 binary)\r\n\r\nExplored 0 nodes (0 simplex iterations) in 0.00 seconds\r\nThread count was 12 (of 12 available processors)\r\n\r\nSolution count 2: -1973 -523 \r\nNo other solutions better than -1973\r\n\r\nOptimal solution found (tolerance 1.00e-04)\r\nBest objective -1.973000000000e+03, best bound -1.973000000000e+03, gap 0.0000%\r\nTraceback (most recent call last):\r\n  File \"/Users/zedongpeng/Github/pyomo-MINLP-benchmarking/test.py\", line 79, in <module>\r\n    res = opt.solve(model, tee=True)\r\n  File \"/Users/zedongpeng/Github/pyomo/pyomo/contrib/appsi/base.py\", line 1264, in solve\r\n    for c, val in results.solution_loader.get_duals().items():\r\n  File \"/Users/zedongpeng/Github/pyomo/pyomo/contrib/appsi/base.py\", line 695, in get_duals\r\n    return self._solver.get_duals(cons_to_load=cons_to_load)\r\n  File \"/Users/zedongpeng/Github/pyomo/pyomo/contrib/appsi/solvers/gurobi.py\", line 900, in get_duals\r\n    linear_vals = self._solver_model.getAttr(\"Pi\", linear_cons_to_load)\r\n  File \"model.pxi\", line 1774, in gurobipy.Model.getAttr\r\n  File \"attrutil.pxi\", line 148, in gurobipy.__gettypedattrlist\r\ngurobipy.GurobiError: Unable to retrieve attribute 'Pi'\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.1.dev0\r\nPython version: Python 3.7.7\r\nOperating system: MacOS \r\nHow Pyomo was installed (PyPI, conda, source):\r\nSolver (if applicable): appsi_gurobi\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2372/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2365", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2365/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2365/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2365/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2365", "id": 1210173615, "node_id": "I_kwDOA5FfHs5IIciv", "number": 2365, "title": "assert_units_consistent fails when model has reference to unindexed Var", "user": {"login": "dallan-keylogic", "id": 88728506, "node_id": "MDQ6VXNlcjg4NzI4NTA2", "avatar_url": "https://avatars.githubusercontent.com/u/88728506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dallan-keylogic", "html_url": "https://github.com/dallan-keylogic", "followers_url": "https://api.github.com/users/dallan-keylogic/followers", "following_url": "https://api.github.com/users/dallan-keylogic/following{/other_user}", "gists_url": "https://api.github.com/users/dallan-keylogic/gists{/gist_id}", "starred_url": "https://api.github.com/users/dallan-keylogic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dallan-keylogic/subscriptions", "organizations_url": "https://api.github.com/users/dallan-keylogic/orgs", "repos_url": "https://api.github.com/users/dallan-keylogic/repos", "events_url": "https://api.github.com/users/dallan-keylogic/events{/privacy}", "received_events_url": "https://api.github.com/users/dallan-keylogic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-04-20T20:21:51Z", "updated_at": "2022-04-21T20:25:42Z", "closed_at": "2022-04-21T20:25:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nRunning `assert_units_consistent` on a model with a `Reference` to an unindexed variable results in an error.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```console\r\nimport pyomo.environ as pyo\r\nfrom pyomo.util.check_units import assert_units_consistent\r\n\r\nm = pyo.ConcreteModel()\r\n\r\nm.x = pyo.Var(initialize=1, units=pyo.units.m)\r\nm.y = pyo.Var(initialize=1, units=pyo.units.m)\r\nm.z = pyo.Reference(m.x)\r\nm.expr = pyo.Expression(expr=(m.x+m.z[None]))\r\nassert_units_consistent(m)\r\n```\r\n\r\n### Error Message\r\n\r\n>   Traceback (most recent call last):\r\n> \r\n>   File ~\\Work\\assert_units_consistent_fail.py:10 in <module>\r\n>     assert_units_consistent(m)\r\n> \r\n>   File ~\\miniconda3\\envs\\idaes-new\\lib\\site-packages\\pyomo\\util\\check_units.py:236 in assert_units_consistent\r\n>     handler(obj)\r\n> \r\n>   File ~\\miniconda3\\envs\\idaes-new\\lib\\site-packages\\pyomo\\util\\check_units.py:164 in _assert_units_consistent_block\r\n>     assert_units_consistent(component)\r\n> \r\n>   File ~\\miniconda3\\envs\\idaes-new\\lib\\site-packages\\pyomo\\util\\check_units.py:219 in assert_units_consistent\r\n>     raise TypeError(\"Units checking not supported for object of type {}.\".format(obj.ctype))\r\n> \r\n> TypeError: Units checking not supported for object of type <class 'pyomo.core.base.set.SetOf'>.\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.4.0\r\nPython version: 3.9\r\nOperating system: Windows 11\r\nHow Pyomo was installed: Through IDAES install (I think the script uses pip?)\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2365/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2355", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2355/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2355/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2355/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2355", "id": 1196448517, "node_id": "I_kwDOA5FfHs5HUFsF", "number": 2355, "title": "APPSI doesn't solve GDP model with AutoLinkedBinaryVars", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-04-07T18:55:14Z", "updated_at": "2022-05-12T20:23:10Z", "closed_at": "2022-05-12T20:23:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nThe APPSI Gurobi solver dies on a KeyError if I give it a transformedto-a-MIP GDP. It looks like  the `AutoLinkedBooleanVar` indicator variables take it by surprise?\r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\nfrom pyomo.contrib.appsi.solvers.gurobi import Gurobi\r\nfrom pyomo.environ import *\r\nfrom pyomo.gdp import *\r\n\r\nm = ConcreteModel()\r\nm.x = Var(bounds=(-5, 5))\r\nm.disjunction = Disjunction(expr=[[m.x == 2], [m.x >= -1]])\r\nm.obj = Objective(expr=m.x)\r\n\r\nTransformationFactory('gdp.bigm').apply_to(m)\r\n\r\nGurobi().solve(m)\r\n```\r\n\r\n### Error Message\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"appsi_and_gdp.py\", line 12, in <module>\r\n    Gurobi().solve(m)\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/appsi/solvers/gurobi.py\", line 340, in solve\r\n    self.set_instance(model)\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/appsi/solvers/gurobi.py\", line 451, in set_instance\r\n    self.add_block(model)\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/appsi/base.py\", line 883, in add_block\r\n    self.add_constraints([con for con in block.component_data_objects(Constraint, descend_into=True,\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/appsi/base.py\", line 809, in add_constraints\r\n    named_exprs, variables, fixed_vars, external_functions = cmodel.prep_for_repn(con.body, expr_types)\r\nKeyError: <class 'pyomo.gdp.disjunct.AutoLinkedBinaryVar'>\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: main\r\nPython version: 3.8\r\nOperating system: linux\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable): Gurobi 9.1.2", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2355/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2354", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2354/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2354/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2354/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2354", "id": 1193379171, "node_id": "I_kwDOA5FfHs5HIYVj", "number": 2354, "title": "In-place modification of Expressions creates infinite recursion problems", "user": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-04-05T15:50:01Z", "updated_at": "2022-04-05T16:20:41Z", "closed_at": "2022-04-05T16:20:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nWhen modifying a named expression, I accidentally did \r\n\r\n```\r\nm.E += 3\r\nm.E.pprint()\r\n```\r\n\r\ninstead of \r\n\r\n```\r\nm.E.expr += 3\r\nm.E.pprint()\r\n```\r\n\r\nwhich caused an infinite recursion problem. We should either make `m.E += 3` work correctly or raise and exception.\r\n\r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\nIn [1]: import pyomo.environ as pe\r\n\r\nIn [2]: m = pe.ConcreteModel()\r\n\r\nIn [3]: m.x = pe.Var()\r\n\r\nIn [4]: m.E = pe.Expression(expr=(m.x - 1) ** 2)\r\n\r\nIn [5]: m.E += 3\r\n\r\nIn [6]: m.E.expr.args[0] is m.E\r\nOut[6]: True\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2354/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2354/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2345", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2345/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2345/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2345/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2345", "id": 1171207647, "node_id": "I_kwDOA5FfHs5FzzXf", "number": 2345, "title": "ampl_function_demo/src missing from conda package", "user": {"login": "joshua-cogliati-inl", "id": 7118148, "node_id": "MDQ6VXNlcjcxMTgxNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7118148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshua-cogliati-inl", "html_url": "https://github.com/joshua-cogliati-inl", "followers_url": "https://api.github.com/users/joshua-cogliati-inl/followers", "following_url": "https://api.github.com/users/joshua-cogliati-inl/following{/other_user}", "gists_url": "https://api.github.com/users/joshua-cogliati-inl/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshua-cogliati-inl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshua-cogliati-inl/subscriptions", "organizations_url": "https://api.github.com/users/joshua-cogliati-inl/orgs", "repos_url": "https://api.github.com/users/joshua-cogliati-inl/repos", "events_url": "https://api.github.com/users/joshua-cogliati-inl/events{/privacy}", "received_events_url": "https://api.github.com/users/joshua-cogliati-inl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-03-16T15:44:52Z", "updated_at": "2022-03-16T15:47:30Z", "closed_at": "2022-03-16T15:47:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nampl_function_demo/src is missing from the conda package for pyomo 6.3.0\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```console\r\n$ pyomo build-extensions\r\n...\r\n```\r\n\r\n\r\n### Error Message\r\n\r\n```\r\n**** Building PyNumero libraries ****\r\n-- The C compiler identification is AppleClang 12.0.0.12000032\r\n-- The CXX compiler identification is AppleClang 12.0.0.12000032\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\nCMake Error at CMakeLists.txt:18 (INCLUDE):\r\n  INCLUDE could not find requested file:\r\n    /Users/fred/miniconda3/envs/raven_libraries/lib/python3.7/site-packages/pyomo/contrib/pynumero/src/../../ampl_function_demo/src/FindASL.cmake\r\n```\r\n\r\n\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.3.0\r\nPython version: 3.7\r\nOperating system: MacOS\r\nHow Pyomo was installed (PyPI, conda, source): conda\r\n\r\n\r\n```\r\n$ tar -tvjf pyomo-6.3.0-py37h0582d14_1.tar.bz2 | grep 'ampl_function_demo'\r\n-rw-rw-r--  0 501    20        159 Mar  2 15:43 lib/python3.7/site-packages/pyomo/contrib/ampl_function_demo/__pycache__/__init__.cpython-37.pyc\r\n-rw-rw-r--  0 501    20        165 Mar  2 15:43 lib/python3.7/site-packages/pyomo/contrib/ampl_function_demo/tests/__pycache__/__init__.cpython-37.pyc\r\n-rw-rw-r--  0 501    20        461 Mar  2 15:43 lib/python3.7/site-packages/pyomo/contrib/ampl_function_demo/__pycache__/plugins.cpython-37.pyc\r\n-rw-rw-r--  0 501    20        934 Mar  2 15:43 lib/python3.7/site-packages/pyomo/contrib/ampl_function_demo/__pycache__/build.cpython-37.pyc\r\n-rw-rw-r--  0 501    20       2091 Mar  2 15:43 lib/python3.7/site-packages/pyomo/contrib/ampl_function_demo/tests/__pycache__/test_ampl_function_demo.cpython-37.pyc\r\n-rw-rw-r--  0 501    20        761 Feb 23 17:12 lib/python3.7/site-packages/pyomo/contrib/ampl_function_demo/plugins.py\r\n-rw-rw-r--  0 501    20       1118 Feb 23 17:12 lib/python3.7/site-packages/pyomo/contrib/ampl_function_demo/build.py\r\n-rw-rw-r--  0 501    20       2385 Feb 23 17:12 lib/python3.7/site-packages/pyomo/contrib/ampl_function_demo/tests/test_ampl_function_demo.py\r\n-rw-rw-r--  0 501    20          0 Feb 23 17:12 lib/python3.7/site-packages/pyomo/contrib/ampl_function_demo/tests/__init__.py\r\n-rw-rw-r--  0 501    20          0 Feb 23 17:12 lib/python3.7/site-packages/pyomo/contrib/ampl_function_demo/__init__.py\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2345/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2333", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2333/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2333/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2333/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2333", "id": 1162993651, "node_id": "I_kwDOA5FfHs5FUd_z", "number": 2333, "title": "Cannot make Reference to a ConstraintData from a ConstraintList", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-08T18:39:32Z", "updated_at": "2022-09-28T21:36:22Z", "closed_at": "2022-09-28T21:36:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nReferences to ConstraintDatas in ConstraintLists die on a TypeError. ConstraintDatas of other IndexedConstraints seem okay.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\nfrom pyomo.environ import *\r\n\r\nm = ConcreteModel()\r\nm.x = Var()\r\nm.cl = ConstraintList()\r\nm.c2 = Constraint(PositiveIntegers)\r\n\r\nm.cl.add(m.x >= 0)\r\nm.c2[1] = m.x >= 0\r\nm.cl.add(m.x <= 1)\r\nm.c2[2] = m.x <= 1\r\n\r\nthing1 = Reference(m.c2[2]) # this one is fine\r\nthing2 = Reference(m.cl[2]) # this gives the TypeError below\r\n```\r\n\r\n### Error Message\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"reference_to_constraintListData.py\", line 18, in <module>\r\n    thing2 = Reference(m.cl[2])\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/reference.py\", line 644, in Reference\r\n    comp = _parent.__class__(SetOf(UnindexedComponent_set))\r\nTypeError: __init__() takes 1 positional argument but 2 were given\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: main\r\nPython version: 3.8\r\nOperating system: linux\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable): ", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2333/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2332", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2332/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2332/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2332/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2332", "id": 1162969561, "node_id": "I_kwDOA5FfHs5FUYHZ", "number": 2332, "title": "scaling_factor is not compatible with Baron solver", "user": {"login": "damdaepark", "id": 21017191, "node_id": "MDQ6VXNlcjIxMDE3MTkx", "avatar_url": "https://avatars.githubusercontent.com/u/21017191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/damdaepark", "html_url": "https://github.com/damdaepark", "followers_url": "https://api.github.com/users/damdaepark/followers", "following_url": "https://api.github.com/users/damdaepark/following{/other_user}", "gists_url": "https://api.github.com/users/damdaepark/gists{/gist_id}", "starred_url": "https://api.github.com/users/damdaepark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/damdaepark/subscriptions", "organizations_url": "https://api.github.com/users/damdaepark/orgs", "repos_url": "https://api.github.com/users/damdaepark/repos", "events_url": "https://api.github.com/users/damdaepark/events{/privacy}", "received_events_url": "https://api.github.com/users/damdaepark/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-08T18:11:57Z", "updated_at": "2022-05-10T19:19:05Z", "closed_at": "2022-05-10T19:19:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\nPyomo's scaling_factor functionality is not compatible with Baron solver. \r\n\r\n\r\n### Error Message\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\nBackend QtAgg is interactive backend. Turning interactive mode on.\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Damdae\\anaconda3\\envs\\arena\\lib\\runpy.py\", line 194, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"C:\\Users\\Damdae\\anaconda3\\envs\\arena\\lib\\runpy.py\", line 87, in _run_code\r\n    exec(code, run_globals)\r\n  File \"c:\\Users\\Damdae\\.vscode\\extensions\\ms-python.python-2022.2.1924087327\\pythonFiles\\lib\\python\\debugpy\\__main__.py\", line 45, in <module>\r\n    cli.main()\r\n  File \"c:\\Users\\Damdae\\.vscode\\extensions\\ms-python.python-2022.2.1924087327\\pythonFiles\\lib\\python\\debugpy/..\\debugpy\\server\\cli.py\", line 444, in main\r\n    run()\r\n  File \"c:\\Users\\Damdae\\.vscode\\extensions\\ms-python.python-2022.2.1924087327\\pythonFiles\\lib\\python\\debugpy/..\\debugpy\\server\\cli.py\", line 285, in run_file\r\n    runpy.run_path(target_as_str, run_name=compat.force_str(\"__main__\"))\r\n  File \"C:\\Users\\Damdae\\anaconda3\\envs\\arena\\lib\\runpy.py\", line 265, in run_path\r\n    return _run_module_code(code, init_globals, run_name,\r\n  File \"C:\\Users\\Damdae\\anaconda3\\envs\\arena\\lib\\runpy.py\", line 97, in _run_module_code\r\n    _run_code(code, mod_globals, init_globals,\r\n  File \"C:\\Users\\Damdae\\anaconda3\\envs\\arena\\lib\\runpy.py\", line 87, in _run_code\r\n    exec(code, run_globals)\r\n  File \"c:\\Users\\Damdae\\OneDrive - SNU\\Graduate\\Project\\Modeling\\Biopharm\\script\\modeling\\main.py\", line 54, in <module>\r\n    main(target)\r\n  File \"c:\\Users\\Damdae\\OneDrive - SNU\\Graduate\\Project\\Modeling\\Biopharm\\script\\modeling\\main.py\", line 38, in main\r\n    m, results = runsolver(m, solver='baron', scaling=True, tee=True)\r\n  File \"c:\\Users\\Damdae\\OneDrive - SNU\\Graduate\\Project\\Modeling\\Biopharm\\script\\modeling\\util.py\", line 121, in runsolver\r\n    results = m_scaled.solver.solve(m_scaled, tee=tee)\r\n  File \"C:\\Users\\Damdae\\anaconda3\\envs\\arena\\lib\\site-packages\\pyomo\\opt\\base\\solvers.py\", line 569, in solve\r\n    self._presolve(*args, **kwds)\r\n  File \"C:\\Users\\Damdae\\anaconda3\\envs\\arena\\lib\\site-packages\\pyomo\\opt\\solver\\shellcmd.py\", line 205, in _presolve\r\n    OptSolver._presolve(self, *args, **kwds)\r\n  File \"C:\\Users\\Damdae\\anaconda3\\envs\\arena\\lib\\site-packages\\pyomo\\opt\\base\\solvers.py\", line 666, in _presolve\r\n    self._convert_problem(args,\r\n  File \"C:\\Users\\Damdae\\anaconda3\\envs\\arena\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\BARON.py\", line 275, in _convert_problem\r\n    return OptSolver._convert_problem(self,\r\n  File \"C:\\Users\\Damdae\\anaconda3\\envs\\arena\\lib\\site-packages\\pyomo\\opt\\base\\solvers.py\", line 717, in _convert_problem\r\n    return convert_problem(args,\r\n  File \"C:\\Users\\Damdae\\anaconda3\\envs\\arena\\lib\\site-packages\\pyomo\\opt\\base\\convert.py\", line 100, in convert_problem\r\n    problem_files, symbol_map = converter.apply(*tmp, **tmpkw)\r\n  File \"C:\\Users\\Damdae\\anaconda3\\envs\\arena\\lib\\site-packages\\pyomo\\solvers\\plugins\\converter\\model.py\", line 123, in apply\r\n    instance.write(\r\n  File \"C:\\Users\\Damdae\\anaconda3\\envs\\arena\\lib\\site-packages\\pyomo\\core\\base\\block.py\", line 1822, in write\r\n    (filename, smap) = problem_writer(self,\r\n  File \"pyomo\\repn\\plugins\\baron_writer.pyx\", line 548, in pyomo.repn.plugins.baron_writer.ProblemWriter_bar.__call__\r\n  File \"pyomo\\repn\\plugins\\baron_writer.pyx\", line 549, in pyomo.repn.plugins.baron_writer.ProblemWriter_bar.__call__\r\n  File \"pyomo\\repn\\plugins\\baron_writer.pyx\", line 691, in pyomo.repn.plugins.baron_writer.ProblemWriter_bar._write_bar_file\r\n  File \"pyomo\\repn\\plugins\\baron_writer.pyx\", line 275, in pyomo.repn.plugins.baron_writer.ProblemWriter_bar._write_equations_section\r\nValueError: The BARON writer can not export suffix with name 'scaling_factor'. Either remove it from the model or deactivate it.\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.2\r\nPython version: 3.8.12\r\nOperating system: Windows 10 (64bit)\r\nHow Pyomo was installed (PyPI, conda, source): PyPI\r\nSolver (if applicable): Baron\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2332/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2328", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2328/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2328/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2328/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2328", "id": 1159151574, "node_id": "I_kwDOA5FfHs5FFz_W", "number": 2328, "title": "ipopt solver", "user": {"login": "mharyoowa", "id": 99033999, "node_id": "U_kgDOBecjjw", "avatar_url": "https://avatars.githubusercontent.com/u/99033999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mharyoowa", "html_url": "https://github.com/mharyoowa", "followers_url": "https://api.github.com/users/mharyoowa/followers", "following_url": "https://api.github.com/users/mharyoowa/following{/other_user}", "gists_url": "https://api.github.com/users/mharyoowa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mharyoowa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mharyoowa/subscriptions", "organizations_url": "https://api.github.com/users/mharyoowa/orgs", "repos_url": "https://api.github.com/users/mharyoowa/repos", "events_url": "https://api.github.com/users/mharyoowa/events{/privacy}", "received_events_url": "https://api.github.com/users/mharyoowa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-03-04T01:45:16Z", "updated_at": "2022-03-07T22:37:04Z", "closed_at": "2022-03-07T22:37:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\nI tried doing a DAE optimization problem but the ipopt solver kept telling me that the number of iterations has been exceeded. I tried to increase it, but I still got the same thing.\r\n<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `pyomo solve` to optimize a model and ...\" -->\r\n\r\n### Steps to reproduce the issue\r\n#\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```console\r\n$ command1 [options]\r\n$ command2 [options]\r\n#import the necessary packages\r\nfrom pyomo.environ import *\r\nfrom pyomo.dae import *\r\nimport matplotlib.pyplot as plt..\r\n# define the model\r\nm = ConcreteModel()\r\n\r\n# define the parameters\r\nca0 = 4            # % mol/dm^3\r\nConc_h2 = 1.0                    # mol/dm^3\r\n\r\nE1A = 9500                           # cal/mol\r\nE2B = 7000                           # cal/mol\r\nR = 1.987                            # cal/K/mol\r\n\r\nT1A = 320                            # K\r\nT1B = 290                            # K\r\ndHrxnA = -6500                         # cal/mol A\r\ndHrxnB = 8000                         # cal/mol B\r\n\r\nk1A = 1.25                            # h^-1 @ 320K || k1* = K1*exp(E/RT)\r\nk2B = 0.08                            # h^-1 @ 300K\r\n\r\nV0 = 100                            # dm^3\r\nv0 = 240                           # dm^3/h\r\n# V = V0 + v0*t                      #\r\nTi = 305                           # degree K\r\n\r\nCpa = 30                          # cal/mol K\r\nCpb = 60                           #cal/mol K\r\nCpc = 20                           #cal/mol K\r\nCph2 = 35                           # cal/mol K  , H2SO4\r\n\r\nNh2 = Conc_h2 * V0                          ; # mol\r\n\r\nUA = 35000                          # cal/h.K \r\nTa = 298                           # K\r\nFa0 = ca0 * v0                     # mol/h\r\n\r\n# define the ContinuousSet\r\nm.t = ContinuousSet(bounds=(0, 1))\r\n\r\n# define the variables\r\nm.Ca = Var(m.t, within=PositiveReals)     \r\nm.Cb = Var(m.t, within=PositiveReals)     \r\nm.Cc = Var(m.t, within=PositiveReals)     \r\n# m.Cd = Var(m.t, within=PositiveReals)    \r\nm.T = Var(m.t, within=PositiveReals)   \r\n\r\n\r\n# Define the Derivative variables\r\nm.dCadt = DerivativeVar(m.Ca, wrt=m.t)\r\nm.dCbdt = DerivativeVar(m.Cb, wrt=m.t)\r\nm.dCcdt = DerivativeVar(m.Cc, wrt=m.t)\r\n# m.dCddt = DerivativeVar(m.Cd, wrt=m.t)\r\nm.dTdt = DerivativeVar(m.T, wrt=m.t)\r\n\r\n# Define the Objective\r\nm.obj = Objective(expr=m.Cb[max(m.t)], sense=maximize)\r\n\r\n# formulate the differential equations using standard Pyomo Constraints\r\ndef ca_bal(m,t):\r\n    return m.dCadt[t] == (-k1A*exp((E1A/R)*((1/T1A)-(1/m.T[t]))))*m.Ca[t] + ((ca0-m.Ca[t])/V0+v0)\r\nm.ca_bal = Constraint(m.t, rule=ca_bal)\r\n\r\ndef cb_bal(m,t):\r\n    return m.dCbdt[t] == (((k1A*exp((E1A/R)*((1/T1A)-(1/m.T[t]))))*m.Ca[t])/2) - (k2B*exp((E2B/R)*((1/T1B)-(1/m.T[t]))))*m.Cb[t] - ((m.Cb[t])/V0+v0) \r\nm.cb_bal = Constraint(m.t, rule = cb_bal)\r\n\r\ndef cc_bal(m,t):\r\n    return m.dCcdt[t] == (-k1A*exp((E1A/R)*((1/T1A)-(1/m.T[t]))))*m.Ca[t] - ((m.Cc[t])/V0+v0)\r\nm.cc_bal = Constraint(m.t, rule = cc_bal)\r\n\r\n# define the energy balance constraint\r\ndef T_bal(m, t):\r\n    return m.dTdt[t] == (UA*(Ta-m.T[t]) - Fa0*Cpa*(m.T[t]-Ti) + ((dHrxnA*((-k1A*exp((E1A/R)*((1/T1A)-(1/m.T[t]))))*m.Ca[t]))+(dHrxnB*(-k2B*exp((E2B/R)*((1/T1B)-(1/m.T[t]))))*m.Cb[t])))*(V0+v0*t)/(m.Ca[t]*Cpa + m.Cb[t]*Cpb + m.Cc[t]*Cpc)*(V0+v0*t) + Nh2*Cph2  \r\nm.T_bal = Constraint(m.t, rule=T_bal)\r\n\r\ndef _init(m):\r\n    yield m.Ca[0] == 1.2\r\n    yield m.Cb[0] == 0\r\n    yield m.Cc[m.t.first()] == 0\r\n    #yield m.Cd[m.t.last()] == 1\r\n    yield m.T[0] == 0\r\nm.init = ConstraintList(rule=_init)\r\n\r\n# Discretize model using radau collocation\r\ndiscretizer = TransformationFactory('dae.collocation')\r\ndiscretizer.apply_to(m,nfe=4,ncp=4,scheme='LAGRANGE-RADAU') \r\n\r\n# solve\r\nsolver = SolverFactory('ipopt')\r\n#solver.options['max_iter']= 10000\r\nresult= solver.solve(m, tee=True)\r\nm.pprint()\r\n```\r\n\r\n```\r\n# example.py\r\nimport pyomo.environ\r\n...\r\n```\r\n\r\n### Error Message\r\n\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\n$ # Output message here, including entire stack trace, if available\r\nNumber of Iterations....: 3000\r\n\r\n                                   (scaled)                 (unscaled)\r\nObjective...............:  0.0000000000000000e+000   0.0000000000000000e+000\r\nDual infeasibility......:  8.5324792383542287e+008   8.5324792383542287e+008\r\nConstraint violation....:  1.9616258159438503e+012   1.9616258159438503e+012\r\nComplementarity.........:  3.5513964257473056e+006   3.5513964257473056e+006\r\nOverall NLP error.......:  1.9616258159438503e+012   1.9616258159438503e+012\r\n\r\n\r\nNumber of objective function evaluations             = 3008\r\nNumber of objective gradient evaluations             = 3\r\nNumber of equality constraint evaluations            = 71777\r\nNumber of inequality constraint evaluations          = 0\r\nNumber of equality constraint Jacobian evaluations   = 3003\r\nNumber of inequality constraint Jacobian evaluations = 0\r\nNumber of Lagrangian Hessian evaluations             = 3000\r\nTotal CPU secs in IPOPT (w/o function evaluations)   =      5.979\r\nTotal CPU secs in NLP function evaluations           =      1.466\r\n\r\nEXIT: Maximum Number of Iterations Exceeded.\r\nWARNING: Loading a SolverResults object with a warning status into\r\n    model.name=\"unknown\";\r\n      - termination condition: maxIterations\r\n      - message from solver: Ipopt 3.11.1\\x3a Maximum Number of Iterations\r\n        Exceeded.\r\n\u200b\r\n\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: latest version\r\nPython version: 3.10\r\nOperating system: Windows 11\r\nHow Pyomo was installed (PyPI, conda, source): Conda\r\nSolver (if applicable): ipopt\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2328/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2317", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2317/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2317/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2317/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2317", "id": 1150704697, "node_id": "I_kwDOA5FfHs5Ellw5", "number": 2317, "title": "`build-extensions` fails on pip install because it can't find `FindASL.cmake`", "user": {"login": "Robbybp", "id": 8885032, "node_id": "MDQ6VXNlcjg4ODUwMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/8885032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Robbybp", "html_url": "https://github.com/Robbybp", "followers_url": "https://api.github.com/users/Robbybp/followers", "following_url": "https://api.github.com/users/Robbybp/following{/other_user}", "gists_url": "https://api.github.com/users/Robbybp/gists{/gist_id}", "starred_url": "https://api.github.com/users/Robbybp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Robbybp/subscriptions", "organizations_url": "https://api.github.com/users/Robbybp/orgs", "repos_url": "https://api.github.com/users/Robbybp/repos", "events_url": "https://api.github.com/users/Robbybp/events{/privacy}", "received_events_url": "https://api.github.com/users/Robbybp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-02-25T17:48:14Z", "updated_at": "2022-02-26T02:28:11Z", "closed_at": "2022-02-26T02:28:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\nIn a fresh Python 3.9.9 environment, I ran `pip install pyomo`, then `pyomo build-extensions`, and get a failure to build the PyNumero libraries as `ampl_function_demo/src/FindASL.cmake` is not found. It doesn't appear to be anywhere in `site_packages`.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```console\r\n$ pip install pyomo\r\n$ pyomo build-extensions\r\n```\r\n\r\n### Error Message\r\n\r\n```\r\n**** Building PyNumero libraries ****\r\n-- The C compiler identification is GNU 7.5.0\r\n-- The CXX compiler identification is GNU 7.5.0\r\n-- Check for working C compiler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Check for working CXX compiler: /usr/bin/c++\r\n-- Check for working CXX compiler: /usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\nCMake Error at CMakeLists.txt:18 (INCLUDE):\r\n  INCLUDE could not find load file:\r\n\r\n    /home/robert/idaes/fresh-env/lib/python3.9/site-packages/pyomo/contrib/pynumero/src/../../ampl_function_demo/src/FindASL.cmake\r\n\r\n\r\n-- Found PkgConfig: /usr/bin/pkg-config (found version \"0.29.1\") \r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/tmp/tmpmu0rmdiu/CMakeFiles/CMakeOutput.log\".\r\nERROR: DistutilsExecError: command '/usr/bin/cmake' failed with exit code 1\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.3.0\r\nPython version: 3.9.9\r\nOperating system: Ubuntu 18.04\r\nHow Pyomo was installed (PyPI, conda, source): pip\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2317/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2316", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2316/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2316/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2316/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2316", "id": 1150642588, "node_id": "I_kwDOA5FfHs5ElWmc", "number": 2316, "title": "APPSI: 'Could not import gurobipy'", "user": {"login": "erikfilias", "id": 8010477, "node_id": "MDQ6VXNlcjgwMTA0Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/8010477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikfilias", "html_url": "https://github.com/erikfilias", "followers_url": "https://api.github.com/users/erikfilias/followers", "following_url": "https://api.github.com/users/erikfilias/following{/other_user}", "gists_url": "https://api.github.com/users/erikfilias/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikfilias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikfilias/subscriptions", "organizations_url": "https://api.github.com/users/erikfilias/orgs", "repos_url": "https://api.github.com/users/erikfilias/repos", "events_url": "https://api.github.com/users/erikfilias/events{/privacy}", "received_events_url": "https://api.github.com/users/erikfilias/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 45, "created_at": "2022-02-25T16:34:01Z", "updated_at": "2022-05-11T14:15:14Z", "closed_at": "2022-05-11T14:15:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear all,\r\n\r\nI tried to use APPSI and Gurobi as solver but I got this error: 'Could not import gurobipy'\r\nBy running the example:\r\n\r\n```\r\nfrom gurobipy import GRB \r\nimport pyomo.environ as pe\r\nfrom pyomo.core.expr.taylor_series import taylor_series_expansion\r\nfrom pyomo.contrib import appsi\r\n\r\nm = pe.ConcreteModel()\r\nm.x = pe.Var(bounds=(0, 4))\r\nm.y = pe.Var(within=pe.Integers, bounds=(0, None))\r\nm.obj = pe.Objective(expr=2*m.x + m.y)\r\nm.cons = pe.ConstraintList()  # for the cutting planes\r\n\r\ndef _add_cut(xval):\r\n    # a function to generate the cut\r\n    m.x.value = xval\r\n    return m.cons.add(m.y >= taylor_series_expansion((m.x - 2)**2))\r\n\r\n_c = _add_cut(0)  # start with 2 cuts at the bounds of x\r\n_c = _add_cut(4)  # this is an arbitrary choice\r\n\r\nopt = appsi.solvers.Gurobi()\r\nopt.config.stream_solver = True\r\nopt.set_instance(m) \r\nopt.gurobi_options['PreCrush'] = 1\r\nopt.gurobi_options['LazyConstraints'] = 1\r\n\r\ndef my_callback(cb_m, cb_opt, cb_where):\r\n    if cb_where == GRB.Callback.MIPSOL:\r\n        cb_opt.cbGetSolution(vars=[m.x, m.y])\r\n        if m.y.value < (m.x.value - 2)**2 - 1e-6:\r\n            cb_opt.cbLazy(_add_cut(m.x.value))\r\n\r\nopt.set_callback(my_callback)\r\nres = opt.solve(m) \r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/8010477/155751504-1eefa246-4dfd-4e4e-8dff-e496dbeed4a4.png)\r\n\r\nI have the packages:\r\n- pyomo 6.3.0\r\n- gurobipy 9.5.1\r\n\r\nAnd:\r\n-Gurobi 9.5.1 with its respective license.\r\n\r\nPlease, let me know if I made something wrong.\r\n\r\nBest regards,\r\nErik\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2316/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2307", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2307/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2307/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2307/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2307", "id": 1148386147, "node_id": "I_kwDOA5FfHs5Ecvtj", "number": 2307, "title": "DAE Error", "user": {"login": "mharyoowa", "id": 99033999, "node_id": "U_kgDOBecjjw", "avatar_url": "https://avatars.githubusercontent.com/u/99033999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mharyoowa", "html_url": "https://github.com/mharyoowa", "followers_url": "https://api.github.com/users/mharyoowa/followers", "following_url": "https://api.github.com/users/mharyoowa/following{/other_user}", "gists_url": "https://api.github.com/users/mharyoowa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mharyoowa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mharyoowa/subscriptions", "organizations_url": "https://api.github.com/users/mharyoowa/orgs", "repos_url": "https://api.github.com/users/mharyoowa/repos", "events_url": "https://api.github.com/users/mharyoowa/events{/privacy}", "received_events_url": "https://api.github.com/users/mharyoowa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-02-23T17:39:42Z", "updated_at": "2022-02-23T18:29:53Z", "closed_at": "2022-02-23T18:29:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\nTrying to solve a DAE problem using the Coolocation Transformation Discretization method. I keep getting an Attribute Error.\r\n<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `pyomo solve` to optimize a model and ...\" -->\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```console\r\n$ command1 [options]\r\n# import the neeeded packages/libraries\r\nfrom pyomo.environ import *\r\nfrom pyomo.dae import *\r\nimport numpy as np\r\nfrom math import pi\r\n\r\n# Define the model\r\nmodel = ConcreteModel()\r\n\r\n# Parameters provided\r\nk1 = 5.0 / 6.0     # min^-1\r\nk2 = 5.0 / 3.0     # min^-1\r\nk3 = 1.0 / 6000    # m^3/(gmol min)\r\ncaf = 10000.0      # gmol/m^3\r\n\r\n# define the Parameters and ContinuousSet\r\nmodel.k1 = Param(initialize = k1)\r\nmodel.k2 = Param(initialize = k2)\r\nmodel.k3 = Param(initialize = k3)\r\nmodel.caf = Param(initialize = caf)\r\nmodel.t = ContinuousSet(bounds=(0, 1))\r\n\r\n# define the variables\r\nmodel.sv = Var(model.t, initialize = 1.0, within=PositiveReals)\r\nmodel.ca = Var(model.t, initialize = 5000.0, within=PositiveReals)\r\nmodel.cb = Var(model.t, initialize = 2000.0, within=PositiveReals)\r\nmodel.cc = Var(model.t, initialize = 2000.0, within=PositiveReals)\r\nmodel.cd = Var(model.t, initialize = 1000.0, within=PositiveReals)\r\n\r\n# define the Derivative Variables\r\nmodel.dcadt = DerivativeVar(model.ca, wrt=model.t)\r\nmodel.dcbdt = DerivativeVar(model.cb, wrt=model.t)\r\nmodel.dccdt = DerivativeVar(model.cc, wrt=model.t)\r\nmodel.dcddt = DerivativeVar(model.cd, wrt=model.t)\r\n$ command2 [options]\r\n# Define the Objective\r\ndef objec(model):\r\n    return model.cb\r\nmodel.obj = Objective(rule=objec, sense=maximize)\r\n\r\n# formulate the differential equations using standard Pyomo Constraints\r\ndef ca_bal(model, t):\r\n    return model.dcadt[t] == model.sv[t] * caf - model.sv[t] * model.ca[t] - k1 * model.ca[t] - 2.0 * k3 * model.ca[t] ** 2.0\r\nmodel.ca_bal = Constraint(model.t, rule=ca_bal)\r\n\r\ndef cb_bal(model, t):\r\n    return model.dcbdt[t] == -model.sv[t] * model.cb[t] + k1 * model.ca[t] - k2 * model.cb[t]\r\nmodel.cb_bal = Constraint(model.t, rule = cb_bal)\r\n\r\ndef cc_bal(model, t):\r\n    return model.dccdt[t] ==  -model.sv[t] * model.cc[t] + k2 * model.cb[t]\r\nmodel.cc_bal = Constraint(model.t, rule = cc_bal)\r\n\r\ndef cd_bal(model, t):\r\n    return model.dcddt[t] ==  -model.sv[t] * model.cd[t] + k3 * model.ca[t] ** 2.0\r\nmodel.cd_bal = Constraint(model.t, rule=cd_bal)\r\n\r\n# Speicfy the initial or boundary conditions\r\ndef _init(model):\r\n    yield model.ca[0] == 0\r\n    yield model.cb[0] == -1\r\n    yield model.cc[0] == 0\r\n    yield model.cd[0] == 0\r\nmodel.init_conditions = ConstraintList(rule=_init)\r\n\r\n# Discretize model using radau collocation\r\ndiscretizer = TransformationFactory('dae.collocation')\r\ndiscretizer.apply_to(model,nfe=7,ncp=6,scheme='LAGRANGE-RADAU')\r\n\r\n# Solve algebraic model\r\nopt = SolverFactory('ipopt')\r\nresults = opt.solve(model, tee=True)\r\n```\r\n\r\n```\r\n# example.py\r\nimport pyomo.environ\r\n...\r\n```\r\n\r\n### Error Message\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n~\\AppData\\Local\\Temp/ipykernel_16528/2025479577.py in <module>\r\n      5 # Solve algebraic model\r\n      6 opt = SolverFactory('ipopt')\r\n----> 7 results = opt.solve(model, tee=True)\r\n\r\n~\\Anaconda5\\lib\\site-packages\\pyomo\\opt\\base\\solvers.py in solve(self, *args, **kwds)\r\n    567             initial_time = time.time()\r\n    568 \r\n--> 569             self._presolve(*args, **kwds)\r\n    570 \r\n    571             presolve_completion_time = time.time()\r\n\r\n~\\Anaconda5\\lib\\site-packages\\pyomo\\opt\\solver\\shellcmd.py in _presolve(self, *args, **kwds)\r\n    203         self._define_signal_handlers = kwds.pop('use_signal_handling',None)\r\n    204 \r\n--> 205         OptSolver._presolve(self, *args, **kwds)\r\n    206 \r\n    207         #\r\n\r\n~\\Anaconda5\\lib\\site-packages\\pyomo\\opt\\base\\solvers.py in _presolve(self, *args, **kwds)\r\n    664             write_start_time = time.time()\r\n    665             (self._problem_files, self._problem_format, self._smap_id) = \\\r\n--> 666                 self._convert_problem(args,\r\n    667                                       self._problem_format,\r\n    668                                       self._valid_problem_formats,\r\n\r\n~\\Anaconda5\\lib\\site-packages\\pyomo\\opt\\base\\solvers.py in _convert_problem(self, args, problem_format, valid_problem_formats, **kwds)\r\n    715                          valid_problem_formats,\r\n    716                          **kwds):\r\n--> 717         return convert_problem(args,\r\n    718                                problem_format,\r\n    719                                valid_problem_formats,\r\n\r\n~\\Anaconda5\\lib\\site-packages\\pyomo\\opt\\base\\convert.py in convert_problem(args, target_problem_type, valid_problem_types, has_capability, **kwds)\r\n     98                     tmpkw = kwds\r\n     99                     tmpkw['capabilities'] = has_capability\r\n--> 100                     problem_files, symbol_map = converter.apply(*tmp, **tmpkw)\r\n    101                     return problem_files, ptype, symbol_map\r\n    102 \r\n\r\n~\\Anaconda5\\lib\\site-packages\\pyomo\\solvers\\plugins\\converter\\model.py in apply(self, *args, **kwds)\r\n    178                 else:\r\n    179                     (problem_filename, symbol_map_id) = \\\r\n--> 180                         instance.write(\r\n    181                             filename=problem_filename,\r\n    182                             format=args[1],\r\n\r\n~\\Anaconda5\\lib\\site-packages\\pyomo\\core\\base\\block.py in write(self, filename, format, solver_capability, io_options)\r\n   1820         if solver_capability is None:\r\n   1821             def solver_capability(x): return True\r\n-> 1822         (filename, smap) = problem_writer(self,\r\n   1823                                           filename,\r\n   1824                                           solver_capability,\r\n\r\npyomo\\repn\\plugins\\ampl\\ampl_.pyx in pyomo.repn.plugins.ampl.ampl_.ProblemWriter_nl.__call__()\r\n\r\npyomo\\repn\\plugins\\ampl\\ampl_.pyx in pyomo.repn.plugins.ampl.ampl_.ProblemWriter_nl.__call__()\r\n\r\npyomo\\repn\\plugins\\ampl\\ampl_.pyx in pyomo.repn.plugins.ampl.ampl_.ProblemWriter_nl.__call__()\r\n\r\npyomo\\repn\\plugins\\ampl\\ampl_.pyx in pyomo.repn.plugins.ampl.ampl_.ProblemWriter_nl._print_model_NL()\r\n\r\npyomo\\repn\\standard_repn.pyx in pyomo.repn.standard_repn.generate_standard_repn()\r\n\r\nAttributeError: 'IndexedVar' object has no attribute 'is_potentially_variable'\r\n\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\n$ # Output message here, including entire stack trace, if available\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: latest version\r\nPython version: 3.10\r\nOperating system:  Windows 11\r\nHow Pyomo was installed (PyPI, conda, source): conda\r\nSolver (if applicable): ipopt, glpk\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2307/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2292", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2292/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2292/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2292/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2292", "id": 1145077899, "node_id": "I_kwDOA5FfHs5EQICL", "number": 2292, "title": "Pyomo with GLPK says LP model is infeasible, Pyomo with CPLEX solves it. Exported lp file is solved with Rglpk.", "user": {"login": "cristianoarbex", "id": 13877116, "node_id": "MDQ6VXNlcjEzODc3MTE2", "avatar_url": "https://avatars.githubusercontent.com/u/13877116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cristianoarbex", "html_url": "https://github.com/cristianoarbex", "followers_url": "https://api.github.com/users/cristianoarbex/followers", "following_url": "https://api.github.com/users/cristianoarbex/following{/other_user}", "gists_url": "https://api.github.com/users/cristianoarbex/gists{/gist_id}", "starred_url": "https://api.github.com/users/cristianoarbex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cristianoarbex/subscriptions", "organizations_url": "https://api.github.com/users/cristianoarbex/orgs", "repos_url": "https://api.github.com/users/cristianoarbex/repos", "events_url": "https://api.github.com/users/cristianoarbex/events{/privacy}", "received_events_url": "https://api.github.com/users/cristianoarbex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-02-20T17:06:17Z", "updated_at": "2022-02-20T19:16:37Z", "closed_at": "2022-02-20T19:16:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nI create a specific linear programming model in Pyomo. When using GLPK, Pyomo says the model is infeasible. When using CPLEX, Pyomo finds an optimal solution. When exporting the model to an .lp file and importing it in R to solve with Rglpk, Rglpk finds the same solution as CPLEX. So GLPK is able to solve the model, and so is Pyomo with CPLEX, but not Pyomo with GLPK.\r\n\r\n### Steps to reproduce the issue\r\n\r\nTo reproduce the issue, just run the following script.\r\n\r\n```\r\nimport numpy as np\r\nimport pyomo.environ as pyo\r\n\r\nn = 93\r\n\r\nV = np.array([11.730319420000001, 36.849338539999998, 27.705280250000001, 7.5745775799999997, 97.995205769999998, 28.25, 17.9259159, 29.771734179999999, 16.29708334, 17.666370780000001, 23.87688219, 11.6506922, 19.889791559999999, 8.3660159699999994, 14.480439410000001, 20.739999999999998, 19.46049614, 9.8599999999999994, 14.43424933, 26.26870263, 4.3682751, 8.65648266, 5.9800000000000004, 26.344197980000001, 19.653359569999999, 18.035915129999999, 12.987109800000001, 15.42802444, 16.95822768, 22.400859730000001, 14.38523723, 13.6, 40.496442260000002, 31.953094549999999, 32.759015130000002, 6.9000000000000004, 16.869589980000001, 11.94, 41.157872130000001, 22.57308888, 40.460185340000002, 27.876603769999999, 17.820548299999999, 72.745482050000007, 7.3567991299999997, 21.199999999999999, 13.145497799999999, 19.283275339999999, 29.523811049999999, 6.1200000000000001, 8.3861110300000004, 19.046042539999998, 21.182221729999998, 7.1281961599999999, 24.005693659999999, 10.658677089999999, 12.76943033, 21.641596790000001, 14.45783958, 35.562341480000001, 40.187951669999997, 33.959244230000003, 22.53516909, 17.291812409999999, 14.511902470000001, 16.890307830000001, 21.69489372, 53.259999999999998, 17.809726959999999, 17.621945440000001, 7.7999999999999998, 24.054923630000001, 30.46803023, 22.51742702, 21.489999999999998, 11.49591682, 52.360363020000001, 24.919769599999999, 25.206446270000001, 47.207010869999998, 21.664199320000002, 45.576122939999998, 24.367136760000001, 11.050000000000001, 17.380109650000001, 21.557569770000001, 10.01881053, 50.521234999999997, 19.98623787, 18.370000000000001, 47.31917181, 31.27274688, 29.63700631], dtype = float)\r\n\r\n\r\nX = [8.2360332, 2.63938314, 3.56431834, 12.55762582, 0.97055273, 3.93826255, 5.43938582, 3.11047037, 5.60305788, 5.16483131, 3.88463603, 8.66470906, 4.99018739, 10.92488857, 6.7255133, 4.84694075, 5.00134942, 10.24781758, 6.91417553, 3.56189066, 22.50095597, 11.21831285, 16.11345692, 3.7636964, 4.91793862, 5.18568454, 7.30561815, 6.79275718, 5.57472131, 4.4608923, 6.94868595, 7.15228036, 2.39136751, 2.85780288, 2.81928522, 13.0690791, 5.61001159, 7.96233308, 2.40254541, 4.19272595, 2.47128446, 3.53613536, 5.53249142, 1.3030397, 13.26518175, 4.84694075, 7.34036807, 4.97382546, 3.17543215, 13.93408289, 11.08691866, 4.89924259, 4.85196927, 14.61757685, 4.00178349, 9.19951845, 7.66011612, 4.59501511, 6.47538868, 2.74367863, 2.34102355, 2.87714297, 4.37143378, 5.77241884, 6.58945723, 5.72718123, 4.55408895, 1.9583797, 5.08564382, 5.19821223, 10.99226743, 3.87531641, 3.10357733, 4.36162284, 4.3349094, 9.0474757, 1.92857414, 3.65867725, 3.75755598, 1.98841817, 4.33060798, 2.06136993, 3.99945351, 8.63888279, 5.51967535, 4.67201799, 9.84752657, 1.96185297, 4.81728206, 5.12390879, 2.00253269, 3.04098499, 3.54166415]\r\n\r\nw = np.repeat(0.010638297872340425, n)\r\nf = np.repeat(0.0005, n)\r\n\r\nmodel = pyo.ConcreteModel()\r\nmodel.N  = pyo.Set(initialize = range(0, n))\r\nmodel.P  = pyo.Param(initialize = 9081.368814127256)\r\nmodel.wc = pyo.Param(initialize = 0.010638297872340425)\r\n\r\nmodel.G = pyo.Var(model.N, within = pyo.NonNegativeReals)\r\nmodel.x = pyo.Var(model.N, within = pyo.Reals)\r\nmodel.c = pyo.Var(within = pyo.Reals)\r\n\r\ndef objective(model):\r\n    return sum(model.G[i] for i in model.N)\r\n\r\ndef const1(model):\r\n    return sum(V[i]*model.x[i] for i in model.N) + model.c == model.P - sum(model.G[j] for j in model.N)\r\n\r\ndef const2(model):\r\n    return model.c == model.wc * (model.P - sum(model.G[j] for j in model.N))\r\n\r\ndef const3(model, i):\r\n    return V[i]*model.x[i] == w[i] * (model.P - sum(model.G[j] for j in model.N))\r\n\r\ndef const4(model, i):\r\n    return model.G[i] >= (model.x[i] - X[i])*f[i]*V[i]\r\n    \r\ndef const5(model, i):\r\n    return model.G[i] >= (X[i] - model.x[i])*f[i]*V[i]\r\n\r\nmodel.objective = pyo.Objective(rule = objective, sense = pyo.minimize)\r\nmodel.const1    = pyo.Constraint(rule = const1)\r\nmodel.const2    = pyo.Constraint(rule = const2)\r\nmodel.const3    = pyo.Constraint(model.N, rule = const3)\r\nmodel.const4    = pyo.Constraint(model.N, rule = const4)\r\nmodel.const5    = pyo.Constraint(model.N, rule = const5)\r\n\r\nmodel.write(\"test.lp\")\r\n\r\nsolver1 = pyo.SolverFactory(\"glpk\")\r\nsolver2 = pyo.SolverFactory(\"cplex\")\r\n\r\nr1 = solver1.solve(model, tee = True)\r\nr2 = solver2.solve(model, tee = False)\r\n        \r\nprint(r1)\r\nprint(r2)\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.2\r\nNumpy version: 1.22.2\r\nPython version: 3.8.10 and 3.9.10\r\nOperating system: Ubuntu 20.04\r\nHow Pyomo was installed: ```python3 -m pip install pyomo```\r\nSolver (if applicable): GLPK\r\n\r\n### Additional information\r\n\r\nTo import the LP ```test.lp``` file into Rglpk, I run from RStudio:\r\n\r\n```\r\nx = Rglpk_read_file(\"test.lp\", type = \"CPLEX_LP\")\r\nRglpk_solve_LP(x$objective, x$constraints[[1]], x$constraints[[2]],  x$constraints[[3]], x$bounds, x$types, x$maximum)\r\n```\r\n\r\nThe output of printing the return from ```solve``` for GLPK and CPLEX respectively was:\r\n\r\n```\r\nProblem: \r\n- Name: unknown\r\n  Lower bound: -inf\r\n  Upper bound: inf\r\n  Number of objectives: 1\r\n  Number of constraints: 282\r\n  Number of variables: 188\r\n  Number of nonzeros: 9396\r\n  Sense: minimize\r\nSolver: \r\n- Status: ok\r\n  Termination condition: other\r\n  Statistics: \r\n    Branch and bound: \r\n      Number of bounded subproblems: 0\r\n      Number of created subproblems: 0\r\n  Error rc: 0\r\n  Time: 0.026372909545898438\r\n\r\n\r\nProblem: \r\n- Name: tmp35a_c4u6\r\n  Lower bound: 0.14337542997495376\r\n  Upper bound: 0.14337542997495376\r\n  Number of objectives: 1\r\n  Number of constraints: 282\r\n  Number of variables: 188\r\n  Number of nonzeros: 9396\r\n  Sense: minimize\r\nSolver: \r\n- Status: ok\r\n  User time: 0.01\r\n  Termination condition: optimal\r\n  Termination message: Dual simplex - Optimal\\x3a Objective = 1.4337542997e-01\r\n  Error rc: 0\r\n  Time: 0.04046177864074707\r\nSolution: \r\n- number of solutions: 0\r\n  number of solutions displayed: 0\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2292/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2290", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2290/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2290/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2290/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2290", "id": 1140072850, "node_id": "I_kwDOA5FfHs5D9CGS", "number": 2290, "title": "Termination condition is optimal but number of solutions is 0", "user": {"login": "Meth-GitHub", "id": 99499156, "node_id": "U_kgDOBe48lA", "avatar_url": "https://avatars.githubusercontent.com/u/99499156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Meth-GitHub", "html_url": "https://github.com/Meth-GitHub", "followers_url": "https://api.github.com/users/Meth-GitHub/followers", "following_url": "https://api.github.com/users/Meth-GitHub/following{/other_user}", "gists_url": "https://api.github.com/users/Meth-GitHub/gists{/gist_id}", "starred_url": "https://api.github.com/users/Meth-GitHub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Meth-GitHub/subscriptions", "organizations_url": "https://api.github.com/users/Meth-GitHub/orgs", "repos_url": "https://api.github.com/users/Meth-GitHub/repos", "events_url": "https://api.github.com/users/Meth-GitHub/events{/privacy}", "received_events_url": "https://api.github.com/users/Meth-GitHub/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2022-02-16T14:11:05Z", "updated_at": "2022-02-16T20:47:49Z", "closed_at": "2022-02-16T17:15:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using pyomo (Pyomo 5.7.3 (CPython 3.9.6 on Windows 10)) with cbc (CBC 2.10.5) to solve a MILP. Using the following command\r\n```\r\nresults = opt.solve(self.model, tee=False, logfile=\"model.log\",options_string=solver_parameters)\r\nprint(results)\r\n```\r\nI get the following\r\n```\r\nProblem:\r\n- Lower bound: -inf\r\n  Upper bound: inf\r\n  Number of objectives: 1\r\n  Number of constraints: 0\r\n  Number of variables: 0\r\n  Sense: unknown\r\nSolver:\r\n- Status: ok\r\n  Message: CBC 2.10.5\r\n  Termination condition: optimal\r\n  Id: 0\r\n  Error rc: 0\r\n  Time: 0.012964248657226562\r\nSolution:\r\n- number of solutions: 0\r\n  number of solutions displayed: 0\r\n```\r\nStatus if `ok` and termination is `optimal`, however the number of solution if 0, which is confirmed when trying to access the objective value.\r\nI've used different solvers with pyomo, as well as stand alone cbc, and, and in any case the solver returned a status of infeasible.\r\n\r\nI'm also surprised that number of constraints and number of variables are 0.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2290/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2271", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2271/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2271/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2271/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2271", "id": 1114418407, "node_id": "I_kwDOA5FfHs5CbKzn", "number": 2271, "title": "contrib.deactivate_trivial_constraints can miss trivial constraints", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-01-25T22:18:36Z", "updated_at": "2022-03-02T17:58:45Z", "closed_at": "2022-03-02T17:58:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nThe `contrib.deactivate_trivial_constraints` transformation uses the polynomial degree of the constraint expression to decide if the expression is constant. That's not actually a reliable method of doing so, meaning that it can miss trivial constraints like in the example below, where the polynomial degree of the constraint body evaluates to 1.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\nfrom pyomo.environ import *\r\n\r\nm = ConcreteModel()\r\nm.x = Var()\r\nm.y = Var()\r\nm.y.fix(0)\r\nm.c = Constraint(expr=m.x*m.y >= 0)\r\n\r\nTransformationFactory('contrib.deactivate_trivial_constraints').apply_to(m)\r\n\r\nprint(m.c.active) # True\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: main\r\nPython version: 3.8\r\nOperating system: linux\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable):\r\n\r\n\r\n### Additional information\r\n\r\nI think you could use `generate_standard_repn` to actually detect if a constraint body is constant. This isn't a bug in the sense that it does the wrong thing, but it does fall short on its promises.\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2271/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2267", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2267/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2267/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2267/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2267", "id": 1110145859, "node_id": "I_kwDOA5FfHs5CK3tD", "number": 2267, "title": "BARON 22.1.19 causing tests to time-out and test failures", "user": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-01-21T07:29:15Z", "updated_at": "2022-01-21T22:03:45Z", "closed_at": "2022-01-21T22:03:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Summary\r\n\r\nThe new version of BARON (released 1/19/2021) is causing our testing infrastructure to time-out and some test failures. These are the tests that are failing:\r\n\r\n```\r\ntest_baron_bar (pyomo.solvers.tests.checks.test_no_solution_behavior.Test_LP_unbounded_kernel)\r\ntest_baron_bar_nonsymbolic_labels (pyomo.solvers.tests.checks.test_writers.Test_LP_block)\r\ntest_baron_bar_symbolic_labels (pyomo.solvers.tests.checks.test_writers.Test_LP_block)\r\ntest_baron_bar_nonsymbolic_labels (pyomo.solvers.tests.checks.test_writers.Test_LP_block_kernel)\r\ntest_baron_bar_symbolic_labels (pyomo.solvers.tests.checks.test_writers.Test_LP_block_kernel)\r\ntest_baron_bar_nonsymbolic_labels (pyomo.solvers.tests.checks.test_writers.Test_LP_simple)\r\ntest_baron_bar_symbolic_labels (pyomo.solvers.tests.checks.test_writers.Test_LP_simple)\r\ntest_baron_bar_nonsymbolic_labels (pyomo.solvers.tests.checks.test_writers.Test_LP_simple_kernel)\r\ntest_baron_bar_symbolic_labels (pyomo.solvers.tests.checks.test_writers.Test_LP_simple_kernel)\r\n```\r\n\r\nSince the GHA jobs are timing out, the output from these failed tests is not being printed out.\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2267/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2261", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2261/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2261/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2261/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2261", "id": 1107467431, "node_id": "I_kwDOA5FfHs5CApyn", "number": 2261, "title": "gdp.fix_disjuncts assumes all Disjuncts are set and doesn't die very gracefully if they aren't", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838440520, "node_id": "MDU6TGFiZWw4Mzg0NDA1MjA=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.gdp", "name": "pyomo.gdp", "color": "a848f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-01-18T23:34:21Z", "updated_at": "2022-01-26T18:15:51Z", "closed_at": "2022-01-26T18:15:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nThis is issue is mainly a question, which is: Should the `gdp.fix_disjuncts` transformation be a transformation from a GDP to a MI(N)LP? Historically, this seems to have been assumed: at least in `gdpopt`, after `fix_disjuncts` is called, it is assumed that the NLP subproblem can be solved with a MI(N)LP solver. The alternative would be for it to support `Disjunction` targets, in which case it should complain if not all the Disjuncts' indicator_vars in the Disjunction are set, but it could leave unspecified Disjunctions alone. In the first case, I think it would have a responsibility to transform logical stuff on the model. In the second case, probably not. In either case, it needs an error message that tells the user something more informative than the `ValueError` below.\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```\r\nfrom pyomo.environ import *\r\nfrom pyomo.gdp import *\r\n\r\nm = ConcreteModel()\r\nm.d1 = Disjunct()\r\nm.d2 = Disjunct()\r\nm.d = Disjunction(expr=[m.d1, m.d2])\r\nm.another1 = Disjunct()\r\nm.another2 = Disjunct()\r\nm.another = Disjunction(expr=[m.another1, m.another2])\r\n\r\nm.d1.indicator_var.set_value(True)\r\nm.d2.indicator_var.set_value(False)\r\n        \r\nTransformationFactory('gdp.fix_disjuncts').apply_to(m)\r\n```\r\n\r\n### Error Message\r\n\r\n```\r\nERROR: evaluating object as numeric value: another1.binary_indicator_var\r\n        (object: <class 'pyomo.gdp.disjunct.AutoLinkedBinaryVar'>)\r\n    No value for uninitialized NumericValue object\r\n    another1.binary_indicator_var\r\nTraceback (most recent call last):\r\n  File \"partially_fixed.py\", line 15, in <module>\r\n    TransformationFactory('gdp.fix_disjuncts').apply_to(m)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/transformation.py\", line 69, in apply_to\r\n    self._apply_to(model, **kwds)\r\n  File \"/home/esjohn/src/pyomo/pyomo/gdp/plugins/fix_disjuncts.py\", line 49, in _apply_to\r\n    self._transformContainer(model)\r\n  File \"/home/esjohn/src/pyomo/pyomo/gdp/plugins/fix_disjuncts.py\", line 66, in _transformContainer\r\n    if fabs(value(_binary) - 1) <= self.config.integer_tolerance:\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/expr/numvalue.py\", line 143, in value\r\n    raise ValueError(\r\nValueError: No value for uninitialized NumericValue object another1.binary_indicator_var\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: main\r\nPython version: 3.8\r\nOperating system: centos7\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable): ", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2261/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2255", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2255/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2255/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2255/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2255", "id": 1105952323, "node_id": "I_kwDOA5FfHs5B635D", "number": 2255, "title": "Consistent semantic versioning", "user": {"login": "rhshadrach-8451", "id": 95938924, "node_id": "U_kgDOBbfpbA", "avatar_url": "https://avatars.githubusercontent.com/u/95938924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhshadrach-8451", "html_url": "https://github.com/rhshadrach-8451", "followers_url": "https://api.github.com/users/rhshadrach-8451/followers", "following_url": "https://api.github.com/users/rhshadrach-8451/following{/other_user}", "gists_url": "https://api.github.com/users/rhshadrach-8451/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhshadrach-8451/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhshadrach-8451/subscriptions", "organizations_url": "https://api.github.com/users/rhshadrach-8451/orgs", "repos_url": "https://api.github.com/users/rhshadrach-8451/repos", "events_url": "https://api.github.com/users/rhshadrach-8451/events{/privacy}", "received_events_url": "https://api.github.com/users/rhshadrach-8451/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-01-17T14:49:58Z", "updated_at": "2022-01-21T11:59:26Z", "closed_at": "2022-01-20T22:16:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nThe most recent version of Pyomo released was 6.2, as opposed to 6.2.0. It seems inconsistent with the way many other packages are versioned (e.g. NumFocus packages), although I am unaware if there is a standard specified anywhere. Is there a benefit to the former as opposed to the latter? \r\n\r\n## Context\r\n\r\nManaging our dependencies, we automate pulling in new versions of packages, running them through our CI prior to upgrading. We run this in two ways - one allowing all upgrades and one allowing only compatible upgrades (PEP 440). This always requires manual review because not all packages use semantic versioning (or the same semantic versioning). One manual override we had to apply this time was pinning `Pyomo ~= 6.2.0` instead of what our script automatically pulled in `Pyomo ~= 6.2`.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2255/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2241", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2241/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2241/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2241/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2241", "id": 1092286877, "node_id": "I_kwDOA5FfHs5BGvmd", "number": 2241, "title": "TypeError: '<' not supported between instances of 'NoneType' and 'tuple'", "user": {"login": "ashishpatel26", "id": 3095771, "node_id": "MDQ6VXNlcjMwOTU3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3095771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashishpatel26", "html_url": "https://github.com/ashishpatel26", "followers_url": "https://api.github.com/users/ashishpatel26/followers", "following_url": "https://api.github.com/users/ashishpatel26/following{/other_user}", "gists_url": "https://api.github.com/users/ashishpatel26/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashishpatel26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashishpatel26/subscriptions", "organizations_url": "https://api.github.com/users/ashishpatel26/orgs", "repos_url": "https://api.github.com/users/ashishpatel26/repos", "events_url": "https://api.github.com/users/ashishpatel26/events{/privacy}", "received_events_url": "https://api.github.com/users/ashishpatel26/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-01-03T07:33:34Z", "updated_at": "2022-01-13T18:04:40Z", "closed_at": "2022-01-13T18:04:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "```bash \r\nPS D:\\vscode\\OptiimizationMethods> & C:/Users/SHIVA/miniconda3/envs/mlops/python.exe d:/vscode/OptiimizationMethods/LinearProgramming/pyomo_code.py \r\n```\r\n**This is error region**\r\n\r\n```bash\r\nTraceback (most recent call last):\r\n  File \"d:/vscode/OptiimizationMethods/LinearProgramming/pyomo_code.py\", line 20, in <module>\r\n    opt.solve(model)\r\n  File \"C:\\Users\\SHIVA\\miniconda3\\envs\\mlops\\lib\\site-packages\\pyomo\\opt\\base\\solvers.py\", line 601, in solve\r\n    result = self._postsolve()\r\n  File \"C:\\Users\\SHIVA\\miniconda3\\envs\\mlops\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\CBCplugin.py\", line 898, in _postsolve\r\n    results = super(CBCSHELL, self)._postsolve()\r\n  File \"C:\\Users\\SHIVA\\miniconda3\\envs\\mlops\\lib\\site-packages\\pyomo\\opt\\solver\\shellcmd.py\", line 277, in _postsolve\r\n    results = self.process_output(self._rc)\r\n  File \"C:\\Users\\SHIVA\\miniconda3\\envs\\mlops\\lib\\site-packages\\pyomo\\opt\\solver\\shellcmd.py\", line 350, in process_output\r\n    results = self.process_logfile()\r\n  File \"C:\\Users\\SHIVA\\miniconda3\\envs\\mlops\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\CBCplugin.py\", line 668, in process_logfile\r\n    if self.version() < (2, 10, 2):\r\nTypeError: '<' not supported between instances of 'NoneType' and 'tuple'\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2241/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2235", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2235/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2235/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2235/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2235", "id": 1080463197, "node_id": "I_kwDOA5FfHs5AZo9d", "number": 2235, "title": "I have two problems.", "user": {"login": "aliule2020", "id": 95888927, "node_id": "U_kgDOBbcmHw", "avatar_url": "https://avatars.githubusercontent.com/u/95888927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aliule2020", "html_url": "https://github.com/aliule2020", "followers_url": "https://api.github.com/users/aliule2020/followers", "following_url": "https://api.github.com/users/aliule2020/following{/other_user}", "gists_url": "https://api.github.com/users/aliule2020/gists{/gist_id}", "starred_url": "https://api.github.com/users/aliule2020/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aliule2020/subscriptions", "organizations_url": "https://api.github.com/users/aliule2020/orgs", "repos_url": "https://api.github.com/users/aliule2020/repos", "events_url": "https://api.github.com/users/aliule2020/events{/privacy}", "received_events_url": "https://api.github.com/users/aliule2020/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-12-15T01:31:41Z", "updated_at": "2021-12-15T09:05:24Z", "closed_at": "2021-12-15T04:09:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "1.  **Can I call pyomo in C just using PyRun_SimpleString(), such as PyRun_SimpleString(\"from pyomo.environ import *\")      (but it failed) ? I wonder if it is designed to be used just in the way that we have to call pyomo in .py files? IF NOT, HOW SHOULD I DO? **\r\n2. **CODE IS BELOW:**\r\n`from pyomo.environ import *\r\nfrom pyomo.dae import *\r\n\r\nmodel = m = ConcreteModel()\r\nm.t = ContinuousSet(bounds=(0, 10))\r\n\r\nTH=2;\r\nTL=0.8\r\nH=1;\r\nL=0;\r\nZ=-1;\r\n\r\nm.in1=Var(m.t)\r\nm.in2=Var(m.t)\r\nm.out1=Var(m.t)\r\n\r\ndef _init(m):\r\n    yield m.in1[0] == 3\r\n    yield m.in2[0] == 3\r\nm.init_conditions = ConstraintList(rule=_init)\r\n\r\ndef _con1(m,t):\r\n\t  if(value(m.in1[t])>=(TH)):\r\n\t  \t  min1=H\r\n\t  elif(value(m.in1[t])<=(TL)):\r\n\t      min1=L\r\n\t  else:\r\n\t  \t  min1=Z  \r\n\r\n\t  if( value(m.in2[t])>=(TH)):\r\n\t  \t  min2=H\r\n\t  elif(value(m.in2[t])<=(TL)):\r\n\t      min2=L\r\n\t  else:\r\n\t  \t  min2=Z \r\n\t  \r\n\t  if(min1==H and min2==H):\r\n\t  \t  return out1[t]==5\r\n\t  else:\r\n\t  \t  return out1[t]==0\t  \t\r\n\t  \t        \t  \r\nm.con1=Constraint(m.t,rule=_con1)\r\n\r\nTransformationFactory('dae.collocation').apply_to(m, nfe=7, ncp=6, scheme='LAGRANGE-RADAU' )\r\nresults = SolverFactory('ipopt').solve(m)`\r\n\r\n**HOW SHOULD I CORRECT THEM?**\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2235/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2228", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2228/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2228/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2228/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2228", "id": 1076154805, "node_id": "I_kwDOA5FfHs5AJNG1", "number": 2228, "title": "what's wrong?", "user": {"login": "aliule2020", "id": 95888927, "node_id": "U_kgDOBbcmHw", "avatar_url": "https://avatars.githubusercontent.com/u/95888927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aliule2020", "html_url": "https://github.com/aliule2020", "followers_url": "https://api.github.com/users/aliule2020/followers", "following_url": "https://api.github.com/users/aliule2020/following{/other_user}", "gists_url": "https://api.github.com/users/aliule2020/gists{/gist_id}", "starred_url": "https://api.github.com/users/aliule2020/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aliule2020/subscriptions", "organizations_url": "https://api.github.com/users/aliule2020/orgs", "repos_url": "https://api.github.com/users/aliule2020/repos", "events_url": "https://api.github.com/users/aliule2020/events{/privacy}", "received_events_url": "https://api.github.com/users/aliule2020/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-12-09T22:57:13Z", "updated_at": "2021-12-09T23:28:32Z", "closed_at": "2021-12-09T23:16:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "from pyomo.environ import *\r\nfrom pyomo.dae import *\r\nm = ConcreteModel()\r\nm.t = ContinuousSet(bounds=(0,10))\r\n\r\nm.VCC0P0V=Param(initialize =12)\r\nm.GND5P0V=Param(initialize =0)\r\n\r\n\r\nm.VCC0P0V=Var(m.t)\r\nm.R1P0V=Var(m.t)\r\nm.R1P1V=Var(m.t)\r\nm.J2I0=Var(m.t)\r\nm.J2I1=Var(m.t)\r\nm.J2I2=Var(m.t)\r\nm.J2I3=Var(m.t)\r\nm.J2P0V=Var(m.t)\r\nm.J2P1V=Var(m.t)\r\nm.J2P2V=Var(m.t)\r\nm.J2P3V=Var(m.t)\r\nm.C3P0V=Var(m.t)\r\nm.C3P1V=Var(m.t)\r\nm.dC3P0V=DerivativeVar(m.C3P0V)\r\nm.dC3P1V=DerivativeVar(m.C3P1V)\r\nm.J4I0=Var(m.t)\r\nm.J4I1=Var(m.t)\r\nm.J4I2=Var(m.t)\r\nm.J4I3=Var(m.t)\r\nm.J4P0V=Var(m.t)\r\nm.J4P1V=Var(m.t)\r\nm.J4P2V=Var(m.t)\r\nm.J4P3V=Var(m.t)\r\nm.GND5P0V=Var(m.t)\r\nm.VP6P0V=Var(m.t)\r\nm.VP6P1V=Var(m.t)\r\nm.VCC0I=Var(m.t)\r\nm.Wire7I=Var(m.t)\r\nm.R1I=Var(m.t)\r\nm.Wire7I=Var(m.t)\r\nm.Wire7P0V=Var(m.t)\r\nm.Wire7P1V=Var(m.t)\r\nm.VCC0P0V=Var(m.t)\r\nm.R1P1V=Var(m.t)\r\nm.R1I=Var(m.t)\r\nm.Wire8I=Var(m.t)\r\nm.J2I2 = Var(m.t)\r\nm.Wire8I=Var(m.t)\r\nm.Wire8P0V=Var(m.t)\r\nm.Wire8P1V=Var(m.t)\r\nm.R1P0V=Var(m.t)\r\nm.J2P2V=Var(m.t)\r\nm.J2I1 = Var(m.t)\r\nm.Wire9I=Var(m.t)\r\nm.C3I=Var(m.t)\r\nm.Wire9I=Var(m.t)\r\nm.Wire9P0V=Var(m.t)\r\nm.Wire9P1V=Var(m.t)\r\nm.J2P1V=Var(m.t)\r\nm.C3P1V=Var(m.t)\r\nm.C3I=Var(m.t)\r\nm.Wire10I=Var(m.t)\r\nm.J4I2 = Var(m.t)\r\nm.Wire10I=Var(m.t)\r\nm.Wire10P0V=Var(m.t)\r\nm.Wire10P1V=Var(m.t)\r\nm.C3P0V=Var(m.t)\r\nm.J4P2V=Var(m.t)\r\nm.J4I1 = Var(m.t)\r\nm.Wire11I=Var(m.t)\r\nm.GND5I=Var(m.t)\r\nm.Wire11I=Var(m.t)\r\nm.Wire11P0V=Var(m.t)\r\nm.Wire11P1V=Var(m.t)\r\nm.J4P1V=Var(m.t)\r\nm.GND5P0V=Var(m.t)\r\nm.J2I0 = Var(m.t)\r\nm.Wire12I=Var(m.t)\r\nm.VP6I=Var(m.t)\r\nm.Wire12I=Var(m.t)\r\nm.Wire12P0V=Var(m.t)\r\nm.Wire12P1V=Var(m.t)\r\nm.J2P0V=Var(m.t)\r\nm.VP6P1V=Var(m.t)\r\nm.VP6I=Var(m.t)\r\nm.Wire13I=Var(m.t)\r\nm.J4I0 = Var(m.t)\r\nm.Wire13I=Var(m.t)\r\nm.Wire13P0V=Var(m.t)\r\nm.Wire13P1V=Var(m.t)\r\nm.VP6P0V=Var(m.t)\r\nm.J4P0V=Var(m.t)\r\n\r\n\r\n\r\n\r\ndef _con1(m,t):\r\n    return m.R1P1V[t]-m.R1P0V[t]==100.000000*m.R1I[t]\r\nm.con1 = Constraint(m.t, rule = _con1)\r\ndef _con2(m,t):\r\n    return m.J2I0[t]+m.J2I1[t]+m.J2I2[t]+m.J2I3[t]==0\r\nm.con2 = Constraint(m.t, rule = _con2)\r\ndef _con3(m,t):\r\n    return m.J2P0V[t]==m.J2P1V[t]\r\nm.con3 = Constraint(m.t, rule = _con3)\r\ndef _con4(m,t):\r\n    return m.J2P1V[t]==m.J2P2V[t]\r\nm.con4 = Constraint(m.t, rule = _con4)\r\ndef _con5(m,t):\r\n    return m.J2P2V[t]==m.J2P3V[t]\r\nm.con5 = Constraint(m.t, rule = _con5)\r\ndef _con6(m,t):\r\n    return m.dC3P1V[t]-m.dC3P0V[t]==1/0.010000*m.C3I[t]\r\nm.con6 = Constraint(m.t, rule = _con6)\r\ndef _con7(m,t):\r\n    return m.J4I0[t]+m.J4I1[t]+m.J4I2[t]+m.J4I3[t]==0\r\nm.con7 = Constraint(m.t, rule = _con7)\r\ndef _con8(m,t):\r\n    return m.J4P0V[t]==m.J4P1V[t]\r\nm.con8 = Constraint(m.t, rule = _con8)\r\ndef _con9(m,t):\r\n    return m.J4P1V[t]==m.J4P2V[t]\r\nm.con9 = Constraint(m.t, rule = _con9)\r\ndef _con10(m,t):\r\n    return m.J4P2V[t]==m.J4P3V[t]\r\nm.con10 = Constraint(m.t, rule = _con10)\r\n\r\ndef _con12(m,t):\r\n    return m.VP6I[t]==0\r\nm.con12 = Constraint(m.t, rule = _con12)\r\ndef _con13(m,t):\r\n    return m.VCC0I[t]==-m.Wire7I[t]\r\nm.con13 = Constraint(m.t, rule = _con13)\r\ndef _con14(m,t):\r\n    return m.R1I[t]==-m.Wire7I[t]\r\nm.con14 = Constraint(m.t, rule = _con14)\r\n\r\ndef _con15(m,t):\r\n    return m.Wire7P0V[t]==m.VCC0P0V[t]\r\nm.con15 = Constraint(m.t, rule = _con15)\r\n\r\ndef _con16(m,t):\r\n    return m.Wire7P0V[t]==m.Wire7P1V[t]\r\nm.con16 = Constraint(m.t, rule = _con16)\r\ndef _con17(m,t):\r\n    return m.Wire7P1V[t]==m.R1P1V[t]\r\nm.con17 = Constraint(m.t, rule = _con17)\r\ndef _con18(m,t):\r\n    return m.R1I[t]==-m.Wire8I[t]\r\nm.con18 = Constraint(m.t, rule = _con18)\r\ndef _con19(m,t):\r\n    return m.J2I2[t]==m.Wire8I[t]\r\nm.con19 = Constraint(m.t, rule = _con19)\r\ndef _con20(m,t):\r\n    return m.Wire8P0V[t]==m.R1P0V[t]\r\nm.con20 = Constraint(m.t, rule = _con20)\r\ndef _con21(m,t):\r\n    return m.Wire8P0V[t]==m.Wire8P1V[t]\r\nm.con21 = Constraint(m.t, rule = _con21)\r\ndef _con22(m,t):\r\n    return m.Wire8P1V[t]==m.J2P2V[t]\r\nm.con22 = Constraint(m.t, rule = _con22)\r\ndef _con23(m,t):\r\n    return m.J2I1[t]==-m.Wire9I[t]\r\nm.con23 = Constraint(m.t, rule = _con23)\r\ndef _con24(m,t):\r\n    return m.C3I[t]==-m.Wire9I[t]\r\nm.con24 = Constraint(m.t, rule = _con24)\r\ndef _con25(m,t):\r\n    return m.Wire9P0V[t]==m.J2P1V[t]\r\nm.con25 = Constraint(m.t, rule = _con25)\r\ndef _con26(m,t):\r\n    return m.Wire9P0V[t]==m.Wire9P1V[t]\r\nm.con26 = Constraint(m.t, rule = _con26)\r\ndef _con27(m,t):\r\n    return m.Wire9P1V[t]==m.C3P1V[t]\r\nm.con27 = Constraint(m.t, rule = _con27)\r\ndef _con28(m,t):\r\n    return m.C3I[t]==-m.Wire10I[t]\r\nm.con28 = Constraint(m.t, rule = _con28)\r\ndef _con29(m,t):\r\n    return m.J4I2[t]==m.Wire10I[t]\r\nm.con29 = Constraint(m.t, rule = _con29)\r\ndef _con30(m,t):\r\n    return m.Wire10P0V[t]==m.C3P0V[t]\r\nm.con30 = Constraint(m.t, rule = _con30)\r\ndef _con31(m,t):\r\n    return m.Wire10P0V[t]==m.Wire10P1V[t]\r\nm.con31 = Constraint(m.t, rule = _con31)\r\ndef _con32(m,t):\r\n    return m.Wire10P1V[t]==m.J4P2V[t]\r\nm.con32 = Constraint(m.t, rule = _con32)\r\ndef _con33(m,t):\r\n    return m.J4I1[t]==-m.Wire11I[t]\r\nm.con33 = Constraint(m.t, rule = _con33)\r\ndef _con34(m,t):\r\n    return m.GND5I[t]==-m.Wire11I[t]\r\nm.con34 = Constraint(m.t, rule = _con34)\r\ndef _con35(m,t):\r\n    return m.Wire11P0V[t]==m.J4P1V[t]\r\nm.con35 = Constraint(m.t, rule = _con35)\r\ndef _con36(m,t):\r\n    return m.Wire11P0V[t]==m.Wire11P1V[t]\r\nm.con36 = Constraint(m.t, rule = _con36)\r\ndef _con37(m,t):\r\n    return m.Wire11P1V[t]==m.GND5P0V[t]\r\nm.con37 = Constraint(m.t, rule = _con37)\r\ndef _con38(m,t):\r\n    return m.J2I0[t]==-m.Wire12I[t]\r\nm.con38 = Constraint(m.t, rule = _con38)\r\ndef _con39(m,t):\r\n    return m.VP6I[t]==-m.Wire12I[t]\r\nm.con39 = Constraint(m.t, rule = _con39)\r\ndef _con40(m,t):\r\n    return m.Wire12P0V[t]==m.J2P0V[t]\r\nm.con40 = Constraint(m.t, rule = _con40)\r\ndef _con41(m,t):\r\n    return m.Wire12P0V[t]==m.Wire12P1V[t]\r\nm.con41 = Constraint(m.t, rule = _con41)\r\ndef _con42(m,t):\r\n    return m.Wire12P1V[t]==m.VP6P1V[t]\r\nm.con42 = Constraint(m.t, rule = _con42)\r\ndef _con43(m,t):\r\n    return m.VP6I[t]==-m.Wire13I[t]\r\nm.con43 = Constraint(m.t, rule = _con43)\r\ndef _con44(m,t):\r\n    return m.J4I0[t]==m.Wire13I[t]\r\nm.con44 = Constraint(m.t, rule = _con44)\r\ndef _con45(m,t):\r\n    return m.Wire13P0V[t]==m.VP6P0V[t]\r\nm.con45 = Constraint(m.t, rule = _con45)\r\ndef _con46(m,t):\r\n    return m.Wire13P0V[t]==m.Wire13P1V[t]\r\nm.con46 = Constraint(m.t, rule = _con46)\r\ndef _con47(m,t):\r\n    return m.Wire13P1V[t]==m.J4P0V[t]\r\nm.con47 = Constraint(m.t, rule = _con47)\r\ndef _con48(m,t):\r\n    return m.J2I3[t]==0\r\nm.con48 = Constraint(m.t, rule = _con48)\r\ndef _con49(m,t):\r\n    return m.J4I3[t]==0\r\nm.con49 = Constraint(m.t, rule = _con49)\r\n\r\ndef _init(m):\r\n    yield m.C3P1V[0]-m.C3P0V[0] == 0\r\nm.init_conditions = ConstraintList(rule=_init)\r\n\r\n\r\nTransformationFactory('dae.collocation').apply_to(m, nfe=100,ncp=6,scheme='LAGRANGE-RADAU')\r\nresults = SolverFactory('ipopt').solve(m)\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2228/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2217", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2217/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2217/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2217/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2217", "id": 1068660020, "node_id": "I_kwDOA5FfHs4_snU0", "number": 2217, "title": "Missing KeyError Message in AMPL Writer", "user": {"login": "eslickj", "id": 16341333, "node_id": "MDQ6VXNlcjE2MzQxMzMz", "avatar_url": "https://avatars.githubusercontent.com/u/16341333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eslickj", "html_url": "https://github.com/eslickj", "followers_url": "https://api.github.com/users/eslickj/followers", "following_url": "https://api.github.com/users/eslickj/following{/other_user}", "gists_url": "https://api.github.com/users/eslickj/gists{/gist_id}", "starred_url": "https://api.github.com/users/eslickj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eslickj/subscriptions", "organizations_url": "https://api.github.com/users/eslickj/orgs", "repos_url": "https://api.github.com/users/eslickj/repos", "events_url": "https://api.github.com/users/eslickj/events{/privacy}", "received_events_url": "https://api.github.com/users/eslickj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-12-01T17:00:55Z", "updated_at": "2022-04-12T14:44:23Z", "closed_at": "2022-04-12T14:44:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nThe root problem here is that I forgot to run the DAE transformation, but this issue is only about the error message I get from Pyomo.  When going to solve a particular Pyomo model I get an error message like:\r\n\r\n```sh\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\EslickJ\\git\\idaes-pse\\idaes\\power_generation\\unit_models\\sofc_submodels.py\", line 1471, in <module>\r\n    use_elecrode()\r\n  File \"C:\\Users\\EslickJ\\git\\idaes-pse\\idaes\\power_generation\\unit_models\\sofc_submodels.py\", line 1468, in use_elecrode\r\n    solver.solve(m, tee=True)\r\n  File \"c:\\users\\eslickj\\git\\pyomo\\pyomo\\opt\\base\\solvers.py\", line 569, in solve\r\n    self._presolve(*args, **kwds)\r\n  File \"c:\\users\\eslickj\\git\\pyomo\\pyomo\\opt\\solver\\shellcmd.py\", line 205, in _presolve\r\n    OptSolver._presolve(self, *args, **kwds)\r\n  File \"c:\\users\\eslickj\\git\\pyomo\\pyomo\\opt\\base\\solvers.py\", line 666, in _presolve\r\n    self._convert_problem(args,\r\n  File \"c:\\users\\eslickj\\git\\pyomo\\pyomo\\opt\\base\\solvers.py\", line 717, in _convert_problem\r\n    return convert_problem(args,\r\n  File \"c:\\users\\eslickj\\git\\pyomo\\pyomo\\opt\\base\\convert.py\", line 100, in convert_problem\r\n    problem_files, symbol_map = converter.apply(*tmp, **tmpkw)\r\n  File \"c:\\users\\eslickj\\git\\pyomo\\pyomo\\solvers\\plugins\\converter\\model.py\", line 180, in apply\r\n    instance.write(\r\n  File \"c:\\users\\eslickj\\git\\pyomo\\pyomo\\core\\base\\block.py\", line 1805, in write\r\n    (filename, smap) = problem_writer(self,\r\n  File \"c:\\users\\eslickj\\git\\pyomo\\pyomo\\repn\\plugins\\ampl\\ampl_.py\", line 401, in __call__\r\n    symbol_map = self._print_model_NL(\r\n  File \"c:\\users\\eslickj\\git\\pyomo\\pyomo\\repn\\plugins\\ampl\\ampl_.py\", line 1020, in _print_model_NL\r\n    list(self_varID_map[id(var)] for var in nonlinear_vars))\r\n  File \"c:\\users\\eslickj\\git\\pyomo\\pyomo\\repn\\plugins\\ampl\\ampl_.py\", line 1020, in <genexpr>\r\n    list(self_varID_map[id(var)] for var in nonlinear_vars))\r\nKeyError: 2173841700416\r\n```\r\n\r\nI know that probably means there is a variable in the problem that is somehow not attached to the model.  The problem is that there is no diagnostic information.  I investigated the Pyomo code and found that this does trigger a call to ```_symbolMapKeyError()```.  I found that at the end of that function ```_errors``` is empty.  I'm going to keep investigating to see if I can pin to problem down more. \r\n\r\n### Steps to reproduce the issue\r\n\r\nI'm really sorry about this mess of a model.  I just started working on it and it's kind of big, but I don't currently know of another way to reproduce the error.  You need IDAES installed then just run the attached script. \r\n\r\n[sofc_submodels.zip](https://github.com/Pyomo/pyomo/files/7635776/sofc_submodels.zip)\r\n\r\nI added some quick and dirty diagnostic code into pyomo and found the offending variable is fs.electrode.dcdt[0.0,1,1,N2], and the cause is that I forgot to run the DAE transform.  The question is how did to Pyomo code to print an error message miss it?\r\n\r\n### Error Message\r\n\r\nPut it in above.\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.1.3\r\nPython version: 3.9.4\r\nOperating system: Windows 10\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable): Ipopt\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2217/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2213", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2213/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2213/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2213/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2213", "id": 1065599117, "node_id": "I_kwDOA5FfHs4_g8CN", "number": 2213, "title": "Floor and ceil operator codes switched in NL file writer", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-11-29T04:30:36Z", "updated_at": "2021-12-01T11:59:57Z", "closed_at": "2021-12-01T11:59:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nI was looking for *.nl file operator codes (didn't find what I was looking for), but noticed that floor and ceil are inverted in:\r\nhttps://github.com/Pyomo/pyomo/blob/main/pyomo/repn/plugins/ampl/ampl_.py#L101\r\n```\r\n    'ceil':   'o13',\r\n    'floor':  'o14'\r\n```\r\n\r\nEither that, or the ASL code is wrong: \r\nhttps://github.com/ampl/asl/blob/master/src/solvers/opcode.hd#L10\r\n\r\n```\r\n#define FLOOR\t\t13\r\n#define CEIL\t\t14\r\n```\r\n\r\nSmall edge case--doubt anyone's using it, but fyi.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2213/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2208", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2208/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2208/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2208/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2208", "id": 1060527674, "node_id": "I_kwDOA5FfHs4_Nl46", "number": 2208, "title": "NPV_SumExpression does not inherit from NPV_Mixin", "user": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-11-22T19:42:39Z", "updated_at": "2021-11-23T21:13:10Z", "closed_at": "2021-11-23T21:13:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\n`NPV_SumExpression` does not inherit form `NPV_Mixin`. As a result replacing mutable parameters in an `NPV_SumExpression` with variables does not work correctly.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\nimport pyomo.environ as pe\r\nfrom pyomo.core.expr.visitor import replace_expressions\r\n\r\nm = pe.ConcreteModel()\r\nm.x = pe.Var()\r\nm.p = pe.Param(mutable=True)\r\ne1 = 2 + m.p\r\nprint(type(e1))\r\nprint(e1)\r\ne2 = replace_expressions(e1, substitution_map={id(m.p): m.x})\r\nprint(type(e2))\r\nprint(e2)\r\n```\r\n\r\noutputs\r\n\r\n```\r\n<class 'pyomo.core.expr.numeric_expr.NPV_SumExpression'>\r\n2 + p\r\n<class 'pyomo.core.expr.numeric_expr.NPV_SumExpression'>\r\n2 + x\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2208/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2205", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2205/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2205/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2205/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2205", "id": 1058858628, "node_id": "I_kwDOA5FfHs4_HOaE", "number": 2205, "title": "contrib.propagate_fixed_vars ignores constants in linear equality constraints", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-11-19T19:41:50Z", "updated_at": "2021-11-23T19:58:56Z", "closed_at": "2021-11-23T19:58:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\n`contrib.propagate_fixed_vars` can fix variables to the wrong value if they appear in constraints that look like `x == y + constant`.\r\n\r\n### Steps to reproduce the issue\r\n```\r\nfrom pyomo.environ import *\r\n\r\nm = ConcreteModel()\r\nm.x = Var(bounds=(0,6))\r\nm.y = Var(bounds=(-10,1))\r\nm.z = Var(bounds=(-4,5))\r\nm.cons = Constraint(expr=m.x==m.y + 3)\r\nm.cons2 = Constraint(expr=m.x==0)\r\n\r\nTransformationFactory('contrib.propagate_fixed_vars').apply_to(m)\r\nm.x.pprint()\r\nm.y.pprint()\r\n```\r\nOutput:\r\n```\r\nx : Size=1, Index=None\r\n    Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n    None :     0 :   0.0 :     6 :  True : False :  Reals\r\ny : Size=1, Index=None\r\n    Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n    None :   -10 :   0.0 :     1 :  True : False :  Reals\r\n```\r\n\r\n### Error Message\r\n\r\nThis is silently wrong! According to what the transformation claims to do in its docstring, this call should be a no-op. However, it does actually find the `x == 0` constraint and propagate that, but when it does so it ignores the constant in `m.cons`.\r\n\r\n### Information on your system\r\n\r\nPyomo version: main\r\nPython version: 3.8\r\nOperating system: linux\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable):\r\n\r\n### Additional information\r\n\r\nThis is a very simple fix for it to not be wrong: It just needs to check that `repn.constant == 0` in the `if` statement on line 45 of `equality_propagate.py`. However, I'm not convinced that's the fix we want because the result would be just to not fix `m.y`, whereas what one might expect is to fix `m.y` to -3.\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2205/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2197", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2197/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2197/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2197/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2197", "id": 1055831619, "node_id": "I_kwDOA5FfHs4-7rZD", "number": 2197, "title": "'WinError 32' occurs when solving mixed integer model with gurobi_direct and gurobi 9.5.0", "user": {"login": "shishouyuan", "id": 52651469, "node_id": "MDQ6VXNlcjUyNjUxNDY5", "avatar_url": "https://avatars.githubusercontent.com/u/52651469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shishouyuan", "html_url": "https://github.com/shishouyuan", "followers_url": "https://api.github.com/users/shishouyuan/followers", "following_url": "https://api.github.com/users/shishouyuan/following{/other_user}", "gists_url": "https://api.github.com/users/shishouyuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/shishouyuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shishouyuan/subscriptions", "organizations_url": "https://api.github.com/users/shishouyuan/orgs", "repos_url": "https://api.github.com/users/shishouyuan/repos", "events_url": "https://api.github.com/users/shishouyuan/events{/privacy}", "received_events_url": "https://api.github.com/users/shishouyuan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-11-17T08:10:41Z", "updated_at": "2021-11-23T11:02:15Z", "closed_at": "2021-11-23T11:02:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n- An error occurs when solving **mixed integer model** with **gurobi_direct** and **Gurobi 9.5.0**.\r\n- Pyomo work well with Gurobi 9.1.2 and I got this issue after updating Gurobi  to 9.5.0.\r\n<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `pyomo solve` to optimize a model and ...\" -->\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```console\r\npython test.py\r\n```\r\n\r\n```python\r\n# test.py\r\nimport pyomo.environ as pyo\r\n\r\nm = pyo.ConcreteModel()\r\nm.i = pyo.Set(initialize=[1, 2, 3])\r\nm.x = pyo.Var(m.i)\r\nm.b = pyo.Var(domain=pyo.Binary)\r\nm.cons = pyo.Constraint(expr=sum(m.x[i] for i in m.i) >= 1)\r\nm.obj = pyo.Objective(expr=m.b + sum(m.x[i]**2 for i in m.i), sense=pyo.minimize)\r\nsolver = pyo.SolverFactory('gurobi_direct')\r\nsolver.solve(m, tee=True)\r\n```\r\n\r\n### Error Message\r\n```console\r\n(pyomo) D:\\test>python test.py\r\nSet parameter LogFile to value \"C:\\Users\\Shouyuan\\AppData\\Local\\Temp\\tmprcapf5jy.log\"\r\nGurobi Optimizer version 9.5.0 build v9.5.0rc5 (win64)\r\nThread count: 6 physical cores, 12 logical processors, using up to 12 threads\r\nOptimize a model with 1 rows, 4 columns and 3 nonzeros\r\nModel fingerprint: 0xc3872581\r\nModel has 3 quadratic objective terms\r\nVariable types: 3 continuous, 1 integer (1 binary)\r\nCoefficient statistics:\r\n  Matrix range     [1e+00, 1e+00]\r\n  Objective range  [1e+00, 1e+00]\r\n  QObjective range [2e+00, 2e+00]\r\n  Bounds range     [1e+00, 1e+00]\r\n  RHS range        [1e+00, 1e+00]\r\nFound heuristic solution: objective 1.200000e+19\r\nPresolve removed 0 rows and 1 columns\r\nPresolve time: 0.00s\r\nPresolved: 1 rows, 3 columns, 3 nonzeros\r\nPresolved model has 3 quadratic objective terms\r\nVariable types: 3 continuous, 0 integer (0 binary)\r\nRoot relaxation presolve time: 0.00s\r\nRoot relaxation presolved: 1 rows, 3 columns, 3 nonzeros\r\nRoot relaxation presolved model has 3 quadratic objective terms\r\nRoot barrier log...\r\n\r\nOrdering time: 0.00s\r\n\r\nBarrier statistics:\r\n Free vars  : 3\r\n AA' NZ     : 0.000e+00\r\n Factor NZ  : 1.000e+00\r\n Factor Ops : 1.000e+00 (less than 1 second per iteration)\r\n Threads    : 1\r\n\r\n                  Objective                Residual\r\nIter       Primal          Dual         Primal    Dual     Compl     Time\r\n   0   2.99998200e-12 -2.99998200e-12  2.00e+00 1.00e-06  9.98e+05     0s\r\n   1   4.73925522e+04 -4.71411758e+04  0.00e+00 9.81e-13  9.45e+04     0s\r\n   2   6.97332386e+03 -6.87689894e+03  0.00e+00 1.42e-14  1.39e+04     0s\r\n   3   1.03313080e+03 -9.96016005e+02  0.00e+00 0.00e+00  2.03e+03     0s\r\n   4   1.55827078e+02 -1.41412868e+02  0.00e+00 0.00e+00  2.97e+02     0s\r\n   5   2.46134258e+01 -1.88847348e+01  0.00e+00 0.00e+00  4.35e+01     0s\r\n   6   4.36798496e+00 -1.95469261e+00  0.00e+00 0.00e+00  6.32e+00     0s\r\n   7   1.02275435e+00  1.45009525e-01  0.00e+00 0.00e+00  8.78e-01     0s\r\n   8   4.18151444e-01  3.28531393e-01  0.00e+00 0.00e+00  8.96e-02     0s\r\n   9   3.34808648e-01  3.33331705e-01  0.00e+00 0.00e+00  1.48e-03     0s\r\n  10   3.33334807e-01  3.33333333e-01  0.00e+00 0.00e+00  1.47e-06     0s\r\n  11   3.33333335e-01  3.33333333e-01  0.00e+00 0.00e+00  1.48e-09     0s\r\n\r\nBarrier solved model in 11 iterations and 0.01 seconds (0.00 work units)\r\nOptimal objective 3.33333335e-01\r\n\r\n\r\nRoot relaxation: objective 3.333333e-01, 0 iterations, 0.01 seconds (0.00 work units)\r\n\r\n    Nodes    |    Current Node    |     Objective Bounds      |     Work\r\n Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time\r\n\r\n*    0     0               0       0.3333333    0.33333  0.00%     -    0s\r\n\r\nExplored 1 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)\r\nThread count was 12 (of 12 available processors)\r\n\r\nSolution count 1: 0.333333\r\n\r\nOptimal solution found (tolerance 1.00e-04)\r\nBest objective 3.333333348085e-01, best bound 3.333333348085e-01, gap 0.0000%\r\nSet parameter LogFile to value \"\"\r\nTraceback (most recent call last):\r\n  File \"D:\\Programs\\miniconda3\\envs\\pyomo\\lib\\site-packages\\pyomo\\common\\tempfiles.py\", line 182, in pop\r\n    os.remove(filename)\r\nPermissionError: [WinError 32] \u53e6\u4e00\u4e2a\u7a0b\u5e8f\u6b63\u5728\u4f7f\u7528\u6b64\u6587\u4ef6\uff0c\u8fdb\u7a0b\u65e0\u6cd5\u8bbf\u95ee\u3002: 'C:\\\\Users\\\\Shouyuan\\\\AppData\\\\Local\\\\Temp\\\\tmprcapf5jy.log'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 10, in <module>\r\n    solver.solve(m, tee=True)\r\n  File \"D:\\Programs\\miniconda3\\envs\\pyomo\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\direct_solver.py\", line 151, in solve\r\n    result = self._postsolve()\r\n  File \"D:\\Programs\\miniconda3\\envs\\pyomo\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\gurobi_direct.py\", line 742, in _postsolve\r\n    TempfileManager.pop(remove=not self._keepfiles)\r\n  File \"D:\\Programs\\miniconda3\\envs\\pyomo\\lib\\site-packages\\pyomo\\common\\tempfiles.py\", line 190, in pop\r\n    os.remove(filename)\r\nPermissionError: [WinError 32] \u53e6\u4e00\u4e2a\u7a0b\u5e8f\u6b63\u5728\u4f7f\u7528\u6b64\u6587\u4ef6\uff0c\u8fdb\u7a0b\u65e0\u6cd5\u8bbf\u95ee\u3002: 'C:\\\\Users\\\\Shouyuan\\\\AppData\\\\Local\\\\Temp\\\\tmprcapf5jy.log'\r\n```\r\nThe Error Message in English is\r\n```console\r\nPermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\\\Users\\\\Shouyuan\\\\AppData\\\\Local\\\\Temp\\\\tmprcapf5jy.log'\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.1.2\r\nPython version: 3.8.12\r\nOperating system: Tested on Windows 10 and Windows 11 x64\r\nHow Pyomo was installed (PyPI, conda, source): conda\r\nSolver (if applicable): Gurobi 9.5.0 called by gurobi_direct \r\n\r\n\r\n### Additional information\r\n- The error still occurs with `tee = False` \r\n- The error disappears if the binary variable `b` is removed\r\n- The error disappears if the variable `x` is a scalar\r\n- The error disappears if the constraint `cons` is removed\r\n- There is a similar issue #285 with CPLEX direct\r\n- The error exists when working with both Gurobi 9.5.0 from pip and conda\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2197/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2188", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2188/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2188/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2188/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2188", "id": 1052110226, "node_id": "I_kwDOA5FfHs4-te2S", "number": 2188, "title": "Error when restoring serialized pyomo.kernel.block as part of a new model", "user": {"login": "sstroemer", "id": 8915976, "node_id": "MDQ6VXNlcjg5MTU5NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/8915976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sstroemer", "html_url": "https://github.com/sstroemer", "followers_url": "https://api.github.com/users/sstroemer/followers", "following_url": "https://api.github.com/users/sstroemer/following{/other_user}", "gists_url": "https://api.github.com/users/sstroemer/gists{/gist_id}", "starred_url": "https://api.github.com/users/sstroemer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sstroemer/subscriptions", "organizations_url": "https://api.github.com/users/sstroemer/orgs", "repos_url": "https://api.github.com/users/sstroemer/repos", "events_url": "https://api.github.com/users/sstroemer/events{/privacy}", "received_events_url": "https://api.github.com/users/sstroemer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-11-12T15:53:20Z", "updated_at": "2021-11-15T19:48:58Z", "closed_at": "2021-11-15T19:48:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nI was looking for a way to prepare parts of a model and save them for later use (to disk). This is different from serializing a whole model, since I only want to save (e.g.) a single block an reuse it later on. Reloading them fails, as far as I understand due to the way object id()s are used to identify variables (and other stuff).\r\n \r\n### Steps to reproduce the issue\r\n\r\nI ran\r\n```\r\nimport pyomo.kernel as pyo\r\nimport dill\r\n\r\n# create basic model\r\nb = pyo.block()\r\nb.x = pyo.variable()\r\nb.c = pyo.constraint(b.x >= 1)\r\n\r\n# save the prepared block\r\nwith open('interim.pkl', 'wb') as f:\r\n    dill.dump(b, f) \r\n```\r\n\r\nfirst to create a simple block and save it. Then I started another instance of Python and ran\r\n```\r\n# create new model and add the loaded block\r\nmodel = pyo.block()\r\nwith open('interim.pkl', 'rb') as f:\r\n    model.b = dill.load(f)\r\nmodel.obj = pyo.objective(model.b.x)\r\n\r\n# solve\r\nopt = pyo.SolverFactory('gurobi')\r\nopt.solve(model)\r\n```\r\n\r\n### Error Message\r\n\r\nThis yields an error, since variable x can not be found in a proper way (`KeyError: 1648702641136` since `names = [variable_symbol_dictionary[id(var)] for var in x.linear_vars]` is using the id).\r\n\r\nFurther running `model.write('test.gms')` to see what it thinks this model looks like yields (I've omitted irrelevant lines):\r\n```\r\nEQUATIONS\r\n\tc1;\r\n\r\nVARIABLES\r\n\tGAMS_OBJECTIVE\r\n\tx1;\r\n\r\n\r\nc1.. GAMS_OBJECTIVE =e= x1 ;\r\n\r\n\r\nMODEL GAMS_MODEL /all/ ;\r\n```\r\n\r\nThis shows, that the original equation (b.c) was not found; x1 only appears since I've added an objective using a variable \"b.x\".\r\n\r\nFull stack trace as required:\r\n\r\n```\r\n>>> opt.solve(model)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"PROJ_FOLDER\\.venv\\lib\\site-packages\\pyomo\\opt\\base\\solvers.py\", line 569, in solve\r\n    self._presolve(*args, **kwds)\r\n  File \"PROJ_FOLDER\\.venv\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\GUROBI.py\", line 228, in _presolve\r\n    ILMLicensedSystemCallSolver._presolve(self, *args, **kwds)\r\n  File \"PROJ_FOLDER\\.venv\\lib\\site-packages\\pyomo\\opt\\solver\\shellcmd.py\", line 205, in _presolve\r\n    OptSolver._presolve(self, *args, **kwds)\r\n  File \"PROJ_FOLDER\\.venv\\lib\\site-packages\\pyomo\\opt\\base\\solvers.py\", line 666, in _presolve\r\n    self._convert_problem(args,\r\n  File \"PROJ_FOLDER\\.venv\\lib\\site-packages\\pyomo\\opt\\base\\solvers.py\", line 717, in _convert_problem\r\n    return convert_problem(args,\r\n  File \"PROJ_FOLDER\\.venv\\lib\\site-packages\\pyomo\\opt\\base\\convert.py\", line 100, in convert_problem\r\n    problem_files, symbol_map = converter.apply(*tmp, **tmpkw)\r\n  File \"PROJ_FOLDER\\.venv\\lib\\site-packages\\pyomo\\solvers\\plugins\\converter\\model.py\", line 69, in apply\r\n    symbol_map_id = instance.write(\r\n  File \"PROJ_FOLDER\\.venv\\lib\\site-packages\\pyomo\\core\\kernel\\block.py\", line 315, in write\r\n    (filename_, smap) = problem_writer(self,\r\n  File \"PROJ_FOLDER\\.venv\\lib\\site-packages\\pyomo\\repn\\plugins\\cpxlp.py\", line 159, in __call__\r\n    symbol_map = self._print_model_LP(\r\n  File \"PROJ_FOLDER\\.venv\\lib\\site-packages\\pyomo\\repn\\plugins\\cpxlp.py\", line 537, in _print_model_LP\r\n    offset = print_expr_canonical(\r\n  File \"PROJ_FOLDER\\.venv\\lib\\site-packages\\pyomo\\repn\\plugins\\cpxlp.py\", line 212, in _print_expr_canonical\r\n    names = [variable_symbol_dictionary[id(var)] for var in x.linear_vars]\r\n  File \"PROJ_FOLDER\\.venv\\lib\\site-packages\\pyomo\\repn\\plugins\\cpxlp.py\", line 212, in <listcomp>\r\n    names = [variable_symbol_dictionary[id(var)] for var in x.linear_vars]\r\nKeyError: 1648702641136\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.1.2\r\nPython version: 3.10\r\nOperating system: Windows 10\r\nHow Pyomo was installed (PyPI, conda, source): Poetry\r\nSolver (if applicable): Gurobi\r\n\r\n\r\n### Additional information\r\n\r\nI've managed to work around that issue by manually \"hooking\" the __getstate__ and __setstate__ and making sure child components are created from scratch and properly added to the model. But doing this renders preparing partial models useless, because they need to be built again on loading.\r\n\r\nI know this is mostly likely \"intended behaviour\" in the way that it's just (currently) not supported to serialize parts of a model, but I'm happy for discussion / approaches how to efficiently implement that functionality (since I think it could be usable for many cases).\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2188/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2176", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2176/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2176/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2176/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2176", "id": 1042778149, "node_id": "I_kwDOA5FfHs4-J4gl", "number": 2176, "title": "calculate_variable_from_constraint can fail for simple constraints due to domain violation", "user": {"login": "andrewlee94", "id": 16341343, "node_id": "MDQ6VXNlcjE2MzQxMzQz", "avatar_url": "https://avatars.githubusercontent.com/u/16341343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewlee94", "html_url": "https://github.com/andrewlee94", "followers_url": "https://api.github.com/users/andrewlee94/followers", "following_url": "https://api.github.com/users/andrewlee94/following{/other_user}", "gists_url": "https://api.github.com/users/andrewlee94/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewlee94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewlee94/subscriptions", "organizations_url": "https://api.github.com/users/andrewlee94/orgs", "repos_url": "https://api.github.com/users/andrewlee94/repos", "events_url": "https://api.github.com/users/andrewlee94/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewlee94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-11-02T20:28:51Z", "updated_at": "2021-11-17T14:21:51Z", "closed_at": "2021-11-17T14:21:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nUsing the `calculate_variable_from_constraint` method can result in unexpected failures due to trying to set the value of a `Var` outside of its domain, as shown in the example below. In this case, a simple constraint of `v == 0` can be successfully solved, but fails if the constraint is scaled by a factor of 10 (ie. `10*v == 0`).\r\n\r\n```\r\n# example.py\r\nimport pyomo.environ as pyo\r\nfrom pyomo.util.calc_var_value import calculate_variable_from_constraint\r\n\r\n# Create basic model\r\nm = pyo.ConcreteModel()\r\nm.v1 = pyo.Var(initialize=1, domain=pyo.NonNegativeReals)\r\n\r\nm.c1 = pyo.Constraint(expr=m.v1 == 0)\r\n\r\n# Calculate value of v1 using constraint c1\r\ncalculate_variable_from_constraint(m.v1, m.c1)\r\n\r\n# This works as expected\r\nassert pyo.value(m.v1) == 0\r\n\r\n# However, if we multiply v1 by 10:\r\nm.c2 = pyo.Constraint(expr=m.v1*10 == 0)\r\nm.v1.set_value(1)\r\n\r\ncalculate_variable_from_constraint(m.v1, m.c2)\r\n\r\n>>> ValueError: Numeric value `-9` (<class 'int'>) is not in domain NonNegativeReals for Var v1\r\n```\r\n\r\nThis issue arises due to line 113 in `calculate_variable_from_constraint` which assumes that the constraint is linear with a coefficient of 1 w.r.t. x to quickly solve for trivial cases (such as the initial problem). However, in the case of the scaled problem this violates the domain on the `Var` causing `calculate_variable_from_constraint` to fail when ideally it would continue.\r\n\r\nI think the first part of the solution is to wrap line 113 in a `try/except` to handle this case, but this leads to the question of what to do in the except. However, the next step in the method assumes that line 113 set the value of the variable to a new value such that there is also a new residual for the constraint, which is used to estimate the derivative w.r.t. the variable. I the except is just `pass`, then this next step fails due to a division by zero error (as the value of the variable is the same).", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2176/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2174", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2174/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2174/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2174/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2174", "id": 1041084522, "node_id": "I_kwDOA5FfHs4-DbBq", "number": 2174, "title": "Solving model with cloned summed expression fails", "user": {"login": "yonizim", "id": 41861004, "node_id": "MDQ6VXNlcjQxODYxMDA0", "avatar_url": "https://avatars.githubusercontent.com/u/41861004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yonizim", "html_url": "https://github.com/yonizim", "followers_url": "https://api.github.com/users/yonizim/followers", "following_url": "https://api.github.com/users/yonizim/following{/other_user}", "gists_url": "https://api.github.com/users/yonizim/gists{/gist_id}", "starred_url": "https://api.github.com/users/yonizim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yonizim/subscriptions", "organizations_url": "https://api.github.com/users/yonizim/orgs", "repos_url": "https://api.github.com/users/yonizim/repos", "events_url": "https://api.github.com/users/yonizim/events{/privacy}", "received_events_url": "https://api.github.com/users/yonizim/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-11-01T11:46:37Z", "updated_at": "2021-11-01T14:01:45Z", "closed_at": "2021-11-01T14:01:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nLets look at a model with an objective which consists of nested summed expression. This expression is created using clone_expression command. Solving it with any solver fails, with the following error message: \r\n`AttributeError: 'SumExpression' object has no attribute 'fixed'`\r\n\r\n### Steps to reproduce the issue\r\n\r\nA simple script which demonstrates the problem.\r\n\r\n```\r\nimport itertools\r\n\r\nimport pyomo.environ as pyo\r\nfrom pyomo.core.expr.numeric_expr import clone_expression\r\nfrom pyomo.opt import SolverFactory\r\n\r\n\r\nmodel = pyo.ConcreteModel()\r\nidx_set_1 = [1, 2]\r\nidx_set_2 = [1, 2]\r\nmodel.x = pyo.Var(idx_set_1)\r\n\r\ndouble_idx = list(itertools.product(idx_set_1, idx_set_2))\r\nmodel.y = pyo.Var(double_idx)\r\n\r\nvars_encoding_dict = {}\r\nfor idx in idx_set_1:\r\n    vars_encoding_dict[id(model.x[idx])] = sum(model.y[idx, idx2] for idx2 in idx_set_2)\r\n\r\nexpr = sum(2*model.x[i] for i in model.x)\r\nnew_expr = clone_expression(expr=expr, substitute=vars_encoding_dict)\r\nmodel.cost = pyo.Objective(expr=new_expr)\r\n\r\nSolverFactory(\"cplex_direct\").solve(model)\r\n```\r\n\r\nIf we would replace the objective expression with the following equivalent line:\r\n`\r\nnew_expr = sum(2*vars_encoding_dict[id(model.x[i])] for i in model.x)\r\n`\r\nthe solver terminates successfully.\r\n\r\n### Error Message\r\n\r\n\r\n```console\r\nTraceback (most recent call last):\r\n  File \"/Users/jonatan/projects/cadmium/venvpoetry/lib/python3.8/site-packages/IPython/core/interactiveshell.py\", line 3444, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-2-681b08274767>\", line 1, in <module>\r\n    runfile('/Users/jonatan/projects/cadmium/pyomo_bugs/sum_expression_fixed.py', wdir='/Users/jonatan/projects/cadmium/pyomo_bugs')\r\n  File \"/Applications/PyCharm CE.app/Contents/plugins/python-ce/helpers/pydev/_pydev_bundle/pydev_umd.py\", line 197, in runfile\r\n    pydev_imports.execfile(filename, global_vars, local_vars)  # execute the script\r\n  File \"/Applications/PyCharm CE.app/Contents/plugins/python-ce/helpers/pydev/_pydev_imps/_pydev_execfile.py\", line 18, in execfile\r\n    exec(compile(contents+\"\\n\", file, 'exec'), glob, loc)\r\n  File \"/Users/jonatan/projects/cadmium/pyomo_bugs/sum_expression_fixed.py\", line 33, in <module>\r\n    solver.solve(model_copy)\r\n  File \"/Users/jonatan/projects/cadmium/venvpoetry/lib/python3.8/site-packages/pyomo/solvers/plugins/solvers/direct_solver.py\", line 119, in solve\r\n    self._presolve(*args, **kwds)\r\n  File \"/Users/jonatan/projects/cadmium/venvpoetry/lib/python3.8/site-packages/pyomo/solvers/plugins/solvers/direct_solver.py\", line 62, in _presolve\r\n    self._set_instance(model, kwds)\r\n  File \"/Users/jonatan/projects/cadmium/venvpoetry/lib/python3.8/site-packages/pyomo/solvers/plugins/solvers/cplex_direct.py\", line 360, in _set_instance\r\n    self._add_block(model)\r\n  File \"/Users/jonatan/projects/cadmium/venvpoetry/lib/python3.8/site-packages/pyomo/solvers/plugins/solvers/cplex_direct.py\", line 417, in _add_block\r\n    self._set_objective(obj)\r\n  File \"/Users/jonatan/projects/cadmium/venvpoetry/lib/python3.8/site-packages/pyomo/solvers/plugins/solvers/cplex_direct.py\", line 570, in _set_objective\r\n    cplex_expr, referenced_vars = self._get_expr_from_pyomo_expr(obj.expr, self._max_obj_degree)\r\n  File \"/Users/jonatan/projects/cadmium/venvpoetry/lib/python3.8/site-packages/pyomo/solvers/plugins/solvers/cplex_direct.py\", line 300, in _get_expr_from_pyomo_expr\r\n    repn = generate_standard_repn(expr, quadratic=True)\r\n  File \"pyomo/repn/standard_repn.pyx\", line 348, in pyomo.repn.standard_repn.generate_standard_repn\r\n  File \"pyomo/repn/standard_repn.pyx\", line 957, in pyomo.repn.standard_repn._generate_standard_repn\r\n  File \"pyomo/repn/standard_repn.pyx\", line 410, in pyomo.repn.standard_repn._collect_sum\r\nAttributeError: 'SumExpression' object has no attribute 'fixed'\r\n\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.1.2\r\nPython version: 3.8.6\r\nOperating system: MacOSX 10.1.5.7 (Catalina)\r\nHow Pyomo was installed (PyPI, conda, source): pypi\r\nSolver (if applicable): cplex_direct\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2174/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2171", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2171/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2171/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2171/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2171", "id": 1037820121, "node_id": "I_kwDOA5FfHs492-DZ", "number": 2171, "title": "Set covering initialization in gdpopt fails for nested disjunctive model", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-10-27T20:13:46Z", "updated_at": "2021-12-02T21:50:07Z", "closed_at": "2021-12-02T21:50:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nIt seems that the set covering initialization adds invalid cuts to the following (ludicrous) nested disjunctive model. (Other initialization strategies work fine.)\r\n\r\n### Steps to reproduce the issue\r\n\r\n(Note this model is a really backwards way of writing a disjunction between the points (sqrt(2)/2, sqrt(2)/2) and (3sqrt(2)/2, 3sqrt(2)/2))\r\n\r\n```\r\nm = ConcreteModel()\r\nm.x = Var(bounds=(-10, 10))\r\nm.y = Var(bounds=(-10, 10))\r\nm.d1 = Disjunct()\r\nm.d1.lower_circle = Constraint(expr=m.x**2 + m.y**2 <= 1)\r\nm.inner = Disjunction(expr=[[m.x == 10], [(sqrt(2) - m.x)**2 + (sqrt(2) - m.y)**2 <= 1]])\r\nm.d2 = Disjunct()\r\nm.d2.upper_circle = Constraint(expr=(3 - m.x)**2 + (3 - m.y)**2 <= 1)\r\nm.d2.inner = Disjunction(expr=[[m.y == 10], [(sqrt(2) - m.x)**2 + (sqrt(2) - m.y)**2 <= 1]])\r\nm.outer = Disjunction(expr=[m.d1, m.d2])\r\nm.obj = Objective(expr=m.x + m.y)\r\n\r\nSolverFactory('gdpopt').solve(m, strategy='LOA', mip_solver='glpk',\r\n                                               nlp_solver='ipopt', tee=True,\r\n                                               init_strategy='set_covering')\r\n```\r\n\r\n### Error Message\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"temp_logical_stuff.py\", line 16, in <module>\r\n    SolverFactory('gdpopt').solve(m, strategy='LOA', mip_solver='glpk',\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/gdpopt/GDPopt.py\", line 134, in solve\r\n    GDPopt_initialize_master(solve_data, config)\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/gdpopt/master_initialize.py\", line 45, in GDPopt_initialize_master\r\n    init_strategy_fctn(solve_data, config)\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/gdpopt/master_initialize.py\", line 190, in init_set_covering\r\n    subprob_result = solve_disjunctive_subproblem(mip_result, solve_data, config)\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/gdpopt/nlp_solve.py\", line 38, in solve_disjunctive_subproblem\r\n    return solve_local_subproblem(mip_result, solve_data, config)\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/gdpopt/nlp_solve.py\", line 456, in solve_local_subproblem\r\n    preprocess_subproblem(subprob, config)\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/gdpopt/nlp_solve.py\", line 312, in preprocess_subproblem\r\n    xfrm('contrib.deactivate_trivial_constraints').apply_to(\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/transformation.py\", line 69, in apply_to\r\n    self._apply_to(model, **kwds)\r\n  File \"/home/esjohn/src/pyomo/pyomo/contrib/preprocessing/plugins/deactivate_trivial_constraints.py\", line 106, in _apply_to\r\n    raise ValueError(\r\nValueError: Trivial constraint d2.upper_circle violates BODY 98.0 \u2264 UB 1.0.\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: main\r\nPython version: 3.8\r\nOperating system: linux\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable): glpk, ipopt", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2171/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2169", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2169/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2169/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2169/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2169", "id": 1036879060, "node_id": "I_kwDOA5FfHs49zYTU", "number": 2169, "title": "solver interface tests fail with Xpress community edition", "user": {"login": "DLWoodruff", "id": 16341380, "node_id": "MDQ6VXNlcjE2MzQxMzgw", "avatar_url": "https://avatars.githubusercontent.com/u/16341380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DLWoodruff", "html_url": "https://github.com/DLWoodruff", "followers_url": "https://api.github.com/users/DLWoodruff/followers", "following_url": "https://api.github.com/users/DLWoodruff/following{/other_user}", "gists_url": "https://api.github.com/users/DLWoodruff/gists{/gist_id}", "starred_url": "https://api.github.com/users/DLWoodruff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DLWoodruff/subscriptions", "organizations_url": "https://api.github.com/users/DLWoodruff/orgs", "repos_url": "https://api.github.com/users/DLWoodruff/repos", "events_url": "https://api.github.com/users/DLWoodruff/events{/privacy}", "received_events_url": "https://api.github.com/users/DLWoodruff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-10-27T01:23:47Z", "updated_at": "2021-10-27T16:51:45Z", "closed_at": "2021-10-27T16:51:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nThe latest community edition of xpress no longer has a range attribute on the model, which results in test failures when the community edition is used.\r\n\r\n### Steps to reproduce the issue\r\n\r\n$ pytest test_xpress_persistent.py\r\n...\r\n========================================================================================= short test summary info =========================================================================================\r\nFAILED test_xpress_persistent.py::TestXpressPersistent::test_add_column - AttributeError: module 'xpress' has no attribute 'range'\r\nFAILED test_xpress_persistent.py::TestXpressPersistent::test_add_column_exceptions - AttributeError: module 'xpress' has no attribute 'range'\r\n### Information on your system\r\n\r\nPyomo version: latest\r\nPython version:\r\nOperating system:\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable):\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2169/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2165", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2165/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2165/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2165/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2165", "id": 1034835531, "node_id": "I_kwDOA5FfHs49rlZL", "number": 2165, "title": "MindtPy returns non-optimal solution on non-linear integer problem", "user": {"login": "Seon82", "id": 46298009, "node_id": "MDQ6VXNlcjQ2Mjk4MDA5", "avatar_url": "https://avatars.githubusercontent.com/u/46298009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Seon82", "html_url": "https://github.com/Seon82", "followers_url": "https://api.github.com/users/Seon82/followers", "following_url": "https://api.github.com/users/Seon82/following{/other_user}", "gists_url": "https://api.github.com/users/Seon82/gists{/gist_id}", "starred_url": "https://api.github.com/users/Seon82/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Seon82/subscriptions", "organizations_url": "https://api.github.com/users/Seon82/orgs", "repos_url": "https://api.github.com/users/Seon82/repos", "events_url": "https://api.github.com/users/Seon82/events{/privacy}", "received_events_url": "https://api.github.com/users/Seon82/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-10-25T08:30:26Z", "updated_at": "2021-10-26T15:36:40Z", "closed_at": "2021-10-26T15:36:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nI'm trying to solve a simple integer non-linear problem using MindtPy, but the solutions returned are far from optimal (Gurobi does find the optimum correctly).\r\n\r\n### Steps to reproduce the issue\r\n\r\n```python\r\nimport pyomo.environ as pyo\r\n\r\nmodel = pyo.ConcreteModel()\r\nmodel.x = pyo.Var(domain=pyo.NonNegativeIntegers)\r\nmodel.y = pyo.Var(domain=pyo.Binary)\r\nmodel.constraint = pyo.Constraint(expr = model.x * model.y <= 10)\r\nmodel.objective = pyo.Objective(expr = model.x * model.y - model.y, sense = pyo.maximize)\r\nres = pyo.SolverFactory('mindtpy').solve(model, tee=True)\r\n\r\nfor v in model.component_data_objects(pyo.Var):\r\n    print(str(v), v.value)\r\n```\r\n\r\n\r\n### Error Message\r\n\r\nOutput:\r\n\r\n```console\r\nINFO: ---Starting MindtPy---\r\nINFO: Original model has 1 constraints (1 nonlinear) and 0 disjunctions, with\r\n    2 variables, of which 1 are binary, 1 are integer, and 0 are continuous.\r\nINFO: Objective is nonlinear. Moving it to constraint set.\r\nINFO: rNLP is the initial strategy being used.\r\nINFO: Relaxed NLP: Solve relaxed integrality\r\nINFO: Relaxed NLP: OBJ: 6.533467210638507e-09  LB: -inf  UB: inf  TIME:0.03s\r\nINFO: ---MindtPy main Iteration 1---\r\nINFO: MIP 1: Solve main problem.\r\nINFO: MIP 1: OBJ: -5.2559467146445e-09  LB: -inf  UB: -5.2559467146445e-09\r\n    TIME: 0.04s\r\nINFO: Fixed-NLP 1: Solve subproblem for fixed integers.\r\nINFO: Fixed-NLP 1: OBJ: 7.494096406374967e-09  LB: 7.494096406374967e-09  UB:\r\n    -5.2559467146445e-09  TIME: 0.07s\r\nINFO: MindtPy exiting on bound convergence. LB: 7.494096406374967e-09 + (tol\r\n    0.0001) >= UB: -5.2559467146445e-09\r\nx 0.0\r\ny 0.0\r\n```\r\nThe optimal solution here is obviously `x=10` and `y=1`, and not `x=0` and`y=0`.\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.1.2\r\nPython version: 3.9.7\r\nOperating system: Linux\r\nHow Pyomo was installed (PyPI, conda, source): PyPI\r\nSolver (if applicable): MindtPy\r\n\r\n### Additional information\r\nBounding `x` to 10 with `x = pyo.Var(domain=pyo.NonNegativeIntegers, bounds=(0,10))` allows the solver the correctly find the optimal solution, but any more than that (for instance, 20), and it goes back to setting `y` to 0. ", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2165/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2163", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2163/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2163/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2163/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2163", "id": 1034184685, "node_id": "I_kwDOA5FfHs49pGft", "number": 2163, "title": "Pyomo keeps using round method for NoneType (MindtPy)", "user": {"login": "ZedongPeng", "id": 15854830, "node_id": "MDQ6VXNlcjE1ODU0ODMw", "avatar_url": "https://avatars.githubusercontent.com/u/15854830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZedongPeng", "html_url": "https://github.com/ZedongPeng", "followers_url": "https://api.github.com/users/ZedongPeng/followers", "following_url": "https://api.github.com/users/ZedongPeng/following{/other_user}", "gists_url": "https://api.github.com/users/ZedongPeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZedongPeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZedongPeng/subscriptions", "organizations_url": "https://api.github.com/users/ZedongPeng/orgs", "repos_url": "https://api.github.com/users/ZedongPeng/repos", "events_url": "https://api.github.com/users/ZedongPeng/events{/privacy}", "received_events_url": "https://api.github.com/users/ZedongPeng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-10-23T14:53:32Z", "updated_at": "2021-11-15T22:47:37Z", "closed_at": "2021-11-15T22:47:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\nThis is an issue reported in Pyomo Forum - Google Groups.\r\n\r\nhttps://groups.google.com/g/pyomo-forum/c/vPHjWTtbqMI/m/YRyAxYr4BAAJ?utm_medium=email&utm_source=footer&pli=1\r\n\r\n\r\n<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `pyomo solve` to optimize a model and ...\" -->\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```\r\n# example.py\r\nimport pyomo\r\nimport pyomo.opt\r\nimport pyomo.environ as pe\r\nimport numpy as np\r\n\r\na = np.array([1,1,1,15])\r\nb = np.array([1,2,3,4])\r\nc = 10\r\nP_res = 5\r\n\r\nmodel = pe.ConcreteModel(name = \"base optimizer\")\r\n\r\nmodel.M = pe.RangeSet(1,2)\r\nmodel.T = pe.RangeSet(1,P_res)\r\nmodel.state = pe.RangeSet(1,4)\r\n\r\nst_lb = np.array((-1.22,) * P_res)\r\nst_ub = np.array((1.22,) * P_res)\r\nth_lb = np.array((0,) * P_res)\r\nth_ub = np.array((1.0,) * P_res)\r\n\r\ndef th_b(model, i):\r\n    return (th_lb[i-1], th_ub[i-1])\r\nmodel.th = pe.Var(model.T, domain=pe.Reals, bounds = th_b)\r\nmodel.x = pe.Var(model.T, model.state, domain = pe.Reals)\r\nmodel.z_predicate = pe.Var(model.T, model.M, domain=pe.Binary)\r\n\r\ndef obj_rule(model):\r\n    return model.th[P_res]**2\r\nmodel.OBJ = pe.Objective(rule=obj_rule, sense = pe.minimize)\r\n\r\ndef init_state(model,s):\r\n    return model.x[1,s]  == a[s-1]\r\ndef dynamic_1(model,t):\r\n    if t == P_res:\r\n        return pe.Constraint.Skip\r\n    return model.x[t+1,1] == model.x[t,1] + model.x[t,4] * pe.cos(model.x[t,3])\r\ndef dynamic_2(model,t):\r\n    if t == P_res:\r\n        return pe.Constraint.Skip\r\n    return model.x[t+1,2] == model.x[t,2] + model.x[t,4] * pe.sin(model.x[t,3])\r\ndef dynamic_3(model,t):\r\n    if t == P_res:\r\n        return pe.Constraint.Skip\r\n    return model.x[t+1,4] == model.x[t,4] + model.th[t]\r\n    \r\nmodel.InitConstraint = pe.Constraint(model.state, rule = init_state)\r\nmodel.DynConstraint1 = pe.Constraint(model.T, rule=dynamic_1) \r\nmodel.DynConstraint2 = pe.Constraint(model.T, rule=dynamic_2)\r\nmodel.DynConstraint3 = pe.Constraint(model.T, rule=dynamic_3)\r\n\r\ndef binary_constraint(model,t):\r\n    return  model.z_predicate[t,1] <= 1 \r\nmodel.BiConstraint = pe.Constraint(model.T,rule=binary_constraint)\r\n\r\n    \r\nsolver = pyomo.opt.SolverFactory('mindtpy')\r\nresults = solver.solve(model, mip_solver='gurobi', nlp_solver='ipopt', tee=True)\r\n```\r\n\r\n### Error Message\r\n\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\nTraceback (most recent call last):\r\n  File \"/Users/zedongpeng/Github/pyomo-MINLP-benchmarking/test4.py\", line 76, in <module>\r\n    nlp_solver='ipopt', tee=True)\r\n  File \"/Users/zedongpeng/Github/pyomo/pyomo/contrib/mindtpy/MindtPy.py\", line 171, in solve\r\n    MindtPy_iteration_loop(solve_data, config)\r\n  File \"/Users/zedongpeng/Github/pyomo/pyomo/contrib/mindtpy/iterate.py\", line 101, in MindtPy_iteration_loop\r\n    if algorithm_should_terminate(solve_data, config, check_cycling=True):\r\n  File \"/Users/zedongpeng/Github/pyomo/pyomo/contrib/mindtpy/iterate.py\", line 365, in algorithm_should_terminate\r\n    solve_data.curr_int_sol = get_integer_solution(solve_data.mip)\r\n  File \"/Users/zedongpeng/Github/pyomo/pyomo/contrib/mindtpy/util.py\", line 552, in get_integer_solution\r\n    temp.append(int(round(var.value)))\r\nTypeError: type NoneType doesn't define __round__ method\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: Up to date\r\nPython version:  3.7.4\r\nOperating system: MacOS Big Sur 11.1\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable): MindtPy\r\n\r\n\r\n###  @jsiirola 's reply\r\n\r\n> This looks like it might be a bug in MindtPy where it does not cleanly handle/ignore unused discrete variables (variables that appear in the model but not in any active constraint).  You should definitely report this as an issue on GitHub.\r\n> \r\n> As a workaround, you can try either fixing unused variables to an integer value, or else removing them from the model.  In your code below, there appears to be no reason to index model.z_predicate by model.M (you only refer to the first index).\r\n\r\n### My reply and question\r\nObviously, it's a bug in MindtPy. Currently in MindtPy, we don't check and handle the unused discrete variables. I know we can use the stale flag to detect them after solving. But, I am just wondering is there anything tool or function in Pyomo that we can use to detect the unused variables?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2163/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2161", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2161/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2161/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2161/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2161", "id": 1033501676, "node_id": "I_kwDOA5FfHs49mfvs", "number": 2161, "title": "Cannot treat the scalar component 'xy' as an indexed component", "user": {"login": "AndreGismo", "id": 85300223, "node_id": "MDQ6VXNlcjg1MzAwMjIz", "avatar_url": "https://avatars.githubusercontent.com/u/85300223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreGismo", "html_url": "https://github.com/AndreGismo", "followers_url": "https://api.github.com/users/AndreGismo/followers", "following_url": "https://api.github.com/users/AndreGismo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreGismo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreGismo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreGismo/subscriptions", "organizations_url": "https://api.github.com/users/AndreGismo/orgs", "repos_url": "https://api.github.com/users/AndreGismo/repos", "events_url": "https://api.github.com/users/AndreGismo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreGismo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-10-22T11:56:33Z", "updated_at": "2021-10-22T12:00:38Z", "closed_at": "2021-10-22T12:00:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nI am coding along [this tutorial here](https://www.youtube.com/watch?v=T5LjmbyA1o0&t=1609s) and I am at the point, where I pass a dictionary comprehension as `initialize` for a `pyomo.environ.Set`.  It is approx 26:10 min in the video tutorial. It works in the tutorial\r\n\r\nBut when I run the command I get an Error:\r\n\r\n````\r\nKeyError: \"Cannot treat the scalar component 'BxG' as an indexed component\"\r\n````\r\n\r\n\r\n### Steps to reproduce the issue\r\nHere is the entire code, it's the same as in the mentioned tutorial:\r\n\r\n```\r\n# example.py\r\nimport pyomo.environ as pe\r\nimport pandas as pd\r\n\r\nB = {'A', 'B', 'C', 'D', 'E', 'F'}\r\nG = {1, 2, 3, 4, 5, 6, 7}\r\n\r\nG_of_B = {'A': set(),\r\n          'B': {1},\r\n          'C': {2, 3},\r\n          'D': {4},\r\n          'E': {5},\r\n          'F': {6, 7}}\r\n\r\n# see how data look as sparse matrix\r\ndf = pd.Series({(b, g): 1 for b in B for g in GofB[b]}).to_frame().reset_index()\r\ndf.columns = ['b', 'g', 'adjacency']\r\npd.crosstab(df['b'], df['g'])\r\n\r\n# creating the model\r\nmodel = pe.ConcreteModel()\r\nmodel.B = pe.Set(initialize=B)\r\nmodel.G = pe.Set(initialize=G)\r\nmodel.BxG = pe.Set(within=model.B*model.G, initialize={(b, g): 1 for b in B for g in G_of_B[b]})\r\nmodel.GofB = pe.Param(model.B, within=pe.Any, default=set(), initialize=G_of_B)\r\n```\r\n\r\nThe Error occurs in the penultimate line.\r\n\r\n### Error Message\r\n\r\n```console\r\nWARNING: Initializing ordered Set B with a fundamentally unordered data source\r\n    (type: set).  This WILL potentially lead to nondeterministic behavior in\r\n    Pyomo\r\nWARNING: Initializing ordered Set G with a fundamentally unordered data source\r\n    (type: set).  This WILL potentially lead to nondeterministic behavior in\r\n    Pyomo\r\nERROR: Constructing component 'BxG' from data=None failed: KeyError: \"Cannot\r\n    treat the scalar component 'BxG' as an indexed component\"\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-15-2938034bddba> in <module>\r\n      2 model.B = pe.Set(initialize=B)\r\n      3 model.G = pe.Set(initialize=G)\r\n----> 4 model.BxG = pe.Set(within=model.B*model.G, initialize={(b, g): 1 for b in B for g in G_of_B[b]})\r\n      5 model.GofB = pe.Param(model.B, within=pe.Any, default=set(), initialize=G_of_B)\r\n\r\n~\\anaconda3\\lib\\site-packages\\pyomo\\core\\base\\block.py in __setattr__(self, name, val)\r\n    539                 # Pyomo components are added with the add_component method.\r\n    540                 #\r\n--> 541                 self.add_component(name, val)\r\n    542             else:\r\n    543                 #\r\n\r\n~\\anaconda3\\lib\\site-packages\\pyomo\\core\\base\\block.py in add_component(self, name, val)\r\n   1084                              _blockName, str(data))\r\n   1085             try:\r\n-> 1086                 val.construct(data)\r\n   1087             except:\r\n   1088                 err = sys.exc_info()[1]\r\n\r\n~\\anaconda3\\lib\\site-packages\\pyomo\\core\\base\\disable_methods.py in construct(self, data)\r\n    113                 self._name = base.__name__\r\n    114             self.__class__ = base\r\n--> 115             return base.construct(self, data)\r\n    116         construct.__doc__ = base.construct.__doc__\r\n    117         cls.construct = construct\r\n\r\n~\\anaconda3\\lib\\site-packages\\pyomo\\core\\base\\set.py in construct(self, data)\r\n   1988                 # The index is coming in externally; we need to validate it\r\n   1989                 for index in self._init_values.indices():\r\n-> 1990                     IndexedComponent.__getitem__(self, index)\r\n   1991             else:\r\n   1992                 # Bypass the index validation and create the member directly\r\n\r\n~\\anaconda3\\lib\\site-packages\\pyomo\\core\\base\\indexed_component.py in __getitem__(self, index)\r\n    509             if index.__class__ is EXPR.GetItemExpression:\r\n    510                 return index\r\n--> 511             validated_index = self._validate_index(index)\r\n    512             if validated_index is not index:\r\n    513                 index = validated_index\r\n\r\n~\\anaconda3\\lib\\site-packages\\pyomo\\core\\base\\indexed_component.py in _validate_index(self, idx)\r\n    728         #\r\n    729         if not self.is_indexed():\r\n--> 730             raise KeyError(\r\n    731                 \"Cannot treat the scalar component '%s' \"\r\n    732                 \"as an indexed component\" % ( self.name, ))\r\n\r\nKeyError: \"Cannot treat the scalar component 'BxG' as an indexed component\"\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.1.2\r\nPython version: 3.8.8\r\nOperating system: Windows 10 Pro 21H1\r\nHow Pyomo was installed (PyPI, conda, source): `conda install -c conda-forge pyomo`\r\nSolver (if applicable): glpk (but didn't even reach that far)\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2161/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2139", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2139/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2139/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2139/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2139", "id": 1013787119, "node_id": "I_kwDOA5FfHs48bSnv", "number": 2139, "title": "logical_to_linear fails when it's called on a Block and BooleanVars are defined above the Block", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-10-01T21:44:49Z", "updated_at": "2021-11-01T19:17:05Z", "closed_at": "2021-11-01T19:17:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nCalling `core.logical_to_linear` on a Block where the BooleanVars are defined on the model doesn't work.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\nfrom pyomo.environ import *\r\n\r\nm = ConcreteModel()\r\nm.b = Block()\r\nm.Y = BooleanVar([1,2])\r\nm.b.logical = LogicalConstraint(expr=~m.Y[1])\r\n\r\nTransformationFactory('core.logical_to_linear').apply_to(m.b)\r\n```\r\n(This is fine if `Y` is declared on `m.b`, but not otherwise. It's also fine if you call `logical_to_linear` on the model.)\r\n\r\n### Error Message\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"whaaa.py\", line 8, in <module>\r\n    TransformationFactory('core.logical_to_linear').apply_to(m.b)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/transformation.py\", line 69, in apply_to\r\n    self._apply_to(model, **kwds)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/plugins/transform/logical_to_linear.py\", line 60, in _apply_to\r\n    _process_logical_constraints_in_logical_context(model)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/plugins/transform/logical_to_linear.py\", line 116, in _process_logical_constraints_in_logical_context\r\n    for linear_constraint in _cnf_to_linear_constraint_list(cnf_statement):\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/plugins/transform/logical_to_linear.py\", line 169, in _cnf_to_linear_constraint_list\r\n    cnf_expr)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/expr/visitor.py\", line 310, in walk_expression\r\n    node_result = self.exitNode(node, data)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/plugins/transform/logical_to_linear.py\", line 198, in exitNode\r\n    return 1 - values[0]\r\nTypeError: unsupported operand type(s) for -: 'int' and 'NoneType'\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: main\r\nPython version: 3.6\r\nOperating system: linux\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable):", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2139/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2137", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2137/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2137/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2137/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2137", "id": 1007721633, "node_id": "I_kwDOA5FfHs48EJyh", "number": 2137, "title": "Python - Pyomo - R - Reticulate - Failed to create solver [WinError 6] ", "user": {"login": "AlexanderMeisinger", "id": 91368938, "node_id": "MDQ6VXNlcjkxMzY4OTM4", "avatar_url": "https://avatars.githubusercontent.com/u/91368938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexanderMeisinger", "html_url": "https://github.com/AlexanderMeisinger", "followers_url": "https://api.github.com/users/AlexanderMeisinger/followers", "following_url": "https://api.github.com/users/AlexanderMeisinger/following{/other_user}", "gists_url": "https://api.github.com/users/AlexanderMeisinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexanderMeisinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexanderMeisinger/subscriptions", "organizations_url": "https://api.github.com/users/AlexanderMeisinger/orgs", "repos_url": "https://api.github.com/users/AlexanderMeisinger/repos", "events_url": "https://api.github.com/users/AlexanderMeisinger/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexanderMeisinger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2021-09-27T05:43:25Z", "updated_at": "2023-02-22T17:28:36Z", "closed_at": "2023-02-22T17:28:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey community,\r\n\r\nI tried to run the following code via R with reticulate and pyomo based on the solver \"cbc\". The Python-code is working if I execute the code independently of R. Executing the code in R with the package \"reticulate\" doesn't work.\r\n\r\nInformation about the Python-code: A Simple Concrete Pyomo Model - https://pyomo.readthedocs.io/en/stable/pyomo_overview/simple_examples.html\r\n\r\nThanks in advance for your help!\r\n\r\nBr, Alex\r\n\r\nCode in Python:\r\n```\r\nfrom pyomo.environ import *\r\n\r\nimport pyutilib.subprocess.GlobalData\r\npyutilib.subprocess.GlobalData.DEFINE_SIGNAL_HANDLERS_DEFAULT = False\r\n\r\nmodel = ConcreteModel()\r\n\r\nmodel.x = Var([1,2], domain=NonNegativeReals)\r\n\r\nmodel.OBJ = Objective(expr = 2*model.x[1] + 3*model.x[2])\r\n\r\nmodel.Constraint1 = Constraint(expr = 3*model.x[1] + 4*model.x[2] >= 1)\r\n\r\nopt = SolverFactory('cbc')\r\nopt.solve(model)\r\n```\r\nCode in R:\r\n```\r\nlibrary(\"reticulate\")\r\n\r\nuse_python(\"C:/Anaconda\")\r\nsetwd(\"C:/Users/SimpleConcretePyomoModel\")\r\nsource_python(\"C:/Users/SimpleConcretePyomoModel/SimpleConcretePyomoModel.py\")\r\n```\r\nError in R\r\n```\r\nError in py_run_file_impl(file, local, convert) : \r\n  RuntimeError: Attempting to use an unavailable solver.\r\n\r\nThe SolverFactory was unable to create the solver \"cbc\"\r\nand returned an UnknownSolver object.  This error is raised at the point\r\nwhere the UnknownSolver object was used as if it were valid (by calling\r\nmethod \"solve\").\r\n\r\nThe original solver was created with the following parameters:\r\n\ttype: cbc\r\n\t_args: ()\r\n\toptions: {}\r\nWARNING: Failed to create solver with name 'cbc': Could not execute the\r\n    command: 'C:\\Program Files\\cbc-win64\\cbc.exe -stop'\r\n    \tError message: [WinError 6] Das Handle ist ung\u00fcltig\r\n```\r\nAdditional information:\r\n```\r\npython:             C:/Anaconda/python.exe\r\nlibpython:          C:/Anaconda/python38.dll\r\npythonhome:         C:/Anaconda\r\nversion:            3.8.8 (default, Apr 13 2021, 15:08:03) [MSC v.1916 64 bit (AMD64)]\r\nArchitecture:       64bit\r\nnumpy:              C:/Anaconda/Lib/site-packages/numpy\r\nnumpy_version:      1.20.3\r\npyomo_version:      5.7.2\r\nreticulate_version: 1.20\r\ncbc_version:        2.10.3\r\nRStudio_version:    1.4.1717\r\nSpyder_version:     5.0.5\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2137/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2134", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2134/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2134/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2134/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2134", "id": 1001311295, "node_id": "I_kwDOA5FfHs47rsw_", "number": 2134, "title": "core.logical_to_linear misplaces transformed components on hierarchical models", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-09-20T19:18:00Z", "updated_at": "2021-10-07T19:05:20Z", "closed_at": "2021-10-07T19:05:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\n`core.logical_to_linear` puts transformed components on the parent model rather than the parent block, resulting in incorrect solutions if you solve subblocks of a model.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\nfrom pyomo.environ import *\r\nfrom pyomo.gdp import *\r\n\r\nm = ConcreteModel()\r\nm.b = Block()\r\nm.b.x = Var(bounds=(0,23))\r\nm.b.Y = BooleanVar()\r\nm.b.disj1 = Disjunct()\r\nm.b.disj1.c = Constraint(expr=m.b.x >= 21)\r\nm.b.disj2 = Disjunct()\r\nm.b.disj2.c = Constraint(expr=m.b.x >= 19)\r\nm.b.disjunction = Disjunction(expr=[m.b.disj1, m.b.disj2])\r\nm.b.obj = Objective(expr=m.b.x)\r\n\r\nm.b.lc = LogicalConstraint(expr=m.b.Y.implies(m.b.disj1.indicator_var))\r\nm.b.Y.fix(True)\r\n\r\nTransformationFactory('gdp.bigm').apply_to(m)\r\nTransformationFactory('core.logical_to_linear').apply_to(m)\r\n\r\nprint(\"Solve block:\")\r\nSolverFactory('gurobi').solve(m.b)\r\nm.b.x.display()\r\nprint(\"Solve model:\")\r\nSolverFactory('gurobi').solve(m)\r\nm.b.x.display()\r\n```\r\n\r\n### Error Message\r\n\r\nThe logical constraint has implicitly been moved to `m` rather than `m.b`, so solving the model is correct, but solving `m.b` is better than optimal because it's actually a relaxation (without the logical implication):\r\n```\r\nSolve block:\r\nx : Size=1, Index=None\r\n    Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n    None :     0 :  19.0 :    23 : False : False :  Reals\r\nSolve model:\r\nx : Size=1, Index=None\r\n    Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n    None :     0 :  21.0 :    23 : False : False :  Reals\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: main\r\nPython version: 3.6\r\nOperating system: linux\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable): Gurobi, but it doesn't matter", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2134/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2132", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2132/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2132/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2132/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2132", "id": 1001200731, "node_id": "I_kwDOA5FfHs47rRxb", "number": 2132, "title": "Default Gurobi interface may not work depending on how Gurobi was installed", "user": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-09-20T17:07:29Z", "updated_at": "2022-01-20T19:47:09Z", "closed_at": "2022-01-20T19:47:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nNewer versions of Gurobi do not come with a \"gurobi.sh\" executable if installed with conda or pip. Our default Gurobi interface relies on this executable. I think we could fix this by checking if Gurobi is installed in the current environment. If so, we can simply use \"python\" as the executable instead of \"gurobi.sh\".\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2132/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2127", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2127/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2127/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2127/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2127", "id": 993016844, "node_id": "MDU6SXNzdWU5OTMwMTY4NDQ=", "number": 2127, "title": "NL interface doesn't support python functions in `ExternalFunction`", "user": {"login": "wangyexiang", "id": 23202109, "node_id": "MDQ6VXNlcjIzMjAyMTA5", "avatar_url": "https://avatars.githubusercontent.com/u/23202109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangyexiang", "html_url": "https://github.com/wangyexiang", "followers_url": "https://api.github.com/users/wangyexiang/followers", "following_url": "https://api.github.com/users/wangyexiang/following{/other_user}", "gists_url": "https://api.github.com/users/wangyexiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangyexiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangyexiang/subscriptions", "organizations_url": "https://api.github.com/users/wangyexiang/orgs", "repos_url": "https://api.github.com/users/wangyexiang/repos", "events_url": "https://api.github.com/users/wangyexiang/events{/privacy}", "received_events_url": "https://api.github.com/users/wangyexiang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-09-10T08:38:00Z", "updated_at": "2022-11-03T22:28:27Z", "closed_at": "2022-11-03T22:28:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\n<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `pyomo solve` to optimize a model and ...\" -->\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\nMy code is:\r\n```\r\n# --*-coding:utf-8-*-\r\nfrom pyomo.environ import *\r\n\r\nm = ConcreteModel('test')\r\nm.x = Var(bounds=(-2000, 2000))\r\n\r\n\r\ndef myfun(x):\r\n    return x**2\r\n\r\n\r\nm.fun = ExternalFunction(function=myfun)\r\nm.obj = Objective(expr=m.fun(m.x))\r\n\r\nopt = SolverFactory('ipopt')\r\nresults = opt.solve(m)\r\n\r\nm.display()\r\n...\r\n```\r\n\r\n### Error Message\r\n```console\r\npyomo.common.errors.ApplicationError: Solver (ipopt) did not exit normally\r\n```\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\nBut, this code works well:\r\n```\r\n# --*-coding:utf-8-*-\r\nfrom pyomo.environ import *\r\n\r\nm = ConcreteModel('test')\r\nm.x = Var(bounds=(-2000, 2000))\r\n\r\n\r\ndef myfun(m):\r\n    return m.x**2\r\n\r\nm.obj = Objective(rule=myfun)\r\nopt = SolverFactory('ipopt')\r\nresults = opt.solve(m)\r\n\r\nm.display()\r\n\r\n```\r\n**My another question is:\r\nHow to use 'ExternalFunction' to solve a black box function of python?**\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.0.1\r\nPython version: 3.8\r\nOperating system: win10\r\nHow Pyomo was installed (PyPI, conda, source): pip\r\nSolver (if applicable): ipopt\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2127/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2126", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2126/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2126/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2126/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2126", "id": 992819370, "node_id": "MDU6SXNzdWU5OTI4MTkzNzA=", "number": 2126, "title": "Pynumero Recently Stopped Working with External Functions", "user": {"login": "eslickj", "id": 16341333, "node_id": "MDQ6VXNlcjE2MzQxMzMz", "avatar_url": "https://avatars.githubusercontent.com/u/16341333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eslickj", "html_url": "https://github.com/eslickj", "followers_url": "https://api.github.com/users/eslickj/followers", "following_url": "https://api.github.com/users/eslickj/following{/other_user}", "gists_url": "https://api.github.com/users/eslickj/gists{/gist_id}", "starred_url": "https://api.github.com/users/eslickj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eslickj/subscriptions", "organizations_url": "https://api.github.com/users/eslickj/orgs", "repos_url": "https://api.github.com/users/eslickj/repos", "events_url": "https://api.github.com/users/eslickj/events{/privacy}", "received_events_url": "https://api.github.com/users/eslickj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2021-09-10T02:08:15Z", "updated_at": "2021-09-13T19:26:47Z", "closed_at": "2021-09-13T19:26:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nPynumero seems to have stopped working with external functions in the latest Pyomo.  It worked until very recently.  I suspect something probably broke in setting \"AMPL_FUNC\"\r\n\r\n### Steps to reproduce the issue\r\n\r\nI assume there is an external function that can be used for testing.  If not, I added one in PR #1904. \r\n\r\nIf you have IDAES installed this will do it:\r\n\r\n```python\r\nfrom idaes.core.util.functions import functions_lib\r\nfrom pyomo.contrib.pynumero.interfaces.pyomo_nlp import PyomoNLP\r\nimport pyomo.environ as pyo\r\n\r\nif __name__ == \"__main__\":\r\n    m = pyo.ConcreteModel()\r\n    flib = functions_lib()\r\n    m.cbrt = pyo.ExternalFunction(library=flib, function=\"cbrt\")\r\n\r\n    m.x = pyo.Var([1, 2, 3], initialize=4.0)\r\n    m.c = pyo.Constraint(expr=m.x[3] ** 2 + m.cbrt(m.x[1]) == 25)\r\n    m.d = pyo.Constraint(expr=m.x[2] ** 2 + m.x[1] <= 18.0)\r\n    m.o = pyo.Objective(expr=m.x[1] ** 4 - 3 * m.x[1] * m.x[2] ** 3 + m.x[3] ** 2 - 8.0)\r\n    m.x[1].setlb(0.0)\r\n    m.x[2].setlb(0.0)\r\n\r\n    nlp = PyomoNLP(m)\r\n    f = nlp.evaluate_objective()\r\n    assert f == pytest.approx(-504.0)\r\n\r\n    jac = nlp.evaluate_jacobian().toarray()\r\n    print(jac)\r\n``` \r\n\r\n### Error Message\r\n\r\n```\r\nWARNING: The current pynumero_ASL library is version=2, but found version=1.\r\n    Please recompile / update your pynumero_ASL library.\r\nfunction cbrt not available  <--- this is the problem\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo\r\n    Version: 6.1.3.dev0\r\n\r\nPython\r\n    Version: 3.9.4 (default, Apr  9 2021, 11:43:21) [MSC v.1916 64 bit (AMD64)]\r\n    Executable: C:\\Users\\EslickJ\\miniconda3\\envs\\idaes-pse\\python.exe\r\n\r\nOS\r\n    Platform: Windows\r\n    Release: 10\r\n    Version: 10.0.19041\r\n\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2126/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2119", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2119/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2119/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2119/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2119", "id": 987896942, "node_id": "MDU6SXNzdWU5ODc4OTY5NDI=", "number": 2119, "title": "Cannot extend indexed port", "user": {"login": "dallan-keylogic", "id": 88728506, "node_id": "MDQ6VXNlcjg4NzI4NTA2", "avatar_url": "https://avatars.githubusercontent.com/u/88728506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dallan-keylogic", "html_url": "https://github.com/dallan-keylogic", "followers_url": "https://api.github.com/users/dallan-keylogic/followers", "following_url": "https://api.github.com/users/dallan-keylogic/following{/other_user}", "gists_url": "https://api.github.com/users/dallan-keylogic/gists{/gist_id}", "starred_url": "https://api.github.com/users/dallan-keylogic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dallan-keylogic/subscriptions", "organizations_url": "https://api.github.com/users/dallan-keylogic/orgs", "repos_url": "https://api.github.com/users/dallan-keylogic/repos", "events_url": "https://api.github.com/users/dallan-keylogic/events{/privacy}", "received_events_url": "https://api.github.com/users/dallan-keylogic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-09-03T15:38:30Z", "updated_at": "2021-09-03T15:44:12Z", "closed_at": "2021-09-03T15:44:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nWhile creating a minimal example to show a nonintuitive bug/\"feature\" of `pyomo.network.SequentialDecomposition`, I found that ports on indexed blocks cannot be extended.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\n#indexed_port_fail.py\r\nfrom pyomo.environ import ConcreteModel, Block, Var\r\nfrom pyomo.network import Port\r\n\r\nm = ConcreteModel()\r\nm.blk = Block()\r\n\r\nm.blk.sub_blks = Block(range(2))\r\n\r\nm.blk.sub_blks[0].x = Var(bounds=(0,1), initialize = 0)\r\nm.blk.sub_blks[0].inlet = Port({'x':m.blk.sub_blks[0].x})\r\n\r\nm.blk.inlet = Port(extends = m.blk.sub_blks[0].inlet)\r\n\r\n```\r\n\r\n```console\r\nrunfile('[REDACTED]/indexed_port_fail.py', wdir='[REDACTED]')\r\nERROR: Constructing component 'blk.inlet' from data=None failed:\r\n    AttributeError: 'IndexedPort' object has no attribute 'vars'\r\nTraceback (most recent call last):\r\n\r\n  File \"[REDACTED]\\indexed_port_fail.py\", line 19, in <module>\r\n    m.blk.inlet = Port(extends = m.blk.sub_blks[0].inlet)\r\n\r\n  File \"[REDACTED]\\miniconda3\\envs\\idaes\\lib\\site-packages\\pyomo\\core\\base\\block.py\", line 541, in __setattr__\r\n    self.add_component(name, val)\r\n\r\n  File \"[REDACTED]\\miniconda3\\envs\\idaes\\lib\\site-packages\\pyomo\\core\\base\\block.py\", line 1086, in add_component\r\n    val.construct(data)\r\n\r\n  File \"[REDACTED]\\miniconda3\\envs\\idaes\\lib\\site-packages\\pyomo\\network\\port.py\", line 365, in construct\r\n    self._initialize_members([None])\r\n\r\n  File \"[REDACTED]\\miniconda3\\envs\\idaes\\lib\\site-packages\\pyomo\\network\\port.py\", line 381, in _initialize_members\r\n    for key, val in self._extends.vars.items():\r\n\r\nAttributeError: 'IndexedPort' object has no attribute 'vars'\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.1.2\r\nPython version: 3.9.6 (default, Aug 18 2021, 15:44:49) [MSC v.1916 64 bit (AMD64)]\r\nOperating system: Windows 10\r\nHow Pyomo was installed: Either Pip or Conda", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2119/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2116", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2116/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2116/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2116/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2116", "id": 986853827, "node_id": "MDU6SXNzdWU5ODY4NTM4Mjc=", "number": 2116, "title": "ImportError: pyutilib.enum has been removed.", "user": {"login": "VVDL32", "id": 89990274, "node_id": "MDQ6VXNlcjg5OTkwMjc0", "avatar_url": "https://avatars.githubusercontent.com/u/89990274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VVDL32", "html_url": "https://github.com/VVDL32", "followers_url": "https://api.github.com/users/VVDL32/followers", "following_url": "https://api.github.com/users/VVDL32/following{/other_user}", "gists_url": "https://api.github.com/users/VVDL32/gists{/gist_id}", "starred_url": "https://api.github.com/users/VVDL32/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VVDL32/subscriptions", "organizations_url": "https://api.github.com/users/VVDL32/orgs", "repos_url": "https://api.github.com/users/VVDL32/repos", "events_url": "https://api.github.com/users/VVDL32/events{/privacy}", "received_events_url": "https://api.github.com/users/VVDL32/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-09-02T15:07:20Z", "updated_at": "2021-10-05T19:22:01Z", "closed_at": "2021-10-05T19:22:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nHi,\r\nI had used a version of pyomo last year on spyder with anaconda, and I had never had any problem. This year I also need it and it seems that I have to download it again as it is no longer on my computer. I did everything as previously, but now I get an error message and I didn't find the solution on internet. It seems that with my latest version of Python, pyutilib.enum has been removed whereas I need it to use Pyomo. Do you have any idea on how I could fix this ? \r\n\r\nHere are the message errors I get :\r\n\r\n![Capture d\u2019e\u0301cran 2021-09-02 a\u0300 17 03 06](https://user-images.githubusercontent.com/89990274/131868097-66312775-430a-4753-b50c-e4671de478b4.png)\r\n\r\n![Capture d\u2019e\u0301cran 2021-09-02 a\u0300 17 03 36](https://user-images.githubusercontent.com/89990274/131868194-cd0401b1-ac05-484e-bac9-0666068c23ad.png)\r\n\r\nMy version of spyder is 3.8.1 and I have tried to download pyomo v 6.1.2 with conda : \r\nI used this command : conda install -c conda-forge pyomo\r\n\r\nThanks by advance for helping ! \r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2116/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2102", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2102/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2102/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2102/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2102", "id": 977439508, "node_id": "MDU6SXNzdWU5Nzc0Mzk1MDg=", "number": 2102, "title": "Timeout in configure_cbc too tight", "user": {"login": "scy", "id": 28629, "node_id": "MDQ6VXNlcjI4NjI5", "avatar_url": "https://avatars.githubusercontent.com/u/28629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scy", "html_url": "https://github.com/scy", "followers_url": "https://api.github.com/users/scy/followers", "following_url": "https://api.github.com/users/scy/following{/other_user}", "gists_url": "https://api.github.com/users/scy/gists{/gist_id}", "starred_url": "https://api.github.com/users/scy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scy/subscriptions", "organizations_url": "https://api.github.com/users/scy/orgs", "repos_url": "https://api.github.com/users/scy/repos", "events_url": "https://api.github.com/users/scy/events{/privacy}", "received_events_url": "https://api.github.com/users/scy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-08-23T20:52:00Z", "updated_at": "2022-02-21T21:06:44Z", "closed_at": "2022-02-21T21:06:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nThe [initialization code of the CBC solver plugin in `configure_cbc`](https://github.com/Pyomo/pyomo/blob/62cdc7dfd301d044647d8016f70dbe8d79723a97/pyomo/solvers/plugins/solvers/CBCplugin.py#L54-L61) will fail if `cbc -stop` or `cbc dummy -AMPL -stop` takes more than 1 second to return. This can break runs in a non-deterministic way.\r\n\r\n### Steps to reproduce the issue\r\n\r\nTry to use the CBC solver on a system with lots of load, or a really slow disk. Or make `cbc` a wrapper script that does `sleep 1` before calling the real `cbc`.\r\n\r\nAlternatively, you can monkey-patch `subprocess.run` to use a ridiculously short timeout:\r\n\r\n```python\r\nimport subprocess\r\n\r\ndef patched_subprocess_run(*args, **kwargs):\r\n    if kwargs.get(\"timeout\") is not None:\r\n        kwargs[\"timeout\"] = 0.001\r\n    return orig_subprocess_run(*args, **kwargs)\r\n\r\norig_subprocess_run = subprocess.run\r\nsubprocess.run = patched_subprocess_run\r\n\r\n# Your Pyomo call here.\r\n```\r\n\r\n### Error Message\r\n\r\n```\r\nFailed to create solver with name 'cbc': Command '['/usr/bin/cbc', '-stop']' timed out after 0.001 seconds\r\n\r\nRuntimeError: Attempting to use an unavailable solver.\r\nThe SolverFactory was unable to create the solver \"cbc\"\r\nand returned an UnknownSolver object.  This error is raised at the point\r\nwhere the UnknownSolver object was used as if it were valid (by calling\r\nmethod \"_apply_solver\").\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.0.1\r\nPython version: 3.8.11\r\nOperating system: Debian Bullseye in Docker\r\nHow Pyomo was installed (PyPI, conda, source): pip (PyPI)\r\nSolver (if applicable): CBC\r\n\r\n### Additional information\r\n\r\nI\u2019m running this in AWS Lambda via a Docker image. The issue occurs from time to time. Maybe it\u2019s related to the Lambda functions being cold, maybe not. In any case, I think a one second timeout is way too short. See also #2080, where a similar issue was reported for the ASL solver.\r\n\r\nAs a workaround, you can use the monkey-patching method above to set `timeout` to a more sensible value (e.g. `10`). Make sure to use something like `kwargs[\"timeout\"] = max(kwargs[\"timeout\"], 10)` in order to not _decrease_ the timeout.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2102/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2100", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2100/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2100/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2100/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2100", "id": 975863823, "node_id": "MDU6SXNzdWU5NzU4NjM4MjM=", "number": 2100, "title": "Solver (ipopt) returned non-zero return code (-6)", "user": {"login": "kanishka-ghosh", "id": 63417433, "node_id": "MDQ6VXNlcjYzNDE3NDMz", "avatar_url": "https://avatars.githubusercontent.com/u/63417433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kanishka-ghosh", "html_url": "https://github.com/kanishka-ghosh", "followers_url": "https://api.github.com/users/kanishka-ghosh/followers", "following_url": "https://api.github.com/users/kanishka-ghosh/following{/other_user}", "gists_url": "https://api.github.com/users/kanishka-ghosh/gists{/gist_id}", "starred_url": "https://api.github.com/users/kanishka-ghosh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kanishka-ghosh/subscriptions", "organizations_url": "https://api.github.com/users/kanishka-ghosh/orgs", "repos_url": "https://api.github.com/users/kanishka-ghosh/repos", "events_url": "https://api.github.com/users/kanishka-ghosh/events{/privacy}", "received_events_url": "https://api.github.com/users/kanishka-ghosh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-08-20T19:24:39Z", "updated_at": "2021-08-25T18:08:17Z", "closed_at": "2021-08-25T18:08:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\nI am having an issue similar to https://github.com/Pyomo/pyomo/issues/1647 with a class example problem.\r\n\r\n\r\n### Steps to reproduce the issue\r\nThe issue can be reproduced by running all sections of the following notebook shared by @adowling2:\r\nhttps://ndcbe.github.io/CBE60499/02.08-Parmest-tutorial.html\r\n\r\nWhile running the notebook, please disregard the error in Section \"2.8.7 Local uncertainty analysis\" of the notebook and execute the cells in Section \"2.8.8 Nonlinear confidence regions\".\r\nThe following error message is generated when executing the first cell under Section \"2.8.8 Nonlinear confidence regions\" where I try to use the `objective_at_theta()` function from `pyomo.contrib.parmest.parmest`.\r\n\r\nThe same error message pops up in Jupyter notebook whenever I generate a plot in using `matplotlib.pyplot` followed by iterative calls to Ipopt. \r\n\r\n### Error Message\r\n\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\nERROR: Solver (ipopt) returned non-zero return code (-6)\r\n---------------------------------------------------------------------------\r\nApplicationError                          Traceback (most recent call last)\r\n<ipython-input-13-54f4c550a227> in <module>\r\n      8 theta_vals = pd.DataFrame(list(product(A1, A2, E1, E2)), columns=theta_names)\r\n      9 \r\n---> 10 obj_at_theta = pest.objective_at_theta(theta_vals)\r\n     11 print(obj_at_theta.head())\r\n     12 \r\n\r\n~/anaconda3/envs/idaes-pse-dev/lib/python3.8/site-packages/pyomo/contrib/parmest/parmest.py in objective_at_theta(self, theta_values)\r\n   1071         all_obj = list()\r\n   1072         for Theta in local_thetas:\r\n-> 1073             obj, thetvals, worststatus = self._Q_at_theta(Theta)\r\n   1074             if worststatus != pyo.TerminationCondition.infeasible:\r\n   1075                  all_obj.append(list(Theta.values()) + [obj])\r\n\r\n~/anaconda3/envs/idaes-pse-dev/lib/python3.8/site-packages/pyomo/contrib/parmest/parmest.py in _Q_at_theta(self, thetavals)\r\n    752                            str(status_obj), str(solved), str(iters), str(time), str(regu))\r\n    753 \r\n--> 754                 results = optimizer.solve(instance)\r\n    755                 if self.diagnostic_mode:\r\n    756                     print('standard solve solver termination condition=',\r\n\r\n~/anaconda3/envs/idaes-pse-dev/lib/python3.8/site-packages/pyomo/opt/base/solvers.py in solve(self, *args, **kwds)\r\n    595                 elif hasattr(_status, 'log') and _status.log:\r\n    596                     logger.error(\"Solver log:\\n\" + str(_status.log))\r\n--> 597                 raise ApplicationError(\r\n    598                     \"Solver (%s) did not exit normally\" % self.name)\r\n    599             solve_completion_time = time.time()\r\n\r\nApplicationError: Solver (ipopt) did not exit normally\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 5.7.2\r\nPython version: 3.8.5\r\nOperating system: macOS Catalina 10.15.7\r\nHow Pyomo was installed (PyPI, conda, source): conda\r\nSolver (if applicable): Ipopt 3.13.2", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2100/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2060", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2060/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2060/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2060/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2060", "id": 953067015, "node_id": "MDU6SXNzdWU5NTMwNjcwMTU=", "number": 2060, "title": "Var bound defined by a Param doesn't update in 6.0.1", "user": {"login": "dguittet", "id": 29387736, "node_id": "MDQ6VXNlcjI5Mzg3NzM2", "avatar_url": "https://avatars.githubusercontent.com/u/29387736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dguittet", "html_url": "https://github.com/dguittet", "followers_url": "https://api.github.com/users/dguittet/followers", "following_url": "https://api.github.com/users/dguittet/following{/other_user}", "gists_url": "https://api.github.com/users/dguittet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dguittet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dguittet/subscriptions", "organizations_url": "https://api.github.com/users/dguittet/orgs", "repos_url": "https://api.github.com/users/dguittet/repos", "events_url": "https://api.github.com/users/dguittet/events{/privacy}", "received_events_url": "https://api.github.com/users/dguittet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-07-26T16:13:38Z", "updated_at": "2021-08-10T18:46:22Z", "closed_at": "2021-08-10T18:46:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nI have a Var whose bound is defined by a mutable Param. The Param has a default value upon construction, and later gets updated. In Pyomo version 5.7.3, the bound's value is updated correctly; however in version 6.0.1, the bound's value doesn't get updated and remains at the default value. The thing that seems to be breaking version 6.0.1 is whether or not units are included in the Var and the Param.\r\n\r\n### Steps to reproduce the issue\r\n```\r\n    import pyomo.environ as pyomo\r\n    from pyomo.environ import units as u\r\n\r\n    model = pyomo.ConcreteModel()\r\n\r\n    model.avail_gen = pyomo.Param(within=pyomo.NonNegativeReals,\r\n                                  default=0,\r\n                                  mutable=True,\r\n                                  units=u.MW\r\n                                  )\r\n    model.generation = pyomo.Var(domain=pyomo.NonNegativeReals,\r\n                                 bounds=(0, model.avail_gen),\r\n                                 units=u.MW\r\n                                 )\r\n    model.avail_gen.set_value(10)\r\n    model.obj = pyomo.Objective(expr=model.generation, sense=pyomo.maximize)\r\n\r\n    solver = pyomo.SolverFactory('glpk')\r\n    results = solver.solve(model)\r\n\r\n    print(pyomo.value(model.obj))\r\n```\r\n\r\n### Error Message\r\n\r\nThe obj value is incorrect at 0, due to the upper bounds of model.generation = 0. However, if the units=u.MW lines are commented out, the obj value is correct at 10. This doesn't happen with 5.7.3.\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.0.1\r\nPython version: 3.7\r\nOperating system: OSX\r\nHow Pyomo was installed (PyPI, conda, source): PyPi\r\nSolver (if applicable): GLPK, but others also\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2060/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2054", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2054/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2054/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2054/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2054", "id": 948978816, "node_id": "MDU6SXNzdWU5NDg5Nzg4MTY=", "number": 2054, "title": "Error in solver tee output on Windows", "user": {"login": "eslickj", "id": 16341333, "node_id": "MDQ6VXNlcjE2MzQxMzMz", "avatar_url": "https://avatars.githubusercontent.com/u/16341333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eslickj", "html_url": "https://github.com/eslickj", "followers_url": "https://api.github.com/users/eslickj/followers", "following_url": "https://api.github.com/users/eslickj/following{/other_user}", "gists_url": "https://api.github.com/users/eslickj/gists{/gist_id}", "starred_url": "https://api.github.com/users/eslickj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eslickj/subscriptions", "organizations_url": "https://api.github.com/users/eslickj/orgs", "repos_url": "https://api.github.com/users/eslickj/repos", "events_url": "https://api.github.com/users/eslickj/events{/privacy}", "received_events_url": "https://api.github.com/users/eslickj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2021-07-20T19:12:33Z", "updated_at": "2021-08-06T15:43:54Z", "closed_at": "2021-08-06T13:57:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nWhen I an solving a pyomo problem and use the \"tee=True\" option, and I scroll up in the CMD window on Windows to see some output displayed above, I often get the error below.\r\n\r\n```sh\r\nNumber of objective function evaluations             = 30\r\nNumber of objective gradient evaluations             = 6\r\nNumber of equality constraint evaluations            = 31\r\nNumber of inequality constraint evaluations          = 0\r\nNumber of equality constraint Jacobian evaluations   = 6\r\nNumber of inequality constraint Jacobian evaluations = 0\r\nNumber of Lagrangian Hessian evaluations             = 5\r\nTotal CPU secs in IPOPT (w/o function evaluations)   =      0.668\r\nTotal CPU secs in NLP function evaluations           =     25.060\r\n\r\nEXIT: Optimal Solution Found.\r\n    solver.solve(m, tee=True)\r\n  File \"c:\\users\\eslickj\\git\\pyomo\\pyomo\\opt\\base\\solvers.py\", line 578, in solve\r\n    _status = self._apply_solver()\r\n  File \"c:\\users\\eslickj\\git\\pyomo\\pyomo\\opt\\solver\\shellcmd.py\", line 246, in _apply_solver\r\n    self._rc, self._log = self._execute_command(self._command)\r\n  File \"c:\\users\\eslickj\\git\\pyomo\\pyomo\\opt\\solver\\shellcmd.py\", line 324, in _execute_command\r\n    t.STDERR.flush()\r\n  File \"c:\\users\\eslickj\\git\\pyomo\\pyomo\\common\\tee.py\", line 390, in __exit__\r\n    self.close(et is not None)\r\n  File \"c:\\users\\eslickj\\git\\pyomo\\pyomo\\common\\tee.py\", line 378, in close\r\n    raise RuntimeError(\r\nRuntimeError: TeeStream: deadlock observed joining reader threads\r\n```\r\n\r\n### Steps to reproduce the issue\r\n\r\nI'm not sure this happens 100% of the time, but you just need to run a pyomo problem on windows in a cmd window and be scrolling up when the solver completes.\r\n\r\nIt's not with a specific script.  It happens with with any problem I run.  Should be reproducible with any problem using ipopt and \"tee=True.\"   \r\n\r\n### Error Message\r\n\r\n```\r\n  File \"c:\\users\\eslickj\\git\\pyomo\\pyomo\\common\\tee.py\", line 378, in close\r\n    raise RuntimeError(\r\nRuntimeError: TeeStream: deadlock observed joining reader threads\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: Pyomo 6.0.2 (devel {string_args}) (CPython 3.9.4 on Windows 10)\r\nPython version:  3.9.4\r\nOperating system: Windows 10\r\nHow Pyomo was installed (PyPI, conda, source): source (pip with -e option)\r\nSolver (if applicable): Ipopt\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2054/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2047", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2047/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2047/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2047/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2047", "id": 943828029, "node_id": "MDU6SXNzdWU5NDM4MjgwMjk=", "number": 2047, "title": "Constraint `get_value` fails for ranged inequality", "user": {"login": "Robbybp", "id": 8885032, "node_id": "MDQ6VXNlcjg4ODUwMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/8885032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Robbybp", "html_url": "https://github.com/Robbybp", "followers_url": "https://api.github.com/users/Robbybp/followers", "following_url": "https://api.github.com/users/Robbybp/following{/other_user}", "gists_url": "https://api.github.com/users/Robbybp/gists{/gist_id}", "starred_url": "https://api.github.com/users/Robbybp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Robbybp/subscriptions", "organizations_url": "https://api.github.com/users/Robbybp/orgs", "repos_url": "https://api.github.com/users/Robbybp/repos", "events_url": "https://api.github.com/users/Robbybp/events{/privacy}", "received_events_url": "https://api.github.com/users/Robbybp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-07-13T21:06:34Z", "updated_at": "2021-07-16T15:50:51Z", "closed_at": "2021-07-16T15:50:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nTrying to get tests to pass for #1613, I ran into the following bug, where I cannot get the `expr` attribute of a ranged inequality constraint. It appears to be caused by the `get_value` using the no longer supported (?) ranged inequality syntax `con._lower <= con._body <= con._upper`. A similar syntax, `con._lower <= (con._body <= con._upper)`, appears to work, but maybe we should use the `inequality` function?\r\n\r\n### Steps to reproduce the issue\r\n\r\n```python\r\nimport pyomo.environ as pyo \r\n\r\nm = pyo.ConcreteModel()\r\nm.v = pyo.Var()\r\n\r\nm.con = pyo.Constraint(expr=pyo.inequality(1, m.v, 3)) \r\n\r\nm.con.expr\r\n```\r\n\r\n### Error Message\r\n\r\nThe error is due to converting non-constant expression to bool:\r\n\r\n```console\r\npyomo.common.errors.PyomoException: Cannot convert non-constant expression to bool. This error is usually caused by using an expression in a boolean context such as an if statement. For example, \r\n    m.x = Var()\r\n    if m.x <= 0:\r\n        ...\r\nwould cause this exception.\r\n```\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2047/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2046", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2046/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2046/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2046/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2046", "id": 943794171, "node_id": "MDU6SXNzdWU5NDM3OTQxNzE=", "number": 2046, "title": "`generate_standard_repn` silently fails to capture nonlinear expression", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-07-13T20:17:44Z", "updated_at": "2021-08-16T15:58:21Z", "closed_at": "2021-08-16T15:58:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nIn the example below, `generate_standard_repn` fails to record the nonlinear expression at all.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\nfrom pyomo.environ import *\r\nfrom pyomo.repn import generate_standard_repn\r\n\r\nm = ConcreteModel()\r\nm.x = Var()\r\nm.y = Var()\r\n\r\nexpr = (m.x + m.y)*(m.x - m.y)*(m.x**2 + m.y**2)\r\nrepn = generate_standard_repn(expr)\r\nprint(repn)\r\n```\r\n\r\n### Error Message\r\n\r\nOutput from the script above:\r\n```\r\nconstant:       0\r\nlinear vars:    []\r\nlinear var ids: []\r\nlinear coef:    []\r\nquadratic vars:    []\r\nquadratic var ids: []\r\nquadratic coef:    []\r\nnonlinear expr: None\r\nnonlinear vars: []\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: main branch\r\nPython version: 3.6.5\r\nOperating system: linux\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable):", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2046/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2041", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2041/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2041/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2041/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2041", "id": 935097655, "node_id": "MDU6SXNzdWU5MzUwOTc2NTU=", "number": 2041, "title": "Pyomo allows variable values to be lists", "user": {"login": "carldlaird", "id": 18519762, "node_id": "MDQ6VXNlcjE4NTE5NzYy", "avatar_url": "https://avatars.githubusercontent.com/u/18519762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carldlaird", "html_url": "https://github.com/carldlaird", "followers_url": "https://api.github.com/users/carldlaird/followers", "following_url": "https://api.github.com/users/carldlaird/following{/other_user}", "gists_url": "https://api.github.com/users/carldlaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/carldlaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carldlaird/subscriptions", "organizations_url": "https://api.github.com/users/carldlaird/orgs", "repos_url": "https://api.github.com/users/carldlaird/repos", "events_url": "https://api.github.com/users/carldlaird/events{/privacy}", "received_events_url": "https://api.github.com/users/carldlaird/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-07-01T18:11:57Z", "updated_at": "2022-02-21T23:08:25Z", "closed_at": "2022-02-21T23:08:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Summary\r\n\r\nPyomo doesn't seem to validate the type of incoming data on variables. In the example below, I set the value of a variable to a list... (and it ... worked?)...\r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\nimport pyomo.environ as pyo\r\nm = pyo.ConcreteModel()\r\nm.x = pyo.Var()\r\nm.x.fix([1,2,3])\r\nprint(pyo.value(m.x))\r\n```\r\n[1, 2, 3]\r\n\r\n### Information on your system\r\n\r\nPyomo version: Pyomo 6.0.1 (devel {main})\r\nPython version: 3.8.5\r\nOperating system: OS X\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable):\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2041/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2039", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2039/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2039/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2039/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2039", "id": 934135824, "node_id": "MDU6SXNzdWU5MzQxMzU4MjQ=", "number": 2039, "title": "Reference to empty IndexedComponent indexed by non-finite set", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-06-30T21:19:02Z", "updated_at": "2021-10-25T22:11:43Z", "closed_at": "2021-10-25T22:11:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nIf you make a Reference to an IndexedVar indexed by NonNegativeIntegers, but the Var doesn't have any VarDatas yet, then the model can't pprint.\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```\r\nfrom pyomo.environ import *\r\n\r\nm = ConcreteModel()\r\nm.v = Var(NonNegativeIntegers, dense=False)\r\n\r\nm.ref = Reference(m.v)\r\nm.pprint()\r\n```\r\n\r\n### Error Message\r\n\r\n```\r\n1 Var Declarations\r\n    v : Size=0, Index=NonNegativeIntegers\r\n        Key : Lower : Value : Upper : Fixed : Stale : Domain\r\n\r\n1 IndexedComponent Declarations\r\n    ref : Size=0, Index=ref_index\r\n        Key : Object\r\n\r\n1 SetOf Declarations\r\nTraceback (most recent call last):\r\n  File \"pprint_bug.py\", line 7, in <module>\r\n    m.pprint()\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/component.py\", line 505, in pprint\r\n    self.is_constructed(), *self._pprint()\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/component.py\", line 359, in _pprint_base_impl\r\n    _fcn(ostream, _key, _data_dict[_key])\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/block.py\", line 1992, in _pprint_callback\r\n    data._pprint_blockdata_components(ostream)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/block.py\", line 1696, in _pprint_blockdata_components\r\n    self.component(key).pprint(ostream=indented_ostream)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/component.py\", line 505, in pprint\r\n    self.is_constructed(), *self._pprint()\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/set.py\", line 2354, in _pprint\r\n    [(\"Dimen\", self.dimen),\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/set.py\", line 2330, in dimen\r\n    _iter = iter(self)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/set.py\", line 1137, in __iter__\r\n    return self._iter_impl()\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/set.py\", line 2311, in _iter_impl\r\n    return iter(self._ref)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/reference.py\", line 393, in __iter__\r\n    return self._slice.index_wildcard_keys()\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/indexed_component_slice.py\", line 263, in index_wildcard_keys\r\n    _iter = _IndexedComponent_slice_iter(self, iter_over_index=True)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/indexed_component_slice.py\", line 439, in __init__\r\n    *call_stack[0][1], iter_over_index=self._iter_over_index)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/indexed_component_slice.py\", line 329, in __init__\r\n    self.component_iter = component.index_set().__iter__()\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/set.py\", line 508, in __iter__\r\n    \"is not iterable)\" % (self.__class__.__name__, self.name))\r\nTypeError: 'GlobalSet' object is not iterable (non-finite Set 'NonNegativeIntegers' is not iterable)\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: main branch\r\nPython version: 3.6.5\r\nOperating system: linux\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable):", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2039/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2037", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2037/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2037/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2037/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2037", "id": 934022285, "node_id": "MDU6SXNzdWU5MzQwMjIyODU=", "number": 2037, "title": "FBBT of squares written as multiplications", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-06-30T19:01:27Z", "updated_at": "2021-06-30T21:43:18Z", "closed_at": "2021-06-30T21:43:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nThis isn't a bug in the sense that it's mathematically wrong, but it seems not ideal: fbbt computes different bounds on m.x*m.x than it does on m.x**2.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\nfrom pyomo.environ import *\r\nfrom pyomo.contrib.fbbt.fbbt import compute_bounds_on_expr\r\n\r\nm = ConcreteModel()\r\nm.x = Var([1,2], bounds=(-2,6))\r\n\r\nprint(compute_bounds_on_expr(m.x[1]*m.x[1] + m.x[2]*m.x[2]))\r\nprint(compute_bounds_on_expr(m.x[1]**2 + m.x[2]**2))\r\n```\r\n outputs\r\n```\r\n(-24, 72)\r\n(0, 72)\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: main branch\r\nPython version: 3.6\r\nOperating system: linux\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable):\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2037/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2033", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2033/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2033/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2033/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2033", "id": 930844450, "node_id": "MDU6SXNzdWU5MzA4NDQ0NTA=", "number": 2033, "title": "Cannot use indexed parameter constructed from numpy array in expression ", "user": {"login": "QuriousCube", "id": 83694553, "node_id": "MDQ6VXNlcjgzNjk0NTUz", "avatar_url": "https://avatars.githubusercontent.com/u/83694553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuriousCube", "html_url": "https://github.com/QuriousCube", "followers_url": "https://api.github.com/users/QuriousCube/followers", "following_url": "https://api.github.com/users/QuriousCube/following{/other_user}", "gists_url": "https://api.github.com/users/QuriousCube/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuriousCube/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuriousCube/subscriptions", "organizations_url": "https://api.github.com/users/QuriousCube/orgs", "repos_url": "https://api.github.com/users/QuriousCube/repos", "events_url": "https://api.github.com/users/QuriousCube/events{/privacy}", "received_events_url": "https://api.github.com/users/QuriousCube/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-06-27T04:12:52Z", "updated_at": "2021-08-12T18:28:49Z", "closed_at": "2021-08-12T18:28:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nI try to construct an expression with a `pyo.Param` that is initialized with values in a numpy array. But that leads to an error. A workaround is to convert the numpy's dtype into python float/int.\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```console\r\n$ conda install -c conda-forge pyomo\r\n$ python3 test.py\r\n```\r\n\r\n```\r\n# test.py\r\nimport pyomo.environ as pyo\r\nimport numpy as np\r\n\r\nm = pyo.ConcreteModel()\r\n\r\nm.ix_set = pyo.RangeSet(2)\r\n\r\np_init = np.array([0, 1])\r\ndef init_workaround(model, i):\r\n    return p_init[i - 1]  # workaround: use .item() method here.\r\n\r\nm.p = pyo.Param(m.ix_set, initialize=init_workaround)\r\nm.v = pyo.Var(m.ix_set)\r\n\r\nexpr = m.p[1] > m.v[1]\r\n```\r\n\r\n### Error Message\r\n\r\n```console\r\nTraceback (most recent call last):\r\n  File \"<...>/test_constraint_ix.py\", line 15, in <module>\r\n    expr = m.p[1] > m.v[1]\r\n  File \"pyomo/core/expr/logical_expr.pyx\", line 170, in \r\n    pyomo.core.expr.logical_expr.InequalityExpression.__bool__\r\n    pyomo.common.errors.PyomoException:\r\n        Cannot convert non-constant expression to bool.\r\n        This error is usually caused by using an expression in a boolean\r\n        context such as an if statement. For example, \r\n            m.x = Var()\r\n            if m.x <= 0:\r\n            ...\r\n        would cause this exception.\r\n\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.0.1\r\nPython version: 3.9.5\r\nOperating system: Fedora 33\r\nHow Pyomo was installed (PyPI, conda, source): conda-forge\r\nSolver (if applicable): not applicable\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2033/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2032", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2032/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2032/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2032/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2032", "id": 930839355, "node_id": "MDU6SXNzdWU5MzA4MzkzNTU=", "number": 2032, "title": "is_parameter_type() method: IndexedParam is not a parameter", "user": {"login": "QuriousCube", "id": 83694553, "node_id": "MDQ6VXNlcjgzNjk0NTUz", "avatar_url": "https://avatars.githubusercontent.com/u/83694553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuriousCube", "html_url": "https://github.com/QuriousCube", "followers_url": "https://api.github.com/users/QuriousCube/followers", "following_url": "https://api.github.com/users/QuriousCube/following{/other_user}", "gists_url": "https://api.github.com/users/QuriousCube/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuriousCube/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuriousCube/subscriptions", "organizations_url": "https://api.github.com/users/QuriousCube/orgs", "repos_url": "https://api.github.com/users/QuriousCube/repos", "events_url": "https://api.github.com/users/QuriousCube/events{/privacy}", "received_events_url": "https://api.github.com/users/QuriousCube/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-06-27T03:26:12Z", "updated_at": "2021-07-02T06:32:32Z", "closed_at": "2021-07-02T06:32:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nI want to test if a thing in the model is a parameter. When the thing is an `IndexedParam`, its `is_parameter_type()` method returns False.\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```console\r\n$ conda install -c conda-forge pyomo\r\n$ python3 test.py\r\n```\r\n\r\n```\r\n# test.py\r\nimport pyomo.environ as pyo\r\nimport numpy as np\r\n\r\nix_set = pyo.RangeSet(2)\r\np_init = np.array([0, 1])\r\ndef init_workaround(model, i):\r\n    return p_init[i - 1]\r\np = pyo.Param(ix_set, initialize=init_workaround)\r\nprint(type(p))\r\nassert p.is_parameter_type()\r\n```\r\n\r\n### Error Message\r\n\r\n```console\r\n<class 'pyomo.core.base.param.IndexedParam'>\r\nTraceback (most recent call last):\r\n  File \"<...>/test.py\", line 10, in <module>\r\n    assert p.is_parameter_type()\r\nAssertionError\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.0.1\r\nPython version: 3.9.5\r\nOperating system: Fedora 33\r\nHow Pyomo was installed (PyPI, conda, source): conda-forge\r\nSolver (if applicable): not applicable\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2032/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2030", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2030/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2030/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2030/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2030", "id": 930250101, "node_id": "MDU6SXNzdWU5MzAyNTAxMDE=", "number": 2030, "title": "Test assigning pyo.Param created from numpy array to model: DeprecationWarning ", "user": {"login": "QuriousCube", "id": 83694553, "node_id": "MDQ6VXNlcjgzNjk0NTUz", "avatar_url": "https://avatars.githubusercontent.com/u/83694553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuriousCube", "html_url": "https://github.com/QuriousCube", "followers_url": "https://api.github.com/users/QuriousCube/followers", "following_url": "https://api.github.com/users/QuriousCube/following{/other_user}", "gists_url": "https://api.github.com/users/QuriousCube/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuriousCube/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuriousCube/subscriptions", "organizations_url": "https://api.github.com/users/QuriousCube/orgs", "repos_url": "https://api.github.com/users/QuriousCube/repos", "events_url": "https://api.github.com/users/QuriousCube/events{/privacy}", "received_events_url": "https://api.github.com/users/QuriousCube/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-06-25T14:53:15Z", "updated_at": "2021-08-12T18:28:49Z", "closed_at": "2021-08-12T18:28:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nIn a unit test written with pytest, when assign a parameter created from a numpy.ndarray to a model, I get DeprecationWarning.\r\n\r\n### Steps to reproduce the issue\r\n``` console\r\n$ conda install pytest numpy\r\n$ conda install -c conda-forge pyomo\r\n$ pytest test_dep.py\r\n```\r\n\r\n```python3\r\n# test_dep.py\r\nimport pytest\r\nimport pyomo.environ as pyo\r\nimport numpy as np\r\n\r\n\r\ndef test_dep():\r\n    m = pyo.ConcreteModel()\r\n    init = np.ones((2, 3))\r\n    v = pyo.Param(initialize=init)\r\n    m.v = v    # this line is necessary\r\n```\r\n\r\n### Error Message\r\n\r\n```console\r\n<...>/python3.9/site-packages/pyomo/core/base/range.py:165: \r\n    DeprecationWarning: The truth value of an empty array is ambiguous. \r\n    Returning False, but in future this will result in an error.\r\n    Use `array.size > 0` to check that an array is not empty.\r\n    if value.__class__(0) != 0:\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: `6.0.1`\r\nPython version: `3.9.5`\r\nOperating system: fedora 33\r\nHow Pyomo was installed (PyPI, conda, source): conda-forge\r\nSolver (if applicable):\r\n\r\n\r\n### Additional information\r\nnumpy version: `1.20.2`", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2030/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2029", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2029/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2029/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2029/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2029", "id": 929379238, "node_id": "MDU6SXNzdWU5MjkzNzkyMzg=", "number": 2029, "title": "Pyomo times out before CBC", "user": {"login": "victorgarcia98", "id": 84775131, "node_id": "MDQ6VXNlcjg0Nzc1MTMx", "avatar_url": "https://avatars.githubusercontent.com/u/84775131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/victorgarcia98", "html_url": "https://github.com/victorgarcia98", "followers_url": "https://api.github.com/users/victorgarcia98/followers", "following_url": "https://api.github.com/users/victorgarcia98/following{/other_user}", "gists_url": "https://api.github.com/users/victorgarcia98/gists{/gist_id}", "starred_url": "https://api.github.com/users/victorgarcia98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/victorgarcia98/subscriptions", "organizations_url": "https://api.github.com/users/victorgarcia98/orgs", "repos_url": "https://api.github.com/users/victorgarcia98/repos", "events_url": "https://api.github.com/users/victorgarcia98/events{/privacy}", "received_events_url": "https://api.github.com/users/victorgarcia98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-06-24T15:54:36Z", "updated_at": "2021-08-16T18:16:25Z", "closed_at": "2021-08-16T18:16:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nHello,\r\n\r\n## Summary\r\n\r\nI'm trying to deploy a model using flask in AWS (inside a docker container) and I'm facing an error. I'm using the solver CBC to solve MILP. In some instances of the problem the script fails with the message found below:\r\n\r\n```console\r\nCommand '['/srv/flask_app/~/cbc/bin/cbc', '-sec', '100', '-timeMode', 'elapsed', '-printingOptions', 'all', '-import', '/tmp/tmp_ex0d7xd.pyomo.lp', '-stat=1', '-solve', '-solu', '/tmp/tmp_ex0d7xd.pyomo.soln']' timed out after 101 seconds\r\nbg.py finished\r\n```\r\n\r\nThe weird thing is that the same script with the same inputs runs without complaining locally (Mac M1). I suspect that cbc is hanging or taking longer than 100s but the python is expecting it to take <=100s, thus it times out. \r\n\r\n### Information on your system\r\n\r\nPyomo version: Pyomo 5.7.3\r\nPython version: Python 3.8.5\r\nOperating system: Ubuntu\r\nHow Pyomo was installed (PyPI, conda, source): conda\r\nSolver (if applicable): Cbc\r\n\r\nPlease let me know any extra detail you need.\r\n\r\nThanks a lot for your help,\r\nV\u00edctor\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2029/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2019", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2019/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2019/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2019/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2019", "id": 925335296, "node_id": "MDU6SXNzdWU5MjUzMzUyOTY=", "number": 2019, "title": "sorted_robust fails on tuples with non identical types when given key", "user": {"login": "staadecker", "id": 13053829, "node_id": "MDQ6VXNlcjEzMDUzODI5", "avatar_url": "https://avatars.githubusercontent.com/u/13053829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/staadecker", "html_url": "https://github.com/staadecker", "followers_url": "https://api.github.com/users/staadecker/followers", "following_url": "https://api.github.com/users/staadecker/following{/other_user}", "gists_url": "https://api.github.com/users/staadecker/gists{/gist_id}", "starred_url": "https://api.github.com/users/staadecker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/staadecker/subscriptions", "organizations_url": "https://api.github.com/users/staadecker/orgs", "repos_url": "https://api.github.com/users/staadecker/repos", "events_url": "https://api.github.com/users/staadecker/events{/privacy}", "received_events_url": "https://api.github.com/users/staadecker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-06-19T07:14:51Z", "updated_at": "2021-06-22T22:30:33Z", "closed_at": "2021-06-22T22:30:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\n`sorted_robust` fails when trying to sort tuples of different types with a custom key.\r\n\r\n### Steps to reproduce the issue\r\n\r\nRun the following script\r\n\r\n```python\r\nfrom operator import itemgetter\r\n\r\nfrom pyomo.core.base.misc import sorted_robust\r\n\r\nval = [\r\n    ((\"10_2\", 2), None),\r\n    ((10, 2), None)\r\n]\r\nsorted_robust(\r\n    val,\r\n    key=itemgetter(0)\r\n)\r\n```\r\n\r\nThis will throw an error. The reason is because `_robust_sort_keyfcn(val)` will call itself when `val` is a tuple. However in the recursive call it still uses the `key` which will try to access the first element of a pair.\r\n\r\n### Consequences\r\n\r\nThe following code throws the same error.\r\n\r\n```python\r\nfrom pyomo.environ import *\r\n\r\nmodel = ConcreteModel()\r\nmodel.s = Set(\r\n    dimen=2,\r\n    initialize=lambda m: [\r\n        (\"10_1\", 2),\r\n        (10, 2)\r\n    ]\r\n)\r\nmodel.v = Var(model.s)\r\nopt = SolverFactory('gurobi')\r\nopt.solve(model)\r\n```\r\n\r\n### Error Message\r\nThe error message that is given is the following\r\n\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\machs\\miniconda3\\envs\\switch-1\\lib\\site-packages\\pyomo\\core\\base\\misc.py\", line 184, in sorted_robust\r\n    return sorted(arg, key=key, reverse=reverse)\r\nTypeError: '<' not supported between instances of 'int' and 'str'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\machs\\AppData\\Roaming\\JetBrains\\PyCharm2021.1\\scratches\\scratch.py\", line 30, in <module>\r\n    opt.solve(model)\r\n  File \"C:\\Users\\machs\\miniconda3\\envs\\switch-1\\lib\\site-packages\\pyomo\\opt\\base\\solvers.py\", line 569, in solve\r\n    self._presolve(*args, **kwds)\r\n  File \"C:\\Users\\machs\\miniconda3\\envs\\switch-1\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\GUROBI.py\", line 228, in _presolve\r\n    ILMLicensedSystemCallSolver._presolve(self, *args, **kwds)\r\n  File \"C:\\Users\\machs\\miniconda3\\envs\\switch-1\\lib\\site-packages\\pyomo\\opt\\solver\\shellcmd.py\", line 200, in _presolve\r\n    OptSolver._presolve(self, *args, **kwds)\r\n  File \"C:\\Users\\machs\\miniconda3\\envs\\switch-1\\lib\\site-packages\\pyomo\\opt\\base\\solvers.py\", line 666, in _presolve\r\n    self._convert_problem(args,\r\n  File \"C:\\Users\\machs\\miniconda3\\envs\\switch-1\\lib\\site-packages\\pyomo\\opt\\base\\solvers.py\", line 717, in _convert_problem\r\n    return convert_problem(args,\r\n  File \"C:\\Users\\machs\\miniconda3\\envs\\switch-1\\lib\\site-packages\\pyomo\\opt\\base\\convert.py\", line 100, in convert_problem\r\n    problem_files, symbol_map = converter.apply(*tmp, **tmpkw)\r\n  File \"C:\\Users\\machs\\miniconda3\\envs\\switch-1\\lib\\site-packages\\pyomo\\solvers\\plugins\\converter\\model.py\", line 77, in apply\r\n    instance.write(\r\n  File \"C:\\Users\\machs\\miniconda3\\envs\\switch-1\\lib\\site-packages\\pyomo\\core\\base\\block.py\", line 1809, in write\r\n    (filename, smap) = problem_writer(self,\r\n  File \"pyomo\\repn\\plugins\\cpxlp.pyx\", line 157, in pyomo.repn.plugins.cpxlp.ProblemWriter_cpxlp.__call__\r\n  File \"pyomo\\repn\\plugins\\cpxlp.pyx\", line 158, in pyomo.repn.plugins.cpxlp.ProblemWriter_cpxlp.__call__\r\n  File \"pyomo\\repn\\plugins\\cpxlp.pyx\", line 159, in pyomo.repn.plugins.cpxlp.ProblemWriter_cpxlp.__call__\r\n  File \"pyomo\\repn\\plugins\\cpxlp.pyx\", line 445, in pyomo.repn.plugins.cpxlp.ProblemWriter_cpxlp._print_model_LP\r\n  File \"C:\\Users\\machs\\miniconda3\\envs\\switch-1\\lib\\site-packages\\pyomo\\core\\base\\block.py\", line 1433, in component_data_objects\r\n    for x in _block._component_data_iter(ctype=ctype,\r\n  File \"C:\\Users\\machs\\miniconda3\\envs\\switch-1\\lib\\site-packages\\pyomo\\core\\base\\block.py\", line 1361, in _component_data_iter\r\n    _items = sorted_robust(_items, key=itemgetter(0))\r\n  File \"C:\\Users\\machs\\miniconda3\\envs\\switch-1\\lib\\site-packages\\pyomo\\core\\base\\misc.py\", line 186, in sorted_robust\r\n    return sorted(arg, key=_robust_sort_keyfcn(key), reverse=reverse)\r\n  File \"C:\\Users\\machs\\miniconda3\\envs\\switch-1\\lib\\site-packages\\pyomo\\core\\base\\misc.py\", line 159, in __call__\r\n    return _typename, tuple(self(v) for v in val)\r\n  File \"C:\\Users\\machs\\miniconda3\\envs\\switch-1\\lib\\site-packages\\pyomo\\core\\base\\misc.py\", line 159, in <genexpr>\r\n    return _typename, tuple(self(v) for v in val)\r\n  File \"C:\\Users\\machs\\miniconda3\\envs\\switch-1\\lib\\site-packages\\pyomo\\core\\base\\misc.py\", line 131, in __call__\r\n    val = self._key(val)\r\nTypeError: 'int' object is not subscriptable\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.0.1\r\nPython version: CPython 3.9.5 on Windows 10\r\nOperating system: Windows\r\nHow Pyomo was installed (PyPI, conda, source): PyPi\r\nSolver (if applicable): gurobi", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2019/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2008", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2008/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2008/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2008/events", "html_url": "https://github.com/Pyomo/pyomo/issues/2008", "id": 914004085, "node_id": "MDU6SXNzdWU5MTQwMDQwODU=", "number": 2008, "title": "Cannot clone individual blocks within an indexed block", "user": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2021-06-07T22:28:27Z", "updated_at": "2022-08-23T13:39:38Z", "closed_at": "2022-08-23T13:39:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\n`_BlockData` does not have a `_parent` attribute, so it cannot be cloned.\r\n\r\n<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `pyomo solve` to optimize a model and ...\" -->\r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\nIn [1]: import pyomo.environ as pe\r\n\r\nIn [2]: m = pe.ConcreteModel()\r\n\r\nIn [3]: m.b = pe.Block([1,2,3])\r\n\r\nIn [4]: m.b[1].clone()\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-4-bb20e18a9495> in <module>\r\n----> 1 m.b[1].clone()\r\n\r\n~/repos/pyomo/pyomo/core/base/block.py in clone(self)\r\n   1232         # should be preserved as singletons.\r\n   1233         #\r\n-> 1234         save_parent, self._parent = self._parent, None\r\n   1235         try:\r\n   1236             new_block = copy.deepcopy(\r\n\r\n~/repos/pyomo/pyomo/core/base/block.py in __getattr__(self, val)\r\n    522         # throw the \"normal\" AttributeError\r\n    523         raise AttributeError(\"'%s' object has no attribute '%s'\"\r\n--> 524                              % (self.__class__.__name__, val))\r\n    525\r\n    526     def __setattr__(self, name, val):\r\n\r\nAttributeError: '_BlockData' object has no attribute '_parent'\r\n```\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/2008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/2008/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1997", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1997/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1997/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1997/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1997", "id": 907391949, "node_id": "MDU6SXNzdWU5MDczOTE5NDk=", "number": 1997, "title": "ERROR: Output stream closed before all output was written to it.", "user": {"login": "Betristor", "id": 55777837, "node_id": "MDQ6VXNlcjU1Nzc3ODM3", "avatar_url": "https://avatars.githubusercontent.com/u/55777837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Betristor", "html_url": "https://github.com/Betristor", "followers_url": "https://api.github.com/users/Betristor/followers", "following_url": "https://api.github.com/users/Betristor/following{/other_user}", "gists_url": "https://api.github.com/users/Betristor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Betristor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Betristor/subscriptions", "organizations_url": "https://api.github.com/users/Betristor/orgs", "repos_url": "https://api.github.com/users/Betristor/repos", "events_url": "https://api.github.com/users/Betristor/events{/privacy}", "received_events_url": "https://api.github.com/users/Betristor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2021-05-31T11:39:58Z", "updated_at": "2021-06-07T14:06:39Z", "closed_at": "2021-06-02T19:02:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\n<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `pyomo solve` to optimize a model and ...\" -->\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```console\r\n$ command1 [options]\r\n$ command2 [options]\r\n...\r\n```\r\n\r\n```\r\n# example.py\r\nimport pyomo.environ\r\n...\r\n```\r\n\r\n### Error Message\r\nERROR: Output stream closed before all output was written to it. The following\r\n    was left in the output buffer:\r\nActually I really don't know whether this comes from pyomo or gurobi.\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n```console\r\n$ # Output message here, including entire stack trace, if available\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: 6.0\r\nPython version: 3.7.9\r\nOperating system: Ubuntu 20.04.2 LTS (GNU/Linux 5.8.0-50-generic x86_64)\r\nHow Pyomo was installed (PyPI, conda, source): PyPI\r\nSolver (if applicable): Gurobi\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n+ This situation happened today, and nothing wrong before, sorry I really don't know how to reproduce it\r\n+ I updated all my packages using pipdate yesterday\r\n+ Nothing changed after I reinstall gurobi\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n![image](https://user-images.githubusercontent.com/55777837/120187307-34d87680-c247-11eb-97da-31edb914ebcf.png)\r\n\r\nGuys, I encountered this problem today when I'm solving a milp problem with pyomo. I specificied my solver as gurobi and linked it with excutable path. But once gurobi logging starts to output this error will occur once and once again blinding me from real log I want to check.\r\n\r\nI tried to reinstall gurobi on server but nothing changed. To behonest, I'm not even sure of which part should be responsible for this error: pyomo or gurobi. And I searched both websites with keywords like title states, nothing comes in visual. Although my model is still being solving by gurobi, the logging of ERROR is really annoying and noisy.\r\n\r\nDoes anyone have ever met this? Any solution?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1997/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1996", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1996/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1996/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1996/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1996", "id": 904856473, "node_id": "MDU6SXNzdWU5MDQ4NTY0NzM=", "number": 1996, "title": "A binary variable is being optimized as float (UnitInterval) variable between 0 and 1", "user": {"login": "erikfilias", "id": 8010477, "node_id": "MDQ6VXNlcjgwMTA0Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/8010477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikfilias", "html_url": "https://github.com/erikfilias", "followers_url": "https://api.github.com/users/erikfilias/followers", "following_url": "https://api.github.com/users/erikfilias/following{/other_user}", "gists_url": "https://api.github.com/users/erikfilias/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikfilias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikfilias/subscriptions", "organizations_url": "https://api.github.com/users/erikfilias/orgs", "repos_url": "https://api.github.com/users/erikfilias/repos", "events_url": "https://api.github.com/users/erikfilias/events{/privacy}", "received_events_url": "https://api.github.com/users/erikfilias/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-05-28T07:34:18Z", "updated_at": "2021-05-29T06:27:34Z", "closed_at": "2021-05-29T06:27:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a MILP problem that is solved using Gurobi in a classic sequence as:\r\n- Run the model with binary variables\r\n- Fixing binary variables\r\n- Run the model with the fixed variable to recover dual variables\r\n\r\nSo, the issue is that the solver returns float values between 0 and 1 for the binary variables at the end of the sequence.\r\n I verified that these binary variables are being fixed and write LP files to validate the proper formulation of the problem. For this, I realized that using `-.fix()` is working (I print every variable after it is fixed to validated it), but when the LP file is written, the fixed variables are in the formulation yet. When variables are fixed, they should be parameters and disappear from the formulation, but it is not working properly.\r\n\r\nI also tried to use:\r\n```\r\nif instance.x[2].value == 0:\r\n    instance.x[2].setlb(1)\r\n    instance.x[2].setub(1)\r\nelse:\r\n    instance.x[2].setlb(0)\r\n    instance.x[2].setub(0)\r\n```\r\nAnd,\r\n```\r\nif pyo.value(instance.x[2]) == 0:\r\n    instance.x[2].fix(1)\r\nelse:\r\n    instance.x[2].fix(0)\r\n```\r\n\r\nTo fix the variables. But the issue continues.\r\n\r\n\r\nFor example, the next variable was printed at the end of the sequence:\r\n`('sc01', 'y2030', '2030-12-02T23:00:00+01:00', 'N_121', 'N_122', 'ec1') :     0 :                 1.0 :     1 : False : False : Binary`\r\nAnd, it appears like it is unfixed variable.\r\n\r\nThe binary variables are being defined as:\r\n`Var(mTEPES.sc, mTEPES.p, mTEPES.n, mTEPES.la, within=Binary,            initialize=0)`\r\n\r\nCan somebody point out the error?\r\n\r\nI really appreciate any help you can provide.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1996/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1993", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1993/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1993/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1993/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1993", "id": 899753852, "node_id": "MDU6SXNzdWU4OTk3NTM4NTI=", "number": 1993, "title": "FBBT fails to compute bounds on NegationExpressions", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-05-24T15:14:48Z", "updated_at": "2021-06-01T20:03:33Z", "closed_at": "2021-06-01T20:03:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nIf an expression includes a `NegationExpression`, `compute_bounds_on_expr` returns `(None, None)` in spite of valid bounds existing. (I think this might be related to #846, but I'm not sure, as `NegationExpression` isn't in the list of unsupported expression types?)\r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\nfrom pyomo.environ import *\r\nfrom pyomo.contrib.fbbt.fbbt import compute_bounds_on_expr\r\nfrom pyomo.core import summation\r\n\r\nm = ConcreteModel()\r\nm.x = Var([0], bounds=(-2,7))\r\n\r\nexpr_lb, expr_ub = compute_bounds_on_expr(-summation(m.x))\r\nprint(expr_lb, expr_ub)\r\n```\r\nNote that `-summation(m.x)` creates a NegationExpression.\r\n\r\n### Error Message\r\n\r\nThe above prints `(None, None)` instead of the expected `(-7, 2)`\r\n\r\n### Information on your system\r\n\r\nPyomo version: main branch\r\nPython version: 3.6.5\r\nOperating system: linux\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable):", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1993/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1987", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1987/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1987/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1987/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1987", "id": 896959748, "node_id": "MDU6SXNzdWU4OTY5NTk3NDg=", "number": 1987, "title": "Should slim tests not install extensions?", "user": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 851808904, "node_id": "MDU6TGFiZWw4NTE4MDg5MDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/testing_and_ci", "name": "testing_and_ci", "color": "ef8da4", "default": false, "description": "Any issues related to testing and/or continuous integration (e.g., github, travis, etc.)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-05-20T15:10:43Z", "updated_at": "2021-05-20T16:10:28Z", "closed_at": "2021-05-20T16:10:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The slim tests download and install extensions. Is this the behavior we want?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1987/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1978", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1978/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1978/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1978/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1978", "id": 894209342, "node_id": "MDU6SXNzdWU4OTQyMDkzNDI=", "number": 1978, "title": "Error while executing a MILNP example from the documentation", "user": {"login": "damianoazzolini", "id": 24901681, "node_id": "MDQ6VXNlcjI0OTAxNjgx", "avatar_url": "https://avatars.githubusercontent.com/u/24901681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/damianoazzolini", "html_url": "https://github.com/damianoazzolini", "followers_url": "https://api.github.com/users/damianoazzolini/followers", "following_url": "https://api.github.com/users/damianoazzolini/following{/other_user}", "gists_url": "https://api.github.com/users/damianoazzolini/gists{/gist_id}", "starred_url": "https://api.github.com/users/damianoazzolini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/damianoazzolini/subscriptions", "organizations_url": "https://api.github.com/users/damianoazzolini/orgs", "repos_url": "https://api.github.com/users/damianoazzolini/repos", "events_url": "https://api.github.com/users/damianoazzolini/events{/privacy}", "received_events_url": "https://api.github.com/users/damianoazzolini/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-05-18T10:06:02Z", "updated_at": "2022-07-21T23:16:24Z", "closed_at": "2022-07-21T23:16:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\nI'm following https://pyomo.readthedocs.io/en/stable/contributed_packages/mindtpy.html\r\n\r\n\r\n### Steps to reproduce the issue\r\n\r\n```python\r\nRequired imports\r\n>>> from pyomo.environ import *\r\n\r\nCreate a simple model\r\n>>> model = ConcreteModel()\r\n\r\n>>> model.x = Var(bounds=(1.0,10.0),initialize=5.0)\r\n>>> model.y = Var(within=Binary)\r\n\r\n>>> model.c1 = Constraint(expr=(model.x-4.0)**2 - model.x <= 50.0*(1-model.y))\r\n>>> model.c2 = Constraint(expr=model.x*log(model.x)+5.0 <= 50.0*(model.y))\r\n\r\n>>> model.objective = Objective(expr=model.x, sense=minimize)\r\n\r\nSolve the model using MindtPy\r\n>>> SolverFactory('mindtpy').solve(model, mip_solver='glpk', nlp_solver='ipopt') \r\n...\r\n```\r\n\r\n### Error Message\r\n\r\n```console\r\n>>> SolverFactory('mindtpy').solve(model, mip_solver='glpk', nlp_solver='ipopt')\r\nWARNING: Loading a SolverResults object with a warning status into\r\n    model.name=\"unknown\";\r\n      - termination condition: other\r\n      - message from solver: <undefined>\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/usr/.local/lib/python3.7/site-packages/pyomo/contrib/mindtpy/MindtPy.py\", line 247, in solve\r\n    MindtPy_initialize_master(solve_data, config)\r\n  File \"/home/usr/.local/lib/python3.7/site-packages/pyomo/contrib/mindtpy/initialization.py\", line 87, in MindtPy_initialize_master\r\n    init_rNLP(solve_data, config)\r\n  File \"/home/usr/.local/lib/python3.7/site-packages/pyomo/contrib/mindtpy/initialization.py\", line 175, in init_rNLP\r\n    (subprob_terminate_cond, results.solver.message))\r\nValueError: MindtPy unable to handle relaxed NLP termination condition of other. Solver message: <undefined>\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: Pyomo 5.7.3 (CPython 3.7.10 on Linux 4.4.0-19041-Microsoft)\r\nPython version: Python 3.7.10\r\nOperating system: WSL in windows\r\nHow Pyomo was installed (PyPI, conda, source): pip\r\nSolver (if applicable): ipopt", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1978/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1975", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1975/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1975/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1975/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1975", "id": 892741473, "node_id": "MDU6SXNzdWU4OTI3NDE0NzM=", "number": 1975, "title": "Streamlit and Pyomo: ValueError: signal only works in main thread", "user": {"login": "maajdl", "id": 7543475, "node_id": "MDQ6VXNlcjc1NDM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7543475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maajdl", "html_url": "https://github.com/maajdl", "followers_url": "https://api.github.com/users/maajdl/followers", "following_url": "https://api.github.com/users/maajdl/following{/other_user}", "gists_url": "https://api.github.com/users/maajdl/gists{/gist_id}", "starred_url": "https://api.github.com/users/maajdl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maajdl/subscriptions", "organizations_url": "https://api.github.com/users/maajdl/orgs", "repos_url": "https://api.github.com/users/maajdl/repos", "events_url": "https://api.github.com/users/maajdl/events{/privacy}", "received_events_url": "https://api.github.com/users/maajdl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-05-16T19:26:30Z", "updated_at": "2021-05-17T04:54:52Z", "closed_at": "2021-05-16T19:39:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI was very curious to create a small Streamlit app using Pyomo with Ipopt.\r\nUnfortunately, this leads to the following error:\r\n\r\n```\r\nValueError: signal only works in main thread\r\nTraceback:\r\n....\t\r\nFile \"...\\site-packages\\pyomo\\opt\\base\\solvers.py\", \r\nline 582, in solve    _status = self._apply_solver()\r\nFile \"...\\site-packages\\pyomo\\opt\\solver\\shellcmd.py\", \r\nline 244, in _apply_solver    self._rc, self._log = self._execute_command(self._command)\r\nFile \"...\\site-packages\\pyomo\\opt\\solver\\shellcmd.py\", \r\nline 332, in _execute_command    self.process_soln_file(results)\r\nFile \"...\\site-packages\\pyutilib\\subprocess\\processmngr.py\", \r\nline 554, in run_command    #            = signal.signal(signal.SIGINT, handler)\r\nFile \"...\\lib\\signal.py\", \r\nline 47, in signal    handler = _signal.signal(_enum_to_int(signalnum), _enum_to_int(handler))\r\n```\r\nBy removing a few lines in processmngr.py, I could make it work.\r\nThese are the lines 548-556 dealing with  \"define_signal_handlers\" :\r\n\r\n```\r\n    if define_signal_handlers:\r\n        handler = verbose_signal_handler if verbose else signal_handler\r\n        if sys.platform[0:3] != \"win\" and sys.platform[0:4] != 'java':\r\n            GlobalData.original_signal_handlers[signal.SIGHUP] \\\r\n                = signal.signal(signal.SIGHUP, handler)\r\n        GlobalData.original_signal_handlers[signal.SIGINT] \\\r\n            = signal.signal(signal.SIGINT, handler)\r\n        GlobalData.original_signal_handlers[signal.SIGTERM] \\\r\n            = signal.signal(signal.SIGTERM, handler)\r\n```\r\n\r\n\r\nThis works on my laptop.\r\nOf course, this is not a good solution once I want to publish my app  on  share.streamlit.io .\r\n\r\nWould you have some suggestion to solve the problem without cutting lines of code in processmngr.py ?\r\nI had a look to see if I could make use of process of threads, but this is beyond my competences and I guess there is not such solution. But who knows?\r\nAny suggestion welcome!\r\n\r\nOtherwise, could that be something to improve in Pyomo / pyutilib ?\r\n\r\nThanks\r\n\r\nMichel \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1975/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1962", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1962/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1962/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1962/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1962", "id": 876547813, "node_id": "MDU6SXNzdWU4NzY1NDc4MTM=", "number": 1962, "title": "CI Failing due to Ipopt install", "user": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-05-05T15:02:55Z", "updated_at": "2021-05-18T20:09:29Z", "closed_at": "2021-05-18T20:09:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "GHA tests are failing because the installation of ipopt from idaes-ext is failing. I was going to create a PR to use a fixed version of idaes-ext, but I wanted to see if anyone had other ideas. Is there a reason we need to use the latest release of idaes-ext for our tests?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1962/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1955", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1955/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1955/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1955/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1955", "id": 869942138, "node_id": "MDU6SXNzdWU4Njk5NDIxMzg=", "number": 1955, "title": "Constraints rebuilt only for missing points after discretization", "user": {"login": "vova292", "id": 19894323, "node_id": "MDQ6VXNlcjE5ODk0MzIz", "avatar_url": "https://avatars.githubusercontent.com/u/19894323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vova292", "html_url": "https://github.com/vova292", "followers_url": "https://api.github.com/users/vova292/followers", "following_url": "https://api.github.com/users/vova292/following{/other_user}", "gists_url": "https://api.github.com/users/vova292/gists{/gist_id}", "starred_url": "https://api.github.com/users/vova292/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vova292/subscriptions", "organizations_url": "https://api.github.com/users/vova292/orgs", "repos_url": "https://api.github.com/users/vova292/repos", "events_url": "https://api.github.com/users/vova292/events{/privacy}", "received_events_url": "https://api.github.com/users/vova292/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-04-28T13:21:04Z", "updated_at": "2021-04-28T17:42:29Z", "closed_at": "2021-04-28T17:42:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nConstraints indexed by a continuous set are constructed at the time of model construction. This will build constraints for the elements already existing in the continuous set. After discretization the constraints rule is called for the new points added to the continuous set\r\n\r\nIf the constraint rule for example works on a variable at the current value from the set and the previous value then the user would expect it be rebuilt based on the discrete points in the set. But that is not what happens\r\n\r\nThe following is an example of a constraint rule that would not behave as expected by the user\r\n```\r\n        def _con_rule(mod, i):\r\n            if i == 0:\r\n                return pyo.Constraint.Skip\r\n            else:\r\n                return mod.constant * mod.dy[i]  == -mod.gain * (mod.y_hor[i] - mod.y_hor[mod.time.prev(i)]) \r\n\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1955/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1952", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1952/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1952/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1952/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1952", "id": 868380992, "node_id": "MDU6SXNzdWU4NjgzODA5OTI=", "number": 1952, "title": "Pyomo does not return NEOS solution", "user": {"login": "lluismiguell", "id": 77653904, "node_id": "MDQ6VXNlcjc3NjUzOTA0", "avatar_url": "https://avatars.githubusercontent.com/u/77653904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lluismiguell", "html_url": "https://github.com/lluismiguell", "followers_url": "https://api.github.com/users/lluismiguell/followers", "following_url": "https://api.github.com/users/lluismiguell/following{/other_user}", "gists_url": "https://api.github.com/users/lluismiguell/gists{/gist_id}", "starred_url": "https://api.github.com/users/lluismiguell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lluismiguell/subscriptions", "organizations_url": "https://api.github.com/users/lluismiguell/orgs", "repos_url": "https://api.github.com/users/lluismiguell/repos", "events_url": "https://api.github.com/users/lluismiguell/events{/privacy}", "received_events_url": "https://api.github.com/users/lluismiguell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-04-27T02:32:02Z", "updated_at": "2023-02-14T19:53:15Z", "closed_at": "2023-02-14T19:53:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been solving my MILP thesis problem using the NEOS server with the cplex solver.\r\n\r\nEverything works as expected for small problems with few constraints/parameters, and pyomo returns the solver solution effectivey in my notebook, however, when my problem grows in constraints the solver takes more time. It seems that when it takes more than 5 minutes to respond, my notebook does not recieve the results but NEOS website does send the results to my e-mail in a format whose structure I can't fully comprehend.\r\n\r\nIs this a common problem for other researchers there? how could I fix it or how could I read the results file that NEOS sends via e-mail? is there any function available to do this? \r\n\r\nPyomo version: pyomo-5.7.3\r\nPython version: python 3.7\r\nOperating system: windows\r\nHow Pyomo was installed (PyPI, conda, source): !pip\r\nSolver (if applicable): NEOS\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1952/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1947", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1947/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1947/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1947/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1947", "id": 866439800, "node_id": "MDU6SXNzdWU4NjY0Mzk4MDA=", "number": 1947, "title": "Pyomo deferred import system causes nose to fail for any package that imports pyomo", "user": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-04-23T21:22:31Z", "updated_at": "2021-04-23T23:18:22Z", "closed_at": "2021-04-23T23:18:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nImporting pyomo causes several instances of `DeferredImportModule` to be put into `sys.modules`. If any of these modules are not available, then calling `hasattr` on them results in an exception. When running `nosetests` with coverage, nose iterates through `sys.modules` and calls `hasattr` on them. As a result, running `nosetests` with coverage on any package that imports pyomo causes an exception if any of these modules are not available.\r\n\r\n<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `pyomo solve` to optimize a model and ...\" -->\r\n\r\n### Steps to reproduce the issue\r\n\r\n<!-- Please include the command run and/or provide an example script that demonstrates the problem. -->\r\n\r\n```\r\nIn [1]: import pyomo.environ\r\n\r\nIn [2]: import sys\r\n\r\nIn [3]: from pyomo.common.dependencies import DeferredImportModule\r\n\r\nIn [4]: for k, v in sys.modules.items():\r\n   ...:     if isinstance(v, DeferredImportModule):\r\n   ...:         print(k)\r\n   ...:\r\npyomo.common.dependencies.yaml\r\npyomo.common.dependencies.pympler\r\npyomo.common.dependencies.numpy\r\npyomo.common.dependencies.scipy\r\npyomo.common.dependencies.networkx\r\npyomo.common.dependencies.pandas\r\npyomo.common.dependencies.dill\r\npyomo.common.dependencies.matplotlib\r\npyomo.common.dependencies.scipy.stats\r\npyomo.common.dependencies.scipy.sparse\r\npyomo.common.dependencies.scipy.spatial\r\npyomo.common.dependencies.scipy.integrate\r\npyomo.common.dependencies.matplotlib.pyplot\r\npyomo.common.dependencies.matplotlib.pylab\r\n\r\nIn [5]: hasattr(sys.modules['pyomo.common.dependencies.yaml'], '__file__')\r\n---------------------------------------------------------------------------\r\nDeferredImportError                       Traceback (most recent call last)\r\n<ipython-input-5-31ea100e11d2> in <module>\r\n----> 1 hasattr(sys.modules['pyomo.common.dependencies.yaml'], '__file__')\r\n\r\n~/repos/pyomo/pyomo/common/dependencies.py in __getattr__(self, attr)\r\n    131             for _sub in self._submodule_name[1:].split('.'):\r\n    132                 _mod = getattr(_mod, _sub)\r\n--> 133         return getattr(_mod, attr)\r\n    134\r\n    135\r\n\r\n~/repos/pyomo/pyomo/common/dependencies.py in __getattr__(self, attr)\r\n     59             raise AttributeError(\"'%s' object has no attribute '%s'\"\r\n     60                                  % (type(self).__name__, attr))\r\n---> 61         raise DeferredImportError(self._moduleunavailable_message())\r\n     62\r\n     63     def _moduleunavailable_message(self, msg=None):\r\n\r\nDeferredImportError: The yaml module (an optional Pyomo dependency) failed to import: ModuleNotFoundError: No module named 'yaml'\r\n```\r\n\r\n### Error Message\r\n\r\nHere is the stack trace when running nose:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/share/miniconda/bin/nosetests\", line 33, in <module>\r\n    sys.exit(load_entry_point('nose', 'console_scripts', 'nosetests')())\r\n  File \"/usr/share/miniconda/lib/python3.7/site-packages/nose/core.py\", line 121, in __init__\r\n    **extra_args)\r\n  File \"/usr/share/miniconda/lib/python3.7/unittest/main.py\", line 101, in __init__\r\n    self.runTests()\r\n  File \"/usr/share/miniconda/lib/python3.7/site-packages/nose/core.py\", line 207, in runTests\r\n    result = self.testRunner.run(self.test)\r\n  File \"/usr/share/miniconda/lib/python3.7/site-packages/nose/core.py\", line 66, in run\r\n    result.printErrors()\r\n  File \"/usr/share/miniconda/lib/python3.7/site-packages/nose/result.py\", line 110, in printErrors\r\n    self.config.plugins.report(self.stream)\r\n  File \"/usr/share/miniconda/lib/python3.7/site-packages/nose/plugins/manager.py\", line 99, in __call__\r\n    return self.call(*arg, **kw)\r\n  File \"/usr/share/miniconda/lib/python3.7/site-packages/nose/plugins/manager.py\", line 167, in simple\r\n    result = meth(*arg, **kw)\r\n  File \"/usr/share/miniconda/lib/python3.7/site-packages/nose/plugins/cover.py\", line 183, in report\r\n    self.coverInstance.stop()\r\n  File \"/usr/share/miniconda/lib/python3.7/site-packages/nose/plugins/cover.py\", line 188, in <listcomp>\r\n    if self.wantModuleCoverage(name, module)]\r\n  File \"/usr/share/miniconda/lib/python3.7/site-packages/nose/plugins/cover.py\", line 233, in wantModuleCoverage\r\n    if not hasattr(module, '__file__'):\r\n  File \"/home/runner/work/parapint/parapint/pyomo/pyomo/common/dependencies.py\", line 133, in __getattr__\r\n    return getattr(_mod, attr)\r\n  File \"/home/runner/work/parapint/parapint/pyomo/pyomo/common/dependencies.py\", line 61, in __getattr__\r\n    raise DeferredImportError(self._moduleunavailable_message())\r\npyomo.common.dependencies.DeferredImportError: The yaml module (an optional Pyomo dependency) failed to import: ModuleNotFoundError: No module named 'yaml'\r\n```\r\n\r\n<!-- If Pyomo reported an error, provide the error message. PLEASE INCLUDE THE ENTIRE STACK TRACE. -->\r\n\r\n<!-- If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n\r\n### Information on your system\r\n\r\nPyomo version: main branch, up to date\r\nPython version: 3.8\r\nOperating system: osx\r\nHow Pyomo was installed: source\r\nversion of nose: 1.3.7", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1947/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1941", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1941/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1941/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1941/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1941", "id": 863015987, "node_id": "MDU6SXNzdWU4NjMwMTU5ODc=", "number": 1941, "title": "ContinuousSet collocation points have type numpy.float64", "user": {"login": "Robbybp", "id": 8885032, "node_id": "MDQ6VXNlcjg4ODUwMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/8885032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Robbybp", "html_url": "https://github.com/Robbybp", "followers_url": "https://api.github.com/users/Robbybp/followers", "following_url": "https://api.github.com/users/Robbybp/following{/other_user}", "gists_url": "https://api.github.com/users/Robbybp/gists{/gist_id}", "starred_url": "https://api.github.com/users/Robbybp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Robbybp/subscriptions", "organizations_url": "https://api.github.com/users/Robbybp/orgs", "repos_url": "https://api.github.com/users/Robbybp/repos", "events_url": "https://api.github.com/users/Robbybp/events{/privacy}", "received_events_url": "https://api.github.com/users/Robbybp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 835396803, "node_id": "MDU6TGFiZWw4MzUzOTY4MDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.dae", "name": "pyomo.dae", "color": "209fbc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-04-20T16:49:30Z", "updated_at": "2021-11-16T19:48:43Z", "closed_at": "2021-11-16T19:48:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nI was serializing components in a discretized model and unexpectedly saw pickles of Numpy float objects in the ComponentUID indices. The unexpected part was that members of the ContinuousSet had type numpy.float64. Not necessarily a bug, but some mildly unexpected behavior.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```python\r\nimport pyomo.environ as pyo\r\nimport pyomo.dae as dae\r\nm = pyo.ConcreteModel()\r\nm.s = dae.ContinuousSet(initialize=[0, 2.0])\r\ndisc = pyo.TransformationFactory('dae.collocation')\r\ndisc.apply_to(m, wrt=m.s, nfe=2, ncp=3, scheme='LAGRANGE-RADAU')\r\n\r\n# Bounds are whatever type the user provided\r\nprint(m.s.first(), type(m.s.first()))\r\nprint(m.s.last(), type(m.s.last()))\r\n\r\n# Finite element points are `float`\r\nfep = m.s.get_finite_elements()[1]\r\nprint(fep, type(fep))\r\n\r\n# Collocation points are `numpy.float64`\r\ncp = m.s[2]\r\nprint(cp, type(fp))\r\n```\r\nOutput:\r\n```console\r\n0 <class 'int'>\r\n2.0 <class 'float'>\r\n1.0 <class 'float'>\r\n0.155051 <class 'numpy.float64'>\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1941/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1933", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1933/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1933/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1933/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1933", "id": 859254477, "node_id": "MDU6SXNzdWU4NTkyNTQ0Nzc=", "number": 1933, "title": "pyomo.gdp fails to transform nested Disjunctions when the parent Disjunction is specified as the target", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838440520, "node_id": "MDU6TGFiZWw4Mzg0NDA1MjA=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.gdp", "name": "pyomo.gdp", "color": "a848f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-04-15T21:14:50Z", "updated_at": "2021-05-14T14:10:41Z", "closed_at": "2021-05-14T14:10:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nIf you specify a Disjunction (SimpleDisjunction or DisjunctionData) as a target of a `pyomo.gdp` transformation, we never touch `_transform_blockData`, which is what we use to start transforming from the inside out. As a result, we panic when we encounter an active `Disjunct`, even though it is our fault for not first descending into the Disjuncts of the target...\r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\nfrom pyomo.environ import *\r\nfrom pyomo.gdp import *\r\n\r\nm = ConcreteModel()\r\nm.x = Var(bounds=(0, 10))\r\nm.y = Var(bounds=(0, 20))\r\n\r\nm.disj1 = Disjunct()\r\nm.disj1.disj1 = Disjunct()\r\nm.disj1.disj1.c = Constraint(expr=m.x + m.y <= 18)\r\nm.disj1.disj2 = Disjunct()\r\nm.disj1.disj2.c = Constraint(expr=m.x <= 2)\r\nm.disj1.disjunction = Disjunction(expr=[m.disj1.disj1, m.disj1.disj2])\r\nm.disj2 = Disjunct()\r\nm.disj2.c = Constraint(expr=m.y <= 16)\r\nm.disjunction = Disjunction(expr=[m.disj1, m.disj2])\r\n\r\nm.obj = Objective(expr=m.y, sense=maximize)\r\n\r\nTransformationFactory('gdp.bigm').apply_to(m, targets=[m.disjunction])\r\n```\r\n\r\n### Error Message\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"multipleReferencesToNestedIndVars.py\", line 21, in <module>\r\n    TransformationFactory('gdp.bigm').apply_to(m, targets=[m.disjunction])\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/plugin.py\", line 243, in apply_to\r\n    self._apply_to(model, **kwds)\r\n  File \"/home/esjohn/src/pyomo/pyomo/gdp/plugins/bigm.py\", line 208, in _apply_to\r\n    self._apply_to_impl(instance, **kwds)\r\n  File \"/home/esjohn/src/pyomo/pyomo/gdp/plugins/bigm.py\", line 249, in _apply_to_impl\r\n    self._transform_disjunctionData( t, bigM, t.index())\r\n  File \"/home/esjohn/src/pyomo/pyomo/gdp/plugins/bigm.py\", line 392, in _transform_disjunctionData\r\n    suffix_list)\r\n  File \"/home/esjohn/src/pyomo/pyomo/gdp/plugins/bigm.py\", line 463, in _transform_disjunct\r\n    self._transform_block_components(obj, obj, bigM, arg_list, suffix_list)\r\n  File \"/home/esjohn/src/pyomo/pyomo/gdp/plugins/bigm.py\", line 520, in _transform_block_components\r\n    handler(obj, disjunct, bigM, arg_list, suffix_list)\r\n  File \"/home/esjohn/src/pyomo/pyomo/gdp/plugins/bigm.py\", line 554, in _warn_for_active_disjunct\r\n    _warn_for_active_disjunct(innerdisjunct, outerdisjunct, NAME_BUFFER)\r\n  File \"/home/esjohn/src/pyomo/pyomo/gdp/util.py\", line 292, in _warn_for_active_disjunct\r\n    name_buffer=NAME_BUFFER)))\r\npyomo.gdp.disjunct.GDP_Error: Found active disjunct 'disj1.disj1' in disjunct 'disj1'! Either disj1.disj1 is not in a disjunction or the disjunction it is in has not been transformed. disj1.disj1 needs to be deactivated or its disjunction transformed before disj1 can be transformed.\r\n```\r\n\r\n### Information on your system\r\n\r\nPyomo version: main branch\r\nPython version: 3.6.5\r\nOperating system: linux\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable):\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1933/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1932", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1932/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1932/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1932/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1932", "id": 859244479, "node_id": "MDU6SXNzdWU4NTkyNDQ0Nzk=", "number": 1932, "title": "Multiple References to indicator_vars of nested Disjuncts", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838440520, "node_id": "MDU6TGFiZWw4Mzg0NDA1MjA=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.gdp", "name": "pyomo.gdp", "color": "a848f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-04-15T21:00:48Z", "updated_at": "2021-05-09T14:27:37Z", "closed_at": "2021-05-09T14:27:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nIn `pyomo.gdp`, if you transform a model which has a nested disjunction, the transformed model has a `Reference` to the inner-disjunct indicator_vars on both the transformation block of the nested Disjunct and of the parent Disjunct. As a result, of course, `component_data_objects` find this indicator_var twice, which is bad. (I discovered this by confusing a persistent solver.)\r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\nfrom pyomo.environ import *\r\nfrom pyomo.gdp import *\r\n\r\nm = ConcreteModel()\r\nm.x = Var(bounds=(0, 10))\r\nm.y = Var(bounds=(0, 20))\r\n\r\nm.disj1 = Disjunct()\r\nm.disj1.disj1 = Disjunct()\r\nm.disj1.disj1.c = Constraint(expr=m.x + m.y <= 18)\r\nm.disj1.disj2 = Disjunct()\r\nm.disj1.disj2.c = Constraint(expr=m.x <= 2)\r\nm.disj1.disjunction = Disjunction(expr=[m.disj1.disj1, m.disj1.disj2])\r\nm.disj2 = Disjunct()\r\nm.disj2.c = Constraint(expr=m.y <= 16)\r\nm.disjunction = Disjunction(expr=[m.disj1, m.disj2])\r\n\r\nm.obj = Objective(expr=m.y, sense=maximize)\r\n\r\nTransformationFactory('gdp.bigm').apply_to(m)\r\n\r\nthevar = m.disj1.disj1.indicator_var\r\nassert m.disj1.transformation_block().localVarReferences.component(\"disj1._pyomo_gdp_bigm_reformulation.relaxedDisjuncts[0].localVarReferences.disj1.disj1.indicator_var\")[None] is thevar\r\nassert m.disj1.disj1.transformation_block().localVarReferences.component(\"disj1.disj1.indicator_var\")[None] is thevar\r\n```\r\n\r\n### Error Message\r\n\r\nBoth assertions in the example above are true. :(\r\n\r\n### Information on your system\r\n\r\nPyomo version: main branch\r\nPython version: 3.6.5\r\nOperating system: linux\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable):\r\n\r\n\r\n### Additional information\r\n\r\n<!-- If you have any additional information, please list it here. -->\r\n\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question (how to use Pyomo, what it can do, etc.), please refer to our [online documentation](https://github.com/Pyomo/pyomo#getting-help) on ways to get help. -->\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1932/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1928", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1928/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1928/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1928/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1928", "id": 858277534, "node_id": "MDU6SXNzdWU4NTgyNzc1MzQ=", "number": 1928, "title": "A Var indexed by a union involving an empty set has unknown dimension, breaking Reference", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-04-14T21:24:31Z", "updated_at": "2021-10-25T22:11:43Z", "closed_at": "2021-10-25T22:11:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nIf you index a Var with a set that was constructed using a union where one of the sets was empty, then later you cannot create a Reference to this IndexedVar, I think because it doesn't know its dimension.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```\r\nfrom pyomo.environ import *\r\n\r\nm = ConcreteModel()\r\n\r\nm.thinga = Set(initialize=['e1', 'e2', 'e3'])\r\nm.thingb = Set(initialize=[])\r\n\r\nm.v = Var(m.thinga | m.thingb, domain=Binary)\r\nprint(m.v.dim()) \r\n\r\nm.ref = Reference(m.v)\r\n```\r\n\r\n### Error Message\r\n`m.v.dim()` is `pyomo.core.base.set.UnknownSetDimen`.\r\nStack trace from creating the Reference is:\r\n```\r\nTraceback (most recent call last):\r\n  File \"huh.py\", line 27, in <module>\r\n    m.ref = Reference(m.v)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/reference.py\", line 618, in Reference\r\n    reference = reference[...]\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/indexed_component.py\", line 411, in __getitem__\r\n    validated_index = self._validate_index(index)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/indexed_component.py\", line 559, in _validate_index\r\n    return self._processUnhashableIndex(idx)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/indexed_component.py\", line 696, in _processUnhashableIndex\r\n    elif ellipsis is not None and slice_dim < set_dim:\r\nTypeError: '<' not supported between instances of 'int' and 'type'\r\n```\r\n(So `set_dim` is `pyomo.core.base.set.UnknownSetDimen`, causing the `TypeError`).\r\n\r\n### Information on your system\r\n\r\nPyomo version: main branch\r\nPython version: 3.6.5\r\nOperating system: linux\r\nHow Pyomo was installed (PyPI, conda, source): source\r\nSolver (if applicable):", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1928/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1903", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1903/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1903/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1903/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1903", "id": 848770121, "node_id": "MDU6SXNzdWU4NDg3NzAxMjE=", "number": 1903, "title": "NL-writer External Function Issues", "user": {"login": "eslickj", "id": 16341333, "node_id": "MDQ6VXNlcjE2MzQxMzMz", "avatar_url": "https://avatars.githubusercontent.com/u/16341333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eslickj", "html_url": "https://github.com/eslickj", "followers_url": "https://api.github.com/users/eslickj/followers", "following_url": "https://api.github.com/users/eslickj/following{/other_user}", "gists_url": "https://api.github.com/users/eslickj/gists{/gist_id}", "starred_url": "https://api.github.com/users/eslickj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eslickj/subscriptions", "organizations_url": "https://api.github.com/users/eslickj/orgs", "repos_url": "https://api.github.com/users/eslickj/repos", "events_url": "https://api.github.com/users/eslickj/events{/privacy}", "received_events_url": "https://api.github.com/users/eslickj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-04-01T20:33:12Z", "updated_at": "2022-02-23T06:57:43Z", "closed_at": "2022-02-23T06:57:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have two issues with the NL-writer related to external functions.\r\n\r\n1. If you pass a constant number directly to an external function like:  ``...expr=3 == m.ext_func(m.x, 4.0)...`` you get the error \"AttributeError: 'float' object has no attribute 'is_fixed'\".  You only see this if not all the args are const, otherwise the writer seems to realize the function evaluation is a constant and do it before the nl-file.\r\n2. If you pass a string, at least with ipopt like ``...expr=3 == m.ext_func(m.x, \"a string\")...`` you get an error from ipopt complaining of a malformed line in the nl file.  The malformed line is the one where the string arg is defined.  As far as I can tell the line isn't really malformed, but something isn't right.  This also only happens if one arg is variable, otherwise the function is pre-evaluated and everything works fine.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1903/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1880", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1880/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1880/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1880/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1880", "id": 838946516, "node_id": "MDU6SXNzdWU4Mzg5NDY1MTY=", "number": 1880, "title": "Ports are not cloned correctly", "user": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 1056124956, "node_id": "MDU6TGFiZWwxMDU2MTI0OTU2", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.network", "name": "pyomo.network", "color": "9ac4f4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-03-23T17:17:36Z", "updated_at": "2021-04-07T04:08:40Z", "closed_at": "2021-04-07T04:08:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nimport pyomo.environ as pe\r\nimport idaes.core\r\nimport idaes.generic_models.properties.swco2\r\nimport idaes.generic_models.unit_models\r\nfrom pyomo.network import Arc\r\n\r\nm = pe.ConcreteModel()\r\nm.fs = idaes.core.FlowsheetBlock()\r\nm.fs.properties = idaes.generic_models.properties.swco2.SWCO2ParameterBlock()\r\nm.fs.heater = idaes.generic_models.unit_models.Heater(default={'dynamic': False,\r\n                                                               'property_package': m.fs.properties,\r\n                                                               'has_pressure_change': True})\r\nm.fs.heater2 = idaes.generic_models.unit_models.Heater(default={'dynamic': False,\r\n                                                                'property_package': m.fs.properties,\r\n                                                                'has_pressure_change': True})\r\nm.fs.stream = Arc(source=m.fs.heater.outlet,\r\n                  destination=m.fs.heater2.inlet)\r\nm2 = m.clone()\r\nprint(m2.fs.heater.outlet._arcs[0]() is m.fs.stream)  # True\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1880/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1877", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1877/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1877/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1877/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1877", "id": 835295296, "node_id": "MDU6SXNzdWU4MzUyOTUyOTY=", "number": 1877, "title": "identify_mutable_parameters sometimes identifies numeric constants", "user": {"login": "Robbybp", "id": 8885032, "node_id": "MDQ6VXNlcjg4ODUwMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/8885032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Robbybp", "html_url": "https://github.com/Robbybp", "followers_url": "https://api.github.com/users/Robbybp/followers", "following_url": "https://api.github.com/users/Robbybp/following{/other_user}", "gists_url": "https://api.github.com/users/Robbybp/gists{/gist_id}", "starred_url": "https://api.github.com/users/Robbybp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Robbybp/subscriptions", "organizations_url": "https://api.github.com/users/Robbybp/orgs", "repos_url": "https://api.github.com/users/Robbybp/repos", "events_url": "https://api.github.com/users/Robbybp/events{/privacy}", "received_events_url": "https://api.github.com/users/Robbybp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-03-18T21:50:03Z", "updated_at": "2021-03-29T21:58:48Z", "closed_at": "2021-03-29T21:58:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There seem to be some circumstances in which `identify_mutable_parameters` identifies numeric constants. As far as I can tell, this happens when the numeric constant is alone as one argument of a logical expression. The following code reproduces the issue:\r\n```python\r\nimport pyomo.environ as pyo\r\nfrom pyomo.core.expr.visitor import identify_mutable_parameters\r\n\r\nm = pyo.ConcreteModel()\r\nm.p = pyo.Param(mutable=True)\r\nexpr = m.p - 5 == 0\r\n\r\nfor p in identify_mutable_parameters(expr):\r\n    print(p.to_string())\r\n```\r\nThis prints:\r\n```\r\n0.0\r\np\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1877/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1868", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1868/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1868/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1868/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1868", "id": 830558366, "node_id": "MDU6SXNzdWU4MzA1NTgzNjY=", "number": 1868, "title": "Certain attributes are not inherited by deepcopy making transformations fail", "user": {"login": "bernalde", "id": 8647329, "node_id": "MDQ6VXNlcjg2NDczMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/8647329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernalde", "html_url": "https://github.com/bernalde", "followers_url": "https://api.github.com/users/bernalde/followers", "following_url": "https://api.github.com/users/bernalde/following{/other_user}", "gists_url": "https://api.github.com/users/bernalde/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernalde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernalde/subscriptions", "organizations_url": "https://api.github.com/users/bernalde/orgs", "repos_url": "https://api.github.com/users/bernalde/repos", "events_url": "https://api.github.com/users/bernalde/events{/privacy}", "received_events_url": "https://api.github.com/users/bernalde/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-03-12T22:13:00Z", "updated_at": "2021-05-17T22:38:09Z", "closed_at": "2021-05-17T22:38:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This error appeared when working on a new project for transforming GDPs with some collaborators.\r\nWe are trying to iteratively apply transformations to GDPs with logical constraints. Since we don't want to edit the original model, we deepcopy the model itself before performing the transformation, but this triggers the following error\r\n`AttributeError: 'ExactlyExpression' object has no attribute '_nargs'`\r\nAn MWE can be found below:\r\n```\r\nimport copy\r\nimport pyomo.environ as pe\r\n\r\nm = pe.ConcreteModel() # Original model\r\nm.N = pe.RangeSet(1, 3)\r\nm.YF = pe.BooleanVar(m.N)\r\n\r\ndef _logical_constraint(m):\r\n    return pe.exactly(1,m.YF)\r\nm.logical_constraint = pe.LogicalConstraint(rule=_logical_constraint)\r\n\r\nm2 = copy.deepcopy(m) # Deep copied model\r\n\r\npe.TransformationFactory('core.logical_to_linear').apply_to(m) # Works well\r\n\r\npe.TransformationFactory('core.logical_to_linear').apply_to(m2) # Fails with error above\r\n```\r\nI think that this error is related to the inheritance of `_nargs` attributes, but I'm not sure. I haven't encountered this error elsewhere, but it seems plausible that it might show up for other components in Pyomo.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1868/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1853", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1853/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1853/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1853/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1853", "id": 823778971, "node_id": "MDU6SXNzdWU4MjM3Nzg5NzE=", "number": 1853, "title": "Bug in scaling transformation when working with large models", "user": {"login": "staadecker", "id": 13053829, "node_id": "MDQ6VXNlcjEzMDUzODI5", "avatar_url": "https://avatars.githubusercontent.com/u/13053829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/staadecker", "html_url": "https://github.com/staadecker", "followers_url": "https://api.github.com/users/staadecker/followers", "following_url": "https://api.github.com/users/staadecker/following{/other_user}", "gists_url": "https://api.github.com/users/staadecker/gists{/gist_id}", "starred_url": "https://api.github.com/users/staadecker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/staadecker/subscriptions", "organizations_url": "https://api.github.com/users/staadecker/orgs", "repos_url": "https://api.github.com/users/staadecker/repos", "events_url": "https://api.github.com/users/staadecker/events{/privacy}", "received_events_url": "https://api.github.com/users/staadecker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-03-06T23:33:18Z", "updated_at": "2021-03-16T18:44:41Z", "closed_at": "2021-03-16T18:44:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello there,\r\n\r\nI've found the following bug which breaks the scaling transformation for any model of non-trivial size.\r\n\r\n### The bug\r\n\r\nWhen scaling the model, the transformation plugin calls `c.set_value((lower_bound, constraint_body, upper_bound))` as shown below.\r\n\r\nhttps://github.com/Pyomo/pyomo/blob/e6ed67e23e58ad8f0634c1b9a757037dbd3eaa79/pyomo/core/plugins/transform/scaling.py#L204\r\n\r\nThe bug happens when we have an equality (the lower and upper bounds are equal). So let's say the scaling transformation is calling `c.set_value((10.0, some_expression, 10.0))`.\r\n\r\nNow let's look at the code inside `set_value(self, expr)` in `constraint.py`. If `expr` is a tuple of length 3 (which it is when using the scaling transformation) then the following block of code is called.\r\n\r\nhttps://github.com/Pyomo/pyomo/blob/e6ed67e23e58ad8f0634c1b9a757037dbd3eaa79/pyomo/core/base/constraint.py#L436-L465\r\n\r\nWhat's important is this block essentially does this:\r\n```\r\nself._lower = as_numeric(10.0)\r\nself._upper = as_numeric(10.0)\r\n```\r\nNow, `as_numeric(obj)` returns an instance of `pyomo.core.expr.numvalue.NumericConstant`.  It uses a cache to save on memory so if it's called twice with the same value for `obj`, it returns the same instance. However, the cache is limited to `1024` elements, after which every call to `as_numeric()` returns a different instance of `NumericConstant`. (see [here](https://github.com/Pyomo/pyomo/blob/e6ed67e23e58ad8f0634c1b9a757037dbd3eaa79/pyomo/core/expr/numvalue.py#L396))\r\n\r\nThe issue is later in `set_value()` we have the following assertion.\r\n\r\nhttps://github.com/Pyomo/pyomo/blob/e6ed67e23e58ad8f0634c1b9a757037dbd3eaa79/pyomo/core/base/constraint.py#L687-L692\r\n\r\nIf we've exceeded the cache, then `self._lower is self._upper` will be false, even if they have the same numerical value, as they are different instances of `NumericConstant`.\r\n\r\nThis results in the assertion failing which is the error I'm getting.\r\n\r\n```\r\nAssertionError\r\n> ~\\.conda\\envs\\base\\lib\\site-packages\\pyomo\\core\\base\\constraint.py(614)set_value()\r\n-> assert self._lower is self._upper\r\n```\r\n\r\n### Solution\r\n\r\nI've created a pull request to fix this. My patch is to make the transformation plugin call `set_value()` with a tuple of length `2` when dealing with an equality since in that case `set_value()` properly handles the equality.\r\n\r\nAnother possible solution is to change the assertion to `self._lower.value == self._upper.value` however I don't know if this is better.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1853/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1845", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1845/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1845/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1845/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1845", "id": 819229728, "node_id": "MDU6SXNzdWU4MTkyMjk3Mjg=", "number": 1845, "title": "`_component_data_iter` I think doesn't use `sorted_robust`?", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-03-01T20:28:57Z", "updated_at": "2021-03-10T17:29:42Z", "closed_at": "2021-03-10T17:29:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is still related to #567, but now I'm confused. On master (after #1842), now the `pprint` statement in the following code works, but the writer still throws the `TypeError` because it cannot sort the tuples in `m.ick`:\r\n```\r\nfrom pyomo.environ import *\r\n\r\nm = ConcreteModel()\r\nm.ick = Set(initialize=[(1, 'str1'), ('str2', 'str3')], ordered=True,\r\n            within=Any)\r\nm.v = Var(m.ick, within=Binary)\r\nm.obj = Objective(expr=m.v[1, 'str1'])\r\nm.cons = Constraint(expr=m.v[1,'str1'] >= m.v['str2', 'str3'])\r\n\r\nm.pprint() # this is okay\r\nSolverFactory('gurobi').solve(m, tee=True) # this throws the error below\r\n```\r\n```\r\nTraceback (most recent call last):\r\n  File \"sorting_stuff.py\", line 11, in <module>\r\n    SolverFactory('gurobi').solve(m, tee=True)\r\n  File \"/home/esjohn/src/pyomo/pyomo/opt/base/solvers.py\", line 574, in solve\r\n    self._presolve(*args, **kwds)\r\n  File \"/home/esjohn/src/pyomo/pyomo/solvers/plugins/solvers/GUROBI.py\", line 230, in _presolve\r\n    ILMLicensedSystemCallSolver._presolve(self, *args, **kwds)\r\n  File \"/home/esjohn/src/pyomo/pyomo/opt/solver/shellcmd.py\", line 200, in _presolve\r\n    OptSolver._presolve(self, *args, **kwds)\r\n  File \"/home/esjohn/src/pyomo/pyomo/opt/base/solvers.py\", line 674, in _presolve\r\n    **kwds)\r\n  File \"/home/esjohn/src/pyomo/pyomo/opt/base/solvers.py\", line 740, in _convert_problem\r\n    **kwds)\r\n  File \"/home/esjohn/src/pyomo/pyomo/opt/base/convert.py\", line 100, in convert_problem\r\n    problem_files, symbol_map = converter.apply(*tmp, **tmpkw)\r\n  File \"/home/esjohn/src/pyomo/pyomo/solvers/plugins/converter/model.py\", line 82, in apply\r\n    io_options=io_options)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/block.py\", line 1812, in write\r\n    io_options)\r\n  File \"/home/esjohn/src/pyomo/pyomo/repn/plugins/cpxlp.py\", line 172, in __call__\r\n    include_all_variable_bounds=include_all_variable_bounds)\r\n  File \"/home/esjohn/src/pyomo/pyomo/repn/plugins/cpxlp.py\", line 451, in _print_model_LP\r\n    Var, sort=sortOrder) )\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/block.py\", line 1435, in component_data_objects\r\n    sort=sort):\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/block.py\", line 1361, in _component_data_iter\r\n    _items = sorted(_items, key=itemgetter(0))\r\nTypeError: '<' not supported between instances of 'str' and 'int'\r\n```\r\nShould `_component_data_iter` be using `sorted_robust`?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1845/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1839", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1839/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1839/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1839/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1839", "id": 816832006, "node_id": "MDU6SXNzdWU4MTY4MzIwMDY=", "number": 1839, "title": "Converting expressions to bool", "user": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2021-02-25T21:39:33Z", "updated_at": "2021-05-19T04:07:32Z", "closed_at": "2021-05-19T04:07:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not sure what the correct behavior of converting expressions to bool is, but the following is at least inconsistent. I expected to get an error when creating a constraint at the end. In general, I would expect to get an exception when converting an expression to bool unless the expression is constant.\r\n\r\n```\r\nIn [1]: import pyomo.environ as pe\r\n\r\nIn [2]: m = pe.ConcreteModel()\r\n\r\nIn [3]: m.x = pe.Var()\r\n\r\nIn [4]: m.x.value = 1\r\n\r\nIn [5]: bool(m.x > 0)\r\nWARNING: DEPRECATED: Chained inequalities are deprecated. Use the inequality()\r\n    function to express ranged inequality expressions. (called from\r\n    /.../repos/pyomo/pyomo/core/expr/logical_expr.py:203)\r\nOut[5]: True\r\n\r\nIn [6]: bool(m.x < 0)\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-6-d9e44a7644a3> in <module>\r\n----> 1 bool(m.x < 0)\r\n\r\n~/repos/pyomo/pyomo/core/expr/numvalue.py in __lt__(self, other)\r\n    706             other > self\r\n    707         \"\"\"\r\n--> 708         return _generate_relational_expression(_lt, self, other)\r\n    709\r\n    710     def __gt__(self,other):\r\n\r\n~/repos/pyomo/pyomo/core/expr/logical_expr.py in _generate_relational_expression(etype, lhs, rhs)\r\n    392                           \"identical upper and lower\\n\\tbounds using strict \"\r\n    393                           \"inequalities: constraint infeasible:\\n\\t%s and \"\r\n--> 394                           \"%s < %s\" % ( prevExpr.to_string(), lhs, rhs ))\r\n    395                 if match[0] == (0,0):\r\n    396                     # This is a particularly weird case where someone\r\n\r\nTypeError: Cannot create a compound inequality with identical upper and lower\r\n\tbounds using strict inequalities: constraint infeasible:\r\n\t0.0  <  x and x < 0.0\r\n\r\nIn [7]: bool(m.x == 0)\r\nOut[7]: False\r\n\r\nIn [8]: bool(m.x == 1)\r\nOut[8]: True\r\n\r\nIn [9]: def _rule(m):\r\n   ...:     if m.x == 1:\r\n   ...:         return m.x**2 <= 1\r\n   ...:\r\n\r\nIn [10]: m.c = pe.Constraint(rule=_rule)\r\n\r\nIn [12]: m.c.pprint()\r\nc : Size=1, Index=None, Active=True\r\n    Key  : Lower : Body : Upper : Active\r\n    None :  -Inf : x**2 :   1.0 :   True\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1839/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1803", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1803/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1803/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1803/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1803", "id": 795606137, "node_id": "MDU6SXNzdWU3OTU2MDYxMzc=", "number": 1803, "title": "pyomo.common.tempfiles.TempfileManager raises FileNotFoundError", "user": {"login": "jrlooker", "id": 22041063, "node_id": "MDQ6VXNlcjIyMDQxMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/22041063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrlooker", "html_url": "https://github.com/jrlooker", "followers_url": "https://api.github.com/users/jrlooker/followers", "following_url": "https://api.github.com/users/jrlooker/following{/other_user}", "gists_url": "https://api.github.com/users/jrlooker/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrlooker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrlooker/subscriptions", "organizations_url": "https://api.github.com/users/jrlooker/orgs", "repos_url": "https://api.github.com/users/jrlooker/repos", "events_url": "https://api.github.com/users/jrlooker/events{/privacy}", "received_events_url": "https://api.github.com/users/jrlooker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mrmundt", "id": 55767766, "node_id": "MDQ6VXNlcjU1NzY3NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/55767766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrmundt", "html_url": "https://github.com/mrmundt", "followers_url": "https://api.github.com/users/mrmundt/followers", "following_url": "https://api.github.com/users/mrmundt/following{/other_user}", "gists_url": "https://api.github.com/users/mrmundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrmundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrmundt/subscriptions", "organizations_url": "https://api.github.com/users/mrmundt/orgs", "repos_url": "https://api.github.com/users/mrmundt/repos", "events_url": "https://api.github.com/users/mrmundt/events{/privacy}", "received_events_url": "https://api.github.com/users/mrmundt/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrmundt", "id": 55767766, "node_id": "MDQ6VXNlcjU1NzY3NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/55767766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrmundt", "html_url": "https://github.com/mrmundt", "followers_url": "https://api.github.com/users/mrmundt/followers", "following_url": "https://api.github.com/users/mrmundt/following{/other_user}", "gists_url": "https://api.github.com/users/mrmundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrmundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrmundt/subscriptions", "organizations_url": "https://api.github.com/users/mrmundt/orgs", "repos_url": "https://api.github.com/users/mrmundt/repos", "events_url": "https://api.github.com/users/mrmundt/events{/privacy}", "received_events_url": "https://api.github.com/users/mrmundt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2021-01-28T02:16:33Z", "updated_at": "2022-02-22T03:34:53Z", "closed_at": "2022-02-22T02:20:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've recently started using pyomo.common.tempfiles.TempfileManager to set the temporary directory in a package, as in https://pyomo.readthedocs.io/en/stable/working_models.html#changing-the-temporary-directory. I was previously using TempfileManager from PyUtilib for about 4 years. \r\n\r\nMy tests now fail. Here is some of the trace:\r\n\r\n  File \"/home/user/anaconda38/lib/python3.8/site-packages/pyomo/opt/base/solvers.py\", line 571, in solve\r\n    self._presolve(*args, **kwds)\r\n  File \"/home/user/anaconda38/lib/python3.8/site-packages/pyomo/solvers/plugins/solvers/CPLEX.py\", line 349, in _presolve\r\n    ILMLicensedSystemCallSolver._presolve(self, *args, **kwds)\r\n  File \"/home/user/anaconda38/lib/python3.8/site-packages/pyomo/opt/solver/shellcmd.py\", line 197, in _presolve\r\n    OptSolver._presolve(self, *args, **kwds)\r\n  File \"/home/user/anaconda38/lib/python3.8/site-packages/pyomo/opt/base/solvers.py\", line 668, in _presolve\r\n    self._convert_problem(args,\r\n  File \"/home/user/anaconda38/lib/python3.8/site-packages/pyomo/opt/base/solvers.py\", line 738, in _convert_problem\r\n    return convert_problem(args,\r\n  File \"/home/user/anaconda38/lib/python3.8/site-packages/pyomo/opt/base/convert.py\", line 105, in convert_problem\r\n    problem_files, symbol_map = converter.apply(*tmp, **tmpkw)\r\n  File \"/home/user/anaconda38/lib/python3.8/site-packages/pyomo/solvers/plugins/converter/model.py\", line 72, in apply\r\n    problem_filename = TempfileManager.\\\r\n  File \"/home/user/anaconda38/lib/python3.8/site-packages/pyomo/common/tempfiles.py\", line 67, in create_tempfile\r\n    ans = tempfile.mkstemp(suffix=suffix, prefix=prefix, text=text, dir=dir)\r\n  File \"/home/user/anaconda38/lib/python3.8/tempfile.py\", line 332, in mkstemp\r\n    return _mkstemp_inner(dir, prefix, suffix, flags, output_type)\r\n  File \"/home/user/anaconda38/lib/python3.8/tempfile.py\", line 250, in _mkstemp_inner\r\n    fd = _os.open(file, flags, 0o600)\r\nFileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpc6s9g6hf/tmpjoxugx27.pyomo.lp'\r\n\r\nIf I run the tests individually on the commandline, then the FileNotFoundError does not occur.\r\n\r\nIf I run all the tests from a script, then the FileNotFoundError does occur.\r\n\r\nIf I run all the tests from the same script, but change the order of the tests, then the FileNotFoundError still occurs but during a different test.\r\n\r\nNote that in all tests, I'm not acutally setting TempfileManager.tempdir. It appears in a method, but this method is not called during these tests. So just the import \"from pyomo.common.tempfiles import TempfileManager\" is being run.\r\n\r\nNow if I change my code so that \"TempfileManager.tempdir = None\" is always called for each test, then the FileNotFoundError no longer occurs.\r\n\r\nCan you help?\r\n\r\nI'm using Python 3.8.5 from Anaconda, Pyomo 5.7.2 and Ubuntu 18.04 LTS.\r\n\r\nThanks,\r\nJason", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1803/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1800", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1800/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1800/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1800/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1800", "id": 794462283, "node_id": "MDU6SXNzdWU3OTQ0NjIyODM=", "number": 1800, "title": "Slicing doesn't work with normalize_index.flatten == False", "user": {"login": "Robbybp", "id": 8885032, "node_id": "MDQ6VXNlcjg4ODUwMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/8885032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Robbybp", "html_url": "https://github.com/Robbybp", "followers_url": "https://api.github.com/users/Robbybp/followers", "following_url": "https://api.github.com/users/Robbybp/following{/other_user}", "gists_url": "https://api.github.com/users/Robbybp/gists{/gist_id}", "starred_url": "https://api.github.com/users/Robbybp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Robbybp/subscriptions", "organizations_url": "https://api.github.com/users/Robbybp/orgs", "repos_url": "https://api.github.com/users/Robbybp/repos", "events_url": "https://api.github.com/users/Robbybp/events{/privacy}", "received_events_url": "https://api.github.com/users/Robbybp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-01-26T18:28:13Z", "updated_at": "2021-10-25T22:11:43Z", "closed_at": "2021-10-25T22:11:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "PR https://github.com/Pyomo/pyomo/pull/1768 has made relevant that fact that slicing is not designed to work with `normalize_index.flatten == False`. I believe this is only important for users who want to use slicing and flattening with components indexed by `None`-dimensional sets. I do not know of any such use cases currently.\r\n\r\nExample code:\r\n```python\r\nimport pyomo.environ as pyo \r\nfrom pyomo.core.base.indexed_component import normalize_index as normalize\r\n\r\nm = pyo.ConcreteModel()\r\n\r\nnormalize.flatten = False\r\n\r\nm.d1 = pyo.Set(initialize=[1,2])\r\nm.d2 = pyo.Set(initialize=[('a', 1), ('b', 2)])\r\n\r\nm.v = pyo.Var(m.d2, m.d1)\r\n\r\nref = pyo.Reference(m.v[:,1])\r\n```\r\nThe issue is that a one-dimensional slice does not properly slice a multi-dimensional set when `normalize_index.flatten == False`. After the above code:\r\n```python\r\n>>> ('a', 1) in ref\r\nFalse\r\n```\r\n\r\nI believe solving this in general, where the component could be indexed by a nested product of sets, would be relatively challenging. This issue exists mainly for the purpose of documentation.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1800/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1799", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1799/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1799/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1799/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1799", "id": 794432504, "node_id": "MDU6SXNzdWU3OTQ0MzI1MDQ=", "number": 1799, "title": "Bug in mindtpy: Two undefined functions", "user": {"login": "mrmundt", "id": 55767766, "node_id": "MDQ6VXNlcjU1NzY3NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/55767766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrmundt", "html_url": "https://github.com/mrmundt", "followers_url": "https://api.github.com/users/mrmundt/followers", "following_url": "https://api.github.com/users/mrmundt/following{/other_user}", "gists_url": "https://api.github.com/users/mrmundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrmundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrmundt/subscriptions", "organizations_url": "https://api.github.com/users/mrmundt/orgs", "repos_url": "https://api.github.com/users/mrmundt/repos", "events_url": "https://api.github.com/users/mrmundt/events{/privacy}", "received_events_url": "https://api.github.com/users/mrmundt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-01-26T17:45:23Z", "updated_at": "2021-05-25T13:48:16Z", "closed_at": "2021-05-25T13:48:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@bernalde \r\n\r\nIn `pyomo.contrib.mindtpy.nlp_solve`, there is this section (lines 184-189):\r\n\r\n```\r\n    elif config.strategy == 'PSC':\r\n        # !!THIS SEEMS LIKE A BUG!! - mrmundt #\r\n        add_psc_cut(solve_data, config)\r\n    elif config.strategy == 'GBD':\r\n        # !!THIS SEEMS LIKE A BUG!! - mrmundt #\r\n        add_gbd_cut(solve_data, config)\r\n```\r\n\r\nThe two functions `add_psc_cut` and `add_gbd_cut` are undefined. Are these living on a branch somewhere and need to be added, or at the very least, can an exception be raised? ", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1799/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1766", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1766/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1766/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1766/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1766", "id": 775037089, "node_id": "MDU6SXNzdWU3NzUwMzcwODk=", "number": 1766, "title": "Error with Cplex 20.1.0.0", "user": {"login": "ZedongPeng", "id": 15854830, "node_id": "MDQ6VXNlcjE1ODU0ODMw", "avatar_url": "https://avatars.githubusercontent.com/u/15854830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZedongPeng", "html_url": "https://github.com/ZedongPeng", "followers_url": "https://api.github.com/users/ZedongPeng/followers", "following_url": "https://api.github.com/users/ZedongPeng/following{/other_user}", "gists_url": "https://api.github.com/users/ZedongPeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZedongPeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZedongPeng/subscriptions", "organizations_url": "https://api.github.com/users/ZedongPeng/orgs", "repos_url": "https://api.github.com/users/ZedongPeng/repos", "events_url": "https://api.github.com/users/ZedongPeng/events{/privacy}", "received_events_url": "https://api.github.com/users/ZedongPeng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-12-27T13:19:35Z", "updated_at": "2021-01-25T05:50:04Z", "closed_at": "2021-01-25T05:50:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Cplex just released its 20.1.0.0 version.\r\n\r\nWhen I use Cplex 20.1.0.0 to solve a small MILP example, the following results showed up.\r\n\r\nExample code:\r\n\r\n```\r\nfrom pyomo.solvers.tests.models.MILP_simple import MILP_simple\r\na = MILP_simple()\r\na.generate_model()\r\nmodel = a.model\r\nmodel.pprint()\r\nopt = SolverFactory('cplex')\r\nresults = opt.solve(model,tee=True) #,warmstart=True)\r\nprint(results)\r\n```\r\n\r\n\r\nOutput:\r\n\r\n```\r\nWelcome to IBM(R) ILOG(R) CPLEX(R) Interactive Optimizer 20.1.0.0\r\n  with Simplex, Mixed Integer & Barrier Optimizers\r\n5725-A06 5725-A29 5724-Y48 5724-Y49 5724-Y54 5724-Y55 5655-Y21\r\nCopyright IBM Corp. 1988, 2020.  All Rights Reserved.\r\n\r\nType 'help' for a list of available commands.\r\nType 'help' followed by a command name for more\r\ninformation on commands.\r\n\r\nCPLEX> Logfile 'cplex.log' closed.\r\nLogfile '/var/folders/pj/1113b24j7b3083zbt19pjxqm0000gn/T/tmp3ca49s13.cplex.log' open.\r\nCPLEX> Problem '/var/folders/pj/1113b24j7b3083zbt19pjxqm0000gn/T/tmpsefek9qr.pyomo.lp' read.\r\nRead time = 0.00 sec. (0.00 ticks)\r\nCPLEX> Problem name         : /var/folders/pj/1113b24j7b3083zbt19pjxqm0000gn/T/tmpsefek9qr.pyomo.lp\r\nObjective sense      : Minimize\r\nVariables            :       3  [Nneg: 2,  Binary: 1]\r\nObjective nonzeros   :       2\r\nLinear constraints   :       4  [Less: 1,  Greater: 2,  Equal: 1]\r\n  Nonzeros           :       6\r\n  RHS nonzeros       :       4\r\n\r\nVariables            : Min LB: 0.000000         Max UB: 1.000000       \r\nObjective nonzeros   : Min   : 1.000000         Max   : 3.000000       \r\nLinear constraints   :\r\n  Nonzeros           : Min   : 1.000000         Max   : 1.000000       \r\n  RHS nonzeros       : Min   : 1.000000         Max   : 10.00000       \r\nCPLEX> Version identifier: 20.1.0.0 | 2020-11-10 | 9bedb6d68\r\nFound incumbent of value 13.000000 after 0.00 sec. (0.00 ticks)\r\nTried aggregator 1 time.\r\nMIP Presolve eliminated 4 rows and 3 columns.\r\nAll rows and columns eliminated.\r\nPresolve time = 0.00 sec. (0.00 ticks)\r\n\r\nRoot node processing (before b&c):\r\n  Real time             =    0.00 sec. (0.00 ticks)\r\nParallel b&c, 12 threads:\r\n  Real time             =    0.00 sec. (0.00 ticks)\r\n  Sync time (average)   =    0.00 sec.\r\n  Wait time (average)   =    0.00 sec.\r\n                          ------------\r\nTotal (root+branch&cut) =    0.00 sec. (0.00 ticks)\r\n\r\nSolution pool: 2 solutions saved.\r\n\r\nMIP - Integer optimal solution:  Objective =  6.0000000000e+00\r\nSolution time =    0.00 sec.  Iterations = 0  Nodes = 0 (1)\r\nDeterministic time = 0.00 ticks  (1.79 ticks/sec)\r\n\r\nCPLEX> Incumbent solution written to file '/var/folders/pj/1113b24j7b3083zbt19pjxqm0000gn/T/tmp8xwq6lvo.cplex.sol'.\r\nCPLEX> Traceback (most recent call last):\r\n  File \"/Users/zedongpeng/Github/pyomo-MINLP-benchmarking/test.py\", line 115, in <module>\r\n    results = opt.solve(model,tee=True) #,warmstart=True)\r\n  File \"/Users/zedongpeng/Github/pyomo/pyomo/opt/base/solvers.py\", line 603, in solve\r\n    result = self._postsolve()\r\n  File \"/Users/zedongpeng/Github/pyomo/pyomo/solvers/plugins/solvers/CPLEX.py\", line 894, in _postsolve\r\n    results = ILMLicensedSystemCallSolver._postsolve(self)\r\n  File \"/Users/zedongpeng/Github/pyomo/pyomo/opt/solver/shellcmd.py\", line 269, in _postsolve\r\n    results = self.process_output(self._rc)\r\n  File \"/Users/zedongpeng/Github/pyomo/pyomo/opt/solver/shellcmd.py\", line 331, in process_output\r\n    self.process_soln_file(results)\r\n  File \"/Users/zedongpeng/Github/pyomo/pyomo/solvers/plugins/solvers/CPLEX.py\", line 780, in process_soln_file\r\n    objective_value = (tokens[0].split('=')[1].strip()).lstrip(\"\\\"\").rstrip(\"\\\"\")\r\nIndexError: list index out of range\r\n```\r\nI think the I/O has changed in Cplex 20.1.0.0. Maybe some modifications need to be added to adapt to Cplex 20.1.0.0 .\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1766/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1765", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1765/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1765/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1765/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1765", "id": 774584235, "node_id": "MDU6SXNzdWU3NzQ1ODQyMzU=", "number": 1765, "title": "Missing value function import in persistent_solver.py", "user": {"login": "bknueven", "id": 30801372, "node_id": "MDQ6VXNlcjMwODAxMzcy", "avatar_url": "https://avatars.githubusercontent.com/u/30801372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bknueven", "html_url": "https://github.com/bknueven", "followers_url": "https://api.github.com/users/bknueven/followers", "following_url": "https://api.github.com/users/bknueven/following{/other_user}", "gists_url": "https://api.github.com/users/bknueven/gists{/gist_id}", "starred_url": "https://api.github.com/users/bknueven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bknueven/subscriptions", "organizations_url": "https://api.github.com/users/bknueven/orgs", "repos_url": "https://api.github.com/users/bknueven/repos", "events_url": "https://api.github.com/users/bknueven/events{/privacy}", "received_events_url": "https://api.github.com/users/bknueven/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mrmundt", "id": 55767766, "node_id": "MDQ6VXNlcjU1NzY3NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/55767766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrmundt", "html_url": "https://github.com/mrmundt", "followers_url": "https://api.github.com/users/mrmundt/followers", "following_url": "https://api.github.com/users/mrmundt/following{/other_user}", "gists_url": "https://api.github.com/users/mrmundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrmundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrmundt/subscriptions", "organizations_url": "https://api.github.com/users/mrmundt/orgs", "repos_url": "https://api.github.com/users/mrmundt/repos", "events_url": "https://api.github.com/users/mrmundt/events{/privacy}", "received_events_url": "https://api.github.com/users/mrmundt/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrmundt", "id": 55767766, "node_id": "MDQ6VXNlcjU1NzY3NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/55767766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrmundt", "html_url": "https://github.com/mrmundt", "followers_url": "https://api.github.com/users/mrmundt/followers", "following_url": "https://api.github.com/users/mrmundt/following{/other_user}", "gists_url": "https://api.github.com/users/mrmundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrmundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrmundt/subscriptions", "organizations_url": "https://api.github.com/users/mrmundt/orgs", "repos_url": "https://api.github.com/users/mrmundt/repos", "events_url": "https://api.github.com/users/mrmundt/events{/privacy}", "received_events_url": "https://api.github.com/users/mrmundt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-12-25T00:01:33Z", "updated_at": "2021-01-06T15:26:45Z", "closed_at": "2021-01-06T15:26:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/Pyomo/pyomo/blob/4f11cb7326c68c9aa561f4c1cc4142f1ab2b1f94/pyomo/solvers/plugins/solvers/persistent_solver.py#L35\r\n\r\n`value` is never imported in this module.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1765/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1760", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1760/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1760/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1760/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1760", "id": 771261487, "node_id": "MDU6SXNzdWU3NzEyNjE0ODc=", "number": 1760, "title": "\"pyomo\" Logger Sends Logs To Stdout Irrespective of User's Logging Config", "user": {"login": "DavidMuller", "id": 4778701, "node_id": "MDQ6VXNlcjQ3Nzg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/4778701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidMuller", "html_url": "https://github.com/DavidMuller", "followers_url": "https://api.github.com/users/DavidMuller/followers", "following_url": "https://api.github.com/users/DavidMuller/following{/other_user}", "gists_url": "https://api.github.com/users/DavidMuller/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidMuller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidMuller/subscriptions", "organizations_url": "https://api.github.com/users/DavidMuller/orgs", "repos_url": "https://api.github.com/users/DavidMuller/repos", "events_url": "https://api.github.com/users/DavidMuller/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidMuller/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-12-19T00:47:24Z", "updated_at": "2021-01-27T07:23:09Z", "closed_at": "2021-01-27T07:23:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nThank you for all the hard work on Pyomo!\r\n\r\nWe are having some trouble with `pyomo` not respecting our custom logging configuration, and unconditionally emitting its logs to `stdout` in a hardcoded format.\r\n\r\nConsider, for example, how `pyomo` ignores a Python logging configuration that sends all logs into a `StringIO` buffer with a custom format message:\r\n\r\n```python\r\n>>> import logging\r\n>>> from io import StringIO\r\n>>> import pyomo.environ\r\n>>> \r\n>>> string_io = StringIO()\r\n>>> handler = logging.StreamHandler(stream=string_io)\r\n>>> logging.basicConfig(format='custom:%(message)s', handlers=[handler])\r\n>>> \r\n>>> logging.getLogger(\"pyomo\").warning(\"pyomo warning\")\r\nWARNING: pyomo warning\r\n>>> logging.warning(\"example warning\")\r\n>>> string_io.getvalue()\r\n'custom:pyomo warning\\ncustom:example warning\\n'\r\n>>> \r\n```\r\n\r\nUnfortunately, the `\"pyomo\"` logger emits its log to both `stdout` and the `string_io` buffer...Additionally, the log it emits to `stdout` also does not respect the custom format configured in the `logging.basicConfig` call---the message `pyomo` emits to stdout doesn't have `custom` as its prefix.\r\n\r\nI think the root cause of this issue is that `pyomo` adds a custom handler to itself in `common/log.py`:\r\n\r\nhttps://github.com/Pyomo/pyomo/blob/263d5b1a89dbd13eab1db01cdff687bbb1c4e795/pyomo/common/log.py#L165-L171\r\n\r\nThis custom handler, evidently, is responsible for the log messages that always wind up in `stdout` in the wrong format irrespective of the users's choices. The Python docs [advise against adding a handler in a library's logger because it means that developers are unable to configure logging to suit their needs](https://docs.python.org/3/howto/logging.html#configuring-logging-for-a-library):\r\n\r\n> Note It is strongly advised that you do not add any handlers other than NullHandler to your library\u2019s loggers. This is because the configuration of handlers is the prerogative of the application developer who uses your library. The application developer knows their target audience and what handlers are most appropriate for their application: if you add handlers \u2018under the hood\u2019, you might well interfere with their ability to carry out unit tests and deliver logs which suit their requirements.\r\n\r\nIn our application, for example, we want all log messages to have a custom JSON format and be sent to `stderr`. But, we wind up with many logs from `pyomo` in `stdout` without our custom JSON formatting.\r\n\r\nWe can work around this problem by preemptively running `import pyomo.environ` and then clobbering all of the handlers on the `\"pyomo\"` logger, but---of course---that solution is pretty brittle.\r\n\r\nThanks for your help.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1760/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1760/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1744", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1744/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1744/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1744/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1744", "id": 766837231, "node_id": "MDU6SXNzdWU3NjY4MzcyMzE=", "number": 1744, "title": "`is_constant` does not work correctly for variable bounds with mutable params", "user": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, {"login": "ghackebeil", "id": 2308454, "node_id": "MDQ6VXNlcjIzMDg0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2308454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghackebeil", "html_url": "https://github.com/ghackebeil", "followers_url": "https://api.github.com/users/ghackebeil/followers", "following_url": "https://api.github.com/users/ghackebeil/following{/other_user}", "gists_url": "https://api.github.com/users/ghackebeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghackebeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghackebeil/subscriptions", "organizations_url": "https://api.github.com/users/ghackebeil/orgs", "repos_url": "https://api.github.com/users/ghackebeil/repos", "events_url": "https://api.github.com/users/ghackebeil/events{/privacy}", "received_events_url": "https://api.github.com/users/ghackebeil/received_events", "type": "User", "site_admin": false}, {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 17, "created_at": "2020-12-14T19:12:39Z", "updated_at": "2022-02-01T20:48:22Z", "closed_at": "2022-02-01T20:48:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nimport pyomo.environ as pyo\r\nm = pyo.ConcreteModel()\r\nm.p = pyo.Param(mutable=True, initialize=5.2)\r\nm.x = pyo.Var()\r\nm.x.setlb(m.p)\r\nassert not pyo.is_constant(m.x.lb) # fails\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1744/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1710", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1710/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1710/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1710/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1710", "id": 744093330, "node_id": "MDU6SXNzdWU3NDQwOTMzMzA=", "number": 1710, "title": "PyNumero Build error on Ubuntu-20.04", "user": {"login": "mrmundt", "id": 55767766, "node_id": "MDQ6VXNlcjU1NzY3NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/55767766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrmundt", "html_url": "https://github.com/mrmundt", "followers_url": "https://api.github.com/users/mrmundt/followers", "following_url": "https://api.github.com/users/mrmundt/following{/other_user}", "gists_url": "https://api.github.com/users/mrmundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrmundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrmundt/subscriptions", "organizations_url": "https://api.github.com/users/mrmundt/orgs", "repos_url": "https://api.github.com/users/mrmundt/repos", "events_url": "https://api.github.com/users/mrmundt/events{/privacy}", "received_events_url": "https://api.github.com/users/mrmundt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1930447581, "node_id": "MDU6TGFiZWwxOTMwNDQ3NTgx", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/PyNumero", "name": "PyNumero", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-11-16T19:18:40Z", "updated_at": "2021-06-17T14:19:01Z", "closed_at": "2021-06-17T14:19:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "GitHub Actions will soon be moving the target `ubuntu-latest` to point to `ubuntu-20.04` (instead of `ubuntu-18.04`). When testing this, there is an error with the PyNumero build:\r\n```\r\nScanning dependencies of target format\r\n[  1%] Building C object src/asl/CMakeFiles/arithchk.dir/solvers/arithchk.c.o\r\n[  1%] Building CXX object CMakeFiles/format.dir/src/format.cc.o\r\n[  1%] Building C object src/asl/CMakeFiles/arithchk.dir/solvers/fpinit.c.o\r\n[  2%] Linking C executable ../../bin/arithchk\r\n[  2%] Built target arithchk\r\nScanning dependencies of target benchmark\r\n[  3%] Building CXX object thirdparty/benchmark/src/CMakeFiles/benchmark.dir/benchmark.cc.o\r\n/tmp/tmp0owyqgsp/amplmp-prefix/src/amplmp/thirdparty/benchmark/src/benchmark.cc: In copy constructor \u2018benchmark::internal::Benchmark::Benchmark(const benchmark::internal::Benchmark&)\u2019:\r\n/tmp/tmp0owyqgsp/amplmp-prefix/src/amplmp/thirdparty/benchmark/src/benchmark.cc:525:38: error: implicitly-declared \u2018benchmark::internal::BenchmarkImp::BenchmarkImp(const benchmark::internal::BenchmarkImp&)\u2019 is deprecated [-Werror=deprecated-copy]\r\n  525 |   : imp_(new BenchmarkImp(*other.imp_))\r\n      |                                      ^\r\n/tmp/tmp0owyqgsp/amplmp-prefix/src/amplmp/thirdparty/benchmark/src/benchmark.cc:320:17: note: because \u2018benchmark::internal::BenchmarkImp\u2019 has user-provided \u2018benchmark::internal::BenchmarkImp& benchmark::internal::BenchmarkImp::operator=(const benchmark::internal::BenchmarkImp&)\u2019\r\n  320 |   BenchmarkImp& operator=(BenchmarkImp const&);\r\n      |                 ^~~~~~~~\r\ncc1plus: all warnings being treated as errors\r\nmake[5]: *** [thirdparty/benchmark/src/CMakeFiles/benchmark.dir/build.make:80: thirdparty/benchmark/src/CMakeFiles/benchmark.dir/benchmark.cc.o] Error 1\r\nmake[4]: *** [CMakeFiles/Makefile2:770: thirdparty/benchmark/src/CMakeFiles/benchmark.dir/all] Error 2\r\nmake[4]: *** Waiting for unfinished jobs....\r\n[  4%] Building CXX object CMakeFiles/format.dir/src/posix.cc.o\r\n[  4%] Built target format\r\nmake[3]: *** [Makefile:147: all] Error 2\r\nmake[2]: *** [CMakeFiles/amplmp.dir/build.make:124: amplmp-prefix/src/amplmp-stamp/amplmp-build] Error 2\r\nmake[1]: *** [CMakeFiles/Makefile2:115: CMakeFiles/amplmp.dir/all] Error 2\r\nmake: *** [Makefile:147: all] Error 2\r\nERROR: DistutilsExecError: command '/usr/local/bin/cmake' failed with exit\r\n    status 2\r\nINFO: Finished building Pyomo extensions.\r\nINFO: The following extensions were built:\r\n        [ OK ]  mcpp\r\n        [FAIL]  pynumero\r\n```\r\n\r\nThis will need to be resolved before we can use `ubuntu-latest` in the GitHub Actions workflow.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1710/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1702", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1702/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1702/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1702/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1702", "id": 741264679, "node_id": "MDU6SXNzdWU3NDEyNjQ2Nzk=", "number": 1702, "title": "Pyomo + GUROBI: I can\u00b4t get dual variable result", "user": {"login": "LeoHenrik", "id": 60437873, "node_id": "MDQ6VXNlcjYwNDM3ODcz", "avatar_url": "https://avatars.githubusercontent.com/u/60437873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeoHenrik", "html_url": "https://github.com/LeoHenrik", "followers_url": "https://api.github.com/users/LeoHenrik/followers", "following_url": "https://api.github.com/users/LeoHenrik/following{/other_user}", "gists_url": "https://api.github.com/users/LeoHenrik/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeoHenrik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeoHenrik/subscriptions", "organizations_url": "https://api.github.com/users/LeoHenrik/orgs", "repos_url": "https://api.github.com/users/LeoHenrik/repos", "events_url": "https://api.github.com/users/LeoHenrik/events{/privacy}", "received_events_url": "https://api.github.com/users/LeoHenrik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-11-12T04:18:30Z", "updated_at": "2022-05-13T17:26:59Z", "closed_at": "2022-05-13T17:26:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been using IPOPT as a solver and i\u00b4ve not problem getting dual vairable, but i\u00b4m trying to use Gurobi  but i have the problem that when i try to get the result of the dual variable of some constraint the program give me a error message. \r\n\r\nI get the dual variable doing this: \r\n\r\n        Variable= zeros(nbr)\r\n        for c in model.c:\r\n            Variable[c] =  model.dual([model.constraint_a[c]])\r\n\r\nand the program have: model.dual = pe.Suffix(direction=pe.Suffix.IMPORT) before the solver. \r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1702/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1701", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1701/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1701/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1701/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1701", "id": 740888505, "node_id": "MDU6SXNzdWU3NDA4ODg1MDU=", "number": 1701, "title": "Error from PyNumero: Variables fixed using bounds is not currently supported", "user": {"login": "ZedongPeng", "id": 15854830, "node_id": "MDQ6VXNlcjE1ODU0ODMw", "avatar_url": "https://avatars.githubusercontent.com/u/15854830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZedongPeng", "html_url": "https://github.com/ZedongPeng", "followers_url": "https://api.github.com/users/ZedongPeng/followers", "following_url": "https://api.github.com/users/ZedongPeng/following{/other_user}", "gists_url": "https://api.github.com/users/ZedongPeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZedongPeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZedongPeng/subscriptions", "organizations_url": "https://api.github.com/users/ZedongPeng/orgs", "repos_url": "https://api.github.com/users/ZedongPeng/repos", "events_url": "https://api.github.com/users/ZedongPeng/events{/privacy}", "received_events_url": "https://api.github.com/users/ZedongPeng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1930447581, "node_id": "MDU6TGFiZWwxOTMwNDQ3NTgx", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/PyNumero", "name": "PyNumero", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-11-11T16:13:20Z", "updated_at": "2022-01-24T14:09:39Z", "closed_at": "2022-01-24T14:09:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am using the `evaluate_hessian_lag` function in PyNumero. \r\nI tested it with many examples(the integral relaxation of MINLPs). For some example, it reports the error\r\n> RuntimeError: Variables fixed using bounds is not currently supported.\r\n\r\nThe related code in Pynumero is [here](https://github.com/Pyomo/pyomo/blob/a37b3ce0ac8511eff7c4535f0a105af072359743/pyomo/contrib/pynumero/interfaces/ampl_nlp.py#L140)\r\n\r\nAn example that will report this error is [here](https://github.com/grossmann-group/pyomo-MINLP-benchmarking/blob/14c45bf2f9c8b8a75265272e1857e30119810e93/models_nonconvex_simple2/casctanks.py#L345) \r\n\r\nThe above definition can not easily be avoided if I choose to automatically generate pyomo model files from gams model files.\r\n\r\nI saw the comment `# TODO: is the \"fixed\" check necessary?` in [line 133](https://github.com/Pyomo/pyomo/blob/a37b3ce0ac8511eff7c4535f0a105af072359743/pyomo/contrib/pynumero/interfaces/ampl_nlp.py#L133).\r\n\r\nCan Pynumero support variables fixed using bounds with minor updates?\r\n\r\nThanks.\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1701/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1675", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1675/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1675/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1675/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1675", "id": 726807920, "node_id": "MDU6SXNzdWU3MjY4MDc5MjA=", "number": 1675, "title": "References not cloned correctly", "user": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-10-21T19:35:44Z", "updated_at": "2022-02-01T20:50:58Z", "closed_at": "2022-02-01T20:50:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This was the smallest problem I could put together to replicate the problem.\r\n\r\n```\r\nimport pyomo.environ as pe\r\n\r\nm = pe.ConcreteModel()\r\nm.b = pe.Block([0])\r\nm.b[0].x = pe.Var()\r\nm.b.b = pe.Block()\r\nm.b.b.x = pe.Reference(m.b[0].x)\r\nprint(m.b[0].x is m.b.b.x[None])  # True\r\nm2 = m.clone()\r\nprint(m2.b[0].x is m2.b.b.x[None])  # False\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1675/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1662", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1662/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1662/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1662/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1662", "id": 723428044, "node_id": "MDU6SXNzdWU3MjM0MjgwNDQ=", "number": 1662, "title": "differentiate cannot handle NPV expression types", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-10-16T18:06:56Z", "updated_at": "2020-10-19T14:19:09Z", "closed_at": "2020-10-19T13:58:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This code:\r\n```\r\nfrom pyomo.environ import *\r\n\r\nm = ConcreteModel()\r\nm.x = Var()\r\nm.x = 3\r\nm.p = Param(initialize=3, mutable=True)\r\n\r\nm.c = Constraint(expr=m.x - m.p <= 0)\r\n\r\nprint(differentiate(m.c.body, wrt_list=[m.x]))\r\n```\r\ngives the error\r\n```\r\npyomo.core.expr.calculus.diff_with_pyomo.DifferentiationException: Unsupported expression type for differentiation: <class 'pyomo.core.expr.numeric_expr.NPV_NegationExpression'>\r\n```\r\n(It is fine if `m.p` is not mutable.)", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1662/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1647", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1647/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1647/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1647/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1647", "id": 710128922, "node_id": "MDU6SXNzdWU3MTAxMjg5MjI=", "number": 1647, "title": "Solver returned non-zero return code (-6)", "user": {"login": "tonxxd", "id": 2827496, "node_id": "MDQ6VXNlcjI4Mjc0OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/2827496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tonxxd", "html_url": "https://github.com/tonxxd", "followers_url": "https://api.github.com/users/tonxxd/followers", "following_url": "https://api.github.com/users/tonxxd/following{/other_user}", "gists_url": "https://api.github.com/users/tonxxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tonxxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tonxxd/subscriptions", "organizations_url": "https://api.github.com/users/tonxxd/orgs", "repos_url": "https://api.github.com/users/tonxxd/repos", "events_url": "https://api.github.com/users/tonxxd/events{/privacy}", "received_events_url": "https://api.github.com/users/tonxxd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-09-28T10:07:28Z", "updated_at": "2021-08-20T13:29:30Z", "closed_at": "2021-04-15T15:18:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\nI am experiencing issues when solving a problem iteratively.\r\n\r\nMy code try to solve the same model multiple times changing a parameter\r\n```python\r\nsolverInstance = SolverFactory(solver)\r\nfor i in range(0,10):\r\n   model.upper_bound = i\r\n   solverInstance.solve(model)\r\n```\r\n\r\nIt works most of the time but randomly it crashes with the status code (-6) and I can solve the issue only restarting the kernel (with jupyter notebook)\r\n\r\nIt happens both with gurobi and cbc so I guess is something related to the pyomo library.\r\nI found this issue on StackOverflow which is very similar to mine \r\nhttps://stackoverflow.com/questions/54991843/pyomo-breaks-when-solving-iteratively\r\nbut there is no solution provided.\r\n\r\nAny ideas? \r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1647/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1642", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1642/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1642/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1642/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1642", "id": 707600294, "node_id": "MDU6SXNzdWU3MDc2MDAyOTQ=", "number": 1642, "title": "Return values feature in parmest is broken", "user": {"login": "adowling2", "id": 13946870, "node_id": "MDQ6VXNlcjEzOTQ2ODcw", "avatar_url": "https://avatars.githubusercontent.com/u/13946870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adowling2", "html_url": "https://github.com/adowling2", "followers_url": "https://api.github.com/users/adowling2/followers", "following_url": "https://api.github.com/users/adowling2/following{/other_user}", "gists_url": "https://api.github.com/users/adowling2/gists{/gist_id}", "starred_url": "https://api.github.com/users/adowling2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adowling2/subscriptions", "organizations_url": "https://api.github.com/users/adowling2/orgs", "repos_url": "https://api.github.com/users/adowling2/repos", "events_url": "https://api.github.com/users/adowling2/events{/privacy}", "received_events_url": "https://api.github.com/users/adowling2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-09-23T18:48:22Z", "updated_at": "2020-09-28T16:11:07Z", "closed_at": "2020-09-28T16:11:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@jialuw96 found this bug in parmest. Here is the MWE:\r\n\r\n```\r\nimport numpy as np\r\nimport pandas as pd\r\nfrom itertools import product\r\nimport pyomo.contrib.parmest.parmest as parmest\r\nfrom rooney_biegler import rooney_biegler_model\r\n\r\n### Parameter estimation\r\n\r\n# Vars to estimate\r\ntheta_names = ['asymptote', 'rate_constant']\r\n\r\n# Data\r\ndata = pd.DataFrame(data=[[1,8.3],[2,10.3],[3,19.0],\r\n                          [4,16.0],[5,15.6],[7,19.8]],\r\n                    columns=['hour', 'y'])\r\n\r\n# Sum of squared error function\r\ndef SSE(model, data):  \r\n    expr = sum((data.y[i] - model.response_function[data.hour[i]])**2 for i in data.index)\r\n    return expr\r\n\r\n\r\nsolver_options = {\"max_iter\": 6000}  # not really needed in this case\r\n\r\npest = parmest.Estimator(rooney_biegler_model, data, theta_names, SSE, solver_options)\r\nobj, theta = pest.theta_est(return_values=['response_function'])\r\nprint(obj)\r\nprint(theta)\r\n```\r\n\r\nAnd here is the output/error message:\r\n```\r\nIpopt 3.12.10: \r\n\r\n******************************************************************************\r\nThis program contains Ipopt, a library for large-scale nonlinear optimization.\r\n Ipopt is released as open source code under the Eclipse Public License (EPL).\r\n         For more information visit http://projects.coin-or.org/Ipopt\r\n******************************************************************************\r\n\r\nThis is Ipopt version 3.12.10, running with linear solver mumps.\r\nNOTE: Other linear solvers might be more efficient (see Ipopt documentation).\r\n\r\nNumber of nonzeros in equality constraint Jacobian...:       24\r\nNumber of nonzeros in inequality constraint Jacobian.:        0\r\nNumber of nonzeros in Lagrangian Hessian.............:       18\r\n\r\nTotal number of variables............................:       14\r\n                     variables with only lower bounds:        0\r\n                variables with lower and upper bounds:        0\r\n                     variables with only upper bounds:        0\r\nTotal number of equality constraints.................:       12\r\nTotal number of inequality constraints...............:        0\r\n        inequality constraints with only lower bounds:        0\r\n   inequality constraints with lower and upper bounds:        0\r\n        inequality constraints with only upper bounds:        0\r\n\r\niter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls\r\n   0  1.6754267e+01 1.50e+01 7.48e+00  -1.0 0.00e+00    -  0.00e+00 0.00e+00   0\r\n   1  4.4025852e+00 1.11e-16 2.09e+00  -1.0 1.91e+01    -  1.00e+00 1.00e+00f  1\r\n   2  4.3387273e+00 0.00e+00 5.38e-01  -1.0 1.95e-01    -  1.00e+00 1.00e+00f  1\r\n   3  4.3317515e+00 0.00e+00 5.35e-02  -1.7 1.28e-01    -  1.00e+00 1.00e+00f  1\r\n   4  4.3317112e+00 0.00e+00 2.78e-04  -2.5 6.94e-03    -  1.00e+00 1.00e+00f  1\r\n   5  4.3317112e+00 0.00e+00 1.27e-08  -5.7 5.68e-05    -  1.00e+00 1.00e+00f  1\r\n   6  4.3317112e+00 0.00e+00 8.88e-15  -9.0 1.88e-09    -  1.00e+00 1.00e+00f  1\r\n\r\nNumber of Iterations....: 6\r\n\r\n                                   (scaled)                 (unscaled)\r\nObjective...............:   4.3317112136568863e+00    4.3317112136568863e+00\r\nDual infeasibility......:   8.8817841970012523e-15    8.8817841970012523e-15\r\nConstraint violation....:   0.0000000000000000e+00    0.0000000000000000e+00\r\nComplementarity.........:   0.0000000000000000e+00    0.0000000000000000e+00\r\nOverall NLP error.......:   8.8817841970012523e-15    8.8817841970012523e-15\r\n\r\n\r\nNumber of objective function evaluations             = 7\r\nNumber of objective gradient evaluations             = 7\r\nNumber of equality constraint evaluations            = 7\r\nNumber of inequality constraint evaluations          = 0\r\nNumber of equality constraint Jacobian evaluations   = 7\r\nNumber of inequality constraint Jacobian evaluations = 0\r\nNumber of Lagrangian Hessian evaluations             = 6\r\nTotal CPU secs in IPOPT (w/o function evaluations)   =      0.024\r\nTotal CPU secs in NLP function evaluations           =      0.001\r\n\r\nEXIT: Optimal Solution Found.\r\nTraceback (most recent call last):\r\n  File \"parmest_return_values_fail.py\", line 28, in <module>\r\n    obj, theta = pest.theta_est(return_values=['response_function'])\r\n  File \"/Users/adowling/DowlingLab/pyomo/pyomo/contrib/parmest/parmest.py\", line 798, in theta_est\r\n    return self._Q_opt(solver=solver, return_values=return_values,\r\n  File \"/Users/adowling/DowlingLab/pyomo/pyomo/contrib/parmest/parmest.py\", line 557, in _Q_opt\r\n    for exp_i in stsolver.ef_instance.component_objects(Block, descend_into=False):\r\nAttributeError: 'StochSolver' object has no attribute 'ef_instance'\r\n```\r\n\r\nI am about to create/link a PR that includes this MWE.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1642/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1636", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1636/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1636/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1636/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1636", "id": 704659553, "node_id": "MDU6SXNzdWU3MDQ2NTk1NTM=", "number": 1636, "title": "PyomoTask implicitly creates ArgumentParser objects through pyutilib.workflow", "user": {"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-09-18T21:10:18Z", "updated_at": "2021-05-18T19:43:32Z", "closed_at": "2021-05-18T19:43:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "# Summary\r\nPyomo's use of `pyutilib.workflow` creates an implicit dependence on `sys.argv`, which is not present in some environments.\r\n\r\n# Description\r\nThis was first reported on the the [pyomo-forumn](https://groups.google.com/g/pyomo-forum/c/mDlB6acNLKI/m/RG_lOXT8BQAJ) when running Pyomo within QGIS.  Importing `pyomo.environ` leads to an `AttributeError`.  The full stack trace is:\r\n\r\n```python\r\n>>> import sys\r\n>>> del sys.argv\r\n>>> import pyomo.environ\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/space/home/jdsiiro/Research/pyomo/pyomo/environ/__init__.py\", line 99, in <module>\r\n    _import_packages()\r\n  File \"/space/home/jdsiiro/Research/pyomo/pyomo/environ/__init__.py\", line 71, in _import_packages\r\n    _do_import(pname)\r\n  File \"/space/home/jdsiiro/Research/pyomo/pyomo/environ/__init__.py\", line 19, in _do_import\r\n    __import__(pkg_name, globals(), locals(), [], -1)\r\n  File \"/space/home/jdsiiro/Research/pyomo/pyomo/core/__init__.py\", line 15, in <module>\r\n    import pyomo.core.preprocess\r\n  File \"/space/home/jdsiiro/Research/pyomo/pyomo/core/preprocess/__init__.py\", line 11, in <module>\r\n    import pyomo.core.preprocess.simple_preprocessor\r\n  File \"/space/home/jdsiiro/Research/pyomo/pyomo/core/preprocess/simple_preprocessor.py\", line 18, in <module>\r\n    def simple_preprocessor(data, model=None):\r\n  File \"/space/home/jdsiiro/Research/pyomo/pyomo/common/_task.py\", line 344, in my_decorator\r\n    return PyomoTask_tmp()\r\n  File \"/space/home/jdsiiro/Research/pyomo/pyomo/common/_task.py\", line 277, in __init__\r\n    PyomoTask.__init__(self, *args, **kwargs)\r\n  File \"/space/home/jdsiiro/Research/pyomo/pyomo/common/_task.py\", line 123, in __init__\r\n    PyomoTaskPlugin.__init__(self, *args, **kwargs)\r\n  File \"/space/home/jdsiiro/Research/pyomo/pyomo/common/_task.py\", line 113, in __init__\r\n    pyutilib.workflow.Task.__init__(self, *args, **kwds)\r\n  File \"/space/home/jdsiiro/Research/pyutilib/pyutilib/workflow/task.py\", line 42, in __init__\r\n    self._create_parser(parser)\r\n  File \"/space/home/jdsiiro/Research/pyutilib/pyutilib/workflow/task.py\", line 206, in _create_parser\r\n    self._parser = argparse.ArgumentParser()\r\n  File \"/projects/sems/install/rhel7-x86_64/pyomo/compiler/python/2.7.18/lib/python2.7/argparse.py\", line 1590, in __init__\r\n    prog = _os.path.basename(_sys.argv[0])\r\nAttributeError: 'module' object has no attribute 'argv'\r\n```\r\n\r\n# Workaround\r\nThere is a workaround (suggested in the same thread):\r\n```python\r\nimport sys\r\nif not getattr(sys, \"argv\", []):\r\n    sys.argv = [\"\"]\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1636/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1627", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1627/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1627/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1627/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1627", "id": 702204234, "node_id": "MDU6SXNzdWU3MDIyMDQyMzQ=", "number": 1627, "title": "Bug when converting units of expression with value 0", "user": {"login": "andrewlee94", "id": 16341343, "node_id": "MDQ6VXNlcjE2MzQxMzQz", "avatar_url": "https://avatars.githubusercontent.com/u/16341343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewlee94", "html_url": "https://github.com/andrewlee94", "followers_url": "https://api.github.com/users/andrewlee94/followers", "following_url": "https://api.github.com/users/andrewlee94/following{/other_user}", "gists_url": "https://api.github.com/users/andrewlee94/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewlee94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewlee94/subscriptions", "organizations_url": "https://api.github.com/users/andrewlee94/orgs", "repos_url": "https://api.github.com/users/andrewlee94/repos", "events_url": "https://api.github.com/users/andrewlee94/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewlee94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "carldlaird", "id": 18519762, "node_id": "MDQ6VXNlcjE4NTE5NzYy", "avatar_url": "https://avatars.githubusercontent.com/u/18519762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carldlaird", "html_url": "https://github.com/carldlaird", "followers_url": "https://api.github.com/users/carldlaird/followers", "following_url": "https://api.github.com/users/carldlaird/following{/other_user}", "gists_url": "https://api.github.com/users/carldlaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/carldlaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carldlaird/subscriptions", "organizations_url": "https://api.github.com/users/carldlaird/orgs", "repos_url": "https://api.github.com/users/carldlaird/repos", "events_url": "https://api.github.com/users/carldlaird/events{/privacy}", "received_events_url": "https://api.github.com/users/carldlaird/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "carldlaird", "id": 18519762, "node_id": "MDQ6VXNlcjE4NTE5NzYy", "avatar_url": "https://avatars.githubusercontent.com/u/18519762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carldlaird", "html_url": "https://github.com/carldlaird", "followers_url": "https://api.github.com/users/carldlaird/followers", "following_url": "https://api.github.com/users/carldlaird/following{/other_user}", "gists_url": "https://api.github.com/users/carldlaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/carldlaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carldlaird/subscriptions", "organizations_url": "https://api.github.com/users/carldlaird/orgs", "repos_url": "https://api.github.com/users/carldlaird/repos", "events_url": "https://api.github.com/users/carldlaird/events{/privacy}", "received_events_url": "https://api.github.com/users/carldlaird/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2020-09-15T19:38:25Z", "updated_at": "2023-04-25T17:58:57Z", "closed_at": "2023-04-25T17:58:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using the `units.convert` method incorrectly returns an exception if used on an expression with value 0, as shown in the example below.\r\n\r\n```\r\nfrom pyomo.environ import units\r\n\r\nunits.convert(0*units.Pa, to_units=units.kPa)\r\n\r\n>>> InconsistentUnitsError: Error in convert: units not compatible.: None not compatible with kilopascal.\r\n```\r\n\r\nThe above code works if the expression is given a small but non-zero value.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1627/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1601", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1601/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1601/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1601/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1601", "id": 682248707, "node_id": "MDU6SXNzdWU2ODIyNDg3MDc=", "number": 1601, "title": "XPRESS Solver plugin has some oddities", "user": {"login": "mrmundt", "id": 55767766, "node_id": "MDQ6VXNlcjU1NzY3NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/55767766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrmundt", "html_url": "https://github.com/mrmundt", "followers_url": "https://api.github.com/users/mrmundt/followers", "following_url": "https://api.github.com/users/mrmundt/following{/other_user}", "gists_url": "https://api.github.com/users/mrmundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrmundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrmundt/subscriptions", "organizations_url": "https://api.github.com/users/mrmundt/orgs", "repos_url": "https://api.github.com/users/mrmundt/repos", "events_url": "https://api.github.com/users/mrmundt/events{/privacy}", "received_events_url": "https://api.github.com/users/mrmundt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-19T23:34:55Z", "updated_at": "2022-02-02T15:10:43Z", "closed_at": "2022-02-02T15:10:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When completing the work for #1517 , I ran across an oddity in the `XPRESS` plugin. Namely, in `pyomo/solvers/plugins/solvers/XPRESS.py `, starting at line `372`, there are a lot of undefined variable names and references. \r\n\r\nI am sure this would cause issues once we we are able to test XPRESS and want to keep the oddities on our radar.\r\n\r\nThe note from 1517:\r\n\r\n> ### TODO: What is going on here with field_name, and shortly thereafter, with variable_status and whatnot? They've never been defined.\r\n> ### It seems like this is trying to mimic the CPLEX solver but has some issues", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1601/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1599", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1599/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1599/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1599/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1599", "id": 679574268, "node_id": "MDU6SXNzdWU2Nzk1NzQyNjg=", "number": 1599, "title": "Error while using covariance estimation feature in parmest", "user": {"login": "notesofdabbler", "id": 7705554, "node_id": "MDQ6VXNlcjc3MDU1NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7705554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notesofdabbler", "html_url": "https://github.com/notesofdabbler", "followers_url": "https://api.github.com/users/notesofdabbler/followers", "following_url": "https://api.github.com/users/notesofdabbler/following{/other_user}", "gists_url": "https://api.github.com/users/notesofdabbler/gists{/gist_id}", "starred_url": "https://api.github.com/users/notesofdabbler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notesofdabbler/subscriptions", "organizations_url": "https://api.github.com/users/notesofdabbler/orgs", "repos_url": "https://api.github.com/users/notesofdabbler/repos", "events_url": "https://api.github.com/users/notesofdabbler/events{/privacy}", "received_events_url": "https://api.github.com/users/notesofdabbler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "adowling2", "id": 13946870, "node_id": "MDQ6VXNlcjEzOTQ2ODcw", "avatar_url": "https://avatars.githubusercontent.com/u/13946870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adowling2", "html_url": "https://github.com/adowling2", "followers_url": "https://api.github.com/users/adowling2/followers", "following_url": "https://api.github.com/users/adowling2/following{/other_user}", "gists_url": "https://api.github.com/users/adowling2/gists{/gist_id}", "starred_url": "https://api.github.com/users/adowling2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adowling2/subscriptions", "organizations_url": "https://api.github.com/users/adowling2/orgs", "repos_url": "https://api.github.com/users/adowling2/repos", "events_url": "https://api.github.com/users/adowling2/events{/privacy}", "received_events_url": "https://api.github.com/users/adowling2/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adowling2", "id": 13946870, "node_id": "MDQ6VXNlcjEzOTQ2ODcw", "avatar_url": "https://avatars.githubusercontent.com/u/13946870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adowling2", "html_url": "https://github.com/adowling2", "followers_url": "https://api.github.com/users/adowling2/followers", "following_url": "https://api.github.com/users/adowling2/following{/other_user}", "gists_url": "https://api.github.com/users/adowling2/gists{/gist_id}", "starred_url": "https://api.github.com/users/adowling2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adowling2/subscriptions", "organizations_url": "https://api.github.com/users/adowling2/orgs", "repos_url": "https://api.github.com/users/adowling2/repos", "events_url": "https://api.github.com/users/adowling2/events{/privacy}", "received_events_url": "https://api.github.com/users/adowling2/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2020-08-15T13:20:28Z", "updated_at": "2022-02-23T15:42:14Z", "closed_at": "2022-02-23T15:42:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to use parmest for a simple series reaction A->B->C with estimation of covariance using the following command but it gives an error.\r\n```\r\nobj, theta, cov = pest.theta_est(calc_cov=True)\r\n```\r\nThe following [notebook](https://github.com/notesofdabbler/learn_pyomo/blob/master/wk_parmest/ABC_parmest_with_Cov.ipynb) has the example and the results of the above command where the error occurs. I would appreciate any suggestions on how to address the issue.\r\n\r\nAlso, to run this code I had to make the following change in line 104 of [inverse_reduced_hessian.py](https://github.com/Pyomo/pyomo/blob/master/pyomo/contrib/interior_point/inverse_reduced_hessian.py)\r\n```\r\n# current line 104 which gives another error\r\n(v.has_ub() and v.ub - pyo.value(b) <= bound_tolerance):\r\n# changed b to v in the line above\r\n(v.has_ub() and v.ub - pyo.value(v) <= bound_tolerance):\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1599/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1571", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1571/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1571/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1571/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1571", "id": 664695679, "node_id": "MDU6SXNzdWU2NjQ2OTU2Nzk=", "number": 1571, "title": "Scaling transformation does not work with References", "user": {"login": "Robbybp", "id": 8885032, "node_id": "MDQ6VXNlcjg4ODUwMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/8885032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Robbybp", "html_url": "https://github.com/Robbybp", "followers_url": "https://api.github.com/users/Robbybp/followers", "following_url": "https://api.github.com/users/Robbybp/following{/other_user}", "gists_url": "https://api.github.com/users/Robbybp/gists{/gist_id}", "starred_url": "https://api.github.com/users/Robbybp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Robbybp/subscriptions", "organizations_url": "https://api.github.com/users/Robbybp/orgs", "repos_url": "https://api.github.com/users/Robbybp/repos", "events_url": "https://api.github.com/users/Robbybp/events{/privacy}", "received_events_url": "https://api.github.com/users/Robbybp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-23T18:54:14Z", "updated_at": "2021-01-22T19:29:38Z", "closed_at": "2021-01-22T19:29:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "References break the scaling transformation because it renames the underlying components, then tries to scale the now-broken `Reference` components. Some options:\r\n1. Rename all components (breaking references), then don't try to scale references\r\n2. Don't rename components\r\n3. Create new, renamed components but don't delete the old components\r\n\r\nI think I'm in favor of option 1 for now as long as we document that the scaling transformation breaks references. Maybe we can have a `rename_scaled_components` option?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1571/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1570", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1570/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1570/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1570/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1570", "id": 664604047, "node_id": "MDU6SXNzdWU2NjQ2MDQwNDc=", "number": 1570, "title": "Setting var .value with units does not behave as expected", "user": {"login": "carldlaird", "id": 18519762, "node_id": "MDQ6VXNlcjE4NTE5NzYy", "avatar_url": "https://avatars.githubusercontent.com/u/18519762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carldlaird", "html_url": "https://github.com/carldlaird", "followers_url": "https://api.github.com/users/carldlaird/followers", "following_url": "https://api.github.com/users/carldlaird/following{/other_user}", "gists_url": "https://api.github.com/users/carldlaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/carldlaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carldlaird/subscriptions", "organizations_url": "https://api.github.com/users/carldlaird/orgs", "repos_url": "https://api.github.com/users/carldlaird/repos", "events_url": "https://api.github.com/users/carldlaird/events{/privacy}", "received_events_url": "https://api.github.com/users/carldlaird/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "carldlaird", "id": 18519762, "node_id": "MDQ6VXNlcjE4NTE5NzYy", "avatar_url": "https://avatars.githubusercontent.com/u/18519762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carldlaird", "html_url": "https://github.com/carldlaird", "followers_url": "https://api.github.com/users/carldlaird/followers", "following_url": "https://api.github.com/users/carldlaird/following{/other_user}", "gists_url": "https://api.github.com/users/carldlaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/carldlaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carldlaird/subscriptions", "organizations_url": "https://api.github.com/users/carldlaird/orgs", "repos_url": "https://api.github.com/users/carldlaird/repos", "events_url": "https://api.github.com/users/carldlaird/events{/privacy}", "received_events_url": "https://api.github.com/users/carldlaird/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "carldlaird", "id": 18519762, "node_id": "MDQ6VXNlcjE4NTE5NzYy", "avatar_url": "https://avatars.githubusercontent.com/u/18519762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carldlaird", "html_url": "https://github.com/carldlaird", "followers_url": "https://api.github.com/users/carldlaird/followers", "following_url": "https://api.github.com/users/carldlaird/following{/other_user}", "gists_url": "https://api.github.com/users/carldlaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/carldlaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carldlaird/subscriptions", "organizations_url": "https://api.github.com/users/carldlaird/orgs", "repos_url": "https://api.github.com/users/carldlaird/repos", "events_url": "https://api.github.com/users/carldlaird/events{/privacy}", "received_events_url": "https://api.github.com/users/carldlaird/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-07-23T16:14:23Z", "updated_at": "2023-01-30T20:20:09Z", "closed_at": "2023-01-30T20:20:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Pyomo allows a user to set the .value property on a var where the rhs contains an expression with units. This either needs to throw an error or do the conversion, but not silently allow this with no conversion. This needs to be investigated - I believe that this will just ignore the units now (which is problematic).\r\n\r\nNeed to decide if we will do implicit conversion or throw an error (and require v.set_unitted_value(...)) instead. @andrewlee94 favors the explicit use of something set_unitted_value.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1570/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1569", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1569/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1569/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1569/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1569", "id": 664565078, "node_id": "MDU6SXNzdWU2NjQ1NjUwNzg=", "number": 1569, "title": "Error using IntegerSet as a Var domain", "user": {"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-23T15:19:07Z", "updated_at": "2022-07-21T23:28:03Z", "closed_at": "2022-07-21T23:28:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following was reported on the [forum](https://groups.google.com/d/msgid/pyomo-forum/f2766be1-8292-4d5f-8c74-4f9fa522bb27o%40googlegroups.com?utm_medium=email&utm_source=footer):\r\n\r\n[...] I wasn't able to create \"Var\" objects. To give an example, my code looks the following way:\r\n```\r\nmodel= ConcreteModel()\r\nmodel.counter=Set(initialize=counter) where \"counter\" is the unique list of items in a particular list\r\nmodel.volume=Var(model.counter,domain=IntegerSet,initialize=1)\r\n```\r\nWhen I run the code, error occurs at the place where I create my Var object and the message says: \"`TypeError: __new__() takes 1 positional argument but 3 were given`\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1569/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1564", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1564/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1564/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1564/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1564", "id": 660987311, "node_id": "MDU6SXNzdWU2NjA5ODczMTE=", "number": 1564, "title": "ValueError: The truth value of a MultiIndex is ambiguous is caused by set.py", "user": {"login": "stigrs", "id": 11300400, "node_id": "MDQ6VXNlcjExMzAwNDAw", "avatar_url": "https://avatars.githubusercontent.com/u/11300400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stigrs", "html_url": "https://github.com/stigrs", "followers_url": "https://api.github.com/users/stigrs/followers", "following_url": "https://api.github.com/users/stigrs/following{/other_user}", "gists_url": "https://api.github.com/users/stigrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/stigrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stigrs/subscriptions", "organizations_url": "https://api.github.com/users/stigrs/orgs", "repos_url": "https://api.github.com/users/stigrs/repos", "events_url": "https://api.github.com/users/stigrs/events{/privacy}", "received_events_url": "https://api.github.com/users/stigrs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-19T18:21:41Z", "updated_at": "2020-09-14T00:17:31Z", "closed_at": "2020-09-14T00:17:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "The PyomoGallery network interdiction examples fails with the error:\r\n`ValueError: The truth value of a MultiIndex is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().`\r\n\r\nThe error is fixed if line 414 in pyomo/core/base/set.py is changed from:\r\n`elif not _val:`\r\nto\r\n`elif _val is None:`\r\n\r\nI am running Anaconda Python 3.6.5 under Windows 10 (64 bit)", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1564/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1564/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1544", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1544/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1544/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1544/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1544", "id": 650764042, "node_id": "MDU6SXNzdWU2NTA3NjQwNDI=", "number": 1544, "title": "Issues when using rename_components with reference components", "user": {"login": "Robbybp", "id": 8885032, "node_id": "MDQ6VXNlcjg4ODUwMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/8885032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Robbybp", "html_url": "https://github.com/Robbybp", "followers_url": "https://api.github.com/users/Robbybp/followers", "following_url": "https://api.github.com/users/Robbybp/following{/other_user}", "gists_url": "https://api.github.com/users/Robbybp/gists{/gist_id}", "starred_url": "https://api.github.com/users/Robbybp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Robbybp/subscriptions", "organizations_url": "https://api.github.com/users/Robbybp/orgs", "repos_url": "https://api.github.com/users/Robbybp/repos", "events_url": "https://api.github.com/users/Robbybp/events{/privacy}", "received_events_url": "https://api.github.com/users/Robbybp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-03T20:55:19Z", "updated_at": "2020-07-23T18:38:21Z", "closed_at": "2020-07-23T18:38:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to perform a scaling transformation on an IDAES model that has several Reference components, but am getting some issues that I haven't been able to really pin down. The issues seem to occur after calling `rename_components`, and I can reproduce a similar, though not identical, error, by running the following code:\r\n\r\n```python\r\nfrom pyomo.environ import *\r\nfrom pyomo.util.components import rename_components\r\n\r\nm = ConcreteModel()\r\n\r\n@m.Block([1,2,3], ['a','b'])\r\ndef b(b, t, j):\r\n    b.v = Var()\r\n\r\nm.r = Reference(m.b[:,'a'].v)\r\n\r\nc_list = list(m.component_objects(Var)\r\nrename_components(m, c_list, 'new_')\r\n\r\nlist(m.new_r)\r\n```\r\n\r\nFrom the attribute error this gives me, the issue seems to be that the `_call_stack` of the underlying slice contains old names. It seems like a workaround would be to exclude Reference components from the scaling transformation or when renaming, but I'm not sure how to do this. Would this be possible/easy to implement?\r\n\r\nI think that this is the underlying cause of the error that I'm getting with my IDAES model, which is due to `_comp` being `None` in the `__next__` method of `_IndexedComponents_slice_iter`, but I haven't been able to reproduce that exactly. I raised an issue about this in IDAES/workspace: https://github.com/IDAES/workspace/issues/114", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1544/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1535", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1535/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1535/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1535/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1535", "id": 647697457, "node_id": "MDU6SXNzdWU2NDc2OTc0NTc=", "number": 1535, "title": "Bug in sensitivity toolbox - not updating expression values", "user": {"login": "adowling2", "id": 13946870, "node_id": "MDQ6VXNlcjEzOTQ2ODcw", "avatar_url": "https://avatars.githubusercontent.com/u/13946870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adowling2", "html_url": "https://github.com/adowling2", "followers_url": "https://api.github.com/users/adowling2/followers", "following_url": "https://api.github.com/users/adowling2/following{/other_user}", "gists_url": "https://api.github.com/users/adowling2/gists{/gist_id}", "starred_url": "https://api.github.com/users/adowling2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adowling2/subscriptions", "organizations_url": "https://api.github.com/users/adowling2/orgs", "repos_url": "https://api.github.com/users/adowling2/repos", "events_url": "https://api.github.com/users/adowling2/events{/privacy}", "received_events_url": "https://api.github.com/users/adowling2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-29T21:55:55Z", "updated_at": "2020-07-22T22:08:21Z", "closed_at": "2020-07-22T22:08:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Here is a MWE adapted from ``parameter.py`` (example:\r\n```\r\nfrom pyomo.environ import * \r\nfrom pyomo.contrib.sensitivity_toolbox.sens import sipopt\r\n\r\ndef create_model():\r\n    m = ConcreteModel()\r\n    \r\n    m.x1 = Var(initialize = 0.15, within=NonNegativeReals)\r\n    m.x2 = Var(initialize = 0.15, within=NonNegativeReals)\r\n    m.x3 = Var(initialize = 0.0, within=NonNegativeReals)\r\n    \r\n    m.eta1 = Param(initialize=4.5,mutable=True)\r\n    m.eta2 = Param(initialize=1.0,mutable=True)\r\n    \r\n    m.const1 = Constraint(expr=6*m.x1+3*m.x2+2*m.x3-m.eta1 ==0)\r\n    m.const2 = Constraint(expr=m.eta2*m.x1+m.x2-m.x3-1 ==0)\r\n    m.cost = Objective(expr=m.x1**2+m.x2**2+m.x3**2)\r\n    \r\n    return m \r\n\r\n\r\nif __name__=='__main__':\r\n    m = create_model()    \r\n\r\n    m.perturbed_eta1 = Param(initialize = 4.0)\r\n    m.perturbed_eta2 = Param(initialize = 1.0)\r\n\r\n\r\n    m_sipopt = sipopt(m,[m.eta1,m.eta2],\r\n                        [m.perturbed_eta1,m.perturbed_eta2],\r\n                        streamSoln=True)\r\n    \r\n    print(\"\\nOriginal parameter values:\")\r\n    print(\"\\teta1 =\",m.eta1())\r\n    print(\"\\teta2 =\",m.eta2())\r\n    \r\n    print(\"Solution with the original parameter values:\")\r\n    print(\"\\tObjective =\",value(m.cost))\r\n    print(\"\\tx1 =\",m.x1())\r\n    print(\"\\tx2 =\",m.x2())\r\n    print(\"\\tx3 =\",m.x3())\r\n    \r\n    print(\"\\nNew parameter values:\")\r\n    print(\"\\teta1 =\",m_sipopt.perturbed_eta1())\r\n    print(\"\\teta2 =\",m_sipopt.perturbed_eta2())\r\n    \r\n    print(\"(Approximate) solution with the new parameter values:\")\r\n    print(\"\\tObjective =\",value(m_sipopt.cost))\r\n    print(\"\\tx1 =\",m_sipopt.x1())\r\n    print(\"\\tx2 =\",m_sipopt.x2())\r\n    print(\"\\tx3 =\",m_sipopt.x3())\r\n```\r\n\r\nThe problem: The value stored in `m.cost` appears to be at the initial point, not the optimal solution.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1535/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1499", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1499/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1499/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1499/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1499", "id": 638215080, "node_id": "MDU6SXNzdWU2MzgyMTUwODA=", "number": 1499, "title": "MindtPy solver bug", "user": {"login": "yifanguan", "id": 31666298, "node_id": "MDQ6VXNlcjMxNjY2Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/31666298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yifanguan", "html_url": "https://github.com/yifanguan", "followers_url": "https://api.github.com/users/yifanguan/followers", "following_url": "https://api.github.com/users/yifanguan/following{/other_user}", "gists_url": "https://api.github.com/users/yifanguan/gists{/gist_id}", "starred_url": "https://api.github.com/users/yifanguan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yifanguan/subscriptions", "organizations_url": "https://api.github.com/users/yifanguan/orgs", "repos_url": "https://api.github.com/users/yifanguan/repos", "events_url": "https://api.github.com/users/yifanguan/events{/privacy}", "received_events_url": "https://api.github.com/users/yifanguan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-13T19:10:59Z", "updated_at": "2020-06-30T15:53:09Z", "closed_at": "2020-06-30T15:21:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use MindtPy solver to solve one nonconvex mixed-integer nonlinear programming optimization task.\r\n\r\n**However, I got the following error:**\r\nINFO: ---Starting MindtPy---\r\nINFO: Original model has 2 constraints (0 nonlinear) and 0 disjunctions, with\r\n    58 variables, of which 0 are binary, 58 are integer, and 0 are continuous.\r\nINFO: Objective is nonlinear. Moving it to constraint set.\r\nINFO: NLP 1: Solve relaxed integrality\r\nINFO: NLP 1: OBJ: 0.0  LB: 0.0  UB: inf\r\nTraceback (most recent call last):\r\n  File \"reweigh_mindtpy.py\", line 77, in <module>\r\n    main()\r\n  File \"reweigh_mindtpy.py\", line 41, in main\r\n    results = solver.solve(model, mip_solver='glpk', nlp_solver='ipopt', integer_tolerance=1, tee=True) # tee option control output of solver\r\n  File \"/home/yfguan/anaconda3/envs/dlcourse/lib/python3.7/site-packages/pyomo/contrib/mindtpy/MindtPy.py\", line 366, in solve\r\n    MindtPy_initialize_master(solve_data, config)\r\n  File \"/home/yfguan/anaconda3/envs/dlcourse/lib/python3.7/site-packages/pyomo/contrib/mindtpy/initialization.py\", line 50, in MindtPy_initialize_master\r\n    init_rNLP(solve_data, config)\r\n  File \"/home/yfguan/anaconda3/envs/dlcourse/lib/python3.7/site-packages/pyomo/contrib/mindtpy/initialization.py\", line 87, in init_rNLP\r\n    config, ignore_integrality=True)\r\n  File \"/home/yfguan/anaconda3/envs/dlcourse/lib/python3.7/site-packages/pyomo/contrib/gdpopt/util.py\", line 199, in copy_var_list_values\r\n    v_to.set_value(value(v_from, exception=False))\r\n  File \"/home/yfguan/anaconda3/envs/dlcourse/lib/python3.7/site-packages/pyomo/core/base/var.py\", line 173, in set_value\r\n    if valid or self._valid_value(val):\r\n  File \"/home/yfguan/anaconda3/envs/dlcourse/lib/python3.7/site-packages/pyomo/core/base/var.py\", line 185, in _valid_value\r\n    \"domain %s\" % (val, type(val), self.domain))\r\n**ValueError: Numeric value `8.79337969002068` (<class 'float'>) is not in domain PositiveIntegers**\r\n\r\n\r\nIn short, the objective function is a summation of (probability written by variables - fixed numeric probability)^2.\r\n**My model details:** \r\n58 Var Declarations\r\n    w0 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w1 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w10 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w11 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w12 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w13 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w14 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w15 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w16 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w17 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w18 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w19 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w2 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w20 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w21 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w22 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w23 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w24 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w25 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w26 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w27 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w28 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w29 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w3 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w30 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w31 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w32 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w33 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w34 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w35 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w36 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w37 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w38 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w39 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w4 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w40 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w41 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w42 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w43 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w44 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w45 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w46 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w47 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w48 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w49 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w5 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w50 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w51 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w52 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w53 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w54 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w55 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w56 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w57 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w6 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w7 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w8 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n    w9 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     1 :     1 :  None : False : False : PositiveIntegers\r\n\r\n1 Objective Declarations\r\n    obj : Size=1, Index=None, Active=True\r\n        Key  : Active : Sense    : Expression\r\n        None :   True : minimize : ((w0 + w1 + w2 + w3 + w4 + w6 + w8 + w10 + w11 + w12 + w13 + w14 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w29 + w30 + w31 + w33 + w35 + w36 + w37 + w38 + w39 + w41 + w42 + w43 + w45 + w46 + w48 + w49 + w50 + w51 + w53 + w55 + w57)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.7413793103448276)**2 + ((w5 + w7 + w9 + w15 + w16 + w27 + w28 + w32 + w34 + w40 + w44 + w47 + w52 + w54 + w56)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.25862068965517243)**2 + ((w0 + w2 + w3 + w7 + w11 + w18 + w19 + w28 + w34 + w37 + w49 + w50 + w51 + w54 + w56 + w57)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.27586206896551724)**2 + ((w1 + w24 + w26 + w31 + w33 + w39 + w40 + w44 + w47)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.15517241379310345)**2 + ((w4 + w5 + w6 + w8 + w9 + w10 + w12 + w13 + w14 + w15 + w16 + w17 + w20 + w21 + w22 + w23 + w25 + w27 + w29 + w30 + w32 + w35 + w38 + w41 + w42 + w45 + w46 + w48 + w52 + w53 + w55)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.5344827586206896)**2 + ((w36 + w43)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.034482758620689655)**2 + ((w19 + w37 + w42)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.05172413793103448)**2 + ((w0 + w1 + w5 + w8 + w9 + w11 + w13 + w15 + w24 + w26 + w31 + w36 + w38 + w44 + w47 + w52 + w54)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.29310344827586204)**2 + ((w2 + w6 + w28)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.05172413793103448)**2 + ((w17 + w21 + w33 + w41 + w49 + w51)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.10344827586206896)**2 + ((w32 + w34 + w39 + w40)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.06896551724137931)**2 + ((w27 + w29 + w50)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.05172413793103448)**2 + ((w7 + w10 + w12 + w16 + w20 + w22 + w23 + w25 + w30 + w35 + w43 + w46 + w48 + w55 + w56)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.25862068965517243)**2 + ((w3 + w57)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.034482758620689655)**2 + ((w45 + w53)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.034482758620689655)**2 + ((w4 + w14 + w18)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.05172413793103448)**2 + ((w0 + w3 + w4 + w9 + w11 + w12 + w14 + w17 + w20 + w22 + w24 + w27 + w28 + w29 + w30 + w33 + w34 + w35 + w37 + w38 + w40 + w41 + w45 + w46 + w53 + w55)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.4482758620689655)**2 + ((w1 + w2 + w5 + w6 + w7 + w8 + w10 + w13 + w15 + w16 + w18 + w19 + w21 + w23 + w25 + w26 + w31 + w32 + w36 + w39 + w42 + w43 + w44 + w47 + w48 + w49 + w50 + w51 + w52 + w54 + w56 + w57)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.5517241379310345)**2 + ((w0 + w1 + w2 + w3 + w4 + w6 + w8 + w10 + w11 + w12 + w13 + w14 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w29 + w30 + w31 + w33 + w35 + w36 + w37 + w38 + w39 + w41 + w42 + w43 + w45 + w46 + w48 + w49 + w50 + w51 + w53 + w55 + w57)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.7413793103448276)**2 + ((w5 + w7 + w9 + w15 + w16 + w27 + w28 + w32 + w34 + w40 + w44 + w47 + w52 + w54 + w56)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.25862068965517243)**2 + ((w0 + w2 + w3 + w7 + w11 + w18 + w19 + w28 + w34 + w37 + w49 + w50 + w51 + w54 + w56 + w57)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.27586206896551724)**2 + ((w1 + w24 + w26 + w31 + w33 + w39 + w40 + w44 + w47)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.15517241379310345)**2 + ((w4 + w5 + w6 + w8 + w9 + w10 + w12 + w13 + w14 + w15 + w16 + w17 + w20 + w21 + w22 + w23 + w25 + w27 + w29 + w30 + w32 + w35 + w38 + w41 + w42 + w45 + w46 + w48 + w52 + w53 + w55)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.5344827586206896)**2 + ((w36 + w43)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.034482758620689655)**2 + ((w19 + w37 + w42)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.05172413793103448)**2 + ((w0 + w1 + w5 + w8 + w9 + w11 + w13 + w15 + w24 + w26 + w31 + w36 + w38 + w44 + w47 + w52 + w54)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.29310344827586204)**2 + ((w2 + w6 + w28)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.05172413793103448)**2 + ((w17 + w21 + w33 + w41 + w49 + w51)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.10344827586206896)**2 + ((w32 + w34 + w39 + w40)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.06896551724137931)**2 + ((w27 + w29 + w50)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.05172413793103448)**2 + ((w7 + w10 + w12 + w16 + w20 + w22 + w23 + w25 + w30 + w35 + w43 + w46 + w48 + w55 + w56)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.25862068965517243)**2 + ((w3 + w57)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.034482758620689655)**2 + ((w45 + w53)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.034482758620689655)**2 + ((w4 + w14 + w18)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.05172413793103448)**2 + ((w0 + w3 + w4 + w9 + w11 + w12 + w14 + w17 + w20 + w22 + w24 + w27 + w28 + w29 + w30 + w33 + w34 + w35 + w37 + w38 + w40 + w41 + w45 + w46 + w53 + w55)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.4482758620689655)**2 + ((w1 + w2 + w5 + w6 + w7 + w8 + w10 + w13 + w15 + w16 + w18 + w19 + w21 + w23 + w25 + w26 + w31 + w32 + w36 + w39 + w42 + w43 + w44 + w47 + w48 + w49 + w50 + w51 + w52 + w54 + w56 + w57)/(w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57) - 0.5517241379310345)**2\r\n\r\n2 Constraint Declarations\r\n    constraint0 : Size=1, Index=None, Active=True\r\n        Key  : Lower : Body                                                                                                                                                                                                                                                                                                                                            : Upper : Active\r\n        None : 500.0 : w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57 :  +Inf :   True\r\n    constraint1 : Size=1, Index=None, Active=True\r\n        Key  : Lower : Body                                                                                                                                                                                                                                                                                                                                            : Upper : Active\r\n        None :  -Inf : w0 + w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21 + w22 + w23 + w24 + w25 + w26 + w27 + w28 + w29 + w30 + w31 + w32 + w33 + w34 + w35 + w36 + w37 + w38 + w39 + w40 + w41 + w42 + w43 + w44 + w45 + w46 + w47 + w48 + w49 + w50 + w51 + w52 + w53 + w54 + w55 + w56 + w57 : 521.0 :   True\r\n\r\n61 Declarations: w0 w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11 w12 w13 w14 w15 w16 w17 w18 w19 w20 w21 w22 w23 w24 w25 w26 w27 w28 w29 w30 w31 w32 w33 w34 w35 w36 w37 w38 w39 w40 w41 w42 w43 w44 w45 w46 w47 w48 w49 w50 w51 w52 w53 w54 w55 w56 w57 constraint0 constraint1 obj\r\n\r\nAny help will be appreciated!\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1499/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1496", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1496/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1496/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1496/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1496", "id": 637973537, "node_id": "MDU6SXNzdWU2Mzc5NzM1Mzc=", "number": 1496, "title": "Inconsistent conversion of expression to bool between 2.7 and 3.x", "user": {"login": "carldlaird", "id": 18519762, "node_id": "MDQ6VXNlcjE4NTE5NzYy", "avatar_url": "https://avatars.githubusercontent.com/u/18519762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carldlaird", "html_url": "https://github.com/carldlaird", "followers_url": "https://api.github.com/users/carldlaird/followers", "following_url": "https://api.github.com/users/carldlaird/following{/other_user}", "gists_url": "https://api.github.com/users/carldlaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/carldlaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carldlaird/subscriptions", "organizations_url": "https://api.github.com/users/carldlaird/orgs", "repos_url": "https://api.github.com/users/carldlaird/repos", "events_url": "https://api.github.com/users/carldlaird/events{/privacy}", "received_events_url": "https://api.github.com/users/carldlaird/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-06-12T19:57:13Z", "updated_at": "2021-05-19T05:48:05Z", "closed_at": "2021-05-19T05:48:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I have the following code:\r\n```\r\nfrom pyomo.environ import *\r\n\r\nm = ConcreteModel()\r\nm.x = Var()\r\nm.y = Var()\r\n\r\nm.con = Constraint(expr= m.x == m.y)\r\nprint(bool(m.con.lower == 0.0))\r\nprint(bool(m.con.lower != 0.0))\r\n```\r\n\r\nIn Python 3.x it prints:\r\n```\r\nTrue\r\nFalse\r\n```\r\n\r\nIn Python 2.7 it prints\r\n```\r\nTrue\r\nTrue\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1496/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1496/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1468", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1468/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1468/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1468/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1468", "id": 626048073, "node_id": "MDU6SXNzdWU2MjYwNDgwNzM=", "number": 1468, "title": "SequentialDecomposition inserts numpy float64 values during solution", "user": {"login": "andrewlee94", "id": 16341343, "node_id": "MDQ6VXNlcjE2MzQxMzQz", "avatar_url": "https://avatars.githubusercontent.com/u/16341343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewlee94", "html_url": "https://github.com/andrewlee94", "followers_url": "https://api.github.com/users/andrewlee94/followers", "following_url": "https://api.github.com/users/andrewlee94/following{/other_user}", "gists_url": "https://api.github.com/users/andrewlee94/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewlee94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewlee94/subscriptions", "organizations_url": "https://api.github.com/users/andrewlee94/orgs", "repos_url": "https://api.github.com/users/andrewlee94/repos", "events_url": "https://api.github.com/users/andrewlee94/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewlee94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1056124956, "node_id": "MDU6TGFiZWwxMDU2MTI0OTU2", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.network", "name": "pyomo.network", "color": "9ac4f4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-27T21:34:33Z", "updated_at": "2020-06-02T18:59:21Z", "closed_at": "2020-06-02T18:59:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "An unusual bug was brought to my attention today where a scalar component appeared to be treated as an indexed component.\r\n\r\nThis comes from IDAES, and a Jupyter notebook with an example can be found here: https://github.com/IDAES/workspace/pull/106/files\r\n\r\nIt took a bit of digging, but it seems something unexpected is happening when Pyomo is generating an expression. The expression being generated is:\r\n\r\n`x = 1 - T/temperature_crit`\r\n\r\nIn this particular case, `T` is a float and `temeprature_crit` is a scalar `Var` which happens to be located on another `Block`. When trying to generate this expression, the following exception is raised (shortened traceback at bottom of page).\r\n\r\n```\r\nKeyError: \"Cannot treat the scalar component 'fs.props.benzene.temperature_crit' as an indexed component\"\r\n```\r\n\r\nInterestingly, if I rewrite the expression as:\r\n\r\n`x = 1 - T*temperature_crit**-1`\r\n\r\neverything works.\r\n\r\n**Traceback**\r\n\r\n~/idaes/idaes-dev/idaes/generic_models/properties/core/pure/RPP.py in return_expression(b, cobj, T, dT)\r\n    100             return pressure_sat_comp.dT_expression(b, cobj, T)\r\n    101 \r\n--> 102         x = 1 - T/cobj.temperature_crit\r\n    103 \r\n    104         return (exp((1-x)**-1 * (cobj.pressure_sat_comp_coeff['A']*x +\r\n\r\n~/pyomo/pyomo/pyomo/core/base/indexed_component.py in __getitem__(self, index)\r\n    396             if index.__class__ is EXPR.GetItemExpression:\r\n    397                 return index\r\n--> 398             validated_index = self._validate_index(index)\r\n    399             if validated_index is not index:\r\n    400                 index = validated_index\r\n\r\n~/pyomo/pyomo/pyomo/core/base/indexed_component.py in _validate_index(self, idx)\r\n    551             raise KeyError(\r\n    552                 \"Cannot treat the scalar component '%s' \"\r\n--> 553                 \"as an indexed component\" % ( self.name, ))\r\n    554         #\r\n    555         # Raise an exception\r\n\r\nKeyError: \"Cannot treat the scalar component 'fs.props.benzene.temperature_crit' as an indexed component\"", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1468/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1442", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1442/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1442/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1442/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1442", "id": 619178979, "node_id": "MDU6SXNzdWU2MTkxNzg5Nzk=", "number": 1442, "title": "CBC plugin error when gap returned by solver is \"1.#J\"", "user": {"login": "goroderickgo", "id": 17296713, "node_id": "MDQ6VXNlcjE3Mjk2NzEz", "avatar_url": "https://avatars.githubusercontent.com/u/17296713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goroderickgo", "html_url": "https://github.com/goroderickgo", "followers_url": "https://api.github.com/users/goroderickgo/followers", "following_url": "https://api.github.com/users/goroderickgo/following{/other_user}", "gists_url": "https://api.github.com/users/goroderickgo/gists{/gist_id}", "starred_url": "https://api.github.com/users/goroderickgo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goroderickgo/subscriptions", "organizations_url": "https://api.github.com/users/goroderickgo/orgs", "repos_url": "https://api.github.com/users/goroderickgo/repos", "events_url": "https://api.github.com/users/goroderickgo/events{/privacy}", "received_events_url": "https://api.github.com/users/goroderickgo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-15T19:02:55Z", "updated_at": "2021-04-20T04:09:24Z", "closed_at": "2021-04-20T04:09:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Looks like the CBC solver returns `1.#J` if the gap is infinity/NaN, which isn't handled correctly by the `CBCplugin.py`, as that string cannot be converted to a float:\r\n\r\nhttps://github.com/Pyomo/pyomo/blob/7a018c52591a9534e32f4a5d62b714f89da21536/pyomo/solvers/plugins/solvers/CBCplugin.py#L563\r\n\r\nWhen this happens, we get a `ValueError: could not convert string to float: '1.#J'`\r\n\r\nAlso mentioned in this question: https://or.stackexchange.com/questions/3652/pyomo-cbc-1-j-error ", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1442/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1435", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1435/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1435/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1435/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1435", "id": 616650793, "node_id": "MDU6SXNzdWU2MTY2NTA3OTM=", "number": 1435, "title": "component_data_objects fails for cross products with infinite sets", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-12T13:20:05Z", "updated_at": "2020-05-14T13:50:44Z", "closed_at": "2020-05-14T13:50:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In this example:\r\n```\r\nm = ConcreteModel()\r\nm.s = NonNegativeIntegers*['a', 'b']\r\nfor comp in m.component_data_objects():\r\n    print(comp.name)\r\n```\r\nwe get this error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"infinite_set_bug.py\", line 8, in <module>\r\n    for comp in m.component_data_objects():\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/block.py\", line 1415, in component_data_objects\r\n    sort=sort):\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/block.py\", line 1339, in _component_data_iter\r\n    elif len(comp) or not hasattr(comp, '_data'):\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/set.py\", line 2955, in __len__\r\n    \"The length of a non-finite Set is Inf; however, Python \"\r\nOverflowError: The length of a non-finite Set is Inf; however, Python requires len() to return a non-negative integer value. Check isfinite() before calling len() for possibly infinite Sets\r\n```\r\nThe call to `len()` in _component_data_iter is marked as a hack, so I'm not sure if adding `not isfinite(comp)` to that `or` statement is the desired solution... I'm also not sure why this happens for cross products, but not when a component is indexed by `NonNegativeIntegers`, for example?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1435/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1431", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1431/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1431/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1431/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1431", "id": 615995572, "node_id": "MDU6SXNzdWU2MTU5OTU1NzI=", "number": 1431, "title": "pprint does not work with external functions", "user": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-05-11T15:58:03Z", "updated_at": "2021-05-07T18:10:26Z", "closed_at": "2021-05-07T18:10:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nimport pyomo.environ as pe\r\nfrom pyomo.common.getGSL import find_GSL\r\n\r\nm = pe.ConcreteModel()\r\nm.hypot = pe.ExternalFunction(library=find_GSL(), function='gsl_hypot')\r\nm.x = pe.Var(initialize=0.5)\r\nm.y = pe.Var(initialize=0.5)\r\nm.c = pe.Constraint(expr=2 * m.hypot(m.x, m.y) <= 10)\r\nm.pprint()\r\n```\r\n\r\nProduces the following output/exception\r\n\r\n```\r\n2 Var Declarations\r\n    x : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :  None :   0.5 :  None : False : False :  Reals\r\n    y : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :  None :   0.5 :  None : False : False :  Reals\r\n\r\n1 Constraint Declarations\r\n    c : Size=1, Index=None, Active=True\r\n        Key  : Lower : Body          : Upper : Active\r\n        None :  -Inf : 2*hypot(x, y) :  10.0 :   True\r\n\r\n1 ExternalFunction Declarations\r\nTraceback (most recent call last):\r\n  File \"blah.py\", line 10, in <module>\r\n    m.pprint()\r\n  File \"/.../pyomo/core/base/component.py\", line 495, in pprint\r\n    self.is_constructed(), *self._pprint()\r\n  File \"/.../pyomo/core/base/component.py\", line 363, in _pprint_base_impl\r\n    _fcn(ostream, _key, _data_dict[_key])\r\n  File \"/.../pyomo/core/base/block.py\", line 1909, in _pprint_callback\r\n    data._pprint_blockdata_components(ostream)\r\n  File \"/.../pyomo/core/base/block.py\", line 1676, in _pprint_blockdata_components\r\n    self.component(key).pprint(ostream=indented_ostream)\r\n  File \"/.../pyomo/core/base/component.py\", line 495, in pprint\r\n    self.is_constructed(), *self._pprint()\r\nAttributeError: 'AMPLExternalFunction' object has no attribute '_pprint'\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1431/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1429", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1429/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1429/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1429/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1429", "id": 614984679, "node_id": "MDU6SXNzdWU2MTQ5ODQ2Nzk=", "number": 1429, "title": "XPRESS.py failed to recognize model as MIP", "user": {"login": "bbrunaud", "id": 12440130, "node_id": "MDQ6VXNlcjEyNDQwMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/12440130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbrunaud", "html_url": "https://github.com/bbrunaud", "followers_url": "https://api.github.com/users/bbrunaud/followers", "following_url": "https://api.github.com/users/bbrunaud/following{/other_user}", "gists_url": "https://api.github.com/users/bbrunaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbrunaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbrunaud/subscriptions", "organizations_url": "https://api.github.com/users/bbrunaud/orgs", "repos_url": "https://api.github.com/users/bbrunaud/repos", "events_url": "https://api.github.com/users/bbrunaud/events{/privacy}", "received_events_url": "https://api.github.com/users/bbrunaud/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-08T21:00:37Z", "updated_at": "2022-02-02T15:10:47Z", "closed_at": "2022-02-02T15:10:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\nI have a model that I am solving using Xpress for which I was getting the wrong result. (Unfortunately I don't have a minimum working example I can provide).\r\n\r\nAfter doing some digging, I realized the model was not being recognized as MIP and was being solved as LP instead. I fixed the issue by manually setting: `solver.is_mip = True` before solving. \r\n\r\nWould it be possible to get rid of the `lpoptimize` command and use `mipoptimize` for all models?\r\n\r\nThis is a snippet of my code\r\n```python3\r\n    import pyomo.environ as pyomo\r\n\r\n    m = ConcreteModel()\r\n\r\n    m.w = pyomo.Var(items, intervals, within=pyomo.Binary)\r\n    m.wn = pyomo.Var(superset, within=pyomo.Binary)\r\n    m.sh = pyomo.Var(itemshift, within=pyomo.Binary)\r\n    m.v = pyomo.Var(brands,intervals, within=pyomo.Binary)\r\n    m.V = pyomo.Var(intervals, within=pyomo.NonNegativeReals)\r\n    m.P = pyomo.Var(intervals, within=pyomo.NonNegativeReals)\r\n    m.t = pyomo.Var(items,intervals, within=pyomo.NonNegativeReals)\r\n    m.u = pyomo.Var(intervals, within=pyomo.NonNegativeReals)\r\n    m.mu = pyomo.Var(within=pyomo.NonNegativeReals)\r\n```\r\n\r\nhttps://github.com/Pyomo/pyomo/blob/961facde258314d7168b5d578d8ca3eca1085278/pyomo/solvers/plugins/solvers/XPRESS.py#L160-L165", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1429/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1396", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1396/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1396/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1396/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1396", "id": 604396784, "node_id": "MDU6SXNzdWU2MDQzOTY3ODQ=", "number": 1396, "title": "create_instance is failing on master", "user": {"login": "DLWoodruff", "id": 16341380, "node_id": "MDQ6VXNlcjE2MzQxMzgw", "avatar_url": "https://avatars.githubusercontent.com/u/16341380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DLWoodruff", "html_url": "https://github.com/DLWoodruff", "followers_url": "https://api.github.com/users/DLWoodruff/followers", "following_url": "https://api.github.com/users/DLWoodruff/following{/other_user}", "gists_url": "https://api.github.com/users/DLWoodruff/gists{/gist_id}", "starred_url": "https://api.github.com/users/DLWoodruff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DLWoodruff/subscriptions", "organizations_url": "https://api.github.com/users/DLWoodruff/orgs", "repos_url": "https://api.github.com/users/DLWoodruff/repos", "events_url": "https://api.github.com/users/DLWoodruff/events{/privacy}", "received_events_url": "https://api.github.com/users/DLWoodruff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 851968308, "node_id": "MDU6TGFiZWw4NTE5NjgzMDg=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.data", "name": "pyomo.data", "color": "1f1789", "default": false, "description": "Any issues related to data portals and data file parsing"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2020-04-22T02:05:28Z", "updated_at": "2022-01-04T11:51:41Z", "closed_at": "2020-05-22T16:15:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "To replicate:\r\ncd pyomo/examples/pyomo/tutorial\r\npython set.py\r\n\r\nThe final error is from the dataportal, but this error first cropped up after the last release. Anyway, here is the last line of the stack trace:\r\nFile \"/home/woodruff/software/DLWFORKS/pyomo/pyomo/dataportal/parse_datacmds.py\", line 452, in p_error\r\n    raise IOError(tmp)\r\nOSError: Syntax error at token 'NUM_VAL' with value '1' (line 1, column 9)\r\n\r\nThis affects a lot of legacy models.\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1396/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1379", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1379/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1379/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1379/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1379", "id": 596984407, "node_id": "MDU6SXNzdWU1OTY5ODQ0MDc=", "number": 1379, "title": "Interface between Pyomo and Mosek", "user": {"login": "Without-wax", "id": 21681694, "node_id": "MDQ6VXNlcjIxNjgxNjk0", "avatar_url": "https://avatars.githubusercontent.com/u/21681694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Without-wax", "html_url": "https://github.com/Without-wax", "followers_url": "https://api.github.com/users/Without-wax/followers", "following_url": "https://api.github.com/users/Without-wax/following{/other_user}", "gists_url": "https://api.github.com/users/Without-wax/gists{/gist_id}", "starred_url": "https://api.github.com/users/Without-wax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Without-wax/subscriptions", "organizations_url": "https://api.github.com/users/Without-wax/orgs", "repos_url": "https://api.github.com/users/Without-wax/repos", "events_url": "https://api.github.com/users/Without-wax/events{/privacy}", "received_events_url": "https://api.github.com/users/Without-wax/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mrmundt", "id": 55767766, "node_id": "MDQ6VXNlcjU1NzY3NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/55767766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrmundt", "html_url": "https://github.com/mrmundt", "followers_url": "https://api.github.com/users/mrmundt/followers", "following_url": "https://api.github.com/users/mrmundt/following{/other_user}", "gists_url": "https://api.github.com/users/mrmundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrmundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrmundt/subscriptions", "organizations_url": "https://api.github.com/users/mrmundt/orgs", "repos_url": "https://api.github.com/users/mrmundt/repos", "events_url": "https://api.github.com/users/mrmundt/events{/privacy}", "received_events_url": "https://api.github.com/users/mrmundt/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrmundt", "id": 55767766, "node_id": "MDQ6VXNlcjU1NzY3NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/55767766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrmundt", "html_url": "https://github.com/mrmundt", "followers_url": "https://api.github.com/users/mrmundt/followers", "following_url": "https://api.github.com/users/mrmundt/following{/other_user}", "gists_url": "https://api.github.com/users/mrmundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrmundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrmundt/subscriptions", "organizations_url": "https://api.github.com/users/mrmundt/orgs", "repos_url": "https://api.github.com/users/mrmundt/repos", "events_url": "https://api.github.com/users/mrmundt/events{/privacy}", "received_events_url": "https://api.github.com/users/mrmundt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-04-09T02:54:52Z", "updated_at": "2021-06-22T13:16:27Z", "closed_at": "2021-06-22T13:16:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "The output of my solver gives the following error>>\r\n\r\nError: rescode.err_qcon_upper_triangle(1417): Only elements in the lower triangle of the quadratic terms should be specified. The element q[1,12] is in the upper triangle of 0th constraint is specified.\r\n\r\n```python\r\n#Convex relaxations SDP formulation\r\nfrom pyomo.opt import SolverFactory\r\nfrom pyomo.environ import *\r\nimport numpy as np\r\n\r\nmodel = ConcreteModel()\r\n\r\n#bus voltage angles and magnitude\r\nmodel.X1 = Var(range(12)); model.X2 = Var(range(12))\r\nvar1 = np.array([model.X1[i] for i in range(len(model.X1))])\r\nvar2 = np.array([model.X2[i] for i in range(len(model.X2))])\r\nvar1[6] = 0; var2[6] = 0;\r\nmodel.W = [var1*var2[i] for i in range(len(var1))]\r\nmodel.W = np.matrix(model.W)\r\n\r\n#loads\r\nmodel.lp1 = 0; model.lq1 = 0\r\nmodel.lp2 = 0; model.lq2 = 0\r\nmodel.lp3 = 0; model.lq3 = 0\r\nmodel.lp4 = 100; model.lq4 = 15\r\nmodel.lp5 = 100; model.lq5 = 15\r\nmodel.lp6 = 100; model.lq6 = 15\r\n\r\n#declare bus matrix\r\nr12 = 0.1; x12 = 0.2; b12 = 0.04/2;\r\nr14 = 0.05; x14 = 0.2; b14 = 0.04/2;\r\nr15 = 0.08; x15 = 0.3; b15 = 0.06/2;\r\nr23 = 0.05; x23 = 0.25; b23 = 0.06/2;\r\nr24 = 0.05; x24 = 0.1; b24 = 0.02/2;\r\nr25 = 0.1; x25 = 0.3; b25 = 0.04/2;\r\nr26 = 0.07; x26 = 0.2; b26 = 0.05/2;\r\nr35 = 0.12; x35 = 0.26; b35 = 0.05/2;\r\nr36 = 0.02; x36 = 0.1; b36 = 0.02/2;\r\nr45 = 0.2; x45 = 0.4; b45 = 0.08/2;\r\nr56 = 0.1; x56 = 0.3; b56 = 0.06/2;\r\n\r\ny11 = 100*(1/(complex(r12,x12)) + 1/(complex(r14,x14)) + 1/(complex(r15,x15)) + complex(0, b12 + b14 + b15)); y12 = 100*(-1/(complex(r12,x12))); y13 = 100*0; y14 = 100*(-1/(complex(r14,x14))); y15 = 100*(-1/(complex(r15,x15))); y16 = 100*0;\r\ny21 = 100*(-1/(complex(r12,x12))); y22 = 100*(1/(complex(r12,x12)) + 1/(complex(r23,x23)) + 1/(complex(r24,x24)) + 1/(complex(r25,x25)) + 1/(complex(r26,x26))  + complex(0, b12 + b23 + b24 + b25 + b26)); y23 = 100*(-1/(complex(r23,x23))); y24 = 100*(-1/(complex(r24,x24))); y25 = 100*(-1/(complex(r25,x25))); y26 = 100*(-1/(complex(r26,x26)));\r\ny31 = 100*0; y32 = 100*(-1/(complex(r23,x23))); y33 = 100*(1/(complex(r23,x23)) + 1/(complex(r35,x35)) + 1/(complex(r36,x36))  + complex(0, b23 + b35 + b36)); y34 = 100*0; y35 = 100*(-1/(complex(r35,x35))); y36 = 100*(-1/(complex(r36,x36)));\r\ny41 = 100*(-1/(complex(r14,x14))); y42 = 100*(-1/(complex(r24,x24))); y43 = 100*0; y44 = 100*(1/(complex(r14,x14)) + 1/(complex(r24,x24)) + 1/(complex(r45,x45))  + complex(0, b14 + b24 + b45)); y45 = 100*(-1/(complex(r45,x45))); y46 = 100*0;\r\ny51 = 100*(-1/(complex(r15,x15))); y52 = 100*(-1/(complex(r25,x25))); y53 = 100*(-1/(complex(r35,x35))); y54 = 100*(-1/(complex(r45,x45))); y55 = 100*(1/(complex(r15,x15)) + 1/(complex(r25,x25)) + 1/(complex(r35,x35)) + 1/(complex(r45,x45)) + 1/(complex(r56,x56))  + complex(0, b15 + b25 + b35 + b45 + b56)); y56 = 100*(-1/(complex(r56,x56)));\r\ny61 = 100*0; y62 = 100*(-1/(complex(r26,x26))); y63 = 100*(-1/(complex(r36,x36))); y64 = 100*0; y65 = 100*(-1/(complex(r56,x56))); y66 = 100*(1/(complex(r26,x26)) + 1/(complex(r36,x36)) + 1/(complex(r56,x56))  + complex(0, b26 + b36 + b56));\r\n\r\nY = np.matrix([[y11,y12,y13,y14,y15,y16],\r\n               [y21,y22,y23,y24,y25,y26],\r\n               [y31,y32,y33,y34,y35,y36],\r\n               [y41,y42,y43,y44,y45,y46],\r\n               [y51,y52,y53,y54,y55,y56],\r\n               [y61,y62,y63,y64,y65,y66]])\r\n\r\ne1 = np.matrix('1,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0')\r\ne2 = np.matrix('0,0,0,0,0,0;0,1,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0')\r\ne3 = np.matrix('0,0,0,0,0,0;0,0,0,0,0,0;0,0,1,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0')\r\ne4 = np.matrix('0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,1,0,0;0,0,0,0,0,0;0,0,0,0,0,0')\r\ne5 = np.matrix('0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,1,0;0,0,0,0,0,0')\r\ne6 = np.matrix('0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,1')\r\n\r\nM_1 = np.concatenate([np.concatenate([e1,np.matrix(np.zeros([6,6]))],axis=1),\r\n               np.concatenate([np.matrix(np.zeros([6,6])),e1],axis=1)])\r\nM_2 = np.concatenate([np.concatenate([e2,np.matrix(np.zeros([6,6]))],axis=1),\r\n               np.concatenate([np.matrix(np.zeros([6,6])),e2],axis=1)])\r\nM_3 = np.concatenate([np.concatenate([e3,np.matrix(np.zeros([6,6]))],axis=1),\r\n               np.concatenate([np.matrix(np.zeros([6,6])),e3],axis=1)])\r\nM_4 = np.concatenate([np.concatenate([e4,np.matrix(np.zeros([6,6]))],axis=1),\r\n               np.concatenate([np.matrix(np.zeros([6,6])),e4],axis=1)])\r\nM_5 = np.concatenate([np.concatenate([e5,np.matrix(np.zeros([6,6]))],axis=1),\r\n               np.concatenate([np.matrix(np.zeros([6,6])),e5],axis=1)])\r\nM_6 = np.concatenate([np.concatenate([e6,np.matrix(np.zeros([6,6]))],axis=1),\r\n               np.concatenate([np.matrix(np.zeros([6,6])),e6],axis=1)])\r\n\r\nN_1 = np.concatenate([np.concatenate([np.matrix(np.zeros([6,6])),np.matrix(np.zeros([6,6]))],axis=1),\r\n               np.concatenate([np.matrix(np.zeros([6,6])),e1],axis=1)])\r\nN_2 = np.concatenate([np.concatenate([np.matrix(np.zeros([6,6])),np.matrix(np.zeros([6,6]))],axis=1),\r\n               np.concatenate([np.matrix(np.zeros([6,6])),e2],axis=1)])\r\nN_3 = np.concatenate([np.concatenate([np.matrix(np.zeros([6,6])),np.matrix(np.zeros([6,6]))],axis=1),\r\n               np.concatenate([np.matrix(np.zeros([6,6])),e3],axis=1)])\r\nN_4 = np.concatenate([np.concatenate([np.matrix(np.zeros([6,6])),np.matrix(np.zeros([6,6]))],axis=1),\r\n               np.concatenate([np.matrix(np.zeros([6,6])),e4],axis=1)])\r\nN_5 = np.concatenate([np.concatenate([np.matrix(np.zeros([6,6])),np.matrix(np.zeros([6,6]))],axis=1),\r\n               np.concatenate([np.matrix(np.zeros([6,6])),e5],axis=1)])\r\nN_6 = np.concatenate([np.concatenate([np.matrix(np.zeros([6,6])),np.matrix(np.zeros([6,6]))],axis=1),\r\n               np.concatenate([np.matrix(np.zeros([6,6])),e6],axis=1)])\r\n\r\nL_p1 = 0.5*np.concatenate([np.concatenate([np.real(np.transpose(Y)*e1 + e1*Y),np.imag(np.transpose(Y)*e1 - e1*Y)],axis=1),\r\n                             np.concatenate([np.imag(e1*Y - np.transpose(Y)*e1 ), np.real(np.transpose(Y)*e1 + e1*Y)],axis=1)])\r\nL_p2 = 0.5*np.concatenate([np.concatenate([np.real(np.transpose(Y)*e1 + e1*Y),np.imag(np.transpose(Y)*e1 - e1*Y)],axis=1),\r\n                             np.concatenate([np.imag(e1*Y - np.transpose(Y)*e1 ), np.real(np.transpose(Y)*e1 + e1*Y)],axis=1)])\r\nL_p3 = 0.5*np.concatenate([np.concatenate([np.real(np.transpose(Y)*e1 + e1*Y),np.imag(np.transpose(Y)*e1 - e1*Y)],axis=1),\r\n                             np.concatenate([np.imag(e1*Y - np.transpose(Y)*e1 ), np.real(np.transpose(Y)*e1 + e1*Y)],axis=1)])\r\nL_p4 = 0.5*np.concatenate([np.concatenate([np.real(np.transpose(Y)*e1 + e1*Y),np.imag(np.transpose(Y)*e1 - e1*Y)],axis=1),\r\n                             np.concatenate([np.imag(e1*Y - np.transpose(Y)*e1 ), np.real(np.transpose(Y)*e1 + e1*Y)],axis=1)])\r\nL_p5 = 0.5*np.concatenate([np.concatenate([np.real(np.transpose(Y)*e1 + e1*Y),np.imag(np.transpose(Y)*e1 - e1*Y)],axis=1),\r\n                             np.concatenate([np.imag(e1*Y - np.transpose(Y)*e1 ), np.real(np.transpose(Y)*e1 + e1*Y)],axis=1)])\r\nL_p6 = 0.5*np.concatenate([np.concatenate([np.real(np.transpose(Y)*e1 + e1*Y),np.imag(np.transpose(Y)*e1 - e1*Y)],axis=1),\r\n                             np.concatenate([np.imag(e1*Y - np.transpose(Y)*e1 ), np.real(np.transpose(Y)*e1 + e1*Y)],axis=1)])\r\n\r\n\r\nL_q1 = -0.5*np.concatenate([np.concatenate([np.imag(np.transpose(Y)*e1 + e1*Y),np.real(e1*Y - np.transpose(Y)*e1)],axis=1),\r\n                             np.concatenate([np.real(np.transpose(Y)*e1 - e1*Y), np.imag(np.transpose(Y)*e1 + e1*Y)],axis=1)])\r\nL_q2 = -0.5*np.concatenate([np.concatenate([np.imag(np.transpose(Y)*e2 + e2*Y),np.real(e2*Y - np.transpose(Y)*e2)],axis=1),\r\n                             np.concatenate([np.real(np.transpose(Y)*e2 - e2*Y), np.imag(np.transpose(Y)*e2 + e2*Y)],axis=1)])\r\nL_q3 = -0.5*np.concatenate([np.concatenate([np.imag(np.transpose(Y)*e3 + e3*Y),np.real(e3*Y - np.transpose(Y)*e3)],axis=1),\r\n                             np.concatenate([np.real(np.transpose(Y)*e3 - e3*Y), np.imag(np.transpose(Y)*e3 + e3*Y)],axis=1)])\r\nL_q4 = -0.5*np.concatenate([np.concatenate([np.imag(np.transpose(Y)*e4 + e4*Y),np.real(e4*Y - np.transpose(Y)*e4)],axis=1),\r\n                             np.concatenate([np.real(np.transpose(Y)*e4 - e4*Y), np.imag(np.transpose(Y)*e4 + e4*Y)],axis=1)])\r\nL_q5 = -0.5*np.concatenate([np.concatenate([np.imag(np.transpose(Y)*e5 + e5*Y),np.real(e5*Y - np.transpose(Y)*e5)],axis=1),\r\n                             np.concatenate([np.real(np.transpose(Y)*e5 - e5*Y), np.imag(np.transpose(Y)*e5 + e5*Y)],axis=1)])\r\nL_q6 = -0.5*np.concatenate([np.concatenate([np.imag(np.transpose(Y)*e6 + e6*Y),np.real(e6*Y - np.transpose(Y)*e6)],axis=1),\r\n                             np.concatenate([np.real(np.transpose(Y)*e6 - e6*Y), np.imag(np.transpose(Y)*e6 + e6*Y)],axis=1)])\r\n\r\n#Generator active powers\r\nmodel.p1 = np.trace(L_p1*np.matrix(model.W)) + model.lp1;\r\nmodel.p2 = np.trace(L_p2*np.matrix(model.W)) + model.lp2;\r\nmodel.p3 = np.trace(L_p3*np.matrix(model.W)) + model.lp3;\r\n\r\n#Cost function\r\nmodel.cost = Objective(expr = 213.1 + 11.669*(model.p1) + 0.00533*(model.p1)**2 + \r\n                           200 + 10.333*(model.p2) + 0.00889*(model.p2)**2 +\r\n                          240 + 10.833*(model.p3) + 0.00741*(model.p3)**2)\r\n\r\n# declare constraints\r\nmodel.c = ConstraintList()\r\n\r\n#Active power balance constraints\r\nmodel.c.add(np.trace(L_p1*np.matrix(model.W)) <= 200-model.lp1); model.c.add(np.trace(L_p1*np.matrix(model.W)) >= 50-model.lp1)\r\nmodel.c.add(np.trace(L_p2*np.matrix(model.W)) <= 150-model.lp2); model.c.add(np.trace(L_p2*np.matrix(model.W)) >= 37.5-model.lp2)\r\nmodel.c.add(np.trace(L_p3*np.matrix(model.W)) <= 180-model.lp3); model.c.add(np.trace(L_p3*np.matrix(model.W)) >= 45-model.lp2)\r\nmodel.c.add(np.trace(L_p4*np.matrix(model.W)) <= -model.lp4); model.c.add(np.trace(L_p4*np.matrix(model.W)) >= -model.lp4)\r\nmodel.c.add(np.trace(L_p5*np.matrix(model.W)) <= -model.lp5); model.c.add(np.trace(L_p5*np.matrix(model.W)) >= -model.lp5)\r\nmodel.c.add(np.trace(L_p6*np.matrix(model.W)) <= -model.lp6); model.c.add(np.trace(L_p6*np.matrix(model.W)) >= -model.lp6)\r\n\r\n#Reactive power balance constraints\r\nmodel.c.add(np.trace(L_q1*np.matrix(model.W)) <= 150-model.lq1); model.c.add(np.trace(L_q1*np.matrix(model.W)) >= -100-model.lq1)\r\nmodel.c.add(np.trace(L_q2*np.matrix(model.W)) <= 150-model.lq2); model.c.add(np.trace(L_q2*np.matrix(model.W)) >= -100-model.lq2)\r\nmodel.c.add(np.trace(L_q3*np.matrix(model.W)) <= 120-model.lq3); model.c.add(np.trace(L_q3*np.matrix(model.W)) >= -100-model.lq3)\r\nmodel.c.add(np.trace(L_q4*np.matrix(model.W)) <= -model.lq4); model.c.add(np.trace(L_q4*np.matrix(model.W)) >= -model.lq6)\r\nmodel.c.add(np.trace(L_q5*np.matrix(model.W)) <= -model.lq5); model.c.add(np.trace(L_q5*np.matrix(model.W)) >= -model.lq5)\r\nmodel.c.add(np.trace(L_q6*np.matrix(model.W)) <= -model.lq6); model.c.add(np.trace(L_q6*np.matrix(model.W)) >= -model.lq6)\r\n\r\n#Bus voltages constraints\r\nmodel.c.add(np.trace(M_1*np.matrix(model.W))<= 1.07**2); model.c.add(np.trace(M_1*np.matrix(model.W))>= 0.95**2)\r\nmodel.c.add(np.trace(M_2*np.matrix(model.W))<= 1.07**2); model.c.add(np.trace(M_2*np.matrix(model.W))>= 0.95**2)\r\nmodel.c.add(np.trace(M_3*np.matrix(model.W))<= 1.07**2); model.c.add(np.trace(M_3*np.matrix(model.W))>= 0.95**2)\r\nmodel.c.add(np.trace(M_4*np.matrix(model.W))<= 1.07**2); model.c.add(np.trace(M_4*np.matrix(model.W))>= 0.95**2)\r\nmodel.c.add(np.trace(M_5*np.matrix(model.W))<= 1.07**2); model.c.add(np.trace(M_5*np.matrix(model.W))>= 0.95**2)\r\nmodel.c.add(np.trace(M_6*np.matrix(model.W))<= 1.07**2); model.c.add(np.trace(M_6*np.matrix(model.W))>= 0.95**2)\r\n\r\n\r\n                    \r\n\r\n\r\n# solve\r\nSolverFactory('mosek').solve(model,tee=True).write()\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1379/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1375", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1375/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1375/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1375/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1375", "id": 596581259, "node_id": "MDU6SXNzdWU1OTY1ODEyNTk=", "number": 1375, "title": "Cannot create empty two-dimensional set from a rule", "user": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-08T13:32:10Z", "updated_at": "2020-04-09T04:12:43Z", "closed_at": "2020-04-09T04:12:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I cannot create an empty two-dimensional set from a rule on master. Here is an example:\r\n\r\n```\r\nimport pyomo.environ as pe\r\n\r\ndef a_rule(m):\r\n    for i in range(0):\r\n        yield i\r\n\r\ndef b_rule(m):\r\n    for i in range(3):\r\n        for j in range(0):\r\n            yield i, j\r\n\r\nm = pe.ConcreteModel()\r\nm.a = pe.Set(initialize=a_rule, dimen=1)\r\nm.a.pprint()\r\nm.b = pe.Set(initialize=b_rule, dimen=2)\r\nm.b.pprint()\r\n```\r\n\r\nPyomo 5.6.9 output\r\n--------------------\r\n```\r\na : Dim=0, Dimen=1, Size=0, Domain=None, Ordered=False, Bounds=(None, None)\r\n    []\r\nb : Dim=0, Dimen=2, Size=0, Domain=None, Ordered=False, Bounds=None\r\n    []\r\n```\r\n\r\nPyomo master output/error\r\n---------------------------\r\n```\r\na : Size=1, Index=None, Ordered=Insertion\r\n    Key  : Dimen : Domain : Size : Members\r\n    None :     1 :    Any :    0 :      {}\r\nERROR: Constructing component 'b' from data=None failed: IndexError: tuple\r\n    index out of range\r\nTraceback (most recent call last):\r\n  File \"blah.py\", line 18, in <module>\r\n    m.b = pe.Set(initialize=b_rule, dimen=2)\r\n  File \"/.../pyomo/pyomo/core/base/block.py\", line 543, in __setattr__\r\n    self.add_component(name, val)\r\n  File \"/.../pyomo/pyomo/core/base/block.py\", line 1079, in add_component\r\n    val.construct(data)\r\n  File \"/.../pyomo/pyomo/core/base/util.py\", line 125, in construct\r\n    return base.construct(self, data)\r\n  File \"/.../pyomo/pyomo/core/base/set.py\", line 1976, in construct\r\n    self._getitem_when_not_present(index)\r\n  File \"/.../pyomo/pyomo/core/base/set.py\", line 2019, in _getitem_when_not_present\r\n    _values = self._init_values(_block, index)\r\n  File \"/.../pyomo/pyomo/core/base/set.py\", line 419, in __call__\r\n    if isinstance(_val[0], tuple):\r\nIndexError: tuple index out of range\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1375/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1362", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1362/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1362/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1362/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1362", "id": 587650682, "node_id": "MDU6SXNzdWU1ODc2NTA2ODI=", "number": 1362, "title": "`quicksum()` causes trivial constraints to remain in the model", "user": {"login": "ruaridhw", "id": 15679369, "node_id": "MDQ6VXNlcjE1Njc5MzY5", "avatar_url": "https://avatars.githubusercontent.com/u/15679369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruaridhw", "html_url": "https://github.com/ruaridhw", "followers_url": "https://api.github.com/users/ruaridhw/followers", "following_url": "https://api.github.com/users/ruaridhw/following{/other_user}", "gists_url": "https://api.github.com/users/ruaridhw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruaridhw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruaridhw/subscriptions", "organizations_url": "https://api.github.com/users/ruaridhw/orgs", "repos_url": "https://api.github.com/users/ruaridhw/repos", "events_url": "https://api.github.com/users/ruaridhw/events{/privacy}", "received_events_url": "https://api.github.com/users/ruaridhw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-25T12:09:28Z", "updated_at": "2020-04-30T19:19:09Z", "closed_at": "2020-04-30T19:19:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a constraint with a `body` of the following form:\r\n\r\n```\r\nvar_1[x] - (var_2[x] + (1/6*var_3[x,y] + 1/6*var_3[x,y]))\r\n```\r\n\r\nWhen all of the variables are fixed, I would like the constraint to be deactivated.\r\n\r\nThis functionality already appears to be implemented with `TrivialConstraintDeactivator` and/or `skip_trivial_constraints=True` which both check `body.polynomial_degree() == 0` as the test for whether the constraint should be skipped.\r\n\r\nAs it happens, I'm finding that when all the variables are fixed I get the following:\r\n\r\n```python\r\nfrom pyomo.core.expr.visitor import polynomial_degree, _expression_is_fixed\r\nassert polynomial_degree(body) == 1\r\nassert _expression_is_fixed(body) is True\r\n```\r\n\r\nThat is, the degree is non-zero yet the constraint is also wholly fixed. I've narrowed this down to the final two terms forming a `LinearExpression` for which the above assertions still hold.\r\n\r\nMost importantly, if I rewrite the building of the constraint so that the final two terms fall under a `SumExpression` instead, `polynomial_degree(body) == 0` as expected. I've done this by swapping out `quicksum()` for `builtins.sum()`.\r\n\r\nIs this a bug or is this expected behaviour? If it's the latter, performance is an issue for this constraint so what would be the suggested approach?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1362/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1340", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1340/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1340/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1340/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1340", "id": 580268260, "node_id": "MDU6SXNzdWU1ODAyNjgyNjA=", "number": 1340, "title": "pyomo/contrib/parmest/ Invalid index error for component", "user": {"login": "toichiserada", "id": 45290500, "node_id": "MDQ6VXNlcjQ1MjkwNTAw", "avatar_url": "https://avatars.githubusercontent.com/u/45290500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toichiserada", "html_url": "https://github.com/toichiserada", "followers_url": "https://api.github.com/users/toichiserada/followers", "following_url": "https://api.github.com/users/toichiserada/following{/other_user}", "gists_url": "https://api.github.com/users/toichiserada/gists{/gist_id}", "starred_url": "https://api.github.com/users/toichiserada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toichiserada/subscriptions", "organizations_url": "https://api.github.com/users/toichiserada/orgs", "repos_url": "https://api.github.com/users/toichiserada/repos", "events_url": "https://api.github.com/users/toichiserada/events{/privacy}", "received_events_url": "https://api.github.com/users/toichiserada/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-12T22:55:00Z", "updated_at": "2020-12-07T22:30:13Z", "closed_at": "2020-12-07T22:30:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nI'm trying to estimate the parameter 'Boiler[1].eta' with paramest.py. My theta_names looks like this: theta_names = ['Boiler[1].eta'].\r\n\r\nUnfortunately i get this error message:\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pyomo/pysp/phutils.py\", line 482, in extractComponentIndices\r\n    % (str(tuple(index_template)), component.name))\r\nValueError: The index ('1].eta',) is not valid for component named: Boiler\r\n\r\nIf i pause the program at the end of the execution of my model_function and execute the following line:\r\nmodel.Boiler[1].eta \r\nI get this: \r\n<pyomo.core.base.var.SimpleVar at 0x12090e748>\r\nSo the variable actually exists in my model.\r\n\r\nIs this a Bug or did i do something wrong? \r\nThe index ('1].eta',) looks also a bit chopped up. Maybe there is a Problem?\r\n\r\nGreetings\r\nJakob", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1340/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1332", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1332/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1332/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1332/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1332", "id": 578548386, "node_id": "MDU6SXNzdWU1Nzg1NDgzODY=", "number": 1332, "title": "Revising an existing equality constraint to an inequality constraint? ", "user": {"login": "xiaoweiz", "id": 4540215, "node_id": "MDQ6VXNlcjQ1NDAyMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4540215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiaoweiz", "html_url": "https://github.com/xiaoweiz", "followers_url": "https://api.github.com/users/xiaoweiz/followers", "following_url": "https://api.github.com/users/xiaoweiz/following{/other_user}", "gists_url": "https://api.github.com/users/xiaoweiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiaoweiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiaoweiz/subscriptions", "organizations_url": "https://api.github.com/users/xiaoweiz/orgs", "repos_url": "https://api.github.com/users/xiaoweiz/repos", "events_url": "https://api.github.com/users/xiaoweiz/events{/privacy}", "received_events_url": "https://api.github.com/users/xiaoweiz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-10T12:35:54Z", "updated_at": "2022-07-29T19:53:19Z", "closed_at": "2022-07-29T19:53:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Suppose I have defined two constraints (one inequality and one equality).\r\n```python\r\nmodel = ConcreteModel()\r\nmodel.x = Var()\r\nmodel.y = Var()\r\nmodel.constraint1 = Constraint(expr=model.x+model.y <= 2)\r\nmodel.constraint2 = Constraint(expr=model.x+model.y == 1) \r\n```\r\nLater, I'd like to revise the inequality constraint to an equality, e.g., change $x+y\\leq 2$ to $x-y=1$, then I can do \r\n```python\r\nmodel.constraint1 = model.x - model.y == 1\r\n```\r\nThis works.\r\n\r\nHowever, if I revise the equality constraint to an inequality, e.g., change $x+y==1$ to $x+y \\leq 1$, then I'll have an error. \r\n```python\r\nmodel.constraint2 = model.x + model.y <= 1\r\n```\r\n```bash\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-95-47c309a408c7> in <module>\r\n----> 1 model.constraint2 = model.x+model.y <= 1\r\n\r\n~/anaconda3/lib/python3.7/site-packages/pyomo/core/base/block.py in __setattr__(self, name, val)\r\n    622                 # Call the set_value method.\r\n    623                 #\r\n--> 624                 _set_value(val)\r\n    625         #\r\n    626         # Case 3. Handle setting non-Component attributes\r\n\r\n~/anaconda3/lib/python3.7/site-packages/pyomo/core/base/constraint.py in set_value(self, expr)\r\n   1060             del self[None]\r\n   1061             return None\r\n-> 1062         return super(SimpleConstraint, self).set_value(expr)\r\n   1063 \r\n   1064     #\r\n\r\n~/anaconda3/lib/python3.7/site-packages/pyomo/core/base/constraint.py in set_value(self, expr)\r\n    611                 raise ValueError(\r\n    612                     \"Equality constraint '%s' defined with \"\r\n--> 613                     \"non-finite term.\" % (self.name))\r\n    614             assert self._lower is self._upper\r\n    615 \r\n\r\nValueError: Equality constraint 'constraint2' defined with non-finite term.\r\n```\r\n\r\nIs the behavior supposed to happen? ", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1332/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1312", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1312/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1312/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1312/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1312", "id": 569643677, "node_id": "MDU6SXNzdWU1Njk2NDM2Nzc=", "number": 1312, "title": "Issues with find_component", "user": {"login": "Robbybp", "id": 8885032, "node_id": "MDQ6VXNlcjg4ODUwMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/8885032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Robbybp", "html_url": "https://github.com/Robbybp", "followers_url": "https://api.github.com/users/Robbybp/followers", "following_url": "https://api.github.com/users/Robbybp/following{/other_user}", "gists_url": "https://api.github.com/users/Robbybp/gists{/gist_id}", "starred_url": "https://api.github.com/users/Robbybp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Robbybp/subscriptions", "organizations_url": "https://api.github.com/users/Robbybp/orgs", "repos_url": "https://api.github.com/users/Robbybp/repos", "events_url": "https://api.github.com/users/Robbybp/events{/privacy}", "received_events_url": "https://api.github.com/users/Robbybp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-24T05:25:05Z", "updated_at": "2020-12-01T19:38:27Z", "closed_at": "2020-12-01T19:38:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The first issue is that you can't call `find_component` from a `_BlockData` object. The following code raises an attribute error:\r\n\r\n```python\r\nfrom pyomo.environ import *\r\n\r\nm = ConcreteModel()\r\n\r\n@m.Block([1,2,3])\r\ndef b1(b, i):\r\n    b.v1 = Var()\r\n\r\nvname = m.b1[1].v1.name\r\ncomp = m.b1[1].find_component(vname)\r\n```\r\n\r\nThe second issue is that `find_component` doesn't work with decimal indices. \r\n\r\n```python\r\nfrom pyomo.environ import *\r\n\r\nm = ConcreteModel()\r\n\r\nm.t = Set(initialize=[1.0, 1.5, 2.0])\r\nm.x = Set(initialize=[1,2,3])\r\n\r\n@m.Block(m.t, m.x)\r\ndef b1(b, t, x):\r\n    b.v1 = Var()\r\n```\r\n\r\nAfter the above code, the following `find_component` fails:\r\n\r\n```python\r\n>>> m.b1[1,1].v1.name\r\n'b1[1.0,1].v1'\r\n>>> vname1 = m.b1[1,1].v1.name\r\n>>> m.find_component(vname1) is None\r\nTrue\r\n```\r\n\r\nwhile the following works as expected:\r\n\r\n```python\r\n>>> m.find_component('b1[1,1].v1') is m.b1[1.0,1.0].v1\r\nTrue\r\n```\r\n\r\nThis is especially problematic for `ContinuousSet`s, where decimal indices are more common.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1312/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1295", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1295/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1295/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1295/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1295", "id": 564883094, "node_id": "MDU6SXNzdWU1NjQ4ODMwOTQ=", "number": 1295, "title": "Newer CBC no longer works with Pyomo", "user": {"login": "mrmundt", "id": 55767766, "node_id": "MDQ6VXNlcjU1NzY3NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/55767766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrmundt", "html_url": "https://github.com/mrmundt", "followers_url": "https://api.github.com/users/mrmundt/followers", "following_url": "https://api.github.com/users/mrmundt/following{/other_user}", "gists_url": "https://api.github.com/users/mrmundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrmundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrmundt/subscriptions", "organizations_url": "https://api.github.com/users/mrmundt/orgs", "repos_url": "https://api.github.com/users/mrmundt/repos", "events_url": "https://api.github.com/users/mrmundt/events{/privacy}", "received_events_url": "https://api.github.com/users/mrmundt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}, {"id": 851808904, "node_id": "MDU6TGFiZWw4NTE4MDg5MDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/testing_and_ci", "name": "testing_and_ci", "color": "ef8da4", "default": false, "description": "Any issues related to testing and/or continuous integration (e.g., github, travis, etc.)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-13T18:51:33Z", "updated_at": "2021-04-22T19:52:32Z", "closed_at": "2021-04-22T19:52:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In testing CBC 2.10.3 (from https://ampl.com/dl/open/cbc/cbc-linux64.zip) on RHEL7 with Python 3.7, these errors/failures are now occurring: \r\n```\r\n======================================================================\r\nERROR: test_cbc_nl_symbolic_labels (pyomo.solvers.tests.checks.test_writers.transplant_class.<locals>.C)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/mmundt/devel-pyomo/pyomo/pyomo/solvers/tests/checks/test_writers.py\", line 72, in writer_test\r\n    load_solutions)\r\n  File \"/home/mmundt/devel-pyomo/pyomo/pyomo/solvers/tests/models/base.py\", line 126, in solve\r\n    **io_options)\r\n  File \"/home/mmundt/devel-pyomo/pyomo/pyomo/opt/base/solvers.py\", line 600, in solve\r\n    \"Solver (%s) did not exit normally\" % self.name)\r\npyutilib.common._exceptions.ApplicationError: Solver (cbc) did not exit normally\r\n-------------------- >> begin captured logging << --------------------\r\npyomo.opt: ERROR: Solver (cbc) returned non-zero return code (-11)\r\npyomo.opt: ERROR: Solver log:\r\nCBC 2.10.3: printingOptions=all\r\n \r\n--------------------- >> end captured logging << ---------------------\r\n \r\n======================================================================\r\nFAIL: test_optimal_mip (pyomo.solvers.tests.checks.test_CBCplugin.TestCBC)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/mmundt/devel-pyomo/pyomo/pyomo/solvers/tests/checks/test_CBCplugin.py\", line 121, in test_optimal_mip\r\n    self.assertEqual(1.0, results.problem.lower_bound)\r\nAssertionError: 1.0 != -1.0\r\n \r\n======================================================================\r\nFAIL: test_unbounded_mip (pyomo.solvers.tests.checks.test_CBCplugin.TestCBC)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/mmundt/devel-pyomo/pyomo/pyomo/solvers/tests/checks/test_CBCplugin.py\", line 106, in test_unbounded_mip\r\n    self.assertEqual(TerminationCondition.unbounded, results.solver.termination_condition)\r\nAssertionError: EnumValue(<pyutilib.enum.enum.Enum object at 0x7fb23c9a9e10>, 11, 'unbounded') != EnumValue(<pyutilib.enum.enum.Enum object at 0x7fb23c9a9e10>, 12, 'infeasible')\r\n```\r\n\r\nThese need to be addressed before introducing CBC testing in the Windows Github Actions (#1292).", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1295/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1260", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1260/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1260/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1260/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1260", "id": 550692695, "node_id": "MDU6SXNzdWU1NTA2OTI2OTU=", "number": 1260, "title": "`CPLEXDirect` (and `CPLEXPersistent`) do not support v12.10", "user": {"login": "ruaridhw", "id": 15679369, "node_id": "MDQ6VXNlcjE1Njc5MzY5", "avatar_url": "https://avatars.githubusercontent.com/u/15679369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruaridhw", "html_url": "https://github.com/ruaridhw", "followers_url": "https://api.github.com/users/ruaridhw/followers", "following_url": "https://api.github.com/users/ruaridhw/following{/other_user}", "gists_url": "https://api.github.com/users/ruaridhw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruaridhw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruaridhw/subscriptions", "organizations_url": "https://api.github.com/users/ruaridhw/orgs", "repos_url": "https://api.github.com/users/ruaridhw/repos", "events_url": "https://api.github.com/users/ruaridhw/events{/privacy}", "received_events_url": "https://api.github.com/users/ruaridhw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-16T09:50:20Z", "updated_at": "2020-02-13T16:01:34Z", "closed_at": "2020-02-13T16:01:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "1. Install `cplex==12.10.0`\r\n2. Run a model using the persistent solver\r\n3. The following error occurs\r\n\r\n```\r\n  File \"...venv/lib/python3.7/site-packages/cplex/_internal/_ostream.py\", line 66, in __init__\r\n    raise TypeError(\"outputfile must have a write method\")\r\nTypeError: outputfile must have a write method\r\n```\r\n\r\nThis is due to `pyomo/solvers/plugins/solvers/cplex_direct.py` line 112, (in `_apply_solver`) using a call to `set_results_stream()` that is now deprecated. A deprecation warning was raised in version 12.9.\r\n\r\nThe fix looks pretty straightforward; `CPLEXDirect._log_file` is a string path whereas `Cplex.set_results_stream()` expects a file-like object.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1260/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1187", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1187/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1187/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1187/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1187", "id": 524619836, "node_id": "MDU6SXNzdWU1MjQ2MTk4MzY=", "number": 1187, "title": "Mindtpy error with stale variables when no linear constraints exist", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-18T21:06:39Z", "updated_at": "2020-05-09T05:34:10Z", "closed_at": "2020-05-09T05:34:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This issue is being opened based on a post by @julian-belina: https://github.com/Pyomo/pyomo/issues/1139#issuecomment-555036213\r\n\r\nThe example file is:\r\n```\r\nfrom pyomo.environ import *\r\n\r\n#Create a simple model\r\nmodel = ConcreteModel()\r\n\r\nmodel.x = Var(bounds=(1.0,10.0),initialize=5.0)\r\nmodel.y = Var(within=Binary)\r\n\r\nmodel.c1 = Constraint(expr=(model.x-3.0)**2 <= 50.0*(1-model.y))\r\nmodel.c2 = Constraint(expr=model.x*log(model.x)+5.0 <= 50.0*(model.y))\r\n\r\nmodel.objective = Objective(expr=model.x, sense=minimize)\r\n\r\n#Solve the model using MindtPy\r\nSolverFactory('mindtpy').solve(model, mip_solver='glpk', nlp_solver='ipopt',tee=True) \r\n\r\nmodel.objective.display()\r\nmodel.display()\r\nmodel.pprint()\r\n```\r\n\r\nThe issue lies in that the first master problem does not involve the variable `y` at all, so its value is not updated by the optimizer. Note that both constraints are nonlinear, and OA cuts appear not to have been added for some reason.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1187/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1143", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1143/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1143/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1143/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1143", "id": 511108957, "node_id": "MDU6SXNzdWU1MTExMDg5NTc=", "number": 1143, "title": "Incompatibility with Python 3.8 due to dependency (PyUtilib time.clock)", "user": {"login": "justanothergithubber", "id": 3600019, "node_id": "MDQ6VXNlcjM2MDAwMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3600019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justanothergithubber", "html_url": "https://github.com/justanothergithubber", "followers_url": "https://api.github.com/users/justanothergithubber/followers", "following_url": "https://api.github.com/users/justanothergithubber/following{/other_user}", "gists_url": "https://api.github.com/users/justanothergithubber/gists{/gist_id}", "starred_url": "https://api.github.com/users/justanothergithubber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justanothergithubber/subscriptions", "organizations_url": "https://api.github.com/users/justanothergithubber/orgs", "repos_url": "https://api.github.com/users/justanothergithubber/repos", "events_url": "https://api.github.com/users/justanothergithubber/events{/privacy}", "received_events_url": "https://api.github.com/users/justanothergithubber/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 851971080, "node_id": "MDU6TGFiZWw4NTE5NzEwODA=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.installation", "name": "pyomo.installation", "color": "7967e0", "default": false, "description": "Any issues related to installation of pyomo"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-23T06:39:30Z", "updated_at": "2019-11-07T15:22:45Z", "closed_at": "2019-11-07T15:22:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wrote another issue for the dependency `pyutilib`, and I am raising this issue here so that either the dependency is fixed, or that this package might want to specify `Python<=3.7`.\r\n\r\nThe issue seems to arise from how the package wants to time solvers solving any particular instances, using calls to `time.clock`. However, that function has been replaced by two other functions.\r\n\r\nLink to PyUtilib issue:\r\nPyUtilib/pyutilib#65", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1143/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1139", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1139/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1139/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1139/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1139", "id": 509097412, "node_id": "MDU6SXNzdWU1MDkwOTc0MTI=", "number": 1139, "title": "Error whil using mindtpy", "user": {"login": "julian-belina", "id": 56728940, "node_id": "MDQ6VXNlcjU2NzI4OTQw", "avatar_url": "https://avatars.githubusercontent.com/u/56728940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/julian-belina", "html_url": "https://github.com/julian-belina", "followers_url": "https://api.github.com/users/julian-belina/followers", "following_url": "https://api.github.com/users/julian-belina/following{/other_user}", "gists_url": "https://api.github.com/users/julian-belina/gists{/gist_id}", "starred_url": "https://api.github.com/users/julian-belina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/julian-belina/subscriptions", "organizations_url": "https://api.github.com/users/julian-belina/orgs", "repos_url": "https://api.github.com/users/julian-belina/repos", "events_url": "https://api.github.com/users/julian-belina/events{/privacy}", "received_events_url": "https://api.github.com/users/julian-belina/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-18T13:55:53Z", "updated_at": "2019-11-18T21:00:01Z", "closed_at": "2019-10-26T23:39:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to start the MINLP example presented here:\r\nhttps://pyomo.readthedocs.io/en/stable/contributed_packages/mindtpy.html\r\n\r\nWhen i run the code:\r\n\r\n```\r\nfrom pyomo.environ import *\r\n\r\n# Create a simple model\r\nmodel = ConcreteModel()\r\n\r\nmodel.x = Var(bounds=(1.0, 10.0), initialize=5.0)\r\nmodel.y = Var(within=Binary)\r\n\r\nmodel.c1 = Constraint(expr=(model.x-3.0)**2 <= 50.0*(1-model.y))\r\nmodel.c2 = Constraint(expr=model.x*log(model.x)+5.0 <= 50.0*(model.y))\r\n\r\nmodel.objective = Objective(expr=abs(model.x*model.x), sense=minimize)\r\n\r\n# Solve the model using MindtPy\r\nSolverFactory('mindtpy').solve(model, mip_solver='glpk', nlp_solver='ipopt')\r\nmodel.objective.display()\r\nmodel.display()\r\nmodel.pprint()\r\n```\r\n\r\nI get the following error:\r\n\r\npyomo.common.errors.DeveloperError: Internal Pyomo implementation error:\r\n        \"sympy expression type 're' not found in the operator map\"\r\n        Please report this to the Pyomo Developers.\r\n\r\nI have installed pyomo 5.6.6, pyomo.extras 3.3, and pyomo.solvers 1.0 using Anaconda on Windows 10.\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1139/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1138", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1138/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1138/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1138/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1138", "id": 508849735, "node_id": "MDU6SXNzdWU1MDg4NDk3MzU=", "number": 1138, "title": "PySP errors with networkx 2.4", "user": {"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ghackebeil", "id": 2308454, "node_id": "MDQ6VXNlcjIzMDg0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2308454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghackebeil", "html_url": "https://github.com/ghackebeil", "followers_url": "https://api.github.com/users/ghackebeil/followers", "following_url": "https://api.github.com/users/ghackebeil/following{/other_user}", "gists_url": "https://api.github.com/users/ghackebeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghackebeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghackebeil/subscriptions", "organizations_url": "https://api.github.com/users/ghackebeil/orgs", "repos_url": "https://api.github.com/users/ghackebeil/repos", "events_url": "https://api.github.com/users/ghackebeil/events{/privacy}", "received_events_url": "https://api.github.com/users/ghackebeil/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ghackebeil", "id": 2308454, "node_id": "MDQ6VXNlcjIzMDg0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2308454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghackebeil", "html_url": "https://github.com/ghackebeil", "followers_url": "https://api.github.com/users/ghackebeil/followers", "following_url": "https://api.github.com/users/ghackebeil/following{/other_user}", "gists_url": "https://api.github.com/users/ghackebeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghackebeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghackebeil/subscriptions", "organizations_url": "https://api.github.com/users/ghackebeil/orgs", "repos_url": "https://api.github.com/users/ghackebeil/repos", "events_url": "https://api.github.com/users/ghackebeil/events{/privacy}", "received_events_url": "https://api.github.com/users/ghackebeil/received_events", "type": "User", "site_admin": false}, {"login": "DLWoodruff", "id": 16341380, "node_id": "MDQ6VXNlcjE2MzQxMzgw", "avatar_url": "https://avatars.githubusercontent.com/u/16341380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DLWoodruff", "html_url": "https://github.com/DLWoodruff", "followers_url": "https://api.github.com/users/DLWoodruff/followers", "following_url": "https://api.github.com/users/DLWoodruff/following{/other_user}", "gists_url": "https://api.github.com/users/DLWoodruff/gists{/gist_id}", "starred_url": "https://api.github.com/users/DLWoodruff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DLWoodruff/subscriptions", "organizations_url": "https://api.github.com/users/DLWoodruff/orgs", "repos_url": "https://api.github.com/users/DLWoodruff/repos", "events_url": "https://api.github.com/users/DLWoodruff/events{/privacy}", "received_events_url": "https://api.github.com/users/DLWoodruff/received_events", "type": "User", "site_admin": false}, {"login": "jwatsonnm", "id": 16403740, "node_id": "MDQ6VXNlcjE2NDAzNzQw", "avatar_url": "https://avatars.githubusercontent.com/u/16403740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwatsonnm", "html_url": "https://github.com/jwatsonnm", "followers_url": "https://api.github.com/users/jwatsonnm/followers", "following_url": "https://api.github.com/users/jwatsonnm/following{/other_user}", "gists_url": "https://api.github.com/users/jwatsonnm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwatsonnm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwatsonnm/subscriptions", "organizations_url": "https://api.github.com/users/jwatsonnm/orgs", "repos_url": "https://api.github.com/users/jwatsonnm/repos", "events_url": "https://api.github.com/users/jwatsonnm/events{/privacy}", "received_events_url": "https://api.github.com/users/jwatsonnm/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-10-18T04:37:35Z", "updated_at": "2019-10-25T23:47:43Z", "closed_at": "2019-10-25T23:47:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I recently rebuilt the Travis docker images to include an additional package (pathos, see #1122).  As part of that rebuild, some of the docker images picked up a newer version of `networkx` (2.4 instead of 2.3), which appears to have triggered a slew of PySP test failures, e.g.:\r\n```\r\n======================================================================\r\nERROR: test_bundles (pyomo.pysp.tests.unit.test_scenariotree.TestScenarioTreeFromNetworkX)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/travis/build/Pyomo/pyomo/pyomo/pysp/tests/unit/test_scenariotree.py\", line 745, in test_bundles\r\n    edge_probability_attribute=None)\r\n  File \"/home/travis/build/Pyomo/pyomo/pyomo/pysp/scenariotree/tree_structure_model.py\", line 313, in ScenarioTreeModelFromNetworkX\r\n    networkx.dfs_successors(tree, root))\r\n  File \"/home/travis/build/Pyomo/pyomo/pyomo/pysp/scenariotree/tree_structure_model.py\", line 296, in _setup\r\n    _setup(v, succ)\r\n  File \"/home/travis/build/Pyomo/pyomo/pyomo/pysp/scenariotree/tree_structure_model.py\", line 311, in _setup\r\n    tree.node[u].get('bundle', None)\r\nAttributeError: 'DiGraph' object has no attribute 'node'\r\n```\r\n\r\nFor a full build, see: https://travis-ci.org/Pyomo/pyomo/jobs/597959028\r\n\r\n@ghackebeil: is this a relatively easy fix, or should we rebuild the Docker images and pin to a `networkx` version before 2.4?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1138/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1121", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1121/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1121/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1121/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1121", "id": 497339026, "node_id": "MDU6SXNzdWU0OTczMzkwMjY=", "number": 1121, "title": "dat file parser will convert strings without letters (but other characters) to integers", "user": {"login": "bknueven", "id": 30801372, "node_id": "MDQ6VXNlcjMwODAxMzcy", "avatar_url": "https://avatars.githubusercontent.com/u/30801372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bknueven", "html_url": "https://github.com/bknueven", "followers_url": "https://api.github.com/users/bknueven/followers", "following_url": "https://api.github.com/users/bknueven/following{/other_user}", "gists_url": "https://api.github.com/users/bknueven/gists{/gist_id}", "starred_url": "https://api.github.com/users/bknueven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bknueven/subscriptions", "organizations_url": "https://api.github.com/users/bknueven/orgs", "repos_url": "https://api.github.com/users/bknueven/repos", "events_url": "https://api.github.com/users/bknueven/events{/privacy}", "received_events_url": "https://api.github.com/users/bknueven/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 851968308, "node_id": "MDU6TGFiZWw4NTE5NjgzMDg=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.data", "name": "pyomo.data", "color": "1f1789", "default": false, "description": "Any issues related to data portals and data file parsing"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-23T21:30:52Z", "updated_at": "2020-03-31T18:55:35Z", "closed_at": "2020-03-31T18:55:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[bad_set.zip](https://github.com/Pyomo/pyomo/files/3644219/bad_set.zip)\r\n\r\nThe attached file contains a dat file and pyomo AbstractModel. Contents of bad_set.dat:\r\n```\r\nset BadSet :=\r\n\"12345_67890\"\r\n\"A_12345_67890\"\r\n;\r\n```\r\n\r\nHowever, when I print the contents of BadSet to the screen (or another file) I get:\r\n```\r\n1234567890\r\nA_12345_67890\r\n```\r\ndespite marking this specifically as a string.\r\n\r\nAs a consequence, I cannot even pprint BadSet:\r\n```\r\n1 Set Declarations\r\n    BadSet : Dim=0, Dimen=1, Size=2, Domain=None, Ordered=False, Bounds=None\r\nTraceback (most recent call last):\r\n  File \"bad_set.py\", line 9, in <module>\r\n    i.pprint()\r\n...\r\nTypeError: '<' not supported between instances of 'str' and 'int'\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1121/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1117", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1117/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1117/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1117/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1117", "id": 491231170, "node_id": "MDU6SXNzdWU0OTEyMzExNzA=", "number": 1117, "title": "AttributeError when running install-extras on Fedora 30", "user": {"login": "jg110", "id": 41971633, "node_id": "MDQ6VXNlcjQxOTcxNjMz", "avatar_url": "https://avatars.githubusercontent.com/u/41971633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jg110", "html_url": "https://github.com/jg110", "followers_url": "https://api.github.com/users/jg110/followers", "following_url": "https://api.github.com/users/jg110/following{/other_user}", "gists_url": "https://api.github.com/users/jg110/gists{/gist_id}", "starred_url": "https://api.github.com/users/jg110/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jg110/subscriptions", "organizations_url": "https://api.github.com/users/jg110/orgs", "repos_url": "https://api.github.com/users/jg110/repos", "events_url": "https://api.github.com/users/jg110/events{/privacy}", "received_events_url": "https://api.github.com/users/jg110/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 851971080, "node_id": "MDU6TGFiZWw4NTE5NzEwODA=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.installation", "name": "pyomo.installation", "color": "7967e0", "default": false, "description": "Any issues related to installation of pyomo"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-09T17:38:18Z", "updated_at": "2022-07-21T21:16:29Z", "closed_at": "2022-07-21T21:16:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running `pyomo install-extras` after installing Pyomo via `pip3 install --user pyomo` I get the following error:\r\n\r\n```\r\n$ pyomo install-extras\r\n \r\n------------------------------------------------------------\r\nInstallation Output Logs\r\n  (A summary will be printed below)\r\n------------------------------------------------------------\r\n \r\nTraceback (most recent call last):\r\n  File \"/home/jg110/.local/lib/python3.7/site-packages/pyomo/scripting/plugins/extras.py\", line 80, in install_extras\r\n    pip.logger.consumers = []\r\nAttributeError: module 'pip' has no attribute 'logger'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/jg110/.local/bin/pyomo\", line 10, in <module>\r\n    sys.exit(main_console_script())\r\n  File \"/home/jg110/.local/lib/python3.7/site-packages/pyomo/scripting/pyomo_main.py\", line 92, in main_console_script\r\n    ans = main()\r\n  File \"/home/jg110/.local/lib/python3.7/site-packages/pyomo/scripting/pyomo_main.py\", line 82, in main\r\n    retval = _options.func(_options)\r\n  File \"/home/jg110/.local/lib/python3.7/site-packages/pyomo/scripting/plugins/extras.py\", line 100, in pyomo_subcommand\r\n    return install_extras(options.args, quiet=options.quiet)\r\n  File \"/home/jg110/.local/lib/python3.7/site-packages/pyomo/scripting/plugins/extras.py\", line 83, in install_extras\r\n    pip.log.consumers = []\r\nAttributeError: module 'pip' has no attribute 'log'\r\n```\r\n\r\nThis occurs on Fedora 30. It may be related to Fedora's convention of adding a version number suffix to some executables, e.g. `pip` refers to the Python 2 pip version and `pip3` refers to the Python 3 pip version.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1117/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1113", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1113/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1113/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1113/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1113", "id": 487673555, "node_id": "MDU6SXNzdWU0ODc2NzM1NTU=", "number": 1113, "title": "Baron .bar writer error", "user": {"login": "natalieisenberg", "id": 11052341, "node_id": "MDQ6VXNlcjExMDUyMzQx", "avatar_url": "https://avatars.githubusercontent.com/u/11052341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/natalieisenberg", "html_url": "https://github.com/natalieisenberg", "followers_url": "https://api.github.com/users/natalieisenberg/followers", "following_url": "https://api.github.com/users/natalieisenberg/following{/other_user}", "gists_url": "https://api.github.com/users/natalieisenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/natalieisenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/natalieisenberg/subscriptions", "organizations_url": "https://api.github.com/users/natalieisenberg/orgs", "repos_url": "https://api.github.com/users/natalieisenberg/repos", "events_url": "https://api.github.com/users/natalieisenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/natalieisenberg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-30T21:15:04Z", "updated_at": "2019-10-08T21:08:16Z", "closed_at": "2019-10-08T21:08:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The Baron file writer (**baron_writer.py**) in the expression tree parsing (class ToBaronVisitor, visit() method) seems to be checking \"is\" type as opposed to \"is instance\" of a type. Specifically, I have a certain constraint that has an \"NPV_PowExpression\" object that is being written as a string to the.bar file (meaning, the ** operator for power hasn't been replaced with the \"^\" Baron requires). I think this is happening at line 102 of the baron_writer.py where type is checked against \"is EXPR.PowExpression,\" since NPV_PowExpression is an instance of PowExpression and not a PowExpression type itself.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1113/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1106", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1106/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1106/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1106/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1106", "id": 484591779, "node_id": "MDU6SXNzdWU0ODQ1OTE3Nzk=", "number": 1106, "title": "Block set_value can't assign to index of an IndexedBlock", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-23T15:34:38Z", "updated_at": "2020-01-31T23:34:46Z", "closed_at": "2020-01-31T23:32:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Calling set_value on a Block fails when assigning either a Block or a BlockData to an index in an IndexedBlock.\r\n\r\nIf you assign a Block:\r\n```\r\nm = ConcreteModel()\r\nm.block_list = Block([1, 2])\r\n\r\nmovingBlock = m.some_other_block = Block()\r\nm.del_component(movingBlock)\r\n\r\nm.block_list[1] = movingBlock\r\n```\r\n```\r\nTraceback (most recent call last):\r\n  File \"blockSetValue.py\", line 11, in <module>\r\n    m.block_list[1] = movingBlock\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/indexed_component.py\", line 412, in __setitem__\r\n    return self._setitem_when_not_present(index, val)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/indexed_component.py\", line 675, in _setitem_when_not_present\r\n    obj.set_value(value)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/block.py\", line 711, in set_value\r\n    self.add_component(k,val[k])\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/block.py\", line 923, in add_component\r\n    super(_BlockData, self).__setattr__(name, val)\r\nTypeError: attribute name must be string, not 'NoneType'\r\n```\r\nIf you assign a BlockData:\r\n```\r\nm = ConcreteModel()\r\nm.block_list = Block(Any)\r\n\r\nm.some_other_block_list = Block([3,4])\r\nmovingBlock = m.some_other_block_list[4]\r\nm.del_component(movingBlock)\r\n\r\nm.block_list[len(m.block_list)] = movingBlock\r\n```\r\n```\r\nTraceback (most recent call last):\r\n  File \"blockSetValue.py\", line 21, in <module>\r\n    m.block_list[len(m.block_list)] = movingBlock\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/indexed_component.py\", line 412, in __setitem__\r\n    return self._setitem_when_not_present(index, val)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/indexed_component.py\", line 675, in _setitem_when_not_present\r\n    obj.set_value(value)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/block.py\", line 710, in set_value\r\n    for k in sorted(iterkeys(val)):\r\n  File \"/projects/sems/install/rhel6-x86_64/pyomo/python/six/1.11.0/lib/python2.7/site-packages/six.py\", line 599, in iterkeys\r\n    return d.iterkeys(**kw)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/block.py\", line 549, in __getattr__\r\n    % (self.__class__.__name__, val))\r\nAttributeError: '_BlockData' object has no attribute 'iterkeys'\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1106/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1093", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1093/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1093/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1093/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1093", "id": 475140786, "node_id": "MDU6SXNzdWU0NzUxNDA3ODY=", "number": 1093, "title": "Pynumero BlockSymMatrix does not get updated properly when it contains a BlockMatrix", "user": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}, {"id": 1930447581, "node_id": "MDU6TGFiZWwxOTMwNDQ3NTgx", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/PyNumero", "name": "PyNumero", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, {"login": "carldlaird", "id": 18519762, "node_id": "MDQ6VXNlcjE4NTE5NzYy", "avatar_url": "https://avatars.githubusercontent.com/u/18519762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carldlaird", "html_url": "https://github.com/carldlaird", "followers_url": "https://api.github.com/users/carldlaird/followers", "following_url": "https://api.github.com/users/carldlaird/following{/other_user}", "gists_url": "https://api.github.com/users/carldlaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/carldlaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carldlaird/subscriptions", "organizations_url": "https://api.github.com/users/carldlaird/orgs", "repos_url": "https://api.github.com/users/carldlaird/repos", "events_url": "https://api.github.com/users/carldlaird/events{/privacy}", "received_events_url": "https://api.github.com/users/carldlaird/received_events", "type": "User", "site_admin": false}, {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-07-31T13:20:09Z", "updated_at": "2021-04-20T18:55:48Z", "closed_at": "2021-04-20T18:55:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Pynumero ```BlockSymMatrix``` does not get updated properly when it contains a ```BlockMatrix``` in the off-diagonal and an element of that ```BlockMatrix``` gets updated. For example:\r\n\r\n```\r\n>>> from pyomo.contrib.pynumero.sparse import BlockMatrix, BlockSymMatrix\r\n>>> from scipy.sparse import coo_matrix\r\n>>> import numpy as np\r\n>>> bsm = BlockSymMatrix(2)\r\n>>> bsm[0,0] = coo_matrix(np.eye(2,2))\r\n>>> bm = BlockMatrix(2,1)\r\n>>> bm[0,0] = coo_matrix(np.eye(2,2))\r\n>>> bm[1,0] = coo_matrix(np.eye(2,2))\r\n>>> bsm[1,0] = bm\r\n>>> bsm.toarray()\r\narray([[1., 0., 1., 0., 1., 0.],\r\n       [0., 1., 0., 1., 0., 1.],\r\n       [1., 0., 0., 0., 0., 0.],\r\n       [0., 1., 0., 0., 0., 0.],\r\n       [1., 0., 0., 0., 0., 0.],\r\n       [0., 1., 0., 0., 0., 0.]])\r\n>>> bsm[1,0][1,0] = coo_matrix(2 * np.eye(2,2))\r\n>>> bsm.toarray()\r\narray([[1., 0., 1., 0., 1., 0.],\r\n       [0., 1., 0., 1., 0., 1.],\r\n       [1., 0., 0., 0., 0., 0.],\r\n       [0., 1., 0., 0., 0., 0.],\r\n       [2., 0., 0., 0., 0., 0.],\r\n       [0., 2., 0., 0., 0., 0.]])\r\n>>> \r\n\r\n```\r\n\r\nI have 4 ideas:\r\n\r\n1. This is not how ```BlockSymMatrix``` should be used. \r\n2. We don't allow ```BlockSymMatrix``` to contain block matrices, only scipy sparse matrices.\r\n3. We only allow access to the lower diagonal elements.\r\n4. We implement an observer so that when a block matrix changes, it notifies any matrices that contain it.\r\n\r\nPreferences? Other ideas?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1093/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1090", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1090/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1090/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1090/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1090", "id": 472461359, "node_id": "MDU6SXNzdWU0NzI0NjEzNTk=", "number": 1090, "title": "Limitation with arguments to ExternalFunctions", "user": {"login": "andrewlee94", "id": 16341343, "node_id": "MDQ6VXNlcjE2MzQxMzQz", "avatar_url": "https://avatars.githubusercontent.com/u/16341343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewlee94", "html_url": "https://github.com/andrewlee94", "followers_url": "https://api.github.com/users/andrewlee94/followers", "following_url": "https://api.github.com/users/andrewlee94/following{/other_user}", "gists_url": "https://api.github.com/users/andrewlee94/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewlee94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewlee94/subscriptions", "organizations_url": "https://api.github.com/users/andrewlee94/orgs", "repos_url": "https://api.github.com/users/andrewlee94/repos", "events_url": "https://api.github.com/users/andrewlee94/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewlee94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-24T19:17:27Z", "updated_at": "2021-05-07T19:01:20Z", "closed_at": "2021-05-07T19:01:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a case where I am using `ExternalFunctions` as part of my model. The `ExternalFunction` takes three arguments:\r\n\r\n* a (constant) integer argument indicating an internal option for the function (in this case different forms of cubic equations of state),\r\n* 2 arguments (Variables) from the model.\r\n\r\nAs the first argument is a constant, internal option I would like to provide it as a pure Python variable rather than a Pyomo component. However, if I provide the first argument as a Python `int` then I get the following error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"dummy_frame.py\", line 44, in <module>\r\n    results = solver.solve(m, tee=True)\r\n  File \"/home/alee/pyomo/pyomo/pyomo/opt/base/solvers.py\", line 573, in solve\r\n    self._presolve(*args, **kwds)\r\n  File \"/home/alee/pyomo/pyomo/pyomo/opt/solver/shellcmd.py\", line 198, in _presolve\r\n    OptSolver._presolve(self, *args, **kwds)\r\n  File \"/home/alee/pyomo/pyomo/pyomo/opt/base/solvers.py\", line 673, in _presolve\r\n    **kwds)\r\n  File \"/home/alee/pyomo/pyomo/pyomo/opt/base/solvers.py\", line 744, in _convert_problem\r\n    **kwds)\r\n  File \"/home/alee/pyomo/pyomo/pyomo/opt/base/convert.py\", line 105, in convert_problem\r\n    problem_files, symbol_map = converter.apply(*tmp, **tmpkw)\r\n  File \"/home/alee/pyomo/pyomo/pyomo/solvers/plugins/converter/model.py\", line 191, in apply\r\n    io_options=io_options)\r\n  File \"/home/alee/pyomo/pyomo/pyomo/core/base/block.py\", line 1716, in write\r\n    io_options)\r\n  File \"/home/alee/pyomo/pyomo/pyomo/repn/plugins/ampl/ampl_.py\", line 378, in __call__\r\n    include_all_variable_bounds=include_all_variable_bounds)\r\n  File \"/home/alee/pyomo/pyomo/pyomo/repn/plugins/ampl/ampl_.py\", line 1531, in _print_model_NL\r\n    wrapped_repn.repn.nonlinear_expr)\r\n  File \"/home/alee/pyomo/pyomo/pyomo/repn/plugins/ampl/ampl_.py\", line 529, in _print_nonlinear_terms_NL\r\n    self._print_nonlinear_terms_NL(exp.arg(1))\r\n  File \"/home/alee/pyomo/pyomo/pyomo/repn/plugins/ampl/ampl_.py\", line 528, in _print_nonlinear_terms_NL\r\n    self._print_nonlinear_terms_NL(exp.arg(0))\r\n  File \"/home/alee/pyomo/pyomo/pyomo/repn/plugins/ampl/ampl_.py\", line 503, in _print_nonlinear_terms_NL\r\n    self._print_nonlinear_terms_NL(vargs[0])\r\n  File \"/home/alee/pyomo/pyomo/pyomo/repn/plugins/ampl/ampl_.py\", line 529, in _print_nonlinear_terms_NL\r\n    self._print_nonlinear_terms_NL(exp.arg(1))\r\n  File \"/home/alee/pyomo/pyomo/pyomo/repn/plugins/ampl/ampl_.py\", line 589, in _print_nonlinear_terms_NL\r\n    self._print_nonlinear_terms_NL(exp.arg(0))\r\n  File \"/home/alee/pyomo/pyomo/pyomo/repn/plugins/ampl/ampl_.py\", line 528, in _print_nonlinear_terms_NL\r\n    self._print_nonlinear_terms_NL(exp.arg(0))\r\n  File \"/home/alee/pyomo/pyomo/pyomo/repn/plugins/ampl/ampl_.py\", line 503, in _print_nonlinear_terms_NL\r\n    self._print_nonlinear_terms_NL(vargs[0])\r\n  File \"/home/alee/pyomo/pyomo/pyomo/repn/plugins/ampl/ampl_.py\", line 529, in _print_nonlinear_terms_NL\r\n    self._print_nonlinear_terms_NL(exp.arg(1))\r\n  File \"/home/alee/pyomo/pyomo/pyomo/repn/plugins/ampl/ampl_.py\", line 635, in _print_nonlinear_terms_NL\r\n    self._print_nonlinear_terms_NL(exp.expr)\r\n  File \"/home/alee/pyomo/pyomo/pyomo/repn/plugins/ampl/ampl_.py\", line 569, in _print_nonlinear_terms_NL\r\n    elif arg.is_fixed():\r\nAttributeError: 'int' object has no attribute 'is_fixed'\r\n```\r\n\r\nThe reason is that line 569 in ampl_.py presumes that the argument is a Pyomo component, and thus has the `is_fixed` attribute:\r\n\r\n```\r\n                for arg in exp.args:\r\n                    print(arg)\r\n                    if isinstance(arg, basestring):\r\n                        OUTPUT.write(string_arg_str % (len(arg), arg))\r\n                    elif arg.is_fixed():\r\n                        self._print_nonlinear_terms_NL(arg())\r\n                    else:\r\n                        self._print_nonlinear_terms_NL(arg)\r\n```\r\n\r\nObviously, this precludes using anything other than a `Param` or `Var` for these arguments. However, I would prefer to avoid creating a Pyomo component just for this purpose. Would it be possible to add support for non-Pyomo components are arguments to `ExternalFunctions`?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1090/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1069", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1069/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1069/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1069/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1069", "id": 459261118, "node_id": "MDU6SXNzdWU0NTkyNjExMTg=", "number": 1069, "title": "CUIDs for components indexed by Any", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-21T15:45:33Z", "updated_at": "2020-12-01T19:38:27Z", "closed_at": "2020-12-01T19:38:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems that Component UIDs don't behave the same way when you index by Any. I ran into this with Disjunctions, but here's a simple example with Constraints:\r\n```\r\nfrom pyomo.environ import *\r\n\r\nm = ConcreteModel()\r\nm.x = Var()\r\nm.a = Constraint(Any)\r\n@m.Constraint([0,1])\r\ndef b(m, i):\r\n    return m.x >= i\r\n\r\nm.a[0] = m.x >= 8\r\n\r\nm.pprint()\r\n\r\nif ComponentUID(m.b[0]).find_component(m) is m.b[0]:\r\n    print(\"Life is good\")\r\n\r\nif ComponentUID(m.a[0]).find_component(m) is None:\r\n    print(\"Should this happen?\")\r\n```\r\nBoth of the prints statements run... I should expect m.a to behave like m.b, right?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1069/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1064", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1064/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1064/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1064/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1064", "id": 458723446, "node_id": "MDU6SXNzdWU0NTg3MjM0NDY=", "number": 1064, "title": "Pyomo test dependencies", "user": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 851808904, "node_id": "MDU6TGFiZWw4NTE4MDg5MDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/testing_and_ci", "name": "testing_and_ci", "color": "ef8da4", "default": false, "description": "Any issues related to testing and/or continuous integration (e.g., github, travis, etc.)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-20T15:24:02Z", "updated_at": "2019-06-20T17:35:52Z", "closed_at": "2019-06-20T17:35:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I tested Pyomo on a machine today that does not have GAMS installed, and I got a GDP test failure due to the GAMS not being used.\r\n\r\nThere are two related issues that need to be addressed:\r\n\r\n1. When pyomo tests call the solver available() method, they should pass the argument False, so an exception isn't generated.\r\n\r\n2. We should have at least one CI test that has *no* solvers available.  This will test a condition that developers may not see often, but which new users will see frequently.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1064/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1055", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1055/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1055/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1055/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1055", "id": 454392747, "node_id": "MDU6SXNzdWU0NTQzOTI3NDc=", "number": 1055, "title": "Error with trigonometric functions in GAMS writer interface ", "user": {"login": "pazochoa", "id": 30808587, "node_id": "MDQ6VXNlcjMwODA4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/30808587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pazochoa", "html_url": "https://github.com/pazochoa", "followers_url": "https://api.github.com/users/pazochoa/followers", "following_url": "https://api.github.com/users/pazochoa/following{/other_user}", "gists_url": "https://api.github.com/users/pazochoa/gists{/gist_id}", "starred_url": "https://api.github.com/users/pazochoa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pazochoa/subscriptions", "organizations_url": "https://api.github.com/users/pazochoa/orgs", "repos_url": "https://api.github.com/users/pazochoa/repos", "events_url": "https://api.github.com/users/pazochoa/events{/privacy}", "received_events_url": "https://api.github.com/users/pazochoa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-10T22:01:27Z", "updated_at": "2019-06-11T22:37:59Z", "closed_at": "2019-06-11T22:37:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Gams does not identify the following pyomo expressions: acos,  asin and atan. \r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1055/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1041", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1041/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1041/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1041/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1041", "id": 449603052, "node_id": "MDU6SXNzdWU0NDk2MDMwNTI=", "number": 1041, "title": "Syntax error with GAMS writer", "user": {"login": "TheHuangs", "id": 50746074, "node_id": "MDQ6VXNlcjUwNzQ2MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/50746074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheHuangs", "html_url": "https://github.com/TheHuangs", "followers_url": "https://api.github.com/users/TheHuangs/followers", "following_url": "https://api.github.com/users/TheHuangs/following{/other_user}", "gists_url": "https://api.github.com/users/TheHuangs/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheHuangs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheHuangs/subscriptions", "organizations_url": "https://api.github.com/users/TheHuangs/orgs", "repos_url": "https://api.github.com/users/TheHuangs/repos", "events_url": "https://api.github.com/users/TheHuangs/events{/privacy}", "received_events_url": "https://api.github.com/users/TheHuangs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "carldlaird", "id": 18519762, "node_id": "MDQ6VXNlcjE4NTE5NzYy", "avatar_url": "https://avatars.githubusercontent.com/u/18519762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carldlaird", "html_url": "https://github.com/carldlaird", "followers_url": "https://api.github.com/users/carldlaird/followers", "following_url": "https://api.github.com/users/carldlaird/following{/other_user}", "gists_url": "https://api.github.com/users/carldlaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/carldlaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carldlaird/subscriptions", "organizations_url": "https://api.github.com/users/carldlaird/orgs", "repos_url": "https://api.github.com/users/carldlaird/repos", "events_url": "https://api.github.com/users/carldlaird/events{/privacy}", "received_events_url": "https://api.github.com/users/carldlaird/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "carldlaird", "id": 18519762, "node_id": "MDQ6VXNlcjE4NTE5NzYy", "avatar_url": "https://avatars.githubusercontent.com/u/18519762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carldlaird", "html_url": "https://github.com/carldlaird", "followers_url": "https://api.github.com/users/carldlaird/followers", "following_url": "https://api.github.com/users/carldlaird/following{/other_user}", "gists_url": "https://api.github.com/users/carldlaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/carldlaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carldlaird/subscriptions", "organizations_url": "https://api.github.com/users/carldlaird/orgs", "repos_url": "https://api.github.com/users/carldlaird/repos", "events_url": "https://api.github.com/users/carldlaird/events{/privacy}", "received_events_url": "https://api.github.com/users/carldlaird/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-05-29T05:20:22Z", "updated_at": "2019-06-11T22:37:58Z", "closed_at": "2019-06-11T22:37:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use GAMS to solve a model in the IDAES framework, I use 'symbolic_solver_labels=True' to show the real variables and equations name. but there are syntax errors with the names, which can not start with \" number\" or   \"_ \" in GAMS, which are as shown below.\r\n2_control_volume_properties_out_0_0__conc_mol_comp_Ethanol__16_\r\n_volume_rate_reaction_stoichiometry_constraint_0_0_Liq_H2O__29_", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1041/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1019", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1019/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1019/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1019/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1019", "id": 443224377, "node_id": "MDU6SXNzdWU0NDMyMjQzNzc=", "number": 1019, "title": "Bug in passing boolean parameters to GAMS", "user": {"login": "Johanna1234", "id": 45566892, "node_id": "MDQ6VXNlcjQ1NTY2ODky", "avatar_url": "https://avatars.githubusercontent.com/u/45566892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Johanna1234", "html_url": "https://github.com/Johanna1234", "followers_url": "https://api.github.com/users/Johanna1234/followers", "following_url": "https://api.github.com/users/Johanna1234/following{/other_user}", "gists_url": "https://api.github.com/users/Johanna1234/gists{/gist_id}", "starred_url": "https://api.github.com/users/Johanna1234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Johanna1234/subscriptions", "organizations_url": "https://api.github.com/users/Johanna1234/orgs", "repos_url": "https://api.github.com/users/Johanna1234/repos", "events_url": "https://api.github.com/users/Johanna1234/events{/privacy}", "received_events_url": "https://api.github.com/users/Johanna1234/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-05-13T06:24:26Z", "updated_at": "2019-06-03T18:40:38Z", "closed_at": "2019-06-03T18:40:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Somwhere between Version 5.4.3 and 5.6.1 pyomo changed way passing boolean parameters to GAMS.\r\n\r\nIn pyomo versions <= 5.4.3 the boolean parameters where passed as binaries. That is the right way because GAMS does not have boolean parameters or variables.\r\nWith pyomo 5.6.1 GAMS raises error 140 \"unknown symbol\" because it can not handle stings \"TRUE\"/\"False\" in equations.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1019/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1008", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1008/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1008/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1008/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1008", "id": 441649010, "node_id": "MDU6SXNzdWU0NDE2NDkwMTA=", "number": 1008, "title": "Cython support is broken.", "user": {"login": "basilfx", "id": 815976, "node_id": "MDQ6VXNlcjgxNTk3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/815976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basilfx", "html_url": "https://github.com/basilfx", "followers_url": "https://api.github.com/users/basilfx/followers", "following_url": "https://api.github.com/users/basilfx/following{/other_user}", "gists_url": "https://api.github.com/users/basilfx/gists{/gist_id}", "starred_url": "https://api.github.com/users/basilfx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basilfx/subscriptions", "organizations_url": "https://api.github.com/users/basilfx/orgs", "repos_url": "https://api.github.com/users/basilfx/repos", "events_url": "https://api.github.com/users/basilfx/events{/privacy}", "received_events_url": "https://api.github.com/users/basilfx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 851971080, "node_id": "MDU6TGFiZWw4NTE5NzEwODA=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.installation", "name": "pyomo.installation", "color": "7967e0", "default": false, "description": "Any issues related to installation of pyomo"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-08T09:53:00Z", "updated_at": "2019-05-08T18:57:00Z", "closed_at": "2019-05-08T18:57:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Running `python setup.py install --with-cython` yield an error about `visitor_expr.pyx` not existing.\r\n\r\nIt turns out that the list of files-to-Cythonize in `setup.py` is not up-to-date.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1008/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1003", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1003/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1003/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1003/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1003", "id": 440981960, "node_id": "MDU6SXNzdWU0NDA5ODE5NjA=", "number": 1003, "title": "Discretization leads to ampl preprocessing error", "user": {"login": "bernalde", "id": 8647329, "node_id": "MDQ6VXNlcjg2NDczMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/8647329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernalde", "html_url": "https://github.com/bernalde", "followers_url": "https://api.github.com/users/bernalde/followers", "following_url": "https://api.github.com/users/bernalde/following{/other_user}", "gists_url": "https://api.github.com/users/bernalde/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernalde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernalde/subscriptions", "organizations_url": "https://api.github.com/users/bernalde/orgs", "repos_url": "https://api.github.com/users/bernalde/repos", "events_url": "https://api.github.com/users/bernalde/events{/privacy}", "received_events_url": "https://api.github.com/users/bernalde/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-07T01:19:59Z", "updated_at": "2019-05-08T03:50:27Z", "closed_at": "2019-05-08T03:50:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\nthis small example\r\n\r\n```\r\nfrom pyomo.environ import (ConcreteModel, Constraint,\r\n                           Objective, Param,\r\n                           Var, minimize, SolverFactory)\r\n\r\nfrom pyomo.environ import TransformationFactory\r\nfrom pyomo.dae import ContinuousSet\r\nfrom pyomo.dae import DerivativeVar\r\nfrom pyomo.environ import ConstraintList\r\n\r\n# model m\r\nm = ConcreteModel()\r\n\r\n# Time definitions\r\nm.tf = Param(initialize=1)\r\nm.t = ContinuousSet(bounds=(0, m.tf))\r\n\r\n# Variable definition\r\nm.x = Var(m.t, bounds=(0, 10))\r\n\r\n# Derivative definition\r\nm.dx = DerivativeVar(m.x, wrt=m.t)\r\n\r\n# initial values\r\ndef _init(m):\r\n    yield m.x[m.t.first()] == 1\r\n\r\n\r\nm.init_conditions = ConstraintList(rule=_init)\r\n\r\n\r\n# Differential Equation 4\r\ndef _xdot(m, t):\r\n    if t == m.t.first():\r\n        return Constraint.Skip\r\n    else:\r\n        return m.dx[t] == - (m.x[t])\r\n\r\n\r\nm.xdotcon = Constraint(m.t, rule=_xdot)\r\n\r\n# objective function\r\nm.obj = Objective(expr=-m.x[m.tf], sense=minimize)\r\n\r\n# Discretization\r\ndiscretizer = TransformationFactory('dae.collocation')\r\ndiscretizer.apply_to(m, nfe=10, ncp=3, scheme='LAGRANGE-RADAU')\r\n\r\n# Solving\r\nsolver = SolverFactory('ipopt')\r\nresults = solver.solve(m, tee=True)\r\n```\r\nleads to a not informative error (KeyError: 2915115411248 after trying to generate the expression in line 993 of ampl_.py) error while trying to solve it with IPOPT. When trying to use other solvers (e.g. BARON or GAMS) it works well, pointing that it may be a bug in the ampl parser. Interesting enough, the error does not appear in installations of Pyomo 5.5, while the GAMS solver fails to transform the model as in Issue #340 . Maybe while solving that issue, the ampl solver was affected.\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1003/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1001", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1001/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1001/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1001/events", "html_url": "https://github.com/Pyomo/pyomo/issues/1001", "id": 440665415, "node_id": "MDU6SXNzdWU0NDA2NjU0MTU=", "number": 1001, "title": "Bug in CBCplugin", "user": {"login": "RainSunGone", "id": 47797322, "node_id": "MDQ6VXNlcjQ3Nzk3MzIy", "avatar_url": "https://avatars.githubusercontent.com/u/47797322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RainSunGone", "html_url": "https://github.com/RainSunGone", "followers_url": "https://api.github.com/users/RainSunGone/followers", "following_url": "https://api.github.com/users/RainSunGone/following{/other_user}", "gists_url": "https://api.github.com/users/RainSunGone/gists{/gist_id}", "starred_url": "https://api.github.com/users/RainSunGone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RainSunGone/subscriptions", "organizations_url": "https://api.github.com/users/RainSunGone/orgs", "repos_url": "https://api.github.com/users/RainSunGone/repos", "events_url": "https://api.github.com/users/RainSunGone/events{/privacy}", "received_events_url": "https://api.github.com/users/RainSunGone/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-06T12:01:32Z", "updated_at": "2019-05-24T15:10:48Z", "closed_at": "2019-05-24T15:10:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've spotted a bug in my implementation of: https://github.com/Pyomo/pyomo/pull/874\r\n\r\nIn `pyomo/solvers/plugins/solvers/CBCplugin.py`\r\nLine 479 should read \r\n```python\r\noptim_value = float(tokens[6])\r\n```\r\nInstead of \r\n```python\r\noptim_value = float(tokens[6][:-1])\r\n```\r\n\r\nShall I raise a PR to fix?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/1001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/1001/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/995", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/995/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/995/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/995/events", "html_url": "https://github.com/Pyomo/pyomo/issues/995", "id": 439764956, "node_id": "MDU6SXNzdWU0Mzk3NjQ5NTY=", "number": 995, "title": "TranformationFactory('core.fix_discrete') doesn't work for cloned models", "user": {"login": "RomeoV", "id": 8644490, "node_id": "MDQ6VXNlcjg2NDQ0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8644490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RomeoV", "html_url": "https://github.com/RomeoV", "followers_url": "https://api.github.com/users/RomeoV/followers", "following_url": "https://api.github.com/users/RomeoV/following{/other_user}", "gists_url": "https://api.github.com/users/RomeoV/gists{/gist_id}", "starred_url": "https://api.github.com/users/RomeoV/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RomeoV/subscriptions", "organizations_url": "https://api.github.com/users/RomeoV/orgs", "repos_url": "https://api.github.com/users/RomeoV/repos", "events_url": "https://api.github.com/users/RomeoV/events{/privacy}", "received_events_url": "https://api.github.com/users/RomeoV/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-02T20:07:07Z", "updated_at": "2019-05-07T18:46:08Z", "closed_at": "2019-05-07T18:46:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Summary\r\nI have noticed that often times `TransformationFactory('core.fix_discrete')` doesn't work for a model, i.e. it doesn't actually fix the variables. I have found out that it happens to cloned models (whereas 'normal' models work as expected).\r\n\r\n## Minimal working example\r\n```python\r\nfrom pyomo.environ import *\r\nm = ConcreteModel()\r\nm.y = Var(domain=Integers, bounds=(0,10), initialize=0)\r\nm_clone = m.clone()\r\nTransformationFactory('core.fix_discrete').apply_to(m_clone)\r\nm_clone.pprint()\r\n```\r\nyields\r\n```\r\n1 Var Declarations\r\n    y : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :     0 :     0 :    10 : False : False : Integers\r\n1 Suffix Declarations\r\n    _fixed_discrete_vars : Direction=Suffix.LOCAL, Datatype=Suffix.FLOAT\r\n        Key  : Value\r\n        None :    []\r\n2 Declarations: y _fixed_discrete_vars\r\n```\r\nNotice that the variable `y` didn't actually get fixed. If the `TranformationFactory` is intead applied to model `m`, the behaviour is as expected.\r\n\r\n## Looking into the code\r\nWhen diving into the code, the problem ends up being when the domain of the variable `y` is checked against a list of domains [here](https://github.com/Pyomo/pyomo/blob/ea161615a67b93c2540384eae4cce55e998dc8cc/pyomo/core/plugins/transform/discrete_vars.py#L116-L119)\r\n\r\nThe expression `var.domain in _discrete_relaxation_map` will yield `False`, even though `var` is an Integer.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/995/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/974", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/974/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/974/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/974/events", "html_url": "https://github.com/Pyomo/pyomo/issues/974", "id": 437820524, "node_id": "MDU6SXNzdWU0Mzc4MjA1MjQ=", "number": 974, "title": "Bug in Sequential Decomposition `tear_diff_direct`", "user": {"login": "andrewlee94", "id": 16341343, "node_id": "MDQ6VXNlcjE2MzQxMzQz", "avatar_url": "https://avatars.githubusercontent.com/u/16341343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewlee94", "html_url": "https://github.com/andrewlee94", "followers_url": "https://api.github.com/users/andrewlee94/followers", "following_url": "https://api.github.com/users/andrewlee94/following{/other_user}", "gists_url": "https://api.github.com/users/andrewlee94/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewlee94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewlee94/subscriptions", "organizations_url": "https://api.github.com/users/andrewlee94/orgs", "repos_url": "https://api.github.com/users/andrewlee94/repos", "events_url": "https://api.github.com/users/andrewlee94/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewlee94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 1056124956, "node_id": "MDU6TGFiZWwxMDU2MTI0OTU2", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.network", "name": "pyomo.network", "color": "9ac4f4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-26T19:48:01Z", "updated_at": "2019-04-29T15:54:00Z", "closed_at": "2019-04-29T15:54:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Working with @jsiirola, we have found a bug in the sequential decomposition where an mismatch of indices is occurring.\r\n\r\nIn this case, I have two blocks with Ports with the following structure:\r\n\r\n```\r\nSize=1, Index=None\r\nKey  : Name                : Size : Variable\r\nNone : flow_mol_phase_comp :    8 : fs.H101._inlet_flow_mol_phase_comp_ref\r\n     :            pressure :    1 :            fs.H101._inlet_pressure_ref\r\n     :         temperature :    1 :         fs.H101._inlet_temperature_ref\r\n```\r\n\r\nThese Ports are connected via an Arc, which is the tear stream in my model. However, `flow_mol_phase_comp_ref` is a Pyomo `Reference` with three indices (time, phase, component), which references a set of variables in an indexed block (form: `block[time].flow_mol_phase_comp[phase, component]`).\r\n\r\nWhen running the sequential decomposition, I get the following traceback:\r\n\r\nTraceback (most recent call last):\r\n  File \"module_2.py\", line 196, in <module>\r\n    seq.run(m, function)\r\n  File \"/home/alee/pyomo/pyomo/pyomo/network/decomposition.py\", line 336, in run\r\n    self.solve_tear_direct(**kwds)\r\n  File \"/home/alee/pyomo/pyomo/pyomo/network/foqus_graph.py\", line 123, in solve_tear_direct\r\n    svals, dvals = self.tear_diff_direct(G, tears)\r\n  File \"/home/alee/pyomo/pyomo/pyomo/network/decomposition.py\", line 844, in tear_diff_direct\r\n    dvals.append(value(self.source_dest_peer(arc, name, index)))\r\n  File \"/home/alee/pyomo/pyomo/pyomo/network/decomposition.py\", line 686, in source_dest_peer\r\n    return mem[index]\r\n  File \"/home/alee/pyomo/pyomo/pyomo/core/base/indexed_component.py\", line 334, in __getitem__\r\n    validated_index = self._validate_index(index)\r\n  File \"/home/alee/pyomo/pyomo/pyomo/core/base/indexed_component.py\", line 494, in _validate_index\r\n    % ( idx, self.name, ))\r\nKeyError: \"Index '('Liq', 'benzene')' is not valid for indexed component 'fs.H101._inlet_flow_mol_phase_comp_ref'\"\r\n\r\nIt appears that the sequential decomposition is taking the indexes from the original `flow_mol_phase_comp` variable (some instance), and is trying to use these as the indices for the `flow_mol_phase_comp_ref` reference.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/974/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/969", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/969/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/969/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/969/events", "html_url": "https://github.com/Pyomo/pyomo/issues/969", "id": 437353809, "node_id": "MDU6SXNzdWU0MzczNTM4MDk=", "number": 969, "title": "FBBT can have math domain error in log()", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1290503390, "node_id": "MDU6TGFiZWwxMjkwNTAzMzkw", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.contrib", "name": "pyomo.contrib", "color": "a2f4f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2019-04-25T19:10:33Z", "updated_at": "2019-05-06T12:22:13Z", "closed_at": "2019-05-06T12:22:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In interval,py, we have the following:\r\n```\r\ndef log(xl, xu):\r\n    if xl > 0:\r\n        return math.log(xl), math.log(xu)\r\n    elif xl == 0:\r\n        if xu > 0:\r\n            return -math.inf, math.log(xu)\r\n        else:\r\n            return -math.inf, -math.inf\r\n    else:\r\n        return -math.inf, math.inf\r\n```\r\n\r\nIf `xu = 0`, then `math.log(xu)` raises a ValueError.\r\n\r\n@michaelbynum did you mean to have:\r\n```\r\ndef log(xl, xu):\r\n    if xl > 0 and xu > 0:\r\n        return math.log(xl), math.log(xu)\r\n    elif xl == 0:\r\n        if xu > 0:\r\n            return -math.inf, math.log(xu)\r\n        else:\r\n            return -math.inf, -math.inf\r\n    else:\r\n        return -math.inf, math.inf\r\n```\r\n\r\nI'm also a bit confused about the branch that returns `-math.inf, -math.inf`.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/969/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/930", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/930/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/930/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/930/events", "html_url": "https://github.com/Pyomo/pyomo/issues/930", "id": 430352994, "node_id": "MDU6SXNzdWU0MzAzNTI5OTQ=", "number": 930, "title": "validate does not raise Exception", "user": {"login": "GiorgioBalestrieri", "id": 17710158, "node_id": "MDQ6VXNlcjE3NzEwMTU4", "avatar_url": "https://avatars.githubusercontent.com/u/17710158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GiorgioBalestrieri", "html_url": "https://github.com/GiorgioBalestrieri", "followers_url": "https://api.github.com/users/GiorgioBalestrieri/followers", "following_url": "https://api.github.com/users/GiorgioBalestrieri/following{/other_user}", "gists_url": "https://api.github.com/users/GiorgioBalestrieri/gists{/gist_id}", "starred_url": "https://api.github.com/users/GiorgioBalestrieri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GiorgioBalestrieri/subscriptions", "organizations_url": "https://api.github.com/users/GiorgioBalestrieri/orgs", "repos_url": "https://api.github.com/users/GiorgioBalestrieri/repos", "events_url": "https://api.github.com/users/GiorgioBalestrieri/events{/privacy}", "received_events_url": "https://api.github.com/users/GiorgioBalestrieri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-04-08T09:42:56Z", "updated_at": "2020-02-14T15:19:05Z", "closed_at": "2020-02-11T04:51:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "When `AbstractModel.create_instance` is called, if the `validate` function of a Parameter returns `False`, the value is not assigned but no Exception is raised.\r\n\r\nExample:\r\n```python\r\nfrom pyomo import environ as pe\r\n\r\nm = pe.AbstractModel()\r\n    \r\nm.p = pe.Param(validate = lambda m,v: False)\r\n    \r\ndata = {None:{\r\n    'p': {None: 0.2}}}\r\n\r\ncm = m.create_instance(data=data)\r\n```\r\n\r\ndoes not raise any error. When one tries to retrieve the value though, `ValueError` is raised because the value has not been set.\r\n\r\n```python\r\n>>> cm.p.value\r\nValueError: Error retrieving immutable Param value (p):\r\n\tThe Param value is undefined and no default value is specified.\r\n```\r\n\r\nThere might be reasons not to raise an exception, but failing to set a value silently can create a lot of confusion.\r\n\r\nBesides, the [docs](https://pyomo.readthedocs.io/en/latest/pyomo_modeling_components/Parameters.html?#parameters) clearly say:\r\n> If a value is provided that is less than that, the model instantation would be terminated and an error message issued\r\n\r\nImho, validation is a great feature but I understand it introduces a lot of challenges.\r\nIf the functionality does not behave as expected, it should at least be (temporarily, hopefully) deprecated, or issue a warning.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/930/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/930/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/924", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/924/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/924/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/924/events", "html_url": "https://github.com/Pyomo/pyomo/issues/924", "id": 426072466, "node_id": "MDU6SXNzdWU0MjYwNzI0NjY=", "number": 924, "title": "GAMS writer fails to identify fixed variables in LinearExpression", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-27T16:48:58Z", "updated_at": "2020-05-26T16:25:27Z", "closed_at": "2020-05-26T16:25:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following two tests both fail because the GAMS writer is not able to properly handle the fixed variables in `LinearExpression`.\r\n\r\n```\r\n    def test_quicksum(self):\r\n        m = ConcreteModel()\r\n        m.y = Var(domain=Binary)\r\n        m.c = Constraint(expr=quicksum([m.y, m.y], linear=True) == 1)\r\n        m.y.fix(1)\r\n        lbl = NumericLabeler('x')\r\n        smap = SymbolMap(lbl)\r\n        tc = StorageTreeChecker(m)\r\n        self.assertEqual(expression_to_string(m.c.body, tc, smap=smap), \"2\")\r\n```\r\nexpected: `1 + 1`; output: `x1 + x1`\r\n\r\n```\r\n    def test_quicksum_integer_var_fixed(self):\r\n        m = ConcreteModel()\r\n        m.x = Var()\r\n        m.y = Var(domain=Binary)\r\n        m.c = Constraint(expr=quicksum([m.y, m.y], linear=True) == 1)\r\n        m.o = Objective(expr=m.x ** 2)\r\n        m.y.fix(1)\r\n        os = StringIO()\r\n        m.write(os, format='gams')\r\n        self.assertIn(\"USING nlp\", os.getvalue())\r\n```\r\n\r\nI suspect that this is related in some way to #919, but I am still working to understand the GAMS visitor enough again.\r\n\r\n@gseastream Any quick thoughts?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/924/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/919", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/919/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/919/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/919/events", "html_url": "https://github.com/Pyomo/pyomo/issues/919", "id": 425677057, "node_id": "MDU6SXNzdWU0MjU2NzcwNTc=", "number": 919, "title": "LinearExpression incompatible with identify_variables()", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-26T22:28:15Z", "updated_at": "2019-04-03T16:46:39Z", "closed_at": "2019-04-03T16:46:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`LinearExpression` always returns `expr.nargs() = 0` and has no `args`. This causes the walker for `identify_variables()` to see it as a leaf node. Unfortunately, it is not a leaf node.\r\n\r\nThis issue probably also causes the effect observed in #709.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/919/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/916", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/916/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/916/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/916/events", "html_url": "https://github.com/Pyomo/pyomo/issues/916", "id": 424826175, "node_id": "MDU6SXNzdWU0MjQ4MjYxNzU=", "number": 916, "title": "Incorrect string representation of nested powers", "user": {"login": "mlangiu", "id": 15340151, "node_id": "MDQ6VXNlcjE1MzQwMTUx", "avatar_url": "https://avatars.githubusercontent.com/u/15340151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlangiu", "html_url": "https://github.com/mlangiu", "followers_url": "https://api.github.com/users/mlangiu/followers", "following_url": "https://api.github.com/users/mlangiu/following{/other_user}", "gists_url": "https://api.github.com/users/mlangiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlangiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlangiu/subscriptions", "organizations_url": "https://api.github.com/users/mlangiu/orgs", "repos_url": "https://api.github.com/users/mlangiu/repos", "events_url": "https://api.github.com/users/mlangiu/events{/privacy}", "received_events_url": "https://api.github.com/users/mlangiu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-25T10:29:51Z", "updated_at": "2019-04-25T17:40:12Z", "closed_at": "2019-04-25T17:40:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I assessed an expression containing nested powers from a pyomo model pprint() I was confused to see that it apparently did not uphold right associativity that is assumed by python, thaty is, a ** b ** c should be a ** (b ** c).\r\n\r\n```python\r\nfrom pyomo.environ import *\r\nm = ConcreteModel()\r\nm.x = Var(initialize=2)\r\nx = m.x\r\nexprs =    [2 ** x ** 3, (2 ** x) ** 3, 2 ** (x ** 3)]\r\nexpected = [2 ** 2 ** 3, (2 ** 2) ** 3, 2 ** (2 ** 3)]\r\n\r\n# This gives the expected numerical results, but the string representation of all expr is identical\r\nfor expr, expe in zip(exprs, expected):\r\n    print(f'{expr} gives {expr()}, should be {expe}')\r\n```\r\ngives me\r\n```text\r\n2**x**3 gives 256, should be 256\r\n2**x**3 gives 64, should be 64\r\n2**x**3 gives 256, should be 256\r\n```\r\n\r\nSo it turned out that the operator precedence acually agrees with python but the string representation is wrong:\r\n\r\n```python\r\n# Here's the expected output:\r\ndef expect(expr):\r\n    try:\r\n        expr.args\r\n        return f'({expr})'\r\n    except AttributeError:\r\n        return str(expr)\r\nfor expr in exprs:\r\n    base, exponent = expr.args\r\n    print(f'{expr}, should be printed as {expect(base)} ** {expect(exponent)}')\r\n```\r\n\r\ngives me\r\n```text\r\n2**x**3, should be printed as 2 ** (x**3)\r\n2**x**3, should be printed as (2**x) ** 3\r\n2**x**3, should be printed as 2 ** (x**3)\r\n```\r\n\r\n---\r\n\r\n- pyomo '5.6.1' \r\n- python '3.6.7 |Anaconda, Inc.| (default, Dec 10 2018, 20:35:02) [MSC v.1915 64 bit (AMD64)]'", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/916/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/912", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/912/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/912/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/912/events", "html_url": "https://github.com/Pyomo/pyomo/issues/912", "id": 424244839, "node_id": "MDU6SXNzdWU0MjQyNDQ4Mzk=", "number": 912, "title": "Cloning models with references does not preserve the references correctly", "user": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-03-22T14:44:55Z", "updated_at": "2019-03-26T20:42:48Z", "closed_at": "2019-03-26T20:42:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The ```_data``` attribute of a reference is of type ```_ReferenceDict``` which has a ```_slice``` attribute which should be an ```_IndexedComponent_slice``` object. However, when a model gets cloned, this ```_slice``` attribute becomes a list. This causes an error when iterating over components in the model:\r\n\r\n```\r\n>>> import pyomo.environ as pe\r\n>>> m = pe.ConcreteModel()\r\n>>> m.x = pe.Var()\r\n>>> m.x_ref = pe.Reference(m.x)\r\n>>> m2 = m.clone()\r\n>>> m.x_ref._data._slice\r\n<pyomo.core.base.indexed_component_slice._IndexedComponent_slice object at 0x151fa63438>\r\n>>> m2.x_ref._data._slice\r\n[<pyomo.core.base.var.SimpleVar object at 0x152002b048>]\r\n>>> for v in m.component_data_objects(pe.Var):\r\n...     print(v)\r\n... \r\nx\r\nx\r\n>>> for v in m2.component_data_objects(pe.Var):\r\n...     print(v)\r\n... \r\nx\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/.../pyomo/core/base/block.py\", line 1342, in component_data_objects\r\n    sort=sort):\r\n  File \"/Users/.../pyomo/core/base/block.py\", line 1274, in _component_data_iter\r\n    for idx, compData in _items:\r\n  File \"/Users/.../pyomo/core/base/indexed_component.py\", line 309, in iteritems\r\n    yield key, self[key]\r\n  File \"/Users/.../pyomo/core/base/indexed_component.py\", line 319, in __getitem__\r\n    obj = self._data.get(index, _NotFound)\r\n  File \"/Users/.../_collections_abc.py\", line 660, in get\r\n    return self[key]\r\n  File \"/Users/.../pyomo/core/base/reference.py\", line 178, in __getitem__\r\n    self._get_iter(self._slice, key, get_if_not_present=True)\r\n  File \"/Users/.../pyomo/core/base/reference.py\", line 292, in _get_iter\r\n    get_if_not_present=get_if_not_present)\r\n  File \"/Users/.../pyomo/core/base/indexed_component_slice.py\", line 265, in __init__\r\n    call_stack = self._slice._call_stack\r\nAttributeError: 'list' object has no attribute '_call_stack'\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/912/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/910", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/910/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/910/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/910/events", "html_url": "https://github.com/Pyomo/pyomo/issues/910", "id": 424101481, "node_id": "MDU6SXNzdWU0MjQxMDE0ODE=", "number": 910, "title": "NEOS interface broken for certain solvers ", "user": {"login": "mlangiu", "id": 15340151, "node_id": "MDQ6VXNlcjE1MzQwMTUx", "avatar_url": "https://avatars.githubusercontent.com/u/15340151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlangiu", "html_url": "https://github.com/mlangiu", "followers_url": "https://api.github.com/users/mlangiu/followers", "following_url": "https://api.github.com/users/mlangiu/following{/other_user}", "gists_url": "https://api.github.com/users/mlangiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlangiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlangiu/subscriptions", "organizations_url": "https://api.github.com/users/mlangiu/orgs", "repos_url": "https://api.github.com/users/mlangiu/repos", "events_url": "https://api.github.com/users/mlangiu/events{/privacy}", "received_events_url": "https://api.github.com/users/mlangiu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-03-22T08:46:48Z", "updated_at": "2021-02-01T19:05:26Z", "closed_at": "2021-02-01T19:05:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey I just noticed that the NEOS interface seems to be broken, here's a minimal working example:\r\n\r\n```python\r\nfrom pyomo.environ import *\r\nm = ConcreteModel()\r\nm.x = Var()\r\nm.y = Var()\r\nm.c = ConstraintList()\r\nm.c.add(2 * m.x >= m.y)\r\nm.o = Objective(expr=m.x**2 + m.y**2)\r\n\r\n\r\ndef solve(solver):\r\n    with SolverManagerFactory('neos') as manager:\r\n        opt = SolverFactory(solver, validate=False)\r\n        results = manager.solve(m, opt=opt)\r\n\r\n\r\nsolve('minlp')  # ERROR: Error parsing NEOS solution file\r\nsolve('knitro')  # Error parsing NEOS solution file\r\nsolve('snopt')  # ERROR: Error loading NEOS solution into model\r\n```\r\n\r\nMy Versions:\r\nOS: Win10 Enterprise\r\n```python\r\nprint(pyomo.version.version)  # 5.5.1\r\nimport sys\r\nprint(sys.version)\r\n# '3.6.7 |Anaconda, Inc.| (default, Dec 10 2018, 20:35:02) [MSC v.1915 64 bit (AMD64)]'\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/910/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/910/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/902", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/902/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/902/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/902/events", "html_url": "https://github.com/Pyomo/pyomo/issues/902", "id": 422130206, "node_id": "MDU6SXNzdWU0MjIxMzAyMDY=", "number": 902, "title": "BARON writer parentheses issue (arithmetic operator after unary operator) causing \"NonLinearity Error in POW expression\" error", "user": {"login": "chrlan90", "id": 48587611, "node_id": "MDQ6VXNlcjQ4NTg3NjEx", "avatar_url": "https://avatars.githubusercontent.com/u/48587611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrlan90", "html_url": "https://github.com/chrlan90", "followers_url": "https://api.github.com/users/chrlan90/followers", "following_url": "https://api.github.com/users/chrlan90/following{/other_user}", "gists_url": "https://api.github.com/users/chrlan90/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrlan90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrlan90/subscriptions", "organizations_url": "https://api.github.com/users/chrlan90/orgs", "repos_url": "https://api.github.com/users/chrlan90/repos", "events_url": "https://api.github.com/users/chrlan90/events{/privacy}", "received_events_url": "https://api.github.com/users/chrlan90/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-18T10:04:12Z", "updated_at": "2019-04-25T17:40:12Z", "closed_at": "2019-04-25T17:40:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I believe that one reason for causing the \"NonLinearity Error in POW expression\" error message is the omission of (for BARON necessary) parentheses by sympy/pyomo. If e.g. a constraint in pyomo is defined the following way:\r\nmodel.con = Constraint(expr=model.x1 - 60*model.x2**(-1) * 50*model.x3 == 0)\r\nthe constraint's expression will be written (by baron_writer.py):\r\ncon: x1 - 60*x2^-1 * 50*x3 == 0;\r\nThe expression, however, is (unitentionally) misinterpreted by BARON the following way:\r\nx1 - 60*x2^(-1 * 50*x3) == 0; (see attached screenshot of BARON manual)\r\n![page in baron manual on arithmetic operators in exponents](https://user-images.githubusercontent.com/48587611/54521868-23f40100-496c-11e9-8a04-303859138131.PNG)\r\n\r\nIn this simplified case it is of course easy to fix by defining the constraint differently. However, if constraint expressions are generated by e.g. pyomo.core.base.symbolic.differentiate(), I believe the best option to fix this problem, is in constraint section of the baron_writer.py \r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/902/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/843", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/843/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/843/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/843/events", "html_url": "https://github.com/Pyomo/pyomo/issues/843", "id": 406027662, "node_id": "MDU6SXNzdWU0MDYwMjc2NjI=", "number": 843, "title": "GDP Basic Steps - Error after Hull reformulation", "user": {"login": "RomeoV", "id": 8644490, "node_id": "MDQ6VXNlcjg2NDQ0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8644490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RomeoV", "html_url": "https://github.com/RomeoV", "followers_url": "https://api.github.com/users/RomeoV/followers", "following_url": "https://api.github.com/users/RomeoV/following{/other_user}", "gists_url": "https://api.github.com/users/RomeoV/gists{/gist_id}", "starred_url": "https://api.github.com/users/RomeoV/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RomeoV/subscriptions", "organizations_url": "https://api.github.com/users/RomeoV/orgs", "repos_url": "https://api.github.com/users/RomeoV/repos", "events_url": "https://api.github.com/users/RomeoV/events{/privacy}", "received_events_url": "https://api.github.com/users/RomeoV/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838440520, "node_id": "MDU6TGFiZWw4Mzg0NDA1MjA=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.gdp", "name": "pyomo.gdp", "color": "a848f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-02T22:10:08Z", "updated_at": "2021-09-16T21:02:23Z", "closed_at": "2021-09-16T21:02:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\nI implemented a complete GDP example using basic steps and solving via reformulation to MINLP.  \r\nAfter setting up the base model I can reformulate via `BigM` and `CHull` just fine. But after I apply a basic step between two disjunctions, the reformulation via `CHull` fails (see error below). `BigM` works just fine though.\r\n\r\n## How to reproduce\r\nCheck out [the example file](/RomeoV/pyomo/blob/implementing_basic_step_example/examples/gdp/small_lit/basic_step.py) in [the branch in my fork](/RomeoV/pyomo/tree/implementing_basic_step_example). In the method `solve_basic_step_model()`, change reformulation to use `CHull` instead of `BigM` and then run the example file.\r\n\r\n## Error log\r\n```\r\n[2] Solving basic step model\r\nTraceback (most recent call last):\r\n  File \"basic_step.py\", line 78, in <module>\r\n    solve_basic_step_model()\r\n  File \"basic_step.py\", line 60, in solve_basic_step_model\r\n    m_bs_chull = TransformationFactory('gdp.chull').create_using(m_base)\r\n  File \"/home/romeo/Documents/CMU/Research/pyomo/pyomo/core/base/plugin.py\", line 254, in create_using\r\n    new_model = self._create_using(model, **kwds)\r\n  File \"/home/romeo/Documents/CMU/Research/pyomo/pyomo/core/base/plugin.py\", line 274, in _create_using\r\n    self._apply_to(instance, **kwds)\r\n  File \"/home/romeo/Documents/CMU/Research/pyomo/pyomo/gdp/plugins/chull.py\", line 205, in _apply_to\r\n    self._transformBlock(t, transBlock)\r\n  File \"/home/romeo/Documents/CMU/Research/pyomo/pyomo/gdp/plugins/chull.py\", line 264, in _transformBlock\r\n    self._transformBlockData(obj[i], transBlock)\r\n  File \"/home/romeo/Documents/CMU/Research/pyomo/pyomo/gdp/plugins/chull.py\", line 275, in _transformBlockData\r\n    self._transformDisjunction(disjunction, transBlock)\r\n  File \"/home/romeo/Documents/CMU/Research/pyomo/pyomo/gdp/plugins/chull.py\", line 349, in _transformDisjunction\r\n    self._transformDisjunctionData(obj[i], transBlock, i)\r\n  File \"/home/romeo/Documents/CMU/Research/pyomo/pyomo/gdp/plugins/chull.py\", line 429, in _transformDisjunctionData\r\n    localVars[disjunct])\r\n  File \"/home/romeo/Documents/CMU/Research/pyomo/pyomo/gdp/plugins/chull.py\", line 589, in _transform_disjunct\r\n    zero_substitute_map)\r\n  File \"/home/romeo/Documents/CMU/Research/pyomo/pyomo/gdp/plugins/chull.py\", line 616, in _transform_block_components\r\n    zero_substitute_map)\r\n  File \"/home/romeo/Documents/CMU/Research/pyomo/pyomo/gdp/plugins/chull.py\", line 682, in _transform_block_on_disjunct\r\n    block, disjunct, infodict, var_substitute_map, zero_substitute_map)\r\n  File \"/home/romeo/Documents/CMU/Research/pyomo/pyomo/gdp/plugins/chull.py\", line 602, in _transform_block_components\r\n    for name, obj in list(iteritems(block.component_map())):\r\nAttributeError: 'IndexedBlock' object has no attribute 'component_map'\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/843/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/835", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/835/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/835/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/835/events", "html_url": "https://github.com/Pyomo/pyomo/issues/835", "id": 404826981, "node_id": "MDU6SXNzdWU0MDQ4MjY5ODE=", "number": 835, "title": "Non-deterministic behavior with Set (shouldn't the default be ordered)", "user": {"login": "carldlaird", "id": 18519762, "node_id": "MDQ6VXNlcjE4NTE5NzYy", "avatar_url": "https://avatars.githubusercontent.com/u/18519762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carldlaird", "html_url": "https://github.com/carldlaird", "followers_url": "https://api.github.com/users/carldlaird/followers", "following_url": "https://api.github.com/users/carldlaird/following{/other_user}", "gists_url": "https://api.github.com/users/carldlaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/carldlaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carldlaird/subscriptions", "organizations_url": "https://api.github.com/users/carldlaird/orgs", "repos_url": "https://api.github.com/users/carldlaird/repos", "events_url": "https://api.github.com/users/carldlaird/events{/privacy}", "received_events_url": "https://api.github.com/users/carldlaird/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-30T15:33:19Z", "updated_at": "2019-04-12T20:54:05Z", "closed_at": "2019-04-12T20:54:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I thought that pull request https://github.com/Pyomo/pyomo/pull/568 was going to make Sets be ordered by default. However, the following behavior illustrates that this is not the case.\r\n\r\nPlease see the following code:\r\n```\r\nfrom pyomo.environ import *\r\na = [\"a\", \"x\", \"c\", \"b\"]\r\n\r\nmodel = ConcreteModel()\r\nmodel.S = Set(initialize=a)\r\nmodel.OS = Set(initialize=a, ordered=True)\r\n\r\nmodel.S.pprint()\r\nmodel.OS.pprint()\r\n\r\nprint('set not ordered: {}'.format([i for i in model.S]))\r\nprint('set ordered: {}'.format([i for i in model.OS]))\r\n```\r\n\r\nThe first time I run this, I get:\r\n```\r\nS : Dim=0, Dimen=1, Size=4, Domain=None, Ordered=False, Bounds=None\r\n    ['a', 'b', 'c', 'x']\r\nOS : Dim=0, Dimen=1, Size=4, Domain=None, Ordered=Insertion, Bounds=None\r\n    ['a', 'x', 'c', 'b']\r\nset not ordered: ['c', 'a', 'x', 'b']\r\nset ordered: ['a', 'x', 'c', 'b']\r\n```\r\n\r\nand the second time, I get:\r\n```\r\nS : Dim=0, Dimen=1, Size=4, Domain=None, Ordered=False, Bounds=None\r\n    ['a', 'b', 'c', 'x']\r\nOS : Dim=0, Dimen=1, Size=4, Domain=None, Ordered=Insertion, Bounds=None\r\n    ['a', 'x', 'c', 'b']\r\nset not ordered: ['c', 'a', 'b', 'x']\r\nset ordered: ['a', 'x', 'c', 'b']\r\n```\r\n\r\nTo me, this implies the following:\r\n1) ordered does not appear to be the default (see the Set pprint)\r\n2) If you mark a set as ordered, then the order in the set appears to be the same as the initialize list and the order is maintained during iteration.\r\n3) If you do not mark a set as ordered, then the order in the set is not the same as the initialize list (although it appears to be consistent), but the order during iteration is not consistent (and does not match the order in the Set).\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/835/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/822", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/822/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/822/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/822/events", "html_url": "https://github.com/Pyomo/pyomo/issues/822", "id": 402818566, "node_id": "MDU6SXNzdWU0MDI4MTg1NjY=", "number": 822, "title": "Problems with setup.py when failures arise", "user": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 851971080, "node_id": "MDU6TGFiZWw4NTE5NzEwODA=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.installation", "name": "pyomo.installation", "color": "7967e0", "default": false, "description": "Any issues related to installation of pyomo"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-24T17:33:48Z", "updated_at": "2019-01-24T23:28:54Z", "closed_at": "2019-01-24T23:28:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm seeing the following error on Linux using Python 3.7.  FWIW, the underlying error is that the PyUtilib master branch hasn't been installed, which is now required to install the Pyomo master branch:\r\n\r\n> Traceback (most recent call last):\r\n>   File \"/home/wehart/anaconda3/envs/simple/lib/python3.7/distutils/core.py\", line 148, in setup\r\n>     dist.run_commands()\r\n>   File \"/home/wehart/anaconda3/envs/simple/lib/python3.7/distutils/dist.py\", line 966, in run_commands\r\n>     self.run_command(cmd)\r\n>   File \"/home/wehart/anaconda3/envs/simple/lib/python3.7/distutils/dist.py\", line 985, in run_command\r\n>     cmd_obj.run()\r\n>   File \"/home/wehart/anaconda3/envs/simple/lib/python3.7/site-packages/setuptools/command/develop.py\", line 38, in run\r\n>     self.install_for_development()\r\n>   File \"/home/wehart/anaconda3/envs/simple/lib/python3.7/site-packages/setuptools/command/develop.py\", line 154, in install_for_development\r\n>     self.process_distribution(None, self.dist, not self.no_deps)\r\n>   File \"/home/wehart/anaconda3/envs/simple/lib/python3.7/site-packages/setuptools/command/easy_install.py\", line 752, in process_distribution\r\n>     [requirement], self.local_index, self.easy_install\r\n>   File \"/home/wehart/anaconda3/envs/simple/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 780, in resolve\r\n>     replace_conflicting=replace_conflicting\r\n>   File \"/home/wehart/anaconda3/envs/simple/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 1063, in best_match\r\n>     return self.obtain(req, installer)\r\n>   File \"/home/wehart/anaconda3/envs/simple/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 1075, in obtain\r\n>     return installer(requirement)\r\n>   File \"/home/wehart/anaconda3/envs/simple/lib/python3.7/site-packages/setuptools/command/easy_install.py\", line 673, in easy_install\r\n>     raise DistutilsError(msg)\r\n> distutils.errors.DistutilsError: Could not find suitable distribution for Requirement.parse('PyUtilib>=5.6.6.dev0')\r\n> \r\n> During handling of the above exception, another exception occurred:\r\n> \r\n> Traceback (most recent call last):\r\n>   File \"setup.py\", line 191, in <module>\r\n>     run_setup()\r\n>   File \"setup.py\", line 187, in run_setup\r\n>     \"\"\"\r\n>   File \"/home/wehart/anaconda3/envs/simple/lib/python3.7/site-packages/setuptools/__init__.py\", line 143, in setup\r\n>     return distutils.core.setup(**attrs)\r\n>   File \"/home/wehart/anaconda3/envs/simple/lib/python3.7/distutils/core.py\", line 163, in setup\r\n>     raise SystemExit(\"error: \" + str(msg))\r\n> SystemExit: error: Could not find suitable distribution for Requirement.parse('PyUtilib>=5.6.6.dev0')\r\n> \r\n> During handling of the above exception, another exception occurred:\r\n> \r\n> Traceback (most recent call last):\r\n>   File \"setup.py\", line 197, in <module>\r\n>     if 'Microsoft Visual C++' not in e_info.message:\r\n> AttributeError: 'SystemExit' object has no attribute 'message'\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/822/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/809", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/809/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/809/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/809/events", "html_url": "https://github.com/Pyomo/pyomo/issues/809", "id": 400556806, "node_id": "MDU6SXNzdWU0MDA1NTY4MDY=", "number": 809, "title": "Pyomo 5.6 CPLEX \"Unallowed character (:) found in CPLEX log file\" ValueError on Windows", "user": {"login": "jrlooker", "id": 22041063, "node_id": "MDQ6VXNlcjIyMDQxMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/22041063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrlooker", "html_url": "https://github.com/jrlooker", "followers_url": "https://api.github.com/users/jrlooker/followers", "following_url": "https://api.github.com/users/jrlooker/following{/other_user}", "gists_url": "https://api.github.com/users/jrlooker/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrlooker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrlooker/subscriptions", "organizations_url": "https://api.github.com/users/jrlooker/orgs", "repos_url": "https://api.github.com/users/jrlooker/repos", "events_url": "https://api.github.com/users/jrlooker/events{/privacy}", "received_events_url": "https://api.github.com/users/jrlooker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-18T03:24:09Z", "updated_at": "2019-01-18T21:35:56Z", "closed_at": "2019-01-18T14:59:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nAfter installing Pyomo 5.6, my unit tests fail on Windows 7. Here are the details:\r\n\r\nfilename = 'C:\\\\Users\\\\<username>\\\\AppData\\\\Local\\\\Temp\\\\tmp9v95r1qz.cplex.log'\r\ndescription = 'log'\r\n\r\n    def _validate_file_name(cplex, filename, description):\r\n        \"\"\"Validate filenames against the set of allowable chaacters in CPLEX.\r\n\r\n        Returns the filename, possibly enclosed in double-quotes, or raises\r\n        a ValueError is unallowable characters are found.\r\n        \"\"\"\r\n       ...\r\nE           ValueError: Unallowed character (:) found in CPLEX log file path/name.\r\nE               For portability reasons, only [a-zA-Z0-9 .-_] are allowed.\r\n\r\n..\\..\\AppData\\Local\\Continuum\\Anaconda3\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\CPLEX.py:53: ValueError\r\n\r\nIt seems that \"C:\\\\path...\" is no longer valid in Pyomo 5.6, which is a bit difficult on Windows.\r\n\r\nOthers are experiencing the same problem:\r\n\r\nhttps://stackoverflow.com/questions/54095681/why-am-i-getting-an-unallowed-character-error-in-pyomo-with-cplex\r\n\r\nCan you fix this?\r\n\r\nThanks. ", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/809/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/787", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/787/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/787/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/787/events", "html_url": "https://github.com/Pyomo/pyomo/issues/787", "id": 391898425, "node_id": "MDU6SXNzdWUzOTE4OTg0MjU=", "number": 787, "title": "Check for unrecognized transformation options in Pyomo.DAE", "user": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 835396803, "node_id": "MDU6TGFiZWw4MzUzOTY4MDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.dae", "name": "pyomo.dae", "color": "209fbc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-12-17T21:32:55Z", "updated_at": "2019-04-25T16:56:17Z", "closed_at": "2019-04-25T16:56:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Unrecognized transformation options are currently ignored in Pyomo.DAE. The discretizations need to be \"robustified\" by using ConfigBlocks to check specified options or checking for an empty kwds dict after the expected options are processed.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/787/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/776", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/776/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/776/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/776/events", "html_url": "https://github.com/Pyomo/pyomo/issues/776", "id": 389414558, "node_id": "MDU6SXNzdWUzODk0MTQ1NTg=", "number": 776, "title": "Discretizing components with multi-dimensional indexing Sets", "user": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 835396803, "node_id": "MDU6TGFiZWw4MzUzOTY4MDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.dae", "name": "pyomo.dae", "color": "209fbc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-12-10T17:46:54Z", "updated_at": "2019-04-25T16:56:17Z", "closed_at": "2019-04-25T16:56:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There is a subtle bug in Pyomo.DAE when discretizing components indexed by multi-dimensional Sets. The following works:\r\n\r\n    m = ConcreteModel()\r\n    m.s = Set(initialize=[('A','B'),('C','D')])\r\n    m.t = ContinuousSet(bounds=(0,1))\r\n    m.v = Var(m.t, m.s)\r\n    m.dv = DerivativeVar(m.v)\r\n    TransformationFactory('dae.finite_difference').apply_to(m, nfe=2)\r\n\r\nbut if the indexing sets are reordered, the discretization fails:\r\n\r\n    m = ConcreteModel()\r\n    m.s = Set(initialize=[('A','B'),('C','D')])\r\n    m.t = ContinuousSet(bounds=(0,1))\r\n    m.v = Var(m.s, m.t)\r\n    m.dv = DerivativeVar(m.v)\r\n    TransformationFactory('dae.finite_difference').apply_to(m, nfe=2)\r\n\r\nThis bug was reported by a user on the Pyomo forum.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/776/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/758", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/758/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/758/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/758/events", "html_url": "https://github.com/Pyomo/pyomo/issues/758", "id": 384439095, "node_id": "MDU6SXNzdWUzODQ0MzkwOTU=", "number": 758, "title": "RangeSet next method fails", "user": {"login": "GiorgioBalestrieri", "id": 17710158, "node_id": "MDQ6VXNlcjE3NzEwMTU4", "avatar_url": "https://avatars.githubusercontent.com/u/17710158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GiorgioBalestrieri", "html_url": "https://github.com/GiorgioBalestrieri", "followers_url": "https://api.github.com/users/GiorgioBalestrieri/followers", "following_url": "https://api.github.com/users/GiorgioBalestrieri/following{/other_user}", "gists_url": "https://api.github.com/users/GiorgioBalestrieri/gists{/gist_id}", "starred_url": "https://api.github.com/users/GiorgioBalestrieri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GiorgioBalestrieri/subscriptions", "organizations_url": "https://api.github.com/users/GiorgioBalestrieri/orgs", "repos_url": "https://api.github.com/users/GiorgioBalestrieri/repos", "events_url": "https://api.github.com/users/GiorgioBalestrieri/events{/privacy}", "received_events_url": "https://api.github.com/users/GiorgioBalestrieri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-26T17:40:40Z", "updated_at": "2019-09-24T18:42:43Z", "closed_at": "2019-09-24T18:42:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThe `next` method of a `RangeSet` fails consistently.\r\nIt seems the reason is that `RangeSet` is always virtual (even if I pass `virtual=False` to the constructor), and virtual sets do not populate the `ordered_dict` field (or better, keep it as an empty dictionary).\r\n\r\nI know by definition `+ 1` should be a reasonable replacement for `next` within a `RangeSet`, what I don't like is the fact that I need to change my constraint definitions if I change from a `Set` to a `RangeSet`, which is not great (and in particular breaks the Liskov substitution principle of SOLID).\r\n\r\nThis extends to any Set which is both ordered and virtual.\r\n\r\nThe easiest solution I see is to override the `next` methods for `RangeSet`s as\r\n```python\r\ndef next(self, match_element, k=1):\r\n    return self[match_element + k]\r\n```\r\n\r\nAn alternative is to allow the creation of non-virtual `RangeSet`s., if `virtual=False` is passed to the constructor.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/758/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/750", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/750/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/750/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/750/events", "html_url": "https://github.com/Pyomo/pyomo/issues/750", "id": 381266455, "node_id": "MDU6SXNzdWUzODEyNjY0NTU=", "number": 750, "title": "Bug in writers when using Params to index Vars", "user": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-15T17:31:37Z", "updated_at": "2019-05-12T17:27:55Z", "closed_at": "2019-05-12T17:27:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following toy model throws a key error:\r\n\r\n```\r\nfrom pyomo.environ import *\r\nm = ConcreteModel()\r\n\r\nm.p = Param(initialize=0)\r\n\r\nm.s =  Set(initialize=[0,10])\r\nm.x1 = Var(m.s, bounds=(0,10))\r\n\r\nm.con = Constraint(expr=m.x1[0]<=10)\r\nm.obj = Objective(expr=m.x1[m.p])\r\n\r\nSolverFactory('glpk').solve(m,tee=True)\r\n```\r\nError message:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"temp.py\", line 12, in <module>\r\n    SolverFactory('glpk').solve(m,tee=True)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/opt/base/solvers.py\", line 569, in solve\r\n    self._presolve(*args, **kwds)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/opt/solver/shellcmd.py\", line 200, in _presolve\r\n    OptSolver._presolve(self, *args, **kwds)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/opt/base/solvers.py\", line 669, in _presolve\r\n    **kwds)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/opt/base/solvers.py\", line 740, in _convert_problem\r\n    **kwds)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/opt/base/convert.py\", line 105, in convert_problem\r\n    problem_files, symbol_map = converter.apply(*tmp, **tmpkw)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/solvers/plugins/converter/model.py\", line 88, in apply\r\n    io_options=io_options)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/core/base/block.py\", line 1711, in write\r\n    io_options)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/repn/plugins/cpxlp.py\", line 175, in __call__\r\n    include_all_variable_bounds=include_all_variable_bounds)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/repn/plugins/cpxlp.py\", line 697, in _print_model_LP\r\n    column_order)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/repn/plugins/cpxlp.py\", line 217, in _print_expr_canonical\r\n    names = [variable_symbol_dictionary[id(var)] for var in x.linear_vars]\r\n  File \"/home/blnicho/Research/pyomo/pyomo/repn/plugins/cpxlp.py\", line 217, in <listcomp>\r\n    names = [variable_symbol_dictionary[id(var)] for var in x.linear_vars]\r\nKeyError: 139870770319848\r\n```\r\n\r\nThe same error is thrown in the ampl writer if the solver in the toy model is changed to Ipopt.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/750/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/747", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/747/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/747/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/747/events", "html_url": "https://github.com/Pyomo/pyomo/issues/747", "id": 380335795, "node_id": "MDU6SXNzdWUzODAzMzU3OTU=", "number": 747, "title": "No warning/error message when discretizing model twice", "user": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 835396803, "node_id": "MDU6TGFiZWw4MzUzOTY4MDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.dae", "name": "pyomo.dae", "color": "209fbc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-11-13T17:20:29Z", "updated_at": "2019-04-25T16:56:17Z", "closed_at": "2019-04-25T16:56:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In #746 it was pointed out that no warning or error message is displayed when a model is discretized twice by mistake. I think this is a bug and an error should be thrown as this can lead to some very strange behavior.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/747/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/741", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/741/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/741/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/741/events", "html_url": "https://github.com/Pyomo/pyomo/issues/741", "id": 377660598, "node_id": "MDU6SXNzdWUzNzc2NjA1OTg=", "number": 741, "title": "Pyomo Network readthedocs missing code block", "user": {"login": "gseastream", "id": 28630589, "node_id": "MDQ6VXNlcjI4NjMwNTg5", "avatar_url": "https://avatars.githubusercontent.com/u/28630589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gseastream", "html_url": "https://github.com/gseastream", "followers_url": "https://api.github.com/users/gseastream/followers", "following_url": "https://api.github.com/users/gseastream/following{/other_user}", "gists_url": "https://api.github.com/users/gseastream/gists{/gist_id}", "starred_url": "https://api.github.com/users/gseastream/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gseastream/subscriptions", "organizations_url": "https://api.github.com/users/gseastream/orgs", "repos_url": "https://api.github.com/users/gseastream/repos", "events_url": "https://api.github.com/users/gseastream/events{/privacy}", "received_events_url": "https://api.github.com/users/gseastream/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 850798628, "node_id": "MDU6TGFiZWw4NTA3OTg2Mjg=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/documentation", "name": "documentation", "color": "000000", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-11-06T01:57:31Z", "updated_at": "2018-12-11T23:24:15Z", "closed_at": "2018-12-11T23:24:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The code block for the Sequential Decomposition section of the [pyomo network readthedocs page](https://pyomo.readthedocs.io/en/latest/modeling_extensions/network.html) is missing. When I compile it locally it shows up properly. The other code blocks show up fine online as well, this is the only one that's missing. The only difference between this one and other code blocks is the use of relatively new sphinx `skipif` feature, so it might be a version thing, but I couldn't figure out what version our readthedocs page is using (if it's even set anywhere).", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/741/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/740", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/740/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/740/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/740/events", "html_url": "https://github.com/Pyomo/pyomo/issues/740", "id": 377203856, "node_id": "MDU6SXNzdWUzNzcyMDM4NTY=", "number": 740, "title": "pyomo install-extras error", "user": {"login": "dwtrahan", "id": 44756834, "node_id": "MDQ6VXNlcjQ0NzU2ODM0", "avatar_url": "https://avatars.githubusercontent.com/u/44756834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwtrahan", "html_url": "https://github.com/dwtrahan", "followers_url": "https://api.github.com/users/dwtrahan/followers", "following_url": "https://api.github.com/users/dwtrahan/following{/other_user}", "gists_url": "https://api.github.com/users/dwtrahan/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwtrahan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwtrahan/subscriptions", "organizations_url": "https://api.github.com/users/dwtrahan/orgs", "repos_url": "https://api.github.com/users/dwtrahan/repos", "events_url": "https://api.github.com/users/dwtrahan/events{/privacy}", "received_events_url": "https://api.github.com/users/dwtrahan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 851971080, "node_id": "MDU6TGFiZWw4NTE5NzEwODA=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.installation", "name": "pyomo.installation", "color": "7967e0", "default": false, "description": "Any issues related to installation of pyomo"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-04T22:47:04Z", "updated_at": "2019-04-30T20:43:49Z", "closed_at": "2019-04-30T20:43:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to install pyomo version 5.5.1 using pip (within a conda environment in Windows 7 using 64-bit Anaconda3 and python 3.6), I get the following errors during installation of the \"extras\":\r\n\r\n> (py36-2) C:\\Users\\.....>pyomo install-extras\r\n> Traceback (most recent call last):\r\n>   File \"c:\\users\\.....\\appdata\\local\\continuum\\anaconda3\\envs\\py36-2\\lib\\site-\r\n> packages\\pyutilib\\subprocess\\processmngr.py\", line 630, in run_command\r\n>     shell=shell)\r\n>   File \"c:\\users\\.....\\appdata\\local\\continuum\\anaconda3\\envs\\py36-2\\lib\\site-\r\n> packages\\pyutilib\\subprocess\\processmngr.py\", line 769, in \\_\\_init\\_\\_\r\n>     shell=shell)\r\n>   File \"c:\\users\\.....\\appdata\\local\\continuum\\anaconda3\\envs\\py36-2\\lib\\subpr\r\n>  ocess.py\", line 709, in \\_\\_init\\_\\_\r\n>     restore_signals, start_new_session)\r\n>   File \"c:\\users\\.....\\appdata\\local\\continuum\\anaconda3\\envs\\py36-2\\lib\\subpr\r\n> ocess.py\", line 997, in _execute_child\r\n>     startupinfo)\r\n> FileNotFoundError: [WinError 2] The system cannot find the file specified\r\n> \r\n> During handling of the above exception, another exception occurred:\r\n> \r\n> Traceback (most recent call last):\r\n>   File \"c:\\users\\.....\\appdata\\local\\continuum\\anaconda3\\envs\\py36-2\\lib\\runpy\r\n> .py\", line 193, in \\_run_module_as_main\r\n>     \"\\_\\_main\\_\\_\", mod_spec)\r\n>   File \"c:\\users\\.....\\appdata\\local\\continuum\\anaconda3\\envs\\py36-2\\lib\\runpy\r\n> .py\", line 85, in \\_run_code\r\n>     exec(code, run_globals)\r\n>   File \"C:\\Users\\.....\\AppData\\Local\\Continuum\\anaconda3\\envs\\py36-2\\Scripts\\p\r\n> yomo.exe\\\\_\\_main\\_\\_.py\", line 9, in <module>\r\n>   File \"c:\\users\\.....\\appdata\\local\\continuum\\anaconda3\\envs\\py36-2\\lib\\site-\r\n> packages\\pyomo\\scripting\\pyomo_main.py\", line 82, in main\r\n>     retval = _options.func(_options)\r\n>   File \"c:\\users\\.....\\appdata\\local\\continuum\\anaconda3\\envs\\py36-2\\lib\\site-\r\n> packages\\pyomo\\scripting\\driver_help.py\", line 46, in install_extras_exec\r\n>     pyutilib.subprocess.run(command, tee=True)\r\n>   File \"c:\\users\\.....\\appdata\\local\\continuum\\anaconda3\\envs\\py36-2\\lib\\site-\r\n> packages\\pyutilib\\subprocess\\processmngr.py\", line 659, in run_command\r\n>     (' '.join(_cmd), err))\r\n> pyutilib.common._exceptions.ApplicationError: Could not execute the command: 'c:\r\n> \\users\\.....\\appdata\\local\\continuum\\anaconda3\\envs\\py36-2\\get_pyomo_extras'\r\n>         Error message: [WinError 2] The system cannot find the file specified\r\n\r\nI found the get_pyomo_extras.exe file in ...\\py36-2\\Scripts and moved it to \\py36-2, but then I get the following:\r\n\r\n> (py36-2) C:\\Users\\.....>pyomo install-extras\r\n> Traceback (most recent call last):\r\n>   File \"c:\\users\\.....\\appdata\\local\\continuum\\anaconda3\\envs\\py36-2\\lib\\runpy\r\n> .py\", line 193, in \\_run_module_as_main\r\n>     \"\\_\\_main\\_\\_\", mod_spec)\r\n>   File \"c:\\users\\.....\\appdata\\local\\continuum\\anaconda3\\envs\\py36-2\\lib\\runpy\r\n> .py\", line 85, in \\_run_code\r\n>     exec(code, run_globals)\r\n>   File \"c:\\users\\.....\\appdata\\local\\continuum\\anaconda3\\envs\\py36-2\\get_pyomo\r\n> \\_extras.exe\\\\_\\_main\\_\\_.py\", line 5, in <module>\r\n> ModuleNotFoundError: No module named 'scripts'\r\n\r\nThis looks like the same issue as #601. Any thoughts?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/740/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/740/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/718", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/718/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/718/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/718/events", "html_url": "https://github.com/Pyomo/pyomo/issues/718", "id": 371545286, "node_id": "MDU6SXNzdWUzNzE1NDUyODY=", "number": 718, "title": "Pysp throw keyError exception with block varible", "user": {"login": "wanqiuchansheng", "id": 9635433, "node_id": "MDQ6VXNlcjk2MzU0MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/9635433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanqiuchansheng", "html_url": "https://github.com/wanqiuchansheng", "followers_url": "https://api.github.com/users/wanqiuchansheng/followers", "following_url": "https://api.github.com/users/wanqiuchansheng/following{/other_user}", "gists_url": "https://api.github.com/users/wanqiuchansheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanqiuchansheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanqiuchansheng/subscriptions", "organizations_url": "https://api.github.com/users/wanqiuchansheng/orgs", "repos_url": "https://api.github.com/users/wanqiuchansheng/repos", "events_url": "https://api.github.com/users/wanqiuchansheng/events{/privacy}", "received_events_url": "https://api.github.com/users/wanqiuchansheng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "DLWoodruff", "id": 16341380, "node_id": "MDQ6VXNlcjE2MzQxMzgw", "avatar_url": "https://avatars.githubusercontent.com/u/16341380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DLWoodruff", "html_url": "https://github.com/DLWoodruff", "followers_url": "https://api.github.com/users/DLWoodruff/followers", "following_url": "https://api.github.com/users/DLWoodruff/following{/other_user}", "gists_url": "https://api.github.com/users/DLWoodruff/gists{/gist_id}", "starred_url": "https://api.github.com/users/DLWoodruff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DLWoodruff/subscriptions", "organizations_url": "https://api.github.com/users/DLWoodruff/orgs", "repos_url": "https://api.github.com/users/DLWoodruff/repos", "events_url": "https://api.github.com/users/DLWoodruff/events{/privacy}", "received_events_url": "https://api.github.com/users/DLWoodruff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "DLWoodruff", "id": 16341380, "node_id": "MDQ6VXNlcjE2MzQxMzgw", "avatar_url": "https://avatars.githubusercontent.com/u/16341380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DLWoodruff", "html_url": "https://github.com/DLWoodruff", "followers_url": "https://api.github.com/users/DLWoodruff/followers", "following_url": "https://api.github.com/users/DLWoodruff/following{/other_user}", "gists_url": "https://api.github.com/users/DLWoodruff/gists{/gist_id}", "starred_url": "https://api.github.com/users/DLWoodruff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DLWoodruff/subscriptions", "organizations_url": "https://api.github.com/users/DLWoodruff/orgs", "repos_url": "https://api.github.com/users/DLWoodruff/repos", "events_url": "https://api.github.com/users/DLWoodruff/events{/privacy}", "received_events_url": "https://api.github.com/users/DLWoodruff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-10-18T14:00:03Z", "updated_at": "2018-10-29T00:38:41Z", "closed_at": "2018-10-29T00:38:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "i have a complex model with large varibles defined in block. and i want to use pysp ph alghortim to solve it. and a simple model is flowing.\r\nTraceback (most recent call last):\r\n  File \"/home/administrator/project/python/gym-rl/pyomotools/test/pysp/simple_quadratic/run.py\", line 12, in <module>\r\n    ef_sol = stsolver.solve_ph(\"gurobi\", phopts=phopts, default_rho=1)\r\n  File \"/home/administrator/project/python/gym-rl/pyomotools/rapper.py\", line 227, in solve_ph\r\n    retval = ph.solve()\r\n  File \"/home/administrator/.conda/envs/python36/lib/python3.6/site-packages/pyomo/pysp/ph.py\", line 4081, in solve\r\n    self._report_only_nonconverged_variables)\r\n  File \"/home/administrator/.conda/envs/python36/lib/python3.6/site-packages/pyomo/pysp/ph.py\", line 4874, in pprint\r\n    stage)\r\n  File \"/home/administrator/.conda/envs/python36/lib/python3.6/site-packages/pyomo/pysp/ph.py\", line 4858, in _print_stage_var\r\n    num_outputs_this_variable=num_outputs_this_variable)\r\n  File \"/home/administrator/.conda/envs/python36/lib/python3.6/site-packages/pyomo/pysp/ph.py\", line 4680, in _print_node_var\r\n    variable_indices = tree_node._variable_indices[variable_name]\r\nKeyError: 'v1'\r\n\r\nhttps://github.com/Pyomo/pyomo/blob/67696dfa2797c3db1195f84ee9d2439ee6c6a964/pyomo/pysp/ph.py#L4680\r\n\r\n![image](https://user-images.githubusercontent.com/9635433/47158006-3a465400-d31d-11e8-888a-6fb5693c7f49.png)\r\nReferenceModel_new.py\r\n```python\r\nfrom pyomo.environ import *\r\n\r\nscenario_data = {}\r\nscenario_data['Scenario1'] = (2.1, 23.5)\r\nscenario_data['Scenario2'] = (0.2, 4.2)\r\nscenario_data['Scenario3'] = (0.6, 0.1)\r\nscenario_data['Scenario4'] = (1.1, -4.4)\r\n\r\ndef pysp_scenario_tree_model_callback():\r\n    from pyomo.pysp.scenariotree.tree_structure_model \\\r\n        import CreateConcreteTwoStageScenarioTreeModel\r\n\r\n    st_model = CreateConcreteTwoStageScenarioTreeModel(len(scenario_data))\r\n\r\n    first_stage = st_model.Stages.first()\r\n    second_stage = st_model.Stages.last()\r\n\r\n    # First Stage\r\n    st_model.StageCost[first_stage] = 'FirstStageCost'\r\n    st_model.StageVariables[first_stage].add('v1')\r\n    st_model.StageVariables[first_stage].add('xd')\r\n    st_model.StageDerivedVariables[first_stage].add('xde')\r\n\r\n    # Second Stage\r\n    st_model.StageCost[second_stage] = 'SecondStageCost'\r\n    st_model.StageVariables[second_stage].add('y')\r\n    st_model.StageVariables[second_stage].add('v2')\r\n    return st_model\r\n\r\n\r\n# Creates an instance for each scenario\r\ndef pysp_instance_creation_callback(scenario_name, node_names):\r\n    a, b = scenario_data[scenario_name]\r\n\r\n    model = ConcreteModel()\r\n    model.v1 = Block()\r\n    model.v1.x = Var()\r\n    model.y = Var()\r\n    model.FirstStageCost = Expression(expr=model.v1.x ** 2)\r\n    model.SecondStageCost = Expression(expr=a * (model.y - b) ** 2)\r\n    model.obj = Objective(expr=model.FirstStageCost + model.SecondStageCost)\r\n\r\n    model.xd = Var()\r\n    model.xde = Expression(expr=model.v1.x)\r\n    # model.yd = Var()\r\n    # model.yde = Expression(expr=model.y - b)\r\n\r\n    model.v2 = Block()\r\n    v2 = model.v2\r\n    v2.yd_test = Var()\r\n    v2.yde = Expression(expr=model.y - b)\r\n\r\n    model.c = ConstraintList()\r\n    model.c.add(model.y == model.v1.x)\r\n    model.c.add(model.xd == model.v1.x)\r\n    model.c.add(v2.yd_test == model.y - b)\r\n    return model\r\n```\r\nrun.py\r\n``` python\r\nphopts = {'--max-iterations': '3', '--verbose': None}\r\n# phopts = {'--max-iterations': '3'}\r\nstsolver = rapper.StochSolver(\"ReferenceModel_new.py\")\r\nef_sol = stsolver.solve_ph(\"gurobi\", phopts=phopts, default_rho=1)\r\nprint(ef_sol)\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/718/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/713", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/713/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/713/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/713/events", "html_url": "https://github.com/Pyomo/pyomo/issues/713", "id": 370863820, "node_id": "MDU6SXNzdWUzNzA4NjM4MjA=", "number": 713, "title": "'ConcreteModel' object has no attribute 'as_concrete_model'", "user": {"login": "wanqiuchansheng", "id": 9635433, "node_id": "MDQ6VXNlcjk2MzU0MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/9635433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanqiuchansheng", "html_url": "https://github.com/wanqiuchansheng", "followers_url": "https://api.github.com/users/wanqiuchansheng/followers", "following_url": "https://api.github.com/users/wanqiuchansheng/following{/other_user}", "gists_url": "https://api.github.com/users/wanqiuchansheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanqiuchansheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanqiuchansheng/subscriptions", "organizations_url": "https://api.github.com/users/wanqiuchansheng/orgs", "repos_url": "https://api.github.com/users/wanqiuchansheng/repos", "events_url": "https://api.github.com/users/wanqiuchansheng/events{/privacy}", "received_events_url": "https://api.github.com/users/wanqiuchansheng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-17T01:41:13Z", "updated_at": "2022-08-31T17:49:16Z", "closed_at": "2018-10-22T16:18:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "rapper throw the following exception!\r\nTraceback (most recent call last):\r\n  File \"/home/administrator/project/python/gym-rl/pyomotools/test/pysp/simple_quadratic/run.py\", line 10, in <module>\r\n    stsolver = rapper.StochSolver(\"ReferenceModel.py\")\r\n  File \"/home/administrator/.conda/envs/python36/lib/python3.6/site-packages/pyomo/pysp/util/rapper.py\", line 91, in __init__\r\n    tree_model = tree.as_concrete_model()\r\n  File \"/home/administrator/.conda/envs/python36/lib/python3.6/site-packages/pyomo/core/base/block.py\", line 519, in __getattr__\r\n    % (self.__class__.__name__, val))\r\nAttributeError: 'ConcreteModel' object has no attribute 'as_concrete_model'\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/713/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/713/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/709", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/709/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/709/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/709/events", "html_url": "https://github.com/Pyomo/pyomo/issues/709", "id": 369384051, "node_id": "MDU6SXNzdWUzNjkzODQwNTE=", "number": 709, "title": "Quicksum fails to identify variables", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-12T03:20:05Z", "updated_at": "2019-04-03T16:47:13Z", "closed_at": "2019-04-03T16:47:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nfrom pyomo.environ import *\r\nm = ConcreteModel()\r\nm.x = Var()\r\nexpr = quicksum([m.x, m.x], linear=True)\r\nfrom pyomo.core.expr.current import identify_variables\r\nvars = list(identify_variables(expr, include_fixed=False))\r\nprint(vars)\r\n```\r\nResult:\r\n```\r\n[]\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/709/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/697", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/697/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/697/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/697/events", "html_url": "https://github.com/Pyomo/pyomo/issues/697", "id": 363830196, "node_id": "MDU6SXNzdWUzNjM4MzAxOTY=", "number": 697, "title": "GAMS writer not wrapping negative products in parentheses", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-26T02:06:43Z", "updated_at": "2018-10-02T19:40:06Z", "closed_at": "2018-10-02T19:40:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "GAMS writer is producing `56*-7` rather than `56*(-7)`.\r\n\r\nI am coming across this in the following expression:\r\n```\r\nc4770.. x3100 - 8.314*((x4989 - 298.15)*19.85894 + (power(x4989, 2) - 88893.42249999999)*-13.066840000000001*0.01*0.5 + (power(x4989, 3) - 26503573.918374993)*3.36356*0.0001*0.3333333333333333)*0.001 =e= 0.0 ;\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/697/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/685", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/685/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/685/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/685/events", "html_url": "https://github.com/Pyomo/pyomo/issues/685", "id": 359570200, "node_id": "MDU6SXNzdWUzNTk1NzAyMDA=", "number": 685, "title": "Cannot do simple scalar variable multiplication...", "user": {"login": "anyacastillo", "id": 9804243, "node_id": "MDQ6VXNlcjk4MDQyNDM=", "avatar_url": "https://avatars.githubusercontent.com/u/9804243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anyacastillo", "html_url": "https://github.com/anyacastillo", "followers_url": "https://api.github.com/users/anyacastillo/followers", "following_url": "https://api.github.com/users/anyacastillo/following{/other_user}", "gists_url": "https://api.github.com/users/anyacastillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/anyacastillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anyacastillo/subscriptions", "organizations_url": "https://api.github.com/users/anyacastillo/orgs", "repos_url": "https://api.github.com/users/anyacastillo/repos", "events_url": "https://api.github.com/users/anyacastillo/events{/privacy}", "received_events_url": "https://api.github.com/users/anyacastillo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-12T16:59:04Z", "updated_at": "2021-06-28T13:28:00Z", "closed_at": "2021-06-28T13:28:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am unable to multiply numpy.float64 * SimpleVar, but I am able to multiply SimpleVar * numpy.float64. The error is as follows:\r\n\r\nKeyError: \"Cannot treat the scalar component 'x'as an indexed component\"\r\n\r\nwhere 'x' is of type pyomo.core.base.var.SimpleVar.\r\n\r\nI am using Pyomo 5.5.1. Do we have support for numpy parameters in the models?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/685/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/679", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/679/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/679/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/679/events", "html_url": "https://github.com/Pyomo/pyomo/issues/679", "id": 356479729, "node_id": "MDU6SXNzdWUzNTY0Nzk3Mjk=", "number": 679, "title": "BARON writer sqrt(x) issue", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-03T12:07:12Z", "updated_at": "2018-11-16T22:34:57Z", "closed_at": "2018-11-16T22:34:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I believe that the BARON writer needs to produce `x^0.5` rather than the current `sqrt(x)` in order to avoid a syntax error.\r\n\r\nFound by @johnnybatesjr", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/679/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/670", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/670/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/670/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/670/events", "html_url": "https://github.com/Pyomo/pyomo/issues/670", "id": 354470474, "node_id": "MDU6SXNzdWUzNTQ0NzA0NzQ=", "number": 670, "title": "Dataportal dependency on pyodbc", "user": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 851968308, "node_id": "MDU6TGFiZWw4NTE5NjgzMDg=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.data", "name": "pyomo.data", "color": "1f1789", "default": false, "description": "Any issues related to data portals and data file parsing"}], "state": "closed", "locked": false, "assignee": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-08-27T20:42:18Z", "updated_at": "2020-04-15T20:08:18Z", "closed_at": "2020-04-15T20:08:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As discussed in #669, the dataportal `sheet.py` plugin returns classes that depend on pyodbc as a default if other Python packages are unavailable without verifying that pyodbc is available. This is despite a comment in the file that the pyodbc interface \"doesn't work right now\". The data portal `sheet.py` plugin needs a significant overhaul to remove or fix this pyodbc dependency. ", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/670/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/663", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/663/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/663/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/663/events", "html_url": "https://github.com/Pyomo/pyomo/issues/663", "id": 352304310, "node_id": "MDU6SXNzdWUzNTIzMDQzMTA=", "number": 663, "title": "Issue exporting model to gams with power operator", "user": {"login": "pazochoa", "id": 30808587, "node_id": "MDQ6VXNlcjMwODA4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/30808587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pazochoa", "html_url": "https://github.com/pazochoa", "followers_url": "https://api.github.com/users/pazochoa/followers", "following_url": "https://api.github.com/users/pazochoa/following{/other_user}", "gists_url": "https://api.github.com/users/pazochoa/gists{/gist_id}", "starred_url": "https://api.github.com/users/pazochoa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pazochoa/subscriptions", "organizations_url": "https://api.github.com/users/pazochoa/orgs", "repos_url": "https://api.github.com/users/pazochoa/repos", "events_url": "https://api.github.com/users/pazochoa/events{/privacy}", "received_events_url": "https://api.github.com/users/pazochoa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-20T21:32:32Z", "updated_at": "2018-10-02T19:40:06Z", "closed_at": "2018-10-02T19:40:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am exporting an expression with a negative power operator to gams:\r\npyomo exports: m.Eq1=Constraint(expr=m.B+ m.A * m.T1**-1.0==0)\r\ngams receives:   Eq1..        B+ A* T1**- 1.0 =e= 0.0 \r\n\r\nAnd I am getting the following error in gams:\r\n\r\n445  More than one operator in a row. You need to use parenthesis\r\n       if you want to use such statements. For example\r\n           x := x + - not y;  ->  x := x + (- (not y));\r\n           sum(i$not x, ..)   ->  sum(i$(not x),..)\r\nBest, \r\nPaz\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/663/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/646", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/646/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/646/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/646/events", "html_url": "https://github.com/Pyomo/pyomo/issues/646", "id": 348357894, "node_id": "MDU6SXNzdWUzNDgzNTc4OTQ=", "number": 646, "title": "Fix NEOS interface behind proxy in Anaconda Python 3.x", "user": {"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-07T14:53:46Z", "updated_at": "2019-11-26T18:01:31Z", "closed_at": "2019-11-26T18:01:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As was observed in #644, the NEOS interface cannot connect to the NEOS server when running on a Python 3.x version of Anaconda.  As a result, `pyomo help --solvers` returns:\r\n```\r\nNEOS Solver Interfaces\r\n----------------------\r\nThe neos solver manager supports solver interfaces that can be\r\nexecuted remotely on the NEOS optimization server.  This server is not\r\navailable with your current system configuration.\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/646/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/645", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/645/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/645/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/645/events", "html_url": "https://github.com/Pyomo/pyomo/issues/645", "id": 348325803, "node_id": "MDU6SXNzdWUzNDgzMjU4MDM=", "number": 645, "title": "Python3.7 breaks import of Pyomo", "user": {"login": "Benezivas", "id": 2675387, "node_id": "MDQ6VXNlcjI2NzUzODc=", "avatar_url": "https://avatars.githubusercontent.com/u/2675387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Benezivas", "html_url": "https://github.com/Benezivas", "followers_url": "https://api.github.com/users/Benezivas/followers", "following_url": "https://api.github.com/users/Benezivas/following{/other_user}", "gists_url": "https://api.github.com/users/Benezivas/gists{/gist_id}", "starred_url": "https://api.github.com/users/Benezivas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Benezivas/subscriptions", "organizations_url": "https://api.github.com/users/Benezivas/orgs", "repos_url": "https://api.github.com/users/Benezivas/repos", "events_url": "https://api.github.com/users/Benezivas/events{/privacy}", "received_events_url": "https://api.github.com/users/Benezivas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-07T13:39:50Z", "updated_at": "2018-11-07T18:56:10Z", "closed_at": "2018-11-07T18:56:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just upgraded from Python3.6.6 to Python3.7, after which the Pyomo library import no longer works as expected. From the [changelogs](https://docs.python.org/3/whatsnew/3.7.html) I suspect this error is based on the keyword `async` now being protected.\r\n\r\nUsing Pyomo version 5.5.0 on Arch Linux.\r\n\r\nModule in question:\r\n```\r\nimport logging\r\nimport timeit\r\nimport os\r\nimport math\r\n\r\nfrom pyomo.opt import SolverStatus, TerminationCondition\r\nfrom pyomo.environ import ConcreteModel, RangeSet, Set, Var, Param, Objective, Constraint, NonNegativeReals, NonNegativeIntegers, PercentFraction, Boolean, minimize, SolverFactory, value\r\n[...]\r\n```\r\nTraceback:\r\n```\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 20, in <module>\r\n    from ilp_problem_handler import IlpProblemHandler\r\n  File \"/home/path/to/my/Code/src/ilp_problem_handler.py\", line 7, in <module>\r\n    from pyomo.environ import ConcreteModel, RangeSet, Set, Var, Param, Objective, Constraint, NonNegativeReals, NonNegativeIntegers, PercentFraction, Boolean, minimize, SolverFactory, value\r\n  File \"/usr/lib/python3.7/site-packages/pyomo/environ/__init__.py\", line 89, in <module>\r\n    _import_packages()\r\n  File \"/usr/lib/python3.7/site-packages/pyomo/environ/__init__.py\", line 59, in _import_packages\r\n    _do_import(pname)\r\n  File \"/usr/lib/python3.7/site-packages/pyomo/environ/__init__.py\", line 16, in _do_import\r\n    importlib.import_module(pkg_name)\r\n  File \"/usr/lib/python3.7/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"/usr/lib/python3.7/site-packages/pyomo/pysp/__init__.py\", line 25, in <module>\r\n    import pyomo.pysp.scenariotree\r\n  File \"/usr/lib/python3.7/site-packages/pyomo/pysp/scenariotree/__init__.py\", line 18, in <module>\r\n    import pyomo.pysp.scenariotree.manager\r\n  File \"/usr/lib/python3.7/site-packages/pyomo/pysp/scenariotree/manager.py\", line 969\r\n    async=False,\r\n        ^\r\nSyntaxError: invalid syntax\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/645/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/640", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/640/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/640/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/640/events", "html_url": "https://github.com/Pyomo/pyomo/issues/640", "id": 347050269, "node_id": "MDU6SXNzdWUzNDcwNTAyNjk=", "number": 640, "title": "Bug in expression substitution using clone_expression", "user": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-08-02T14:58:46Z", "updated_at": "2021-10-14T02:25:57Z", "closed_at": "2021-10-14T02:25:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Expression substitution does not work for the case where you want to replace a mutable parameter with a variable. Here is a small illustrative example:\r\n\r\n```\r\nfrom pyomo.environ import *\r\nfrom pyomo.core.expr.current import clone_expression\r\n \r\nm = ConcreteModel()\r\n\r\nm.p = Param(initialize=3, mutable=True)\r\nm.v = Var(bounds=(0,2))\r\nm.v2 = Var(bounds=(0,2))\r\n\r\nm.con = Constraint(expr=m.p*m.v <=10)\r\n\r\nsubmap = {id(m.p):m.v2}\r\n\r\nm.con2 = Constraint(expr=clone_expression(m.con.expr, substitute=submap))\r\n\r\nSolverFactory('ipopt').solve(m)\r\n```\r\n\r\nIf you `pprint` the model before calling the solver it will appear as if everything worked correctly but the following error is thrown when calling the writer:\r\n\r\n```\r\nERROR: evaluating object as numeric value: v2\r\n        (object: <class 'pyomo.core.base.var.SimpleVar'>)\r\n    No value for uninitialized NumericValue object v2\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/blnicho/Research/pyomo/pyomo/opt/base/solvers.py\", line 599, in solve\r\n    self._presolve(*args, **kwds)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/opt/solver/shellcmd.py\", line 196, in _presolve\r\n    OptSolver._presolve(self, *args, **kwds)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/opt/base/solvers.py\", line 699, in _presolve\r\n    **kwds)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/opt/base/solvers.py\", line 770, in _convert_problem\r\n    **kwds)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/opt/base/convert.py\", line 110, in convert_problem\r\n    problem_files, symbol_map = converter.apply(*tmp, **tmpkw)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/solvers/plugins/converter/model.py\", line 199, in apply\r\n    io_options=io_options)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/core/base/block.py\", line 1679, in write\r\n    io_options)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/repn/plugins/ampl/ampl_.py\", line 379, in __call__\r\n    include_all_variable_bounds=include_all_variable_bounds)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/repn/plugins/ampl/ampl_.py\", line 958, in _print_model_NL\r\n    quadratic=False)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/repn/standard_repn.py\", line 387, in generate_standard_repn\r\n    repn=repn)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/repn/standard_repn.py\", line 950, in _generate_standard_repn\r\n    ans = _collect_standard_repn(expr, 1, idMap, compute_values, verbose, quadratic)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/repn/standard_repn.py\", line 923, in _collect_standard_repn\r\n    return fn(exp, multiplier, idMap, compute_values, verbose, quadratic)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/repn/standard_repn.py\", line 523, in _collect_term\r\n    val = value(exp._args_[0])\r\n  File \"/home/blnicho/Research/pyomo/pyomo/core/expr/numvalue.py\", line 225, in value\r\n    % (obj.name,))\r\nValueError: No value for uninitialized NumericValue object v2\r\n```\r\n\r\nLooks like there are some implicit assumptions about which leaf nodes are/aren't variables that are not being updated in the substituter. \r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/640/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/638", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/638/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/638/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/638/events", "html_url": "https://github.com/Pyomo/pyomo/issues/638", "id": 346331303, "node_id": "MDU6SXNzdWUzNDYzMzEzMDM=", "number": 638, "title": "Cython Installation Issue with Anaconda", "user": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 851971080, "node_id": "MDU6TGFiZWw4NTE5NzEwODA=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.installation", "name": "pyomo.installation", "color": "7967e0", "default": false, "description": "Any issues related to installation of pyomo"}], "state": "closed", "locked": false, "assignee": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-07-31T19:43:36Z", "updated_at": "2019-05-08T18:03:10Z", "closed_at": "2019-05-08T18:03:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "An IDAES team member recently ran into an issue trying to install Pyomo using pip with Anaconda. The install failed during the \"Cythonization\" step with the following error message:\r\n\r\n```\r\ncreating build/temp.linux-x86_64-2.7/pyomo/core/expr\r\ngcc -pthread -B /home/osboxes/anaconda2/compiler_compat -Wl,--sysroot=/ -fno-strict-aliasing -g -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/home/osboxes/anaconda2/include/python2.7 -c pyomo/core/expr/expr_pyomo5.c -o build/temp.linux-x86_64-2.7/pyomo/core/expr/expr_pyomo5.o\r\ngcc -pthread -shared -B /home/osboxes/anaconda2/compiler_compat -L/home/osboxes/anaconda2/lib -Wl,-rpath=/home/osboxes/anaconda2/lib -Wl,--no-as-needed -Wl,--sysroot=/ build/temp.linux-x86_64-2.7/pyomo/core/expr/expr_pyomo5.o -L/home/osboxes/anaconda2/lib -lpython2.7 -o build/lib.linux-x86_64-2.7/pyomo/core/expr/expr_pyomo5.so\r\n/home/osboxes/anaconda2/compiler_compat/ld: cannot find -lpthread\r\n/home/osboxes/anaconda2/compiler_compat/ld: cannot find -lc\r\ncollect2: error: ld returned 1 exit status\r\nerror: command 'gcc' failed with exit status 1\r\n```\r\n\r\nI think this is related to [this issue](https://github.com/cocodataset/cocoapi/issues/94#issuecomment-350152998) which is fixed with a small change to `setup.py`. The IDAES team member is running python version 2.7.14 (Anaconda) on Linux 4.13.0 (Ubuntu). \r\n\r\nI don't know enough about our `setup.py` script to attempt the fix but at a minimum I think our setup script should not fail if cythonization fails since it is optional.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/638/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/637", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/637/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/637/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/637/events", "html_url": "https://github.com/Pyomo/pyomo/issues/637", "id": 346094171, "node_id": "MDU6SXNzdWUzNDYwOTQxNzE=", "number": 637, "title": "Incorrect guess for Set.dimen for nested initialize kwarg + proposed fix", "user": {"login": "mlangiu", "id": 15340151, "node_id": "MDQ6VXNlcjE1MzQwMTUx", "avatar_url": "https://avatars.githubusercontent.com/u/15340151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlangiu", "html_url": "https://github.com/mlangiu", "followers_url": "https://api.github.com/users/mlangiu/followers", "following_url": "https://api.github.com/users/mlangiu/following{/other_user}", "gists_url": "https://api.github.com/users/mlangiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlangiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlangiu/subscriptions", "organizations_url": "https://api.github.com/users/mlangiu/orgs", "repos_url": "https://api.github.com/users/mlangiu/repos", "events_url": "https://api.github.com/users/mlangiu/events{/privacy}", "received_events_url": "https://api.github.com/users/mlangiu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-31T08:53:40Z", "updated_at": "2019-09-24T18:42:43Z", "closed_at": "2019-09-24T18:42:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "When guessing the dimension in sets.py: Set.__init__ from the initialize kwarg, nesting is ignored.\r\nHowever when accessing keys they are flattened. This results in incorrect guesses for cases such as this:\r\n\r\n    constraints = {c for c in itertools.product(['constrA', 'constrB'], range(5))}\r\n    vars = {v for v in itertools.product(['var1', 'var2', 'var3'], range(5))}\r\n    matrix_coefficients = {m for m in itertools.product(constraints, vars)}\r\n    m = ConcreteModel()\r\n    m.Matrix = Param(matrix_coefficients, default=0)\r\n\r\n    >>> ValueError: The value=('constrB', 4, 'var1', 1) does not have dimension=2, which is needed for set=Matrix_index\r\n\r\nThe code that is causing this sits in sets.py lines 691-695:\r\n\r\n    if type(self.initialize) is tuple:\r\n        tmp = len(self.initialize)\r\n    elif type(self.initialize) is list and len(self.initialize) > 0 \\\r\n             and type(self.initialize[0]) is tuple:\r\n        tmp = len(self.initialize[0])\r\n\r\n\r\nOne way to amended  this is to flattening the entire `self.initialize` before checking with the current method or flattening the single element used for guessing, e.g. with `pyutilib.misc.flatten`.\r\nIf we're considering that nested containers other than tuple might occur, `getattr` seems more adequate than a direct `len` call.\r\nFinally looking over init it seems like lines 691 and 692 are dead code, as tuples are already converted to lists in lines 682-685!\r\n\r\nIn summary it seems that changeing lines 691-695 to:\r\n\r\n    if type(self.initialize) is list and len(self.initialize) > 0:\r\n        tmp = getattr(flatten(self.initialize[0]), 'len', 0)\r\n\r\nshould fix this behaviour.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/637/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/636", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/636/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/636/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/636/events", "html_url": "https://github.com/Pyomo/pyomo/issues/636", "id": 345295528, "node_id": "MDU6SXNzdWUzNDUyOTU1Mjg=", "number": 636, "title": "Strange behaviour for mutable Param indexed by Set with dimen=None", "user": {"login": "mlangiu", "id": 15340151, "node_id": "MDQ6VXNlcjE1MzQwMTUx", "avatar_url": "https://avatars.githubusercontent.com/u/15340151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlangiu", "html_url": "https://github.com/mlangiu", "followers_url": "https://api.github.com/users/mlangiu/followers", "following_url": "https://api.github.com/users/mlangiu/following{/other_user}", "gists_url": "https://api.github.com/users/mlangiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlangiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlangiu/subscriptions", "organizations_url": "https://api.github.com/users/mlangiu/orgs", "repos_url": "https://api.github.com/users/mlangiu/repos", "events_url": "https://api.github.com/users/mlangiu/events{/privacy}", "received_events_url": "https://api.github.com/users/mlangiu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-27T16:48:50Z", "updated_at": "2022-07-29T19:10:15Z", "closed_at": "2022-07-29T19:10:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "There seems to be a bug in the index generation for mutable `Param`s that are indexed with `Set`s which have the dimen set to `None`:\r\n\r\n    m = ConcreteModel()\r\n    m.constr_index = Set(dimen=None, initialize=constraints)\r\n    m.x_index = Set(dimen=None, initialize={'x1', 'x2'})\r\n    m.A = Param(m.constr_index * m.x_index, default=0, mutable=True)\r\n    constr = ('constr', 1)\r\n    var = 'x1'\r\n    param1 = m.A[(*constr, var)]\r\n    param2 = m.A[constr, var]\r\n    print(param1 is param2)  # >>> False\r\n\r\n    print(param1.index())  # >>> ('constr', 1, 'x1')\r\n    print(param2.index())  # >>> None\r\n\r\n    print(param1)  # >>> A[constr,1,x1]\r\n    print(param2)  # >>> RuntimeError: Fatal error: cannot find the component data in the owning component's _data dictionary.\r\n\r\nI stumbled across this when trying to write a generic algorithm that takes user data and writes pyomo models. My thinking was that a user might decide to use mixed dimensional `constraints` such as:\r\n\r\n    constraints = {('c1', 1), ('c1', 2), 'c2'}\r\n\r\nIn which case the dimen=None becomes necessary. In my own case I could refactor but I suppose it would still be good to find the root of this problem.\r\n\r\nI'm using Pyomo version 5.5.0\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/636/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/611", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/611/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/611/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/611/events", "html_url": "https://github.com/Pyomo/pyomo/issues/611", "id": 341577182, "node_id": "MDU6SXNzdWUzNDE1NzcxODI=", "number": 611, "title": "Numpy logic error in 5.5", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-07-16T15:54:10Z", "updated_at": "2021-08-12T18:28:49Z", "closed_at": "2021-08-12T18:28:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Anna ran across a bug this morning.\r\n\r\nIn Pyomo 5.5, the following code will cause a model to be constructed with `numpy.ndarray` objects that results in an empty model (?) being sent to the solver. Even though IPOPT will report `Optimal solution` here, the initial model values will remain unchanged (`c_1 = c_2 = 1` rather than the optimal value of `c_1 = c_2 = 0.5`). This is not due to a non-convexity.\r\n\r\nLuckily, in the new expression system, an exception is raised because `numpy.ndarray` does not have an expected `is_expression_type` attribute during expression generation.\r\n\r\nIf we plan to release 5.5.1, we should address this issue.\r\n\r\n## Model\r\n```\r\nimport numpy as np\r\nfrom pyomo.environ import *\r\n\r\n\r\ndef run_model():\r\n    samples = 10\r\n    c1 = .5\r\n    c2 = .5\r\n\r\n    model = ConcreteModel()\r\n    model.i = RangeSet(samples)\r\n\r\n    def init_x(model, i):\r\n        return np.random.rand(1)\r\n\r\n    def init_y(model, i):\r\n        return c1 * (model.x[i]**2) + c2 * model.x[i]\r\n\r\n    model.x = Param(model.i, initialize=init_x)\r\n    model.y = Param(model.i, initialize=init_y)\r\n    model.c_1 = Var(within=Reals, initialize=1)\r\n    model.c_2 = Var(within=Reals, initialize=1)\r\n\r\n    model.error = Objective(\r\n        # Sum squared error of quadratic fit\r\n        expr=sum(((model.c_1 * (model.x[i]**2) + model.c_2 * model.x[i])\r\n                  - model.y[i]\r\n                  )**2\r\n                 for i in model.i))\r\n\r\n    SolverFactory('ipopt').solve(model, tee=True)\r\n    model.display()\r\n\r\n\r\nif __name__ == '__main__':\r\n    run_model()\r\n```\r\n\r\n## Pyomo 5.5 output\r\n```\r\nEXIT: Optimal Solution Found.\r\nModel unknown\r\n\r\n  Variables:\r\n    c_1 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :  None :   1.0 :  None : False : False :  Reals\r\n    c_2 : Size=1, Index=None\r\n        Key  : Lower : Value : Upper : Fixed : Stale : Domain\r\n        None :  None :   1.0 :  None : False : False :  Reals\r\n\r\n  Objectives:\r\n    error : Size=1, Index=None, Active=True\r\n        Key  : Active : Value\r\n        None :   True : [3.47962527]\r\n\r\n  Constraints:\r\n    None\r\n```\r\n\r\n## Pyomo master (commit https://github.com/Pyomo/pyomo/commit/ab7868db53fe3bdaa1ad66ab65e3c9795ebaefa0)\r\n```\r\nERROR: Rule failed when generating expression for objective error:\r\n    AttributeError: 'numpy.ndarray' object has no attribute\r\n    'is_expression_type'\r\nERROR: Constructing component 'error' from data=None failed: AttributeError:\r\n    'numpy.ndarray' object has no attribute 'is_expression_type'\r\nTraceback (most recent call last):\r\n  File \"..\\numpy_error_lists.py\", line 25, in <module>\r\n    model.error=Objective(rule=error_rule,sense=minimize)\r\n  File \"c:\\cygwin64\\home\\qchen\\git\\pyomo\\pyomo\\core\\base\\block.py\", line 538, in __setattr__\r\n    self.add_component(name, val)\r\n  File \"c:\\cygwin64\\home\\qchen\\git\\pyomo\\pyomo\\core\\base\\block.py\", line 978, in add_component\r\n    val.construct(data)\r\n  File \"c:\\cygwin64\\home\\qchen\\git\\pyomo\\pyomo\\core\\base\\objective.py\", line 340, in construct\r\n    tmp = _init_rule(_self_parent)\r\n  File \"..\\numpy_error_lists.py\", line 24, in error_rule\r\n    return sum(((model.c_1*(model.x[i]**2)+model.c_2*model.x[i])-model.y[i])**2 for i in model.i)\r\n  File \"..\\numpy_error_lists.py\", line 24, in <genexpr>\r\n    return sum(((model.c_1*(model.x[i]**2)+model.c_2*model.x[i])-model.y[i])**2 for i in model.i)\r\n  File \"c:\\cygwin64\\home\\qchen\\git\\pyomo\\pyomo\\core\\expr\\numvalue.py\", line 770, in __mul__\r\n    return _generate_mul_expression(_mul,self,other)\r\n  File \"c:\\cygwin64\\home\\qchen\\git\\pyomo\\pyomo\\core\\expr\\expr_pyomo5.py\", line 3060, in _generate_mul_expression\r\n    if not (_other.__class__ in native_types or _other.is_expression_type()):\r\nAttributeError: 'numpy.ndarray' object has no attribute 'is_expression_type'\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/611/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/608", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/608/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/608/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/608/events", "html_url": "https://github.com/Pyomo/pyomo/issues/608", "id": 340861137, "node_id": "MDU6SXNzdWUzNDA4NjExMzc=", "number": 608, "title": "Using name buffer with getname can mess up later calls", "user": {"login": "gseastream", "id": 28630589, "node_id": "MDQ6VXNlcjI4NjMwNTg5", "avatar_url": "https://avatars.githubusercontent.com/u/28630589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gseastream", "html_url": "https://github.com/gseastream", "followers_url": "https://api.github.com/users/gseastream/followers", "following_url": "https://api.github.com/users/gseastream/following{/other_user}", "gists_url": "https://api.github.com/users/gseastream/gists{/gist_id}", "starred_url": "https://api.github.com/users/gseastream/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gseastream/subscriptions", "organizations_url": "https://api.github.com/users/gseastream/orgs", "repos_url": "https://api.github.com/users/gseastream/repos", "events_url": "https://api.github.com/users/gseastream/events{/privacy}", "received_events_url": "https://api.github.com/users/gseastream/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-13T02:39:18Z", "updated_at": "2022-07-29T19:13:52Z", "closed_at": "2022-07-29T19:13:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When using the `name_buffer` option on `component.getname`, if you first call with `fully_qualified=True` and then you later call with `fully_qualified=False`, the second call will incorrectly return the fully qualified name because it was stored that way in the name buffer. Consider the following:\r\n\r\n```python\r\n>>> from pyomo.environ import *\r\n>>> m = ConcreteModel()\r\n>>> m.b = Block()\r\n>>> m.b.x = Var()\r\n>>> buf = {}\r\n>>> m.b.x.getname(fully_qualified=True, name_buffer=buf)\r\n'b.x'\r\n>>> m.b.x.getname(fully_qualified=False, name_buffer=buf)\r\n'b.x'\r\n```\r\n\r\nWhile this may not matter very much because you can just use `.local_name` (which does not use any name buffer), I imagine we would still want to rely on getname for non fully qualified names with a buffer to still be correct.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/608/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/597", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/597/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/597/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/597/events", "html_url": "https://github.com/Pyomo/pyomo/issues/597", "id": 336838313, "node_id": "MDU6SXNzdWUzMzY4MzgzMTM=", "number": 597, "title": "Pyomo crashes when solver returns suffix but no value for variables", "user": {"login": "mfripp", "id": 7928086, "node_id": "MDQ6VXNlcjc5MjgwODY=", "avatar_url": "https://avatars.githubusercontent.com/u/7928086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfripp", "html_url": "https://github.com/mfripp", "followers_url": "https://api.github.com/users/mfripp/followers", "following_url": "https://api.github.com/users/mfripp/following{/other_user}", "gists_url": "https://api.github.com/users/mfripp/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfripp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfripp/subscriptions", "organizations_url": "https://api.github.com/users/mfripp/orgs", "repos_url": "https://api.github.com/users/mfripp/repos", "events_url": "https://api.github.com/users/mfripp/events{/privacy}", "received_events_url": "https://api.github.com/users/mfripp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-29T02:08:05Z", "updated_at": "2018-10-12T01:48:32Z", "closed_at": "2018-10-12T01:48:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When the user requests an irreducibly infeasible set of constraints (IIS) for an infeasible mixed-integer program, cplexamp sometimes returns the IIS but not values for the variables. This causes pyomo to crash while reading the solution. Specifically, `pyomo.opt.plugins.sol` only creates entries in `soln_variable` for variables whose values have been returned by the solver, but then it tries to attach the IIS suffix value to a non-existent item in `soln_variable`, causing an uncaught `KeyError()`.\r\n\r\nThe code below illustrates this problem:\r\n\r\n    from pyomo.environ import *\r\n    m = ConcreteModel()\r\n    m.x1 = Var(within=NonNegativeReals)\r\n    m.x2 = Var(within=NonNegativeIntegers)\r\n    m.constraint = Constraint(rule=lambda m: m.x1 + m.x2 <= -1)\r\n    m.objective = Objective(rule=lambda m: m.x1 + m.x2, sense=minimize)\r\n    m.iis = Suffix(direction=Suffix.IMPORT)\r\n    solver = SolverFactory('cplexamp')\r\n    res = solver.solve(m, options_string='iisfind=1', tee=True)\r\n    print(\"IIS:\")\r\n    print(\"\\n\".join(sorted(c.name for c in m.iis)))\r\n\r\nI have added a pull request to fix this: https://github.com/Pyomo/pyomo/pull/596", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/597/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/584", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/584/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/584/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/584/events", "html_url": "https://github.com/Pyomo/pyomo/issues/584", "id": 334519062, "node_id": "MDU6SXNzdWUzMzQ1MTkwNjI=", "number": 584, "title": "pyomo.common._task uses python3 deprecated getargspec function", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-21T14:26:10Z", "updated_at": "2018-11-29T16:12:11Z", "closed_at": "2018-11-29T16:12:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nc:\\cygwin64\\home\\qchen\\git\\pyomo\\pyomo\\common\\_task.py:236: DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() or inspe\r\nct.getfullargspec()\r\n  argspec = inspect.getargspec(fn)\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/584/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/575", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/575/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/575/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/575/events", "html_url": "https://github.com/Pyomo/pyomo/issues/575", "id": 333374790, "node_id": "MDU6SXNzdWUzMzMzNzQ3OTA=", "number": 575, "title": "Pyomo.DAE bug in reduce_collocation_points", "user": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 835396803, "node_id": "MDU6TGFiZWw4MzUzOTY4MDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.dae", "name": "pyomo.dae", "color": "209fbc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-06-18T17:58:14Z", "updated_at": "2018-08-22T21:40:05Z", "closed_at": "2018-08-22T21:40:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@carldlaird pointed out a bug in the `reduce_collocation_points` function in the collocation discretization. An attribute change from some time ago was never propagated to this function related to identifying a component's indexing sets. This bug arises when you try to apply the function to a control variable that is indexed by more than a single ContinuousSet.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/575/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/572", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/572/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/572/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/572/events", "html_url": "https://github.com/Pyomo/pyomo/issues/572", "id": 333075953, "node_id": "MDU6SXNzdWUzMzMwNzU5NTM=", "number": 572, "title": "Ipopt has_capability('integer') returns True", "user": {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-17T16:45:22Z", "updated_at": "2018-06-18T01:54:50Z", "closed_at": "2018-06-18T01:54:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n>>> import pyomo.environ as pe\r\n>>> pe.SolverFactory('ipopt').has_capability('integer')\r\nTrue\r\n```\r\n\r\nI think this should return False. There is a comment in the code that says returning False might create headaches for some people, but I don't see how. Can I change this?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/572/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/566", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/566/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/566/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/566/events", "html_url": "https://github.com/Pyomo/pyomo/issues/566", "id": 332617091, "node_id": "MDU6SXNzdWUzMzI2MTcwOTE=", "number": 566, "title": "Errors in problem writers - Missing variable", "user": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-15T01:29:27Z", "updated_at": "2022-07-21T22:33:09Z", "closed_at": "2022-07-21T22:33:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In an example like this, the problem writer should generate an error because expressions contain variables that are not defined on the model:\r\n```\r\nfrom pyomo.environ import *\r\n\r\nm1 = ConcreteModel()\r\nm1.x = Var()\r\n\r\nm2 = ConcreteModel()\r\nm2.o = Objective(expr=m1.x)\r\n\r\nm2.write(\"foo.bar\")\r\n```\r\nHowever, writers for LP, NL, GMS and BAR files generate different errors ... or do not generate an error at all!", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/566/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/560", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/560/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/560/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/560/events", "html_url": "https://github.com/Pyomo/pyomo/issues/560", "id": 331233486, "node_id": "MDU6SXNzdWUzMzEyMzM0ODY=", "number": 560, "title": "NEOS server does not work on proxy connections", "user": {"login": "gseastream", "id": 28630589, "node_id": "MDQ6VXNlcjI4NjMwNTg5", "avatar_url": "https://avatars.githubusercontent.com/u/28630589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gseastream", "html_url": "https://github.com/gseastream", "followers_url": "https://api.github.com/users/gseastream/followers", "following_url": "https://api.github.com/users/gseastream/following{/other_user}", "gists_url": "https://api.github.com/users/gseastream/gists{/gist_id}", "starred_url": "https://api.github.com/users/gseastream/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gseastream/subscriptions", "organizations_url": "https://api.github.com/users/gseastream/orgs", "repos_url": "https://api.github.com/users/gseastream/repos", "events_url": "https://api.github.com/users/gseastream/events{/privacy}", "received_events_url": "https://api.github.com/users/gseastream/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-11T15:16:05Z", "updated_at": "2018-08-07T14:50:54Z", "closed_at": "2018-08-07T14:50:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Reiterating an issue that came up in #551 with the NEOS server. The `pyomo help -s` command still does not work when called within a proxy network, due to an issue with the neos server. The issue is in the `pyomo.neos.kestrel` module with handling proxy connections. We implement a custom [ProxiedTransport](https://github.com/Pyomo/pyomo/blob/bb84f26c051f20caf639839bb1cec0188276335a/pyomo/neos/kestrel.py#L50) class that is used when proxy related environment variables are set, which it seems was copied from an online source. However, this class no longer functions properly. The first issue is a discrepancy in number of arguments, but there are deeper issues in the class that are not compatible with the rest of the `xmlrpclib` module. [Here](https://gist.github.com/nathforge/980961) might be a potential solution from quick googling.\r\n\r\nWhen calling `pyomo help -s`, this is the traceback:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/ascldap/users/gseastr/envs/python3.6/bin/pyomo\", line 11, in <module>\r\n    load_entry_point('Pyomo', 'console_scripts', 'pyomo')()\r\n  File \"/home/gseastr/envs/pyomo/pyomo/scripting/pyomo_main.py\", line 82, in main\r\n    retval = _options.func(_options)\r\n  File \"/home/gseastr/envs/pyomo/pyomo/scripting/driver_help.py\", line 456, in help_exec\r\n    help_solvers()\r\n  File \"/home/gseastr/envs/pyomo/pyomo/scripting/driver_help.py\", line 373, in help_solvers\r\n    kestrel = pyomo.neos.kestrel.kestrelAMPL()\r\n  File \"/home/gseastr/envs/pyomo/pyomo/neos/kestrel.py\", line 66, in __init__\r\n    self.setup_connection()\r\n  File \"/home/gseastr/envs/pyomo/pyomo/neos/kestrel.py\", line 87, in setup_connection\r\n    result = self.neos.ping()\r\n  File \"/home/gseastr/envs/python3.6/lib/python3.6/xmlrpc/client.py\", line 1112, in __call__\r\n    return self.__send(self.__name, args)\r\n  File \"/home/gseastr/envs/python3.6/lib/python3.6/xmlrpc/client.py\", line 1452, in __request\r\n    verbose=self.__verbose\r\n  File \"/home/gseastr/envs/python3.6/lib/python3.6/xmlrpc/client.py\", line 1154, in request\r\n    return self.single_request(host, handler, request_body, verbose)\r\n  File \"/home/gseastr/envs/python3.6/lib/python3.6/xmlrpc/client.py\", line 1166, in single_request\r\n    http_conn = self.send_request(host, handler, request_body, verbose)\r\nTypeError: send_request() takes 4 positional arguments but 5 were given\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/560/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/557", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/557/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/557/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/557/events", "html_url": "https://github.com/Pyomo/pyomo/issues/557", "id": 331005573, "node_id": "MDU6SXNzdWUzMzEwMDU1NzM=", "number": 557, "title": "Variable fixing does not check value against domain", "user": {"login": "jwatsonnm", "id": 16403740, "node_id": "MDQ6VXNlcjE2NDAzNzQw", "avatar_url": "https://avatars.githubusercontent.com/u/16403740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwatsonnm", "html_url": "https://github.com/jwatsonnm", "followers_url": "https://api.github.com/users/jwatsonnm/followers", "following_url": "https://api.github.com/users/jwatsonnm/following{/other_user}", "gists_url": "https://api.github.com/users/jwatsonnm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwatsonnm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwatsonnm/subscriptions", "organizations_url": "https://api.github.com/users/jwatsonnm/orgs", "repos_url": "https://api.github.com/users/jwatsonnm/repos", "events_url": "https://api.github.com/users/jwatsonnm/events{/privacy}", "received_events_url": "https://api.github.com/users/jwatsonnm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-10T21:50:10Z", "updated_at": "2022-07-29T19:22:35Z", "closed_at": "2022-07-29T19:22:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the following snippet:\r\n\r\nimport pyomo.environ as pe\r\nm = pe.ConcreteModel()\r\nm.v = pe.Var(within=pe.NonNegativeReals)\r\nm.v = -1.0\r\n\r\nThis yields, as one would like/expect, a domain error during the variable-value assignment.\r\n\r\nHowever, consider instead the following snippet:\r\n\r\nimport pyomo.environ as pe\r\nm = pe.ConcreteModel()\r\nm.v = pe.Var(within=pe.NonNegativeReals)\r\nm.v.fix(-1.0)\r\n\r\nIn contrast to the first snippet, this example runs clean on master - with no exception.\r\n\r\nAt a minimum, this is inconsistent behavior. This is biting @DLWoodruff and I, as we work on alternative methods for candidate solution generation in PySP. We feel that the behavior should be identical - an exception being thrown - in both cases. If anything, we would have expected fix() to simply do the variable-value assignment, at which point the exception would have been triggered.\r\n\r\n\r\n                                ", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/557/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/550", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/550/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/550/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/550/events", "html_url": "https://github.com/Pyomo/pyomo/issues/550", "id": 330015614, "node_id": "MDU6SXNzdWUzMzAwMTU2MTQ=", "number": 550, "title": "AttributeError solving BlockData objects", "user": {"login": "emma58", "id": 12833636, "node_id": "MDQ6VXNlcjEyODMzNjM2", "avatar_url": "https://avatars.githubusercontent.com/u/12833636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emma58", "html_url": "https://github.com/emma58", "followers_url": "https://api.github.com/users/emma58/followers", "following_url": "https://api.github.com/users/emma58/following{/other_user}", "gists_url": "https://api.github.com/users/emma58/gists{/gist_id}", "starred_url": "https://api.github.com/users/emma58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emma58/subscriptions", "organizations_url": "https://api.github.com/users/emma58/orgs", "repos_url": "https://api.github.com/users/emma58/repos", "events_url": "https://api.github.com/users/emma58/events{/privacy}", "received_events_url": "https://api.github.com/users/emma58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-06-06T20:13:36Z", "updated_at": "2020-04-15T20:19:46Z", "closed_at": "2020-04-15T20:19:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have this model:\r\n```\r\nfrom pyomo.environ import *\r\n\r\nopt = SolverFactory('gurobi')\r\n\r\ndef give_me_a_block():\r\n    m = ConcreteModel()\r\n    m.someVar = Var(within=Binary)\r\n    m.someCons = Constraint(expr=m.someVar >= 1)\r\n    m.obj = Objective(expr=m.someVar)\r\n\r\n    return m\r\n\r\nm = ConcreteModel()\r\n\r\nm.Scenarios = Set(initialize=['scen1','scen2'])\r\n@m.Block(m.Scenarios)\r\ndef ScenarioSubproblems(m, s):\r\n    model = give_me_a_block()\r\n    return model\r\n\r\n# solve my subproblems\r\nfor s in m.Scenarios:\r\n    opt.solve(m.ScenarioSubproblems[s])\r\n```\r\nI get this traceback when it tries to solve the first subproblem:\r\n```\r\nTraceback (most recent call last):\r\n  File \"minimaler_example.py\", line 23, in <module>\r\n    opt.solve(m.ScenarioSubproblems[s])\r\n  File \"/home/esjohn/src/pyomo/pyomo/opt/base/solvers.py\", line 659, in solve\r\n    default_variable_value=self._default_variable_value)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/PyomoModel.py\", line 282, in load_from\r\n    default_variable_value=default_variable_value)\r\n  File \"/home/esjohn/src/pyomo/pyomo/core/base/PyomoModel.py\", line 450, in add_solution\r\n    for vdata in instance.component_data_objects(Var):\r\nAttributeError: 'NoneType' object has no attribute 'component_data_objects'\r\n```\r\nThis is on master. But this code ran on my Windows machine with Pyomo 5.5 (and Python 2.7). So should this be allowed? And if not, what should the error be?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/550/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/531", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/531/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/531/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/531/events", "html_url": "https://github.com/Pyomo/pyomo/issues/531", "id": 328285774, "node_id": "MDU6SXNzdWUzMjgyODU3NzQ=", "number": 531, "title": "Simulator fails when passed a discretized model", "user": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 835396803, "node_id": "MDU6TGFiZWw4MzUzOTY4MDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.dae", "name": "pyomo.dae", "color": "209fbc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jsimkoff", "id": 34292771, "node_id": "MDQ6VXNlcjM0MjkyNzcx", "avatar_url": "https://avatars.githubusercontent.com/u/34292771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsimkoff", "html_url": "https://github.com/jsimkoff", "followers_url": "https://api.github.com/users/jsimkoff/followers", "following_url": "https://api.github.com/users/jsimkoff/following{/other_user}", "gists_url": "https://api.github.com/users/jsimkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsimkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsimkoff/subscriptions", "organizations_url": "https://api.github.com/users/jsimkoff/orgs", "repos_url": "https://api.github.com/users/jsimkoff/repos", "events_url": "https://api.github.com/users/jsimkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/jsimkoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsimkoff", "id": 34292771, "node_id": "MDQ6VXNlcjM0MjkyNzcx", "avatar_url": "https://avatars.githubusercontent.com/u/34292771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsimkoff", "html_url": "https://github.com/jsimkoff", "followers_url": "https://api.github.com/users/jsimkoff/followers", "following_url": "https://api.github.com/users/jsimkoff/following{/other_user}", "gists_url": "https://api.github.com/users/jsimkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsimkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsimkoff/subscriptions", "organizations_url": "https://api.github.com/users/jsimkoff/orgs", "repos_url": "https://api.github.com/users/jsimkoff/repos", "events_url": "https://api.github.com/users/jsimkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/jsimkoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-05-31T20:29:50Z", "updated_at": "2018-08-22T21:40:05Z", "closed_at": "2018-08-22T21:40:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is caused by the Simulator identifying DerivativeVar components based on their ctype which is reclassified to Var after applying a discretization.\r\n\r\n@jsimkoff is working on a bug fix", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/531/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/523", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/523/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/523/events", "html_url": "https://github.com/Pyomo/pyomo/issues/523", "id": 328066707, "node_id": "MDU6SXNzdWUzMjgwNjY3MDc=", "number": 523, "title": "Improve Time to expand Connectors with TransformationFactory", "user": {"login": "sbruche", "id": 39793955, "node_id": "MDQ6VXNlcjM5NzkzOTU1", "avatar_url": "https://avatars.githubusercontent.com/u/39793955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbruche", "html_url": "https://github.com/sbruche", "followers_url": "https://api.github.com/users/sbruche/followers", "following_url": "https://api.github.com/users/sbruche/following{/other_user}", "gists_url": "https://api.github.com/users/sbruche/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbruche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbruche/subscriptions", "organizations_url": "https://api.github.com/users/sbruche/orgs", "repos_url": "https://api.github.com/users/sbruche/repos", "events_url": "https://api.github.com/users/sbruche/events{/privacy}", "received_events_url": "https://api.github.com/users/sbruche/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-31T09:40:58Z", "updated_at": "2018-08-03T19:35:09Z", "closed_at": "2018-08-03T19:35:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "The time to expand the connectors increases significantly if a large number of connectors needs to be considered (e.g. by using many time steps).\r\n\r\n\r\n\r\nThe time for expansion is increasing quadratically and not linearly as expected (see attached pdf for a plot [source-connector-sink.pdf](https://github.com/Pyomo/pyomo/files/2057641/source-connector-sink.pdf)).\r\n\r\nFor the discussion in the Google Group see: https://groups.google.com/forum/#!topic/pyomo-forum/AQhhJPbN4_c", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/523/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/488", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/488/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/488/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/488/events", "html_url": "https://github.com/Pyomo/pyomo/issues/488", "id": 323634627, "node_id": "MDU6SXNzdWUzMjM2MzQ2Mjc=", "number": 488, "title": "Symbolic solver labels causing GAMS writer to produce element names too long for GAMS", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-16T14:00:52Z", "updated_at": "2018-05-30T14:01:23Z", "closed_at": "2018-05-30T14:01:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "GAMS apparently has a limit on label lengths of 63 characters. We need to make sure what is generated is shorter than that.\r\n\r\nhttp://yetanothermathprogrammingconsultant.blogspot.com/2015/06/gams-limits-on-labels.html", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/488/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/472", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/472/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/472/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/472/events", "html_url": "https://github.com/Pyomo/pyomo/issues/472", "id": 321841798, "node_id": "MDU6SXNzdWUzMjE4NDE3OTg=", "number": 472, "title": "ApplicationError from Ipopt not caught by Pyomo (5.5)", "user": {"login": "maajdl", "id": 7543475, "node_id": "MDQ6VXNlcjc1NDM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7543475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maajdl", "html_url": "https://github.com/maajdl", "followers_url": "https://api.github.com/users/maajdl/followers", "following_url": "https://api.github.com/users/maajdl/following{/other_user}", "gists_url": "https://api.github.com/users/maajdl/gists{/gist_id}", "starred_url": "https://api.github.com/users/maajdl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maajdl/subscriptions", "organizations_url": "https://api.github.com/users/maajdl/orgs", "repos_url": "https://api.github.com/users/maajdl/repos", "events_url": "https://api.github.com/users/maajdl/events{/privacy}", "received_events_url": "https://api.github.com/users/maajdl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-10T07:49:28Z", "updated_at": "2022-07-21T22:50:59Z", "closed_at": "2022-07-21T22:50:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI often have an  ApplicationError  triggered  by Ipopt   (Windows, not checked on Linux).\r\nThis terminates Pyomo  abruptly.\r\nI solved that easily for my own purpose by:\r\n\r\n          - ctypes.windll.kernel32.SetErrorMode(3)\r\n          - catching the exception that occurs\r\n          - creating a  SolverResults   object to return to the caller\r\n              (the crash occurs before any  SolverResults  being created by solve())\r\n\r\nIn this way the  ApplicationError  behaves as any other error that Ipopt would return.\r\n(I then simply try again with an Ipopt version that would hopefully do the job)\r\n\r\nMaybe it could be useful to anticipate this  ApplicationError   directly within Pyomo to allow for a smooth exception handling.\r\n\r\nThanks,\r\n\r\nMichel", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/472/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/470", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/470/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/470/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/470/events", "html_url": "https://github.com/Pyomo/pyomo/issues/470", "id": 320657281, "node_id": "MDU6SXNzdWUzMjA2NTcyODE=", "number": 470, "title": "expression error", "user": {"login": "DLWoodruff", "id": 16341380, "node_id": "MDQ6VXNlcjE2MzQxMzgw", "avatar_url": "https://avatars.githubusercontent.com/u/16341380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DLWoodruff", "html_url": "https://github.com/DLWoodruff", "followers_url": "https://api.github.com/users/DLWoodruff/followers", "following_url": "https://api.github.com/users/DLWoodruff/following{/other_user}", "gists_url": "https://api.github.com/users/DLWoodruff/gists{/gist_id}", "starred_url": "https://api.github.com/users/DLWoodruff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DLWoodruff/subscriptions", "organizations_url": "https://api.github.com/users/DLWoodruff/orgs", "repos_url": "https://api.github.com/users/DLWoodruff/repos", "events_url": "https://api.github.com/users/DLWoodruff/events{/privacy}", "received_events_url": "https://api.github.com/users/DLWoodruff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "DLWoodruff", "id": 16341380, "node_id": "MDQ6VXNlcjE2MzQxMzgw", "avatar_url": "https://avatars.githubusercontent.com/u/16341380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DLWoodruff", "html_url": "https://github.com/DLWoodruff", "followers_url": "https://api.github.com/users/DLWoodruff/followers", "following_url": "https://api.github.com/users/DLWoodruff/following{/other_user}", "gists_url": "https://api.github.com/users/DLWoodruff/gists{/gist_id}", "starred_url": "https://api.github.com/users/DLWoodruff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DLWoodruff/subscriptions", "organizations_url": "https://api.github.com/users/DLWoodruff/orgs", "repos_url": "https://api.github.com/users/DLWoodruff/repos", "events_url": "https://api.github.com/users/DLWoodruff/events{/privacy}", "received_events_url": "https://api.github.com/users/DLWoodruff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "DLWoodruff", "id": 16341380, "node_id": "MDQ6VXNlcjE2MzQxMzgw", "avatar_url": "https://avatars.githubusercontent.com/u/16341380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DLWoodruff", "html_url": "https://github.com/DLWoodruff", "followers_url": "https://api.github.com/users/DLWoodruff/followers", "following_url": "https://api.github.com/users/DLWoodruff/following{/other_user}", "gists_url": "https://api.github.com/users/DLWoodruff/gists{/gist_id}", "starred_url": "https://api.github.com/users/DLWoodruff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DLWoodruff/subscriptions", "organizations_url": "https://api.github.com/users/DLWoodruff/orgs", "repos_url": "https://api.github.com/users/DLWoodruff/repos", "events_url": "https://api.github.com/users/DLWoodruff/events{/privacy}", "received_events_url": "https://api.github.com/users/DLWoodruff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2018-05-07T02:44:12Z", "updated_at": "2018-05-10T07:49:11Z", "closed_at": "2018-05-10T07:49:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am running a complicated IDAES program written by others that works\r\nwith the last release before the expr_dev merge, but does not work\r\nwith master as of May 6.  This example may not be very useful for\r\ndebugging because it is so complicated and I am not really capable of\r\nfiguring out what expression is causing the error.\r\n\r\nHere is the final output of the stack dump (the full dump is included below)\r\n\r\n  File \"/home/woodruff/software/pyomo/pyomo/core/expr/expr_pyomo5.py\", line 2544, in _apply_operation\r\n    return self._fcn(result[0])\r\nOverflowError: math range error\r\n\r\n\r\nI assume that someone else will be bit by this and that someone\r\nmight be able to provide a better example for debugging, so I will\r\nkeep trying the example. However, this probably needs to be fixed\r\nbefore the next release, so if it is not fixed by other means then\r\na few weeks before the next Pyomo release I may need to\r\nbring John Eslick into the loop to help figure out what is not working.\r\nFor now, let's just wait.\r\n\r\nTo reproduce the error:\r\n\r\n0. Install idaes\r\n1. cd to ideas/examples/contrib/projects/mea_simple/parameter_estimate\r\n2. make sure there is no directory named pysp_init\r\n3. python mea_estimate_pysp.py\r\n\r\nVery quickly you should get\r\n\r\nStep 2, Fixed mass and heat flux, Time: ERROR: Constructing component 'cases' from data=None failed: OverflowError:\r\n    math range error\r\n\r\nEven when this bug does not bite, it may give errors (but well after\r\nStep 2), so I am including my output here to facilitate verifying\r\nthat it is the Pyomo error of interest:\r\n\r\n2018-05-06 18:22 - WARNING - idaes.core - _ScalarFlowsheetBlock is a top level flowhseet, but dynamic flag set to \"use_parent\"value\". Dynamic flag set to False by default\r\n2018-05-06 18:22 - WARNING - idaes.core - K10 is a top level flowhseet, but dynamic flag set to \"use_parent\"value\". Dynamic flag set to False by default\r\n\r\n\r\n----------------------------\r\n\r\nInitialize Case: K10 Bed: 1\r\n\r\n\r\n-------------------------------------------------------\r\nColumn initialization, type = Absorber\r\n\r\nStep 1, Initialize Properties, Time: 00:00:00.21, Ipopt 3.12.9\\x3a Optimal Solution Found\r\nStep 2, Fixed mass and heat flux, Time: ERROR: Constructing component 'cases' from data=None failed: OverflowError:\r\n    math range error\r\nTraceback (most recent call last):\r\n  File \"mea_estimate_pysp.py\", line 1120, in <module>\r\n    main()\r\n  File \"mea_estimate_pysp.py\", line 1019, in main\r\n    model.cases = UnitBlock(col_set, rule=rule_case)\r\n  File \"/home/woodruff/software/pyomo/pyomo/core/base/block.py\", line 538, in __setattr__\r\n    self.add_component(name, val)\r\n  File \"/home/woodruff/software/pyomo/pyomo/core/base/block.py\", line 978, in add_component\r\n    val.construct(data)\r\n  File \"/home/woodruff/software/pyomo/pyomo/core/base/block.py\", line 1794, in construct\r\n    self, self._rule, _block, idx, self._options)\r\n  File \"/home/woodruff/software/pyomo/pyomo/core/base/misc.py\", line 61, in apply_indexed_rule\r\n    return rule(model, index)\r\n  File \"mea_estimate_pysp.py\", line 1017, in rule_case\r\n    blk.col = generate_case(i)\r\n  File \"mea_estimate_pysp.py\", line 748, in generate_case\r\n    col_init(blk, case)\r\n  File \"mea_estimate_pysp.py\", line 535, in col_init\r\n    P = case_data[case][\"P\"])\r\n  File \"mea_estimate_pysp.py\", line 494, in col_init2\r\n    col.initialize('default', m_steps=[0.5, 1.0])\r\n  File \"/home/woodruff/Documents/Research/IDAES/idaes/idaes/contrib/projects/mea_simple/flowsheet/units/column.py\", line 103, in initialize\r\n    self._default_init(*args, **kwargs)\r\n  File \"/home/woodruff/Documents/Research/IDAES/idaes/idaes/contrib/projects/mea_simple/flowsheet/units/column.py\", line 879, in _default_init\r\n    results = opt.solve(self, tee=stee)\r\n  File \"/home/woodruff/software/pyomo/pyomo/opt/base/solvers.py\", line 599, in solve\r\n    self._presolve(*args, **kwds)\r\n  File \"/home/woodruff/software/pyomo/pyomo/opt/solver/shellcmd.py\", line 196, in _presolve\r\n    OptSolver._presolve(self, *args, **kwds)\r\n  File \"/home/woodruff/software/pyomo/pyomo/opt/base/solvers.py\", line 699, in _presolve\r\n    **kwds)\r\n  File \"/home/woodruff/software/pyomo/pyomo/opt/base/solvers.py\", line 770, in _convert_problem\r\n    **kwds)\r\n  File \"/home/woodruff/software/pyomo/pyomo/opt/base/convert.py\", line 110, in convert_problem\r\n    problem_files, symbol_map = converter.apply(*tmp, **tmpkw)\r\n  File \"/home/woodruff/software/pyomo/pyomo/solvers/plugins/converter/model.py\", line 192, in apply\r\n    io_options=io_options)\r\n  File \"/home/woodruff/software/pyomo/pyomo/core/base/block.py\", line 1679, in write\r\n    io_options)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/plugins/ampl/ampl_.py\", line 400, in __call__\r\n    include_all_variable_bounds=include_all_variable_bounds)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/plugins/ampl/ampl_.py\", line 979, in _print_model_NL\r\n    quadratic=False)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 387, in generate_standard_repn\r\n    repn=repn)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 937, in _generate_standard_repn\r\n    ans = _collect_sum(expr, 1, idMap, compute_values, verbose, quadratic)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 488, in _collect_sum\r\n    compute_values, verbose, quadratic)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 920, in _collect_standard_repn\r\n    compute_values, verbose, quadratic)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 784, in _collect_negation\r\n    return _collect_standard_repn(exp._args_[0], -1*multiplier, idMap, compute_values, verbose, quadratic)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 920, in _collect_standard_repn\r\n    compute_values, verbose, quadratic)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 488, in _collect_sum\r\n    compute_values, verbose, quadratic)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 920, in _collect_standard_repn\r\n    compute_values, verbose, quadratic)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 581, in _collect_prod\r\n    compute_values, verbose, quadratic)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 920, in _collect_standard_repn\r\n    compute_values, verbose, quadratic)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 611, in _collect_prod\r\n    compute_values, verbose, quadratic)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 920, in _collect_standard_repn\r\n    compute_values, verbose, quadratic)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 800, in _collect_identity\r\n    return _collect_standard_repn(exp.expr, multiplier, idMap, compute_values, verbose, quadratic)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 920, in _collect_standard_repn\r\n    compute_values, verbose, quadratic)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 581, in _collect_prod\r\n    compute_values, verbose, quadratic)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 920, in _collect_standard_repn\r\n    compute_values, verbose, quadratic)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 611, in _collect_prod\r\n    compute_values, verbose, quadratic)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 920, in _collect_standard_repn\r\n    compute_values, verbose, quadratic)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 800, in _collect_identity\r\n    return _collect_standard_repn(exp.expr, multiplier, idMap, compute_values, verbose, quadratic)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 920, in _collect_standard_repn\r\n    compute_values, verbose, quadratic)\r\n  File \"/home/woodruff/software/pyomo/pyomo/repn/standard_repn.py\", line 779, in _collect_nonl\r\n    return Results(constant=multiplier*exp._apply_operation([res.constant]))\r\n  File \"/home/woodruff/software/pyomo/pyomo/core/expr/expr_pyomo5.py\", line 2544, in _apply_operation\r\n    return self._fcn(result[0])\r\nOverflowError: math range error\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/470/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/404", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/404/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/404/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/404/events", "html_url": "https://github.com/Pyomo/pyomo/issues/404", "id": 307767237, "node_id": "MDU6SXNzdWUzMDc3NjcyMzc=", "number": 404, "title": "Test compatibility with old GLPK versions", "user": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 851808904, "node_id": "MDU6TGFiZWw4NTE4MDg5MDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/testing_and_ci", "name": "testing_and_ci", "color": "ef8da4", "default": false, "description": "Any issues related to testing and/or continuous integration (e.g., github, travis, etc.)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-22T18:39:11Z", "updated_at": "2022-01-27T16:57:07Z", "closed_at": "2022-01-27T16:57:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It looks like recent updates to Pyomo to work with GLPK 4.65 break compatibility with older versions of GLPK.  In particular, I've observed test failures with GLPK 4.40.\r\n\r\nWe should confirm Pyomo execution with a reasonable range of older GLPK versions.  Perhaps versions released in the last year?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/404/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/399", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/399/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/399/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/399/events", "html_url": "https://github.com/Pyomo/pyomo/issues/399", "id": 306783631, "node_id": "MDU6SXNzdWUzMDY3ODM2MzE=", "number": 399, "title": "ApplicationError pyutilib / Ipopt for some models, disappears if print_level option is specified", "user": {"login": "maajdl", "id": 7543475, "node_id": "MDQ6VXNlcjc1NDM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7543475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maajdl", "html_url": "https://github.com/maajdl", "followers_url": "https://api.github.com/users/maajdl/followers", "following_url": "https://api.github.com/users/maajdl/following{/other_user}", "gists_url": "https://api.github.com/users/maajdl/gists{/gist_id}", "starred_url": "https://api.github.com/users/maajdl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maajdl/subscriptions", "organizations_url": "https://api.github.com/users/maajdl/orgs", "repos_url": "https://api.github.com/users/maajdl/repos", "events_url": "https://api.github.com/users/maajdl/events{/privacy}", "received_events_url": "https://api.github.com/users/maajdl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2018-03-20T09:19:00Z", "updated_at": "2018-03-21T15:35:22Z", "closed_at": "2018-03-21T15:35:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am reposting this from [google groups](https://groups.google.com/forum/#!topic/pyomo-forum/oVIrEvT_DIs) because it looks like an issue in Pyomo.\r\n\r\nI had  a model involving   Expr_if   expressions that  was triggering an exception (see below).\r\nStrange enough, this problem  disappeared  by simply  specifying any value for the  print_level  option, even with  tee=False, and the solution found was correct.\r\n\r\nI then found an interresting test:\r\n\r\nI moved to a folder the  NL   file generated by Pyomo when the solver failed within Pyomo.\r\nI then solved this  NL  file from the command line:    ipopt test.nl   .\r\n(one such file in attachment)\r\n\r\n**Big surprise**:  ipopt succeeds without any error!\r\n(EXIT: Optimal Solution Found. Ipopt 3.11.1: Optimal Solution Found)\r\n\r\nI made a few more other tests and could not get any error from the command line! \r\n\r\nThis suggests that the error occurs because of some communication problem from Pyomo to Ipopt.\r\nThe good news is that the  Ipopt  solver does probably work well on these models,\r\nand that the print_level  workaround is probably not too bad, if it works!\r\nThe bad news is that there is a small bug in Pyomo, probably.\r\n\r\nCould you have a look?\r\nWould you have some suggestion?\r\n\r\nThanks,\r\n\r\nMichel\r\n\r\n**errors from pyomo**\r\n\r\nA windows warning screen \"ipopt.exe has stopped working, ... , Windows will close the program ... \"\r\n\r\nand this in Jupyter:\r\n\r\nERROR: \"[base]\\site-packages\\pyomo\\opt\\base\\solvers.py\", 616, solve\r\n\tSolver (ipopt) returned non-zero return code (255)\r\nERROR: \"[base]\\site-packages\\pyomo\\opt\\base\\solvers.py\", 621, solve\r\n\tSolver log:\r\n\tIpopt 3.11.1: halt_on_ampl_error=no\r\n\r\nI also read the solver exception:\r\nstatus:  exception (<class 'pyutilib.common._exceptions.ApplicationError'>, ApplicationError('Solver (ipopt) did not exit normally',), <traceback object at 0x0000004538AF9E48>)\r\n\r\n**Sample nl file generated by a model that fails within pyomo**\r\n[test_1004.nl.zip](https://github.com/Pyomo/pyomo/files/1828646/test_1004.nl.zip)\r\n[model.pickle.zip](https://github.com/Pyomo/pyomo/files/1829637/model.pickle.zip)", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/399/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/383", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/383/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/383/events", "html_url": "https://github.com/Pyomo/pyomo/pull/383", "id": 304194316, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc0MjQyNjcx", "number": 383, "title": "Fix to kernel linear_constraint when assigning an empty list of terms", "user": {"login": "ghackebeil", "id": 2308454, "node_id": "MDQ6VXNlcjIzMDg0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2308454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghackebeil", "html_url": "https://github.com/ghackebeil", "followers_url": "https://api.github.com/users/ghackebeil/followers", "following_url": "https://api.github.com/users/ghackebeil/following{/other_user}", "gists_url": "https://api.github.com/users/ghackebeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghackebeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghackebeil/subscriptions", "organizations_url": "https://api.github.com/users/ghackebeil/orgs", "repos_url": "https://api.github.com/users/ghackebeil/repos", "events_url": "https://api.github.com/users/ghackebeil/events{/privacy}", "received_events_url": "https://api.github.com/users/ghackebeil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ghackebeil", "id": 2308454, "node_id": "MDQ6VXNlcjIzMDg0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2308454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghackebeil", "html_url": "https://github.com/ghackebeil", "followers_url": "https://api.github.com/users/ghackebeil/followers", "following_url": "https://api.github.com/users/ghackebeil/following{/other_user}", "gists_url": "https://api.github.com/users/ghackebeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghackebeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghackebeil/subscriptions", "organizations_url": "https://api.github.com/users/ghackebeil/orgs", "repos_url": "https://api.github.com/users/ghackebeil/repos", "events_url": "https://api.github.com/users/ghackebeil/events{/privacy}", "received_events_url": "https://api.github.com/users/ghackebeil/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ghackebeil", "id": 2308454, "node_id": "MDQ6VXNlcjIzMDg0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2308454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghackebeil", "html_url": "https://github.com/ghackebeil", "followers_url": "https://api.github.com/users/ghackebeil/followers", "following_url": "https://api.github.com/users/ghackebeil/following{/other_user}", "gists_url": "https://api.github.com/users/ghackebeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghackebeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghackebeil/subscriptions", "organizations_url": "https://api.github.com/users/ghackebeil/orgs", "repos_url": "https://api.github.com/users/ghackebeil/repos", "events_url": "https://api.github.com/users/ghackebeil/events{/privacy}", "received_events_url": "https://api.github.com/users/ghackebeil/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-03-11T21:11:19Z", "updated_at": "2018-03-12T03:32:42Z", "closed_at": "2018-03-12T03:31:49Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/Pyomo/pyomo/pulls/383", "html_url": "https://github.com/Pyomo/pyomo/pull/383", "diff_url": "https://github.com/Pyomo/pyomo/pull/383.diff", "patch_url": "https://github.com/Pyomo/pyomo/pull/383.patch", "merged_at": "2018-03-12T03:31:49Z"}, "body": "## Fixes # \r\n\r\nAllows assignment of an empty list to the `terms` keyword or property of linear_constraint in the Kernel. Before this fix, this kind of assignment would result in a `ValueError` caused by an attempt to unpack an empty return value from `zip` into two items.\r\n\r\n### Legal Acknowledgement\r\n\r\nBy contributing to this software project, I agree to the following terms and conditions for my contribution:\r\n\r\n1. I agree my contributions are submitted under the BSD license.\r\n2. I represent I am authorized to make the contributions and grant the license. If my employer has rights to intellectual property that includes these contributions, I represent that I have received permission to make contributions and grant the required license on behalf of that employer.\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/383/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/379", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/379/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/379/events", "html_url": "https://github.com/Pyomo/pyomo/issues/379", "id": 301965912, "node_id": "MDU6SXNzdWUzMDE5NjU5MTI=", "number": 379, "title": "Do not silently fail to perform slicing", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-03T03:59:12Z", "updated_at": "2022-02-22T21:02:25Z", "closed_at": "2022-02-22T21:02:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nfrom pyomo.environ import *\r\n\r\nm = ConcreteModel()\r\nm.s = RangeSet(2)\r\nm.s2 = RangeSet(2)\r\nm.ss = Set(initialize=m.s * m.s2)\r\nm.s3 = RangeSet(3)\r\nm.x = Var(m.ss, m.s3)\r\n\r\nprint(\"Case 1\")\r\nfor var in m.x[:, 3]:\r\n    print(var.name)\r\n    # nothing happens. Expect reasonable error message.\r\n\r\nprint(\"Case 2\")\r\nfor var in m.x[:, :, 3]:\r\n    print(var.name)\r\n    # expected behavior\r\n```\r\n\r\nOutput:\r\n```\r\nCase 1\r\nCase 2\r\nx[1,2,3]\r\nx[1,1,3]\r\nx[2,1,3]\r\nx[2,2,3]\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/379/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/378", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/378/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/378/events", "html_url": "https://github.com/Pyomo/pyomo/issues/378", "id": 301923061, "node_id": "MDU6SXNzdWUzMDE5MjMwNjE=", "number": 378, "title": "Using relational Expression in Objective", "user": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-03-02T22:18:14Z", "updated_at": "2022-10-17T16:04:52Z", "closed_at": "2022-10-17T16:04:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following model is sent to a solver without any warning or error:\r\n\r\n    from pyomo.environ import *\r\n    m = ConcreteModel()\r\n    m.v = Var()\r\n    m.e = Expression(expr=m.v**2 + 2 >= 10)\r\n    m.obj = Objective(expr=m.e)\r\n\r\nWhile the user should be able to construct this model, the writers should be checking `is_relational` on the Expression object before the model is sent to a solver.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/378/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/368", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/368/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/368/events", "html_url": "https://github.com/Pyomo/pyomo/pull/368", "id": 300725629, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxNzMzNjE1", "number": 368, "title": "Misc Gurobi and Cplex fixes", "user": {"login": "ghackebeil", "id": 2308454, "node_id": "MDQ6VXNlcjIzMDg0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2308454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghackebeil", "html_url": "https://github.com/ghackebeil", "followers_url": "https://api.github.com/users/ghackebeil/followers", "following_url": "https://api.github.com/users/ghackebeil/following{/other_user}", "gists_url": "https://api.github.com/users/ghackebeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghackebeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghackebeil/subscriptions", "organizations_url": "https://api.github.com/users/ghackebeil/orgs", "repos_url": "https://api.github.com/users/ghackebeil/repos", "events_url": "https://api.github.com/users/ghackebeil/events{/privacy}", "received_events_url": "https://api.github.com/users/ghackebeil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ghackebeil", "id": 2308454, "node_id": "MDQ6VXNlcjIzMDg0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2308454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghackebeil", "html_url": "https://github.com/ghackebeil", "followers_url": "https://api.github.com/users/ghackebeil/followers", "following_url": "https://api.github.com/users/ghackebeil/following{/other_user}", "gists_url": "https://api.github.com/users/ghackebeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghackebeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghackebeil/subscriptions", "organizations_url": "https://api.github.com/users/ghackebeil/orgs", "repos_url": "https://api.github.com/users/ghackebeil/repos", "events_url": "https://api.github.com/users/ghackebeil/events{/privacy}", "received_events_url": "https://api.github.com/users/ghackebeil/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ghackebeil", "id": 2308454, "node_id": "MDQ6VXNlcjIzMDg0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2308454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghackebeil", "html_url": "https://github.com/ghackebeil", "followers_url": "https://api.github.com/users/ghackebeil/followers", "following_url": "https://api.github.com/users/ghackebeil/following{/other_user}", "gists_url": "https://api.github.com/users/ghackebeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghackebeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghackebeil/subscriptions", "organizations_url": "https://api.github.com/users/ghackebeil/orgs", "repos_url": "https://api.github.com/users/ghackebeil/repos", "events_url": "https://api.github.com/users/ghackebeil/events{/privacy}", "received_events_url": "https://api.github.com/users/ghackebeil/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-02-27T17:35:18Z", "updated_at": "2018-02-27T23:16:31Z", "closed_at": "2018-02-27T23:16:24Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/Pyomo/pyomo/pulls/368", "html_url": "https://github.com/Pyomo/pyomo/pull/368", "diff_url": "https://github.com/Pyomo/pyomo/pull/368.diff", "patch_url": "https://github.com/Pyomo/pyomo/pull/368.patch", "merged_at": "2018-02-27T23:16:24Z"}, "body": "## Fixes ##\r\n\r\nHandles options coming from the `pyomo` command, which all have values stored as string types. In the event that setting the option fails, we now cast the option value to a numeric type and retry. Fixes the Gurobi-Python interface, Gurobi-LP interface, and Cplex-Python interface.\r\n\r\nUpdates the cplex_direct plugin to check for a few more Cplex statuses and maps them to sane statuses on the results object. In particular, when a MIP was stopped early due to a time limit and returned a feasible solution, we were mapping this to error statuses on the results object.\r\n\r\n### Legal Acknowledgement\r\n\r\nBy contributing to this software project, I agree to the following terms and conditions for my contribution:\r\n\r\n1. I agree my contributions are submitted under the BSD license.\r\n2. I represent I am authorized to make the contributions and grant the license. If my employer has rights to intellectual property that includes these contributions, I represent that I have received permission to make contributions and grant the required license on behalf of that employer.\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/368/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/363", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/363/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/363/events", "html_url": "https://github.com/Pyomo/pyomo/pull/363", "id": 300085343, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxMjY2NTMx", "number": 363, "title": "Fix to gurobi_direct initialization when gurobipy is not available.", "user": {"login": "ghackebeil", "id": 2308454, "node_id": "MDQ6VXNlcjIzMDg0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2308454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghackebeil", "html_url": "https://github.com/ghackebeil", "followers_url": "https://api.github.com/users/ghackebeil/followers", "following_url": "https://api.github.com/users/ghackebeil/following{/other_user}", "gists_url": "https://api.github.com/users/ghackebeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghackebeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghackebeil/subscriptions", "organizations_url": "https://api.github.com/users/ghackebeil/orgs", "repos_url": "https://api.github.com/users/ghackebeil/repos", "events_url": "https://api.github.com/users/ghackebeil/events{/privacy}", "received_events_url": "https://api.github.com/users/ghackebeil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-26T01:50:25Z", "updated_at": "2018-02-26T12:49:19Z", "closed_at": "2018-02-26T12:49:19Z", "author_association": "MEMBER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/Pyomo/pyomo/pulls/363", "html_url": "https://github.com/Pyomo/pyomo/pull/363", "diff_url": "https://github.com/Pyomo/pyomo/pull/363.diff", "patch_url": "https://github.com/Pyomo/pyomo/pull/363.patch", "merged_at": "2018-02-26T12:49:19Z"}, "body": "In this case, the solver version was None and it was being compared to an integer, leading to a confusing warning message (probably for Python 3+ only) when calling SolverFactory that looked something like:\r\n\r\nWARNING: Gurobi direct solver plugin could not be created: '<' is invalid for 'Nonetype' and int\r\n\r\n## Fixes # .\r\n\r\n## Summary/Motivation:\r\n\r\n\r\n## Changes proposed in this PR:\r\n-\r\n-\r\n\r\n### Legal Acknowledgement\r\n\r\nBy contributing to this software project, I agree to the following terms and conditions for my contribution:\r\n\r\n1. I agree my contributions are submitted under the BSD license.\r\n2. I represent I am authorized to make the contributions and grant the license. If my employer has rights to intellectual property that includes these contributions, I represent that I have received permission to make contributions and grant the required license on behalf of that employer.\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/363/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/362", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/362/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/362/events", "html_url": "https://github.com/Pyomo/pyomo/issues/362", "id": 299833736, "node_id": "MDU6SXNzdWUyOTk4MzM3MzY=", "number": 362, "title": "Undefined variable in scenariotree manager", "user": {"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ghackebeil", "id": 2308454, "node_id": "MDQ6VXNlcjIzMDg0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2308454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghackebeil", "html_url": "https://github.com/ghackebeil", "followers_url": "https://api.github.com/users/ghackebeil/followers", "following_url": "https://api.github.com/users/ghackebeil/following{/other_user}", "gists_url": "https://api.github.com/users/ghackebeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghackebeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghackebeil/subscriptions", "organizations_url": "https://api.github.com/users/ghackebeil/orgs", "repos_url": "https://api.github.com/users/ghackebeil/repos", "events_url": "https://api.github.com/users/ghackebeil/events{/privacy}", "received_events_url": "https://api.github.com/users/ghackebeil/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ghackebeil", "id": 2308454, "node_id": "MDQ6VXNlcjIzMDg0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2308454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghackebeil", "html_url": "https://github.com/ghackebeil", "followers_url": "https://api.github.com/users/ghackebeil/followers", "following_url": "https://api.github.com/users/ghackebeil/following{/other_user}", "gists_url": "https://api.github.com/users/ghackebeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghackebeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghackebeil/subscriptions", "organizations_url": "https://api.github.com/users/ghackebeil/orgs", "repos_url": "https://api.github.com/users/ghackebeil/repos", "events_url": "https://api.github.com/users/ghackebeil/events{/privacy}", "received_events_url": "https://api.github.com/users/ghackebeil/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-02-23T20:03:29Z", "updated_at": "2018-04-10T19:32:37Z", "closed_at": "2018-04-10T19:32:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following method from `pysp/scenariotree/preprocessor.py` fails because `scenario_name` is undeclared:\r\n\r\n```\r\n    def remove_scenario(self, scenario):\r\n        assert scenario._name in self._scenario_instance\r\n        assert scenario._name not in self._scenario_to_bundle_map\r\n        scenario_instance = self._scenario_instance[scenario_name]\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/362/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/355", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/355/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/355/events", "html_url": "https://github.com/Pyomo/pyomo/issues/355", "id": 298387201, "node_id": "MDU6SXNzdWUyOTgzODcyMDE=", "number": 355, "title": "Pyomo closes any open Excel windows", "user": {"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 851968308, "node_id": "MDU6TGFiZWw4NTE5NjgzMDg=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.data", "name": "pyomo.data", "color": "1f1789", "default": false, "description": "Any issues related to data portals and data file parsing"}], "state": "closed", "locked": false, "assignee": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-02-19T20:00:55Z", "updated_at": "2019-06-25T15:26:45Z", "closed_at": "2019-06-17T23:22:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As reported on StackOverflow (https://stackoverflow.com/questions/48864193/pyomo-closes-excel), running `from pyomo.environ import *` closes any open Excel windows.\r\n\r\nThis appears to be due to `pyomo.core.plugins.data.sheet.py`, and in particular:\r\n```\r\nif win32com_available:\r\n    from pyutilib.excel.spreadsheet_win32com import ExcelSpreadsheet_win32com\r\n    tmp = ExcelSpreadsheet_win32com()\r\n    try:\r\n        tmp._excel_dispatch()\r\n        tmp._excel_quit()\r\n        _excel_available = True\r\n    except:\r\n        pass\r\n```\r\n\r\nAt a minimum, this shouldn't be happening during import.  Better yet, we should figure out a way to detect if we should / should not call `._excel_quit()`\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/355/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/353", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/353/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/353/events", "html_url": "https://github.com/Pyomo/pyomo/issues/353", "id": 297599030, "node_id": "MDU6SXNzdWUyOTc1OTkwMzA=", "number": 353, "title": "Pyomo.DAE transformations looping through blocked-hierarchical models incorrectly", "user": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 835396803, "node_id": "MDU6TGFiZWw4MzUzOTY4MDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.dae", "name": "pyomo.dae", "color": "209fbc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-02-15T21:15:44Z", "updated_at": "2018-03-26T23:09:16Z", "closed_at": "2018-03-26T23:09:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This representative example from an IDAES unit model throws an AttributeError:\r\n\r\n```\r\nfrom pyomo.environ import *\r\nfrom pyomo.dae import *\r\n\r\nm = ConcreteModel()\r\nm.t = ContinuousSet(bounds=(0,10))\r\n\r\nm.CO1 = Block()\r\nm.CO1.holdup = Block()\r\ndef _prop_in_rule(b, t):\r\n    b.pressure = Var()\r\n    return b\r\nm.CO1.holdup.properties_in = Block(m.t, rule=_prop_in_rule)\r\n\r\ndef _prop_out_rule(b, t):\r\n    b.pressure = Var()\r\n    return b\r\nm.CO1.holdup.properties_out = Block(m.t, rule=_prop_out_rule)\r\n\r\nm.CO1.ratioP = Var(m.t)\r\n\r\ndef _ratio_rule(b, t):\r\n    return b.ratioP[t] <= b.holdup.properties_in[t].pressure - b.holdup.properties_out[t].pressure \r\nm.CO1.eq_ratio_P = Constraint(m.t, rule=_ratio_rule)\r\n\r\ndisc = TransformationFactory('dae.finite_difference')\r\ndisc.apply_to(m, nfe=2)\r\n```\r\n\r\n```\r\n$ python -i temp.py\r\nTraceback (most recent call last):\r\n  File \"temp.py\", line 26, in <module>\r\n    disc.apply_to(m, nfe=2)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/core/base/plugin.py\", line 334, in apply_to\r\n    self._apply_to(model, **kwds)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/dae/plugins/finitedifference.py\", line 187, in _apply_to\r\n    self._transformBlock(block, currentds)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/dae/plugins/finitedifference.py\", line 218, in _transformBlock\r\n    update_contset_indexed_component(c)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/dae/misc.py\", line 145, in update_contset_indexed_component\r\n    _update_constraint(comp)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/dae/misc.py\", line 189, in _update_constraint\r\n    con.add(i, apply_indexed_rule(con, _rule, _parent, i))\r\n  File \"/home/blnicho/Research/pyomo/pyomo/core/base/misc.py\", line 61, in apply_indexed_rule\r\n    return rule(model, index)\r\n  File \"temp.py\", line 22, in _ratio_rule\r\n    return b.ratioP[t] <= b.holdup.properties_in[t].pressure - b.holdup.properties_out[t].pressure \r\n  File \"/home/blnicho/Research/pyomo/pyomo/core/base/block.py\", line 521, in __getattr__\r\n    % (self.__class__.__name__, val))\r\nAttributeError: '_BlockData' object has no attribute 'pressure'\r\n>>> \r\n``` ", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/353/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/345", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/345/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/345/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/345/events", "html_url": "https://github.com/Pyomo/pyomo/issues/345", "id": 296494704, "node_id": "MDU6SXNzdWUyOTY0OTQ3MDQ=", "number": 345, "title": "Simulator fails when differential variables are not used in a constraint", "user": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 835396803, "node_id": "MDU6TGFiZWw4MzUzOTY4MDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.dae", "name": "pyomo.dae", "color": "209fbc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-02-12T19:24:52Z", "updated_at": "2018-06-11T15:32:10Z", "closed_at": "2018-06-11T15:32:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This bug is isolated to when casadi is used as the integration package. The toy model below produces an error when the `simulate` function is called:\r\n\r\n```\r\nfrom pyomo.environ import *\r\nfrom pyomo.dae import *\r\n\r\nm = ConcreteModel()\r\nm.t = ContinuousSet(bounds=(0,10))\r\nm.p = Param(initialize=5, mutable=True)\r\nm.v1 = Var(m.t)\r\nm.dv1 = DerivativeVar(m.v1)\r\n\r\ndef _con1(m, t):\r\n    return m.dv1[t] == 10 + m.p\r\nm.con1 = Constraint(m.t, rule=_con1)\r\n\r\nm.v1[0] = 0\r\n\r\nmysim = Simulator(m, package='casadi')\r\ntsim, profiles = mysim.simulate(numpoints=100)\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"temp.py\", line 17, in <module>\r\n    tsim, profiles = mysim.simulate(numpoints=100)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/dae/simulator.py\", line 773, in simulate\r\n    integrator_options)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/dae/simulator.py\", line 813, in _simulate_with_casadi_no_inputs\r\n    xalltemp = [self._templatemap[i] for i in self._diffvars]\r\nKeyError: <pyomo.core.base.template_expr._GetItemIndexer object at 0x7fbf3c852590>\r\n>>> \r\n\r\n```\r\n\r\nThe fix is to make sure all differential variables are added to the template map when a `Simulator` object is initialized.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/345/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/334", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/334/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/334/events", "html_url": "https://github.com/Pyomo/pyomo/issues/334", "id": 293576322, "node_id": "MDU6SXNzdWUyOTM1NzYzMjI=", "number": 334, "title": "Intermittent test failure (AttributeError: _args) in Python 3.4", "user": {"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-01T15:39:21Z", "updated_at": "2018-02-21T07:22:44Z", "closed_at": "2018-02-21T07:22:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There is a known intermittent test failure in Python 3.4 when cloning blocks with unpicklable attributes. I have spent a number of hours staring at it and cannot figure it out for the life of me. So far, all I know is:\r\n\r\n- it only seems to crop up in Python 3.4\r\n- it seems to be due to a partial deepcopy of a component. The new object gets created, but the `__setstate__` methods aren't fired correctly, resulting in an empty class without any attributes.\r\n- it seems to be a problem with the recovery path for cloning components with unpicklable attributes (logic in `pyomo/core/base/component.py:_ComponentBase.__deepcopy__`): the test failure can be reproduced by running that test alone.\r\n- it is random and generally rare. Running that test in a loop, I have seen the error crop up in a handful of iterations; but have also seen the test run 100 times in a row without failing.\r\n\r\nThis error was also observed by @qtothec in #332.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/334/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/325", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/325/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/325/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/325/events", "html_url": "https://github.com/Pyomo/pyomo/issues/325", "id": 292848709, "node_id": "MDU6SXNzdWUyOTI4NDg3MDk=", "number": 325, "title": "Sorting mixed-type Sets fails in Python3", "user": {"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-30T16:29:47Z", "updated_at": "2019-09-24T18:42:44Z", "closed_at": "2019-09-24T18:42:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "PR #305 pointed out an issue with Sets in Python 3: while Pyomo allows mixed-type Sets (i.e., mixing integers and strings in a single set), doing so will likely fail when running under Python 3 due to pervasive sorting to enforce determinism.\r\n\r\nWe should propagate the more robust sorter added in #305 to the main Set class as a `sorted_values()` method, and then replace most uses of `sorted()` with `set.sorted_values()` throughout the code.\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/325/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/319", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/319/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/319/events", "html_url": "https://github.com/Pyomo/pyomo/issues/319", "id": 290776588, "node_id": "MDU6SXNzdWUyOTA3NzY1ODg=", "number": 319, "title": "Exceptions when attempting to dispatch problems from pysp to NEOS.", "user": {"login": "mlangiu", "id": 15340151, "node_id": "MDQ6VXNlcjE1MzQwMTUx", "avatar_url": "https://avatars.githubusercontent.com/u/15340151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlangiu", "html_url": "https://github.com/mlangiu", "followers_url": "https://api.github.com/users/mlangiu/followers", "following_url": "https://api.github.com/users/mlangiu/following{/other_user}", "gists_url": "https://api.github.com/users/mlangiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlangiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlangiu/subscriptions", "organizations_url": "https://api.github.com/users/mlangiu/orgs", "repos_url": "https://api.github.com/users/mlangiu/repos", "events_url": "https://api.github.com/users/mlangiu/events{/privacy}", "received_events_url": "https://api.github.com/users/mlangiu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-23T10:04:06Z", "updated_at": "2021-04-14T18:17:08Z", "closed_at": "2021-04-14T18:17:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to solve some test cases with the pysp module but encountered difficulties with the `runef` and `runph` commands:\r\nWhen attempting to solve the expected value problem of the farmer example, appending the option ` --solver-manager=neos` to the commandas as indicated in the `README.txt` , i.e.:\r\n\r\n     pyomo solve --solver=cplex --solver-manager=neos models/ReferenceModel.py scenariodata/AverageScenario.dat\r\n\r\nhas the desired effect: The problem is dispatched to the NEOS server and reports an optimal value of  -118600 upon completion.\r\n\r\nSolving the stochastic problem on the other hand, i.e. issuing:\r\n\r\n     runph --model-directory=models --instance-directory=nodedata -s scenariodata --default-rho=1 --solver=cplex --solver-manager=neos\r\n\r\nfails with the exception\r\n\r\n    runph: KEY ERROR:\r\n    \"Component with id '140023680377768': Total_Cost_Objective\"\r\n\r\nFrom what is said on page 177 of the second edition of \"Pyomo - Optimization Modeling in Python\" (2017) I understand that the `runef` command: \r\n\r\n     runef -m models -s scenariodata --solve --solver=cplex --solver-manager=neos\r\n\r\nshould have the same effect as the `pyomo` command above (at least in pyomo version 5.1 for which the book was written, I am using version 5.3), however I also get an exception, this time:\r\n\r\n    runef: VALUE ERROR:\r\n    ProblemWriter_nl passed unrecognized io_options:\r\n    warmstart = True\r\n\r\nFrom the fact that the `runef` command does not appear in the `README.txt` I am guessing that its direct usage has been deprecated in favor of the `pyomo` command.\r\nIf that is the case, is there a similar syntax for the `runph` command that allows usage of NEOS?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/319/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/318", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/318/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/318/events", "html_url": "https://github.com/Pyomo/pyomo/issues/318", "id": 290460676, "node_id": "MDU6SXNzdWUyOTA0NjA2NzY=", "number": 318, "title": "gdp.chull cannot handle named expressions", "user": {"login": "tkorvola", "id": 6231127, "node_id": "MDQ6VXNlcjYyMzExMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/6231127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkorvola", "html_url": "https://github.com/tkorvola", "followers_url": "https://api.github.com/users/tkorvola/followers", "following_url": "https://api.github.com/users/tkorvola/following{/other_user}", "gists_url": "https://api.github.com/users/tkorvola/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkorvola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkorvola/subscriptions", "organizations_url": "https://api.github.com/users/tkorvola/orgs", "repos_url": "https://api.github.com/users/tkorvola/repos", "events_url": "https://api.github.com/users/tkorvola/events{/privacy}", "received_events_url": "https://api.github.com/users/tkorvola/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838440520, "node_id": "MDU6TGFiZWw4Mzg0NDA1MjA=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.gdp", "name": "pyomo.gdp", "color": "a848f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-22T13:12:38Z", "updated_at": "2018-02-28T16:16:13Z", "closed_at": "2018-02-28T16:16:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "The gdp.chull plugin fails to handle named expressions (class Expression) in disjuncts, at least if the expressions are indexed. `expr.type()` in gdp/plugins/chull.py:411 raises AttributeError because _GeneralExpressionData does not have a type attribute. The whole branch seems superfluous because the following else branch also throws, albeit a different exception. However, I suppose really fixing this would require creating disaggregated expressions.\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/318/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/306", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/306/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/306/events", "html_url": "https://github.com/Pyomo/pyomo/issues/306", "id": 286912462, "node_id": "MDU6SXNzdWUyODY5MTI0NjI=", "number": 306, "title": "GAMS writer: invalid syntax caused by -0.0", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-01-08T22:41:51Z", "updated_at": "2018-05-26T00:56:41Z", "closed_at": "2018-05-26T00:56:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@gseastream I have a model in which constraints like `x - -0.0 == 0.0` started to appear. This is invalid GAMS syntax, and so the model failed to solve. I don't have the Pyomo model handy right now, but can send it to you later.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/306/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/294", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/294/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/294/events", "html_url": "https://github.com/Pyomo/pyomo/issues/294", "id": 284202000, "node_id": "MDU6SXNzdWUyODQyMDIwMDA=", "number": 294, "title": "gurobi solver option \"BestObjStop\" causes ValueError", "user": {"login": "kfoerderer", "id": 25059548, "node_id": "MDQ6VXNlcjI1MDU5NTQ4", "avatar_url": "https://avatars.githubusercontent.com/u/25059548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kfoerderer", "html_url": "https://github.com/kfoerderer", "followers_url": "https://api.github.com/users/kfoerderer/followers", "following_url": "https://api.github.com/users/kfoerderer/following{/other_user}", "gists_url": "https://api.github.com/users/kfoerderer/gists{/gist_id}", "starred_url": "https://api.github.com/users/kfoerderer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kfoerderer/subscriptions", "organizations_url": "https://api.github.com/users/kfoerderer/orgs", "repos_url": "https://api.github.com/users/kfoerderer/repos", "events_url": "https://api.github.com/users/kfoerderer/events{/privacy}", "received_events_url": "https://api.github.com/users/kfoerderer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-22T16:26:01Z", "updated_at": "2018-02-28T20:58:42Z", "closed_at": "2018-02-28T20:58:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the **BestObjStop** option offered by gurobi (see [http://www.gurobi.com/documentation/7.5/refman/bestobjstop.html#parameter:BestObjStop](http://www.gurobi.com/documentation/7.5/refman/bestobjstop.html#parameter:BestObjStop)) pyomo fails to recognize the solution.\r\n\r\n**Solver output:**\r\n> [...]\r\n> Explored 1 nodes (6931 simplex iterations) in 0.43 seconds\r\n> Thread count was 4 (of 4 available processors)\r\n> \r\n> Solution count 5: 72.8522 118.624 565.215 ... 881.385\r\n> \r\n> **Optimization achieved user objective limit**\r\n> Best objective 7.285215950465e+01, best bound 0.000000000000e+00, gap 100.0000%\r\n> 15\r\n\r\n**Error:**\r\n> [...]\\pyomo\\core\\base\\PyomoModel.py in load_from(self, results, allow_consistent_values_for_fixed_vars, comparison_tolerance_for_fixed_vars, ignore_invalid_labels, id, delete_symbol_map, clear, default_variable_value, select, ignore_fixed_vars)\r\n>     239             else:\r\n>     240                raise ValueError(\"Cannot load a SolverResults object \"\r\n> --> 241                                 \"with bad status: %s\" % str(results.solver.status))\r\n>     242         if clear:\r\n>     243             #\r\n> \r\n> **ValueError: Cannot load a SolverResults object with bad status: error**", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/294/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/285", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/285/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/285/events", "html_url": "https://github.com/Pyomo/pyomo/issues/285", "id": 282881297, "node_id": "MDU6SXNzdWUyODI4ODEyOTc=", "number": 285, "title": "Windows: CPLEX direct, solver_io=\"direct\" throws error when tee=True and keepfiles=False", "user": {"login": "JasperNL", "id": 4235756, "node_id": "MDQ6VXNlcjQyMzU3NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4235756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JasperNL", "html_url": "https://github.com/JasperNL", "followers_url": "https://api.github.com/users/JasperNL/followers", "following_url": "https://api.github.com/users/JasperNL/following{/other_user}", "gists_url": "https://api.github.com/users/JasperNL/gists{/gist_id}", "starred_url": "https://api.github.com/users/JasperNL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JasperNL/subscriptions", "organizations_url": "https://api.github.com/users/JasperNL/orgs", "repos_url": "https://api.github.com/users/JasperNL/repos", "events_url": "https://api.github.com/users/JasperNL/events{/privacy}", "received_events_url": "https://api.github.com/users/JasperNL/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-18T13:37:24Z", "updated_at": "2020-10-08T12:10:21Z", "closed_at": "2020-10-08T12:10:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Below is an example in which the error occurs. The problem is that `tee=True` seems to reserve the file, which is why `pyutilib` cannot remove the temporary files. The code is followed by the console output.\r\n\r\nSetting `keepfiles=False` will 'solve' this issue, but this is not very asthetic. `results = opt.solve(m, tee=True, keepfiles=False)`.\r\n\r\n```python\r\nfrom pyomo.environ import *\r\nfrom pyomo.opt import SolverFactory\r\n\r\n# define the model\r\nn_steps = 100\r\nm = ConcreteModel()\r\nm.STEPS = Set(initialize=range(n_steps))\r\nm.target = Param(m.STEPS, initialize=lambda m, s: 1.0)\r\nm.Build = Var()\r\nm.Operate = Var(m.STEPS)\r\nm.Meet_Target = Constraint(m.STEPS, rule=lambda m, s: m.Operate[s] >= m.target[s])\r\nm.Operate_Limit = Constraint(m.STEPS, rule=lambda m, s: m.Operate[s] <= m.Build)\r\nm.MinCost = Objective(\r\n    rule=lambda m: n_steps * m.Build + sum(1.0 * m.Operate[s] for s in m.STEPS), \r\n    sense=minimize\r\n)\r\n\r\n# solve the model\r\nopt = SolverFactory(\"cplex\", solver_io=\"direct\")\r\nresults = opt.solve(m, tee=True, keepfiles=False)\r\nm.solutions.load_from(results)\r\n```\r\n\r\n```\r\nCPXPARAM_Read_DataCheck                          1\r\nCPXPARAM_Read_APIEncoding                        \"UTF-8\"\r\nCPXPARAM_MIP_Strategy_CallbackReducedLP          0\r\nTried aggregator 1 time.\r\nLP Presolve eliminated 200 rows and 101 columns.\r\nAll rows and columns eliminated.\r\nPresolve time = 0.00 sec. (0.05 ticks)\r\nTraceback (most recent call last):\r\n  File \"C:\\Anaconda3\\envs\\python35\\lib\\site-packages\\pyutilib\\component\\config\\tempfiles.py\", line 171, in pop\r\n    os.remove(filename)\r\nPermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\\\Users\\\\Jasper\\\\AppData\\\\Local\\\\Temp\\\\tmp770of057.log'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"error.py\", line 20, in <module>\r\n    results = opt.solve(m, tee=True, keepfiles=False)\r\n  File \"C:\\Anaconda3\\envs\\python35\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\direct_solver.py\", line 149, in solve\r\n    result = self._postsolve()\r\n  File \"C:\\Anaconda3\\envs\\python35\\lib\\site-packages\\pyomo\\solvers\\plugins\\solvers\\cplex_direct.py\", line 639, in _postsolve\r\n    pyutilib.services.TempfileManager.pop(remove=not self._keepfiles)\r\n  File \"C:\\Anaconda3\\envs\\python35\\lib\\site-packages\\pyutilib\\component\\config\\tempfiles.py\", line 179, in pop\r\n    os.remove(filename)\r\nPermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\\\Users\\\\Jasper\\\\AppData\\\\Local\\\\Temp\\\\tmp770of057.log'\r\n```\r\nThank you for your great work!", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/285/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/266", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/266/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/266/events", "html_url": "https://github.com/Pyomo/pyomo/issues/266", "id": 276936140, "node_id": "MDU6SXNzdWUyNzY5MzYxNDA=", "number": 266, "title": "GAMSShell broke help -s", "user": {"login": "tkorvola", "id": 6231127, "node_id": "MDQ6VXNlcjYyMzExMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/6231127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkorvola", "html_url": "https://github.com/tkorvola", "followers_url": "https://api.github.com/users/tkorvola/followers", "following_url": "https://api.github.com/users/tkorvola/following{/other_user}", "gists_url": "https://api.github.com/users/tkorvola/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkorvola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkorvola/subscriptions", "organizations_url": "https://api.github.com/users/tkorvola/orgs", "repos_url": "https://api.github.com/users/tkorvola/repos", "events_url": "https://api.github.com/users/tkorvola/events{/privacy}", "received_events_url": "https://api.github.com/users/tkorvola/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-27T08:30:59Z", "updated_at": "2018-06-11T02:33:48Z", "closed_at": "2018-06-11T02:33:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "`pyomo help -s` lists the serial solver interfaces, then throws:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/pyomo\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/usr/lib64/python3.4/site-packages/pyomo/scripting/pyomo_main.py\", line 82, in main\r\n    retval = _options.func(_options)\r\n  File \"/usr/lib64/python3.4/site-packages/pyomo/scripting/driver_help.py\", line 457, in help_exec\r\n    help_solvers()\r\n  File \"/usr/lib64/python3.4/site-packages/pyomo/scripting/driver_help.py\", line 347, in help_solvers\r\n    if s == 'py' or opt._metasolver:\r\nAttributeError: 'GAMSShell' object has no attribute '_metasolver'\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/266/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/252", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/252/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/252/events", "html_url": "https://github.com/Pyomo/pyomo/issues/252", "id": 272997951, "node_id": "MDU6SXNzdWUyNzI5OTc5NTE=", "number": 252, "title": "Component.reconstruct() fails", "user": {"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-10T17:02:18Z", "updated_at": "2022-09-15T16:37:30Z", "closed_at": "2021-05-19T21:15:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "From the [pyomo-forum](https://groups.google.com/d/msg/pyomo-forum/Qm4Iwvwuthk/Y1puNJFCAQAJ):\r\n\r\nI am trying to update the a Set and then use reconstruct on constraints and objective functions but I am getting an error. Here's an Example:\r\n\r\n```python\r\nfrom pyomo.environ import *\r\nfrom pyomo.opt import SolverFactory\r\n\r\n# Create a solver\r\nopt = SolverFactory('gurobi')\r\n\r\n#\r\n# A simple model with binary variables and\r\n#\r\ncompleteSet = [1,2,3,4]\r\nmodel = ConcreteModel()\r\nmodel.n = Param(default=2,mutable=True)\r\n\r\nmodel.testSet = Set(initialize = completeSet[:2])\r\n\r\nmodel.x = Var(model.testSet,bounds=(-4,4))\r\ndef o_rule(model):\r\n    return sum(model.n * model.x[i] for i in model.testSet)\r\n    # return model.n * model.x\r\nmodel.o = Objective(rule=o_rule,sense=minimize)\r\n\r\ndef c1(model):\r\n    return sum(model.x[i] for i in model.x) >=0\r\nmodel.c1 = Constraint(rule=c1)\r\n\r\ndef c2(model,i):\r\n    return model.x[i]<=3\r\nmodel.c2 = Constraint(model.testSet,rule=c2)\r\n\r\n# Create a model instance and optimize\r\nresults = opt.solve(model)\r\n\r\nmodel.testSet.add(4)\r\nmodel.o.reconstruct()\r\nmodel.c1.reconstruct()\r\nmodel.c2.reconstruct()\r\n\r\nresults2 = opt.solve(model)\r\n``` \r\n\r\nBut the code breaks whenever reconstruct() is used, with an error \r\n\r\n``` \r\n  File \"C:\\Python27\\lib\\site-packages\\pyomo\\core\\base\\component.py\", line 309, in reconstruct\r\n    self.construct(data=data)\r\n  File \"C:\\Python27\\lib\\site-packages\\pyomo\\core\\base\\constraint.py\", line 727, in construct\r\n    assert None not in self._data\r\nAssertionError\r\n```\r\n\r\nIs reconstruct not used anymore? is there an alternative or is there something wrong with my code?\r\n \r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/252/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/243", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/243/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/243/events", "html_url": "https://github.com/Pyomo/pyomo/issues/243", "id": 268397748, "node_id": "MDU6SXNzdWUyNjgzOTc3NDg=", "number": 243, "title": "ModuleNotFoundError when running \"pyomo install-extras\"", "user": {"login": "jackjackk", "id": 3717222, "node_id": "MDQ6VXNlcjM3MTcyMjI=", "avatar_url": "https://avatars.githubusercontent.com/u/3717222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackjackk", "html_url": "https://github.com/jackjackk", "followers_url": "https://api.github.com/users/jackjackk/followers", "following_url": "https://api.github.com/users/jackjackk/following{/other_user}", "gists_url": "https://api.github.com/users/jackjackk/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackjackk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackjackk/subscriptions", "organizations_url": "https://api.github.com/users/jackjackk/orgs", "repos_url": "https://api.github.com/users/jackjackk/repos", "events_url": "https://api.github.com/users/jackjackk/events{/privacy}", "received_events_url": "https://api.github.com/users/jackjackk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 851971080, "node_id": "MDU6TGFiZWw4NTE5NzEwODA=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.installation", "name": "pyomo.installation", "color": "7967e0", "default": false, "description": "Any issues related to installation of pyomo"}], "state": "closed", "locked": false, "assignee": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-10-25T13:28:47Z", "updated_at": "2019-04-30T20:43:49Z", "closed_at": "2019-04-30T20:43:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Starting from a new pyvenv\r\n```\r\npython -m venv myvenv\r\nsource myvenv/bin/activate\r\npip install pyomo\r\n```\r\nI then try to install extras with\r\n```\r\npyomo install-extras\r\n```\r\nbut I get\r\n```\r\nTraceback (most recent call last):\r\n  File \"/XXX/myvenv/bin/get_pyomo_extras\", line 7, in <module>\r\n    from scripts.get_pyomo_extras import main\r\nModuleNotFoundError: No module named 'scripts'\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/243/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/243/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/216", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/216/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/216/events", "html_url": "https://github.com/Pyomo/pyomo/issues/216", "id": 255856755, "node_id": "MDU6SXNzdWUyNTU4NTY3NTU=", "number": 216, "title": "Wrong results on Piecewise", "user": {"login": "vog", "id": 412749, "node_id": "MDQ6VXNlcjQxMjc0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/412749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vog", "html_url": "https://github.com/vog", "followers_url": "https://api.github.com/users/vog/followers", "following_url": "https://api.github.com/users/vog/following{/other_user}", "gists_url": "https://api.github.com/users/vog/gists{/gist_id}", "starred_url": "https://api.github.com/users/vog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vog/subscriptions", "organizations_url": "https://api.github.com/users/vog/orgs", "repos_url": "https://api.github.com/users/vog/repos", "events_url": "https://api.github.com/users/vog/events{/privacy}", "received_events_url": "https://api.github.com/users/vog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}, {"id": 851808904, "node_id": "MDU6TGFiZWw4NTE4MDg5MDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/testing_and_ci", "name": "testing_and_ci", "color": "ef8da4", "default": false, "description": "Any issues related to testing and/or continuous integration (e.g., github, travis, etc.)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-09-07T08:32:08Z", "updated_at": "2021-04-14T18:47:04Z", "closed_at": "2021-04-14T18:47:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are several bugs in the `Piecewise` implementation of Pyomo:\r\n\r\n* `cbc` + `BIGM_BIN` produces partly wrong results\r\n* `glpk` + `BIGM_BIN` produces exactly the same wrong results\r\n* `ipopt` + any (`BIGM_BIN`, ..., `SOS2`) produces garbage results, each of those are differently wrong.\r\n\r\nI'm providing a test program to check this systematically. This program works as follows:\r\n\r\n* Print the versions of Pyomo and all used solvers\r\n* Create a model with a trivial optimum that uses `Piecewise` / `EQ` with input `x` and output `y`.\r\n* The piecewise linear function is `y=min(max(x, 0), 1)`\r\n* Evaluate the function in equidistant steps by adding the constraint `x=a` with `a` = -0.5, -0.4, ..., 1.5\r\n* For every solver, pw_repn and `a`, the model is created and solved.\r\n* For each solution, the `y` value is compared to the expected `y` value.\r\n\r\nThis is the summary part of the output:\r\n\r\n```\r\nSummary:\r\n  solver_name=cbc    pw_repn=BIGM_BIN  ... FAIL\r\n  solver_name=cbc    pw_repn=CC        ... OK\r\n  solver_name=cbc    pw_repn=DCC       ... OK\r\n  solver_name=cbc    pw_repn=INC       ... OK\r\n  solver_name=cbc    pw_repn=MC        ... OK\r\n  solver_name=glpk   pw_repn=BIGM_BIN  ... FAIL\r\n  solver_name=glpk   pw_repn=CC        ... OK\r\n  solver_name=glpk   pw_repn=DCC       ... OK\r\n  solver_name=glpk   pw_repn=INC       ... OK\r\n  solver_name=glpk   pw_repn=MC        ... OK\r\n  solver_name=ipopt  pw_repn=BIGM_BIN  ... FAIL\r\n  solver_name=ipopt  pw_repn=BIGM_SOS1 ... FAIL\r\n  solver_name=ipopt  pw_repn=CC        ... FAIL\r\n  solver_name=ipopt  pw_repn=DCC       ... FAIL\r\n  solver_name=ipopt  pw_repn=INC       ... FAIL\r\n  solver_name=ipopt  pw_repn=MC        ... FAIL\r\n  solver_name=ipopt  pw_repn=SOS2      ... FAIL\r\n```\r\n\r\n# Test program and output\r\n\r\nFinally, I'm providing the test program and the full output:\r\n\r\n```python\r\nfrom __future__ import division, print_function, unicode_literals\r\n\r\nfrom pyomo.environ import ConcreteModel\r\nfrom pyomo.environ import Constraint\r\nfrom pyomo.environ import Objective\r\nfrom pyomo.environ import Piecewise\r\nfrom pyomo.environ import Var\r\nfrom pyomo.environ import value\r\nfrom pyomo.opt import SolverFactory\r\nfrom pyomo.version import version\r\nfrom subprocess import PIPE\r\nfrom subprocess import check_output\r\n\r\ndef pw(x):\r\n    return min(max(x, 0), 1)\r\n\r\ndef create_model(pw_repn, a):\r\n    min_x, max_x = -10, 10\r\n    m = ConcreteModel()\r\n    m.c = Var()\r\n    m.x = Var(bounds=(min_x, max_x))\r\n    m.y = Var()\r\n    m.pw = Piecewise(m.y, m.x, pw_repn=pw_repn, pw_constr_type='EQ', pw_pts=[min_x, 0, 1, max_x], f_rule=lambda m,x: pw(x))\r\n    m.constr1 = Constraint(expr=m.x == a)\r\n    m.constr2 = Constraint(expr=m.c == 23)\r\n    m.o = Objective(expr=m.c)\r\n    return m\r\n\r\ndef solve(solver_name, pw_repn, a):\r\n    model = create_model(pw_repn, a)\r\n    solver = SolverFactory(solver_name)\r\n    results = solver.solve(model, keepfiles=False, tee=False)\r\n    c = value(model.c)\r\n    x = value(model.x)\r\n    y = value(model.y)\r\n    return c, x, y\r\n\r\ndef test_solver(solver_name, pw_repn):\r\n    print('')\r\n    print('solver={solver_name} pw_repn={pw_repn}'.format(**locals()))\r\n    oks = []\r\n    for i in xrange(-5, 15 + 1):\r\n        a = i * 0.1\r\n        c, x, y = solve(solver_name, pw_repn, a)\r\n        expected_y = pw(a)\r\n        ok = abs(expected_y - y) < 1e-3\r\n        result = 'OK' if ok else 'FAIL'\r\n        print('  c={c:>4.1f}  x={x:>5.2f}  expected_y={expected_y:>3.1f}  y={y:>6.4f} ... {result}'.format(**locals()))\r\n        oks.append(ok)\r\n    return all(oks)\r\n\r\ndef get_versions():\r\n    return [\r\n        ('cbc', check_output(['cbc', '-'], stdin=PIPE).split('\\n')[1].strip()),\r\n        ('glpk', check_output(['glpsol', '-v']).split('\\n')[0].strip()),\r\n        ('ipopt', check_output(['ipopt', '-v']).strip()),\r\n        ('pyomo', version),\r\n    ]\r\n\r\ndef main():\r\n    solver_names = [\r\n        'cbc',\r\n        'glpk',\r\n        'ipopt',\r\n    ]\r\n    pw_repns = [\r\n        'BIGM_BIN',\r\n        'BIGM_SOS1',\r\n        'CC',\r\n        'DCC',\r\n        'INC',\r\n        'MC',\r\n        'SOS2',\r\n    ]\r\n    unsupported_solver_repns = [\r\n        ('cbc', 'BIGM_SOS1'),\r\n        ('cbc', 'SOS2'),\r\n        ('glpk', 'BIGM_SOS1'),\r\n        ('glpk', 'SOS2'),\r\n    ]\r\n    summary = []\r\n    print('Versions:')\r\n    for name, version in get_versions():\r\n        print('  {name:<5} = {version}'.format(**locals()))\r\n    for solver_name in solver_names:\r\n        for pw_repn in pw_repns:\r\n            if (solver_name, pw_repn) not in unsupported_solver_repns:\r\n                all_ok = test_solver(solver_name, pw_repn)\r\n                summary.append((solver_name, pw_repn, all_ok))\r\n    print('')\r\n    print('Summary:')\r\n    for solver_name, pw_repn, all_ok in summary:\r\n        result = 'OK' if all_ok else 'FAIL'\r\n        print('  solver_name={solver_name:<5}  pw_repn={pw_repn:<9} ... {result}'.format(**locals()))\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\n```\r\nVersions:\r\n  cbc   = Version: 2.9.9\r\n  glpk  = GLPSOL: GLPK LP/MIP Solver, v4.63\r\n  ipopt = Ipopt 3.12.8 (Linux x86_64), ASL(20150101)\r\n  pyomo = 5.2\r\n\r\nsolver=cbc pw_repn=BIGM_BIN\r\n  c=23.0  x=-0.50  expected_y=0.0  y=1.0000 ... FAIL\r\n  c=23.0  x=-0.40  expected_y=0.0  y=1.0000 ... FAIL\r\n  c=23.0  x=-0.30  expected_y=0.0  y=1.0000 ... FAIL\r\n  c=23.0  x=-0.20  expected_y=0.0  y=1.0000 ... FAIL\r\n  c=23.0  x=-0.10  expected_y=0.0  y=1.0000 ... FAIL\r\n  c=23.0  x= 0.00  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x= 0.10  expected_y=0.1  y=1.0000 ... FAIL\r\n  c=23.0  x= 0.20  expected_y=0.2  y=1.0000 ... FAIL\r\n  c=23.0  x= 0.30  expected_y=0.3  y=1.0000 ... FAIL\r\n  c=23.0  x= 0.40  expected_y=0.4  y=1.0000 ... FAIL\r\n  c=23.0  x= 0.50  expected_y=0.5  y=1.0000 ... FAIL\r\n  c=23.0  x= 0.60  expected_y=0.6  y=1.0000 ... FAIL\r\n  c=23.0  x= 0.70  expected_y=0.7  y=1.0000 ... FAIL\r\n  c=23.0  x= 0.80  expected_y=0.8  y=1.0000 ... FAIL\r\n  c=23.0  x= 0.90  expected_y=0.9  y=1.0000 ... FAIL\r\n  c=23.0  x= 1.00  expected_y=1.0  y=0.0000 ... FAIL\r\n  c=23.0  x= 1.10  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.20  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.30  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.40  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.50  expected_y=1.0  y=1.0000 ... OK\r\n\r\nsolver=cbc pw_repn=CC\r\n  c=23.0  x=-0.50  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.40  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.30  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.20  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.10  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x= 0.00  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x= 0.10  expected_y=0.1  y=0.1000 ... OK\r\n  c=23.0  x= 0.20  expected_y=0.2  y=0.2000 ... OK\r\n  c=23.0  x= 0.30  expected_y=0.3  y=0.3000 ... OK\r\n  c=23.0  x= 0.40  expected_y=0.4  y=0.4000 ... OK\r\n  c=23.0  x= 0.50  expected_y=0.5  y=0.5000 ... OK\r\n  c=23.0  x= 0.60  expected_y=0.6  y=0.6000 ... OK\r\n  c=23.0  x= 0.70  expected_y=0.7  y=0.7000 ... OK\r\n  c=23.0  x= 0.80  expected_y=0.8  y=0.8000 ... OK\r\n  c=23.0  x= 0.90  expected_y=0.9  y=0.9000 ... OK\r\n  c=23.0  x= 1.00  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.10  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.20  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.30  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.40  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.50  expected_y=1.0  y=1.0000 ... OK\r\n\r\nsolver=cbc pw_repn=DCC\r\n  c=23.0  x=-0.50  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.40  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.30  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.20  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.10  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x= 0.00  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x= 0.10  expected_y=0.1  y=0.1000 ... OK\r\n  c=23.0  x= 0.20  expected_y=0.2  y=0.2000 ... OK\r\n  c=23.0  x= 0.30  expected_y=0.3  y=0.3000 ... OK\r\n  c=23.0  x= 0.40  expected_y=0.4  y=0.4000 ... OK\r\n  c=23.0  x= 0.50  expected_y=0.5  y=0.5000 ... OK\r\n  c=23.0  x= 0.60  expected_y=0.6  y=0.6000 ... OK\r\n  c=23.0  x= 0.70  expected_y=0.7  y=0.7000 ... OK\r\n  c=23.0  x= 0.80  expected_y=0.8  y=0.8000 ... OK\r\n  c=23.0  x= 0.90  expected_y=0.9  y=0.9000 ... OK\r\n  c=23.0  x= 1.00  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.10  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.20  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.30  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.40  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.50  expected_y=1.0  y=1.0000 ... OK\r\n\r\nsolver=cbc pw_repn=INC\r\n  c=23.0  x=-0.50  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.40  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.30  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.20  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.10  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x= 0.00  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x= 0.10  expected_y=0.1  y=0.1000 ... OK\r\n  c=23.0  x= 0.20  expected_y=0.2  y=0.2000 ... OK\r\n  c=23.0  x= 0.30  expected_y=0.3  y=0.3000 ... OK\r\n  c=23.0  x= 0.40  expected_y=0.4  y=0.4000 ... OK\r\n  c=23.0  x= 0.50  expected_y=0.5  y=0.5000 ... OK\r\n  c=23.0  x= 0.60  expected_y=0.6  y=0.6000 ... OK\r\n  c=23.0  x= 0.70  expected_y=0.7  y=0.7000 ... OK\r\n  c=23.0  x= 0.80  expected_y=0.8  y=0.8000 ... OK\r\n  c=23.0  x= 0.90  expected_y=0.9  y=0.9000 ... OK\r\n  c=23.0  x= 1.00  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.10  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.20  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.30  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.40  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.50  expected_y=1.0  y=1.0000 ... OK\r\n\r\nsolver=cbc pw_repn=MC\r\n  c=23.0  x=-0.50  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.40  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.30  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.20  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.10  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x= 0.00  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x= 0.10  expected_y=0.1  y=0.1000 ... OK\r\n  c=23.0  x= 0.20  expected_y=0.2  y=0.2000 ... OK\r\n  c=23.0  x= 0.30  expected_y=0.3  y=0.3000 ... OK\r\n  c=23.0  x= 0.40  expected_y=0.4  y=0.4000 ... OK\r\n  c=23.0  x= 0.50  expected_y=0.5  y=0.5000 ... OK\r\n  c=23.0  x= 0.60  expected_y=0.6  y=0.6000 ... OK\r\n  c=23.0  x= 0.70  expected_y=0.7  y=0.7000 ... OK\r\n  c=23.0  x= 0.80  expected_y=0.8  y=0.8000 ... OK\r\n  c=23.0  x= 0.90  expected_y=0.9  y=0.9000 ... OK\r\n  c=23.0  x= 1.00  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.10  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.20  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.30  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.40  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.50  expected_y=1.0  y=1.0000 ... OK\r\n\r\nsolver=glpk pw_repn=BIGM_BIN\r\n  c=23.0  x=-0.50  expected_y=0.0  y=1.0000 ... FAIL\r\n  c=23.0  x=-0.40  expected_y=0.0  y=1.0000 ... FAIL\r\n  c=23.0  x=-0.30  expected_y=0.0  y=1.0000 ... FAIL\r\n  c=23.0  x=-0.20  expected_y=0.0  y=1.0000 ... FAIL\r\n  c=23.0  x=-0.10  expected_y=0.0  y=1.0000 ... FAIL\r\n  c=23.0  x= 0.00  expected_y=0.0  y=1.0000 ... FAIL\r\n  c=23.0  x= 0.10  expected_y=0.1  y=0.1000 ... OK\r\n  c=23.0  x= 0.20  expected_y=0.2  y=1.0000 ... FAIL\r\n  c=23.0  x= 0.30  expected_y=0.3  y=1.0000 ... FAIL\r\n  c=23.0  x= 0.40  expected_y=0.4  y=1.0000 ... FAIL\r\n  c=23.0  x= 0.50  expected_y=0.5  y=1.0000 ... FAIL\r\n  c=23.0  x= 0.60  expected_y=0.6  y=1.0000 ... FAIL\r\n  c=23.0  x= 0.70  expected_y=0.7  y=1.0000 ... FAIL\r\n  c=23.0  x= 0.80  expected_y=0.8  y=1.0000 ... FAIL\r\n  c=23.0  x= 0.90  expected_y=0.9  y=0.9000 ... OK\r\n  c=23.0  x= 1.00  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.10  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.20  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.30  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.40  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.50  expected_y=1.0  y=1.0000 ... OK\r\n\r\nsolver=glpk pw_repn=CC\r\n  c=23.0  x=-0.50  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.40  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.30  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.20  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.10  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x= 0.00  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x= 0.10  expected_y=0.1  y=0.1000 ... OK\r\n  c=23.0  x= 0.20  expected_y=0.2  y=0.2000 ... OK\r\n  c=23.0  x= 0.30  expected_y=0.3  y=0.3000 ... OK\r\n  c=23.0  x= 0.40  expected_y=0.4  y=0.4000 ... OK\r\n  c=23.0  x= 0.50  expected_y=0.5  y=0.5000 ... OK\r\n  c=23.0  x= 0.60  expected_y=0.6  y=0.6000 ... OK\r\n  c=23.0  x= 0.70  expected_y=0.7  y=0.7000 ... OK\r\n  c=23.0  x= 0.80  expected_y=0.8  y=0.8000 ... OK\r\n  c=23.0  x= 0.90  expected_y=0.9  y=0.9000 ... OK\r\n  c=23.0  x= 1.00  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.10  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.20  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.30  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.40  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.50  expected_y=1.0  y=1.0000 ... OK\r\n\r\nsolver=glpk pw_repn=DCC\r\n  c=23.0  x=-0.50  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.40  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.30  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.20  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.10  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x= 0.00  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x= 0.10  expected_y=0.1  y=0.1000 ... OK\r\n  c=23.0  x= 0.20  expected_y=0.2  y=0.2000 ... OK\r\n  c=23.0  x= 0.30  expected_y=0.3  y=0.3000 ... OK\r\n  c=23.0  x= 0.40  expected_y=0.4  y=0.4000 ... OK\r\n  c=23.0  x= 0.50  expected_y=0.5  y=0.5000 ... OK\r\n  c=23.0  x= 0.60  expected_y=0.6  y=0.6000 ... OK\r\n  c=23.0  x= 0.70  expected_y=0.7  y=0.7000 ... OK\r\n  c=23.0  x= 0.80  expected_y=0.8  y=0.8000 ... OK\r\n  c=23.0  x= 0.90  expected_y=0.9  y=0.9000 ... OK\r\n  c=23.0  x= 1.00  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.10  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.20  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.30  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.40  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.50  expected_y=1.0  y=1.0000 ... OK\r\n\r\nsolver=glpk pw_repn=INC\r\n  c=23.0  x=-0.50  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.40  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.30  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.20  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.10  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x= 0.00  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x= 0.10  expected_y=0.1  y=0.1000 ... OK\r\n  c=23.0  x= 0.20  expected_y=0.2  y=0.2000 ... OK\r\n  c=23.0  x= 0.30  expected_y=0.3  y=0.3000 ... OK\r\n  c=23.0  x= 0.40  expected_y=0.4  y=0.4000 ... OK\r\n  c=23.0  x= 0.50  expected_y=0.5  y=0.5000 ... OK\r\n  c=23.0  x= 0.60  expected_y=0.6  y=0.6000 ... OK\r\n  c=23.0  x= 0.70  expected_y=0.7  y=0.7000 ... OK\r\n  c=23.0  x= 0.80  expected_y=0.8  y=0.8000 ... OK\r\n  c=23.0  x= 0.90  expected_y=0.9  y=0.9000 ... OK\r\n  c=23.0  x= 1.00  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.10  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.20  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.30  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.40  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.50  expected_y=1.0  y=1.0000 ... OK\r\n\r\nsolver=glpk pw_repn=MC\r\n  c=23.0  x=-0.50  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.40  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.30  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.20  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x=-0.10  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x= 0.00  expected_y=0.0  y=0.0000 ... OK\r\n  c=23.0  x= 0.10  expected_y=0.1  y=0.1000 ... OK\r\n  c=23.0  x= 0.20  expected_y=0.2  y=0.2000 ... OK\r\n  c=23.0  x= 0.30  expected_y=0.3  y=0.3000 ... OK\r\n  c=23.0  x= 0.40  expected_y=0.4  y=0.4000 ... OK\r\n  c=23.0  x= 0.50  expected_y=0.5  y=0.5000 ... OK\r\n  c=23.0  x= 0.60  expected_y=0.6  y=0.6000 ... OK\r\n  c=23.0  x= 0.70  expected_y=0.7  y=0.7000 ... OK\r\n  c=23.0  x= 0.80  expected_y=0.8  y=0.8000 ... OK\r\n  c=23.0  x= 0.90  expected_y=0.9  y=0.9000 ... OK\r\n  c=23.0  x= 1.00  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.10  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.20  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.30  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.40  expected_y=1.0  y=1.0000 ... OK\r\n  c=23.0  x= 1.50  expected_y=1.0  y=1.0000 ... OK\r\n\r\nsolver=ipopt pw_repn=BIGM_BIN\r\n  c=23.0  x=-0.50  expected_y=0.0  y=0.4054 ... FAIL\r\n  c=23.0  x=-0.40  expected_y=0.0  y=0.4068 ... FAIL\r\n  c=23.0  x=-0.30  expected_y=0.0  y=0.4083 ... FAIL\r\n  c=23.0  x=-0.20  expected_y=0.0  y=0.3128 ... FAIL\r\n  c=23.0  x=-0.10  expected_y=0.0  y=0.3140 ... FAIL\r\n  c=23.0  x= 0.00  expected_y=0.0  y=0.3153 ... FAIL\r\n  c=23.0  x= 0.10  expected_y=0.1  y=0.3164 ... FAIL\r\n  c=23.0  x= 0.20  expected_y=0.2  y=0.3175 ... FAIL\r\n  c=23.0  x= 0.30  expected_y=0.3  y=0.3187 ... FAIL\r\n  c=23.0  x= 0.40  expected_y=0.4  y=0.3198 ... FAIL\r\n  c=23.0  x= 0.50  expected_y=0.5  y=0.3209 ... FAIL\r\n  c=23.0  x= 0.60  expected_y=0.6  y=0.3858 ... FAIL\r\n  c=23.0  x= 0.70  expected_y=0.7  y=0.4029 ... FAIL\r\n  c=23.0  x= 0.80  expected_y=0.8  y=0.4040 ... FAIL\r\n  c=23.0  x= 0.90  expected_y=0.9  y=0.4051 ... FAIL\r\n  c=23.0  x= 1.00  expected_y=1.0  y=0.4062 ... FAIL\r\n  c=23.0  x= 1.10  expected_y=1.0  y=0.4072 ... FAIL\r\n  c=23.0  x= 1.20  expected_y=1.0  y=0.4083 ... FAIL\r\n  c=23.0  x= 1.30  expected_y=1.0  y=0.4093 ... FAIL\r\n  c=23.0  x= 1.40  expected_y=1.0  y=0.4104 ... FAIL\r\n  c=23.0  x= 1.50  expected_y=1.0  y=0.4114 ... FAIL\r\n\r\nsolver=ipopt pw_repn=BIGM_SOS1\r\n  c=23.0  x=-0.50  expected_y=0.0  y=0.3932 ... FAIL\r\n  c=23.0  x=-0.40  expected_y=0.0  y=0.2892 ... FAIL\r\n  c=23.0  x=-0.30  expected_y=0.0  y=0.2898 ... FAIL\r\n  c=23.0  x=-0.20  expected_y=0.0  y=0.2904 ... FAIL\r\n  c=23.0  x=-0.10  expected_y=0.0  y=0.2911 ... FAIL\r\n  c=23.0  x= 0.00  expected_y=0.0  y=0.2919 ... FAIL\r\n  c=23.0  x= 0.10  expected_y=0.1  y=0.2936 ... FAIL\r\n  c=23.0  x= 0.20  expected_y=0.2  y=0.2953 ... FAIL\r\n  c=23.0  x= 0.30  expected_y=0.3  y=0.2970 ... FAIL\r\n  c=23.0  x= 0.40  expected_y=0.4  y=0.2987 ... FAIL\r\n  c=23.0  x= 0.50  expected_y=0.5  y=0.3005 ... FAIL\r\n  c=23.0  x= 0.60  expected_y=0.6  y=0.3019 ... FAIL\r\n  c=23.0  x= 0.70  expected_y=0.7  y=0.3032 ... FAIL\r\n  c=23.0  x= 0.80  expected_y=0.8  y=0.3781 ... FAIL\r\n  c=23.0  x= 0.90  expected_y=0.9  y=0.3802 ... FAIL\r\n  c=23.0  x= 1.00  expected_y=1.0  y=0.3824 ... FAIL\r\n  c=23.0  x= 1.10  expected_y=1.0  y=0.4191 ... FAIL\r\n  c=23.0  x= 1.20  expected_y=1.0  y=0.4207 ... FAIL\r\n  c=23.0  x= 1.30  expected_y=1.0  y=0.4223 ... FAIL\r\n  c=23.0  x= 1.40  expected_y=1.0  y=0.4059 ... FAIL\r\n  c=23.0  x= 1.50  expected_y=1.0  y=0.4077 ... FAIL\r\n\r\nsolver=ipopt pw_repn=CC\r\n  c=23.0  x=-0.50  expected_y=0.0  y=0.4451 ... FAIL\r\n  c=23.0  x=-0.40  expected_y=0.0  y=0.4518 ... FAIL\r\n  c=23.0  x=-0.30  expected_y=0.0  y=0.4585 ... FAIL\r\n  c=23.0  x=-0.20  expected_y=0.0  y=0.4652 ... FAIL\r\n  c=23.0  x=-0.10  expected_y=0.0  y=0.4720 ... FAIL\r\n  c=23.0  x= 0.00  expected_y=0.0  y=0.4788 ... FAIL\r\n  c=23.0  x= 0.10  expected_y=0.1  y=0.4856 ... FAIL\r\n  c=23.0  x= 0.20  expected_y=0.2  y=0.4925 ... FAIL\r\n  c=23.0  x= 0.30  expected_y=0.3  y=0.4993 ... FAIL\r\n  c=23.0  x= 0.40  expected_y=0.4  y=0.5062 ... FAIL\r\n  c=23.0  x= 0.50  expected_y=0.5  y=0.5131 ... FAIL\r\n  c=23.0  x= 0.60  expected_y=0.6  y=0.5200 ... FAIL\r\n  c=23.0  x= 0.70  expected_y=0.7  y=0.5269 ... FAIL\r\n  c=23.0  x= 0.80  expected_y=0.8  y=0.5337 ... FAIL\r\n  c=23.0  x= 0.90  expected_y=0.9  y=0.5406 ... FAIL\r\n  c=23.0  x= 1.00  expected_y=1.0  y=0.5474 ... FAIL\r\n  c=23.0  x= 1.10  expected_y=1.0  y=0.5543 ... FAIL\r\n  c=23.0  x= 1.20  expected_y=1.0  y=0.5611 ... FAIL\r\n  c=23.0  x= 1.30  expected_y=1.0  y=0.5679 ... FAIL\r\n  c=23.0  x= 1.40  expected_y=1.0  y=0.5747 ... FAIL\r\n  c=23.0  x= 1.50  expected_y=1.0  y=0.5815 ... FAIL\r\n\r\nsolver=ipopt pw_repn=DCC\r\n  c=23.0  x=-0.50  expected_y=0.0  y=0.4656 ... FAIL\r\n  c=23.0  x=-0.40  expected_y=0.0  y=0.4697 ... FAIL\r\n  c=23.0  x=-0.30  expected_y=0.0  y=0.4738 ... FAIL\r\n  c=23.0  x=-0.20  expected_y=0.0  y=0.4780 ... FAIL\r\n  c=23.0  x=-0.10  expected_y=0.0  y=0.4821 ... FAIL\r\n  c=23.0  x= 0.00  expected_y=0.0  y=0.4862 ... FAIL\r\n  c=23.0  x= 0.10  expected_y=0.1  y=0.4903 ... FAIL\r\n  c=23.0  x= 0.20  expected_y=0.2  y=0.4945 ... FAIL\r\n  c=23.0  x= 0.30  expected_y=0.3  y=0.4986 ... FAIL\r\n  c=23.0  x= 0.40  expected_y=0.4  y=0.5028 ... FAIL\r\n  c=23.0  x= 0.50  expected_y=0.5  y=0.5069 ... FAIL\r\n  c=23.0  x= 0.60  expected_y=0.6  y=0.5111 ... FAIL\r\n  c=23.0  x= 0.70  expected_y=0.7  y=0.5153 ... FAIL\r\n  c=23.0  x= 0.80  expected_y=0.8  y=0.5195 ... FAIL\r\n  c=23.0  x= 0.90  expected_y=0.9  y=0.5236 ... FAIL\r\n  c=23.0  x= 1.00  expected_y=1.0  y=0.5279 ... FAIL\r\n  c=23.0  x= 1.10  expected_y=1.0  y=0.5321 ... FAIL\r\n  c=23.0  x= 1.20  expected_y=1.0  y=0.5364 ... FAIL\r\n  c=23.0  x= 1.30  expected_y=1.0  y=0.5407 ... FAIL\r\n  c=23.0  x= 1.40  expected_y=1.0  y=0.5450 ... FAIL\r\n  c=23.0  x= 1.50  expected_y=1.0  y=0.5494 ... FAIL\r\n\r\nsolver=ipopt pw_repn=INC\r\n  c=23.0  x=-0.50  expected_y=0.0  y=0.4146 ... FAIL\r\n  c=23.0  x=-0.40  expected_y=0.0  y=0.4149 ... FAIL\r\n  c=23.0  x=-0.30  expected_y=0.0  y=0.4152 ... FAIL\r\n  c=23.0  x=-0.20  expected_y=0.0  y=0.4156 ... FAIL\r\n  c=23.0  x=-0.10  expected_y=0.0  y=0.4160 ... FAIL\r\n  c=23.0  x= 0.00  expected_y=0.0  y=0.4164 ... FAIL\r\n  c=23.0  x= 0.10  expected_y=0.1  y=0.4169 ... FAIL\r\n  c=23.0  x= 0.20  expected_y=0.2  y=0.4174 ... FAIL\r\n  c=23.0  x= 0.30  expected_y=0.3  y=0.4179 ... FAIL\r\n  c=23.0  x= 0.40  expected_y=0.4  y=0.4184 ... FAIL\r\n  c=23.0  x= 0.50  expected_y=0.5  y=0.4189 ... FAIL\r\n  c=23.0  x= 0.60  expected_y=0.6  y=0.4871 ... FAIL\r\n  c=23.0  x= 0.70  expected_y=0.7  y=0.4899 ... FAIL\r\n  c=23.0  x= 0.80  expected_y=0.8  y=0.4928 ... FAIL\r\n  c=23.0  x= 0.90  expected_y=0.9  y=0.4957 ... FAIL\r\n  c=23.0  x= 1.00  expected_y=1.0  y=0.4987 ... FAIL\r\n  c=23.0  x= 1.10  expected_y=1.0  y=0.5017 ... FAIL\r\n  c=23.0  x= 1.20  expected_y=1.0  y=0.5048 ... FAIL\r\n  c=23.0  x= 1.30  expected_y=1.0  y=0.5079 ... FAIL\r\n  c=23.0  x= 1.40  expected_y=1.0  y=0.5111 ... FAIL\r\n  c=23.0  x= 1.50  expected_y=1.0  y=0.5144 ... FAIL\r\n\r\nsolver=ipopt pw_repn=MC\r\n  c=23.0  x=-0.50  expected_y=0.0  y=0.4023 ... FAIL\r\n  c=23.0  x=-0.40  expected_y=0.0  y=0.3974 ... FAIL\r\n  c=23.0  x=-0.30  expected_y=0.0  y=0.4033 ... FAIL\r\n  c=23.0  x=-0.20  expected_y=0.0  y=0.4186 ... FAIL\r\n  c=23.0  x=-0.10  expected_y=0.0  y=0.4427 ... FAIL\r\n  c=23.0  x= 0.00  expected_y=0.0  y=0.4495 ... FAIL\r\n  c=23.0  x= 0.10  expected_y=0.1  y=0.4691 ... FAIL\r\n  c=23.0  x= 0.20  expected_y=0.2  y=0.4842 ... FAIL\r\n  c=23.0  x= 0.30  expected_y=0.3  y=0.4744 ... FAIL\r\n  c=23.0  x= 0.40  expected_y=0.4  y=0.4938 ... FAIL\r\n  c=23.0  x= 0.50  expected_y=0.5  y=0.5179 ... FAIL\r\n  c=23.0  x= 0.60  expected_y=0.6  y=0.5341 ... FAIL\r\n  c=23.0  x= 0.70  expected_y=0.7  y=0.5493 ... FAIL\r\n  c=23.0  x= 0.80  expected_y=0.8  y=0.5357 ... FAIL\r\n  c=23.0  x= 0.90  expected_y=0.9  y=0.5515 ... FAIL\r\n  c=23.0  x= 1.00  expected_y=1.0  y=0.5716 ... FAIL\r\n  c=23.0  x= 1.10  expected_y=1.0  y=0.5642 ... FAIL\r\n  c=23.0  x= 1.20  expected_y=1.0  y=0.5960 ... FAIL\r\n  c=23.0  x= 1.30  expected_y=1.0  y=0.6109 ... FAIL\r\n  c=23.0  x= 1.40  expected_y=1.0  y=0.6158 ... FAIL\r\n  c=23.0  x= 1.50  expected_y=1.0  y=0.6095 ... FAIL\r\n\r\nsolver=ipopt pw_repn=SOS2\r\n  c=23.0  x=-0.50  expected_y=0.0  y=0.4614 ... FAIL\r\n  c=23.0  x=-0.40  expected_y=0.0  y=0.4666 ... FAIL\r\n  c=23.0  x=-0.30  expected_y=0.0  y=0.4713 ... FAIL\r\n  c=23.0  x=-0.20  expected_y=0.0  y=0.4765 ... FAIL\r\n  c=23.0  x=-0.10  expected_y=0.0  y=0.4817 ... FAIL\r\n  c=23.0  x= 0.00  expected_y=0.0  y=0.4869 ... FAIL\r\n  c=23.0  x= 0.10  expected_y=0.1  y=0.4922 ... FAIL\r\n  c=23.0  x= 0.20  expected_y=0.2  y=0.4974 ... FAIL\r\n  c=23.0  x= 0.30  expected_y=0.3  y=0.5026 ... FAIL\r\n  c=23.0  x= 0.40  expected_y=0.4  y=0.5079 ... FAIL\r\n  c=23.0  x= 0.50  expected_y=0.5  y=0.5131 ... FAIL\r\n  c=23.0  x= 0.60  expected_y=0.6  y=0.5183 ... FAIL\r\n  c=23.0  x= 0.70  expected_y=0.7  y=0.5236 ... FAIL\r\n  c=23.0  x= 0.80  expected_y=0.8  y=0.5288 ... FAIL\r\n  c=23.0  x= 0.90  expected_y=0.9  y=0.5341 ... FAIL\r\n  c=23.0  x= 1.00  expected_y=1.0  y=0.5391 ... FAIL\r\n  c=23.0  x= 1.10  expected_y=1.0  y=0.5443 ... FAIL\r\n  c=23.0  x= 1.20  expected_y=1.0  y=0.5495 ... FAIL\r\n  c=23.0  x= 1.30  expected_y=1.0  y=0.5547 ... FAIL\r\n  c=23.0  x= 1.40  expected_y=1.0  y=0.5599 ... FAIL\r\n  c=23.0  x= 1.50  expected_y=1.0  y=0.5651 ... FAIL\r\n\r\nSummary:\r\n  solver_name=cbc    pw_repn=BIGM_BIN  ... FAIL\r\n  solver_name=cbc    pw_repn=CC        ... OK\r\n  solver_name=cbc    pw_repn=DCC       ... OK\r\n  solver_name=cbc    pw_repn=INC       ... OK\r\n  solver_name=cbc    pw_repn=MC        ... OK\r\n  solver_name=glpk   pw_repn=BIGM_BIN  ... FAIL\r\n  solver_name=glpk   pw_repn=CC        ... OK\r\n  solver_name=glpk   pw_repn=DCC       ... OK\r\n  solver_name=glpk   pw_repn=INC       ... OK\r\n  solver_name=glpk   pw_repn=MC        ... OK\r\n  solver_name=ipopt  pw_repn=BIGM_BIN  ... FAIL\r\n  solver_name=ipopt  pw_repn=BIGM_SOS1 ... FAIL\r\n  solver_name=ipopt  pw_repn=CC        ... FAIL\r\n  solver_name=ipopt  pw_repn=DCC       ... FAIL\r\n  solver_name=ipopt  pw_repn=INC       ... FAIL\r\n  solver_name=ipopt  pw_repn=MC        ... FAIL\r\n  solver_name=ipopt  pw_repn=SOS2      ... FAIL\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/216/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/206", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/206/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/206/events", "html_url": "https://github.com/Pyomo/pyomo/issues/206", "id": 252279325, "node_id": "MDU6SXNzdWUyNTIyNzkzMjU=", "number": 206, "title": "Setting 'fixed_variable_treatment' IPOPT option not working with SolverFactory", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-23T13:16:35Z", "updated_at": "2018-03-01T21:32:45Z", "closed_at": "2018-03-01T21:32:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is from StackOverflow: https://stackoverflow.com/questions/45807745/setting-ipopt-options-through-pyomo/45840729#45840729\r\n\r\nI reproduced the issue running IPOPT 3.12.8 and a branch up to date with master.\r\n\r\nThis does not work:\r\n```\r\nfrom pyomo.environ import *\r\nm = ConcreteModel()\r\nm.x = Var()\r\nm.c = Constraint(expr=m.x >= 2)\r\nm.o = Objective(expr=m.x)\r\ns = SolverFactory('ipopt')\r\ns.options['fixed_variable_treatment'] = 'make_parameter'\r\ns.solve(m, tee=True)\r\n```\r\nError is:\r\n```\r\nERROR: \"[base]\\site-packages\\pyomo\\opt\\base\\solvers.py\", 599, solve\r\n        Solver (asl) returned non-zero return code (1)\r\nERROR: \"[base]\\site-packages\\pyomo\\opt\\base\\solvers.py\", 604, solve\r\n        Solver log:\r\n        Unknown keyword \"fixed_variable_treatment\"\r\n```\r\n\r\nIt does not appear to be directly due to IPOPT, because using the `ipopt.opt` file strategy from https://www.coin-or.org/Ipopt/documentation/node35.html works.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/206/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/191", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/191/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/191/events", "html_url": "https://github.com/Pyomo/pyomo/issues/191", "id": 244724326, "node_id": "MDU6SXNzdWUyNDQ3MjQzMjY=", "number": 191, "title": "Bug when indexing components by both a Set and an indexed Set", "user": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-21T16:45:29Z", "updated_at": "2020-04-15T20:29:55Z", "closed_at": "2020-04-15T20:29:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Consider the following model:\r\n\r\n    m = ConcreteModel()\r\n    m.s = Set(['s1','s2'], initialize=[1,2,3])\r\n    m.s2 = Set(initialize=['a','b','c'])\r\n\r\nThe following works\r\n\r\n    m.p = Param(m.s['s1'], initialize=10)\r\n    temp = m.s['s1'] * m.s2\r\n    m.v = Var(temp, initialize=5)\r\n\r\nBut trying to get the cross product directly in the component declaration fails with different unhelpful error messages depending on the ordering of the sets:\r\n\r\n    >>> m.v_1 = Var(m.s['s1'], m.s2, initialize=10)\r\n    Traceback (most recent call last):\r\n      File \"<stdin>\", line 1, in <module>\r\n      File \"/home/blnicho/Research/pyomo/pyomo/core/base/var.py\", line 471, in __init__\r\n        IndexedComponent.__init__(self, *args, **kwd)\r\n      File \"/home/blnicho/Research/pyomo/pyomo/core/base/indexed_component.py\", line 308, in __init__\r\n        self._index = tmp[0].cross(*tmp[1:])\r\n    AttributeError: '_IndexedSetData' object has no attribute 'cross'\r\n    >>> m.v_1 = Var(m.s2, m.s['s1'], initialize=10)\r\n    Traceback (most recent call last):\r\n      File \"<stdin>\", line 1, in <module>\r\n      File \"/home/blnicho/Research/pyomo/pyomo/core/base/block.py\", line 542, in __setattr__\r\n        self.add_component(name, val)\r\n      File \"/home/blnicho/Research/pyomo/pyomo/core/base/block.py\", line 870, in add_component\r\n        self._add_temporary_set(val)\r\n      File \"/home/blnicho/Research/pyomo/pyomo/core/base/block.py\", line 686, in _add_temporary_set\r\n        if tset._name == \"_unknown_\":\r\n    AttributeError: '_IndexedSetData' object has no attribute '_name'\r\n\r\nThis bug is possibly related to #43 \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/191/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/186", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/186/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/186/events", "html_url": "https://github.com/Pyomo/pyomo/issues/186", "id": 242869280, "node_id": "MDU6SXNzdWUyNDI4NjkyODA=", "number": 186, "title": "Numpy triggers uneccesary cloning", "user": {"login": "ghackebeil", "id": 2308454, "node_id": "MDQ6VXNlcjIzMDg0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2308454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghackebeil", "html_url": "https://github.com/ghackebeil", "followers_url": "https://api.github.com/users/ghackebeil/followers", "following_url": "https://api.github.com/users/ghackebeil/following{/other_user}", "gists_url": "https://api.github.com/users/ghackebeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghackebeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghackebeil/subscriptions", "organizations_url": "https://api.github.com/users/ghackebeil/orgs", "repos_url": "https://api.github.com/users/ghackebeil/repos", "events_url": "https://api.github.com/users/ghackebeil/events{/privacy}", "received_events_url": "https://api.github.com/users/ghackebeil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-14T00:56:04Z", "updated_at": "2018-04-27T06:47:16Z", "closed_at": "2018-04-27T06:47:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The output from the following should be all zeros, but using `numpy.cos(2)` causes the last expression to clone the `(m.x * m.y)` subexpression unnecessarily.\r\n\r\n```python\r\nfrom pyomo.core.base.expr_coopr3 import generate_expression\r\nimport numpy\r\nimport pyomo.environ as pe\r\n\r\nm = pe.ConcreteModel()\r\nm.x = pe.Var()\r\nm.y = pe.Var()\r\n\r\nprint(generate_expression.clone_counter)\r\n(m.x * m.y) * 2\r\nprint(generate_expression.clone_counter)\r\n(m.x * m.y) * numpy.cos(2)\r\nprint(generate_expression.clone_counter)\r\n2 * (m.x * m.y)\r\nprint(generate_expression.clone_counter)\r\nnumpy.cos(2) * (m.x * m.y)\r\nprint(generate_expression.clone_counter)", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/186/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/184", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/184/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/184/events", "html_url": "https://github.com/Pyomo/pyomo/issues/184", "id": 241898536, "node_id": "MDU6SXNzdWUyNDE4OTg1MzY=", "number": 184, "title": "Exception-catching in pyomo.core.base.misc.apply_indexed_rule() can mask TypeErrors in user code", "user": {"login": "mfripp", "id": 7928086, "node_id": "MDQ6VXNlcjc5MjgwODY=", "avatar_url": "https://avatars.githubusercontent.com/u/7928086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfripp", "html_url": "https://github.com/mfripp", "followers_url": "https://api.github.com/users/mfripp/followers", "following_url": "https://api.github.com/users/mfripp/following{/other_user}", "gists_url": "https://api.github.com/users/mfripp/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfripp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfripp/subscriptions", "organizations_url": "https://api.github.com/users/mfripp/orgs", "repos_url": "https://api.github.com/users/mfripp/repos", "events_url": "https://api.github.com/users/mfripp/events{/privacy}", "received_events_url": "https://api.github.com/users/mfripp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-11T01:32:14Z", "updated_at": "2023-02-17T00:30:48Z", "closed_at": "2023-02-17T00:30:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `pyomo.core.base.misc.apply_indexed_rule()` function includes some code which is wrapped in `try/catch` clauses to catch `TypeError` exceptions. If my own rule code accidentally generates a `TypeError`, this code can potentially mask it. This function includes fallback code that will retry the rule without the wrappers, to re-generate the exception. However, in some of my rules, the first call has side effects which short-circuit execution during the second call, so that the `TypeError` in my code is silently masked. This made it very hard to debug my code. \r\n\r\nI think the best solution would be to streamline the `apply_indexed_rule()` so that it doesn't wrap my rule in a `try/catch` clause. However, I don't know which code is _supposed_ to be wrapped by the `TypeError` catching code, so I can't propose a specific fix.\r\n\r\nThis is the case which causes problems for me: I often want to initialize indexed parameters by aggregating data from some other part of the model. It is possible to do this piecemeal from the initialization rule. However it is often more efficient to create the aggregated data during a single pass through the underlying data, then cache those results and extract aggregated data as needed to initialize the aggregate parameter. I can do this in a standard initialization rule as follows (1) check whether a cache has been created, (2) create and fill the cache if it hasn't been created, (3) pop the requested result from the cache. The problem is this: If step (2) generates a `TypeError`, the `apply_indexed_rule()` function will catch it, then call my function again. However on the second pass, the check in step (1) will succeed, step (2) will be skipped, and I'll never get an error message connected to my bad code.\r\n\r\nHere's an example of code that has this problem.\r\n\r\n    from pyomo.environ import *\r\n\r\n    m = AbstractModel()\r\n\r\n    # \"big\" set and matching parameter\r\n    m.S12 = Set(initialize=[(10, 1), (10, 2), (20, 1), (20, 3), (20, 5)])\r\n    m.p12 = Param(m.S12, initialize=lambda m, s1, s2: s1 + s2)\r\n\r\n    # set and parameter aggregated by first component of m.S12\r\n    # (i.e., sum of all values in m.p12 with the same s1 index)\r\n    m.S1 = Set(rule=lambda m: set(s1 for (s1, s2) in m.S12))\r\n\r\n    # set m.p1 equal to the sum of all entries in p12 with matching s1 index\r\n    def p1_rule_inefficient(m, s):\r\n        # this scans all values in p12 for each value of p1, \r\n        # which is slow for large models\r\n        return sum(m.p12[s1, s2] for (s1, s2) in m.S12 if s1==s)\r\n\r\n    def p1_rule_efficient(m, s):\r\n        # this computes the same values as p1_rule_inefficient but only requires one pass\r\n        if not hasattr(m, \"cache_dict\"):\r\n            # create a dictionary to cache aggregated values\r\n            m.cache_dict = dict()\r\n            # next line will raise TypeError which will incorrectly be ignored\r\n            val = 'text' + 3\r\n            # remaining lines will never run, due to side effects during first call\r\n            for (s1, s2) in m.S12:\r\n                m.cache_dict.setdefault(s1, 0)\r\n                m.cache_dict[s1] += m.p12[s1, s2]\r\n\r\n        if s in m.cache_dict:\r\n            # return a cached value\r\n            print \"setting p[{}]={}\".format(s, m.cache_dict[s])\r\n            return m.cache_dict[s]\r\n        else:\r\n            # this should never happen\r\n            print \"Key {} is missing from m.cache_dict.\".format(s)\r\n            return None\r\n\r\n    m.p = Param(m.S1, rule=p1_rule_efficient)\r\n\r\n    i = m.create_instance()\r\n    # cache_dict is created but all keys are missing and no error is reported\r\n\r\nThis code should report a `TypeError` on the `val = ...` line, but instead it falls through to the end, where it reports that the cache is empty. This is fairly tough to debug, since the offending line is never mentioned in a traceback. (I have to do a bisection search through my code, inserting trace points until I find the first line that is never executed.)\r\n\r\nAs I mentioned, I think that tidying up the `try/catch` code in `pyomo.core.base.misc.apply_indexed_rule()` is the best way to avoid this problem. Barring that, users should be warned that their rules may be called twice if they contain an error, so the rules should not have any side effects if they fail due to an error (e.g., the `cache_dict` should be kept as a local variable until it is completely created, then tacked onto the model object).", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/184/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/172", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/172/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/172/events", "html_url": "https://github.com/Pyomo/pyomo/issues/172", "id": 237518588, "node_id": "MDU6SXNzdWUyMzc1MTg1ODg=", "number": 172, "title": "core.base.symbolic.differentiate() does not support indexed Expressions", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-21T12:35:29Z", "updated_at": "2018-10-19T15:22:54Z", "closed_at": "2018-10-19T15:22:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It looks like the current differentiate() implementation does not support indexed Expression objects. Turning y into a variable and adding a constraint works, but may not be desirable in some cases.\r\n\r\nSimple example:\r\n```\r\nm = ConcreteModel()\r\nm.s = Set(initialize=['A', 'B'])\r\nm.x = Var(m.s, domain=NonNegativeReals)\r\n\r\ndef y_rule(m, s):\r\n    return m.x[s] * 2\r\nm.y = Expression(m.s, rule=y_rule)\r\n\r\n@m.Constraint(m.s)\r\ndef c1(m, s):\r\n    return 1 - m.y[s] ** 2 <= 0\r\n\r\njacs = differentiate(m.c1['A'].body, wrt_list=[m.x['A'], m.x['B']])\r\n```\r\n\r\nStack Trace:\r\n```\r\n  File \"test.py\", line 22, in main\r\n    jacs = differentiate(m.c1['A'].body, wrt_list=[m.x['A'], m.x['B']])\r\n  File \"/home/qichen/.solvers/pyomo/src/pyomo/pyomo/core/base/symbolic.py\", line 122, in differentiate\r\n    tmp_expr, locals=dict((str(x), x) for x in sympy_vars) )\r\n  File \"/home/qichen/.solvers/pyomo/local/lib/python2.7/site-packages/sympy/core/sympify.py\", line 322, in sympify\r\n    expr = parse_expr(a, local_dict=locals, transformations=transformations, evaluate=evaluate)\r\n  File \"/home/qichen/.solvers/pyomo/local/lib/python2.7/site-packages/sympy/parsing/sympy_parser.py\", line 894, in parse_expr\r\n    return eval_expr(code, local_dict, global_dict)\r\n  File \"/home/qichen/.solvers/pyomo/local/lib/python2.7/site-packages/sympy/parsing/sympy_parser.py\", line 807, in eval_expr\r\n    code, global_dict, local_dict)  # take local objects in preference\r\n  File \"<string>\", line 1, in <module>\r\nTypeError: 'Symbol' object has no attribute '__getitem__'\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/172/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/165", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/165/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/165/events", "html_url": "https://github.com/Pyomo/pyomo/issues/165", "id": 235941484, "node_id": "MDU6SXNzdWUyMzU5NDE0ODQ=", "number": 165, "title": "Clone breaks direct variable domain comparison", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-14T16:42:55Z", "updated_at": "2019-09-24T18:42:42Z", "closed_at": "2019-09-24T18:42:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Trying `v.domain is Binary` or `v.domain == Binary` gives the wrong answer with a cloned model. `v.is_binary()` gives the correct result, but users may not realize that they need to do so.\r\n\r\n**Input:**\r\n```\r\nfrom pyomo.environ import (ConcreteModel, Var, Binary)\r\nfrom pprint import pprint\r\n\r\nm = ConcreteModel()\r\nm.x = Var()\r\nm.y = Var(domain=Binary)\r\n\r\nm2 = m.clone()\r\nbinaries = [v for v in m2.component_data_objects(\r\n            ctype=Var, descend_into=True)\r\n            if v.domain is Binary and not v.fixed]\r\npprint(binaries)\r\nany_var = [v for v in m2.component_data_objects(ctype=Var, descend_into=True)]\r\nfor v in any_var:\r\n    print(str(v.domain), v.domain is Binary, v.domain == Binary)\r\npprint(any_var)\r\n```\r\n**Output:**\r\n```\r\n[]\r\n('Reals', False, False)\r\n('Binary', False, False)\r\n[<pyomo.core.base.var.SimpleVar object at 0x7f5afec68e60>,\r\n <pyomo.core.base.var.SimpleVar object at 0x7f5afec68ed8>]\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/165/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/161", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/161/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/161/events", "html_url": "https://github.com/Pyomo/pyomo/issues/161", "id": 234887430, "node_id": "MDU6SXNzdWUyMzQ4ODc0MzA=", "number": 161, "title": "Resolve issue with solver tests", "user": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ghackebeil", "id": 2308454, "node_id": "MDQ6VXNlcjIzMDg0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2308454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghackebeil", "html_url": "https://github.com/ghackebeil", "followers_url": "https://api.github.com/users/ghackebeil/followers", "following_url": "https://api.github.com/users/ghackebeil/following{/other_user}", "gists_url": "https://api.github.com/users/ghackebeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghackebeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghackebeil/subscriptions", "organizations_url": "https://api.github.com/users/ghackebeil/orgs", "repos_url": "https://api.github.com/users/ghackebeil/repos", "events_url": "https://api.github.com/users/ghackebeil/events{/privacy}", "received_events_url": "https://api.github.com/users/ghackebeil/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ghackebeil", "id": 2308454, "node_id": "MDQ6VXNlcjIzMDg0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2308454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghackebeil", "html_url": "https://github.com/ghackebeil", "followers_url": "https://api.github.com/users/ghackebeil/followers", "following_url": "https://api.github.com/users/ghackebeil/following{/other_user}", "gists_url": "https://api.github.com/users/ghackebeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghackebeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghackebeil/subscriptions", "organizations_url": "https://api.github.com/users/ghackebeil/orgs", "repos_url": "https://api.github.com/users/ghackebeil/repos", "events_url": "https://api.github.com/users/ghackebeil/events{/privacy}", "received_events_url": "https://api.github.com/users/ghackebeil/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-06-09T17:09:12Z", "updated_at": "2018-02-06T22:57:36Z", "closed_at": "2018-02-06T22:57:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "With the conversion to kernel, some solver tests fail:\r\n`pyomo test-solvers glpk`\r\n\r\nSpecifically, the `pyomo/solvers/tests/testcases.py` file has an error due to the use of kernel classes.\r\n\r\nSee line 309:\r\n`model_class.model.solutions.load_from(results,                      default_variable_value=opt.default_variable_value())`\r\n\r\nThis indicates a change in model management that was unexpected.  Is there a new plan for solver management???", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/161/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/158", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/158/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/158/events", "html_url": "https://github.com/Pyomo/pyomo/issues/158", "id": 234814129, "node_id": "MDU6SXNzdWUyMzQ4MTQxMjk=", "number": 158, "title": "BARON does not support log10", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-09T12:38:21Z", "updated_at": "2018-04-27T06:41:39Z", "closed_at": "2018-04-27T06:41:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See #157 for test with simple example:\r\n```\r\nfrom __future__ import division\r\n\r\nfrom pyomo.environ import (ConcreteModel, Constraint, Objective, Var, log10,\r\n                           minimize)\r\nfrom pyomo.opt import SolverFactory\r\n\r\nm = ConcreteModel()\r\nm.x = Var()\r\nm.c = Constraint(expr=log10(m.x) >= 2)\r\nm.obj = Objective(expr=m.x, sense=minimize)\r\n\r\nSolverFactory('baron').solve(m, tee=True)\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/158/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/148", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/148/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/148/events", "html_url": "https://github.com/Pyomo/pyomo/issues/148", "id": 231667953, "node_id": "MDU6SXNzdWUyMzE2Njc5NTM=", "number": 148, "title": "Checking 'within' should only require __contains__", "user": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-26T15:59:52Z", "updated_at": "2019-09-24T18:42:42Z", "closed_at": "2019-09-24T18:42:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Documenting this issue for @jsiirola \r\n\r\n    from pyomo.environ import *\r\n    legal = set(['a','b','c'])\r\n    m = ConcreteModel()\r\n    m.s = Set(initialize=['a','b'], within=legal)\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/blnicho/Research/pyomo/pyomo/core/base/sets.py\", line 1212, in __init__\r\n    SimpleSetBase.__init__(self, *args, **kwds)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/core/base/sets.py\", line 717, in __init__\r\n    Set.__init__(self, *args, **kwds)\r\n  File \"/home/blnicho/Research/pyomo/pyomo/core/base/sets.py\", line 632, in __init__\r\n    tmp_dimen = self.domain.dimen\r\nAttributeError: 'set' object has no attribute 'dimen'\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/148/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/144", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/144/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/144/events", "html_url": "https://github.com/Pyomo/pyomo/issues/144", "id": 227896435, "node_id": "MDU6SXNzdWUyMjc4OTY0MzU=", "number": 144, "title": "Ipopt error: Unknown keyword \"hessian_constant\"", "user": {"login": "sartorg", "id": 11919820, "node_id": "MDQ6VXNlcjExOTE5ODIw", "avatar_url": "https://avatars.githubusercontent.com/u/11919820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sartorg", "html_url": "https://github.com/sartorg", "followers_url": "https://api.github.com/users/sartorg/followers", "following_url": "https://api.github.com/users/sartorg/following{/other_user}", "gists_url": "https://api.github.com/users/sartorg/gists{/gist_id}", "starred_url": "https://api.github.com/users/sartorg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sartorg/subscriptions", "organizations_url": "https://api.github.com/users/sartorg/orgs", "repos_url": "https://api.github.com/users/sartorg/repos", "events_url": "https://api.github.com/users/sartorg/events{/privacy}", "received_events_url": "https://api.github.com/users/sartorg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-11T07:04:06Z", "updated_at": "2017-05-12T02:48:46Z", "closed_at": "2017-05-11T21:46:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using Ipopt 13.2.6 with Pyomo 5.1.1. and Python 2.7.10 gives me the following error when trying to add the option `hessian_constant = yes` (see list of options [here](https://www.coin-or.org/Ipopt/documentation/node44.html)):\r\n\r\n```\r\nlinear_solver=ma27\r\nUnknown keyword \"hessian_constant\"\r\nmax_iter=1000\r\nmax_cpu_time=20\r\nhonor_original_bounds=no\r\nacceptable_tol=0.001\r\nlinear_solver=ma27\r\nUnknown keyword \"hessian_constant\"\r\nmax_iter=1000\r\nmax_cpu_time=20\r\nhonor_original_bounds=no\r\nacceptable_tol=0.001\r\nERROR: \"[base]/site-packages/pyomo/opt/base/solvers.py\", 599, solve\r\n\tSolver (asl) returned non-zero return code (1)\r\nERROR: \"[base]/site-packages/pyomo/opt/base/solvers.py\", 602, solve\r\n\tSee the solver log above for diagnostic information.\r\n```\r\n\r\nCouldn't find any reason why Pyomo should through this error.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/144/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/142", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/142/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/142/events", "html_url": "https://github.com/Pyomo/pyomo/issues/142", "id": 227130135, "node_id": "MDU6SXNzdWUyMjcxMzAxMzU=", "number": 142, "title": "Issues creating sets of nested tuples", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-08T18:18:19Z", "updated_at": "2019-09-24T18:42:42Z", "closed_at": "2019-09-24T18:42:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I believe I've found an issue when trying to create sets using nested tuples as set elements. In the code below I create a list of tuples containing tuples as elements:\r\n\r\nfrom pyomo.environ import *\r\nfrom pyomo.opt import SolverFactory\r\nimport sys\r\n\r\nmodel = ConcreteModel()\r\nCHOICES = [((1,2,3), 4,3), ((1,2,2), 4,3), ((1,3,3), 4,3)]\r\nprint(CHOICES)\r\nmodel.CHOICES = Set(initialize=CHOICES)\r\nprint(\"Model creation complete.\")\r\nmodel.write(filename='bug.lp', io_options={'symbolic_solver_labels':True})\r\nexit(0)\r\n\r\nWhen I try to run this code I get the following error:\r\n\r\nWARNING: converting to the 'pyomo solve' subcommand\r\n[    0.00] Setting up Pyomo environment\r\n[    0.00] Applying Pyomo preprocessing actions\r\n[((1, 2, 3), 4, 3), ((1, 2, 2), 4, 3), ((1, 3, 3), 4, 3)]\r\nERROR: Constructing component 'CHOICES' from data=None failed:\r\n        ValueError: The value=(1, 2, 3, 4, 3) does not have dimension=3, which is needed for set=CHOICES\r\n[    0.01] Pyomo Finished\r\nERROR: Unexpected exception while loading model:\r\n        The value=(1, 2, 3, 4, 3) does not have dimension=3, which is needed for set=CHOICES\r\n\r\nI didn't see anything in the documentation forbidding this, did I miss something?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/142/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/134", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/134/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/134/events", "html_url": "https://github.com/Pyomo/pyomo/issues/134", "id": 221148244, "node_id": "MDU6SXNzdWUyMjExNDgyNDQ=", "number": 134, "title": "Multiplying Virtual Sets causes the original Set to be modified", "user": {"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-12T04:24:29Z", "updated_at": "2019-08-15T18:20:42Z", "closed_at": "2019-08-15T18:20:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Multiplying a Virtual Set by itself produces the desired resulting set, but also causes the original Set to become crossed with itself.\r\n\r\nIn the following example, note that the Virtual Set `m.IJ` goes from 9 to 81 elements, and that the members are 4-tuples instead of 2-tuples (even though the Set `Dimen` flag is not updated).\r\n\r\n```python\r\n>>> from pyomo.environ import *\r\n>>> m = ConcreteModel()\r\n>>> m.I = Set(initialize=[1,2,3])\r\n>>> m.J = Set(initialize=[4,5,6])\r\n>>> m.IJ = m.I * m.J\r\n>>> m.IJ.display()\r\nIJ : Dim=0, Dimen=2, Size=9, Domain=None, Ordered=False, Bounds=None\r\n    Virtual\r\n>>> m.IJ2 = m.IJ * m.IJ\r\n>>> m.IJ.display()\r\nIJ : Dim=0, Dimen=2, Size=81, Domain=None, Ordered=False, Bounds=None\r\n    Virtual\r\n>>> m.IJ2.display()\r\nIJ2 : Dim=0, Dimen=4, Size=81, Domain=None, Ordered=False, Bounds=None\r\n    Virtual\r\n>>> [x for x in m.IJ]\r\n[(1, 4, 1, 4), (1, 4, 1, 5), (1, 4, 1, 6), (1, 4, 2, 4), (1, 4, 2, 5), (1, 4, 2, 6), (1, 4, 3, 4), (1, 4, 3, 5), (1, 4, 3, 6), (1, 5, 1, 4), (1, 5, 1, 5), (1, 5, 1, 6), (1, 5, 2, 4), (1, 5, 2, 5), (1, 5, 2, 6), (1, 5, 3, 4), (1, 5, 3, 5), (1, 5, 3, 6), (1, 6, 1, 4), (1, 6, 1, 5), (1, 6, 1, 6), (1, 6, 2, 4), (1, 6, 2, 5), (1, 6, 2, 6), (1, 6, 3, 4), (1, 6, 3, 5), (1, 6, 3, 6), (2, 4, 1, 4), (2, 4, 1, 5), (2, 4, 1, 6), (2, 4, 2, 4), (2, 4, 2, 5), (2, 4, 2, 6), (2, 4, 3, 4), (2, 4, 3, 5), (2, 4, 3, 6), (2, 5, 1, 4), (2, 5, 1, 5), (2, 5, 1, 6), (2, 5, 2, 4), (2, 5, 2, 5), (2, 5, 2, 6), (2, 5, 3, 4), (2, 5, 3, 5), (2, 5, 3, 6), (2, 6, 1, 4), (2, 6, 1, 5), (2, 6, 1, 6), (2, 6, 2, 4), (2, 6, 2, 5), (2, 6, 2, 6), (2, 6, 3, 4), (2, 6, 3, 5), (2, 6, 3, 6), (3, 4, 1, 4), (3, 4, 1, 5), (3, 4, 1, 6), (3, 4, 2, 4), (3, 4, 2, 5), (3, 4, 2, 6), (3, 4, 3, 4), (3, 4, 3, 5), (3, 4, 3, 6), (3, 5, 1, 4), (3, 5, 1, 5), (3, 5, 1, 6), (3, 5, 2, 4), (3, 5, 2, 5), (3, 5, 2, 6), (3, 5, 3, 4), (3, 5, 3, 5), (3, 5, 3, 6), (3, 6, 1, 4), (3, 6, 1, 5), (3, 6, 1, 6), (3, 6, 2, 4), (3, 6, 2, 5), (3, 6, 2, 6), (3, 6, 3, 4), (3, 6, 3, 5), (3, 6, 3, 6)]\r\n```\r\n\r\nThis bug was reported on the [pyomo-forum](https://groups.google.com/d/msg/pyomo-forum/RSBD6QNV8n4/ZqT2_CIWAwAJ)", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/134/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/128", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/128/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/128/events", "html_url": "https://github.com/Pyomo/pyomo/issues/128", "id": 216537851, "node_id": "MDU6SXNzdWUyMTY1Mzc4NTE=", "number": 128, "title": "DAE transformations on connectors", "user": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 544793349, "node_id": "MDU6TGFiZWw1NDQ3OTMzNDk=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/design%20discussions", "name": "design discussions", "color": "c2e0c6", "default": false, "description": null}, {"id": 835396803, "node_id": "MDU6TGFiZWw4MzUzOTY4MDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.dae", "name": "pyomo.dae", "color": "209fbc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-03-23T19:00:51Z", "updated_at": "2018-08-03T19:42:35Z", "closed_at": "2018-08-03T19:42:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Need to test the DAE transformations on ContinuousSet indexed connectors and make sure things work as expected. ", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/128/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/122", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/122/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/122/events", "html_url": "https://github.com/Pyomo/pyomo/issues/122", "id": 212611867, "node_id": "MDU6SXNzdWUyMTI2MTE4Njc=", "number": 122, "title": "Error getting NEOS results", "user": {"login": "bpierpont", "id": 5385796, "node_id": "MDQ6VXNlcjUzODU3OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/5385796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpierpont", "html_url": "https://github.com/bpierpont", "followers_url": "https://api.github.com/users/bpierpont/followers", "following_url": "https://api.github.com/users/bpierpont/following{/other_user}", "gists_url": "https://api.github.com/users/bpierpont/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpierpont/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpierpont/subscriptions", "organizations_url": "https://api.github.com/users/bpierpont/orgs", "repos_url": "https://api.github.com/users/bpierpont/repos", "events_url": "https://api.github.com/users/bpierpont/events{/privacy}", "received_events_url": "https://api.github.com/users/bpierpont/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-03-08T01:32:17Z", "updated_at": "2017-05-12T16:29:16Z", "closed_at": "2017-05-12T16:29:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "New to Pyomo, but in 5.1.1 on both Mac and Windows, I am unable to get a NEOS job to return results. I've tested with several examples and with SolverStudio models (which solve successfully with local CBC solver).\r\n\r\nUsing CBC on NEOS, I get the following error:\r\n\r\n> ---------- Begin Solver Output -----------\r\n> Condor submit: 'neos.submit'\r\n> Condor submit: 'watchdog.submit'\r\n> Job submitted to NEOS HTCondor pool.\r\n> [    8.99] Pyomo Finished\r\n> ERROR: Unexpected exception while running model:\r\n> \tlocal variable 'opt' referenced before assignment\r\n\r\nUsing CPLEX on NEOS, I get the following error:\r\n\r\n> ---------- Begin Solver Output -----------\r\n> Condor submit: 'neos.submit'\r\n> Condor submit: 'watchdog.submit'\r\n> Job submitted to NEOS HTCondor pool.\r\n> [   17.02] Pyomo Finished\r\n> ERROR: Unexpected exception while running model:\r\n> \tCannot load a SolverResults object with bad status: error\r\n\r\nI've seen others reference this bug as well (https://groups.google.com/forum/#!topic/pyomo-forum/CRzG4l-3E2A).", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/122/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/116", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/116/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/116/events", "html_url": "https://github.com/Pyomo/pyomo/issues/116", "id": 208974226, "node_id": "MDU6SXNzdWUyMDg5NzQyMjY=", "number": 116, "title": "DeveloperError when using a singleton set as a index for an IndexedConstraint", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-20T20:21:57Z", "updated_at": "2019-09-24T18:42:41Z", "closed_at": "2019-09-24T18:42:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See small example below:\r\n```\r\nqichen@QC-CMU-Tower:~$ pyothon\r\nPython 2.7.11+ (default, Apr 17 2016, 14:00:29) \r\n[GCC 5.3.1 20160413] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from pyomo.environ import *\r\n>>> m = ConcreteModel()\r\n>>> m.s = Set(initialize=['one'])\r\n>>> m.c = Constraint(m.s)\r\n>>> m.c[m.s].deactivate()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/qichen/.solvers/pyomo/src/pyomo/pyomo/core/base/indexed_component.py\", line 492, in __getitem__\r\n    return self._default(ndx)\r\n  File \"/home/qichen/.solvers/pyomo/src/pyomo/pyomo/core/base/indexed_component.py\", line 655, in _default\r\n    % (self.__class__.__name__,))\r\npyomo.util._config.DeveloperError: Internal Pyomo implementation error:\r\n\t'Derived component IndexedConstraint failed to define _default().'\r\n\tPlease report this to the Pyomo Developers.\r\n>>> \r\n```\r\nOn the other hand, nothing breaks when I try to do the same thing with IndexedVar\r\n```\r\n>>> from pyomo.environ import *\r\n>>> m = ConcreteModel()\r\n>>> m.s = Set(initialize=['one'])\r\n>>> m.x = Var(m.s, initialize=1)\r\n>>> m.x.display()\r\nx : Size=1, Index=s\r\n    Key : Lower : Value : Upper : Fixed : Stale : Domain\r\n    one :  None :     1 :  None : False : False :  Reals\r\n>>> m.x[m.s].display()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: '_GeneralVarData' object has no attribute 'display'\r\n>>> m.x[m.s].deactivate()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: '_GeneralVarData' object has no attribute 'deactivate'\r\n>>> \r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/116/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/107", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/107/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/107/events", "html_url": "https://github.com/Pyomo/pyomo/issues/107", "id": 202291104, "node_id": "MDU6SXNzdWUyMDIyOTExMDQ=", "number": 107, "title": "Expanded connector constraints do not identify as equalities", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-21T04:25:46Z", "updated_at": "2018-08-03T19:34:20Z", "closed_at": "2018-08-03T19:34:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Expected behavior: `equality` attribute to return `True`\r\nActual behavior: `equality` attribute returns `False`\r\nExample:\r\n```\r\n>>> from pyomo.environ import *\r\n>>> m = ConcreteModel()\r\n>>> m.x = Var()\r\n>>> m.y = Var()\r\n>>> m.c = Connector()\r\n>>> m.c.add(m.x, 'z')\r\n>>> m.cc = Connector()\r\n>>> m.cc.add(m.y, 'z')\r\n>>> m.con = Constraint(expr=m.c == m.cc)\r\n>>> from pyomo.core.base.connector import ConnectorExpander\r\n>>> xfrm = ConnectorExpander()\r\n>>> xfrm.apply(instance=m)\r\n<pyomo.core.base.PyomoModel.ConcreteModel object at 0x7fa57a96b370>\r\n>>> getattr(m, 'con.expanded').pprint()\r\ncon.expanded : Size=1, Index=con.expanded_index, Active=True\r\n    Key : Lower : Body  : Upper : Active\r\n      1 :   0.0 : x - y :   0.0 :   True\r\n>>> getattr(m, 'con.expanded')[1].equality\r\nFalse\r\n>>>\r\n```\r\n\r\nThis doesn't seem right.\r\n  ", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/107/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/103", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/103/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/103/events", "html_url": "https://github.com/Pyomo/pyomo/issues/103", "id": 201139777, "node_id": "MDU6SXNzdWUyMDExMzk3Nzc=", "number": 103, "title": "Problem with generate_expression() in Python3.6", "user": {"login": "ghackebeil", "id": 2308454, "node_id": "MDQ6VXNlcjIzMDg0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2308454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghackebeil", "html_url": "https://github.com/ghackebeil", "followers_url": "https://api.github.com/users/ghackebeil/followers", "following_url": "https://api.github.com/users/ghackebeil/following{/other_user}", "gists_url": "https://api.github.com/users/ghackebeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghackebeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghackebeil/subscriptions", "organizations_url": "https://api.github.com/users/ghackebeil/orgs", "repos_url": "https://api.github.com/users/ghackebeil/repos", "events_url": "https://api.github.com/users/ghackebeil/events{/privacy}", "received_events_url": "https://api.github.com/users/ghackebeil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-16T23:23:04Z", "updated_at": "2017-04-05T18:05:04Z", "closed_at": "2017-04-05T18:05:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "So far, I'm only seeing a problem when the `summation` function is used in an inequality expression. Example:\r\n\r\n```python\r\nfrom pyomo.environ import *\r\n\r\nmodel = ConcreteModel()\r\nmodel.x = Var([1,2])\r\nmodel.c = Constraint(expr= summation(model.x) >= 1)\r\n```\r\nThis produces the following error:\r\n\r\n```python\r\n  File \"~/pyomo/core/base/expr_coopr3.py\", line 1376, in _generate_relational_expression__clone_if_needed\r\n    % ( count, ))\r\nRuntimeError: Expression entered generate_relational_expression() with too few references (-1<0); this is indicative of a SERIOUS ERROR in the expression reuse detection scheme.\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/103/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/96", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/96/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/96/events", "html_url": "https://github.com/Pyomo/pyomo/issues/96", "id": 199401081, "node_id": "MDU6SXNzdWUxOTk0MDEwODE=", "number": 96, "title": "ConnectorExpander cannot be applied tier-wise in a model", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-08T03:51:18Z", "updated_at": "2018-08-03T19:11:04Z", "closed_at": "2018-08-03T19:11:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Expected behavior: `m.b1.link` is expanded by the first `apply` invocation and `m.link` is expanded by the second `apply` invocation.\r\nActual behavior: the second `apply` invocation tries to re-expand `m.b1.link` and raises a `RuntimeError`.\r\n\r\n```\r\nfrom pyomo.environ import *\r\nfrom pyomo.core.base.connector import ConnectorExpander\r\n\r\nm = ConcreteModel()\r\nm.b1 = Block()\r\nm.b1.x1 = Var()\r\nm.b1.p1 = Connector()\r\nm.b1.p1.add(m.b1.x1, 'X')\r\nm.b1.x2 = Var()\r\nm.b1.p2 = Connector()\r\nm.b1.p2.add(m.b1.x2, 'X')\r\nm.b1.link = Constraint(expr=m.b1.p1 == m.b1.p2)\r\n\r\nxfrm = ConnectorExpander()\r\nxfrm.apply(instance=m.b1)\r\n\r\nm.x3 = Var()\r\nm.p3 = Connector()\r\nm.p3.add(m.x3, 'X')\r\nm.link = Constraint(expr=m.b1.p1 == m.p3)\r\nxfrm.apply(instance=m)\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/96/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/96/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/93", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/93/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/93/events", "html_url": "https://github.com/Pyomo/pyomo/issues/93", "id": 198021703, "node_id": "MDU6SXNzdWUxOTgwMjE3MDM=", "number": 93, "title": "ExternalFunction and DAE Transformation", "user": {"login": "eslickj", "id": 16341333, "node_id": "MDQ6VXNlcjE2MzQxMzMz", "avatar_url": "https://avatars.githubusercontent.com/u/16341333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eslickj", "html_url": "https://github.com/eslickj", "followers_url": "https://api.github.com/users/eslickj/followers", "following_url": "https://api.github.com/users/eslickj/following{/other_user}", "gists_url": "https://api.github.com/users/eslickj/gists{/gist_id}", "starred_url": "https://api.github.com/users/eslickj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eslickj/subscriptions", "organizations_url": "https://api.github.com/users/eslickj/orgs", "repos_url": "https://api.github.com/users/eslickj/repos", "events_url": "https://api.github.com/users/eslickj/events{/privacy}", "received_events_url": "https://api.github.com/users/eslickj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 835396803, "node_id": "MDU6TGFiZWw4MzUzOTY4MDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.dae", "name": "pyomo.dae", "color": "209fbc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2016-12-29T15:11:27Z", "updated_at": "2018-06-04T17:03:38Z", "closed_at": "2018-06-04T17:03:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think there is a problem applying DAE transformations to Pyomo models with ExternalFunction objects.  I can come up with a simpler demonstration, but hopefully the trace below is good enough.\r\n\r\njeslick@pds04:~/git/eslickj/models/idaes_models/process/solvent/MEA_simple> python main.py \r\nTraceback (most recent call last):\r\n  File \"main.py\", line 96, in <module>\r\n    flowsheet = init(filename=args.load_json)\r\n  File \"main.py\", line 34, in init\r\n    flowsheet = MeaSheet(name='MEA_Model', solver=solver)\r\n  File \"/imports/users/jeslick/git/eslickj/models/idaes_models/process/solvent/MEA_simple/flowsheet.py\", line 51, in __init__\r\n    FlowsheetModel.__init__(self, *args, **kwargs)\r\n  File \"/imports/users/jeslick/git/eslickj/models/idaes_models/core/flowsheet_model.py\", line 29, in __init__\r\n    self.build()\r\n  File \"/imports/users/jeslick/git/eslickj/models/idaes_models/process/solvent/MEA_simple/flowsheet.py\", line 341, in build\r\n    doc=\"CO2 absorber\"))\r\n  File \"/imports/users/jeslick/git/eslickj/models/idaes_models/unit/solvent/MEA_simple/column.py\", line 123, in __init__\r\n    self.build()\r\n  File \"/imports/users/jeslick/git/eslickj/models/idaes_models/unit/solvent/MEA_simple/column.py\", line 164, in build\r\n    self._fd_transform()\r\n  File \"/imports/users/jeslick/git/eslickj/models/idaes_models/unit/solvent/MEA_simple/column.py\", line 347, in _fd_transform\r\n    blk, nfe=self.nfe, wrt=blk.z, scheme='BACKWARD')\r\n  File \"/imports/users/jeslick/anaconda2/lib/python2.7/site-packages/pyomo/core/base/plugin.py\", line 330, in apply_to\r\n    self._apply_to(model, **kwds)\r\n  File \"/imports/users/jeslick/anaconda2/lib/python2.7/site-packages/pyomo/dae/plugins/finitedifference.py\", line 170, in _apply_to\r\n    self._transformBlock(block,currentds)\r\n  File \"/imports/users/jeslick/anaconda2/lib/python2.7/site-packages/pyomo/dae/plugins/finitedifference.py\", line 199, in _transformBlock\r\n    update_contset_indexed_component(c)\r\n  File \"/imports/users/jeslick/anaconda2/lib/python2.7/site-packages/pyomo/dae/misc.py\", line 115, in update_contset_indexed_component\r\n    if comp.dim() == 1:\r\nAttributeError: 'AMPLExternalFunction' object has no attribute 'dim'\r\n ", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/93/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/93/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/92", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/92/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/92/events", "html_url": "https://github.com/Pyomo/pyomo/issues/92", "id": 198020768, "node_id": "MDU6SXNzdWUxOTgwMjA3Njg=", "number": 92, "title": "Duplicate ExternalFunctions Cause Problems", "user": {"login": "eslickj", "id": 16341333, "node_id": "MDQ6VXNlcjE2MzQxMzMz", "avatar_url": "https://avatars.githubusercontent.com/u/16341333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eslickj", "html_url": "https://github.com/eslickj", "followers_url": "https://api.github.com/users/eslickj/followers", "following_url": "https://api.github.com/users/eslickj/following{/other_user}", "gists_url": "https://api.github.com/users/eslickj/gists{/gist_id}", "starred_url": "https://api.github.com/users/eslickj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eslickj/subscriptions", "organizations_url": "https://api.github.com/users/eslickj/orgs", "repos_url": "https://api.github.com/users/eslickj/repos", "events_url": "https://api.github.com/users/eslickj/events{/privacy}", "received_events_url": "https://api.github.com/users/eslickj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-29T15:04:28Z", "updated_at": "2017-01-04T21:32:08Z", "closed_at": "2017-01-04T21:32:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think there is a problem in Pyomo if you include an external function with the same name more than once in a Pyomo model.  Ordinarily I don't think this would be a problem, but I'm working with a complicated model structure, pulling in independent pieces, and it is hard to ensure that I model only creates one ExternalFunction object for each reference to a particular external function.  The issue is even more complicated because the models have a hierarchical block structure and for initialization I want to solve some of the blocks independently.  If multiple blocks use the same external function, it is difficult to have a way to make sure the function gets induced without multiple ExternalFunction objects pointed at the same function.\r\n\r\nI may be misunderstanding what happens, but the only actual problem I can find is that multiple ExternalFunction objects pointed at the same function cause the function to be defined multiple times in the *.nl file, so the ASL will not read it and raise an error.\r\n\r\nIf I understand this right, I think the solution would just be to ensure that a function is defined only once in the *.nl file.  If two functions have the same name and come from the same file, that should be fine.  If two functions have the same name, but come from different files, maybe Pyomo could raise and exception with a clear error message.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/92/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/92/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/91", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/91/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/91/events", "html_url": "https://github.com/Pyomo/pyomo/issues/91", "id": 197474561, "node_id": "MDU6SXNzdWUxOTc0NzQ1NjE=", "number": 91, "title": "Deactivating one side of connector causes representation error", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-24T19:18:54Z", "updated_at": "2018-08-03T19:10:42Z", "closed_at": "2018-08-03T19:10:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code creates a variable x on each of two blocks. It then links the two x's together via a Connector. Afterwards, one block and the link are deactivated. However, the code results in a KeyError in the NL writer. This is a rather urgent issue since many use cases can be found for deactivating part of a linked system of blocks.\r\nI should note that it would be even better if I also did not need to track down and deactivate the links `m.link.deactivate()` when one side of the Connector is deactivated.\r\nThe stack trace and example can be found below:\r\n\r\n# Small example\r\n```\r\nfrom pyomo.environ import *\r\nfrom pyomo.core.base.connector import ConnectorExpander\r\n\r\nm = ConcreteModel()\r\nm.b1 = Block()\r\nm.b1.x1 = Var(bounds=(0, 1))\r\nm.b1.p1 = Connector()\r\nm.b1.p1.add(m.b1.x1, 'X')\r\n\r\nm.b2 = Block()\r\nm.b2.x2 = Var()\r\nm.b2.p2 = Connector()\r\nm.b2.p2.add(m.b2.x2, 'X')\r\n\r\nm.obj = Objective(expr=m.b2.x2)\r\nm.link = Constraint(expr=m.b1.p1 == m.b2.p2)\r\nm.b1.deactivate()\r\nm.link.deactivate()\r\n\r\nxfrm = ConnectorExpander()\r\nxfrm.apply(instance=m)\r\n\r\nipopt = SolverFactory('ipopt')\r\nipopt.solve(m, tee=True)\r\n\r\nm.display()\r\n```\r\n\r\n# Stack trace\r\n```\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 24, in <module>\r\n    ipopt.solve(m, tee=True)\r\n  File \"/home/qichen/.solvers/pyomo/src/pyomo/pyomo/opt/base/solvers.py\", line 562, in solve\r\n    self._presolve(*args, **kwds)\r\n  File \"/home/qichen/.solvers/pyomo/src/pyomo/pyomo/solvers/plugins/solvers/ASL.py\", line 188, in _presolve\r\n    SystemCallSolver._presolve(self, *args, **kwds)\r\n  File \"/home/qichen/.solvers/pyomo/src/pyomo/pyomo/opt/solver/shellcmd.py\", line 195, in _presolve\r\n    OptSolver._presolve(self, *args, **kwds)\r\n  File \"/home/qichen/.solvers/pyomo/src/pyomo/pyomo/opt/base/solvers.py\", line 646, in _presolve\r\n    **kwds)\r\n  File \"/home/qichen/.solvers/pyomo/src/pyomo/pyomo/opt/base/solvers.py\", line 714, in _convert_problem\r\n    **kwds)\r\n  File \"/home/qichen/.solvers/pyomo/src/pyomo/pyomo/opt/base/convert.py\", line 109, in convert_problem\r\n    problem_files, symbol_map = converter.apply(*tmp, **tmpkw)\r\n  File \"/home/qichen/.solvers/pyomo/src/pyomo/pyomo/solvers/plugins/converter/model.py\", line 163, in apply\r\n    io_options=io_options)\r\n  File \"/home/qichen/.solvers/pyomo/src/pyomo/pyomo/core/base/PyomoModel.py\", line 977, in write\r\n    io_options)\r\n  File \"/home/qichen/.solvers/pyomo/src/pyomo/pyomo/repn/plugins/ampl/ampl_.py\", line 356, in __call__\r\n    include_all_variable_bounds=include_all_variable_bounds)\r\n  File \"/home/qichen/.solvers/pyomo/src/pyomo/pyomo/repn/plugins/ampl/ampl_.py\", line 870, in _print_model_NL\r\n    list(self_varID_map[id(var)] for var in ampl_repn._linear_vars),\r\n  File \"/home/qichen/.solvers/pyomo/src/pyomo/pyomo/repn/plugins/ampl/ampl_.py\", line 870, in <genexpr>\r\n    list(self_varID_map[id(var)] for var in ampl_repn._linear_vars),\r\nKeyError: 140220870283088\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/91/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/91/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/90", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/90/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/90/events", "html_url": "https://github.com/Pyomo/pyomo/issues/90", "id": 197472963, "node_id": "MDU6SXNzdWUxOTc0NzI5NjM=", "number": 90, "title": "Problem installing pip using pyomo_install script", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 851971080, "node_id": "MDU6TGFiZWw4NTE5NzEwODA=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.installation", "name": "pyomo.installation", "color": "7967e0", "default": false, "description": "Any issues related to installation of pyomo"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-12-24T18:24:24Z", "updated_at": "2020-05-08T22:48:18Z", "closed_at": "2020-05-08T22:48:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I decided to do a clean install of pyomo on my laptop recently by deleting the venv folder and reinstalling. However, during the install process with `./pyomo_install --trunk --venv=pyomo`, I get the error:\r\n```\r\n************* Installing pip *******************\r\nERROR: Problem installing pip.  No pip executable found after installing pip in /tmp/tmpv66rgv\r\n```\r\nI just tried again today using the latest version of pyomo_install, and it's still happening.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/90/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/90/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/89", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/89/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/89/events", "html_url": "https://github.com/Pyomo/pyomo/issues/89", "id": 197044316, "node_id": "MDU6SXNzdWUxOTcwNDQzMTY=", "number": 89, "title": "DAE: expand blocks indexed by a ContinusSet", "user": {"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2016-12-21T22:06:24Z", "updated_at": "2017-02-02T03:03:36Z", "closed_at": "2017-02-02T03:03:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We need to update `pyomo.dae.misc.update_contset_indexed_component()` to also expand `Block`s that are indexed by `ContinuousSet`s.  This is an issue with models like a packed column whose length is specified as a continuous set.  Things like the physical properties for each \"stage\" (finite element) will need to be expanded.\r\n\r\nReported by @eslickj and @andrewlee94.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/89/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/89/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/87", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/87/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/87/events", "html_url": "https://github.com/Pyomo/pyomo/issues/87", "id": 196297343, "node_id": "MDU6SXNzdWUxOTYyOTczNDM=", "number": 87, "title": "Problems computing degree of expressions with numpy data", "user": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2016-12-18T20:28:51Z", "updated_at": "2021-08-12T18:28:49Z", "closed_at": "2021-08-12T18:28:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following script returns an error that indicates that the expression system things that the Objective constraint is a constant, when it clearly isn't.  Digging around, it looks like there is some confusion generated by the NumPY data types.\r\n\r\n```\r\nimport numpy as np\r\nfrom pyomo.environ import *\r\nopt = SolverFactory(\"glpk\")\r\nfrom pyomo.opt import SolverFactory\r\n\r\nmodel = AbstractModel()\r\n\r\nnsample = 500\r\nnvariables = 20\r\nX0 = np.ones([nsample,1])\r\nmodel.X = np.random.uniform(0,10,([nsample,nvariables]))\r\nX = np.concatenate([X0,model.X],axis = 1)\r\n\r\nmodel.I = RangeSet(1,nsample) \r\nmodel.J = RangeSet(1,nvariables) \r\n\r\n\r\nerror = np.random.normal(0,1,(nsample,1))\r\nbeta = np.random.randint(-5,5,size = ([nvariables+1,1]))\r\nmodel.Y = np.dot(X,beta) + error\r\n\r\nmodel.beta = Var(model.J)\r\nmodel.beta0 = Var()\r\n\r\ndef obj_fun(model):\r\n    \r\n    return sum(abs(model.Y[i-1]-(model.beta0 + sum(model.X[i-1,j-1]*model.beta[j] for j in model.J) )) for i in model.I)\r\n\r\nmodel.OBJ = Objective(rule = obj_fun, sense = minimize)\r\n\r\n\r\n\r\nopt = SolverFactory('glpk')\r\ninstance = model.create_instance()\r\nresults = opt.solve(instance)\r\nresults.write()\r\n```\r\n\r\nThis code generates the following error:\r\n```\r\nTypeError: Implicit conversion of Pyomo NumericValue type `<class 'pyomo.core.base.expr_coopr3._SumExpression'>' to a float is\r\ndisabled. This error is often the result of using Pyomo components as\r\narguments to one of the Python built-in math module functions when\r\ndefining expressions. Avoid this error by using Pyomo-provided math\r\nfunctions.\r\n```\r\nAnd it generates the warning\r\n```\r\nWARNING: Constant objective detected, replacing with a placeholder to prevent solver failure.\r\n```\r\n\r\nIn the cpxlp writer, the call\r\n```\r\ndegree = canonical_degree(canonical_repn)\r\n```\r\nreturns a value of zero for the degree!\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/87/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/87/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/84", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/84/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/84/events", "html_url": "https://github.com/Pyomo/pyomo/issues/84", "id": 195965557, "node_id": "MDU6SXNzdWUxOTU5NjU1NTc=", "number": 84, "title": "Problem declaring indexed component with a generator", "user": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-16T02:16:17Z", "updated_at": "2019-05-22T22:40:49Z", "closed_at": "2019-05-22T22:40:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Consider the following simple example:\r\n```\r\nfrom pyomo.environ import *\r\n\r\nA = {(1,2):3, (4,5):6}\r\n\r\nM = ConcreteModel()\r\nM.x = Var(A.keys())\r\n```\r\n\r\nThis examples with Python 3.5 because keys() is a generator.  Also, Pyomo cannot figure out what to do with a generator that returns tuple index values.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/84/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/84/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/83", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/83/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/83/events", "html_url": "https://github.com/Pyomo/pyomo/issues/83", "id": 194906803, "node_id": "MDU6SXNzdWUxOTQ5MDY4MDM=", "number": 83, "title": "Block fails to define clear()", "user": {"login": "qtothec", "id": 5910700, "node_id": "MDQ6VXNlcjU5MTA3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5910700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtothec", "html_url": "https://github.com/qtothec", "followers_url": "https://api.github.com/users/qtothec/followers", "following_url": "https://api.github.com/users/qtothec/following{/other_user}", "gists_url": "https://api.github.com/users/qtothec/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtothec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtothec/subscriptions", "organizations_url": "https://api.github.com/users/qtothec/orgs", "repos_url": "https://api.github.com/users/qtothec/repos", "events_url": "https://api.github.com/users/qtothec/events{/privacy}", "received_events_url": "https://api.github.com/users/qtothec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-12T07:23:50Z", "updated_at": "2020-11-12T14:00:46Z", "closed_at": "2020-11-12T14:00:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This one is pretty simple. I was looking for a quick way to delete everything in a Block:\r\n```\r\n>>> from pyomo.environ import ConcreteModel, Block\r\n>>> m = ConcreteModel()\r\n>>> m.b = Block()\r\n>>> m.b.clear()\r\n  File \"/home/qichen/.solvers/pyomo/src/pyomo/pyomo/core/base/indexed_component.py\", line 322, in clear\r\n    % (self.__class__.__name__,))\r\npyomo.util._config.DeveloperError: Internal Pyomo implementation error:\r\n        'Derived scalar component SimpleBlock failed to define clear().'\r\n        Please report this to the Pyomo Developers.\r\n```", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/83/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/83/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/82", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/82/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/82/events", "html_url": "https://github.com/Pyomo/pyomo/issues/82", "id": 194807459, "node_id": "MDU6SXNzdWUxOTQ4MDc0NTk=", "number": 82, "title": "Arithmetic error in AMPL data file error checking", "user": {"login": "DLWoodruff", "id": 16341380, "node_id": "MDQ6VXNlcjE2MzQxMzgw", "avatar_url": "https://avatars.githubusercontent.com/u/16341380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DLWoodruff", "html_url": "https://github.com/DLWoodruff", "followers_url": "https://api.github.com/users/DLWoodruff/followers", "following_url": "https://api.github.com/users/DLWoodruff/following{/other_user}", "gists_url": "https://api.github.com/users/DLWoodruff/gists{/gist_id}", "starred_url": "https://api.github.com/users/DLWoodruff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DLWoodruff/subscriptions", "organizations_url": "https://api.github.com/users/DLWoodruff/orgs", "repos_url": "https://api.github.com/users/DLWoodruff/repos", "events_url": "https://api.github.com/users/DLWoodruff/events{/privacy}", "received_events_url": "https://api.github.com/users/DLWoodruff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-11T02:12:39Z", "updated_at": "2016-12-16T03:04:30Z", "closed_at": "2016-12-16T02:41:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is not an example that should work; it is only an example that shows an error in error reporting. The message is\r\n\"\"\"\r\npyomo solve ~/software/pyomo/examples/pysp/farmer/models/ReferenceModel.py farmer/Scenario_Average.dat --solver=cplex\r\n[    0.00] Setting up Pyomo environment\r\n[    0.00] Applying Pyomo preprocessing actions\r\n[    0.00] Creating model\r\n[    0.01] Pyomo Finished\r\nERROR: Unexpected exception while running model:\r\n\tSyntax error at token SEMICOLON with value ';' in line 17 at column 24\r\n\"\"\"\r\n\r\nBut both 17 and 24 seem to incorrect (line 17 is particularly incorrect).\r\n[farmer.zip](https://github.com/Pyomo/pyomo/files/644178/farmer.zip)\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/82/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/82/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/73", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/73/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/73/events", "html_url": "https://github.com/Pyomo/pyomo/issues/73", "id": 190801009, "node_id": "MDU6SXNzdWUxOTA4MDEwMDk=", "number": 73, "title": "AMPLFUNC Environment Variable", "user": {"login": "eslickj", "id": 16341333, "node_id": "MDQ6VXNlcjE2MzQxMzMz", "avatar_url": "https://avatars.githubusercontent.com/u/16341333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eslickj", "html_url": "https://github.com/eslickj", "followers_url": "https://api.github.com/users/eslickj/followers", "following_url": "https://api.github.com/users/eslickj/following{/other_user}", "gists_url": "https://api.github.com/users/eslickj/gists{/gist_id}", "starred_url": "https://api.github.com/users/eslickj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eslickj/subscriptions", "organizations_url": "https://api.github.com/users/eslickj/orgs", "repos_url": "https://api.github.com/users/eslickj/repos", "events_url": "https://api.github.com/users/eslickj/events{/privacy}", "received_events_url": "https://api.github.com/users/eslickj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 504976042, "node_id": "MDU6TGFiZWw1MDQ5NzYwNDI=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/IDAES%20related", "name": "IDAES related", "color": "00b3f7", "default": false, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-11-21T18:38:15Z", "updated_at": "2018-04-10T18:41:51Z", "closed_at": "2018-04-10T18:41:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems that when you call an ASL solver multiple times from a Python script, and you use ExternalFucntion, the AMPLFUNC environment variable accumulates a bunch of repeated copies of the .so file.  I haven't determined if this causes a real problem yet, but it causes the ASL to spew a bunch of warnings about already defined functions.  I printed the environment variables during an initialization consisting of several solves, so you can get an idea of what's happening\r\n\r\n'PYOMO_AMPLFUNC': '../../../properties/physical/MEA_Simple/phys_prop.so'\r\n\r\n'AMPLFUNC': '/imports/users/jeslick/git/eslickj/models/idaes_models/properties/physical/MEA_Simple/phys_prop.so\\n../../../properties/physical/MEA_Simple/phys_prop.so\\n../../../properties/physical/MEA_Simple/phys_prop.so\\n../../../properties/physical/MEA_Simple/phys_prop.so\\n../../../properties/physical/MEA_Simple/phys_prop.so\\n../../../properties/physical/MEA_Simple/phys_prop.so\\n../../../properties/physical/MEA_Simple/phys_prop.so\\n../../../properties/physical/MEA_Simple/phys_prop.so'", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/73/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/73/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/69", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/69/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/69/events", "html_url": "https://github.com/Pyomo/pyomo/issues/69", "id": 189216896, "node_id": "MDU6SXNzdWUxODkyMTY4OTY=", "number": 69, "title": "Unable to get slack with XPRESS.py", "user": {"login": "kdheepak", "id": 1813121, "node_id": "MDQ6VXNlcjE4MTMxMjE=", "avatar_url": "https://avatars.githubusercontent.com/u/1813121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdheepak", "html_url": "https://github.com/kdheepak", "followers_url": "https://api.github.com/users/kdheepak/followers", "following_url": "https://api.github.com/users/kdheepak/following{/other_user}", "gists_url": "https://api.github.com/users/kdheepak/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdheepak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdheepak/subscriptions", "organizations_url": "https://api.github.com/users/kdheepak/orgs", "repos_url": "https://api.github.com/users/kdheepak/repos", "events_url": "https://api.github.com/users/kdheepak/events{/privacy}", "received_events_url": "https://api.github.com/users/kdheepak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-14T20:27:33Z", "updated_at": "2022-02-02T15:10:55Z", "closed_at": "2022-02-02T15:10:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` python\r\nfrom pyomo.environ import *\r\n\r\nm = ConcreteModel()\r\nm.x = Var()\r\nm.y = Var(bounds=(0,1))\r\nm.o = Objective(expr= m.x + m.y)\r\nm.c = Constraint(expr= m.x >= 1)\r\nm.dual = Suffix(direction=Suffix.IMPORT)\r\nm.rc = Suffix(direction=Suffix.IMPORT)\r\nm.slack = Suffix(direction=Suffix.IMPORT)\r\n\r\nsolver = SolverFactory(\"xpress\",\r\n                       solver_io=\"lp\")\r\nresults = solver.solve(m)\r\n\r\nprint(m.o())\r\nprint(m.x())\r\nprint(m.y())\r\nprint(m.dual[m.c])\r\nprint(m.rc[m.y])\r\nprint(m.slack[m.c])\r\n\r\n# should print                                                                                 \r\n# 1                                                                                            \r\n# 1                                                                                            \r\n# 0                                                                                            \r\n# 1                                                                                            \r\n# 1                                                                                            \r\n# 0  \r\n```\r\n\r\nThe output is below.\r\n\r\n```\r\n1.0\r\n1.0\r\n0.0\r\n1.0\r\n1.0\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-1-090dcfa991bb> in <module>()\r\n     19 print(m.dual[m.c])\r\n     20 print(m.rc[m.y])\r\n---> 21 print(m.slack[m.c])\r\n     22 \r\n     23 # should print\r\n\r\n/Users/$USER/miniconda2/lib/python2.7/site-packages/pyomo/core/base/suffix.pyc in __getitem__(self, component)\r\n    197             raise KeyError(\"Component with name: \"\r\n    198                            +cname+\r\n--> 199                            \" (id=%s)\" % id(component))\r\n    200 \r\n    201     def __setitem__(self, component, value):\r\n\r\nKeyError: 'Component with name: c (id=4484422800)'\r\n```\r\n\r\nThe above uses `lpoptimize` in XPRESS.py. Any thoughts on what the problem might be?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/69/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/69/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/68", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/68/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/68/events", "html_url": "https://github.com/Pyomo/pyomo/issues/68", "id": 189008648, "node_id": "MDU6SXNzdWUxODkwMDg2NDg=", "number": 68, "title": "Unusual behavior when using Pyomo and Pandas (?)", "user": {"login": "kdheepak", "id": 1813121, "node_id": "MDQ6VXNlcjE4MTMxMjE=", "avatar_url": "https://avatars.githubusercontent.com/u/1813121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdheepak", "html_url": "https://github.com/kdheepak", "followers_url": "https://api.github.com/users/kdheepak/followers", "following_url": "https://api.github.com/users/kdheepak/following{/other_user}", "gists_url": "https://api.github.com/users/kdheepak/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdheepak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdheepak/subscriptions", "organizations_url": "https://api.github.com/users/kdheepak/orgs", "repos_url": "https://api.github.com/users/kdheepak/repos", "events_url": "https://api.github.com/users/kdheepak/events{/privacy}", "received_events_url": "https://api.github.com/users/kdheepak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-11-14T00:56:24Z", "updated_at": "2021-08-12T18:28:48Z", "closed_at": "2021-08-12T18:28:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi all,\r\n\r\nI'm getting an extremely unusual behavior when using Pyomo with a Pandas Series object. Specifically, when I convert a Pandas Series object to a dictionary and pass it to a `Param` initialization, I get a error when I create a constraint rule.\r\n\r\n```\r\nimport pandas as pd\r\nfrom pyomo.environ import *\r\n\r\nmodel = ConcreteModel()\r\n\r\nmodel.Set1 = Set(initialize=[0, 1, 2, 3, 4, 5])\r\n\r\n# model.Parameter1 = Param(model.Set1, initialize=pd.Series({0: 400.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 240.0}).to_dict())\r\nmodel.Parameter1 = Param(model.Set1, initialize={0: 400.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 240.0})\r\n\r\nmodel.Variable1 = Var(model.Set1, initialize=0)\r\n\r\ndef rule(m, l):\r\n    return -m.Parameter1[l] <= m.Variable1[l]\r\n\r\nmodel.Constraint1 = Constraint(model.Set1, rule=rule)\r\n```\r\n\r\nThe above works fine. However, if I replace the `initialize` argument for Parameter1 with a Series object converted to a dictionary, I get the following error. \r\n\r\n```\r\nERROR: Constructing component 'Constraint1' from data=None failed:\r\n        ValueError: Constraint 'Constraint1[0]' does not have a proper value. Found 'True'\r\n        Expecting a tuple or equation. Examples:\r\n           summation(model.costs) == model.income\r\n           (0, model.price[item], 50)\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 21, in <module>\r\n    model.Constraint1 = Constraint(model.Set1, rule=rule)\r\n  File \"/Users/$USER/anaconda/lib/python2.7/site-packages/pyomo/core/base/block.py\", line 483, in __setattr__\r\n    self.add_component(name, val)\r\n  File \"/Users/$USER/anaconda/lib/python2.7/site-packages/pyomo/core/base/block.py\", line 849, in add_component\r\n    val.construct(data)\r\n  File \"/Users/$USER/anaconda/lib/python2.7/site-packages/pyomo/core/base/constraint.py\", line 752, in construct\r\n    cdata = self._check_skip_add(ndx, tmp)\r\n  File \"/Users/$USER/anaconda/lib/python2.7/site-packages/pyomo/core/base/constraint.py\", line 900, in _check_skip_add\r\n    condata.set_value(expr)\r\n  File \"/Users/$USER/anaconda/lib/python2.7/site-packages/pyomo/core/base/constraint.py\", line 442, in set_value\r\n    raise ValueError(msg)\r\nValueError: Constraint 'Constraint1[0]' does not have a proper value. Found 'True'\r\nExpecting a tuple or equation. Examples:\r\n   summation(model.costs) == model.income\r\n   (0, model.price[item], 50)\r\n```\r\n\r\nIn the example above, I've commented out the line that converts a dictionary to a Series object and back to a dictionary. To reproduce this error, uncomment that line and comment the following line. \r\n\r\nI'm using Pyomo 4.4.1 and Pandas 0.17.1\r\n\r\nI've also verified that the two arguments are equivalent.\r\n\r\n```\r\nIn [1]: import pandas as pd\r\n\r\nIn [2]: {0: 400.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 240.0} == pd.Series({0: 400.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 240.0}).to_dict()\r\nOut[2]: True\r\n```\r\n\r\n Any idea what is going on? Most of the data I have is in Pandas Dataframes / Series. It is puzzling to me why this does not work.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/68/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/68/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/65", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/65/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/65/events", "html_url": "https://github.com/Pyomo/pyomo/issues/65", "id": 188372558, "node_id": "MDU6SXNzdWUxODgzNzI1NTg=", "number": 65, "title": "Issue cloning an unpickled model that was solved before it was pickled", "user": {"login": "ghackebeil", "id": 2308454, "node_id": "MDQ6VXNlcjIzMDg0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2308454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghackebeil", "html_url": "https://github.com/ghackebeil", "followers_url": "https://api.github.com/users/ghackebeil/followers", "following_url": "https://api.github.com/users/ghackebeil/following{/other_user}", "gists_url": "https://api.github.com/users/ghackebeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghackebeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghackebeil/subscriptions", "organizations_url": "https://api.github.com/users/ghackebeil/orgs", "repos_url": "https://api.github.com/users/ghackebeil/repos", "events_url": "https://api.github.com/users/ghackebeil/events{/privacy}", "received_events_url": "https://api.github.com/users/ghackebeil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Pyomo/pyomo/milestones/2", "html_url": "https://github.com/Pyomo/pyomo/milestone/2", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/milestones/2/labels", "id": 1813435, "node_id": "MDk6TWlsZXN0b25lMTgxMzQzNQ==", "number": 2, "title": "Pyomo 5.x", "description": null, "creator": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2016-06-07T13:22:00Z", "updated_at": "2022-06-28T22:15:21Z", "due_on": null, "closed_at": "2022-06-28T22:15:21Z"}, "comments": 1, "created_at": "2016-11-09T22:46:37Z", "updated_at": "2017-05-10T07:12:57Z", "closed_at": "2017-05-10T07:12:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following simple example results in a very strange error inside of __setstate__ on the ModelSolutions object:\r\n\r\n```python\r\nimport pickle\r\nfrom pyomo.environ import *\r\n\r\nm = ConcreteModel()\r\nm.x = Var()\r\nm.o = Objective(expr=m.x)\r\nm.c = Constraint(expr=m.x >= 1)\r\n\r\n#                    \r\n# SOLVE A MODEL\r\n#\r\nglpk = SolverFactory(\"glpk\")\r\nglpk.solve(m)\r\n\r\n#\r\n# PICKLE THE SOLVED MODEL\r\n#\r\nm_unpickled = pickle.loads(pickle.dumps(m))\r\n\r\n#\r\n# CLONE THE UNPICKLED MODEL\r\n#\r\nm_cloned = m_unpickled.clone() # ERROR\r\n```\r\n\r\nThe exact order here is important: The unpickled version of a model THAT WAS SOLVED BEFORE IT WAS PICKLED can not be cloned. Here is a partial stack trace:\r\n```python\r\n  File \"~/Frameworks/Python.framework/Versions/2.7/lib/python2.7/copy.py\", line 182, in deepcopy\r\n    rv = reductor(2)\r\n  File \"~/Pyomo/pyomo/pyomo/core/base/PyomoModel.py\", line 159, in __getstate__\r\n    tmp[name].update( (ComponentUID(obj()), entry) for (obj, entry) in itervalues(data) )\r\n  File \"~/Pyomo/pyomo/pyomo/core/base/PyomoModel.py\", line 159, in <genexpr>\r\n    tmp[name].update( (ComponentUID(obj()), entry) for (obj, entry) in itervalues(data) )\r\nTypeError: 'NoneType' object is not callable\r\n```\r\nI will expand the pickle tests to expose this.\r\n\r\n@whart222, @jsiirola: Mind taking a look?", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/65/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/65/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/64", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/64/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/64/events", "html_url": "https://github.com/Pyomo/pyomo/issues/64", "id": 188347265, "node_id": "MDU6SXNzdWUxODgzNDcyNjU=", "number": 64, "title": "Template expression substituter doesn't work for non-templated string indices", "user": {"login": "blnicho", "id": 18425615, "node_id": "MDQ6VXNlcjE4NDI1NjE1", "avatar_url": "https://avatars.githubusercontent.com/u/18425615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blnicho", "html_url": "https://github.com/blnicho", "followers_url": "https://api.github.com/users/blnicho/followers", "following_url": "https://api.github.com/users/blnicho/following{/other_user}", "gists_url": "https://api.github.com/users/blnicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/blnicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blnicho/subscriptions", "organizations_url": "https://api.github.com/users/blnicho/orgs", "repos_url": "https://api.github.com/users/blnicho/repos", "events_url": "https://api.github.com/users/blnicho/events{/privacy}", "received_events_url": "https://api.github.com/users/blnicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Pyomo/pyomo/milestones/2", "html_url": "https://github.com/Pyomo/pyomo/milestone/2", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/milestones/2/labels", "id": 1813435, "node_id": "MDk6TWlsZXN0b25lMTgxMzQzNQ==", "number": 2, "title": "Pyomo 5.x", "description": null, "creator": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2016-06-07T13:22:00Z", "updated_at": "2022-06-28T22:15:21Z", "due_on": null, "closed_at": "2022-06-28T22:15:21Z"}, "comments": 1, "created_at": "2016-11-09T20:41:48Z", "updated_at": "2016-11-13T21:56:12Z", "closed_at": "2016-11-13T21:56:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The template expression substituter does not work when one of the non-templated indexing sets is a set of strings. For example:\r\n\r\n```python\r\nm = ConcreteModel()\r\n\r\nm.s = Set(initialize=['A','B'])\r\nm.j = RangeSet(1,10)\r\nm.x = Var(m.j,m.s,initialize=1)\r\nt = IndexTemplate(m.j)\r\n\r\ndef _con(m,j,s):\r\n    return m.x[j,s] == m.x[j+1,s]**2\r\n\r\ne = _con(m,t,'A')\r\n\r\n_map = {}\r\nE = substitute_template_expression(e,substitute_getitem_with_param, _map)\r\n\r\n# t.set_value(5)\r\n# E = substitute_template_expression(e,substitute_template_with_value)\r\n```\r\n@jsiirola it looks like the problem is in the clone_expression function for both coopr3 and pyomo4 expressions (I can send the stack trace if needed). I don't know enough about the expression cloning/copying logic to fix this.", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/64/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/64/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/60", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/60/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/60/events", "html_url": "https://github.com/Pyomo/pyomo/issues/60", "id": 184638129, "node_id": "MDU6SXNzdWUxODQ2MzgxMjk=", "number": 60, "title": "Bug in set arithmetic", "user": {"login": "DLWoodruff", "id": 16341380, "node_id": "MDQ6VXNlcjE2MzQxMzgw", "avatar_url": "https://avatars.githubusercontent.com/u/16341380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DLWoodruff", "html_url": "https://github.com/DLWoodruff", "followers_url": "https://api.github.com/users/DLWoodruff/followers", "following_url": "https://api.github.com/users/DLWoodruff/following{/other_user}", "gists_url": "https://api.github.com/users/DLWoodruff/gists{/gist_id}", "starred_url": "https://api.github.com/users/DLWoodruff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DLWoodruff/subscriptions", "organizations_url": "https://api.github.com/users/DLWoodruff/orgs", "repos_url": "https://api.github.com/users/DLWoodruff/repos", "events_url": "https://api.github.com/users/DLWoodruff/events{/privacy}", "received_events_url": "https://api.github.com/users/DLWoodruff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Pyomo/pyomo/milestones/1", "html_url": "https://github.com/Pyomo/pyomo/milestone/1", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/milestones/1/labels", "id": 1813434, "node_id": "MDk6TWlsZXN0b25lMTgxMzQzNA==", "number": 1, "title": "Pyomo 5.0", "description": null, "creator": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 20, "state": "closed", "created_at": "2016-06-07T13:21:49Z", "updated_at": "2019-07-11T18:55:27Z", "due_on": null, "closed_at": "2019-07-11T18:55:27Z"}, "comments": 0, "created_at": "2016-10-22T16:01:33Z", "updated_at": "2016-10-31T01:21:58Z", "closed_at": "2016-10-30T18:01:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have attached a model and dat file to illustrate a bug in set union. IMO the two construct() calls should not be needed, either, so removing them seems to reveal a second bug. Just running it as it is indicates that the union is not formed correctly.\n[modelo.zip](https://github.com/Pyomo/pyomo/files/545872/modelo.zip)\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/60/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/60/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/59", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/59/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/59/events", "html_url": "https://github.com/Pyomo/pyomo/issues/59", "id": 184612015, "node_id": "MDU6SXNzdWUxODQ2MTIwMTU=", "number": 59, "title": "XPRESS: NameError: global name 'field_name' is not defined", "user": {"login": "kdheepak", "id": 1813121, "node_id": "MDQ6VXNlcjE4MTMxMjE=", "avatar_url": "https://avatars.githubusercontent.com/u/1813121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdheepak", "html_url": "https://github.com/kdheepak", "followers_url": "https://api.github.com/users/kdheepak/followers", "following_url": "https://api.github.com/users/kdheepak/following{/other_user}", "gists_url": "https://api.github.com/users/kdheepak/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdheepak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdheepak/subscriptions", "organizations_url": "https://api.github.com/users/kdheepak/orgs", "repos_url": "https://api.github.com/users/kdheepak/repos", "events_url": "https://api.github.com/users/kdheepak/events{/privacy}", "received_events_url": "https://api.github.com/users/kdheepak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Pyomo/pyomo/milestones/2", "html_url": "https://github.com/Pyomo/pyomo/milestone/2", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/milestones/2/labels", "id": 1813435, "node_id": "MDk6TWlsZXN0b25lMTgxMzQzNQ==", "number": 2, "title": "Pyomo 5.x", "description": null, "creator": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2016-06-07T13:22:00Z", "updated_at": "2022-06-28T22:15:21Z", "due_on": null, "closed_at": "2022-06-28T22:15:21Z"}, "comments": 0, "created_at": "2016-10-22T05:47:48Z", "updated_at": "2022-02-02T15:10:58Z", "closed_at": "2022-02-02T15:10:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[XPRESS.py](https://github.com/Pyomo/pyomo/blob/master/pyomo/solvers/plugins/solvers/XPRESS.py#L354) does not define `field_name` before using it. The following is the traceback from running the example in #58 \n\n```\n$ python test.py\nTraceback (most recent call last):\n  File \"test.py\", line 14, in <module>\n    results = solver.solve(m)\n  File \"/Users/$USER/anaconda/lib/python2.7/site-packages/pyomo/opt/base/solvers.py\", line 587, in solve\n    result = self._postsolve()\n  File \"/Users/$USER/anaconda/lib/python2.7/site-packages/pyomo/opt/solver/shellcmd.py\", line 267, in _postsolve\n    results = self.process_output(self._rc)\n  File \"/Users/$USER/anaconda/lib/python2.7/site-packages/pyomo/opt/solver/shellcmd.py\", line 329, in process_output\n    self.process_soln_file(results)\n  File \"/Users/$USER/anaconda/lib/python2.7/site-packages/pyomo/solvers/plugins/solvers/XPRESS.py\", line 354, in process_soln_file\n    if (extract_reduced_costs is True) and (field_name == \"reducedCost\"):\nNameError: global name 'field_name' is not defined\n```\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/59/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/59/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/58", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/58/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/58/events", "html_url": "https://github.com/Pyomo/pyomo/issues/58", "id": 184588446, "node_id": "MDU6SXNzdWUxODQ1ODg0NDY=", "number": 58, "title": "XPRESS.py always uses lpsolve irrespective of problem type", "user": {"login": "kdheepak", "id": 1813121, "node_id": "MDQ6VXNlcjE4MTMxMjE=", "avatar_url": "https://avatars.githubusercontent.com/u/1813121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdheepak", "html_url": "https://github.com/kdheepak", "followers_url": "https://api.github.com/users/kdheepak/followers", "following_url": "https://api.github.com/users/kdheepak/following{/other_user}", "gists_url": "https://api.github.com/users/kdheepak/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdheepak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdheepak/subscriptions", "organizations_url": "https://api.github.com/users/kdheepak/orgs", "repos_url": "https://api.github.com/users/kdheepak/repos", "events_url": "https://api.github.com/users/kdheepak/events{/privacy}", "received_events_url": "https://api.github.com/users/kdheepak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Pyomo/pyomo/milestones/2", "html_url": "https://github.com/Pyomo/pyomo/milestone/2", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/milestones/2/labels", "id": 1813435, "node_id": "MDk6TWlsZXN0b25lMTgxMzQzNQ==", "number": 2, "title": "Pyomo 5.x", "description": null, "creator": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2016-06-07T13:22:00Z", "updated_at": "2022-06-28T22:15:21Z", "due_on": null, "closed_at": "2022-06-28T22:15:21Z"}, "comments": 16, "created_at": "2016-10-21T23:04:51Z", "updated_at": "2022-02-02T15:11:03Z", "closed_at": "2022-02-02T15:11:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The XPRESS.py plugin using [lpsolve](https://github.com/Pyomo/pyomo/blob/master/pyomo/solvers/plugins/solvers/XPRESS.py#L159) irrespective of the problem type. This results in an incorrect solution when solving MILP problems. The correct solver is `mipoptimize` for MILP problems. XPRESS.py should either\n\n1) Ask the user for the problem type\n2) Have `pyomo` figure out the problem type\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/58/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/58/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/53", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/53/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/53/events", "html_url": "https://github.com/Pyomo/pyomo/issues/53", "id": 183813527, "node_id": "MDU6SXNzdWUxODM4MTM1Mjc=", "number": 53, "title": "Pyomo should be able to load external functions from .so file in LD_LIBRARY_PATH ", "user": {"login": "shreddd", "id": 143514, "node_id": "MDQ6VXNlcjE0MzUxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/143514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shreddd", "html_url": "https://github.com/shreddd", "followers_url": "https://api.github.com/users/shreddd/followers", "following_url": "https://api.github.com/users/shreddd/following{/other_user}", "gists_url": "https://api.github.com/users/shreddd/gists{/gist_id}", "starred_url": "https://api.github.com/users/shreddd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shreddd/subscriptions", "organizations_url": "https://api.github.com/users/shreddd/orgs", "repos_url": "https://api.github.com/users/shreddd/repos", "events_url": "https://api.github.com/users/shreddd/events{/privacy}", "received_events_url": "https://api.github.com/users/shreddd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Pyomo/pyomo/milestones/2", "html_url": "https://github.com/Pyomo/pyomo/milestone/2", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/milestones/2/labels", "id": 1813435, "node_id": "MDk6TWlsZXN0b25lMTgxMzQzNQ==", "number": 2, "title": "Pyomo 5.x", "description": null, "creator": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2016-06-07T13:22:00Z", "updated_at": "2022-06-28T22:15:21Z", "due_on": null, "closed_at": "2022-06-28T22:15:21Z"}, "comments": 3, "created_at": "2016-10-18T21:55:30Z", "updated_at": "2022-02-23T17:09:20Z", "closed_at": "2022-02-23T17:09:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently pyomo only loads external function property definitions from a phys_prop.so file in the current directory. It should search LD_LIBRARY_PATH (or equivalent) location for this file.\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/53/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/53/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/43", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/43/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/43/events", "html_url": "https://github.com/Pyomo/pyomo/issues/43", "id": 176301383, "node_id": "MDU6SXNzdWUxNzYzMDEzODM=", "number": 43, "title": "unsupported operand type(s) for *: '_IndexedSetData' and 'SimpleSet'", "user": {"login": "Ringo-0", "id": 17913761, "node_id": "MDQ6VXNlcjE3OTEzNzYx", "avatar_url": "https://avatars.githubusercontent.com/u/17913761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ringo-0", "html_url": "https://github.com/Ringo-0", "followers_url": "https://api.github.com/users/Ringo-0/followers", "following_url": "https://api.github.com/users/Ringo-0/following{/other_user}", "gists_url": "https://api.github.com/users/Ringo-0/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ringo-0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ringo-0/subscriptions", "organizations_url": "https://api.github.com/users/Ringo-0/orgs", "repos_url": "https://api.github.com/users/Ringo-0/repos", "events_url": "https://api.github.com/users/Ringo-0/events{/privacy}", "received_events_url": "https://api.github.com/users/Ringo-0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-12T06:14:09Z", "updated_at": "2019-09-24T18:42:41Z", "closed_at": "2019-09-24T18:42:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nJohn told me it's probably a bug and I should open an issue here.\r\n### in the model\r\n\r\n    model.Dummy = Set(model.Jobs, within=model.Jobs)\r\n    model.Cars = Set()\r\n\r\n### in the dat-file\r\n\r\n    ...\r\n    set Dummy[A_E] := A_E B_E;\r\n    ...\r\n    set Cars := Car1 Car2 Car3;\r\n\r\nNow  the following constraint wouldn't work:\r\n\r\n    def JobOnlyOnce_rule(model,j):\r\n        return sum(model.x[i,k] for (i,k) in model.Dummy[j]*model.Cars) <= 1\r\n    model.JobOnlyOnce = Constraint(model.Jobs, rule=JobOnlyOnce_rule)\r\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/43/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/43/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/32", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/32/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/32/events", "html_url": "https://github.com/Pyomo/pyomo/issues/32", "id": 174892161, "node_id": "MDU6SXNzdWUxNzQ4OTIxNjE=", "number": 32, "title": "Bug in Abstract Set Creation", "user": {"login": "DLWoodruff", "id": 16341380, "node_id": "MDQ6VXNlcjE2MzQxMzgw", "avatar_url": "https://avatars.githubusercontent.com/u/16341380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DLWoodruff", "html_url": "https://github.com/DLWoodruff", "followers_url": "https://api.github.com/users/DLWoodruff/followers", "following_url": "https://api.github.com/users/DLWoodruff/following{/other_user}", "gists_url": "https://api.github.com/users/DLWoodruff/gists{/gist_id}", "starred_url": "https://api.github.com/users/DLWoodruff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DLWoodruff/subscriptions", "organizations_url": "https://api.github.com/users/DLWoodruff/orgs", "repos_url": "https://api.github.com/users/DLWoodruff/repos", "events_url": "https://api.github.com/users/DLWoodruff/events{/privacy}", "received_events_url": "https://api.github.com/users/DLWoodruff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Pyomo/pyomo/milestones/1", "html_url": "https://github.com/Pyomo/pyomo/milestone/1", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/milestones/1/labels", "id": 1813434, "node_id": "MDk6TWlsZXN0b25lMTgxMzQzNA==", "number": 1, "title": "Pyomo 5.0", "description": null, "creator": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 20, "state": "closed", "created_at": "2016-06-07T13:21:49Z", "updated_at": "2019-07-11T18:55:27Z", "due_on": null, "closed_at": "2019-07-11T18:55:27Z"}, "comments": 2, "created_at": "2016-09-03T11:19:24Z", "updated_at": "2016-10-31T01:26:37Z", "closed_at": "2016-10-30T19:29:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In previous versions of Pyomo, one could use set expressions on abstract sets (which makes sense). In the current version, and on trunk, the following sort of thing:\n\nmodel.S_Diff = Set()\nmodel.S_Norm = Set()\nmodel.ASS = model.ASS_pro|model.ASS_cst\nmodel.ASSPRO = model.ASS|model.PRO\nmodel.ASSPRODIS = model.ASSPRO|model.DIS\nmodel.S = model.S_Norm|model.S_Diff\n\nresults in something like:\n\nERROR: Unexpected exception while loading model:\n    Cannot iterate over abstract Set 'S_Norm' before it has been constructed (initialized).\n\nThis code works in previous versions of Pyomo. A example for testing is attached (if the example does not result in the error message \"Cannot iterate over abstract Set ...\" then it is no longer useful. It is not intended to be a working example).\n\n[setbug.zip](https://github.com/Pyomo/pyomo/files/453315/setbug.zip)\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/32/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/32/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/31", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/31/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/31/events", "html_url": "https://github.com/Pyomo/pyomo/issues/31", "id": 173466121, "node_id": "MDU6SXNzdWUxNzM0NjYxMjE=", "number": 31, "title": "Bug using numpy float values in Pyomo expressions.", "user": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460434, "node_id": "MDU6TGFiZWw4Mzg0NjA0MzQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.core", "name": "pyomo.core", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsiirola", "id": 356359, "node_id": "MDQ6VXNlcjM1NjM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiirola", "html_url": "https://github.com/jsiirola", "followers_url": "https://api.github.com/users/jsiirola/followers", "following_url": "https://api.github.com/users/jsiirola/following{/other_user}", "gists_url": "https://api.github.com/users/jsiirola/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiirola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiirola/subscriptions", "organizations_url": "https://api.github.com/users/jsiirola/orgs", "repos_url": "https://api.github.com/users/jsiirola/repos", "events_url": "https://api.github.com/users/jsiirola/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiirola/received_events", "type": "User", "site_admin": false}, {"login": "michaelbynum", "id": 20401710, "node_id": "MDQ6VXNlcjIwNDAxNzEw", "avatar_url": "https://avatars.githubusercontent.com/u/20401710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbynum", "html_url": "https://github.com/michaelbynum", "followers_url": "https://api.github.com/users/michaelbynum/followers", "following_url": "https://api.github.com/users/michaelbynum/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbynum/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbynum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbynum/subscriptions", "organizations_url": "https://api.github.com/users/michaelbynum/orgs", "repos_url": "https://api.github.com/users/michaelbynum/repos", "events_url": "https://api.github.com/users/michaelbynum/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbynum/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2016-08-26T14:26:51Z", "updated_at": "2021-06-28T13:28:00Z", "closed_at": "2021-06-28T13:28:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Consider the following script:\n\n```\n# pyomo 4.4.1\n# python 3.5\nfrom pyomo.environ import *\nimport numpy\n\nm = ConcreteModel()\n\nm.T = RangeSet(10)\nm.v = Var(initialize=1, bounds=(0,None))\nm.c = Var(m.T, initialize=20)\n\ndef rule(m, t):\n    h = numpy.float32(1.0)\n    # This works\n    return m.c[t]  == h * m.c[t]\nm.X = Constraint(m.T, rule=rule)\n\ndef rule(m, t):\n    h = numpy.float32(1.0)\n    # This works\n    return m.c[t]  == h * m.c[t] * m.v\nm.X = Constraint(m.T, rule=rule)\n\ndef rule(m, t):\n    h = numpy.float32(1.0)\n    # This fails\n    return m.c[t]  == h * m.v\nm.x = Constraint(m.T, rule=rule)\n```\n\nThe first two constraints are constructed fine, but the last one fails, generating the following error:\n\n```\nERROR: Rule failed when generating expression for constraint x with index 1:\n    KeyError: \"Error accessing indexed component: Cannot treat the scalar component 'v' as an array\"\nERROR: Constructing component 'x' from data=None failed:\n    KeyError: \"Error accessing indexed component: Cannot treat the scalar component 'v' as an array\"\nTraceback (most recent call last):\n  File \"tmp.py\", line 26, in <module>\n    m.x = Constraint(m.T, rule=rule)\n  File \"/Users/wehart/home/src/python35/src/pyomo/pyomo/core/base/block.py\", line 483, in __setattr__\n    self.add_component(name, val)\n  File \"/Users/wehart/home/src/python35/src/pyomo/pyomo/core/base/block.py\", line 849, in add_component\n    val.construct(data)\n  File \"/Users/wehart/home/src/python35/src/pyomo/pyomo/core/base/constraint.py\", line 736, in construct\n    ndx)\n  File \"/Users/wehart/home/src/python35/src/pyomo/pyomo/core/base/misc.py\", line 59, in apply_indexed_rule\n    return rule(model, index)\n  File \"tmp.py\", line 25, in rule\n    return m.c[t]  == h * m.v\n  File \"/Users/wehart/home/src/python35/src/pyomo/pyomo/core/base/indexed_component.py\", line 499, in __getitem__\n    raise KeyError(msg)\nKeyError: \"Error accessing indexed component: Cannot treat the scalar component 'v' as an array\"\n```\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/31/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/31/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/30", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/30/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/30/events", "html_url": "https://github.com/Pyomo/pyomo/issues/30", "id": 172988899, "node_id": "MDU6SXNzdWUxNzI5ODg4OTk=", "number": 30, "title": "is_fixed checks inside constraint.set_expr need to be changed", "user": {"login": "ghackebeil", "id": 2308454, "node_id": "MDQ6VXNlcjIzMDg0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2308454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghackebeil", "html_url": "https://github.com/ghackebeil", "followers_url": "https://api.github.com/users/ghackebeil/followers", "following_url": "https://api.github.com/users/ghackebeil/following{/other_user}", "gists_url": "https://api.github.com/users/ghackebeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghackebeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghackebeil/subscriptions", "organizations_url": "https://api.github.com/users/ghackebeil/orgs", "repos_url": "https://api.github.com/users/ghackebeil/repos", "events_url": "https://api.github.com/users/ghackebeil/events{/privacy}", "received_events_url": "https://api.github.com/users/ghackebeil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Pyomo/pyomo/milestones/1", "html_url": "https://github.com/Pyomo/pyomo/milestone/1", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/milestones/1/labels", "id": 1813434, "node_id": "MDk6TWlsZXN0b25lMTgxMzQzNA==", "number": 1, "title": "Pyomo 5.0", "description": null, "creator": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 20, "state": "closed", "created_at": "2016-06-07T13:21:49Z", "updated_at": "2019-07-11T18:55:27Z", "due_on": null, "closed_at": "2019-07-11T18:55:27Z"}, "comments": 3, "created_at": "2016-08-24T15:46:03Z", "updated_at": "2016-10-31T02:31:47Z", "closed_at": "2016-10-31T02:31:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The checks for is_fixed when setting a constraint expression need to be changed to something more restrictive. However, is_constant is too restrictive. We need another expression classifier (is_numeric?) that checks for the existence of optimization variables, or even the possibility of them appearing in the future (e.g., because a mutable expression appears somewhere). Here is some pseudo code of a problematic case:\n\n``` !python\ny = variable()\nx = variable()\nexpr = x == y\nx.fix(1.0)\nc = constraint(expr)\nx.free()\n```\n\nNow c.lower and c.upper are equal to x (which are always supposed to be \"numeric\"), but there is nothing invalid about how this constraint was defined. It is simply a side-effect of our invalid code breaking apart the constraint expression in a way that doesn't make sense.\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/30/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/30/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/29", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/29/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/29/events", "html_url": "https://github.com/Pyomo/pyomo/issues/29", "id": 172432884, "node_id": "MDU6SXNzdWUxNzI0MzI4ODQ=", "number": 29, "title": "Fix confusing error message in bilevel transform for nonlinear models", "user": {"login": "ghackebeil", "id": 2308454, "node_id": "MDQ6VXNlcjIzMDg0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2308454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghackebeil", "html_url": "https://github.com/ghackebeil", "followers_url": "https://api.github.com/users/ghackebeil/followers", "following_url": "https://api.github.com/users/ghackebeil/following{/other_user}", "gists_url": "https://api.github.com/users/ghackebeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghackebeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghackebeil/subscriptions", "organizations_url": "https://api.github.com/users/ghackebeil/orgs", "repos_url": "https://api.github.com/users/ghackebeil/repos", "events_url": "https://api.github.com/users/ghackebeil/events{/privacy}", "received_events_url": "https://api.github.com/users/ghackebeil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 851988800, "node_id": "MDU6TGFiZWw4NTE5ODg4MDA=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.bilevel", "name": "pyomo.bilevel", "color": "abb6f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Pyomo/pyomo/milestones/2", "html_url": "https://github.com/Pyomo/pyomo/milestone/2", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/milestones/2/labels", "id": 1813435, "node_id": "MDk6TWlsZXN0b25lMTgxMzQzNQ==", "number": 2, "title": "Pyomo 5.x", "description": null, "creator": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2016-06-07T13:22:00Z", "updated_at": "2022-06-28T22:15:21Z", "due_on": null, "closed_at": "2022-06-28T22:15:21Z"}, "comments": 3, "created_at": "2016-08-22T11:46:53Z", "updated_at": "2020-04-15T20:42:44Z", "closed_at": "2020-04-15T20:42:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This transform implicitly assumes it is given a linear model by treating the constraint canonical repn as a LinearCanonicalRepn object. This leads to a confusing error message when the model has nonlinear constraints.\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/29/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/29/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/21", "repository_url": "https://api.github.com/repos/Pyomo/pyomo", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/Pyomo/pyomo/issues/21/comments", "events_url": "https://api.github.com/repos/Pyomo/pyomo/issues/21/events", "html_url": "https://github.com/Pyomo/pyomo/issues/21", "id": 170877097, "node_id": "MDU6SXNzdWUxNzA4NzcwOTc=", "number": 21, "title": "stdout and stderr ordering issues when streaming solver output", "user": {"login": "carldlaird", "id": 18519762, "node_id": "MDQ6VXNlcjE4NTE5NzYy", "avatar_url": "https://avatars.githubusercontent.com/u/18519762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carldlaird", "html_url": "https://github.com/carldlaird", "followers_url": "https://api.github.com/users/carldlaird/followers", "following_url": "https://api.github.com/users/carldlaird/following{/other_user}", "gists_url": "https://api.github.com/users/carldlaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/carldlaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carldlaird/subscriptions", "organizations_url": "https://api.github.com/users/carldlaird/orgs", "repos_url": "https://api.github.com/users/carldlaird/repos", "events_url": "https://api.github.com/users/carldlaird/events{/privacy}", "received_events_url": "https://api.github.com/users/carldlaird/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383669303, "node_id": "MDU6TGFiZWwzODM2NjkzMDM=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 838460744, "node_id": "MDU6TGFiZWw4Mzg0NjA3NDQ=", "url": "https://api.github.com/repos/Pyomo/pyomo/labels/pyomo.solvers", "name": "pyomo.solvers", "color": "d4b3ef", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Pyomo/pyomo/milestones/2", "html_url": "https://github.com/Pyomo/pyomo/milestone/2", "labels_url": "https://api.github.com/repos/Pyomo/pyomo/milestones/2/labels", "id": 1813435, "node_id": "MDk6TWlsZXN0b25lMTgxMzQzNQ==", "number": 2, "title": "Pyomo 5.x", "description": null, "creator": {"login": "whart222", "id": 728056, "node_id": "MDQ6VXNlcjcyODA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/728056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whart222", "html_url": "https://github.com/whart222", "followers_url": "https://api.github.com/users/whart222/followers", "following_url": "https://api.github.com/users/whart222/following{/other_user}", "gists_url": "https://api.github.com/users/whart222/gists{/gist_id}", "starred_url": "https://api.github.com/users/whart222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whart222/subscriptions", "organizations_url": "https://api.github.com/users/whart222/orgs", "repos_url": "https://api.github.com/users/whart222/repos", "events_url": "https://api.github.com/users/whart222/events{/privacy}", "received_events_url": "https://api.github.com/users/whart222/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2016-06-07T13:22:00Z", "updated_at": "2022-06-28T22:15:21Z", "due_on": null, "closed_at": "2022-06-28T22:15:21Z"}, "comments": 3, "created_at": "2016-08-12T13:57:29Z", "updated_at": "2021-04-28T04:11:33Z", "closed_at": "2021-04-28T04:11:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I believe that the order of stdout and stderr is not preserved when streaming solver output.\n\nDetails:\nI have attached fm7.py. During solution of this problem, IPOPT (or rather ASL) encounters an evaluation error (sqrt of a negative number). The option \"halt_on_ampl_error\" is set to \"yes\", therefore there is an error printed to the console that indicates the problematic expression/constraint (from an ASL standpoint).\n\nHowever, this error does not appear at the end of the console output (when it actually occurred), but rather up in the middle of the output, leading to confusion of where this error occurred in the solution process. \n\nThis can be reproduced if IPOPT is installed (with MUMPS) using the following command:\n$ python fm7.py\nMy output from this command is stored in fm7.pyomo.out.\n\nIf we run the \".nl\" file manually with IPOPT, we see the correct ordering. The details of the error are printed at the end (along with the correct iteration where the error appeared). This can be reproduced with the following command:\n$ ipopt path/to/fm7.nl halt_on_ampl_error=yes\nMy output from this command is stored in fm7.ipopt_nl.out\n\nWhile ordering of stdout and stderr to the screen may not be guaranteed, I suspect that IPOPT manually flushes the stdout buffer to ensure the correct order. This is lost in Pyomo.\n\n[ticket.zip](https://github.com/Pyomo/pyomo/files/415438/ticket.zip)\n", "reactions": {"url": "https://api.github.com/repos/Pyomo/pyomo/issues/21/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Pyomo/pyomo/issues/21/timeline", "performed_via_github_app": null, "state_reason": "completed"}]