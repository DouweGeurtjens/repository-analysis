[{"url": "https://api.github.com/repos/tiangolo/fastapi/issues/9387", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/9387/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/9387/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/9387/events", "html_url": "https://github.com/tiangolo/fastapi/issues/9387", "id": 1666868267, "node_id": "I_kwDOCZduT85jWmQr", "number": 9387, "title": "`Query` default value cannot be set in `Annotated` when using `APIRouter`", "user": {"login": "tiangolo", "id": 1326112, "node_id": "MDQ6VXNlcjEzMjYxMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1326112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiangolo", "html_url": "https://github.com/tiangolo", "followers_url": "https://api.github.com/users/tiangolo/followers", "following_url": "https://api.github.com/users/tiangolo/following{/other_user}", "gists_url": "https://api.github.com/users/tiangolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiangolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiangolo/subscriptions", "organizations_url": "https://api.github.com/users/tiangolo/orgs", "repos_url": "https://api.github.com/users/tiangolo/repos", "events_url": "https://api.github.com/users/tiangolo/events{/privacy}", "received_events_url": "https://api.github.com/users/tiangolo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-04-13T17:45:00Z", "updated_at": "2023-04-13T19:36:36Z", "closed_at": "2023-04-13T19:36:35Z", "author_association": "OWNER", "active_lock_reason": null, "body": "### Discussed in https://github.com/tiangolo/fastapi/discussions/9279\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **tlinhart** March 19, 2023</sup>\r\n\r\nThis is a confirmed bug. :bug: There's a fix in https://github.com/tiangolo/fastapi/pull/9315.\r\n\r\n### First Check\r\n\r\n- [X] I added a very descriptive title here.\r\n- [X] I used the GitHub search to find a similar question and didn't find it.\r\n- [X] I searched the FastAPI documentation, with the integrated search.\r\n- [X] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n- [X] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n- [X] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/pydantic/pydantic).\r\n- [X] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n- [X] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n\r\n### Commit to Help\r\n\r\n- [X] I commit to help with one of those options \ud83d\udc46\r\n\r\n### Example Code\r\n\r\n```python\r\n# main.py\r\n\r\nfrom fastapi import FastAPI\r\nfrom router import router\r\n\r\napp = FastAPI()\r\napp.include_router(router)\r\n\r\n# router.py\r\n\r\nfrom typing import Annotated\r\nfrom fastapi import APIRouter, Query\r\n\r\nrouter = APIRouter()\r\n\r\n@router.get(\"/\")\r\nasync def root(*, n: Annotated[float, Query()] = 50):\r\n    return {\"n\": n}\r\n```\r\n\r\n\r\n### Description\r\n\r\nWhen starting the Uvicorn server using `uvicorn main:app`, I receive:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/pasmen/tmp/x-annotated-query-router/./venv/bin/uvicorn\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/home/pasmen/tmp/x-annotated-query-router/venv/lib/python3.10/site-packages/click/core.py\", line 1130, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/home/pasmen/tmp/x-annotated-query-router/venv/lib/python3.10/site-packages/click/core.py\", line 1055, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/home/pasmen/tmp/x-annotated-query-router/venv/lib/python3.10/site-packages/click/core.py\", line 1404, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/home/pasmen/tmp/x-annotated-query-router/venv/lib/python3.10/site-packages/click/core.py\", line 760, in invoke\r\n    return __callback(*args, **kwargs)\r\n  File \"/home/pasmen/tmp/x-annotated-query-router/venv/lib/python3.10/site-packages/uvicorn/main.py\", line 403, in main\r\n    run(\r\n  File \"/home/pasmen/tmp/x-annotated-query-router/venv/lib/python3.10/site-packages/uvicorn/main.py\", line 568, in run\r\n    server.run()\r\n  File \"/home/pasmen/tmp/x-annotated-query-router/venv/lib/python3.10/site-packages/uvicorn/server.py\", line 59, in run\r\n    return asyncio.run(self.serve(sockets=sockets))\r\n  File \"/usr/lib/python3.10/asyncio/runners.py\", line 44, in run\r\n    return loop.run_until_complete(main)\r\n  File \"uvloop/loop.pyx\", line 1517, in uvloop.loop.Loop.run_until_complete\r\n  File \"/home/pasmen/tmp/x-annotated-query-router/venv/lib/python3.10/site-packages/uvicorn/server.py\", line 66, in serve\r\n    config.load()\r\n  File \"/home/pasmen/tmp/x-annotated-query-router/venv/lib/python3.10/site-packages/uvicorn/config.py\", line 471, in load\r\n    self.loaded_app = import_from_string(self.app)\r\n  File \"/home/pasmen/tmp/x-annotated-query-router/venv/lib/python3.10/site-packages/uvicorn/importer.py\", line 21, in import_from_string\r\n    module = importlib.import_module(module_str)\r\n  File \"/usr/lib/python3.10/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1050, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 1027, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 688, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 883, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\r\n  File \"/home/pasmen/tmp/x-annotated-query-router/main.py\", line 5, in <module>\r\n    app.include_router(router)\r\n  File \"/home/pasmen/tmp/x-annotated-query-router/venv/lib/python3.10/site-packages/fastapi/applications.py\", line 427, in include_router\r\n    self.router.include_router(\r\n  File \"/home/pasmen/tmp/x-annotated-query-router/venv/lib/python3.10/site-packages/fastapi/routing.py\", line 782, in include_router\r\n    self.add_api_route(\r\n  File \"/home/pasmen/tmp/x-annotated-query-router/venv/lib/python3.10/site-packages/fastapi/routing.py\", line 600, in add_api_route\r\n    route = route_class(\r\n  File \"/home/pasmen/tmp/x-annotated-query-router/venv/lib/python3.10/site-packages/fastapi/routing.py\", line 446, in __init__\r\n    self.dependant = get_dependant(path=self.path_format, call=self.endpoint)\r\n  File \"/home/pasmen/tmp/x-annotated-query-router/venv/lib/python3.10/site-packages/fastapi/dependencies/utils.py\", line 303, in get_dependant\r\n    type_annotation, depends, param_field = analyze_param(\r\n  File \"/home/pasmen/tmp/x-annotated-query-router/venv/lib/python3.10/site-packages/fastapi/dependencies/utils.py\", line 387, in analyze_param\r\n    assert field_info.default is Undefined or field_info.default is Required, (\r\nAssertionError: `Query` default value cannot be set in `Annotated` for 'n'. Set the default value with `=` instead.\r\n```\r\n\r\n### Operating System\r\n\r\nLinux\r\n\r\n### Operating System Details\r\n\r\n`lsb_release -a`:\r\n\r\n```\r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 22.04.2 LTS\r\nRelease:\t22.04\r\nCodename:\tjammy\r\n```\r\n\r\n### FastAPI Version\r\n\r\n0.95.0\r\n\r\n### Python Version\r\n\r\nPython 3.10.6\r\n\r\n### Additional Context\r\n\r\nThis should work according to the [documentation about default values](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#default-values). Also, it works when not using `APIRouter` but having the path operation directly on `app`.</div>", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/9387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/9387/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/9246", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/9246/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/9246/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/9246/events", "html_url": "https://github.com/tiangolo/fastapi/issues/9246", "id": 1620339127, "node_id": "I_kwDOCZduT85glGm3", "number": 9246, "title": "New lifespan context manager has a typing error, detected by `mypy` in apps (users' code)", "user": {"login": "tiangolo", "id": 1326112, "node_id": "MDQ6VXNlcjEzMjYxMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1326112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiangolo", "html_url": "https://github.com/tiangolo", "followers_url": "https://api.github.com/users/tiangolo/followers", "following_url": "https://api.github.com/users/tiangolo/following{/other_user}", "gists_url": "https://api.github.com/users/tiangolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiangolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiangolo/subscriptions", "organizations_url": "https://api.github.com/users/tiangolo/orgs", "repos_url": "https://api.github.com/users/tiangolo/repos", "events_url": "https://api.github.com/users/tiangolo/events{/privacy}", "received_events_url": "https://api.github.com/users/tiangolo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Question or problem"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-03-12T12:02:51Z", "updated_at": "2023-03-22T10:11:21Z", "closed_at": "2023-03-22T10:11:20Z", "author_association": "OWNER", "active_lock_reason": null, "body": "### Discussed in https://github.com/tiangolo/fastapi/discussions/9241\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **kthy** March 11, 2023</sup>\r\n### First Check\r\n\r\n- [X] I added a very descriptive title here.\r\n- [X] I used the GitHub search to find a similar question and didn't find it.\r\n- [X] I searched the FastAPI documentation, with the integrated search.\r\n- [X] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n- [X] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n- [X] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/pydantic/pydantic).\r\n- [X] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n- [X] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n\r\n### Commit to Help\r\n\r\n- [X] I commit to help with one of those options \ud83d\udc46\r\n\r\n### Example Code\r\n\r\n```python\r\nfrom collections.abc import AsyncGenerator\r\nfrom contextlib import asynccontextmanager\r\n\r\nfrom fastapi import FastAPI\r\n\r\n\r\n@asynccontextmanager\r\nasync def lifespan(_: FastAPI) -> AsyncGenerator[None, None]:\r\n    ...\r\n    yield\r\n    ...\r\n\r\n\r\napp = FastAPI(lifespan=lifespan)\r\n```\r\n\r\n\r\n### Description\r\n\r\nI have taken the [example from the docs of the lifespan async context manager](https://fastapi.tiangolo.com/advanced/events/#lifespan) - new in 0.93 - shaved it down to the bare minimum, and added typing hints.\r\n\r\nWhen running this code through mypy-1.1.1 it complains about the type of the `lifespan()` context manager:\r\n\r\n```bash\r\n$ pipenv run mypy lifespan_example.py\r\nLoading .env environment variables...\r\nlifespan_example.py:14: error:\r\n  Argument \"lifespan\" to \"FastAPI\" has incompatible type \r\n    \"Callable[[FastAPI], _AsyncGeneratorContextManager[None]]\";\r\n  expected\r\n    \"Union[Callable[[Starlette], AbstractAsyncContextManager[None]], Callable[[Starlette], AbstractAsyncContextManager[Mapping[str, Any]]], None]\"  [arg-type]\r\nFound 1 error in 1 file (checked 1 source file)\r\n```\r\n\r\nI am unsure whether this is an issue with FastAPI, mypy, contextlib, or me. \ud83e\udd37 \r\n\r\n### Operating System\r\n\r\nLinux\r\n\r\n### Operating System Details\r\n\r\nUbuntu 20.04 running in WSL2.\r\n\r\n### FastAPI Version\r\n\r\n0.94\r\n\r\n### Python Version\r\n\r\n3.10.8\r\n\r\n### Additional Context\r\n\r\n_No response_</div>\r\n\r\n---\r\n\r\nThis is solved in Starlette with https://github.com/encode/starlette/pull/2077 and in FastAPI with https://github.com/tiangolo/fastapi/pull/9245 which will be released right after.", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/9246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/9246/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/9245", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/9245/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/9245/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/9245/events", "html_url": "https://github.com/tiangolo/fastapi/pull/9245", "id": 1620337118, "node_id": "PR_kwDOCZduT85L1cTU", "number": 9245, "title": "\ud83c\udfa8 Fix types for lifespan, upgrade Starlette to 0.26.1", "user": {"login": "tiangolo", "id": 1326112, "node_id": "MDQ6VXNlcjEzMjYxMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1326112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiangolo", "html_url": "https://github.com/tiangolo", "followers_url": "https://api.github.com/users/tiangolo/followers", "following_url": "https://api.github.com/users/tiangolo/following{/other_user}", "gists_url": "https://api.github.com/users/tiangolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiangolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiangolo/subscriptions", "organizations_url": "https://api.github.com/users/tiangolo/orgs", "repos_url": "https://api.github.com/users/tiangolo/repos", "events_url": "https://api.github.com/users/tiangolo/events{/privacy}", "received_events_url": "https://api.github.com/users/tiangolo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2023-03-12T11:57:02Z", "updated_at": "2023-03-14T02:42:36Z", "closed_at": "2023-03-14T02:19:05Z", "author_association": "OWNER", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/tiangolo/fastapi/pulls/9245", "html_url": "https://github.com/tiangolo/fastapi/pull/9245", "diff_url": "https://github.com/tiangolo/fastapi/pull/9245.diff", "patch_url": "https://github.com/tiangolo/fastapi/pull/9245.patch", "merged_at": "2023-03-14T02:19:05Z"}, "body": "\ud83c\udfa8 Fix types for lifespan, depends on https://github.com/encode/starlette/pull/2077", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/9245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/9245/timeline", "performed_via_github_app": null, "state_reason": null}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/5861", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/5861/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/5861/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/5861/events", "html_url": "https://github.com/tiangolo/fastapi/issues/5861", "id": 1525365311, "node_id": "I_kwDOCZduT85a6zo_", "number": 5861, "title": "fastapi.exceptions.FastAPIError: Invalid args for response field! Hint: check that <class 'starlette.responses.JSONResponse'> is a valid pydantic field type", "user": {"login": "zadigus", "id": 8761254, "node_id": "MDQ6VXNlcjg3NjEyNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8761254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zadigus", "html_url": "https://github.com/zadigus", "followers_url": "https://api.github.com/users/zadigus/followers", "following_url": "https://api.github.com/users/zadigus/following{/other_user}", "gists_url": "https://api.github.com/users/zadigus/gists{/gist_id}", "starred_url": "https://api.github.com/users/zadigus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zadigus/subscriptions", "organizations_url": "https://api.github.com/users/zadigus/orgs", "repos_url": "https://api.github.com/users/zadigus/repos", "events_url": "https://api.github.com/users/zadigus/events{/privacy}", "received_events_url": "https://api.github.com/users/zadigus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2023-01-09T11:05:37Z", "updated_at": "2023-02-23T18:01:47Z", "closed_at": "2023-02-06T11:08:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First Check\n\n- [X] I added a very descriptive title to this issue.\n- [X] I used the GitHub search to find a similar issue and didn't find it.\n- [X] I searched the FastAPI documentation, with the integrated search.\n- [X] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\n- [X] I already read and followed all the tutorial in the docs and didn't find an answer.\n- [X] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\n- [X] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\n- [X] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\n\n### Commit to Help\n\n- [X] I commit to help with one of those options \ud83d\udc46\n\n### Example Code\n\n```python\nimport logging\r\n\r\nfrom fastapi import APIRouter\r\nfrom fastapi.responses import JSONResponse\r\n\r\nliveness = True\r\n\r\nrouter = APIRouter()\r\n\r\n\r\n@router.get(\r\n    \"/livez\",\r\n    summary=\"Liveness probe\",\r\n    description=\"Returns 200 if the service is alive\",\r\n)\r\nasync def get_liveness() -> JSONResponse:\r\n    logging.debug(\"GET /livez\")\r\n    if liveness:\r\n        return JSONResponse(status_code=200, content={\"status\": \"ok\"})\r\n    else:\r\n        return JSONResponse(status_code=500, content={\"status\": \"not ok\"})\n```\n\n\n### Description\n\nWith version 0.88.0, my unit tests run fine, I get no error. With version 0.89.0, I get the following error:\r\n\r\n```\r\n/root/.pyenv/versions/3.8/lib/python3.8/importlib/__init__.py:127: in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n<frozen importlib._bootstrap>:1014: in _gcd_import\r\n    ???\r\n<frozen importlib._bootstrap>:991: in _find_and_load\r\n    ???\r\n<frozen importlib._bootstrap>:975: in _find_and_load_unlocked\r\n    ???\r\n<frozen importlib._bootstrap>:671: in _load_unlocked\r\n    ???\r\n/root/.pyenv/versions/3.8/lib/python3.8/site-packages/_pytest/assertion/rewrite.py:168: in exec_module\r\n    exec(co, module.__dict__)\r\ntests/models/conftest.py:7: in <module>\r\n    from my_sample_lib.main import app\r\nmy_sample_lib/main.py:10: in <module>\r\n    from my_sample_lib.health.router import router as health_router\r\nmy_sample_lib/health/router.py:24: in <module>\r\n    async def get_liveness() -> JSONResponse:\r\n/root/.pyenv/versions/3.8/lib/python3.8/site-packages/fastapi/routing.py:633: in decorator\r\n    self.add_api_route(\r\n/root/.pyenv/versions/3.8/lib/python3.8/site-packages/fastapi/routing.py:572: in add_api_route\r\n    route = route_class(\r\n/root/.pyenv/versions/3.8/lib/python3.8/site-packages/fastapi/routing.py:400: in __init__\r\n    self.response_field = create_response_field(\r\n/root/.pyenv/versions/3.8/lib/python3.8/site-packages/fastapi/utils.py:90: in create_response_field\r\n    raise fastapi.exceptions.FastAPIError(\r\nE   fastapi.exceptions.FastAPIError: Invalid args for response field! Hint: check that <class 'starlette.responses.JSONResponse'> is a valid pydantic field type\r\n```\r\n\r\nThe only way I found to get rid of the error is to remove the type hint, which I don't really want. Also, I tried to follow the guidelines provided in [your documentation](https://fastapi.tiangolo.com/advanced/response-directly/) without success. \r\n\r\nInterestingly, the whole thing works fine (with the type hint and fastapi 0.89.0) under Windows 10. Under Ubuntu 22.10, it doesn't work at all (i.e. it provides the above message).\n\n### Operating System\n\nLinux\n\n### Operating System Details\n\nUnder Windows 10, it works like a charm. Under Ubuntu 22.10, it fails with the provided error above.\n\n### FastAPI Version\n\n0.89.0\n\n### Python Version\n\n3.8.12\n\n### Additional Context\n\nIt is also failing with python 3.9, and 3.10.", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/5861/reactions", "total_count": 10, "+1": 8, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 2}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/5861/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/5857", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/5857/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/5857/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/5857/events", "html_url": "https://github.com/tiangolo/fastapi/issues/5857", "id": 1524587957, "node_id": "I_kwDOCZduT85a3121", "number": 5857, "title": "In fastapi==0.89.0 add_api_route fails with FileResponse", "user": {"login": "DannyVarod", "id": 3163137, "node_id": "MDQ6VXNlcjMxNjMxMzc=", "avatar_url": "https://avatars.githubusercontent.com/u/3163137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DannyVarod", "html_url": "https://github.com/DannyVarod", "followers_url": "https://api.github.com/users/DannyVarod/followers", "following_url": "https://api.github.com/users/DannyVarod/following{/other_user}", "gists_url": "https://api.github.com/users/DannyVarod/gists{/gist_id}", "starred_url": "https://api.github.com/users/DannyVarod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DannyVarod/subscriptions", "organizations_url": "https://api.github.com/users/DannyVarod/orgs", "repos_url": "https://api.github.com/users/DannyVarod/repos", "events_url": "https://api.github.com/users/DannyVarod/events{/privacy}", "received_events_url": "https://api.github.com/users/DannyVarod/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2023-01-08T16:50:56Z", "updated_at": "2023-02-23T18:00:35Z", "closed_at": "2023-01-21T00:13:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First Check\n\n- [X] I added a very descriptive title to this issue.\n- [X] I used the GitHub search to find a similar issue and didn't find it.\n- [X] I searched the FastAPI documentation, with the integrated search.\n- [X] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\n- [X] I already read and followed all the tutorial in the docs and didn't find an answer.\n- [X] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\n- [X] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\n- [X] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\n\n### Commit to Help\n\n- [X] I commit to help with one of those options \ud83d\udc46\n\n### Example Code\n\n```python\nfrom fastapi import FastAPI\r\nfrom fastapi.responses import FileResponse\r\n\r\nfrom pathlib2 import Path\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/favicon.ico\")\r\ndef favicon() -> FileResponse:\r\n    result = FileResponse(\r\n        path='C:\\\\TEMP\\\\favicon.ico', -- any valid path, this is an example for Windows\r\n        status_code=200,\r\n        media_type='image/png',\r\n        filename='favicon.ico',\r\n    )\r\n    return result\n```\n\n\n### Description\n\nWhen using FileResponse as documented here: https://fastapi.tiangolo.com/advanced/custom-response/#fileresponse\r\nand upgrading to fastapi==0.89.0 (works on 0.88.0) exception is thrown:\r\n\r\n   File \"/usr/local/lib/python3.7/site-packages/fastapi/routing.py\", line 658, in decorator\r\n     generate_unique_id_function=generate_unique_id_function,\r\n   File \"/usr/local/lib/python3.7/site-packages/fastapi/routing.py\", line 598, in add_api_route\r\n     generate_unique_id_function=current_generate_unique_id,\r\n   File \"/usr/local/lib/python3.7/site-packages/fastapi/routing.py\", line 401, in __init__\r\n     name=response_name, type_=self.response_model\r\n   File \"/usr/local/lib/python3.7/site-packages/fastapi/utils.py\", line 92, in create_response_field\r\n     ) from None\r\n fastapi.exceptions.FastAPIError: Invalid args for response field! Hint: check that <class 'starlette.responses.FileResponse'> is a valid pydantic field type\n\n### Operating System\n\nLinux, Windows\n\n### Operating System Details\n\nChecked on GitHub actions (Linux) with various FastAPI versions and Python 3.7.\r\nWith versions until 0.88.0 (including) this works. With 0.89.0 this fails.\r\nLocally using Python 3.7 above Windows 10 with various FastAPI versions (including 0.88.0, 0.89.0).\r\n\n\n### FastAPI Version\n\n0.89.0\n\n### Python Version\n\n3.7\n\n### Additional Context\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/5857/reactions", "total_count": 6, "+1": 6, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/5857/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/4949", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/4949/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/4949/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/4949/events", "html_url": "https://github.com/tiangolo/fastapi/issues/4949", "id": 1247758456, "node_id": "I_kwDOCZduT85KX0h4", "number": 4949, "title": "FastApi Error : \"RuntimeError: Response content longer than Content-Length\"", "user": {"login": "sidraw-sys", "id": 106232741, "node_id": "U_kgDOBlT7pQ", "avatar_url": "https://avatars.githubusercontent.com/u/106232741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sidraw-sys", "html_url": "https://github.com/sidraw-sys", "followers_url": "https://api.github.com/users/sidraw-sys/followers", "following_url": "https://api.github.com/users/sidraw-sys/following{/other_user}", "gists_url": "https://api.github.com/users/sidraw-sys/gists{/gist_id}", "starred_url": "https://api.github.com/users/sidraw-sys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sidraw-sys/subscriptions", "organizations_url": "https://api.github.com/users/sidraw-sys/orgs", "repos_url": "https://api.github.com/users/sidraw-sys/repos", "events_url": "https://api.github.com/users/sidraw-sys/events{/privacy}", "received_events_url": "https://api.github.com/users/sidraw-sys/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2022-05-25T08:38:42Z", "updated_at": "2023-02-22T16:35:35Z", "closed_at": "2022-09-22T00:17:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First Check\n\n- [X] I added a very descriptive title to this issue.\n- [X] I used the GitHub search to find a similar issue and didn't find it.\n- [X] I searched the FastAPI documentation, with the integrated search.\n- [X] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\n- [X] I already read and followed all the tutorial in the docs and didn't find an answer.\n- [X] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\n- [X] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\n- [X] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\n\n### Commit to Help\n\n- [X] I commit to help with one of those options \ud83d\udc46\n\n### Example Code\n\n```python\n#dummy list for posts\r\nmy_posts=[{\"title\":\"Post 1\",\"content\":\"Content of Post 1\",\"id\":1 },\r\n          {\"title\":\"Post 2\",\"content\":\"Content of Post 2\",\"id\":2 },\r\n          {\"title\":\"Post 3\",\"content\":\"Content of Post 3\",\"id\":3 }  \r\n         ]\r\n\r\n#function to get the index of the post which I am looking to delete by matching the ID\r\ndef find_index_post(id):\r\n    for i, p in enumerate(my_posts):\r\n        if p['id']==id:\r\n            return i\r\n\r\n#delete request created using FastApi\r\n@app.delete(\"/posts/{id}\",status_code=status.HTTP_204_NO_CONTENT)\r\ndef delete_post(id:int):\r\n    index=find_index_post(id)\r\n    if index==None:\r\n        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail=f\"Post with Id {id} does not \r\n        exist!\")\r\n    \r\n    my_posts.pop(index)\r\n    return Response(status_code=status.HTTP_404_NOT_FOUND)\n```\n\n\n### Description\n\nI have started learning FastApi recently and have been following one youtube tutorial for lessons.\r\n\r\nThe issue i have been facing with this code is whenever I run delete_post request on Postman I get below error on uvicorn server: \r\n             \"return Response(status_code=status.HTTP_204_NO_CONTENT)\r\n              TypeError: Response.__init__() got an unexpected keyword argument 'status_code'\" \r\nHowever, in the instructors video, this is working fine without any errors.\r\n\r\nI searched and found few issues related to this on here which I tried to follow but couldn't get myself to resolve the error. I tried following few solutions as provided inside below ISSUE ID but to no avail-\r\n          \" Response content longer than Content-Length error for DELETE and NoContent #4939\"\r\n\r\nThe two prominent errors I am getting are:\r\n- \"return Response(status_code=status.HTTP_204_NO_CONTENT)\r\n   TypeError: Response.__init__() got an unexpected keyword argument 'status_code'\r\n   ***This is the original code which i am following from the youtube lesson\r\n\r\n- raise RuntimeError(\"Response content longer than Content-Length\")\r\n   RuntimeError: Response content longer than Content-Length\r\n  ***This is the error i am getting when I try to follow the solution provided in Issue id \"4939\".\r\n \r\n\r\n  \r\nKindly assist, Thanks!\r\n\r\n\n\n### Operating System\n\nWindows\n\n### Operating System Details\n\n_No response_\n\n### FastAPI Version\n\n0.78.0\n\n### Python Version\n\nPython 3.10.4\n\n### Additional Context\n\nNA", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/4949/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/4949/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/4939", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/4939/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/4939/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/4939/events", "html_url": "https://github.com/tiangolo/fastapi/issues/4939", "id": 1244915501, "node_id": "I_kwDOCZduT85KM-ct", "number": 4939, "title": "Response content longer than Content-Length error for DELETE and NoContent", "user": {"login": "myslak71", "id": 43068450, "node_id": "MDQ6VXNlcjQzMDY4NDUw", "avatar_url": "https://avatars.githubusercontent.com/u/43068450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/myslak71", "html_url": "https://github.com/myslak71", "followers_url": "https://api.github.com/users/myslak71/followers", "following_url": "https://api.github.com/users/myslak71/following{/other_user}", "gists_url": "https://api.github.com/users/myslak71/gists{/gist_id}", "starred_url": "https://api.github.com/users/myslak71/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/myslak71/subscriptions", "organizations_url": "https://api.github.com/users/myslak71/orgs", "repos_url": "https://api.github.com/users/myslak71/repos", "events_url": "https://api.github.com/users/myslak71/events{/privacy}", "received_events_url": "https://api.github.com/users/myslak71/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2022-05-23T10:05:51Z", "updated_at": "2023-02-23T17:57:12Z", "closed_at": "2022-09-03T16:40:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First Check\r\n\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I used the GitHub search to find a similar issue and didn't find it.\r\n- [X] I searched the FastAPI documentation, with the integrated search.\r\n- [X] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n- [X] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n- [X] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n- [X] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n- [X] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n\r\n### Commit to Help\r\n\r\n- [X] I commit to help with one of those options \ud83d\udc46\r\n\r\n### Example Code\r\n\r\n```python\r\nfrom fastapi import FastAPI, status\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.delete(\"/\", status_code=status.HTTP_204_NO_CONTENT)\r\ndef read_root():\r\n    return None\r\n```\r\n\r\n\r\n### Description\r\n\r\nUpon requesting above code I got expected response but my logs shows that there is an error in uvicorn. The problem exists for DELETE method and NoContent response status code (for HEAD there is no such problem)\r\n\r\n```INFO:     127.0.0.1:46932 - \"DELETE / HTTP/1.1\" 204 No Content\r\nERROR:    Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"/home/user/PycharmProjects/sample_app/venv/lib/python3.9/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 372, in run_asgi\r\n    result = await app(self.scope, self.receive, self.send)\r\n  File \"/home/user/PycharmProjects/sample_app/venv/lib/python3.9/site-packages/uvicorn/middleware/proxy_headers.py\", line 75, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"/home/user/PycharmProjects/sample_app/venv/lib/python3.9/site-packages/fastapi/applications.py\", line 269, in __call__\r\n    await super().__call__(scope, receive, send)\r\n  File \"/home/user/PycharmProjects/sample_app/venv/lib/python3.9/site-packages/starlette/applications.py\", line 124, in __call__\r\n    await self.middleware_stack(scope, receive, send)\r\n  File \"/home/user/PycharmProjects/sample_app/venv/lib/python3.9/site-packages/starlette/middleware/errors.py\", line 184, in __call__\r\n    raise exc\r\n  File \"/home/user/PycharmProjects/sample_app/venv/lib/python3.9/site-packages/starlette/middleware/errors.py\", line 162, in __call__\r\n    await self.app(scope, receive, _send)\r\n  File \"/home/user/PycharmProjects/sample_app/venv/lib/python3.9/site-packages/starlette/exceptions.py\", line 93, in __call__\r\n    raise exc\r\n  File \"/home/user/PycharmProjects/sample_app/venv/lib/python3.9/site-packages/starlette/exceptions.py\", line 82, in __call__\r\n    await self.app(scope, receive, sender)\r\n  File \"/home/user/PycharmProjects/sample_app/venv/lib/python3.9/site-packages/fastapi/middleware/asyncexitstack.py\", line 21, in __call__\r\n    raise e\r\n  File \"/home/user/PycharmProjects/sample_app/venv/lib/python3.9/site-packages/fastapi/middleware/asyncexitstack.py\", line 18, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"/home/user/PycharmProjects/sample_app/venv/lib/python3.9/site-packages/starlette/routing.py\", line 670, in __call__\r\n    await route.handle(scope, receive, send)\r\n  File \"/home/user/PycharmProjects/sample_app/venv/lib/python3.9/site-packages/starlette/routing.py\", line 266, in handle\r\n    await self.app(scope, receive, send)\r\n  File \"/home/user/PycharmProjects/sample_app/venv/lib/python3.9/site-packages/starlette/routing.py\", line 68, in app\r\n    await response(scope, receive, send)\r\n  File \"/home/user/PycharmProjects/sample_app/venv/lib/python3.9/site-packages/starlette/responses.py\", line 162, in __call__\r\n    await send({\"type\": \"http.response.body\", \"body\": self.body})\r\n  File \"/home/user/PycharmProjects/sample_app/venv/lib/python3.9/site-packages/starlette/exceptions.py\", line 79, in sender\r\n    await send(message)\r\n  File \"/home/user/PycharmProjects/sample_app/venv/lib/python3.9/site-packages/starlette/middleware/errors.py\", line 159, in _send\r\n    await send(message)\r\n  File \"/home/user/PycharmProjects/sample_app/venv/lib/python3.9/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 501, in send\r\n    raise RuntimeError(\"Response content longer than Content-Length\")\r\nRuntimeError: Response content longer than Content-Length```\r\n\r\n### Operating System\r\n\r\nLinux\r\n\r\n### Operating System Details\r\n\r\n_No response_\r\n\r\n### FastAPI Version\r\n\r\n0.78.0\r\n\r\n### Python Version\r\n\r\n3.10\r\n\r\n### Additional Context\r\n\r\n_No response_", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/4939/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/4939/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/4050", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/4050/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/4050/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/4050/events", "html_url": "https://github.com/tiangolo/fastapi/issues/4050", "id": 1026581967, "node_id": "I_kwDOCZduT849MGXP", "number": 4050, "title": "GZip Middleware Throws \"Response content longer than Content-Length\" when given a 304 empty-body response", "user": {"login": "nicknotfun", "id": 12446413, "node_id": "MDQ6VXNlcjEyNDQ2NDEz", "avatar_url": "https://avatars.githubusercontent.com/u/12446413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicknotfun", "html_url": "https://github.com/nicknotfun", "followers_url": "https://api.github.com/users/nicknotfun/followers", "following_url": "https://api.github.com/users/nicknotfun/following{/other_user}", "gists_url": "https://api.github.com/users/nicknotfun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicknotfun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicknotfun/subscriptions", "organizations_url": "https://api.github.com/users/nicknotfun/orgs", "repos_url": "https://api.github.com/users/nicknotfun/repos", "events_url": "https://api.github.com/users/nicknotfun/events{/privacy}", "received_events_url": "https://api.github.com/users/nicknotfun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2021-10-14T16:12:30Z", "updated_at": "2023-02-23T17:13:28Z", "closed_at": "2022-11-21T00:16:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First Check\n\n- [X] I added a very descriptive title to this issue.\n- [X] I used the GitHub search to find a similar issue and didn't find it.\n- [X] I searched the FastAPI documentation, with the integrated search.\n- [X] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\n- [X] I already read and followed all the tutorial in the docs and didn't find an answer.\n- [X] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\n- [X] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\n- [X] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\n\n### Commit to Help\n\n- [X] I commit to help with one of those options \ud83d\udc46\n\n### Example Code\n\n```python\nfrom typing import Awaitable, Callable\r\n\r\nfrom fastapi import FastAPI\r\nfrom fastapi.middleware.gzip import GZipMiddleware\r\nfrom starlette.requests import Request\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.middleware(\"http\")\r\nasync def noop_middleware(request: Request, call_next: Callable[[Request], Awaitable]):\r\n    return await call_next(request)\r\n\r\n\r\n@app.get(\"/\", status_code=304)\r\ndef youve_seen_this_before():\r\n    pass\r\n\r\n\r\napp.add_middleware(GZipMiddleware)\n```\n\n\n### Description\n\ncurl -sH \"Accept-Encoding: gzip\" localhost:8000\r\n\r\nThis will reliably:\r\na) Give the expected 304 empty response.\r\nb) Show a stack trace \"Response content longer than Content-Length\"\r\n\r\nThe root cause I believe is the base middleware (in this example the noop one) creates a StreamingResponse for what is ultimately an empty response, it consists of two streaming chunks (\"\", more=True), (\"\", more=False); which bypasses the minimum length check in the GZip middleware.\r\n\r\nGZip then compresses the 'nothing' resulting in the GZip minimum boilerplate, but an expected content length of 0 then throws. This is post-response so the client wont see the error but the server will.\n\n### Operating System\n\nLinux, macOS\n\n### Operating System Details\n\nDon't think this is relevant.\n\n### FastAPI Version\n\n0.63.0\n\n### Python Version\n\n 3.8.10\n\n### Additional Context\n\nThis is actually the root cause of issue: https://github.com/tiangolo/fastapi/issues/2818\r\n\r\nIn the case of that issue the trigger is the StaticFiles mount has not-modified support, and on getting a non-modified static resource returns a 304. I suspect the original issue reporter stopped running into it either as a by-product of not getting 304 as often, or alternatively changing their middleware so as not to create the StreamingResponse.", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/4050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/4050/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/3790", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/3790/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/3790/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/3790/events", "html_url": "https://github.com/tiangolo/fastapi/issues/3790", "id": 982872758, "node_id": "MDU6SXNzdWU5ODI4NzI3NTg=", "number": 3790, "title": "validation_error_definition schema is incorrect when detecting an error in an array", "user": {"login": "silversurfer34", "id": 20322025, "node_id": "MDQ6VXNlcjIwMzIyMDI1", "avatar_url": "https://avatars.githubusercontent.com/u/20322025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/silversurfer34", "html_url": "https://github.com/silversurfer34", "followers_url": "https://api.github.com/users/silversurfer34/followers", "following_url": "https://api.github.com/users/silversurfer34/following{/other_user}", "gists_url": "https://api.github.com/users/silversurfer34/gists{/gist_id}", "starred_url": "https://api.github.com/users/silversurfer34/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/silversurfer34/subscriptions", "organizations_url": "https://api.github.com/users/silversurfer34/orgs", "repos_url": "https://api.github.com/users/silversurfer34/repos", "events_url": "https://api.github.com/users/silversurfer34/events{/privacy}", "received_events_url": "https://api.github.com/users/silversurfer34/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2021-08-30T14:44:54Z", "updated_at": "2023-02-22T16:19:34Z", "closed_at": "2022-04-28T00:21:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First Check\n\n- [X] I added a very descriptive title to this issue.\n- [X] I used the GitHub search to find a similar issue and didn't find it.\n- [X] I searched the FastAPI documentation, with the integrated search.\n- [X] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\n- [X] I already read and followed all the tutorial in the docs and didn't find an answer.\n- [X] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\n- [X] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\n- [X] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\n\n### Commit to Help\n\n- [X] I commit to help with one of those options \ud83d\udc46\n\n### Example Code\n\n```python\nfrom typing import Optional, List\r\n\r\nfrom fastapi import FastAPI\r\nfrom pydantic import BaseModel\r\n\r\nclass SubItem(BaseModel):\r\n    price: float\r\n\r\nclass Item(BaseModel):\r\n    price_list: Optional[List[SubItem]] = None\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.post(\"/items/\")\r\nasync def create_item(item: Item):\r\n    return item\n```\n\n\n### Description\n\nRun the sample program and call the /items/ api with this body:\r\n```\r\n{\r\n  \"price_list\": [\r\n    {\r\n      \"price\": \"zero\"\r\n    }\r\n  ]\r\n}\r\n```\r\nYou will get a 422 like this \r\n\r\n```\r\n{\r\n  \"detail\": [\r\n    {\r\n      \"loc\": [\r\n        \"body\",\r\n        \"price_list\",\r\n        0,\r\n        \"price\"\r\n      ],\r\n      \"msg\": \"value is not a valid float\",\r\n      \"type\": \"type_error.float\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nBut this 422 response does not follow the validation_error_definition schema :\r\n```\r\nvalidation_error_definition = {\r\n    \"title\": \"ValidationError\",\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n        \"loc\": {\"title\": \"Location\", \"type\": \"array\", \"items\": {\"type\": \"string\"}},\r\n        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\r\n        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\r\n    },\r\n    \"required\": [\"loc\", \"msg\", \"type\"],\r\n}\r\n```\r\n\r\nSo the 422 response from fastapi does not respect the schema of the response... \r\n\r\nThe issue comes from the error in the array, pydantic returns 0 as index of the error, but it is not a string, it is an integer. And it makes sense to return an integer, otherwise we wouldn't know if it is a key in a dict or an index.\r\n\r\nAs a developer I can workaround this issue by redefining validation_error_definition in my own code\r\n\r\n\r\n```\r\nfrom fastapi.openapi.utils import validation_error_definition\r\n\r\nvalidation_error_definition[\"properties\"] = {\r\n    \"loc\": {\r\n        \"title\": \"Location\", \"type\": \"array\", \"items\": {\r\n            \"oneOf\": [\r\n                {\"type\": \"string\"},\r\n                {\"type\": \"integer\"}\r\n            ]\r\n        }\r\n    },\r\n    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\r\n    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\r\n}\r\n```\r\nBut it would be better to do the change directly in the code. What is your opinion ?\n\n### Operating System\n\nWindows\n\n### Operating System Details\n\n_No response_\n\n### FastAPI Version\n\n0.68.1\n\n### Python Version\n\n3.7.9\n\n### Additional Context\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/3790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/3790/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/3608", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/3608/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/3608/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/3608/events", "html_url": "https://github.com/tiangolo/fastapi/issues/3608", "id": 953025107, "node_id": "MDU6SXNzdWU5NTMwMjUxMDc=", "number": 3608, "title": "Returning `dataclass` with pydantic-compatible fields (e.g. datetime) fails for FastAPI >= 0.67", "user": {"login": "himbeles", "id": 7621724, "node_id": "MDQ6VXNlcjc2MjE3MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7621724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/himbeles", "html_url": "https://github.com/himbeles", "followers_url": "https://api.github.com/users/himbeles/followers", "following_url": "https://api.github.com/users/himbeles/following{/other_user}", "gists_url": "https://api.github.com/users/himbeles/gists{/gist_id}", "starred_url": "https://api.github.com/users/himbeles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/himbeles/subscriptions", "organizations_url": "https://api.github.com/users/himbeles/orgs", "repos_url": "https://api.github.com/users/himbeles/repos", "events_url": "https://api.github.com/users/himbeles/events{/privacy}", "received_events_url": "https://api.github.com/users/himbeles/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2021-07-26T15:27:30Z", "updated_at": "2023-02-22T16:32:42Z", "closed_at": "2022-08-27T09:32:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [x] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [x] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [x] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n<!-- \r\n\r\nI'm asking all this because answering questions and solving problems in GitHub issues consumes a lot of time. I end up not being able to add new features, fix bugs, review Pull Requests, etc. as fast as I wish because I have to spend too much time handling issues.\r\n\r\nAll that, on top of all the incredible help provided by a bunch of community members that give a lot of their time to come here and help others.\r\n\r\nThat's a lot of work they are doing, but if more FastAPI users came to help others like them just a little bit more, it would be much less effort for them (and you and me \ud83d\ude05).\r\n\r\n-->\r\n\r\n### Example & Description\r\n\r\nI have encountered an issue when returning `dataclass` responses with some pydantic-compatible (but incompatible with json encoder of Python standard library) fields, e.g. `datetime` objects or `pathlib` file paths.\r\n\r\nHere's a self-contained, [minimal, reproducible, example](https://stackoverflow.com/help/minimal-reproducible-example)  where I have added a `datetime` field to the  `Item` class in [tests/test_serialize_response_dataclass.py](tests/test_serialize_response_dataclass.py):\r\n\r\n```Python\r\nfrom datetime import datetime\r\nfrom fastapi import FastAPI\r\nfrom fastapi.testclient import TestClient\r\nfrom dataclasses import dataclass\r\n\r\napp = FastAPI()\r\n\r\n\r\n@dataclass\r\nclass Item:\r\n    name: str\r\n    date: datetime\r\n\r\n\r\n@app.get(\"/items/no-response-model/object\")\r\ndef get_no_response_model_object():\r\n    return Item(name=\"object\", date=datetime(2021, 7, 26))\r\n\r\n\r\nclient = TestClient(app)\r\n\r\n\r\ndef test_no_response_model_object():\r\n    response = client.get(\"/items/no-response-model/object\")\r\n    response.raise_for_status()\r\n    assert response.json() == {\r\n        \"name\": \"object\",\r\n        \"date\": datetime(2021, 7, 26).isoformat(),\r\n    }\r\n\r\n```\r\n\r\nI would \r\n* Run the test code snippet with Pydantic 0.67\r\n* I would expect it pass because datetime objects are compatible with Pydantic models\r\n* It fails with the following stack trace:\r\n```\r\nFail: TypeError: Object of type datetime is not JSON serializablepytest(./tests/test_serialize_response_dataclass_minimal_failing.py::test_no_response_model_object)\r\ntest_serialize_response_dataclass_minimal_failing.py(23, 5): test_no_response_model_object\r\ntest_serialize_response_dataclass_minimal_failing.py(24, 5): response = client.get(\"/items/no-response-model/object\")\r\nsessions.py(555, 9): return self.request('GET', url, **kwargs)\r\ntestclient.py(415, 9): return super().request(\r\nsessions.py(542, 9): resp = self.send(prep, **send_kwargs)\r\nsessions.py(655, 9): r = adapter.send(request, **kwargs)\r\ntestclient.py(243, 17): raise exc from None\r\ntestclient.py(240, 13): loop.run_until_complete(self.app(scope, receive, send))\r\nbase_events.py(642, 9): return future.result()\r\napplications.py(199, 17): await super().__call__(scope, receive, send)\r\napplications.py(112, 9): await self.middleware_stack(scope, receive, send)\r\nerrors.py(181, 13): raise exc from None\r\nerrors.py(159, 13): await self.app(scope, receive, _send)\r\nexceptions.py(82, 17): raise exc from None\r\nexceptions.py(71, 13): await self.app(scope, receive, sender)\r\nrouting.py(580, 17): await route.handle(scope, receive, send)\r\nrouting.py(241, 13): await self.app(scope, receive, send)\r\nrouting.py(52, 13): response = await func(request)\r\nrouting.py(243, 13): response = actual_response_class(response_data, **response_args)\r\nresponses.py(53, 9): self.body = self.render(content)\r\nresponses.py(161, 9): return json.dumps(\r\n__init__.py(234, 5): return cls(\r\nencoder.py(199, 9): chunks = self.iterencode(o, _one_shot=True)\r\nencoder.py(257, 9): return _iterencode(o, 0)\r\nencoder.py(179, 9): raise TypeError(f'Object of type {o.__class__.__name__} '\r\n```\r\n\r\nI have created a PR #3607 with an attempt to fix the issue and extend the existing tests in [tests/test_serialize_response_dataclass.py](tests/test_serialize_response_dataclass.py). \r\nWithout this PR, all tests in this updated file fail.\r\n\r\nNote that the example above and the extended tests also pass with a pre 0.67 version of FastApi (before official dataclass response support).\r\n\r\n### Environment\r\n\r\n* OS: [e.g. Linux / Windows / macOS]: macOS\r\n* FastAPI Version [e.g. 0.3.0]: 0.67.0\r\n* Python version: 3.9.6\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/3608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/3608/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/3381", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/3381/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/3381/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/3381/events", "html_url": "https://github.com/tiangolo/fastapi/issues/3381", "id": 923088352, "node_id": "MDU6SXNzdWU5MjMwODgzNTI=", "number": 3381, "title": "Does not work examples on page 'Testing'", "user": {"login": "manlix", "id": 16971147, "node_id": "MDQ6VXNlcjE2OTcxMTQ3", "avatar_url": "https://avatars.githubusercontent.com/u/16971147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manlix", "html_url": "https://github.com/manlix", "followers_url": "https://api.github.com/users/manlix/followers", "following_url": "https://api.github.com/users/manlix/following{/other_user}", "gists_url": "https://api.github.com/users/manlix/gists{/gist_id}", "starred_url": "https://api.github.com/users/manlix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manlix/subscriptions", "organizations_url": "https://api.github.com/users/manlix/orgs", "repos_url": "https://api.github.com/users/manlix/repos", "events_url": "https://api.github.com/users/manlix/events{/privacy}", "received_events_url": "https://api.github.com/users/manlix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-06-16T20:50:04Z", "updated_at": "2023-02-22T16:33:39Z", "closed_at": "2022-09-04T00:16:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Issue description:\r\n\r\nGot error running code examples from chapter [Testing](https://fastapi.tiangolo.com/tutorial/testing/):\r\n* Sub-chapter [Testing file](https://fastapi.tiangolo.com/tutorial/testing/#testing-file)\r\n* Sub-chapter [Testing: extended example](https://fastapi.tiangolo.com/tutorial/testing/#testing-extended-example)\r\n\r\n### Expected result:\r\n\r\nCode works properly.\r\n\r\n### Actual result:\r\n\r\nCode does not work.\r\n\r\nFor sub-chapter [Testing file](https://fastapi.tiangolo.com/tutorial/testing/#testing-file) got error:\r\n\r\n```\r\n    from .main import app\r\nE   ImportError: attempted relative import with no known parent package\r\n```\r\nFor sub-chapter [Testing: extended example](https://fastapi.tiangolo.com/tutorial/testing/#testing-extended-example) got error:\r\n\r\n```\r\n    from .main_b import app\r\nE   ImportError: attempted relative import with no known parent package\r\n```\r\n\r\n### Preconditions:\r\n\r\n* Python: **3.9.5**\r\n* FastAPI: **0.65.2**\r\n* pytest: **6.2.4**\r\n\r\n### How to reproduce (1st example):\r\n\r\nRun examples code from sub-chapter [Testing file](https://fastapi.tiangolo.com/tutorial/testing/#testing-file)\r\n\r\nCreate `main.py`:\r\n\r\n```python3\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/\")\r\nasync def read_main():\r\n    return {\"msg\": \"Hello World\"}\r\n```\r\n\r\nCreate `test_main.py`:\r\n```python3\r\nfrom fastapi.testclient import TestClient\r\n\r\nfrom .main import app\r\n\r\nclient = TestClient(app)\r\n\r\n\r\ndef test_read_main():\r\n    response = client.get(\"/\")\r\n    assert response.status_code == 200\r\n    assert response.json() == {\"msg\": \"Hello World\"}\r\n```\r\n\r\nAfter that run `pytest`:\r\n\r\n```bash\r\n$ pytest\r\n```\r\n\r\nGot error:\r\n\r\n```\r\n    from .main import app\r\nE   ImportError: attempted relative import with no known parent package\r\n```\r\n\r\n### How to reproduce (2nd example):\r\n\r\nRun example code from sub-chapter [Testing: extended example](https://fastapi.tiangolo.com/tutorial/testing/#testing-extended-example)\r\n\r\nCreate `main_b.py`\r\n\r\n```python3\r\nfrom typing import Optional\r\n\r\nfrom fastapi import FastAPI, Header, HTTPException\r\nfrom pydantic import BaseModel\r\n\r\nfake_secret_token = \"coneofsilence\"\r\n\r\nfake_db = {\r\n    \"foo\": {\"id\": \"foo\", \"title\": \"Foo\", \"description\": \"There goes my hero\"},\r\n    \"bar\": {\"id\": \"bar\", \"title\": \"Bar\", \"description\": \"The bartenders\"},\r\n}\r\n\r\napp = FastAPI()\r\n\r\n\r\nclass Item(BaseModel):\r\n    id: str\r\n    title: str\r\n    description: Optional[str] = None\r\n\r\n\r\n@app.get(\"/items/{item_id}\", response_model=Item)\r\nasync def read_main(item_id: str, x_token: str = Header(...)):\r\n    if x_token != fake_secret_token:\r\n        raise HTTPException(status_code=400, detail=\"Invalid X-Token header\")\r\n    if item_id not in fake_db:\r\n        raise HTTPException(status_code=404, detail=\"Item not found\")\r\n    return fake_db[item_id]\r\n\r\n\r\n@app.post(\"/items/\", response_model=Item)\r\nasync def create_item(item: Item, x_token: str = Header(...)):\r\n    if x_token != fake_secret_token:\r\n        raise HTTPException(status_code=400, detail=\"Invalid X-Token header\")\r\n    if item.id in fake_db:\r\n        raise HTTPException(status_code=400, detail=\"Item already exists\")\r\n    fake_db[item.id] = item\r\n    return item\r\n\r\n```\r\n\r\nCreate `test_main_b.py`:\r\n\r\n```python3\r\nfrom fastapi.testclient import TestClient\r\n\r\nfrom .main_b import app\r\n\r\nclient = TestClient(app)\r\n\r\n\r\ndef test_read_item():\r\n    response = client.get(\"/items/foo\", headers={\"X-Token\": \"coneofsilence\"})\r\n    assert response.status_code == 200\r\n    assert response.json() == {\r\n        \"id\": \"foo\",\r\n        \"title\": \"Foo\",\r\n        \"description\": \"There goes my hero\",\r\n    }\r\n\r\n\r\ndef test_read_item_bad_token():\r\n    response = client.get(\"/items/foo\", headers={\"X-Token\": \"hailhydra\"})\r\n    assert response.status_code == 400\r\n    assert response.json() == {\"detail\": \"Invalid X-Token header\"}\r\n\r\n\r\ndef test_read_inexistent_item():\r\n    response = client.get(\"/items/baz\", headers={\"X-Token\": \"coneofsilence\"})\r\n    assert response.status_code == 404\r\n    assert response.json() == {\"detail\": \"Item not found\"}\r\n\r\n\r\ndef test_create_item():\r\n    response = client.post(\r\n        \"/items/\",\r\n        headers={\"X-Token\": \"coneofsilence\"},\r\n        json={\"id\": \"foobar\", \"title\": \"Foo Bar\", \"description\": \"The Foo Barters\"},\r\n    )\r\n    assert response.status_code == 200\r\n    assert response.json() == {\r\n        \"id\": \"foobar\",\r\n        \"title\": \"Foo Bar\",\r\n        \"description\": \"The Foo Barters\",\r\n    }\r\n\r\n\r\ndef test_create_item_bad_token():\r\n    response = client.post(\r\n        \"/items/\",\r\n        headers={\"X-Token\": \"hailhydra\"},\r\n        json={\"id\": \"bazz\", \"title\": \"Bazz\", \"description\": \"Drop the bazz\"},\r\n    )\r\n    assert response.status_code == 400\r\n    assert response.json() == {\"detail\": \"Invalid X-Token header\"}\r\n\r\n\r\ndef test_create_existing_item():\r\n    response = client.post(\r\n        \"/items/\",\r\n        headers={\"X-Token\": \"coneofsilence\"},\r\n        json={\r\n            \"id\": \"foo\",\r\n            \"title\": \"The Foo ID Stealers\",\r\n            \"description\": \"There goes my stealer\",\r\n        },\r\n    )\r\n    assert response.status_code == 400\r\n    assert response.json() == {\"detail\": \"Item already exists\"}\r\n```\r\n\r\nAfter that run `pytest`:\r\n\r\n```bash\r\n$ pytest\r\n```\r\n\r\nGot error:\r\n\r\n```\r\n    from .main_b import app\r\nE   ImportError: attempted relative import with no known parent package\r\n```\r\n\r\n### The cause of the problem:\r\n\r\nCreated code is not a part of package \u2014 there isn't `__init__.py` inside current directory.\r\n\r\n### Solution:\r\n\r\nThere is small fix in PR #3380 for docs.", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/3381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/3381/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/2832", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/2832/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/2832/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/2832/events", "html_url": "https://github.com/tiangolo/fastapi/issues/2832", "id": 811058719, "node_id": "MDU6SXNzdWU4MTEwNTg3MTk=", "number": 2832, "title": "FastAPI always returns content, even if 204 no content status code is set.", "user": {"login": "aviramha", "id": 41201924, "node_id": "MDQ6VXNlcjQxMjAxOTI0", "avatar_url": "https://avatars.githubusercontent.com/u/41201924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aviramha", "html_url": "https://github.com/aviramha", "followers_url": "https://api.github.com/users/aviramha/followers", "following_url": "https://api.github.com/users/aviramha/following{/other_user}", "gists_url": "https://api.github.com/users/aviramha/gists{/gist_id}", "starred_url": "https://api.github.com/users/aviramha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aviramha/subscriptions", "organizations_url": "https://api.github.com/users/aviramha/orgs", "repos_url": "https://api.github.com/users/aviramha/repos", "events_url": "https://api.github.com/users/aviramha/events{/privacy}", "received_events_url": "https://api.github.com/users/aviramha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2021-02-18T12:33:31Z", "updated_at": "2023-02-22T16:35:17Z", "closed_at": "2022-09-14T00:18:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [x] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [x] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [x] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n### Example\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\nfrom starlette.status import HTTP_204_NO_CONTENT\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/\", status_code=HTTP_204_NO_CONTENT)\r\ndef read_root():\r\n    print(\"d\")\r\n```\r\n\r\n\r\n\r\n### Description\r\n\r\nSend a request with any HTTP Client, observe the traffic using tcpdump/wireshark - you'll see that you get null as a response (content-length will be 4). This is extremely notable as this caused this issue https://github.com/encode/httpx/issues/1474 (The client doesn't expect any data in that case)\r\nI would expect FastAPI to not return null when response is None.\r\n\r\n### Environment\r\n\r\n* OS: macOS\r\n* FastAPI Version [e.g. 0.3.0]: 0.63.0\r\n* Python version: 0.63.0", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/2832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/2832/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/2719", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/2719/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/2719/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/2719/events", "html_url": "https://github.com/tiangolo/fastapi/issues/2719", "id": 796475170, "node_id": "MDU6SXNzdWU3OTY0NzUxNzA=", "number": 2719, "title": "`response_model` does not invalidate `None`", "user": {"login": "hukkin", "id": 3275109, "node_id": "MDQ6VXNlcjMyNzUxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3275109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hukkin", "html_url": "https://github.com/hukkin", "followers_url": "https://api.github.com/users/hukkin/followers", "following_url": "https://api.github.com/users/hukkin/following{/other_user}", "gists_url": "https://api.github.com/users/hukkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/hukkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hukkin/subscriptions", "organizations_url": "https://api.github.com/users/hukkin/orgs", "repos_url": "https://api.github.com/users/hukkin/repos", "events_url": "https://api.github.com/users/hukkin/events{/privacy}", "received_events_url": "https://api.github.com/users/hukkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2021-01-29T00:19:06Z", "updated_at": "2023-03-04T15:10:45Z", "closed_at": "2023-03-04T15:10:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Example\r\n```python\r\nfrom fastapi import FastAPI\r\n\r\nfrom pydantic import BaseModel\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\nclass RespModel(BaseModel):\r\n    example_field: str\r\n\r\n\r\n@app.get(\"/\", response_model=RespModel)\r\ndef get_resp():\r\n    return None\r\n```\r\n\r\n### Description\r\n\r\n<!-- Replace the content below with your own problem, question, or error -->\r\n\r\n* Open the browser and call the endpoint `/`.\r\n* It returns a JSON with `null`, with HTTP code 200 OK.\r\n* But I expected it to return HTTP 500, since I don't see how `None` is a valid `RespModel` .\r\n\r\n### Environment\r\n\r\n* OS: Linux\r\n* FastAPI Version: 0.63.0\r\n* Python version: 3.8.6\r\n\r\n\r\n### Additional context\r\nI'm not sure if this is a bug, or expected behavior. I tried to look for expected behavior in [the docs](https://fastapi.tiangolo.com/tutorial/response-model/) but didn't find.\r\n\r\nIf this is expected, is there perhaps a way in the API to make FastAPI invalidate `None` when `response_model` is set?\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/2719/reactions", "total_count": 2, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/2719/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/2639", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/2639/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/2639/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/2639/events", "html_url": "https://github.com/tiangolo/fastapi/issues/2639", "id": 784468737, "node_id": "MDU6SXNzdWU3ODQ0Njg3Mzc=", "number": 2639, "title": "prefix parameter in APIRouter does not work for websocket", "user": {"login": "schen96", "id": 54648193, "node_id": "MDQ6VXNlcjU0NjQ4MTkz", "avatar_url": "https://avatars.githubusercontent.com/u/54648193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schen96", "html_url": "https://github.com/schen96", "followers_url": "https://api.github.com/users/schen96/followers", "following_url": "https://api.github.com/users/schen96/following{/other_user}", "gists_url": "https://api.github.com/users/schen96/gists{/gist_id}", "starred_url": "https://api.github.com/users/schen96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schen96/subscriptions", "organizations_url": "https://api.github.com/users/schen96/orgs", "repos_url": "https://api.github.com/users/schen96/repos", "events_url": "https://api.github.com/users/schen96/events{/privacy}", "received_events_url": "https://api.github.com/users/schen96/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2021-01-12T18:17:57Z", "updated_at": "2023-02-22T16:19:48Z", "closed_at": "2022-04-28T00:21:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Replace the code below with your own self-contained, minimal, reproducible, example, if I (or someone) can copy it, run it, and see it right away, there's a much higher chance I (or someone) will be able to help you -->\r\n```Python\r\n# main.py\r\nfrom fastapi import FastAPI\r\nimport myroute\r\n\r\nimport myroute\r\napp = FastAPI()\r\napp.include_router(myroute.router)\r\n\r\n@app.get(\"/\")\r\nasync def root():\r\n    return {\"message\": \"hello world!!\"}\r\n```\r\n\r\n```Python\r\n# myroute.py\r\nfrom fastapi import APIRouter\r\n\r\nrouter = APIRouter(prefix=\"/prefix\")\r\n\r\n# you'd expect ws://localhost:800/prefix/ws to work but only ws://localhost:800/ws connects\r\n@router.websocket(\"/ws\")\r\nasync def websocket_endpoint(websocket: WebSocket):\r\n\r\n    await websocket.accept()\r\n    await websocket.send_text(\"hi\")\r\n    await websocket.close()\r\n\r\n# this works fine if you go to http://localhost:8000/prefix\r\n@router.get(\"/\")\r\ndef read_root():\r\n    return {\"Hello\": \"World\"}\r\n```\r\n\r\n\r\n### Description\r\n\r\n<!-- Replace the content below with your own problem, question, or error -->\r\n\r\nHi,\r\n\r\nSo with APIRouter(), the prefix path does not seem to be prepended to the websocket router path. \r\nNot sure if its by design but if it is I feel like its quite misleading\r\n\r\n### Environment\r\n\r\n* OS: macOS Catalina 10.15.4\r\n* FastAPI Version: 0.63.0\r\n\r\n* Python version: 3.8.2\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/2639/reactions", "total_count": 13, "+1": 13, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/2639/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1986", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1986/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1986/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1986/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1986", "id": 688388469, "node_id": "MDU6SXNzdWU2ODgzODg0Njk=", "number": 1986, "title": "Unable to get custom json serialization for enums to work", "user": {"login": "viveksunder", "id": 2992221, "node_id": "MDQ6VXNlcjI5OTIyMjE=", "avatar_url": "https://avatars.githubusercontent.com/u/2992221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viveksunder", "html_url": "https://github.com/viveksunder", "followers_url": "https://api.github.com/users/viveksunder/followers", "following_url": "https://api.github.com/users/viveksunder/following{/other_user}", "gists_url": "https://api.github.com/users/viveksunder/gists{/gist_id}", "starred_url": "https://api.github.com/users/viveksunder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viveksunder/subscriptions", "organizations_url": "https://api.github.com/users/viveksunder/orgs", "repos_url": "https://api.github.com/users/viveksunder/repos", "events_url": "https://api.github.com/users/viveksunder/events{/privacy}", "received_events_url": "https://api.github.com/users/viveksunder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-28T22:29:34Z", "updated_at": "2023-02-22T15:02:07Z", "closed_at": "2022-02-03T00:09:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there! We are using pydantic to define our API models and have a use-case where certain fields stored in our database (mongodb) are enums and need to be translated into an API/user friendly representation. We tried the following in order to solve this problem -\r\n\r\n* Define a common enum base class\r\n* Define a common pydantic model base class\r\n* Define a `class Config` section in the above pydantic base class that will implement serialization for our enums.\r\n\r\n```\r\nimport enum\r\n\r\n\r\nimport pydantic\r\nfrom fastapi.encoders import jsonable_encoder\r\n\r\n\r\nclass BaseEnum(enum.Enum):\r\n    \"\"\"\r\n    A base class for all enums that require custom serialization.\r\n    \"\"\"\r\n\r\n    def get_api_repr(self):\r\n        \"\"\"\r\n        All inheriting classes must implement `def get_api_repr`\r\n        \"\"\"\r\n        raise NotImplementedError\r\n\r\n\r\nclass SomeStatusEnum(BaseEnum):\r\n    ACTIVE = \"ACTIVE\"\r\n    INACTIVE = \"INACTIVE\"\r\n\r\n    def get_api_repr(self):\r\n        \"\"\"\r\n        Return an API friendly value.\r\n        \"\"\"\r\n        if self.value == self.ACTIVE.value:\r\n            return \"Active\"\r\n\r\n        return \"Inactive\"\r\n\r\n\r\nclass AppBaseModel(pydantic.BaseModel):\r\n    \"\"\"\r\n    All app models should inherit from this base class\r\n    so they can benefit from common configuration.\r\n    \"\"\"\r\n\r\n    class Config:\r\n        json_encoders = {\r\n            BaseEnum: lambda v: v.get_api_repr(),\r\n        }\r\n\r\n\r\nclass CustomModel(AppBaseModel):\r\n    \"\"\" This does something custom ;) \"\"\"\r\n\r\n    status: SomeStatusEnum\r\n\r\n\r\nexample = CustomModel(status=SomeStatusEnum.ACTIVE)\r\nprint(jsonable_encoder(example))\r\n\r\n```\r\n\r\nOutput - \r\n```\r\n{'status': 'ACTIVE'}\r\n```\r\n\r\nWould expect -\r\n```\r\n{'status': 'Active'}\r\n```\r\n\r\n### Environment\r\n\r\n* OS: Linux\r\n* Python version: 3.8.5\r\n* FastAPI Version: 0.61.0\r\n* Pydantic Version: 1.6.1\r\n\r\nPS - We only recently started using FastAPI at work and we love it!!", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1986/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1986/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1545", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1545/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1545/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1545/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1545", "id": 636247337, "node_id": "MDU6SXNzdWU2MzYyNDczMzc=", "number": 1545, "title": "Documentation uses \u201csubtype\u201d incorrectly", "user": {"login": "yurikhan", "id": 238691, "node_id": "MDQ6VXNlcjIzODY5MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/238691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurikhan", "html_url": "https://github.com/yurikhan", "followers_url": "https://api.github.com/users/yurikhan/followers", "following_url": "https://api.github.com/users/yurikhan/following{/other_user}", "gists_url": "https://api.github.com/users/yurikhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurikhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurikhan/subscriptions", "organizations_url": "https://api.github.com/users/yurikhan/orgs", "repos_url": "https://api.github.com/users/yurikhan/repos", "events_url": "https://api.github.com/users/yurikhan/events{/privacy}", "received_events_url": "https://api.github.com/users/yurikhan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-10T13:28:32Z", "updated_at": "2023-02-22T12:04:40Z", "closed_at": "2020-06-23T00:16:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation uses the term \u201csubtype\u201d in the context of generic `typing` types.\r\n\r\nE.g. [here][1]:\r\n\r\n[1]: https://fastapi.tiangolo.com/python-types/#lists\r\n\r\n> As the list is a type that takes a \"subtype\", you put the subtype in square brackets:\r\n \r\nThe word *subtype* already has a defined meaning in the type theory; it is very close to *subclass* and Liskov Substitutability Principle, i.e. it declares a relationship between two types such that an instance of the subtype can be used in every scenario involving the supertype. `str` is most definitely *not* a subtype of `List`. (`List[str]`, however, is.)\r\n\r\nThe correct term for the thing in brackets is \u201cgeneric type arguments\u201d or \u201ctype args\u201d for short.", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1545/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1528", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1528/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1528/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1528/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1528", "id": 633356898, "node_id": "MDU6SXNzdWU2MzMzNTY4OTg=", "number": 1528, "title": "Override successful response", "user": {"login": "Kludex", "id": 7353520, "node_id": "MDQ6VXNlcjczNTM1MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/7353520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kludex", "html_url": "https://github.com/Kludex", "followers_url": "https://api.github.com/users/Kludex/followers", "following_url": "https://api.github.com/users/Kludex/following{/other_user}", "gists_url": "https://api.github.com/users/Kludex/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kludex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kludex/subscriptions", "organizations_url": "https://api.github.com/users/Kludex/orgs", "repos_url": "https://api.github.com/users/Kludex/repos", "events_url": "https://api.github.com/users/Kludex/events{/privacy}", "received_events_url": "https://api.github.com/users/Kludex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-06-07T12:11:05Z", "updated_at": "2023-02-24T13:15:35Z", "closed_at": "2020-06-26T00:18:08Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nOn the `responses` field in the route decorator we can't override the description of the successful response. Even on the tutorial we can see it: https://fastapi.tiangolo.com/advanced/additional-responses/\r\n\r\n### To Reproduce\r\n\r\n![image](https://user-images.githubusercontent.com/7353520/83968295-81a19f80-a8c8-11ea-8b2e-cce027582d17.png)\r\n![image](https://user-images.githubusercontent.com/7353520/83968299-88301700-a8c8-11ea-8d42-d0d9f2a1ec3c.png)\r\n\r\n### Expected behavior\r\n\r\nWe should have \"Item requested by ID\" in the description field for the code 200.\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1528/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1528/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1458", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1458/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1458/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1458/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1458", "id": 623573177, "node_id": "MDU6SXNzdWU2MjM1NzMxNzc=", "number": 1458, "title": "http 204 causes gunicorn shutdown on appengine [BUG]", "user": {"login": "therefromhere", "id": 197540, "node_id": "MDQ6VXNlcjE5NzU0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/197540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/therefromhere", "html_url": "https://github.com/therefromhere", "followers_url": "https://api.github.com/users/therefromhere/followers", "following_url": "https://api.github.com/users/therefromhere/following{/other_user}", "gists_url": "https://api.github.com/users/therefromhere/gists{/gist_id}", "starred_url": "https://api.github.com/users/therefromhere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/therefromhere/subscriptions", "organizations_url": "https://api.github.com/users/therefromhere/orgs", "repos_url": "https://api.github.com/users/therefromhere/repos", "events_url": "https://api.github.com/users/therefromhere/events{/privacy}", "received_events_url": "https://api.github.com/users/therefromhere/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-23T03:40:45Z", "updated_at": "2023-02-22T16:33:58Z", "closed_at": "2022-09-04T01:15:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nI've found that a simple endpoint with status_code=204 is causing gunicorn to shutdown when running on Google appengine.\r\n\r\nI suspect the bug is probably outside of FastAPI (eg maybe in uvicorn?), but I haven't yet managed to reproduce it with a simpler stack, and maybe this will help others with the same issue.\r\n\r\n### To Reproduce\r\n\r\n1. Create the following: \r\n\r\nmain.py:\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/\")\r\ndef read_root():\r\n    return {\"Hello\": \"World\"}\r\n\r\n\r\n@app.delete(\"/\", status_code=204)\r\ndef delete_root():\r\n    print(\"deleted a thing...\")\r\n    return \"\"\r\n```\r\nrequirements.txt:\r\n\r\n```\r\nfastapi\r\ngunicorn\r\nuvicorn\r\n```\r\n\r\napp.yaml:\r\n\r\n```\r\nruntime: python37\r\n\r\ninstance_class: F1\r\n\r\nentrypoint: gunicorn --bind :$PORT --workers 1 --worker-class uvicorn.workers.UvicornWorker main:app\r\n\r\nhandlers:\r\n    - url: /.*\r\n      secure: always\r\n      script: auto\r\n```\r\n\r\n2. Install gcloud cli, login to gcloud and then deploy to appengine with:\r\n\r\n```\r\ngcloud app deploy\r\n```\r\n\r\n3. Call the delete endpoint\r\n\r\n```\r\ncurl -XDELETE https://YOURPROJECT.appspot.com\r\n```\r\n\r\n4. It hangs for a couple of seconds and then returns an error like this:\r\n\r\n```\r\n<html><head>\r\n<meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\">\r\n<title>500 Server Error</title>\r\n</head>\r\n<body text=#000000 bgcolor=#ffffff>\r\n<h1>Error: Server Error</h1>\r\n<h2>The server encountered an error and could not complete your request.<p>Please try again in 30 seconds.</h2>\r\n<h2></h2>\r\n</body></html>\r\n```\r\nAnd logs as follows:\r\n\r\n```\r\n2020-05-23 15:08:11.658 NZST deleted a thing...\r\n2020-05-23 15:08:13.193 NZST [start] 2020/05/23 03:08:13.192900 Quitting on terminated signal\r\n2020-05-23 15:08:13.198 NZST [2020-05-23 03:08:13 +0000] [7] [INFO] Handling signal: term\r\n2020-05-23 15:08:13.259 NZST [2020-05-23 03:08:13 +0000] [15] [INFO] Shutting down\r\n2020-05-23 15:08:13.259 NZST [2020-05-23 03:08:13 +0000] [15] [INFO] Error while closing socket [Errno 9] Bad file descriptor\r\n2020-05-23 15:08:13.360 NZST [2020-05-23 03:08:13 +0000] [15] [INFO] Waiting for application shutdown.\r\n2020-05-23 15:08:13.360 NZST [2020-05-23 03:08:13 +0000] [15] [INFO] Application shutdown complete.\r\n2020-05-23 15:08:13.360 NZST [2020-05-23 03:08:13 +0000] [15] [INFO] Finished server process \r\n2020-05-23 15:08:13.361 NZST [2020-05-23 03:08:13 +0000] [15] [INFO] Worker exiting (pid: 15)\r\n2020-05-23 15:08:13.502 NZST [2020-05-23 03:08:13 +0000] [7] [INFO] Shutting down: Master\r\n2020-05-23 15:08:13.556 NZST [start] 2020/05/23 03:08:13.555603 Start program failed: termination triggered by nginx exit\r\n```\r\n\r\n5. But I expected it to return an empty body with http status 204.\r\n\r\nNote - changing status code to something else, eg 200 resolves the issue.\r\n\r\n### Expected behavior\r\n\r\nI expected an empty 204 response to be returned.\r\n\r\n### Environment\r\n\r\n- OS: Linux (appengine)\r\n\r\n- FastAPI Version \r\n\r\n0.54.2\r\n\r\n- Python version\r\n\r\n3.7 (whatever as used by appengine)\r\n\r\n\r\n### See also\r\n\r\nCross-post on the appengine issue tracker https://issuetracker.google.com/issues/157312477", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1458/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1458/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1440", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1440/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1440/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1440/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1440", "id": 621804748, "node_id": "MDU6SXNzdWU2MjE4MDQ3NDg=", "number": 1440, "title": "Overwriting HTTPException and RequestValidationError does not work via FastAPI exceptions handlers init", "user": {"login": "timbmg", "id": 11020443, "node_id": "MDQ6VXNlcjExMDIwNDQz", "avatar_url": "https://avatars.githubusercontent.com/u/11020443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timbmg", "html_url": "https://github.com/timbmg", "followers_url": "https://api.github.com/users/timbmg/followers", "following_url": "https://api.github.com/users/timbmg/following{/other_user}", "gists_url": "https://api.github.com/users/timbmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/timbmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timbmg/subscriptions", "organizations_url": "https://api.github.com/users/timbmg/orgs", "repos_url": "https://api.github.com/users/timbmg/repos", "events_url": "https://api.github.com/users/timbmg/events{/privacy}", "received_events_url": "https://api.github.com/users/timbmg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-05-20T14:23:54Z", "updated_at": "2023-02-24T13:16:03Z", "closed_at": "2021-05-16T18:30:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "When initilizing FastAPI, an exception_handlers dictionary can be passed, mapping Exceptions/Error Codes to callables. When using this method to set the exception handlers, the HTTPException and RequestValidationError can not be overwritten.\r\n\r\n### Code to Reproducte\r\n\r\n```Python\r\n\r\nimport logging\r\n\r\nimport uvicorn\r\nfrom fastapi import FastAPI, Request\r\nfrom fastapi.responses import JSONResponse\r\nfrom fastapi.exceptions import RequestValidationError\r\nfrom fastapi.exception_handlers import request_validation_exception_handler\r\n\r\n\r\nlogger = logging.getLogger(__name__)\r\n\r\n# app = FastAPI()\r\n# @app.exception_handler(RequestValidationError)\r\nasync def my_request_validation_exception_handler(\r\n    req: Request, exc: RequestValidationError\r\n):\r\n    logger.info(\"my_request_validation_exception_handler\")\r\n    return await request_validation_exception_handler(req, exc)\r\n\r\napp = FastAPI(exception_handlers={RequestValidationError: my_request_validation_exception_handler})\r\n\r\n@app.get(\"/test\")\r\ndef test(param: int):\r\n\r\n    return JSONResponse(\r\n        status_code=200,\r\n        content={\"message\": \"successful test with param {}\".format(param)},\r\n    )\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    uvicorn.run(\"api:app\", host=\"localhost\", port=2000, reload=True)\r\n\r\n```\r\n\r\nNow a `curl \"http://localhost:2000/test\"` will not show the `logger.info(\"my_request_validation_exception_handler\")` log statement. However, when using the commented out code it works fine. I want to use the other way to keep the handlers in a separate file.\r\n\r\n\r\n### Environment\r\n\r\n- OS: Windows/WSL\r\n- FastAPI Version: 0.54.2\r\n- Python version: 3.6.9\r\n\r\n\r\n### Origin\r\nAs far as i can see this is coming from the [setup method](https://github.com/tiangolo/fastapi/blob/601d8eb8098591df7b2b95d83d319a6f8931402d/fastapi/applications.py#L137-L140)\r\n```Python\r\nself.add_exception_handler(HTTPException, http_exception_handler)\r\nself.add_exception_handler(\r\n    RequestValidationError, request_validation_exception_handler\r\n)\r\n``` \r\nStarlette will overwrite the custom handlers in the [add_exception_handler method](https://github.com/encode/starlette/blob/41ad780073b3a0a815e0083ecf1a0cea38cb8105/starlette/applications.py#L128-L134)\r\n```Python\r\ndef add_exception_handler(\r\n        self,\r\n        exc_class_or_status_code: typing.Union[int, typing.Type[Exception]],\r\n        handler: typing.Callable,\r\n    ) -> None:\r\n        self.exception_handlers[exc_class_or_status_code] = handler\r\n        self.middleware_stack = self.build_middleware_stack()\r\n```\r\n\r\nWould be great if setup() could first check whether a handler for this exception exists already.", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1440/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1440/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1350", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1350/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1350/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1350/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1350", "id": 609104607, "node_id": "MDU6SXNzdWU2MDkxMDQ2MDc=", "number": 1350, "title": "\"Error getting request body\" should not be logged as an ERROR", "user": {"login": "dbanty", "id": 43723790, "node_id": "MDQ6VXNlcjQzNzIzNzkw", "avatar_url": "https://avatars.githubusercontent.com/u/43723790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbanty", "html_url": "https://github.com/dbanty", "followers_url": "https://api.github.com/users/dbanty/followers", "following_url": "https://api.github.com/users/dbanty/following{/other_user}", "gists_url": "https://api.github.com/users/dbanty/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbanty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbanty/subscriptions", "organizations_url": "https://api.github.com/users/dbanty/orgs", "repos_url": "https://api.github.com/users/dbanty/repos", "events_url": "https://api.github.com/users/dbanty/events{/privacy}", "received_events_url": "https://api.github.com/users/dbanty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-29T14:30:34Z", "updated_at": "2023-02-24T13:16:37Z", "closed_at": "2020-06-24T00:17:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nGenerally, the semantics of the \"ERROR\" log level seem to mean that there is an error in your code- not a client error. At least this is how I interpret it and how Sentry (popular error logging framework) interprets it by default.\r\n\r\nI believe that a client passing a bad input is an expected case for any API, that's why we have so much validation! I believe we should either not be logging anything at all in this case (to be consistent with other input validation errors, like Pydantic errors) or downgrade the logging level to still record _that_ it happened, without suggesting it's a problem that needs to be addressed in code.\r\n\r\nAccording to [this page](https://docs.python.org/3/howto/logging.html) in the Python docs, an \"ERROR\" levels should be used when \"Due to a more serious problem, the software has not been able to perform some function.\" I would argue that FastAPI is performing exactly its function by validating the input structure.\r\n\r\n### To Reproduce\r\n\r\n1. Create a file with:\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\nfrom fastapi.params import Body\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/\")\r\ndef read_root(strings: List[str] = Body(...)):\r\n    return {\"Hello\": \"World\"}\r\n```\r\n\r\n3. Open the browser and call the endpoint `/` with the payload {heelo: world} (or any malformed JSON).\r\n4. It returns a status 400 (as expected).\r\n5. An \"ERROR\" is logged, indicating to me and Sentry that there was a problem in our code.\r\n\r\n### Expected behavior\r\n\r\nEither nothing at all would be logged (because this is an expected case that could often happen) or the log level will be lower- indicating that it happened but that it's not necessarily a problem.\r\n\r\n\r\n### Environment\r\n\r\n- OS: macOS and Linux\r\n- FastAPI Version [e.g. 0.3.0], get it with:  0.52.0\r\n\r\n- Python version, get it with: 3.8.2\r\n\r\n### Additional context\r\n\r\nI'm currently filtering out this log with something like the following so that Sentry will stop alerting me to it:\r\n\r\n```python\r\nfrom fastapi import logger\r\n\r\nclass NoRequestErrorFilter:\r\n    def filter(self, record):\r\n        if record.msg.startswith(\"Error getting request body\"):\r\n            return 0\r\n        return 1\r\n\r\nlogger.logger.addFilter(NoRequestErrorFilter())\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1350/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1296", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1296/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1296/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1296/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1296", "id": 604049418, "node_id": "MDU6SXNzdWU2MDQwNDk0MTg=", "number": 1296, "title": "Typo in [EN] tutorial: body-fields", "user": {"login": "chenl", "id": 1677651, "node_id": "MDQ6VXNlcjE2Nzc2NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1677651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenl", "html_url": "https://github.com/chenl", "followers_url": "https://api.github.com/users/chenl/followers", "following_url": "https://api.github.com/users/chenl/following{/other_user}", "gists_url": "https://api.github.com/users/chenl/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenl/subscriptions", "organizations_url": "https://api.github.com/users/chenl/orgs", "repos_url": "https://api.github.com/users/chenl/repos", "events_url": "https://api.github.com/users/chenl/events{/privacy}", "received_events_url": "https://api.github.com/users/chenl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-21T14:36:03Z", "updated_at": "2023-02-24T13:16:57Z", "closed_at": "2020-05-17T10:37:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nThere is a typo in `fastapi/blob/master/docs/en/docs/tutorial/body-fields.md` under `## Add Extra Information:` \r\n\r\n> ...\r\n> You will learn more about it later to declare examples examples.\r\n\r\n### To Reproduce\r\n\r\nLook for `examples examples` in https://fastapi.tiangolo.com/tutorial/body-fields/#add-extra-information\r\n\r\n### Expected behavior\r\n\r\nIt should probably be a link to somewhere although it is not really clear where to.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1296/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1265", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1265/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1265/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1265/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1265", "id": 599803438, "node_id": "MDU6SXNzdWU1OTk4MDM0Mzg=", "number": 1265, "title": "Broken external link", "user": {"login": "DavidBord", "id": 3276118, "node_id": "MDQ6VXNlcjMyNzYxMTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3276118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidBord", "html_url": "https://github.com/DavidBord", "followers_url": "https://api.github.com/users/DavidBord/followers", "following_url": "https://api.github.com/users/DavidBord/following{/other_user}", "gists_url": "https://api.github.com/users/DavidBord/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidBord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidBord/subscriptions", "organizations_url": "https://api.github.com/users/DavidBord/orgs", "repos_url": "https://api.github.com/users/DavidBord/repos", "events_url": "https://api.github.com/users/DavidBord/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidBord/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1154536361, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYx", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-14T19:23:14Z", "updated_at": "2023-02-22T11:59:06Z", "closed_at": "2020-06-15T15:37:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://blog.bartab.fr/fastapi-logging-on-the-fly/ leads to: 404 page not found\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1265/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1224", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1224/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1224/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1224/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1224", "id": 596069202, "node_id": "MDU6SXNzdWU1OTYwNjkyMDI=", "number": 1224, "title": "jsonable_encoder is not async, can stall the event loop", "user": {"login": "sm-Fifteen", "id": 516999, "node_id": "MDQ6VXNlcjUxNjk5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/516999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sm-Fifteen", "html_url": "https://github.com/sm-Fifteen", "followers_url": "https://api.github.com/users/sm-Fifteen/followers", "following_url": "https://api.github.com/users/sm-Fifteen/following{/other_user}", "gists_url": "https://api.github.com/users/sm-Fifteen/gists{/gist_id}", "starred_url": "https://api.github.com/users/sm-Fifteen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sm-Fifteen/subscriptions", "organizations_url": "https://api.github.com/users/sm-Fifteen/orgs", "repos_url": "https://api.github.com/users/sm-Fifteen/repos", "events_url": "https://api.github.com/users/sm-Fifteen/events{/privacy}", "received_events_url": "https://api.github.com/users/sm-Fifteen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Question or problem"}, {"id": 4694364991, "node_id": "LA_kwDOCZduT88AAAABF85TPw", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/investigate", "name": "investigate", "color": "5319E7", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}, {"id": 5194404667, "node_id": "LA_kwDOCZduT88AAAABNZxTOw", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question-migrate", "name": "question-migrate", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-07T18:33:12Z", "updated_at": "2023-02-28T18:34:44Z", "closed_at": "2023-02-28T18:34:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nI was investigating 502 errors on an API server I'm developping using FastAPI. Basically, the server would intermittently stop responding for such long periods of time that the Apache reverse proxy in front of it would consider it offline and return a Bad Gateway error. I know this is usually a symptom that the event loop is stalled, so I looked through my own code to see if there was any point where I got the blocking/non-blocking routes wrong, and didn't really find much. However, when I looked at the profiler results (which reminds me I still need to get my profiler middleware out there), this stood out:\r\n\r\n(duration in milliseconds)\r\n> db_exec;dur=27717.296,\r\n> db_fetchone;dur=182.606,\r\n> 1deps;dur=0.516,\r\n> 3valid;dur=0.041,\r\n> **4encode;dur=6267.253**\r\n\r\nThat last one, `4encode`, is mapped to `jsonable_encoder`, which is a CPU-bound function run synchronously inside `serialize_response` (an async function). There is an assumption that `jsonable_encoder` (and/or whatever JSON renderer function is used) will never end up running for any significant amount of time, but if it does, the entire server will become unresponsive.\r\n\r\n### To Reproduce\r\n\r\nWhile the use case which causes me to encounter that bug has to do with encoding very large sets of complex data, I have a simpler use case which exploits the blocking nature of jsonable encoder:\r\n\r\n1. Create a file with:\r\n\r\n```py\r\nfrom fastapi import FastAPI\r\nfrom time import sleep\r\n\r\ndef blocking_iterator():\r\n    for num in range(10):\r\n        sleep(1)\r\n        yield num\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/slow\")\r\ndef blocks_on_encode():\r\n    # Serialized into a list, will block jsonable_encoder\r\n    # for 10 seconds and stall the whole event loop.\r\n    return blocking_iterator()\r\n```\r\n\r\n2. Open two browser tabs and call the endpoint `/slow` **twice**.\r\n3. The first tab returns after 10 seconds, while the second tab only returns 10 seconds later.\r\n4. Additionally, the server will not respond to any attempts to close it until the request it was busy encoding returns a response.\r\n\r\n### Expected behavior\r\n\r\nJSON encoding and rendering blocking the server is something I would consider highly undesirable for an async-focused framework. With that said, given how Python's GIL works, I don't know if jsonable_encoder can simply be moved into a thread, since jsonable_encoder would then simply block the GIL instead of blocking the event loop, which would end up being no different.\r\n\r\nJSON rendering could end up facing similar issues, though I have not yet tested them to see how long they may end up blocking the event loop and/or thread. None of the one I know of would work with threads:\r\n* The [`json` module in the standard library](https://github.com/python/cpython/blob/master/Lib/json/encoder.py) has [an accelerator module in C](https://github.com/python/cpython/blob/master/Modules/_json.c), though it does not release the GIL\r\n* ujson seemingly does not release the GIL, as evidenced by ultrajson/ultrajson#199\r\n* orjson doesn't seem to release the GIL anywhere either, though a handful of functions run with `pyo3::Python::assume_gil_acquired()` (which immediately panics if the current thread does not hold the GIL).\r\n\r\n----\r\n\r\nThis is rather tricky problem, I would say, and I personally can't think of a good solution for it at the moment given Python's limitations. At the very least, the documentation should acknowledge the problem and make it clear that encoding may not scale well for *extremely large* amounts of data, though I don't know if any of the other Python web frameworks fare much better in that regard, and if encoding volumes of data large enough to cause this issue to occur isn't actually considered bad practice in other frameworks regardless of the language.\r\n\r\nEDIT: I actually forgot that [the GIL still does *some* scheduling](https://www.dabeaz.com/python/UnderstandingGIL.pdf), so moving serialization to a separate thread might work to prevent computing tasks from blocking the server, even though it could still end up starving the main thread.\r\n\r\n### Environment\r\n\r\n- OS: Windows 10\r\n- FastAPI Version: 0.52.0\r\n- Python version: 3.8.2\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1224/reactions", "total_count": 4, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1224/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1221", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1221/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1221/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1221/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1221", "id": 596040930, "node_id": "MDU6SXNzdWU1OTYwNDA5MzA=", "number": 1221, "title": "tests with pydantic failing but not details", "user": {"login": "samuelcolvin", "id": 4039449, "node_id": "MDQ6VXNlcjQwMzk0NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/4039449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuelcolvin", "html_url": "https://github.com/samuelcolvin", "followers_url": "https://api.github.com/users/samuelcolvin/followers", "following_url": "https://api.github.com/users/samuelcolvin/following{/other_user}", "gists_url": "https://api.github.com/users/samuelcolvin/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuelcolvin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuelcolvin/subscriptions", "organizations_url": "https://api.github.com/users/samuelcolvin/orgs", "repos_url": "https://api.github.com/users/samuelcolvin/repos", "events_url": "https://api.github.com/users/samuelcolvin/events{/privacy}", "received_events_url": "https://api.github.com/users/samuelcolvin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-07T17:42:48Z", "updated_at": "2023-02-22T11:42:08Z", "closed_at": "2020-04-19T00:01:29Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "see [here](https://github.com/samuelcolvin/pydantic/pull/1344/checks?check_run_id=568360178) fastapi tests with pydantic are currently failing.\r\n\r\n**Problem 1:**  do we think this is pydantic related or something to do with fastapi? I currently only have python 3.8 on my laptop which is failing, so hard to check.\r\n\r\n**Problem 2:** the failure is on `assert response.status_code == 200` would be very helpful if there was some discipline on checks like this to do `assert response.status_code == 200, response.text` to aid in investigating problems - I'll submit a PR for this now.", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1221/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1209", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1209/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1209/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1209/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1209", "id": 593305511, "node_id": "MDU6SXNzdWU1OTMzMDU1MTE=", "number": 1209, "title": "Broken Links in Settings and Environment Variables Docs", "user": {"login": "Mohamed-Kaizen", "id": 35686076, "node_id": "MDQ6VXNlcjM1Njg2MDc2", "avatar_url": "https://avatars.githubusercontent.com/u/35686076?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mohamed-Kaizen", "html_url": "https://github.com/Mohamed-Kaizen", "followers_url": "https://api.github.com/users/Mohamed-Kaizen/followers", "following_url": "https://api.github.com/users/Mohamed-Kaizen/following{/other_user}", "gists_url": "https://api.github.com/users/Mohamed-Kaizen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mohamed-Kaizen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mohamed-Kaizen/subscriptions", "organizations_url": "https://api.github.com/users/Mohamed-Kaizen/orgs", "repos_url": "https://api.github.com/users/Mohamed-Kaizen/repos", "events_url": "https://api.github.com/users/Mohamed-Kaizen/events{/privacy}", "received_events_url": "https://api.github.com/users/Mohamed-Kaizen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-03T11:12:28Z", "updated_at": "2023-02-24T13:17:30Z", "closed_at": "2020-04-05T02:23:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Settings and Environment Variables Docs the link to  **Bigger Applications - Multiple Files.** doesn't work.\r\n\r\n![Screenshot from 2020-04-03 14-10-34](https://user-images.githubusercontent.com/35686076/78354658-f13b9b80-75b4-11ea-922e-9ed8abd5cf2f.png)\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1209/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1204", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1204/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1204/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1204/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1204", "id": 592074465, "node_id": "MDU6SXNzdWU1OTIwNzQ0NjU=", "number": 1204, "title": "Class based dependencies with __call__ don't work with yield", "user": {"login": "nmrtv", "id": 23192030, "node_id": "MDQ6VXNlcjIzMTkyMDMw", "avatar_url": "https://avatars.githubusercontent.com/u/23192030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nmrtv", "html_url": "https://github.com/nmrtv", "followers_url": "https://api.github.com/users/nmrtv/followers", "following_url": "https://api.github.com/users/nmrtv/following{/other_user}", "gists_url": "https://api.github.com/users/nmrtv/gists{/gist_id}", "starred_url": "https://api.github.com/users/nmrtv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nmrtv/subscriptions", "organizations_url": "https://api.github.com/users/nmrtv/orgs", "repos_url": "https://api.github.com/users/nmrtv/repos", "events_url": "https://api.github.com/users/nmrtv/events{/privacy}", "received_events_url": "https://api.github.com/users/nmrtv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-01T17:15:58Z", "updated_at": "2023-02-24T13:17:33Z", "closed_at": "2020-06-23T00:17:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nClass based callable dependencies (https://fastapi.tiangolo.com/advanced/advanced-dependencies/) don't work when used as generators with yield keyword.\r\n\r\n### To Reproduce\r\n\r\n```Python\r\nclass SessionScope:\r\n\r\n    def __init__(self, uri):\r\n        self.engine = create_engine(uri)\r\n        self.session_maker = scoped_session(sessionmaker(bind=self.engine))\r\n\r\n    def __call__(self):\r\n        session = self.session_maker()\r\n        try:\r\n            yield session\r\n        except:\r\n            session.rollback()\r\n            raise\r\n        finally:\r\n            self.session_maker.remove()\r\n\r\nget_db = SessionScope('postgresql://postgres:mypass@127.0.0.1:5432/my_db')\r\n\r\n@router.get('/', response_model=List[User])\r\ndef read_users(\r\n    db: Session = Depends(get_db),\r\n    skip: int = 0,\r\n    limit: int = 100,\r\n):\r\n    \"\"\"\r\n    Retrieve users.\r\n    \"\"\"\r\n    users = crud.user.get_multi(db, skip=skip, limit=limit)\r\n    return users\r\n```\r\n\r\n### Expected behavior\r\n\r\nDependency must return yielded session, but now it returns \\_\\_call\\_\\_ generator instance\r\n\r\n### Additional context\r\n\r\nThe problem lies in /fastapi/dependencies/utils.py file on line 498:\r\n```Python\r\n        elif inspect.isgeneratorfunction(call) or inspect.isasyncgenfunction(call):\r\n            stack = request.scope.get(\"fastapi_astack\")\r\n            if stack is None:\r\n                raise RuntimeError(\r\n                    async_contextmanager_dependencies_error\r\n                )  # pragma: no cover\r\n            solved = await solve_generator(\r\n                call=call, stack=stack, sub_values=sub_values\r\n            )\r\n```\r\nParamter _call_ passed to _inspect.isgeneratorfunction_ is instance of a class instead of it's \\_\\_call\\_\\_ method and this function always returns False. ", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1204/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1204/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1177", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1177/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1177/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1177/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1177", "id": 589586384, "node_id": "MDU6SXNzdWU1ODk1ODYzODQ=", "number": 1177, "title": "Can not add  new translation language for zh (Chinese)", "user": {"login": "waynerv", "id": 39515546, "node_id": "MDQ6VXNlcjM5NTE1NTQ2", "avatar_url": "https://avatars.githubusercontent.com/u/39515546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waynerv", "html_url": "https://github.com/waynerv", "followers_url": "https://api.github.com/users/waynerv/followers", "following_url": "https://api.github.com/users/waynerv/following{/other_user}", "gists_url": "https://api.github.com/users/waynerv/gists{/gist_id}", "starred_url": "https://api.github.com/users/waynerv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waynerv/subscriptions", "organizations_url": "https://api.github.com/users/waynerv/orgs", "repos_url": "https://api.github.com/users/waynerv/repos", "events_url": "https://api.github.com/users/waynerv/events{/privacy}", "received_events_url": "https://api.github.com/users/waynerv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-28T14:21:58Z", "updated_at": "2023-02-24T13:17:42Z", "closed_at": "2020-03-31T12:52:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nexecute `python ./scripts/docs.py new-lang zh` raise UnicodeDecodeError.\r\n\r\n### To Reproduce\r\n\r\nFollow the steps in documents to set up environment, then add a new language:\r\n\r\n1. Add a new language for \u201czh\u201d:\r\n\r\n```bash\r\npython ./scripts/docs.py new-lang zh\r\n```\r\n\r\n2. Raise:\r\n```\r\nTraceback (most recent call last):\r\n  File \"./scripts/docs.py\", line 338, in <module>\r\n    app()\r\n  File \"D:\\fastapi\\env\\lib\\site-packages\\typer\\main.py\", line 211, in __call__\r\n    return get_command(self)()\r\n  File \"D:\\fastapi\\env\\lib\\site-packages\\click\\core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"D:\\fastapi\\env\\lib\\site-packages\\click\\core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"D:\\fastapi\\env\\lib\\site-packages\\click\\core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"D:\\fastapi\\env\\lib\\site-packages\\click\\core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"D:\\fastapi\\env\\lib\\site-packages\\click\\core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"D:\\fastapi\\env\\lib\\site-packages\\typer\\main.py\", line 494, in wrapper\r\n    return callback(**use_params)  # type: ignore\r\n  File \"./scripts/docs.py\", line 98, in new_lang\r\n    en_index_content = en_index_path.read_text()\r\n  File \"C:\\Users\\amped\\AppData\\Local\\Programs\\Python\\Python38\\lib\\pathlib.py\", line 1215, in read_text\r\n    return f.read()\r\nUnicodeDecodeError: 'gbk' codec can't decode byte 0xa8 in position 5557: illegal multibyte sequence\r\n```\r\n### Workaround\r\n1. Add `encoding=\"utf-8\"` param for `read_text()` and `write_text()` in scripts/docs.py line 98,100 can fix this problem.\r\n```python\r\n    new_config[\"extra_javascript\"] = extra_js\r\n    new_config_path: Path = Path(new_path) / mkdocs_name\r\n    new_config_path.write_text(yaml.dump(new_config, sort_keys=False, width=200))\r\n    new_config_docs_path: Path = new_path / \"docs\"\r\n    new_config_docs_path.mkdir()\r\n    en_index_path: Path = en_docs_path / \"docs\" / \"index.md\"\r\n    new_index_path: Path = new_config_docs_path / \"index.md\"\r\n    en_index_content = en_index_path.read_text(encoding='utf-8')\r\n    new_index_content = f\"{missing_translation_snippet}\\n\\n{en_index_content}\"\r\n    new_index_path.write_text(new_index_content, encoding='utf-8')\r\n    typer.secho(f\"Successfully initialized: {new_path}\", color=typer.colors.GREEN)\r\n    update_languages(lang=None)\r\n```\r\n2. Result:\r\n```bash\r\npython ./scripts/docs.py new-lang zh\r\nSuccessfully initialized: docs\\zh\r\nUpdating en\r\nUpdating es\r\nUpdating zh\r\n```\r\n\r\nShould I create a PR for this?\r\n### Environment\r\n\r\n- OS: [Windows]\r\n- FastAPI Version [0.52.0], get it with:\r\n\r\n```bash\r\npython -c \"import fastapi; print(fastapi.__version__)\"\r\n```\r\n\r\n- Python version 3.8.0, get it with:\r\n\r\n```bash\r\npython --version\r\n```\r\n\r\n### Additional context\r\n\r\nAdd any other context about the problem here.\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1177/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1149", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1149/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1149/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1149/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1149", "id": 585432045, "node_id": "MDU6SXNzdWU1ODU0MzIwNDU=", "number": 1149, "title": "Example for GZipMiddleware", "user": {"login": "sagrawal-idrc", "id": 16095774, "node_id": "MDQ6VXNlcjE2MDk1Nzc0", "avatar_url": "https://avatars.githubusercontent.com/u/16095774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagrawal-idrc", "html_url": "https://github.com/sagrawal-idrc", "followers_url": "https://api.github.com/users/sagrawal-idrc/followers", "following_url": "https://api.github.com/users/sagrawal-idrc/following{/other_user}", "gists_url": "https://api.github.com/users/sagrawal-idrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagrawal-idrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagrawal-idrc/subscriptions", "organizations_url": "https://api.github.com/users/sagrawal-idrc/orgs", "repos_url": "https://api.github.com/users/sagrawal-idrc/repos", "events_url": "https://api.github.com/users/sagrawal-idrc/events{/privacy}", "received_events_url": "https://api.github.com/users/sagrawal-idrc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-21T05:07:55Z", "updated_at": "2023-02-24T14:26:34Z", "closed_at": "2020-04-13T18:38:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nExample for `GZipMiddleware` is instead for `TrustedHostMiddleware`.\r\n\r\n### To Reproduce\r\n\r\nPlease visit: https://fastapi.tiangolo.com/advanced/middleware/#gzipmiddleware\r\n\r\n### Expected behavior\r\n\r\nExample for `GZipMiddleware` should be available.\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1149/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1088", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1088/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1088/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1088/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1088", "id": 576947214, "node_id": "MDU6SXNzdWU1NzY5NDcyMTQ=", "number": 1088, "title": "Bad `loc` on validation error, if payload represended by one model", "user": {"login": "Dock1100", "id": 2865321, "node_id": "MDQ6VXNlcjI4NjUzMjE=", "avatar_url": "https://avatars.githubusercontent.com/u/2865321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dock1100", "html_url": "https://github.com/Dock1100", "followers_url": "https://api.github.com/users/Dock1100/followers", "following_url": "https://api.github.com/users/Dock1100/following{/other_user}", "gists_url": "https://api.github.com/users/Dock1100/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dock1100/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dock1100/subscriptions", "organizations_url": "https://api.github.com/users/Dock1100/orgs", "repos_url": "https://api.github.com/users/Dock1100/repos", "events_url": "https://api.github.com/users/Dock1100/events{/privacy}", "received_events_url": "https://api.github.com/users/Dock1100/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-06T13:54:55Z", "updated_at": "2023-02-22T12:05:52Z", "closed_at": "2020-06-25T00:18:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nReally like your framework, but there is, indeed, an annoying issue with `loc` on validation error with one object as payload.\r\n\r\n### To Reproduce\r\nCode sample\r\n```Python\r\nfrom typing import List\r\n\r\nfrom fastapi import FastAPI, Body\r\nfrom pydantic import BaseModel\r\napp = FastAPI()\r\n\r\nclass NameModel(BaseModel):\r\n    name: str\r\n\r\n@app.post(\"/test\", response_model=NameModel)\r\ndef test(obj: NameModel, ):  # bad\r\n    return obj\r\n\r\n@app.post(\"/test_embed\", response_model=NameModel)\r\ndef test(obj: NameModel = Body(..., embed=True)):  # ok\r\n    return obj\r\n\r\n@app.post(\"/test_multiple\", response_model=List[NameModel])\r\ndef test(obj1: NameModel, obj2: NameModel):  # ok\r\n    return obj1, obj2\r\n```\r\n\r\nWhen you make a request to endpoint (`/test`) with the wrong payload (e.g.: `{}`), it always includes the variable name into error location, despite it has no relation to request.\r\n\r\nIt makes no sense, moreover, it complicates the logic for error printing on fronted, because they just don't know and not required to know the name of the backend`s internal variable.\r\n\r\n```json\r\n{\r\n    \"detail\": [\r\n        {\r\n            \"loc\": [\r\n                \"body\",\r\n                \"obj\",\r\n                \"name\"\r\n            ],\r\n            \"msg\": \"field required\",\r\n            \"type\": \"value_error.missing\"\r\n        }\r\n    ]\r\n}\r\n```\r\nit should be\r\n```json\r\n{\r\n    \"detail\": [\r\n        {\r\n            \"loc\": [\r\n                \"body\",\r\n                \"name\"\r\n            ],\r\n            \"msg\": \"field required\",\r\n            \"type\": \"value_error.missing\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nWith the embedded object (`/test_embed`) or multiple objects (`/test_multiple`), it works as expected, putting the variable name into location, because it should be in the payload.\r\n\r\n### Expected behavior\r\n\r\nDon't include the variable name into location error, if it is not reflected in schema / not embedded / not expected to be in payload.\r\n\r\n### Environment\r\n\r\n- OS: macOS\r\n- FastAPI 0.52.0\r\n- Python 3.6.8\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1088/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1088/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1077", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1077/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1077/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1077/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1077", "id": 574735027, "node_id": "MDU6SXNzdWU1NzQ3MzUwMjc=", "number": 1077, "title": "OpenAPI incorrect if request body is consumed more than once", "user": {"login": "chbndrhnns", "id": 7534547, "node_id": "MDQ6VXNlcjc1MzQ1NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7534547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chbndrhnns", "html_url": "https://github.com/chbndrhnns", "followers_url": "https://api.github.com/users/chbndrhnns/followers", "following_url": "https://api.github.com/users/chbndrhnns/following{/other_user}", "gists_url": "https://api.github.com/users/chbndrhnns/gists{/gist_id}", "starred_url": "https://api.github.com/users/chbndrhnns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chbndrhnns/subscriptions", "organizations_url": "https://api.github.com/users/chbndrhnns/orgs", "repos_url": "https://api.github.com/users/chbndrhnns/repos", "events_url": "https://api.github.com/users/chbndrhnns/events{/privacy}", "received_events_url": "https://api.github.com/users/chbndrhnns/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-03T15:09:10Z", "updated_at": "2023-02-24T13:18:28Z", "closed_at": "2020-04-14T05:56:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nBoth endpoints in the test below accept the same request body. However, the OpenAPI spec looks different for `/nested-body` and suggests to wrap the `ProjectIn` fields in to a `project_in` key.\r\n\r\nDoing so fails the test (cf. `def test_nested_body_post_wrapped()`).\r\n\r\nThe bug occurs when you consume the body twice, like in the endpoint and in its dependency.\r\n\r\n### To Reproduce\r\n\r\nSteps to reproduce the behavior with a minimum self-contained file.\r\n\r\nReplace each part with your own scenario:\r\n\r\n1. Create a file `test_body.py`:\r\n\r\n<details><summary>Click to toggle content</summary>\r\n\r\n```python\r\nimport pytest\r\nfrom fastapi import FastAPI, Depends, Body\r\nfrom pydantic import BaseModel\r\nfrom starlette import status\r\nfrom starlette.testclient import TestClient\r\n\r\n\r\nclass ProjectIn(BaseModel):\r\n    name: str\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\nasync def dep(\r\n        project_in: ProjectIn = Body(...)\r\n):\r\n    pass\r\n\r\n\r\n@app.post(path='/nested-body')\r\ndef body_nested(\r\n        project_in: ProjectIn = Body(...),\r\n        dep: None = Depends(dep),\r\n):\r\n    ...\r\n\r\n\r\n@app.post(path='/normal-body')\r\ndef body_normal(\r\n        project_in: ProjectIn = Body(...)\r\n):\r\n    ...\r\n\r\n\r\n@pytest.fixture\r\ndef client():\r\n    yield TestClient(app)\r\n\r\n\r\ndef test_normal_body_post_returns_200_as_per_spec(client):\r\n    body = ProjectIn(name='abc').json()\r\n\r\n    res = client.post('/normal-body', data=body)\r\n\r\n    assert res.status_code == status.HTTP_200_OK\r\n\r\n\r\ndef test_nested_body_post_unwrapped_returns_error_as_per_spec(client):\r\n    body = ProjectIn(name='abc').json()\r\n\r\n    res = client.post('/nested-body', data=body)\r\n\r\n    assert res.status_code >= status.HTTP_400_BAD_REQUEST\r\n\r\n\r\ndef test_nested_body_post_wrapped_returns_200_as_per_spec(client):\r\n    body = {\r\n        'project_in': ProjectIn(name='abc').json()\r\n    }\r\n\r\n    res = client.post('/nested-body', data=body)\r\n\r\n    assert res.status_code == status.HTTP_200_OK\r\n\r\n\r\ndef test_body_spec_should_be_the_same_for_both_endpoints(client):\r\n    res = client.get('/openapi.json')\r\n\r\n    parsed = res.json()\r\n\r\n    assert 'ProjectIn' in \\\r\n           parsed['paths']['/normal-body']['post']['requestBody']['content']['application/json']['schema']['$ref']\r\n    assert 'ProjectIn' in \\\r\n           parsed['paths']['/nested-body']['post']['requestBody']['content']['application/json']['schema']['$ref']\r\n```\r\n\r\n</details>\r\n\r\n2. Run `pytest test_body.py`.\r\n\r\n### Expected behavior\r\n\r\nThe OpenAPI spec matches the actual behavior (`test_body_spec_should_be_the_same_for_both_endpoints` should pass).\r\n\r\nInstead, given tests assume that the openapi.json is correct:\r\n\r\n- `test_nested_body_post_unwrapped_returns_error_as_per_spec` should fail\r\n- `test_nested_body_post_wrapped_returns_200_as_per_spec` should pass\r\n\r\n\r\n### Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n### Environment\r\n\r\n- OS: macOS\r\n- FastAPI Version: 0.52.0\r\n- Python version: 3.7.6\r\n\r\n### Additional context\r\n\r\nAdd any other context about the problem here.\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1077/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1067", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1067/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1067/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1067/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1067", "id": 573671019, "node_id": "MDU6SXNzdWU1NzM2NzEwMTk=", "number": 1067, "title": "GZip Middleware documentation wrong", "user": {"login": "dbanty", "id": 43723790, "node_id": "MDQ6VXNlcjQzNzIzNzkw", "avatar_url": "https://avatars.githubusercontent.com/u/43723790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbanty", "html_url": "https://github.com/dbanty", "followers_url": "https://api.github.com/users/dbanty/followers", "following_url": "https://api.github.com/users/dbanty/following{/other_user}", "gists_url": "https://api.github.com/users/dbanty/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbanty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbanty/subscriptions", "organizations_url": "https://api.github.com/users/dbanty/orgs", "repos_url": "https://api.github.com/users/dbanty/repos", "events_url": "https://api.github.com/users/dbanty/events{/privacy}", "received_events_url": "https://api.github.com/users/dbanty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-02T02:06:38Z", "updated_at": "2023-02-22T11:37:28Z", "closed_at": "2020-04-13T15:11:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On the [advanced middleware](https://fastapi.tiangolo.com/advanced/middleware/) page, the example shows TrustedHostMiddleware instead.", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1067/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1067/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1063", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1063/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1063/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1063/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1063", "id": 573560726, "node_id": "MDU6SXNzdWU1NzM1NjA3MjY=", "number": 1063, "title": "Returning List[response_model] doesn't respect `response_model_exclude_unset `", "user": {"login": "Kilo59", "id": 13108583, "node_id": "MDQ6VXNlcjEzMTA4NTgz", "avatar_url": "https://avatars.githubusercontent.com/u/13108583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kilo59", "html_url": "https://github.com/Kilo59", "followers_url": "https://api.github.com/users/Kilo59/followers", "following_url": "https://api.github.com/users/Kilo59/following{/other_user}", "gists_url": "https://api.github.com/users/Kilo59/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kilo59/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kilo59/subscriptions", "organizations_url": "https://api.github.com/users/Kilo59/orgs", "repos_url": "https://api.github.com/users/Kilo59/repos", "events_url": "https://api.github.com/users/Kilo59/events{/privacy}", "received_events_url": "https://api.github.com/users/Kilo59/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-01T14:57:06Z", "updated_at": "2023-02-24T13:18:34Z", "closed_at": "2020-03-31T22:08:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nNot sure if this should be a Feature request or a bug.\r\n\r\nWhen returning a List of models, the response includes \"unset\" key/values when `response_model_exclude_unset` is set to `True`.\r\n\r\n### To Reproduce\r\n\r\n1. Create a file with:\r\n\r\n```Python\r\nimport pydantic\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\nclass Item(pydantic.BaseModel):\r\n    foobar: str = \"foobar\"\r\n    foo: str\r\n    bar: str = None\r\n\r\nALL_ITEMS = [Item(foo=\"foo0\"), Item(foo=\"foo1\"), Item(foo=\"foo2\")]\r\n\r\n@app .get(\"/items\", response_model=List[Item], response_model_exclude_unset=True)\r\ndef get_all_items():\r\n    return ALL_ITEMS\r\n\r\n@app .get(\"/items/{item_index}\", response_model=Item, response_model_exclude_unset=True)\r\ndef get_item(item_index: int):\r\n    return ALL_ITEMS[item_index]\r\n```\r\n\r\n3. Open the browser and call the endpoint `/items`.\r\n4. It returns a JSON with...\r\n```json\r\n[\r\n  {\r\n    \"foobar\": \"foobar\",\r\n    \"foo\": \"foo0\",\r\n    \"bar\": null\r\n  },\r\n  {\r\n    \"foobar\": \"foobar\",\r\n    \"foo\": \"foo1\",\r\n    \"bar\": null\r\n  },\r\n  {\r\n    \"foobar\": \"foobar\",\r\n    \"foo\": \"foo2\",\r\n    \"bar\": null\r\n  }\r\n]\r\n```\r\n5. But I expected it to return...\r\n```json\r\n[\r\n  {\r\n    \"foo\": \"foo0\"\r\n  },\r\n  {\r\n    \"foo\": \"foo1\"\r\n  },\r\n  {\r\n    \"foo\": \"foo2\"\r\n  }\r\n]\r\n```\r\n\r\n### Expected behavior\r\n\r\nI would expect `/items` and `/items/{item_index}` to return the same representation of an item.\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/13108583/75627744-e601e400-5ba0-11ea-8c2a-c9d85211f9cf.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/13108583/75627735-d1255080-5ba0-11ea-98b9-0357b78af2d5.png)\r\n\r\n\r\n### Environment\r\n\r\n- OS: Windows and MacOS\r\n- FastAPI Version: 0.47.1\r\n- Python version: 3.7.3\r\n\r\n### Additional context\r\n\r\nThe main thing I'm trying to achieve here is to exclude nulls when using List[MyModel]. Currently, the only workaround that I know of is to do one of the following.\r\n\r\n1. create a new response `AllItems` model and overload `dict()`\r\n2. create a [middleware](https://fastapi.tiangolo.com/tutorial/middleware/#before-and-after-the-response) that strips response nulls.\r\n3. [use an arbitrary dict](https://fastapi.tiangolo.com/tutorial/extra-models/#response-with-arbitrary-dict) (I don't want to do this)\r\n\r\nHowever, given the prevalence of API's that have a `/<all_items>`, `/<single_item>`  I would think that using `response_model_exclude_unset` or [`exclude_none`](https://github.com/tiangolo/fastapi/issues/1050) is the more intuitive way to achieve this.\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1063/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1063/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1045", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1045/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1045/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1045/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1045", "id": 572213930, "node_id": "MDU6SXNzdWU1NzIyMTM5MzA=", "number": 1045, "title": "Broken link to GraphQL tutorial", "user": {"login": "e-ruiz", "id": 4993488, "node_id": "MDQ6VXNlcjQ5OTM0ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/4993488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/e-ruiz", "html_url": "https://github.com/e-ruiz", "followers_url": "https://api.github.com/users/e-ruiz/followers", "following_url": "https://api.github.com/users/e-ruiz/following{/other_user}", "gists_url": "https://api.github.com/users/e-ruiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/e-ruiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/e-ruiz/subscriptions", "organizations_url": "https://api.github.com/users/e-ruiz/orgs", "repos_url": "https://api.github.com/users/e-ruiz/repos", "events_url": "https://api.github.com/users/e-ruiz/events{/privacy}", "received_events_url": "https://api.github.com/users/e-ruiz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-27T16:50:43Z", "updated_at": "2023-02-24T13:18:39Z", "closed_at": "2020-03-02T21:15:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nIt's a documentation bug, not a software bug :wink: \r\n\r\nUnfortunately the link for GraphQL tutorial is broken: https://fastapi.tiangolo.com/tutorial/graphql/ \r\n\r\nReferences: \r\n- https://fastapi.tiangolo.com/release-notes/#061\r\n- PR #48 \r\n\r\nBest regards.", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1045/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1043", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1043/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1043/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1043/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1043", "id": 571734826, "node_id": "MDU6SXNzdWU1NzE3MzQ4MjY=", "number": 1043, "title": "Cannot return response containing pydantic model that includes aliases since FastAPI 0.47.1", "user": {"login": "johnanthonyowens", "id": 1550786, "node_id": "MDQ6VXNlcjE1NTA3ODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1550786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnanthonyowens", "html_url": "https://github.com/johnanthonyowens", "followers_url": "https://api.github.com/users/johnanthonyowens/followers", "following_url": "https://api.github.com/users/johnanthonyowens/following{/other_user}", "gists_url": "https://api.github.com/users/johnanthonyowens/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnanthonyowens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnanthonyowens/subscriptions", "organizations_url": "https://api.github.com/users/johnanthonyowens/orgs", "repos_url": "https://api.github.com/users/johnanthonyowens/repos", "events_url": "https://api.github.com/users/johnanthonyowens/events{/privacy}", "received_events_url": "https://api.github.com/users/johnanthonyowens/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-27T00:02:34Z", "updated_at": "2023-02-22T11:22:33Z", "closed_at": "2020-04-07T00:01:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Starting in 0.47.1, responses fail validation if they include any pydantic model objects that contain field aliases\r\n\r\nYou can work around this by explicitly calling `.dict(by_alias=True)` on the top-level response model object before returning it from the path operation function (see the example below). However, this is super unintuitive and makes the use of field aliases painful. In our codebase we use aliases extensively (via `Config.alias_generator`) to expose camelCase in our public APIs while keeping our internal field names snake_case, and this issue is a real hassle.\r\n\r\n### To Reproduce\r\n\r\n1. Create a `test.py` file with:\r\n\r\n```Python\r\nimport fastapi\r\nimport pydantic\r\nimport starlette.testclient\r\nfrom typing import List\r\n\r\napp = fastapi.FastAPI()\r\n\r\nclass Item(pydantic.BaseModel):\r\n    my_value: int = pydantic.Field(..., alias='myValue')\r\n\r\nclass RootResponse(pydantic.BaseModel):\r\n    items: List[Item] = pydantic.Field(...)\r\n\r\n@app.get('/broken_1', response_model=RootResponse)\r\nasync def broken_1():\r\n    # embedded models don't work if they have aliased fields\r\n    return {'items': [Item(myValue=5), Item(myValue=10)]}\r\n\r\n@app.get('/broken_2', response_model=RootResponse)\r\nasync def broken_2():\r\n    # making the top-level response a model instance doesn't help\r\n    return RootResponse(items=[Item(myValue=5), Item(myValue=10)])\r\n\r\n@app.get('/workaround', response_model=RootResponse)\r\nasync def workaround():\r\n    # workaround is to build a top-level model and then dict(by_alias=True)\r\n    return RootResponse(items=[Item(myValue=5), Item(myValue=10)]).dict(by_alias=True)\r\n\r\nwith starlette.testclient.TestClient(app) as test_client:\r\n    for path in ['/broken_1', '/broken_2', '/workaround']:\r\n        try:\r\n            print('-------------------------------------------')\r\n            print(path)\r\n            response = test_client.get(path)\r\n        except Exception as exc:\r\n            print(exc)\r\n        else:\r\n            print('succeeded')\r\n```\r\n2. Run `python3 test.py` with FastAPI 0.47.0. All 3 cases succeed.\r\n3. Run `python3 test.py` with FastAPI 0.49.0. Only the \"workaround\" case succeeds.\r\n\r\n### Expected behavior\r\n\r\nModel classes that include aliased fields (whether the alias is directly specified on the field as in the above example, or using a pydantic `Config.alias_generator`) should be usable with the context of a response model.\r\n\r\n### Environment\r\n\r\n- OS: Linux (Ubuntu 18.04)\r\n- FastAPI Version: 0.47.1 and above\r\n- Python version: 3.7, 3.8", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1043/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1016", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1016/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1016/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1016/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1016", "id": 569228926, "node_id": "MDU6SXNzdWU1NjkyMjg5MjY=", "number": 1016, "title": "Documentation formatting error on SQL Databases page", "user": {"login": "alexjacobson95", "id": 402922, "node_id": "MDQ6VXNlcjQwMjkyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/402922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexjacobson95", "html_url": "https://github.com/alexjacobson95", "followers_url": "https://api.github.com/users/alexjacobson95/followers", "following_url": "https://api.github.com/users/alexjacobson95/following{/other_user}", "gists_url": "https://api.github.com/users/alexjacobson95/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexjacobson95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexjacobson95/subscriptions", "organizations_url": "https://api.github.com/users/alexjacobson95/orgs", "repos_url": "https://api.github.com/users/alexjacobson95/repos", "events_url": "https://api.github.com/users/alexjacobson95/events{/privacy}", "received_events_url": "https://api.github.com/users/alexjacobson95/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-21T23:07:20Z", "updated_at": "2023-02-24T13:18:51Z", "closed_at": "2020-04-13T14:12:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nThe formatting on the tutorial SQL Database page is messed up near the bottom\r\n\r\n### To Reproduce\r\nLoad https://fastapi.tiangolo.com/tutorial/sql-databases/\r\nScroll to `Review all the files` section.\r\n\r\n### Expected behavior\r\n\r\nThere is supposed to be code formatting around the code samples but it looks like that's broken\r\n\r\n### Screenshots\r\n![Screen Shot 2020-02-21 at 3 06 03 PM](https://user-images.githubusercontent.com/402922/75078895-bf1a2280-54bb-11ea-9c87-b00e90b76466.png)\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1016/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1014", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1014/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1014/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1014/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1014", "id": 568791526, "node_id": "MDU6SXNzdWU1Njg3OTE1MjY=", "number": 1014, "title": "chinese character in file name as UploadFile will raise \"422 Unprocessable Entity\"", "user": {"login": "saj940826", "id": 13285878, "node_id": "MDQ6VXNlcjEzMjg1ODc4", "avatar_url": "https://avatars.githubusercontent.com/u/13285878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saj940826", "html_url": "https://github.com/saj940826", "followers_url": "https://api.github.com/users/saj940826/followers", "following_url": "https://api.github.com/users/saj940826/following{/other_user}", "gists_url": "https://api.github.com/users/saj940826/gists{/gist_id}", "starred_url": "https://api.github.com/users/saj940826/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saj940826/subscriptions", "organizations_url": "https://api.github.com/users/saj940826/orgs", "repos_url": "https://api.github.com/users/saj940826/repos", "events_url": "https://api.github.com/users/saj940826/events{/privacy}", "received_events_url": "https://api.github.com/users/saj940826/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-21T07:43:18Z", "updated_at": "2023-02-24T13:18:52Z", "closed_at": "2020-04-25T00:01:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nHi, I'm trying to upload a file with chinese file name but 422 Status will response when i do this.\r\n\r\n### To Reproduce\r\n\r\n## Server\r\n```Python\r\nimport uvicorn\r\nfrom fastapi import FastAPI\r\nfrom fastapi import File, UploadFile\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.post(\"/\")\r\ndef read_root(file: UploadFile = File(...)):\r\n    return {\"Hello\": \"World\"}\r\n\r\nuvicorn.run(app, host='0.0.0.0', port=8080)\r\n```\r\n\r\n## Client\r\n```Python\r\nimport os\r\nimport requests\r\n\r\nurl=\"http://localhost8080/:\r\nfile_name = '\u6c49.txt'\r\n\r\nwith open(file_name, 'w+') as fd:\r\n    fd.write('12345')\r\nfp = open(file_name, 'rb')\r\nfiles = {\"file\": (fp.name, fp, \"input_file\")}\r\nsession = requests.Session()\r\nresponse = session.post(url=url, files=files)\r\n```\r\n\r\n### Environment\r\n\r\n- OS: Linux\r\n- FastAPI Version 0.45.0\r\n- Python version 3.6.2\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1014/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/998", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/998/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/998/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/998/events", "html_url": "https://github.com/tiangolo/fastapi/issues/998", "id": 567193112, "node_id": "MDU6SXNzdWU1NjcxOTMxMTI=", "number": 998, "title": "Dependency override websocket broken", "user": {"login": "teucer", "id": 600077, "node_id": "MDQ6VXNlcjYwMDA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/600077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teucer", "html_url": "https://github.com/teucer", "followers_url": "https://api.github.com/users/teucer/followers", "following_url": "https://api.github.com/users/teucer/following{/other_user}", "gists_url": "https://api.github.com/users/teucer/gists{/gist_id}", "starred_url": "https://api.github.com/users/teucer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teucer/subscriptions", "organizations_url": "https://api.github.com/users/teucer/orgs", "repos_url": "https://api.github.com/users/teucer/repos", "events_url": "https://api.github.com/users/teucer/events{/privacy}", "received_events_url": "https://api.github.com/users/teucer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-18T22:17:55Z", "updated_at": "2023-02-22T11:15:21Z", "closed_at": "2020-03-31T07:20:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nDependency override does not work for websockets. \r\n\r\nThe function `add_api_websocket_route` does not add `dependency_overrides_provider` to `APIWebSocketRoute`.\r\n\r\n### To Reproduce\r\n\r\nCreate a simple app with websockets and test it with override.\r\n\r\n### Expected behavior\r\n\r\nThe overrides should be taken into account, but the test uses the original dependency. \r\n\r\n### Environment\r\n\r\n- OS: Windows\r\n- FastAPI version: 0.49.0\r\n- Python version: 3.6.8\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/998/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/998/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/967", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/967/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/967/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/967/events", "html_url": "https://github.com/tiangolo/fastapi/issues/967", "id": 562605966, "node_id": "MDU6SXNzdWU1NjI2MDU5NjY=", "number": 967, "title": "The generated OpenAPI schema duplicates parameter IDs when used with dependencies", "user": {"login": "tiangolo", "id": 1326112, "node_id": "MDQ6VXNlcjEzMjYxMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1326112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiangolo", "html_url": "https://github.com/tiangolo", "followers_url": "https://api.github.com/users/tiangolo/followers", "following_url": "https://api.github.com/users/tiangolo/following{/other_user}", "gists_url": "https://api.github.com/users/tiangolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiangolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiangolo/subscriptions", "organizations_url": "https://api.github.com/users/tiangolo/orgs", "repos_url": "https://api.github.com/users/tiangolo/repos", "events_url": "https://api.github.com/users/tiangolo/events{/privacy}", "received_events_url": "https://api.github.com/users/tiangolo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1154536361, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYx", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 1870517463, "node_id": "MDU6TGFiZWwxODcwNTE3NDYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/confirmed", "name": "confirmed", "color": "9cf4bf", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-10T14:41:22Z", "updated_at": "2023-02-24T13:19:13Z", "closed_at": "2020-02-28T21:49:56Z", "author_association": "OWNER", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nThe generated OpenAPI schema duplicates parameter IDs when used with dependencies.\r\n\r\n### To Reproduce\r\n\r\nSteps to reproduce the behavior with a minimum self-contained file.\r\n\r\n* Create a file with:\r\n\r\n```Python\r\nfrom fastapi import Depends, FastAPI\r\nfrom starlette.testclient import TestClient\r\n\r\napp = FastAPI()\r\n\r\n\r\nasync def user_exists(user_id: int):\r\n    return True\r\n\r\n\r\n@app.post(\"/users/{user_id}\", dependencies=[Depends(user_exists)])\r\nasync def bug(user_id: int):\r\n    pass\r\n\r\n\r\nclient = TestClient(app)\r\n\r\nopenapi_schema = {\r\n    \"openapi\": \"3.0.2\",\r\n    \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\r\n    \"paths\": {\r\n        \"/users/{user_id}\": {\r\n            \"post\": {\r\n                \"summary\": \"Bug\",\r\n                \"operationId\": \"bug_users__user_id__post\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"required\": True,\r\n                        \"schema\": {\"title\": \"User Id\", \"type\": \"integer\"},\r\n                        \"name\": \"user_id\",\r\n                        \"in\": \"path\",\r\n                    },\r\n                    # This duplicated user_id shouldn't be here\r\n                    # {\r\n                    #     \"required\": True,\r\n                    #     \"schema\": {\"title\": \"User Id\", \"type\": \"integer\"},\r\n                    #     \"name\": \"user_id\",\r\n                    #     \"in\": \"path\",\r\n                    # },\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"Successful Response\",\r\n                        \"content\": {\"application/json\": {\"schema\": {}}},\r\n                    },\r\n                    \"422\": {\r\n                        \"description\": \"Validation Error\",\r\n                        \"content\": {\r\n                            \"application/json\": {\r\n                                \"schema\": {\r\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\r\n                                }\r\n                            }\r\n                        },\r\n                    },\r\n                },\r\n            }\r\n        }\r\n    },\r\n    \"components\": {\r\n        \"schemas\": {\r\n            \"HTTPValidationError\": {\r\n                \"title\": \"HTTPValidationError\",\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                    \"detail\": {\r\n                        \"title\": \"Detail\",\r\n                        \"type\": \"array\",\r\n                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\r\n                    }\r\n                },\r\n            },\r\n            \"ValidationError\": {\r\n                \"title\": \"ValidationError\",\r\n                \"required\": [\"loc\", \"msg\", \"type\"],\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                    \"loc\": {\r\n                        \"title\": \"Location\",\r\n                        \"type\": \"array\",\r\n                        \"items\": {\"type\": \"string\"},\r\n                    },\r\n                    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\r\n                    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\r\n                },\r\n            },\r\n        }\r\n    },\r\n}\r\n\r\n\r\ndef test_reused_param():\r\n    response = client.get(\"/openapi.json\")\r\n    data = response.json()\r\n    assert data == openapi_schema\r\n```\r\n\r\n* Run it with `pytest`.\r\n\r\nAlternatively, you can run it with Uvicorn go to `/openapi.json`, copy that and validate it at: https://editor.swagger.io/ . It should be valid.\r\n\r\n### Expected behavior\r\n\r\nThe `user_id` used by the path operation and the dependency shouldn't be duplicated in the OpenAPI schema.\r\n\r\n### Environment\r\n\r\n- OS: all\r\n- FastAPI Version [e.g. 0.3.0], get it with: 0.48.0\r\n\r\n```bash\r\npython -c \"import fastapi; print(fastapi.__version__)\"\r\n```\r\n\r\n- Python version, get it with: 3.7\r\n\r\n```bash\r\npython --version\r\n```\r\n\r\n### Additional context\r\n\r\nSupersedes #395\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/967/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/937", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/937/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/937/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/937/events", "html_url": "https://github.com/tiangolo/fastapi/issues/937", "id": 558582525, "node_id": "MDU6SXNzdWU1NTg1ODI1MjU=", "number": 937, "title": "Typo/Raw Markup in tutorial middleware documentation", "user": {"login": "blep", "id": 622106, "node_id": "MDQ6VXNlcjYyMjEwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/622106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blep", "html_url": "https://github.com/blep", "followers_url": "https://api.github.com/users/blep/followers", "following_url": "https://api.github.com/users/blep/following{/other_user}", "gists_url": "https://api.github.com/users/blep/gists{/gist_id}", "starred_url": "https://api.github.com/users/blep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blep/subscriptions", "organizations_url": "https://api.github.com/users/blep/orgs", "repos_url": "https://api.github.com/users/blep/repos", "events_url": "https://api.github.com/users/blep/events{/privacy}", "received_events_url": "https://api.github.com/users/blep/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-01T19:04:20Z", "updated_at": "2023-02-24T14:26:36Z", "closed_at": "2020-02-04T09:04:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nIn the tutorial documentation on middleware (`docs/tutorial/middleware.md`), just before section `Before and after the response`, there is some raw Markdown appearing in the doc:\r\n\r\n- https://github.com/tiangolo/fastapi/blob/master/docs/tutorial/middleware.md#before-and-after-the-response\r\n- https://fastapi.tiangolo.com/tutorial/middleware/#before-and-after-the-response\r\n\r\nSee text around `](cors.md){.internal-link target=_blank}) using the parameter expose_headers documented in Starlette's CORS docs.`. \r\n\r\nMight just be the newline in middle of link inside the quote confusing the parser.", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/937/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/914", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/914/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/914/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/914/events", "html_url": "https://github.com/tiangolo/fastapi/issues/914", "id": 554671752, "node_id": "MDU6SXNzdWU1NTQ2NzE3NTI=", "number": 914, "title": "Sending incorrect data cause 500 error", "user": {"login": "c2d628ba98", "id": 27423118, "node_id": "MDQ6VXNlcjI3NDIzMTE4", "avatar_url": "https://avatars.githubusercontent.com/u/27423118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c2d628ba98", "html_url": "https://github.com/c2d628ba98", "followers_url": "https://api.github.com/users/c2d628ba98/followers", "following_url": "https://api.github.com/users/c2d628ba98/following{/other_user}", "gists_url": "https://api.github.com/users/c2d628ba98/gists{/gist_id}", "starred_url": "https://api.github.com/users/c2d628ba98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c2d628ba98/subscriptions", "organizations_url": "https://api.github.com/users/c2d628ba98/orgs", "repos_url": "https://api.github.com/users/c2d628ba98/repos", "events_url": "https://api.github.com/users/c2d628ba98/events{/privacy}", "received_events_url": "https://api.github.com/users/c2d628ba98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-24T11:02:12Z", "updated_at": "2023-02-24T13:19:38Z", "closed_at": "2020-02-04T04:01:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've got this simple example:\r\n\r\n```\r\nfrom typing import List\r\n\r\nfrom fastapi import FastAPI, Body\r\n\r\n\r\nclass User(BaseModel):\r\n    name: str\r\n\r\n\r\n@app.post('/test/')\r\nasync def test(users: List[User], test: str = Body(...)):\r\n    return {'users': users, 'test': test}\r\n```\r\n\r\nWhen sending incorrect payload the server returns 500 error:\r\n\r\n```\r\n# curl -s -D - -o /dev/null -X POST \"localhost:8080/test/\" -H  \"accept: application/json\" -H  \"Content-Type: application/json\" -d \"[]\"\r\nHTTP/1.1 500 Internal Server Error\r\ndate: Fri, 24 Jan 2020 10:59:47 GMT\r\nserver: uvicorn\r\ncontent-length: 1264\r\ncontent-type: text/plain; charset=utf-8\r\n```\r\nServer exception:\r\n\r\n```\r\nINFO:     127.0.0.1:60652 - \"POST /test/ HTTP/1.1\" 500 Internal Server Error\r\nERROR:    Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"/test/venv38/lib/python3.8/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 385, in run_asgi\r\n    result = await app(self.scope, self.receive, self.send)\r\n  File \"/test/venv38/lib/python3.8/site-packages/uvicorn/middleware/proxy_headers.py\", line 45, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"/test/venv38/lib/python3.8/site-packages/fastapi/applications.py\", line 140, in __call__\r\n    await super().__call__(scope, receive, send)\r\n  File \"/test/venv38/lib/python3.8/site-packages/starlette/applications.py\", line 134, in __call__\r\n    await self.error_middleware(scope, receive, send)\r\n  File \"/test/venv38/lib/python3.8/site-packages/starlette/middleware/errors.py\", line 178, in __call__\r\n    raise exc from None\r\n  File \"/test/venv38/lib/python3.8/site-packages/starlette/middleware/errors.py\", line 156, in __call__\r\n    await self.app(scope, receive, _send)\r\n  File \"/test/venv38/lib/python3.8/site-packages/starlette/exceptions.py\", line 73, in __call__\r\n    raise exc from None\r\n  File \"/test/venv38/lib/python3.8/site-packages/starlette/exceptions.py\", line 62, in __call__\r\n    await self.app(scope, receive, sender)\r\n  File \"/test/venv38/lib/python3.8/site-packages/starlette/routing.py\", line 590, in __call__\r\n    await route(scope, receive, send)\r\n  File \"/test/venv38/lib/python3.8/site-packages/starlette/routing.py\", line 208, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"/test/venv38/lib/python3.8/site-packages/starlette/routing.py\", line 41, in app\r\n    response = await func(request)\r\n  File \"/test/venv38/lib/python3.8/site-packages/fastapi/routing.py\", line 115, in app\r\n    solved_result = await solve_dependencies(\r\n  File \"/test/venv38/lib/python3.8/site-packages/fastapi/dependencies/utils.py\", line 547, in solve_dependencies\r\n    ) = await request_body_to_args(  # body_params checked above\r\n  File \"/test/venv38/lib/python3.8/site-packages/fastapi/dependencies/utils.py\", line 637, in request_body_to_args\r\n    value = received_body.get(field.alias)\r\nAttributeError: 'list' object has no attribute 'get'\r\n```\r\n\r\nSo the body is not validated in this case?", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/914/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/894", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/894/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/894/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/894/events", "html_url": "https://github.com/tiangolo/fastapi/issues/894", "id": 552092927, "node_id": "MDU6SXNzdWU1NTIwOTI5Mjc=", "number": 894, "title": "RecursionError from response model in 0.47.1", "user": {"login": "ysmu", "id": 17018576, "node_id": "MDQ6VXNlcjE3MDE4NTc2", "avatar_url": "https://avatars.githubusercontent.com/u/17018576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysmu", "html_url": "https://github.com/ysmu", "followers_url": "https://api.github.com/users/ysmu/followers", "following_url": "https://api.github.com/users/ysmu/following{/other_user}", "gists_url": "https://api.github.com/users/ysmu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysmu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysmu/subscriptions", "organizations_url": "https://api.github.com/users/ysmu/orgs", "repos_url": "https://api.github.com/users/ysmu/repos", "events_url": "https://api.github.com/users/ysmu/events{/privacy}", "received_events_url": "https://api.github.com/users/ysmu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "dmontagu", "id": 35119617, "node_id": "MDQ6VXNlcjM1MTE5NjE3", "avatar_url": "https://avatars.githubusercontent.com/u/35119617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmontagu", "html_url": "https://github.com/dmontagu", "followers_url": "https://api.github.com/users/dmontagu/followers", "following_url": "https://api.github.com/users/dmontagu/following{/other_user}", "gists_url": "https://api.github.com/users/dmontagu/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmontagu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmontagu/subscriptions", "organizations_url": "https://api.github.com/users/dmontagu/orgs", "repos_url": "https://api.github.com/users/dmontagu/repos", "events_url": "https://api.github.com/users/dmontagu/events{/privacy}", "received_events_url": "https://api.github.com/users/dmontagu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dmontagu", "id": 35119617, "node_id": "MDQ6VXNlcjM1MTE5NjE3", "avatar_url": "https://avatars.githubusercontent.com/u/35119617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmontagu", "html_url": "https://github.com/dmontagu", "followers_url": "https://api.github.com/users/dmontagu/followers", "following_url": "https://api.github.com/users/dmontagu/following{/other_user}", "gists_url": "https://api.github.com/users/dmontagu/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmontagu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmontagu/subscriptions", "organizations_url": "https://api.github.com/users/dmontagu/orgs", "repos_url": "https://api.github.com/users/dmontagu/repos", "events_url": "https://api.github.com/users/dmontagu/events{/privacy}", "received_events_url": "https://api.github.com/users/dmontagu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 17, "created_at": "2020-01-20T06:24:03Z", "updated_at": "2023-02-24T13:19:48Z", "closed_at": "2020-03-29T21:55:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nFastAPI 0.47.1 will not be able to start due to a `RecursionError` when there is a circular reference among models. The issue seems to originate from https://github.com/tiangolo/fastapi/pull/889. This works fine in 0.46.0.\r\n\r\n### Environment\r\n\r\n- OS: Windows\r\n- FastAPI Version: 0.47.1\r\n- Python version: 3.7.0\r\n\r\n### To Reproduce\r\n\r\n```Python\r\nfrom typing import Optional\r\n\r\nfrom fastapi import FastAPI\r\nfrom pydantic import BaseModel, Field\r\n\r\n\r\nclass Group(BaseModel):\r\n    representative: Optional['Person'] = Field(None)\r\n\r\n\r\nclass Person(BaseModel):\r\n    group: Optional[Group] = Field(None)\r\n\r\n\r\nGroup.update_forward_refs()\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get('/group/{group_id}', response_model=Group)\r\ndef get_group(group_id):\r\n    return []\r\n```\r\n\r\n### Expected behavior\r\n\r\nNo exception\r\n\r\n\r\n### Actual output\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 21, in <module>\r\n    @app.get('/group/{group_id}', response_model=Group)\r\n  File \"D:\\virtualenvs\\test\\lib\\site-packages\\fastapi\\routing.py\", line 494, in decorator\r\n    callbacks=callbacks,\r\n  File \"D:\\virtualenvs\\test\\lib\\site-packages\\fastapi\\routing.py\", line 438, in add_api_route\r\n    callbacks=callbacks,\r\n  File \"D:\\virtualenvs\\test\\lib\\site-packages\\fastapi\\routing.py\", line 275, in __init__\r\n    ] = create_cloned_field(self.response_field)\r\n  File \"D:\\virtualenvs\\test\\lib\\site-packages\\fastapi\\utils.py\", line 100, in create_cloned_field\r\n    use_type.__fields__[f.name] = create_cloned_field(f)\r\n  File \"D:\\virtualenvs\\test\\lib\\site-packages\\fastapi\\utils.py\", line 100, in create_cloned_field\r\n    use_type.__fields__[f.name] = create_cloned_field(f)\r\n  File \"D:\\virtualenvs\\test\\lib\\site-packages\\fastapi\\utils.py\", line 100, in create_cloned_field\r\n    use_type.__fields__[f.name] = create_cloned_field(f)\r\n  [Previous line repeated 981 more times]\r\n  File \"D:\\virtualenvs\\test\\lib\\site-packages\\fastapi\\utils.py\", line 97, in create_cloned_field\r\n    original_type.__name__, __config__=original_type.__config__\r\n  File \"D:\\virtualenvs\\test\\lib\\site-packages\\pydantic\\main.py\", line 773, in create_model\r\n    return type(model_name, (__base__,), namespace)\r\n  File \"D:\\virtualenvs\\test\\lib\\site-packages\\pydantic\\main.py\", line 152, in __new__\r\n    if issubclass(base, BaseModel) and base != BaseModel:\r\n  File \"D:\\virtualenvs\\test\\lib\\abc.py\", line 143, in __subclasscheck__\r\n    return _abc_subclasscheck(cls, subclass)\r\nRecursionError: maximum recursion depth exceeded in comparison\r\n```", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/894/reactions", "total_count": 6, "+1": 6, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/894/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/847", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/847/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/847/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/847/events", "html_url": "https://github.com/tiangolo/fastapi/issues/847", "id": 548431010, "node_id": "MDU6SXNzdWU1NDg0MzEwMTA=", "number": 847, "title": "Nested pydantic model in response model doesn't filter additional data", "user": {"login": "sagrawal-idrc", "id": 16095774, "node_id": "MDQ6VXNlcjE2MDk1Nzc0", "avatar_url": "https://avatars.githubusercontent.com/u/16095774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagrawal-idrc", "html_url": "https://github.com/sagrawal-idrc", "followers_url": "https://api.github.com/users/sagrawal-idrc/followers", "following_url": "https://api.github.com/users/sagrawal-idrc/following{/other_user}", "gists_url": "https://api.github.com/users/sagrawal-idrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagrawal-idrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagrawal-idrc/subscriptions", "organizations_url": "https://api.github.com/users/sagrawal-idrc/orgs", "repos_url": "https://api.github.com/users/sagrawal-idrc/repos", "events_url": "https://api.github.com/users/sagrawal-idrc/events{/privacy}", "received_events_url": "https://api.github.com/users/sagrawal-idrc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "tiangolo", "id": 1326112, "node_id": "MDQ6VXNlcjEzMjYxMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1326112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiangolo", "html_url": "https://github.com/tiangolo", "followers_url": "https://api.github.com/users/tiangolo/followers", "following_url": "https://api.github.com/users/tiangolo/following{/other_user}", "gists_url": "https://api.github.com/users/tiangolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiangolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiangolo/subscriptions", "organizations_url": "https://api.github.com/users/tiangolo/orgs", "repos_url": "https://api.github.com/users/tiangolo/repos", "events_url": "https://api.github.com/users/tiangolo/events{/privacy}", "received_events_url": "https://api.github.com/users/tiangolo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tiangolo", "id": 1326112, "node_id": "MDQ6VXNlcjEzMjYxMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1326112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiangolo", "html_url": "https://github.com/tiangolo", "followers_url": "https://api.github.com/users/tiangolo/followers", "following_url": "https://api.github.com/users/tiangolo/following{/other_user}", "gists_url": "https://api.github.com/users/tiangolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiangolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiangolo/subscriptions", "organizations_url": "https://api.github.com/users/tiangolo/orgs", "repos_url": "https://api.github.com/users/tiangolo/repos", "events_url": "https://api.github.com/users/tiangolo/events{/privacy}", "received_events_url": "https://api.github.com/users/tiangolo/received_events", "type": "User", "site_admin": false}, {"login": "dmontagu", "id": 35119617, "node_id": "MDQ6VXNlcjM1MTE5NjE3", "avatar_url": "https://avatars.githubusercontent.com/u/35119617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmontagu", "html_url": "https://github.com/dmontagu", "followers_url": "https://api.github.com/users/dmontagu/followers", "following_url": "https://api.github.com/users/dmontagu/following{/other_user}", "gists_url": "https://api.github.com/users/dmontagu/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmontagu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmontagu/subscriptions", "organizations_url": "https://api.github.com/users/dmontagu/orgs", "repos_url": "https://api.github.com/users/dmontagu/repos", "events_url": "https://api.github.com/users/dmontagu/events{/privacy}", "received_events_url": "https://api.github.com/users/dmontagu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-01-11T13:37:04Z", "updated_at": "2023-02-24T13:20:10Z", "closed_at": "2020-01-29T00:01:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nIn [Response Model documentation](https://fastapi.tiangolo.com/tutorial/response-model/), there is an example for `FastAPI will take care of filtering out all the data that is not declared in the output model`. However, this doesn't happen for a nested model.\r\n\r\n### To Reproduce\r\n\r\n1. Create a file with:\r\n\r\n```Python\r\nfrom fastapi import FastAPI, Depends\r\nfrom pydantic import BaseModel\r\n\r\napp = FastAPI()\r\n\r\n\r\nclass ModelB(BaseModel):\r\n    username: str\r\n\r\n\r\nclass ModelC(ModelB):\r\n    password: str\r\n\r\n\r\nclass ModelA(BaseModel):\r\n    name: str\r\n    description: str = None\r\n    model_b: ModelB\r\n\r\n\r\nasync def get_model_c() -> ModelC:\r\n    return ModelC(username=\"test-user\", password=\"test-password\")\r\n\r\n\r\n@app.get(\"/model\", response_model=ModelA)\r\nasync def get_model_a(model_c=Depends(get_model_c)):\r\n    return {\"name\": \"model-a-name\", \"description\": \"model-a-desc\", \"model_b\": model_c}\r\n```\r\n\r\n3. Open the browser and call the endpoint `/model`.\r\n4. It returns a JSON with `{\"name\":\"model-a-name\",\"description\":\"model-a-desc\",\"model_b\":{\"username\":\"test-user\",\"password\":\"test-password\"}}`.\r\n5. But I expected it to return `{\"name\":\"model-a-name\",\"description\":\"model-a-desc\",\"model_b\":{\"username\":\"test-user\"}}`.\r\n\r\n### Expected behavior\r\n\r\nFiltering should be done for nested model attributes too.\r\n\r\n### Environment\r\n\r\n- OS: Ubuntu 18.04.3 LTS\r\n- FastAPI 0.45.0\r\n- Python 3.8.1", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/847/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/847/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/829", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/829/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/829/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/829/events", "html_url": "https://github.com/tiangolo/fastapi/issues/829", "id": 545810676, "node_id": "MDU6SXNzdWU1NDU4MTA2NzY=", "number": 829, "title": "OpenAPI routes do not acknowledge root_path", "user": {"login": "sm-Fifteen", "id": 516999, "node_id": "MDQ6VXNlcjUxNjk5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/516999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sm-Fifteen", "html_url": "https://github.com/sm-Fifteen", "followers_url": "https://api.github.com/users/sm-Fifteen/followers", "following_url": "https://api.github.com/users/sm-Fifteen/following{/other_user}", "gists_url": "https://api.github.com/users/sm-Fifteen/gists{/gist_id}", "starred_url": "https://api.github.com/users/sm-Fifteen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sm-Fifteen/subscriptions", "organizations_url": "https://api.github.com/users/sm-Fifteen/orgs", "repos_url": "https://api.github.com/users/sm-Fifteen/repos", "events_url": "https://api.github.com/users/sm-Fifteen/events{/privacy}", "received_events_url": "https://api.github.com/users/sm-Fifteen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2020-01-06T16:16:15Z", "updated_at": "2023-02-24T13:20:22Z", "closed_at": "2020-07-11T17:19:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Also raised on https://github.com/tiangolo/fastapi/pull/26#issuecomment-562755647. See also #544.\r\n\r\n### Describe the bug\r\n\r\nWrite here a clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\n\r\nReplace each part with your own scenario:\r\n\r\n1. Create a file with:\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/app\")\r\ndef read_root():\r\n    return {\"Hello\": \"World\"}\r\n```\r\n\r\n2. Launch it using `uvicorn --root-path=\"bar\" test_app:app`\r\n3. Open the browser and go to `http://127.0.0.1:8000/docs`.\r\n4. From the documentation, call the `GET /app` route.\r\n5. The doc page calls `/app` and succeeds.\r\n\r\n### Expected behavior\r\n\r\nThe above test should fail after having called `/bar/app`, since `root_path` is supposed to prefix all generated URLs in case the application is served behind a reverse-proxy, among ther things. FastAPI only acknowledges `openapi_prefix` for the API doc.\r\n\r\n### Environment\r\n\r\n- OS: Windows\r\n- FastAPI Version: 0.45.0\r\n- Python version: 3.8.0\r\n\r\n### Additional context\r\n\r\nA similar issue applies to sub-applications:\r\n\r\n```py\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/app\")\r\ndef read_main():\r\n    return {\"message\": \"Hello World from main app\"}\r\n\r\n\r\n#subapi = FastAPI(openapi_prefix=\"/subapi\")\r\nsubapi = FastAPI()\r\n\r\n@subapi.get(\"/sub\")\r\ndef read_sub(request: Request):\r\n    return {\r\n        \"root_path\": request.scope['root_path'],\r\n        \"raw_path\": request.scope['raw_path'],\r\n        \"path\": request.scope['path'],\r\n        \"app_url_for\": app.url_path_for(\"read_sub\"),\r\n        \"subapp_url_for\": subapi.url_path_for(\"read_sub\"),\r\n    }\r\n\r\napp.mount(\"/subapi\", subapi)\r\n```\r\n\r\n```json\r\n{\r\n  \"root_path\":\"bar/subapi\",\r\n  \"raw_path\":\"/subapi/sub\",\r\n  \"path\":\"/sub\",\r\n  \"app_url_for\":\"/subapi/sub\",\r\n  \"subapp_url_for\":\"/sub\"\r\n}\r\n```\r\n\r\n(`url_for` not being prefixed with `root_path` is fixed upstream by encode/starlette#699)\r\n\r\nUnless `openapi_prefix=\"/subapi\"` is passed when creating the subapplication, both `http://127.0.0.1:8000/docs` and `http://127.0.0.1:8000/subapi/docs` will point towards `http://127.0.0.1:8000/openapi.json`, which goes against the point of having isolated subapplications.\r\n\r\n`openapi_prefix` should probably just be deprecated and assumed to match `root_path` if absent.\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/829/reactions", "total_count": 15, "+1": 15, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/829/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/811", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/811/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/811/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/811/events", "html_url": "https://github.com/tiangolo/fastapi/issues/811", "id": 541497751, "node_id": "MDU6SXNzdWU1NDE0OTc3NTE=", "number": 811, "title": "Sub application startup event never triggered", "user": {"login": "jonathanunderwood", "id": 992114, "node_id": "MDQ6VXNlcjk5MjExNA==", "avatar_url": "https://avatars.githubusercontent.com/u/992114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathanunderwood", "html_url": "https://github.com/jonathanunderwood", "followers_url": "https://api.github.com/users/jonathanunderwood/followers", "following_url": "https://api.github.com/users/jonathanunderwood/following{/other_user}", "gists_url": "https://api.github.com/users/jonathanunderwood/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathanunderwood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathanunderwood/subscriptions", "organizations_url": "https://api.github.com/users/jonathanunderwood/orgs", "repos_url": "https://api.github.com/users/jonathanunderwood/repos", "events_url": "https://api.github.com/users/jonathanunderwood/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathanunderwood/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1154536361, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYx", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 1836441168, "node_id": "MDU6TGFiZWwxODM2NDQxMTY4", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/docs", "name": "docs", "color": "009688", "default": false, "description": "Documentation about how to use FastAPI"}, {"id": 1870517463, "node_id": "MDU6TGFiZWwxODcwNTE3NDYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/confirmed", "name": "confirmed", "color": "9cf4bf", "default": false, "description": ""}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-12-22T20:29:28Z", "updated_at": "2023-02-24T14:26:38Z", "closed_at": "2020-06-25T00:18:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nStartup event handlers for sub-applications never trigger.\r\n\r\n### To Reproduce\r\n\r\n```python\r\nfrom fastapi import FastAPI\r\n\r\n\r\nsub_app = FastAPI(openapi_prefix=\"/subapp\")\r\n\r\n\r\n@sub_app.on_event(\"startup\")\r\nasync def sub_app_startup():\r\n    print(\"++++ Sub-app startup event\")  # Never fires\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.on_event(\"startup\")\r\nasync def app_startup():\r\n    print(\"++++ App startup event\")\r\n\r\n\r\napp.mount(\"/subapp\", sub_app)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    import uvicorn\r\n\r\n    uvicorn.run(app, port=8000, host=\"0.0.0.0\")  # nosec\r\n```\r\n\r\nRunning the above shows:\r\n\r\n```bash\r\n$ python subapp_events.py\r\nINFO:     Started server process [38462]\r\nINFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)\r\nINFO:     Waiting for application startup.\r\n++++ App startup event\r\nINFO:     Application startup complete.\r\n```\r\n\r\n**Notice that `sub_app_startup()` is never run.**\r\n\r\n### Expected behavior\r\n\r\nI would expect the sub-application startup event handler to also run (although I am not sure what ordering I would expect).\r\n\r\n\r\n### Environment\r\n\r\n- OS: macOS\r\n- FastAPI Version: 0.45.0\r\n- Python version: 3.7.5\r\n\r\n\r\n### Additional context\r\n\r\nN/A", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/811/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/811/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/800", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/800/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/800/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/800/events", "html_url": "https://github.com/tiangolo/fastapi/issues/800", "id": 539589476, "node_id": "MDU6SXNzdWU1Mzk1ODk0NzY=", "number": 800, "title": "Return value (nested model) not filtered according to response_model", "user": {"login": "chbndrhnns", "id": 7534547, "node_id": "MDQ6VXNlcjc1MzQ1NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7534547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chbndrhnns", "html_url": "https://github.com/chbndrhnns", "followers_url": "https://api.github.com/users/chbndrhnns/followers", "following_url": "https://api.github.com/users/chbndrhnns/following{/other_user}", "gists_url": "https://api.github.com/users/chbndrhnns/gists{/gist_id}", "starred_url": "https://api.github.com/users/chbndrhnns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chbndrhnns/subscriptions", "organizations_url": "https://api.github.com/users/chbndrhnns/orgs", "repos_url": "https://api.github.com/users/chbndrhnns/repos", "events_url": "https://api.github.com/users/chbndrhnns/events{/privacy}", "received_events_url": "https://api.github.com/users/chbndrhnns/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-18T10:24:20Z", "updated_at": "2023-02-24T13:20:36Z", "closed_at": "2020-01-29T00:01:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nI have a `Response` wrapper for my responses that only has a `data` field which contains the actual response data.\r\nThis actual data is not filtered according to the specified `response_model` unless I explicitly convert it into the desired response_model.\r\n\r\n### To Reproduce\r\n\r\nSteps to reproduce the behavior with a minimum self-contained file.\r\n\r\nReplace each part with your own scenario:\r\n\r\n1. Create a file with:\r\n\r\n```Python\r\nfrom typing import TypeVar, Generic, Optional, List\r\n\r\nfrom fastapi import FastAPI\r\nfrom pydantic import BaseModel\r\nfrom pydantic.generics import GenericModel\r\nfrom requests import Response\r\nfrom starlette import status\r\nfrom starlette.testclient import TestClient\r\n\r\nDataT = TypeVar('DataT')\r\n\r\n\r\nclass R(GenericModel, Generic[DataT]):\r\n    \"\"\"Wrapper for responses\"\"\"\r\n    data: Optional[DataT]\r\n\r\n\r\nclass ProjectOut(BaseModel):\r\n    id: int\r\n\r\n\r\nclass ProjectInDB(ProjectOut):\r\n    user_id: int\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\r\n    '/simple',\r\n    response_model=ProjectOut\r\n)\r\ndef get_simple() -> ProjectOut:\r\n    project = ProjectInDB(id=1, user_id=2)\r\n\r\n    return project\r\n\r\n\r\n@app.get(\r\n    '/nested_explicit',\r\n    response_model=R[ProjectOut]\r\n)\r\ndef get_nested() -> R[ProjectOut]:\r\n    project = ProjectInDB(id=1, user_id=2)\r\n\r\n    return R[ProjectOut](data=ProjectOut(**project.dict()))\r\n\r\n\r\n@app.get(\r\n    '/nested',\r\n    response_model=R[ProjectOut]\r\n)\r\ndef get_nested() -> R[ProjectOut]:\r\n    project = ProjectInDB(id=1, user_id=2)\r\n\r\n    return R[ProjectOut](data=project)\r\n\r\n\r\ndef test_response_model():\r\n    with TestClient(app) as client:\r\n        response: Response = client.get('/simple')\r\n\r\n    assert response.status_code == status.HTTP_200_OK\r\n\r\n    data: dict = response.json()\r\n    assert 'user_id' not in data.keys()\r\n\r\n\r\ndef test_nested_response_model_explicit():\r\n    with TestClient(app) as client:\r\n        response: Response = client.get('/nested_explicit')\r\n\r\n    assert response.status_code == status.HTTP_200_OK\r\n\r\n    response_wrapper: dict = response.json()\r\n    data = response_wrapper['data']\r\n    assert 'user_id' not in data.keys()\r\n\r\n\r\ndef test_nested_response_model():\r\n    with TestClient(app) as client:\r\n        response: Response = client.get('/nested')\r\n\r\n    assert response.status_code == status.HTTP_200_OK\r\n\r\n    response_wrapper: dict = response.json()\r\n    data = response_wrapper['data']\r\n    assert 'user_id' not in data.keys()\r\n```\r\n\r\n3. Run the tests with pytest: the test `test_nested_response_model` fails\r\n\r\n### Expected behavior\r\n\r\nWhen returning data, it is filtered according to the specified `response_model`.\r\n\r\n### Screenshots\r\n\r\n### Environment\r\n\r\n- OS: macOS\r\n- FastAPI Version: 0.45.0\r\n- Python version: 3.7.5\r\n\r\n### Additional context\r\n\r\nMight this be related to https://github.com/tiangolo/fastapi/issues/675?\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/800/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/757", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/757/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/757/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/757/events", "html_url": "https://github.com/tiangolo/fastapi/issues/757", "id": 530563235, "node_id": "MDU6SXNzdWU1MzA1NjMyMzU=", "number": 757, "title": "fastapi function check too strict", "user": {"login": "uriva", "id": 2490655, "node_id": "MDQ6VXNlcjI0OTA2NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/2490655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uriva", "html_url": "https://github.com/uriva", "followers_url": "https://api.github.com/users/uriva/followers", "following_url": "https://api.github.com/users/uriva/following{/other_user}", "gists_url": "https://api.github.com/users/uriva/gists{/gist_id}", "starred_url": "https://api.github.com/users/uriva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uriva/subscriptions", "organizations_url": "https://api.github.com/users/uriva/orgs", "repos_url": "https://api.github.com/users/uriva/repos", "events_url": "https://api.github.com/users/uriva/events{/privacy}", "received_events_url": "https://api.github.com/users/uriva/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-30T10:45:53Z", "updated_at": "2023-02-22T10:42:22Z", "closed_at": "2020-02-23T00:02:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to use fastapi with callables which return False on a `inspect.is_function` check.\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\nimport toolz\r\n\r\ndef some_function():\r\n    ...\r\n\r\ndef error_handler():\r\n    ...\r\n\r\nendpoint = toolz.excepts(Exception, some_function, error_handler)\r\napp = FastAPI()\r\napp.get(\"/\")(endpoint)\r\n\r\n```\r\n\r\nResult:\r\n\r\n> AssertionError: An endpoint must be a function or method", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/757/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/757/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/755", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/755/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/755/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/755/events", "html_url": "https://github.com/tiangolo/fastapi/issues/755", "id": 530555281, "node_id": "MDU6SXNzdWU1MzA1NTUyODE=", "number": 755, "title": "asyncpg uuid implementation not recognized by fastapi because of too strict typechecking", "user": {"login": "RmStorm", "id": 13096654, "node_id": "MDQ6VXNlcjEzMDk2NjU0", "avatar_url": "https://avatars.githubusercontent.com/u/13096654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RmStorm", "html_url": "https://github.com/RmStorm", "followers_url": "https://api.github.com/users/RmStorm/followers", "following_url": "https://api.github.com/users/RmStorm/following{/other_user}", "gists_url": "https://api.github.com/users/RmStorm/gists{/gist_id}", "starred_url": "https://api.github.com/users/RmStorm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RmStorm/subscriptions", "organizations_url": "https://api.github.com/users/RmStorm/orgs", "repos_url": "https://api.github.com/users/RmStorm/repos", "events_url": "https://api.github.com/users/RmStorm/events{/privacy}", "received_events_url": "https://api.github.com/users/RmStorm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-30T09:23:46Z", "updated_at": "2023-02-24T13:20:57Z", "closed_at": "2020-01-08T20:50:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nAn alternative implementation of the `UUID` type is not serialized by fastapi but throws an error instead. This is because it is of type `asyncpg.pgproto.pgproto.UUID` instead of type `uuid.UUID`. However it is implemented in such a way that it does the exact same things as the regular UUID but just faster. Also,\r\n```python\r\nisinstance(asyncpg.pgproto.pgproto.UUID(), uuid.UUID) == True\r\n```\r\nthis should make fastapi able to recognize it as a uuid.\r\n\r\n### To Reproduce\r\n1. Create a file called uuid_error.py with:\r\n\r\n```Python\r\nimport uuid\r\n\r\nfrom fastapi import FastAPI\r\nfrom asyncpg.pgproto import pgproto\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/normal_uuid\")\r\ndef return_normal_uuid():\r\n    regular_uuid = uuid.UUID(\"a10ff360-3b1e-4984-a26f-d3ab460bdb51\")\r\n    assert isinstance(regular_uuid, uuid.UUID)\r\n    return {\"normal_uuid\": regular_uuid}\r\n\r\n\r\n@app.get(\"/fast_uuid\")\r\ndef return_fast_uuid():\r\n    asyncpg_uuid = pgproto.UUID(\"a10ff360-3b1e-4984-a26f-d3ab460bdb51\")\r\n    assert isinstance(asyncpg_uuid, uuid.UUID)\r\n    return {\"fast_uuid\": asyncpg_uuid}\r\n```\r\n2. Run it with uvicorn uuid_error:app\r\n3. Open the browser and call the endpoint `/fast_uuid`.\r\n4. It returns 'internal server error' .\r\n5. But I expected it to return `{\"fast_uuid\":\"a10ff360-3b1e-4984-a26f-d3ab460bdb51\"}`.\r\n\r\n### Expected behavior\r\n\r\nI expected fastapi to jsonify the uuid and send, but instead it returns 'internal server error'. The precise error being thrown in the server is:\r\n```\r\nValueError: [KeyError(<class 'asyncpg.pgproto.pgproto.UUID'>), TypeError(\"'asyncpg.pgproto.pgproto.UUID' object is not iterable\"), TypeError('vars() argument must have __dict__ attribute')]\r\n```\r\n\r\n### Environment\r\n\r\n- OS: Linux Mint 19 Tara\r\n- FastAPI Version: 0.44.0\r\n- Python version: 3.8.0\r\n\r\n### Additional context\r\n\r\nI initially made an issue in the asyncpg repo asking them if they could fix it: https://github.com/MagicStack/asyncpg/issues/512 I think it's usefull as additional context for this issue.\r\nThe problem can be solved here in the fastapi code by improving the code a little. I'm working on a PR, this line seems to be the issue:\r\nhttps://github.com/tiangolo/fastapi/blob/c200bc2240d48a4a27e96fba536351038eafc44f/fastapi/encoders.py#L113\r\nI think it shouldn't use `type()` but it should instead use `isinstance()` this will make for slightly looser typechecking but I think that might be a good thing in this case?\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/755/reactions", "total_count": 3, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 1, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/755/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/743", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/743/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/743/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/743/events", "html_url": "https://github.com/tiangolo/fastapi/issues/743", "id": 529793968, "node_id": "MDU6SXNzdWU1Mjk3OTM5Njg=", "number": 743, "title": "Invalid Constrained Decimals (condecimal) cause 500 response code, rather than a 422 with explanation of what was invalid.", "user": {"login": "Sean1708", "id": 5058711, "node_id": "MDQ6VXNlcjUwNTg3MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/5058711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sean1708", "html_url": "https://github.com/Sean1708", "followers_url": "https://api.github.com/users/Sean1708/followers", "following_url": "https://api.github.com/users/Sean1708/following{/other_user}", "gists_url": "https://api.github.com/users/Sean1708/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sean1708/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sean1708/subscriptions", "organizations_url": "https://api.github.com/users/Sean1708/orgs", "repos_url": "https://api.github.com/users/Sean1708/repos", "events_url": "https://api.github.com/users/Sean1708/events{/privacy}", "received_events_url": "https://api.github.com/users/Sean1708/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "dmontagu", "id": 35119617, "node_id": "MDQ6VXNlcjM1MTE5NjE3", "avatar_url": "https://avatars.githubusercontent.com/u/35119617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmontagu", "html_url": "https://github.com/dmontagu", "followers_url": "https://api.github.com/users/dmontagu/followers", "following_url": "https://api.github.com/users/dmontagu/following{/other_user}", "gists_url": "https://api.github.com/users/dmontagu/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmontagu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmontagu/subscriptions", "organizations_url": "https://api.github.com/users/dmontagu/orgs", "repos_url": "https://api.github.com/users/dmontagu/repos", "events_url": "https://api.github.com/users/dmontagu/events{/privacy}", "received_events_url": "https://api.github.com/users/dmontagu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dmontagu", "id": 35119617, "node_id": "MDQ6VXNlcjM1MTE5NjE3", "avatar_url": "https://avatars.githubusercontent.com/u/35119617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmontagu", "html_url": "https://github.com/dmontagu", "followers_url": "https://api.github.com/users/dmontagu/followers", "following_url": "https://api.github.com/users/dmontagu/following{/other_user}", "gists_url": "https://api.github.com/users/dmontagu/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmontagu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmontagu/subscriptions", "organizations_url": "https://api.github.com/users/dmontagu/orgs", "repos_url": "https://api.github.com/users/dmontagu/repos", "events_url": "https://api.github.com/users/dmontagu/events{/privacy}", "received_events_url": "https://api.github.com/users/dmontagu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-11-28T09:31:39Z", "updated_at": "2023-02-24T13:21:01Z", "closed_at": "2019-11-29T06:02:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nIf an invalid `condecimal` is sent to a FastAPI service the service will return a 500 internal server error, instead of a 422 validation error. I can't reproduce this using Pydantic alone.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Run the attached [`condecimal-500-server.py`](https://github.com/tiangolo/fastapi/files/3900830/condecimal-500-server.py.txt) file.\r\n2. In a separate terminal run the attached [`condecimal-500-client.py`](https://github.com/tiangolo/fastapi/files/3900829/condecimal-500-client.py.txt) file.\r\n3. [`condecimal-500-server.log`](https://github.com/tiangolo/fastapi/files/3900824/condecimal-500-server.log) shows what you will see in the terminal that is running the server, most of the invalid requests will return a 422 but the one that violates the decimal constraint raises a `TypeError`.\r\n4. [`condecimal-500-client.log`](https://github.com/tiangolo/fastapi/files/3900823/condecimal-500-client.log) shows what you will see in the terminal running the client, basically the same info that you see in the server's logs.\r\n5. Run the attached [`condecimal-500-pydantic.py`](https://github.com/tiangolo/fastapi/files/3900870/condecimal-500-pydantic.py.txt) file.\r\n6. [`condecimal-500-pydantic.log`](https://github.com/tiangolo/fastapi/files/3900869/condecimal-500-pydantic.log) shows what you will see when running that file, Pydantic correctly raises a `ValidationError` when the constraint is violated indicating that this is not an bug in Pydantic.\r\n\r\n**Expected behavior**\r\nI expect a 422 response along with an explanation of what is invalid about the number to be returned, as happens when other invalid payloads are sent.\r\n\r\n**Environment:**\r\n - OS: Linux\r\n - FastAPI Version: 0.44.0\r\n - Pydantic Version: 1.1.1\r\n - Python Version: 3.7.2", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/743/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/737", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/737/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/737/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/737/events", "html_url": "https://github.com/tiangolo/fastapi/issues/737", "id": 528930131, "node_id": "MDU6SXNzdWU1Mjg5MzAxMzE=", "number": 737, "title": "dependency_overrides does not play well with scopes", "user": {"login": "phbender", "id": 114987, "node_id": "MDQ6VXNlcjExNDk4Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/114987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phbender", "html_url": "https://github.com/phbender", "followers_url": "https://api.github.com/users/phbender/followers", "following_url": "https://api.github.com/users/phbender/following{/other_user}", "gists_url": "https://api.github.com/users/phbender/gists{/gist_id}", "starred_url": "https://api.github.com/users/phbender/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phbender/subscriptions", "organizations_url": "https://api.github.com/users/phbender/orgs", "repos_url": "https://api.github.com/users/phbender/repos", "events_url": "https://api.github.com/users/phbender/events{/privacy}", "received_events_url": "https://api.github.com/users/phbender/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-26T19:34:05Z", "updated_at": "2023-02-24T13:21:05Z", "closed_at": "2020-06-25T00:18:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen working with `Security()` dependencies, the scopes disappear when `app.dependency_overrides` is executed. The callable dealing with the scopes gets an empty list instead of the scopes.\r\n\r\n**To Reproduce**\r\n\r\n```python\r\nfrom fastapi import FastAPI, Header, Security, Depends\r\nfrom fastapi.security import SecurityScopes\r\n\r\nfrom starlette.testclient import TestClient\r\n\r\napp = FastAPI()\r\n\r\ndef get_user(required_scopes: SecurityScopes):\r\n    print(required_scopes.scopes)\r\n\r\n    return \"John Doe\"\r\n\r\ndef data():\r\n    return [1,2,3]\r\n\r\ndef other_data():\r\n    return [3,4,5]\r\n\r\n\r\n@app.get(\"/test\")\r\ndef test(user: str = Security(get_user, scopes=[\"foo\", \"bar\"]), data = Depends(data)):\r\n    return data\r\n\r\nclient = TestClient(app)\r\nresponse = client.get(\"/test\")\r\n\r\napp.dependency_overrides[data] = other_data\r\nresponse = client.get(\"/test\")\r\n\r\n# prints: [\"foo\", \"bar\"] and [] instead of [\"foo\", \"bar\"] and [\"foo\", \"bar\"]\r\n```\r\n\r\n**Expected behavior**\r\nIn the above example I expect `get_user()` to print the same scopes twice. Instead, before the `dependency_overrides` it prints the correct scpoes, but an empty list afterwards.\r\n\r\n**Environment:**\r\n - OS: Linux\r\n - FastAPI Version 0.43.0\r\n- Python 3.7.4\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/737/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/737/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/679", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/679/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/679/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/679/events", "html_url": "https://github.com/tiangolo/fastapi/issues/679", "id": 517271426, "node_id": "MDU6SXNzdWU1MTcyNzE0MjY=", "number": 679, "title": "Async class method dependency raises a ValueError", "user": {"login": "frankie567", "id": 1144727, "node_id": "MDQ6VXNlcjExNDQ3Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1144727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frankie567", "html_url": "https://github.com/frankie567", "followers_url": "https://api.github.com/users/frankie567/followers", "following_url": "https://api.github.com/users/frankie567/following{/other_user}", "gists_url": "https://api.github.com/users/frankie567/gists{/gist_id}", "starred_url": "https://api.github.com/users/frankie567/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frankie567/subscriptions", "organizations_url": "https://api.github.com/users/frankie567/orgs", "repos_url": "https://api.github.com/users/frankie567/repos", "events_url": "https://api.github.com/users/frankie567/events{/privacy}", "received_events_url": "https://api.github.com/users/frankie567/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-04T16:41:35Z", "updated_at": "2023-02-24T13:21:35Z", "closed_at": "2019-11-28T06:38:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nIf you use an async class method as a dependency, a `ValueError` is thrown. It doesn't happen for a non-async method.\r\n\r\nComplete error: `ValueError: [KeyError(<class 'coroutine'>), TypeError(\"'coroutine' object is not iterable\"), TypeError('vars() argument must have __dict__ attribute')]` (at `fastapi/encoders.py:106`)\r\n\r\n**To Reproduce**\r\n\r\n```py\r\nfrom fastapi import Depends, FastAPI\r\nfrom starlette.requests import Request\r\n\r\nclass DependencyClass:\r\n    async def async_dep(self, request: Request):\r\n        return True\r\n\r\n    def sync_dep(self, request: Request):\r\n        return True\r\n\r\napp = FastAPI()\r\ndependency = DependencyClass()\r\n\r\n# Error\r\n@app.get('/async-dep')\r\ndef async_dep(r=Depends(dependency.async_dep)):\r\n    return r\r\n\r\n# Everything is fine\r\n@app.get('/sync-dep')\r\ndef sync_dep(r=Depends(dependency.sync_dep)):\r\n    return r\r\n```\r\n\r\n**Expected behavior**\r\nThe async class method dependency should be called and its return value injected.\r\n\r\n**Environment:**\r\n - OS: macOS\r\n - FastAPI Version: 0.42.0\r\n- Python version: 3.7.2\r\n\r\n**Additional context**\r\nI believe the issue comes from here:\r\n\r\nhttps://github.com/tiangolo/fastapi/blob/65536cbf63318d111bf608960378d651b6c1596a/fastapi/dependencies/utils.py#L353-L359\r\n\r\nIndeed, `inspect.isfunction(call)` will return `False` in case of a class method. Hence, it is [sent to `run_in_threadpool`](https://github.com/tiangolo/fastapi/blob/65536cbf63318d111bf608960378d651b6c1596a/fastapi/dependencies/utils.py#L453-L456), which never awaits the coroutine, and we end up trying to serialize it instead of its result (hence the `ValueError`).\r\n\r\nChanging the check by:\r\n\r\n```py\r\nif inspect.isfunction(call) or inspect.ismethod(call):\r\n```\r\n\r\nsolves the issue. I can make a PR with the fix and unit tests if it helps.", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/679/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/675", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/675/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/675/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/675/events", "html_url": "https://github.com/tiangolo/fastapi/issues/675", "id": 516712342, "node_id": "MDU6SXNzdWU1MTY3MTIzNDI=", "number": 675, "title": "response_model_skip_defaults doesn't work when response is a list of models", "user": {"login": "draklaw", "id": 4934185, "node_id": "MDQ6VXNlcjQ5MzQxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/4934185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/draklaw", "html_url": "https://github.com/draklaw", "followers_url": "https://api.github.com/users/draklaw/followers", "following_url": "https://api.github.com/users/draklaw/following{/other_user}", "gists_url": "https://api.github.com/users/draklaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/draklaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/draklaw/subscriptions", "organizations_url": "https://api.github.com/users/draklaw/orgs", "repos_url": "https://api.github.com/users/draklaw/repos", "events_url": "https://api.github.com/users/draklaw/events{/privacy}", "received_events_url": "https://api.github.com/users/draklaw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-02T20:31:11Z", "updated_at": "2023-02-24T13:21:38Z", "closed_at": "2022-11-22T00:17:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nThis is a followup of bug #421. When an endpoint returns a list of Pydantic models with `response_model_skip_defaults = True`, the resulting json contains the fields with default values. It should not.\r\n\r\n**To Reproduce**\r\nHere is the minimal failing test case of bug #421, slightly updated to return a list of models instead of a model:\r\n\r\n```py\r\nfrom typing import List, Optional\r\n\r\nfrom fastapi import FastAPI\r\nfrom pydantic import BaseModel\r\nfrom starlette.testclient import TestClient\r\n\r\n\r\ndef test_return_defaults():\r\n    app = FastAPI()\r\n\r\n    class Model(BaseModel):\r\n        x: Optional[int]\r\n\r\n    @app.get(\"/\", response_model=List[Model], response_model_skip_defaults=True)\r\n    def get_x() -> Model:\r\n        return [Model()]  # adding `.dict(skip_defaults=True)` causes the test to pass\r\n\r\n    assert TestClient(app).get(\"/\").content == b\"[{}]\"\r\n    # Fail: b'{\"x\":null}' != b'[{}]'\r\n```\r\n\r\n**Expected behavior**\r\nThe resulting json should not contain the default values.\r\n\r\n**Environment:**\r\n - OS: Linux\r\n - FastAPI 0.42.0\r\n - Python 3.7.3\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/675/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/628", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/628/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/628/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/628/events", "html_url": "https://github.com/tiangolo/fastapi/issues/628", "id": 508193459, "node_id": "MDU6SXNzdWU1MDgxOTM0NTk=", "number": 628, "title": "Unable to have List of Pydantic Model as route 'responses' model", "user": {"login": "nwalsh1995", "id": 1879632, "node_id": "MDQ6VXNlcjE4Nzk2MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1879632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nwalsh1995", "html_url": "https://github.com/nwalsh1995", "followers_url": "https://api.github.com/users/nwalsh1995/followers", "following_url": "https://api.github.com/users/nwalsh1995/following{/other_user}", "gists_url": "https://api.github.com/users/nwalsh1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/nwalsh1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nwalsh1995/subscriptions", "organizations_url": "https://api.github.com/users/nwalsh1995/orgs", "repos_url": "https://api.github.com/users/nwalsh1995/repos", "events_url": "https://api.github.com/users/nwalsh1995/events{/privacy}", "received_events_url": "https://api.github.com/users/nwalsh1995/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1154536361, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYx", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 1870517463, "node_id": "MDU6TGFiZWwxODcwNTE3NDYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/confirmed", "name": "confirmed", "color": "9cf4bf", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-10-17T02:23:28Z", "updated_at": "2023-02-24T13:22:05Z", "closed_at": "2020-03-11T00:02:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen using `responses={...: {\"model\": List[PydanticModel]}}` in a route function there is an exception returned `AssertionError: A response model must be a Pydantic model` when attempting to run the application.\r\n\r\n**To Reproduce**\r\n```python\r\nfrom fastapi import FastAPI\r\nfrom pydantic import BaseModel\r\n\r\nclass T(BaseModel):\r\n    a: int\r\n\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/\", responses={200: {\"model\": List[T]}})\r\ndef index():\r\n    ... # This is never entered due to error when adding the route\r\n```\r\n\r\n**Expected behavior**\r\nThis behaves the same as `response_model=` since it is allowed and works as intended there.\r\n\r\n**Environment:**\r\n - OS: macOS\r\n - FastAPI Version [e.g. 0.3.0], get it with: fastapi==0.42.0\r\n - Python 3.7.0\r\n\r\n**Additional Context**\r\nI was going to return my response directly but would like the schema to be automatically done based on the pydantic model. I was following the steps in https://fastapi.tiangolo.com/tutorial/additional-responses/", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/628/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/597", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/597/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/597/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/597/events", "html_url": "https://github.com/tiangolo/fastapi/issues/597", "id": 503436675, "node_id": "MDU6SXNzdWU1MDM0MzY2NzU=", "number": 597, "title": "help site sitemap is invalid", "user": {"login": "samuelcolvin", "id": 4039449, "node_id": "MDQ6VXNlcjQwMzk0NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/4039449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuelcolvin", "html_url": "https://github.com/samuelcolvin", "followers_url": "https://api.github.com/users/samuelcolvin/followers", "following_url": "https://api.github.com/users/samuelcolvin/following{/other_user}", "gists_url": "https://api.github.com/users/samuelcolvin/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuelcolvin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuelcolvin/subscriptions", "organizations_url": "https://api.github.com/users/samuelcolvin/orgs", "repos_url": "https://api.github.com/users/samuelcolvin/repos", "events_url": "https://api.github.com/users/samuelcolvin/events{/privacy}", "received_events_url": "https://api.github.com/users/samuelcolvin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-07T12:59:42Z", "updated_at": "2023-02-22T10:21:03Z", "closed_at": "2019-10-09T17:45:44Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "See https://fastapi.tiangolo.com/sitemap.xml\r\n\r\n`loc` is missing. This may be a problem with the theme, but [their sitemap](https://squidfunk.github.io/mkdocs-material/) does not have the same problem.\r\n\r\n```xml\r\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\r\n<url>\r\n<loc>None</loc>\r\n<lastmod>2019-10-07</lastmod>\r\n<changefreq>daily</changefreq>\r\n</url>\r\n<url>\r\n<loc>None</loc>\r\n<lastmod>2019-10-07</lastmod>\r\n<changefreq>daily</changefreq>\r\n</url>\r\n<url>\r\n<loc>None</loc>\r\n<lastmod>2019-10-07</lastmod>\r\n<changefreq>daily</changefreq>\r\n</url>\r\n<url>\r\n<loc>None</loc>\r\n<lastmod>2019-10-07</lastmod>\r\n<changefreq>daily</changefreq>\r\n</url>\r\n<url>\r\n<loc>None</loc>\r\n<lastmod>2019-10-07</lastmod>\r\n<changefreq>daily</changefreq>\r\n</url>\r\n...\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/597/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/539", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/539/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/539/events", "html_url": "https://github.com/tiangolo/fastapi/issues/539", "id": 494400039, "node_id": "MDU6SXNzdWU0OTQ0MDAwMzk=", "number": 539, "title": "route_class not preserved when calling APIRouter.include_router", "user": {"login": "dmontagu", "id": 35119617, "node_id": "MDQ6VXNlcjM1MTE5NjE3", "avatar_url": "https://avatars.githubusercontent.com/u/35119617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmontagu", "html_url": "https://github.com/dmontagu", "followers_url": "https://api.github.com/users/dmontagu/followers", "following_url": "https://api.github.com/users/dmontagu/following{/other_user}", "gists_url": "https://api.github.com/users/dmontagu/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmontagu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmontagu/subscriptions", "organizations_url": "https://api.github.com/users/dmontagu/orgs", "repos_url": "https://api.github.com/users/dmontagu/repos", "events_url": "https://api.github.com/users/dmontagu/events{/privacy}", "received_events_url": "https://api.github.com/users/dmontagu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-09-17T04:53:20Z", "updated_at": "2023-02-24T13:22:51Z", "closed_at": "2019-10-04T21:35:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nWhen calling `APIRouter.include_router`, the class of the included routes should be preserved. Right now, this is not the case -- the `route_class` of the parent router is used. This means that the `route_class` is lost on inclusion if one isn't careful. Worse, it means that even if you manually create a router with multiple route-types present, there is no way to include that router in another without changing the route type of some of the routes.\r\n\r\nSee the `include_typed_router` function from #521 for an example of how this currently requires a workaround.\r\n\r\nI have addressed this in the short PR #538, but wanted to create an issue for discussion in case there is any reason to preserve the current behavior.", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/539/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/539/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/492", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/492/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/492/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/492/events", "html_url": "https://github.com/tiangolo/fastapi/issues/492", "id": 487798177, "node_id": "MDU6SXNzdWU0ODc3OTgxNzc=", "number": 492, "title": "FastAPI exceptions module mistakenly references the 'requests' package", "user": {"login": "kamalgill", "id": 133923, "node_id": "MDQ6VXNlcjEzMzkyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/133923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamalgill", "html_url": "https://github.com/kamalgill", "followers_url": "https://api.github.com/users/kamalgill/followers", "following_url": "https://api.github.com/users/kamalgill/following{/other_user}", "gists_url": "https://api.github.com/users/kamalgill/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamalgill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamalgill/subscriptions", "organizations_url": "https://api.github.com/users/kamalgill/orgs", "repos_url": "https://api.github.com/users/kamalgill/repos", "events_url": "https://api.github.com/users/kamalgill/events{/privacy}", "received_events_url": "https://api.github.com/users/kamalgill/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-31T18:28:28Z", "updated_at": "2023-02-24T13:23:12Z", "closed_at": "2019-09-01T12:51:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nStarting up a FastAPI 0.38.0 app displays the following error:\r\n\r\n```python\r\nfrom fastapi import FastAPI\r\n  File \".../lib/site-packages/fastapi/__init__.py\", line 7, in <module>\r\n    from .applications import FastAPI\r\n  File \".../lib/site-packages/fastapi/applications.py\", line 3, in <module>\r\n    from fastapi import routing\r\n  File \".../lib/site-packages/fastapi/routing.py\", line 7, in <module>\r\n    from fastapi.dependencies.models import Dependant\r\n  File \".../lib/site-packages/fastapi/dependencies/models.py\", line 3, in <module>\r\n    from fastapi.security.base import SecurityBase\r\n  File \".../lib/site-packages/fastapi/security/__init__.py\", line 2, in <module>\r\n    from .http import (\r\n  File \".../lib/site-packages/fastapi/security/http.py\", line 5, in <module>\r\n    from fastapi.exceptions import HTTPException\r\n  File \".../lib/site-packages/fastapi/exceptions.py\", line 5, in <module>\r\n    from requests import Request\r\nModuleNotFoundError: No module named 'requests'\r\n```\r\n\r\n**Expected behavior**\r\nThe app should start without import errors.\r\n\r\n**Environment:**\r\n - OS: Linux, Windows, and macOS\r\n - FastAPI Version: 0.38.0\r\n\r\n**Additional context**\r\nIt's likely the `from requests import Request` should be replaced with `from starlette.requests import Request` in line 5 of `fastapi/exceptions.py`", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/492/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/469", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/469/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/469/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/469/events", "html_url": "https://github.com/tiangolo/fastapi/issues/469", "id": 485629118, "node_id": "MDU6SXNzdWU0ODU2MjkxMTg=", "number": 469, "title": "Router level Security dependency blocks route level dependency", "user": {"login": "elyobo", "id": 407806, "node_id": "MDQ6VXNlcjQwNzgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/407806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elyobo", "html_url": "https://github.com/elyobo", "followers_url": "https://api.github.com/users/elyobo/followers", "following_url": "https://api.github.com/users/elyobo/following{/other_user}", "gists_url": "https://api.github.com/users/elyobo/gists{/gist_id}", "starred_url": "https://api.github.com/users/elyobo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elyobo/subscriptions", "organizations_url": "https://api.github.com/users/elyobo/orgs", "repos_url": "https://api.github.com/users/elyobo/repos", "events_url": "https://api.github.com/users/elyobo/events{/privacy}", "received_events_url": "https://api.github.com/users/elyobo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-08-27T07:14:20Z", "updated_at": "2023-02-24T13:23:25Z", "closed_at": "2022-09-22T00:18:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nIf I define a route level `Security` dependency in a router, then define a `Security` dependency in the dependencies when adding the router to an app, then the route level dependency is ignored.\r\n\r\n**To Reproduce**\r\n\r\nExcerpted example.\r\n\r\nA router defines a dependency with a scope.\r\n\r\n```\r\ndata_router = APIRouter()                                                           \r\n@router.get(                                                                   \r\n    '/sales',                                                                  \r\n    dependencies=[Security(get_current_user, scopes=['sales'])],               \r\n    )                                                                          \r\ndef get_sales():\r\n  pass\r\n```\r\n\r\nAnother router includes that router, defining another dependency\r\n\r\n```\r\nfrom .data import data_router\r\napi_router = APIRouter()                                                           \r\napi_router.include_router(                                                      \r\n    data_router,                                                                \r\n    prefix='/data',                                                             \r\n    dependencies=[Security(get_current_user, scopes=[])],                       \r\n    )                                                                           \r\n```\r\n\r\nThe `sales` scope does not appear in the `SecurityScopes` scopes when validating the scopes.  Defining `Depends(get_current_user)` instead has the same problem (my original version; not all routes require the same scope, but I have a fallback requirement for a signed in user at least).  Removing the dependency _entirely_, e.g. below, does get the correct scope in `SecurityScopes`.\r\n\r\n```\r\nfrom .data import data_router\r\napi_router = APIRouter()                                                           \r\napi_router.include_router(                                                      \r\n    data_router,                                                                \r\n    prefix='/data',                                                             \r\n    )                                                                           \r\n```\r\n\r\n**Expected behavior**\r\n\r\nThe scopes from all `Security` definitions in the dependency tree should be required (e.g. any defined when including the router, and any on the routes that the router provides).\r\n\r\n**Screenshots**\r\nN/A\r\n\r\n**Environment:**\r\n - OS: Ubuntu 19.04\r\n - FastAPI Version: 0.35.0\r\n- Python version: 3.7.3", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/469/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/469/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/446", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/446/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/446/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/446/events", "html_url": "https://github.com/tiangolo/fastapi/issues/446", "id": 482098079, "node_id": "MDU6SXNzdWU0ODIwOTgwNzk=", "number": 446, "title": "Dependencies imported from file with python annotations don't work", "user": {"login": "LKay", "id": 181078, "node_id": "MDQ6VXNlcjE4MTA3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/181078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LKay", "html_url": "https://github.com/LKay", "followers_url": "https://api.github.com/users/LKay/followers", "following_url": "https://api.github.com/users/LKay/following{/other_user}", "gists_url": "https://api.github.com/users/LKay/gists{/gist_id}", "starred_url": "https://api.github.com/users/LKay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LKay/subscriptions", "organizations_url": "https://api.github.com/users/LKay/orgs", "repos_url": "https://api.github.com/users/LKay/repos", "events_url": "https://api.github.com/users/LKay/events{/privacy}", "received_events_url": "https://api.github.com/users/LKay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-08-19T04:22:51Z", "updated_at": "2023-02-24T13:23:34Z", "closed_at": "2019-11-27T02:27:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nWhen there is a file that contains python annotations import at the top and contains some async function returning parameters dependency injection doesn't work.\r\n\r\n**To Reproduce**\r\n\r\nCreate file `deps.py`:\r\n\r\n```python\r\nfrom __future__ import annotation\r\n\r\nasync def test(foo: Optional[str] = None):\r\n  return foo\r\n```\r\n\r\nAnd then in the other file containing route definition:\r\n\r\n```python\r\nfrom .deps import test\r\n\r\n@api.get(\"/foo\")\r\nasync def foo_route(foo: Optional[str] = Depends(test)):\r\n  return None\r\n```\r\n\r\nTrying to run the app with such configuration results in error:\r\n\r\n```\r\n...\r\n  File \"/Users/user/.local/share/virtualenvs/pilgrim-api-A9HJbenQ/lib/python3.7/site-packages/fastapi/dependencies/utils.py\", line 179, in get_dependant\r\n    param_field = get_param_field(param=param, default_schema=params.Query)\r\n  File \"/Users/user/.local/share/virtualenvs/pilgrim-api-A9HJbenQ/lib/python3.7/site-packages/fastapi/dependencies/utils.py\", line 265, in get_param_field\r\n    schema=schema,\r\n  File \"/Users/user/.local/share/virtualenvs/pilgrim-api-A9HJbenQ/lib/python3.7/site-packages/pydantic/fields.py\", line 112, in __init__\r\n    self.prepare()\r\n  File \"/Users/user/.local/share/virtualenvs/pilgrim-api-A9HJbenQ/lib/python3.7/site-packages/pydantic/fields.py\", line 178, in prepare\r\n    self._populate_validators()\r\n  File \"/Users/user/.local/share/virtualenvs/pilgrim-api-A9HJbenQ/lib/python3.7/site-packages/pydantic/fields.py\", line 269, in _populate_validators\r\n    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),\r\n  File \"/Users/user/.local/share/virtualenvs/pilgrim-api-A9HJbenQ/lib/python3.7/site-packages/pydantic/validators.py\", line 470, in find_validators\r\n    raise RuntimeError(f'error checking inheritance of {type_!r} (type: {display_as_type(type_)})') from e\r\nRuntimeError: error checking inheritance of 'Optional[str]' (type: str)\r\n```\r\n\r\n**Expected behavior**\r\nIt runs and works.\r\n\r\n**Environment:**\r\n - OS: macOS\r\n - FastAPI Version: 0.35\r\n - Python: 3.7.3", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/446/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/431", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/431/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/431/events", "html_url": "https://github.com/tiangolo/fastapi/issues/431", "id": 479575759, "node_id": "MDU6SXNzdWU0Nzk1NzU3NTk=", "number": 431, "title": "OpenAPI: media_types of Body parameters and requestBody do not match", "user": {"login": "divums", "id": 1397556, "node_id": "MDQ6VXNlcjEzOTc1NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1397556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divums", "html_url": "https://github.com/divums", "followers_url": "https://api.github.com/users/divums/followers", "following_url": "https://api.github.com/users/divums/following{/other_user}", "gists_url": "https://api.github.com/users/divums/gists{/gist_id}", "starred_url": "https://api.github.com/users/divums/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divums/subscriptions", "organizations_url": "https://api.github.com/users/divums/orgs", "repos_url": "https://api.github.com/users/divums/repos", "events_url": "https://api.github.com/users/divums/events{/privacy}", "received_events_url": "https://api.github.com/users/divums/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-12T10:36:26Z", "updated_at": "2023-02-24T13:23:41Z", "closed_at": "2019-08-30T22:32:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nThe openapi.json for requestBody definitions uses the FastAPI default media_type instead of the defined one in the Body parameter(s).\r\n\r\n**To Reproduce**\r\nCreate a path with request body that has either a single embedded parameter or multiple ones. List media_type that is different than the default application/json is. \r\n\r\n```python\r\nfrom fastapi import FastAPI\r\nfrom starlette import status\r\nfrom . import schemas\r\n\r\napp = FastAPI()\r\n\r\n@app.post('/customers',\r\n         status_code=status.HTTP_201_CREATED,\r\n         )\r\ndef customer_create(data: schemas.Customer = Body(..., media_type='application/vnd+json.api', embed=True)):\r\n    created_customer = {**data.dict(), **{'id': '1'}}\r\n    return {'data': created_customer}\r\n```\r\n\r\nThen verify your openapi.json.\r\n\r\n```yaml\r\n# ...\r\npost:\r\n  responses:\r\n    # ...\r\n  summary: Customer Create\r\n  operationId: customer_create_api_customers_post\r\n  requestBody:\r\n    content:\r\n      application/json: # this should be different\r\n        schema:\r\n          \"$ref\": \"#/components/schemas/Body_customer_create_api_customers_post\"\r\n    required: true\r\n```\r\n\r\n**Expected behavior**\r\nThe media_type of the requestBody of given path matches the specified one:\r\n\r\n```yaml\r\n# ...\r\npost:\r\n  responses:\r\n    # ...\r\n  summary: Customer Create\r\n  operationId: customer_create_api_customers_post\r\n  requestBody:\r\n    content:\r\n      application/vnd+json.api:\r\n        schema:\r\n          \"$ref\": \"#/components/schemas/Body_customer_create_api_customers_post\"\r\n    required: true\r\n```\r\n\r\n**Environment:**\r\n - OS: masOS 10.14.6\r\n - Python: 3.6.5\r\n - FastAPI: 0.35.0", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/431/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/429", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/429/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/429/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/429/events", "html_url": "https://github.com/tiangolo/fastapi/issues/429", "id": 479568449, "node_id": "MDU6SXNzdWU0Nzk1Njg0NDk=", "number": 429, "title": "OpenAPI: HTTP_422 response does not use custom media_type", "user": {"login": "divums", "id": 1397556, "node_id": "MDQ6VXNlcjEzOTc1NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1397556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divums", "html_url": "https://github.com/divums", "followers_url": "https://api.github.com/users/divums/followers", "following_url": "https://api.github.com/users/divums/following{/other_user}", "gists_url": "https://api.github.com/users/divums/gists{/gist_id}", "starred_url": "https://api.github.com/users/divums/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divums/subscriptions", "organizations_url": "https://api.github.com/users/divums/orgs", "repos_url": "https://api.github.com/users/divums/repos", "events_url": "https://api.github.com/users/divums/events{/privacy}", "received_events_url": "https://api.github.com/users/divums/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-12T10:17:51Z", "updated_at": "2023-02-24T13:23:42Z", "closed_at": "2019-08-30T21:46:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nFastAPI automatically adds an HTTP_422 response to all paths in the OpenAPI specification that have parameters or request body. This response does not use the media_type of response_class if any custom defined. Furthermore, it overwrites any error object format with the default one.\r\n\r\n**To Reproduce**\r\nCreate a path with parameters and add custom response_class to decorator. Add custom exception handlers that reformat the default error responses as per your liking. Then observe generated openapi.json\r\n\r\n```python\r\nfrom fastapi import FastAPI, HTTPException\r\nfrom fastapi.exceptions import RequestValidationError\r\nfrom starlette import status\r\nfrom starlette.responses import JSONResponse\r\nfrom . import schemas\r\n\r\napp = FastAPI()\r\n\r\nclass JsonApiResponse(JSONResponse):\r\n    media_type = 'application/vnd+json.api'\r\n\r\n@app.exception_handler(HTTPException)\r\nasync def http_exception_handler(request, exc: HTTPException) -> JsonApiResponse:\r\n    headers = getattr(exc, \"headers\", None)\r\n    content = schemas.ErrorResponse(errors=[dict(title=\"Bad request\", detail=exc.detail, status=exc.status_code)]).dict()\r\n    status_code = exc.status_code\r\n    if headers:\r\n        return JsonApiResponse(content=content, status_code=status_code, headers=headers)\r\n    else:\r\n        return JsonApiResponse(content=content, status_code=status_code)\r\n\r\n@app.exception_handler(RequestValidationError)\r\nasync def request_validation_exception_handler(request, exc: RequestValidationError) -> JsonApiResponse:\r\n    http422 = status.HTTP_422_UNPROCESSABLE_ENTITY\r\n    return JsonApiResponse(\r\n        content=schemas.ErrorResponse(errors=[\r\n            dict(title=err['type'], detail=err['msg'], source='/'.join(err['loc']), status=http422)\r\n            for err in exc.errors()\r\n        ]).dict(),\r\n        status_code=http422,\r\n    )\r\n\r\n@app.post('/customers',\r\n         status_code=status.HTTP_201_CREATED,\r\n         response_model=schemas.CustomerDetailsResponse,\r\n         response_class=JsonApiResponse,\r\n         )\r\ndef customer_create(data: schemas.Customer = Body(..., media_type='application/vnd+json.api', embed=True)):\r\n    created_customer = {**data.dict(), **{'id': '1'}}\r\n    return {'data': created_customer}\r\n``` \r\n\r\nThe openapi.json will include the unwanted 422 response with the FastAPI default error object definitions:\r\n\r\n```yaml\r\n  # ...\r\n  '422':\r\n    description: Validation Error\r\n    content:\r\n      application/json:\r\n        schema:\r\n          \"$ref\": \"#/components/schemas/HTTPValidationError\"\r\n```\r\n\r\n**Expected behavior**\r\nAt least, the media_type of the response_class should be respected. But the best would be if the 422 would not be added to the specification unless requested via the path decorator. Or if the 422 definitions of mine were respected.\r\n\r\n```python\r\n@app.post('/customers',\r\n         status_code=status.HTTP_201_CREATED,\r\n         response_model=schemas.CustomerDetailsResponse,\r\n         response_class=JsonApiResponse,\r\n         responses={\r\n             422: {\r\n                 'model': schemas.ErrorResponse\r\n             },\r\n         })\r\ndata: schemas.Customer = Body(..., media_type='application/vnd+json.api', embed=True)):\r\n    pass\r\n```\r\n\r\n**Environment:**\r\n - OS: masOS 10.14.6\r\n - Python: 3.6.5\r\n - FastAPI: 0.35.0", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/429/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/428", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/428/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/428/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/428/events", "html_url": "https://github.com/tiangolo/fastapi/issues/428", "id": 479479295, "node_id": "MDU6SXNzdWU0Nzk0NzkyOTU=", "number": 428, "title": "OpenAPI: response keys are limited to be status codes", "user": {"login": "divums", "id": 1397556, "node_id": "MDQ6VXNlcjEzOTc1NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1397556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divums", "html_url": "https://github.com/divums", "followers_url": "https://api.github.com/users/divums/followers", "following_url": "https://api.github.com/users/divums/following{/other_user}", "gists_url": "https://api.github.com/users/divums/gists{/gist_id}", "starred_url": "https://api.github.com/users/divums/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divums/subscriptions", "organizations_url": "https://api.github.com/users/divums/orgs", "repos_url": "https://api.github.com/users/divums/repos", "events_url": "https://api.github.com/users/divums/events{/privacy}", "received_events_url": "https://api.github.com/users/divums/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-12T05:59:43Z", "updated_at": "2023-02-24T13:23:43Z", "closed_at": "2019-08-30T16:17:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nAccording to OpenAPI 3 specification, under `responses` dictionary each definition starts with the keys which is either a valid status codes (200, 204, 404, etc.), a [range of codes](https://swagger.io/docs/specification/describing-responses#status-codes) (1XX, 2XX, 3XX, etc.) or the word [\"default\"](https://swagger.io/docs/specification/describing-responses#default).\r\n\r\nIf a path is defined with such response, the server crashes when opening the doc, redoc or openapi.json URLs.\r\n\r\n**To Reproduce**\r\n```python\r\nfrom fastapi import FastAPI, HTTPException\r\nfrom starlette import status\r\nfrom . import schemas\r\n\r\napp = FastAPI()\r\n\r\n@app.get('/customer/{id}',\r\n            status_code=status.HTTP_200_OK,\r\n            response_model=schemas.CustomerDetailsResponse,\r\n            responses={\r\n                '4xx': {'model': schemas.ErrorResponse},\r\n                '5xx': {'model': schemas.ErrorResponse},\r\n            },\r\n            )\r\ndef customer_details(id: str):\r\n    raise HTTPException(status_code=status.HTTP_501_NOT_IMPLEMENTED)\r\n```\r\n\r\n**Expected behavior**\r\nThe openapi.json is created, documentation opens, and the responses show the range / default \r\ndefinitions.\r\n\r\n```yaml\r\n# ...\r\n\"/api/customer/{id}\":\r\n  get:\r\n    responses:\r\n      '200':\r\n        description: Successful Response\r\n        content:\r\n          application/json:\r\n            schema:\r\n              \"$ref\": \"#/components/schemas/CustomerDetailsResponse\"\r\n      4xx:\r\n        description: Additional Response\r\n        content:\r\n          application/json:\r\n            schema:\r\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\r\n      5xx:\r\n        description: Additional Response\r\n        content:\r\n          application/json:\r\n            schema:\r\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\r\n    summary: Customer Details\r\n    operationId: customer_details_api_customer__id__get\r\n    parameters:\r\n    - required: true\r\n      schema:\r\n        title: Id\r\n        type: string\r\n      name: id\r\n      in: path\r\n```\r\n\r\n**Environment:**\r\n - OS: masOS 10.14.6\r\n - Python: 3.6.5\r\n - FastAPI: 0.35.0", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/428/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/416", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/416/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/416/events", "html_url": "https://github.com/tiangolo/fastapi/issues/416", "id": 475767126, "node_id": "MDU6SXNzdWU0NzU3NjcxMjY=", "number": 416, "title": "Header duplicate on subdependency", "user": {"login": "henriklindgren", "id": 126198, "node_id": "MDQ6VXNlcjEyNjE5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/126198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henriklindgren", "html_url": "https://github.com/henriklindgren", "followers_url": "https://api.github.com/users/henriklindgren/followers", "following_url": "https://api.github.com/users/henriklindgren/following{/other_user}", "gists_url": "https://api.github.com/users/henriklindgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/henriklindgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henriklindgren/subscriptions", "organizations_url": "https://api.github.com/users/henriklindgren/orgs", "repos_url": "https://api.github.com/users/henriklindgren/repos", "events_url": "https://api.github.com/users/henriklindgren/events{/privacy}", "received_events_url": "https://api.github.com/users/henriklindgren/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-08-01T16:04:30Z", "updated_at": "2023-02-24T13:23:49Z", "closed_at": "2019-08-26T13:39:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nGetting duplicate headers on API methods with subdependencies requiring the same dependency with a Header argument.\r\n\r\n**To Reproduce**\r\nI've created an example repo to reproduce https://github.com/henriklindgren/fastapi-header-bug\r\nSteps to reproduce the behavior:\r\n1. Create an API-method which uses the same dependency, with a Header argument, in each of 2 paths of the dependency tree. Like this https://github.com/henriklindgren/fastapi-header-bug/blob/master/app/main.py\r\n2. Visit generated OpenApi json and see duplicate header requirements for the method. \r\n```json\r\n\"parameters\": [\r\n  {\r\n    \"required\": true,\r\n    \"schema\": {\r\n      \"title\": \"Someheader\",\r\n      \"type\": \"string\"\r\n    },\r\n    \"name\": \"someheader\",\r\n    \"in\": \"header\"\r\n  },\r\n  {\r\n    \"required\": true,\r\n    \"schema\": {\r\n      \"title\": \"Someheader\",\r\n      \"type\": \"string\"\r\n    },\r\n    \"name\": \"someheader\",\r\n    \"in\": \"header\"\r\n  }\r\n]\r\n```\r\n\r\n**Expected behavior**\r\nA single header requirement shown in the OpenApi definition.\r\n\r\n**Environment:**\r\n - OS: Linux\r\n - FastAPI Version: 0.33.0\r\n - Python Version: 3.7.3\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/416/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/368", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/368/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/368/events", "html_url": "https://github.com/tiangolo/fastapi/issues/368", "id": 464454883, "node_id": "MDU6SXNzdWU0NjQ0NTQ4ODM=", "number": 368, "title": "Possible bug in `routing` module L#49", "user": {"login": "wadkar", "id": 788991, "node_id": "MDQ6VXNlcjc4ODk5MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/788991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wadkar", "html_url": "https://github.com/wadkar", "followers_url": "https://api.github.com/users/wadkar/followers", "following_url": "https://api.github.com/users/wadkar/following{/other_user}", "gists_url": "https://api.github.com/users/wadkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/wadkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wadkar/subscriptions", "organizations_url": "https://api.github.com/users/wadkar/orgs", "repos_url": "https://api.github.com/users/wadkar/repos", "events_url": "https://api.github.com/users/wadkar/events{/privacy}", "received_events_url": "https://api.github.com/users/wadkar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1154536361, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYx", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 1870517463, "node_id": "MDU6TGFiZWwxODcwNTE3NDYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/confirmed", "name": "confirmed", "color": "9cf4bf", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-05T04:21:58Z", "updated_at": "2023-02-24T13:24:14Z", "closed_at": "2020-02-29T16:33:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nOn [this line](https://github.com/tiangolo/fastapi/blob/195559ccbaecb16faf7d5fc3985198be9bcab74c/fastapi/routing.py#L48) `field.validate()` is passed a `response: Response` object, but the method signature for `Field.validate()` expects a `Dict` object - is this intentional?\r\n\r\nI was investigating a bug very much similar to #361 \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nN/A\r\n\r\n**Expected behavior**\r\nThe passed arguments should match with the parameter annotations.\r\n\r\n**Screenshots**\r\nN/A\r\n\r\n**Environment:**\r\n - OS: e.g. Linux (in docker)\r\n - FastAPI Version : e.g. 0.31.0\r\n- Python version: 3.6.8\r\n\r\n**Additional context**\r\nMight be related to #361 ", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/368/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/365", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/365/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/365/events", "html_url": "https://github.com/tiangolo/fastapi/issues/365", "id": 464304399, "node_id": "MDU6SXNzdWU0NjQzMDQzOTk=", "number": 365, "title": "Tutorial websocket doc example", "user": {"login": "Ben621", "id": 52538873, "node_id": "MDQ6VXNlcjUyNTM4ODcz", "avatar_url": "https://avatars.githubusercontent.com/u/52538873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ben621", "html_url": "https://github.com/Ben621", "followers_url": "https://api.github.com/users/Ben621/followers", "following_url": "https://api.github.com/users/Ben621/following{/other_user}", "gists_url": "https://api.github.com/users/Ben621/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ben621/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ben621/subscriptions", "organizations_url": "https://api.github.com/users/Ben621/orgs", "repos_url": "https://api.github.com/users/Ben621/repos", "events_url": "https://api.github.com/users/Ben621/events{/privacy}", "received_events_url": "https://api.github.com/users/Ben621/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-07-04T14:47:19Z", "updated_at": "2023-02-24T13:24:14Z", "closed_at": "2020-06-24T00:18:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nHi, \r\nOn the docs of websocket the last example doesn't work.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a file main.py with the last example on the bottom of the file\r\n\r\n>https://fastapi.tiangolo.com/tutorial/websockets/#create-a-websocket\r\n```python\r\nfrom fastapi import Cookie, Depends, FastAPI, Header\r\nfrom starlette.responses import HTMLResponse\r\nfrom starlette.status import WS_1008_POLICY_VIOLATION\r\nfrom starlette.websockets import WebSocket\r\n\r\napp = FastAPI()\r\n\r\nhtml = \"\"\"\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <title>Chat</title>\r\n    </head>\r\n    <body>\r\n        <h1>WebSocket Chat</h1>\r\n        <form action=\"\" onsubmit=\"sendMessage(event)\">\r\n            <label>Item ID: <input type=\"text\" id=\"itemId\" autocomplete=\"off\" value=\"foo\"/></label>\r\n            <button onclick=\"connect(event)\">Connect</button>\r\n            <br>\r\n            <label>Message: <input type=\"text\" id=\"messageText\" autocomplete=\"off\"/></label>\r\n            <button>Send</button>\r\n        </form>\r\n        <ul id='messages'>\r\n        </ul>\r\n        <script>\r\n        var ws = null;\r\n            function connect(event) {\r\n                var input = document.getElementById(\"itemId\")\r\n                ws = new WebSocket(\"ws://localhost:8000/items/\" + input.value + \"/ws\");\r\n                ws.onmessage = function(event) {\r\n                    var messages = document.getElementById('messages')\r\n                    var message = document.createElement('li')\r\n                    var content = document.createTextNode(event.data)\r\n                    message.appendChild(content)\r\n                    messages.appendChild(message)\r\n                };\r\n            }\r\n            function sendMessage(event) {\r\n                var input = document.getElementById(\"messageText\")\r\n                ws.send(input.value)\r\n                input.value = ''\r\n                event.preventDefault()\r\n            }\r\n        </script>\r\n    </body>\r\n</html>\r\n\"\"\"\r\n\r\n\r\n@app.get(\"/\")\r\nasync def get():\r\n    return HTMLResponse(html)\r\n\r\n\r\nasync def get_cookie_or_client(\r\n    websocket: WebSocket, session: str = Cookie(None), x_client: str = Header(None)\r\n):\r\n    if session is None and x_client is None:\r\n        await websocket.close(code=WS_1008_POLICY_VIOLATION)\r\n    return session or x_client\r\n\r\n\r\n@app.websocket(\"/items/{item_id}/ws\")\r\nasync def websocket_endpoint(\r\n    websocket: WebSocket,\r\n    item_id: int,\r\n    q: str = None,\r\n    cookie_or_client: str = Depends(get_cookie_or_client),\r\n):\r\n    await websocket.accept()\r\n    while True:\r\n        data = await websocket.receive_text()\r\n        await websocket.send_text(\r\n            f\"Session Cookie or X-Client Header value is: {cookie_or_client}\"\r\n        )\r\n        if q is not None:\r\n            await websocket.send_text(f\"Query parameter q is: {q}\")\r\n        await websocket.send_text(f\"Message text was: {data}, for item ID: {item_id}\")\r\n``` \r\n2. Run the application with the cmd:\r\n```\r\nuvicorn main:app  --log-level debug --reload\r\n```\r\n3. Open the browser 127.0.0.01\r\n  - the first time i connect  with ItemID foo , press the button connect \r\n  - send message hi with ItemID foo and press the button send.\r\n  it's look like the connect fail but the second ,but the send have return code 200\r\n  but nothing happen on the web side. \r\n\r\n![image](https://user-images.githubusercontent.com/52538873/60673629-db137a00-9e80-11e9-8a6b-8246e5297277.png)\r\n\r\n4. See error\r\n```python\r\n\r\nINFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\r\nINFO: Started reloader process [366952]\r\nemail-validator not installed, email fields will be treated as str.\r\nTo install, run: pip install email-validator\r\nINFO: Started server process [366957]\r\nINFO: Waiting for application startup.\r\nDEBUG: None - ASGI [1] Started\r\nDEBUG: None - ASGI [1] Sent {'type': 'lifespan.startup'}\r\nDEBUG: None - ASGI [1] Received {'type': 'lifespan.startup.complete'}\r\nDEBUG: ('127.0.0.1', 50056) - Connected\r\nDEBUG: server - state = CONNECTING\r\nDEBUG: server - event = connection_made(<TCPTransport closed=False reading=True 0x1819178>)\r\nDEBUG: ('127.0.0.1', 50056) - ASGI [2] Started\r\nDEBUG: ('127.0.0.1', 50056) - ASGI [2] Received {'type': 'websocket.close', 'code': 1008}\r\nINFO: ('127.0.0.1', 50056) - \"WebSocket /items/foo/ws\" 403\r\nDEBUG: ('127.0.0.1', 50056) - ASGI [2] Raised exception\r\nERROR: Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"/data/experiments/realtime_web_socket/lib/python3.7/site-packages/uvicorn/protocols/websockets/websockets_impl.py\", line 147, in run_asgi\r\n    result = await self.app(self.scope, self.asgi_receive, self.asgi_send)\r\n  File \"/data/experiments/realtime_web_socket/lib/python3.7/site-packages/uvicorn/middleware/message_logger.py\", line 58, in __call__\r\n    raise exc from None\r\n  File \"/data/experiments/realtime_web_socket/lib/python3.7/site-packages/uvicorn/middleware/message_logger.py\", line 54, in __call__\r\n    await self.app(scope, inner_receive, inner_send)\r\n  File \"/data/experiments/realtime_web_socket/lib/python3.7/site-packages/starlette/applications.py\", line 133, in __call__\r\n    await self.error_middleware(scope, receive, send)\r\n  File \"/data/experiments/realtime_web_socket/lib/python3.7/site-packages/starlette/middleware/errors.py\", line 87, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"/data/experiments/realtime_web_socket/lib/python3.7/site-packages/starlette/exceptions.py\", line 49, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"/data/experiments/realtime_web_socket/lib/python3.7/site-packages/starlette/routing.py\", line 585, in __call__\r\n    await route(scope, receive, send)\r\n  File \"/data/experiments/realtime_web_socket/lib/python3.7/site-packages/starlette/routing.py\", line 265, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"/data/experiments/realtime_web_socket/lib/python3.7/site-packages/starlette/routing.py\", line 56, in app\r\n    await func(session)\r\n  File \"/data/experiments/realtime_web_socket/lib/python3.7/site-packages/fastapi/routing.py\", line 148, in app\r\n    await websocket.close(code=WS_1008_POLICY_VIOLATION)\r\n  File \"/data/experiments/realtime_web_socket/lib/python3.7/site-packages/starlette/websockets.py\", line 121, in close\r\n    await self.send({\"type\": \"websocket.close\", \"code\": code})\r\n  File \"/data/experiments/realtime_web_socket/lib/python3.7/site-packages/starlette/websockets.py\", line 70, in send\r\n    raise RuntimeError('Cannot call \"send\" once a close message has been sent.')\r\nRuntimeError: Cannot call \"send\" once a close message has been sent.\r\nDEBUG: server ! failing WebSocket connection in the CONNECTING state: 1006 [no reason]\r\nDEBUG: ('127.0.0.1', 50058) - Connected\r\nDEBUG: server x half-closing TCP connection\r\nDEBUG: ('127.0.0.1', 50058) - ASGI [3] Started\r\nDEBUG: ('127.0.0.1', 50058) - ASGI [3] Received {'type': 'http.response.start', 'status': 200, 'headers': '<...>'}\r\nINFO: ('127.0.0.1', 50058) - \"GET / HTTP/1.1\" 200\r\nDEBUG: ('127.0.0.1', 50058) - ASGI [3] Received {'type': 'http.response.body', 'body': '<1419 bytes>'}\r\nDEBUG: ('127.0.0.1', 50058) - ASGI [3] Completed\r\nDEBUG: server - event = eof_received()\r\nDEBUG: server - event = connection_lost(None)\r\nDEBUG: server - state = CLOSED\r\nDEBUG: server x code = 1006, reason = [no reason]\r\nDEBUG: ('127.0.0.1', 50058) - Disconnected\r\nDEBUG: ('127.0.0.1', 50060) - Connected\r\nDEBUG: ('127.0.0.1', 50060) - ASGI [4] Started\r\nDEBUG: ('127.0.0.1', 50060) - ASGI [4] Received {'type': 'http.response.start', 'status': 200, 'headers': '<...>'}\r\nINFO: ('127.0.0.1', 50060) - \"GET / HTTP/1.1\" 200\r\nDEBUG: ('127.0.0.1', 50060) - ASGI [4] Received {'type': 'http.response.body', 'body': '<1419 bytes>'}\r\nDEBUG: ('127.0.0.1', 50060) - ASGI [4] Completed\r\nDEBUG: ('127.0.0.1', 50060) - Disconnected\r\n\r\n\r\n```\r\n**Expected behavior**\r\nexpected to appear the send  bold message  on the web page.\r\n\r\n**Environment:**\r\n - OS: centos 7\r\n - FastAPI Version [e.g. 0.3.0], get it with: fastapi==0.31.0\r\n\r\n```Python\r\nimport fastapi\r\nprint(fastapi.__version__)\r\n0.31.0\r\n```\r\n\r\n- Python version, get it with:\r\n\r\n```bash\r\npython --version\r\nPython 3.7.3\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/365/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/332", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/332/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/332/events", "html_url": "https://github.com/tiangolo/fastapi/issues/332", "id": 460144204, "node_id": "MDU6SXNzdWU0NjAxNDQyMDQ=", "number": 332, "title": "OpenAPI schema generation sometimes fails", "user": {"login": "dmontagu", "id": 35119617, "node_id": "MDQ6VXNlcjM1MTE5NjE3", "avatar_url": "https://avatars.githubusercontent.com/u/35119617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmontagu", "html_url": "https://github.com/dmontagu", "followers_url": "https://api.github.com/users/dmontagu/followers", "following_url": "https://api.github.com/users/dmontagu/following{/other_user}", "gists_url": "https://api.github.com/users/dmontagu/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmontagu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmontagu/subscriptions", "organizations_url": "https://api.github.com/users/dmontagu/orgs", "repos_url": "https://api.github.com/users/dmontagu/repos", "events_url": "https://api.github.com/users/dmontagu/events{/privacy}", "received_events_url": "https://api.github.com/users/dmontagu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2019-06-24T23:49:55Z", "updated_at": "2023-02-24T13:24:28Z", "closed_at": "2019-07-14T18:33:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nFastAPI version 0.30.0\r\nPydantic version 0.28\r\n\r\nI recently upgraded to these versions, and the server is now (sometimes) hitting a ValidationError while trying to generate the OpenAPI spec (rendering the swagger docs broken).\r\n\r\nI haven't yet been able to produce a reproducible example (I think because the behavior is non-deterministic and is more likely to occur when there are many models present), but I dug into it a little and I think I have pinpointed the source of the problem: `fastapi.utils.get_model_definitions` is occasionally returning some of its values as `None`. (Strangely, this is non-deterministic; on each refresh of the docs page, a different subset of the keys have value `None`; I'm guessing this has to do with the fact that the relevant function iterates over a set, in a non-deterministic order.)\r\n\r\nIf I comment the following line, all the issues go away:\r\n```python\r\ndef get_model_definitions(\r\n    *, flat_models: Set[Type[BaseModel]], model_name_map: Dict[Type[BaseModel], str]\r\n) -> Dict[str, Any]:\r\n    definitions: Dict[str, Dict] = {}\r\n    for model in flat_models:\r\n        m_schema, m_definitions = model_process_schema(\r\n            model, model_name_map=model_name_map, ref_prefix=REF_PREFIX\r\n        )\r\n        # definitions.update(m_definitions)  # THIS LINE COMMENTED\r\n        model_name = model_name_map[model]\r\n        definitions[model_name] = m_schema\r\n    return definitions\r\n```\r\n(I am confident this is not introducing other problems, at least for _my_ entire app, because with this change I am able to use the openapi.json to generate precisely the same openapi client I was generating before I upgraded.)\r\n\r\nI dug into the `model_process_schema` function to see how `m_definitions` was getting `None` as a value in some cases, and I believe this is coming from `pydantic.schema.field_type_schema` or `pydantic.schema.field_singleton_schema` (and probably the singleton one; that's the only place I saw `None` ever being set as a value).\r\n\r\nIt looks like `None` only gets set if the field is not a subclass of BaseModel, but I can confirm that all of the models involved are subclasses of BaseModel. (Besides, if this were the problem, I wouldn't expect commenting the above mentioned line to fix the problem).\r\n\r\nIf I figure out more I'll update this issue, but any guesses about what's going wrong would be appreciated!\r\n\r\n(This problem doesn't seem to have had any effect on the handling of any requests besides the one for generating the OpenAPI spec.)\r\n\r\n**Environment:**\r\n - OS: Ubuntu\r\n - FastAPI version: 0.30.0\r\n - Pydantic version: 0.28\r\n - Python version: 3.7.3\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/332/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/303", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/303/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/303/events", "html_url": "https://github.com/tiangolo/fastapi/issues/303", "id": 454686460, "node_id": "MDU6SXNzdWU0NTQ2ODY0NjA=", "number": 303, "title": "Dead link in the doc", "user": {"login": "meandus", "id": 4262540, "node_id": "MDQ6VXNlcjQyNjI1NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4262540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meandus", "html_url": "https://github.com/meandus", "followers_url": "https://api.github.com/users/meandus/followers", "following_url": "https://api.github.com/users/meandus/following{/other_user}", "gists_url": "https://api.github.com/users/meandus/gists{/gist_id}", "starred_url": "https://api.github.com/users/meandus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meandus/subscriptions", "organizations_url": "https://api.github.com/users/meandus/orgs", "repos_url": "https://api.github.com/users/meandus/repos", "events_url": "https://api.github.com/users/meandus/events{/privacy}", "received_events_url": "https://api.github.com/users/meandus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-11T13:19:25Z", "updated_at": "2023-02-24T13:24:42Z", "closed_at": "2019-06-13T16:37:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Dead link**\r\n\r\nin the page : https://fastapi.tiangolo.com/tutorial/response-directly/\r\nthere is \"document it\" link, this one returning \"404\"\r\n\r\n**To Reproduce**\r\n404 : https://fastapi.tiangolo.com/tutorial/response-directly/tutorial/additional-responses/\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/303/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/300", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/300/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/300/events", "html_url": "https://github.com/tiangolo/fastapi/issues/300", "id": 453879473, "node_id": "MDU6SXNzdWU0NTM4Nzk0NzM=", "number": 300, "title": "Empty validation error when request parameters are of Union type", "user": {"login": "LKay", "id": 181078, "node_id": "MDQ6VXNlcjE4MTA3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/181078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LKay", "html_url": "https://github.com/LKay", "followers_url": "https://api.github.com/users/LKay/followers", "following_url": "https://api.github.com/users/LKay/following{/other_user}", "gists_url": "https://api.github.com/users/LKay/gists{/gist_id}", "starred_url": "https://api.github.com/users/LKay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LKay/subscriptions", "organizations_url": "https://api.github.com/users/LKay/orgs", "repos_url": "https://api.github.com/users/LKay/repos", "events_url": "https://api.github.com/users/LKay/events{/privacy}", "received_events_url": "https://api.github.com/users/LKay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-06-09T09:20:27Z", "updated_at": "2023-02-24T13:24:44Z", "closed_at": "2019-11-27T02:22:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nThe `Union` type works as expected when response model is defined as such according to docs: https://fastapi.tiangolo.com/tutorial/extra-models/#union-or-anyof However when parameters (body payload) are defined as `Union` the code runs fine until executing method, and docs are picking up the types and generating schema correctly but the empty `ValidationRequestError` is thrown when route method is called even if there are all parameters sent are valid.\r\n\r\n**To Reproduce**\r\n\r\nSample code to reproduce:\r\n\r\n```python\r\nclass SimpleData(BaseModel):\r\n    foo: Optional[str] = None\r\n\r\nclass ExtendedData(SimpleData):\r\n    bar: str # Note that this is required\r\n\r\nPostData = Union[ExtendedData, SimpleData]\r\n\r\n@router.post(\"/test\")\r\nasync def post(data: PostData):\r\n    return \"OK\"\r\n```\r\n\r\nThen the `POST /test` route is called with a body payload:\r\n\r\n```json\r\n{\r\n    \"foo\": \"test1\",\r\n    \"bar\": \"test2\"\r\n}\r\n```\r\n\r\nAs a result the empty `ValidationRequestError` is thrown with `value_error.missing` message but no actual field assigned to it.\r\n\r\n**Expected behavior**\r\nParameters from the request are resolved and parsed against the types inside `Union`.\r\n\r\n**Environment:**\r\n - FastAPI Version: `0.29.0`", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/300/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/281", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/281/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/281/events", "html_url": "https://github.com/tiangolo/fastapi/issues/281", "id": 450712851, "node_id": "MDU6SXNzdWU0NTA3MTI4NTE=", "number": 281, "title": "Exception in registered events are ignored", "user": {"login": "madkote", "id": 4921881, "node_id": "MDQ6VXNlcjQ5MjE4ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/4921881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madkote", "html_url": "https://github.com/madkote", "followers_url": "https://api.github.com/users/madkote/followers", "following_url": "https://api.github.com/users/madkote/following{/other_user}", "gists_url": "https://api.github.com/users/madkote/gists{/gist_id}", "starred_url": "https://api.github.com/users/madkote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madkote/subscriptions", "organizations_url": "https://api.github.com/users/madkote/orgs", "repos_url": "https://api.github.com/users/madkote/repos", "events_url": "https://api.github.com/users/madkote/events{/privacy}", "received_events_url": "https://api.github.com/users/madkote/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Question or problem"}, {"id": 5194404667, "node_id": "LA_kwDOCZduT88AAAABNZxTOw", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question-migrate", "name": "question-migrate", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-31T09:48:39Z", "updated_at": "2023-02-28T15:06:18Z", "closed_at": "2023-02-28T15:06:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nExceptions raised in event handlers functions are ignored.\r\n\r\n**To Reproduce**\r\n1. code\r\n```\r\ndef on_startup():\r\n    print('--on-startup')\r\n    print('**raise ERROR')\r\n    raise ValueError('the error is not catched!')\r\n\r\ndef on_shutdown():\r\n    print('--on-shutdown')\r\n\r\ndef register_events(app):\r\n    app.add_event_handler('startup', on_startup)\r\n    app.add_event_handler('shutdown', on_shutdown)\r\n    return app\r\n```\r\n\r\n2. See error\r\n```\r\nINFO: Started server process [10784]\r\nINFO: Waiting for application startup.\r\nDEBUG: None - ASGI [1] Started\r\nDEBUG: None - ASGI [1] Sent {'type': 'lifespan.startup'}\r\n--on-startup\r\n**raise ERROR\r\nDEBUG: None - ASGI [1] Raised exception\r\nINFO: ASGI 'lifespan' protocol appears unsupported.\r\nINFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\r\nDEBUG: ('127.0.0.1', 58716) - Connected\r\nDEBUG: ('127.0.0.1', 58716) - ASGI [2] Started\r\nDEBUG: ('127.0.0.1', 58716) - ASGI [2] Received {'type': 'http.response.start', 'status': 200, 'headers': '<...>'}\r\nINFO: ('127.0.0.1', 58716) - \"GET /version HTTP/1.1\" 200\r\n....\r\n```\r\n\r\n**Expected behavior**\r\nThe application should not start at all, if an error happened in an event - especially on `startup`\r\n\r\n**Environment:**\r\n - OS: Ubuntu\r\n - FastAPI Version: 0.26.0\r\n- Python version, get it with: 3.7\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/281/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/276", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/276/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/276/events", "html_url": "https://github.com/tiangolo/fastapi/issues/276", "id": 450154289, "node_id": "MDU6SXNzdWU0NTAxNTQyODk=", "number": 276, "title": "Generic typehints causing mypy errors", "user": {"login": "dmontagu", "id": 35119617, "node_id": "MDQ6VXNlcjM1MTE5NjE3", "avatar_url": "https://avatars.githubusercontent.com/u/35119617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmontagu", "html_url": "https://github.com/dmontagu", "followers_url": "https://api.github.com/users/dmontagu/followers", "following_url": "https://api.github.com/users/dmontagu/following{/other_user}", "gists_url": "https://api.github.com/users/dmontagu/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmontagu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmontagu/subscriptions", "organizations_url": "https://api.github.com/users/dmontagu/orgs", "repos_url": "https://api.github.com/users/dmontagu/repos", "events_url": "https://api.github.com/users/dmontagu/events{/privacy}", "received_events_url": "https://api.github.com/users/dmontagu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-30T06:35:57Z", "updated_at": "2023-02-24T13:24:55Z", "closed_at": "2019-06-27T18:51:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nThe following code results in a mypy error\r\n```python\r\nfrom typing import List\r\nfrom fastapi import FastAPI, params\r\n\r\ndef admin_dependencies() -> List[params.Security]:\r\n    return []\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/\", dependencies=admin_dependencies())\r\ndef admin_endpoint():\r\n    pass\r\n```\r\nThe mypy error is\r\n```\r\nerror: Argument \"dependencies\" to \"get\" of \"FastAPI\" has incompatible\r\n    type \"List[Security]\"; expected \"Optional[List[Depends]]\"\r\n```\r\nThis error is occurring because `List` is invariant. However, if I understand correctly, in this case `dependencies` can be safely type hinted as `Sequence`, which is covariant (and would fix the mypy error). This specific case (for `dependencies`) occurs in a few places that could probably be replaced.\r\n\r\nThis is probably also the case for the `routes` argument to `FastAPI`.\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/276/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/274", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/274/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/274/events", "html_url": "https://github.com/tiangolo/fastapi/issues/274", "id": 449851390, "node_id": "MDU6SXNzdWU0NDk4NTEzOTA=", "number": 274, "title": "missing link in doc", "user": {"login": "wshayes", "id": 365303, "node_id": "MDQ6VXNlcjM2NTMwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/365303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wshayes", "html_url": "https://github.com/wshayes", "followers_url": "https://api.github.com/users/wshayes/followers", "following_url": "https://api.github.com/users/wshayes/following{/other_user}", "gists_url": "https://api.github.com/users/wshayes/gists{/gist_id}", "starred_url": "https://api.github.com/users/wshayes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wshayes/subscriptions", "organizations_url": "https://api.github.com/users/wshayes/orgs", "repos_url": "https://api.github.com/users/wshayes/repos", "events_url": "https://api.github.com/users/wshayes/events{/privacy}", "received_events_url": "https://api.github.com/users/wshayes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-29T14:44:07Z", "updated_at": "2023-02-24T13:24:55Z", "closed_at": "2019-05-30T14:03:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nhttps://fastapi.tiangolo.com/tutorial/security/oauth2-scopes/#security-in-decorator-dependencies  link to  Depends in the decorator's dependencies parameter (https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-decorator/) results in a 404.\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/274/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/261", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/261/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/261/events", "html_url": "https://github.com/tiangolo/fastapi/issues/261", "id": 448566256, "node_id": "MDU6SXNzdWU0NDg1NjYyNTY=", "number": 261, "title": "HTTPException detail type", "user": {"login": "knyghty", "id": 3871354, "node_id": "MDQ6VXNlcjM4NzEzNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3871354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/knyghty", "html_url": "https://github.com/knyghty", "followers_url": "https://api.github.com/users/knyghty/followers", "following_url": "https://api.github.com/users/knyghty/following{/other_user}", "gists_url": "https://api.github.com/users/knyghty/gists{/gist_id}", "starred_url": "https://api.github.com/users/knyghty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/knyghty/subscriptions", "organizations_url": "https://api.github.com/users/knyghty/orgs", "repos_url": "https://api.github.com/users/knyghty/repos", "events_url": "https://api.github.com/users/knyghty/events{/privacy}", "received_events_url": "https://api.github.com/users/knyghty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-26T13:16:24Z", "updated_at": "2023-02-24T13:25:00Z", "closed_at": "2019-06-04T10:02:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description**\r\n\r\nI'm not sure if this is a bug since I'm not sure what the fix would be and it _seems_ to be covered in the docs, though not explicitly.\r\n\r\nPer the docs you can pass anything JSON serializable to `HTTPException`'s `detail` parameter: https://fastapi.tiangolo.com/tutorial/handling-errors/\r\n\r\nHowever, it's typed as `str`, presumably because it's inheriting Starlette's HTTPException, and I assume it does this to get some specific functionality from Starlette. So for now I have to just pass in my JSON serializable content and stick `# type: ignore` on the end.\r\n\r\nI'm just wondering if there's a better way to do this, or if it's something that can be fixed.", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/261/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/261/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/240", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/240/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/240/events", "html_url": "https://github.com/tiangolo/fastapi/issues/240", "id": 445877998, "node_id": "MDU6SXNzdWU0NDU4Nzc5OTg=", "number": 240, "title": "exclusiveMinimum and exclusiveMaximum should be boolean", "user": {"login": "eu42", "id": 15113365, "node_id": "MDQ6VXNlcjE1MTEzMzY1", "avatar_url": "https://avatars.githubusercontent.com/u/15113365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eu42", "html_url": "https://github.com/eu42", "followers_url": "https://api.github.com/users/eu42/followers", "following_url": "https://api.github.com/users/eu42/following{/other_user}", "gists_url": "https://api.github.com/users/eu42/gists{/gist_id}", "starred_url": "https://api.github.com/users/eu42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eu42/subscriptions", "organizations_url": "https://api.github.com/users/eu42/orgs", "repos_url": "https://api.github.com/users/eu42/repos", "events_url": "https://api.github.com/users/eu42/events{/privacy}", "received_events_url": "https://api.github.com/users/eu42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Question or problem"}, {"id": 4694364991, "node_id": "LA_kwDOCZduT88AAAABF85TPw", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/investigate", "name": "investigate", "color": "5319E7", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}, {"id": 5194404667, "node_id": "LA_kwDOCZduT88AAAABNZxTOw", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question-migrate", "name": "question-migrate", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-05-19T23:47:37Z", "updated_at": "2023-02-28T19:04:36Z", "closed_at": "2023-02-28T19:04:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nexclusiveMinimum and exclusiveMaximum should be of type boolean\r\n\r\n**To Reproduce**\r\nA field with greater than property is generated as:\r\n```\r\nend:\r\n    exclusiveMinimum: 0.0\r\n    type: number\r\n```\r\n\r\n**Expected behavior**\r\n\r\nIt should be:\r\n```\r\nend:\r\n    exclusiveMinimum: true\r\n    minimum: 0.0\r\n    type: number\r\n```\r\n\r\n**Environment:**\r\n- OS: Linux and macOS\r\n- FastAPI version 0.22.0\r\n- Python version 3.7\r\n\r\n**Additional context**\r\nAccording to OpenAPI, these fields should be boolean as listed [here](https://github.com/OAI/OpenAPI-Specification/blob/master/schemas/v3.0/schema.yaml). \r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/240/reactions", "total_count": 14, "+1": 11, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 3}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/240/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/230", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/230/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/230/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/230/events", "html_url": "https://github.com/tiangolo/fastapi/issues/230", "id": 444527129, "node_id": "MDU6SXNzdWU0NDQ1MjcxMjk=", "number": 230, "title": "Starlette path variable convertors not recognized as path variables", "user": {"login": "sm-Fifteen", "id": 516999, "node_id": "MDQ6VXNlcjUxNjk5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/516999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sm-Fifteen", "html_url": "https://github.com/sm-Fifteen", "followers_url": "https://api.github.com/users/sm-Fifteen/followers", "following_url": "https://api.github.com/users/sm-Fifteen/following{/other_user}", "gists_url": "https://api.github.com/users/sm-Fifteen/gists{/gist_id}", "starred_url": "https://api.github.com/users/sm-Fifteen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sm-Fifteen/subscriptions", "organizations_url": "https://api.github.com/users/sm-Fifteen/orgs", "repos_url": "https://api.github.com/users/sm-Fifteen/repos", "events_url": "https://api.github.com/users/sm-Fifteen/events{/privacy}", "received_events_url": "https://api.github.com/users/sm-Fifteen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-05-15T16:14:16Z", "updated_at": "2023-02-24T13:25:15Z", "closed_at": "2019-05-21T13:32:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a file with the following code\r\n\r\n```py\r\nfrom fastapi import FastAPI\r\nfrom starlette.requests import Request\r\n\r\n@app.get('/myblog/posts/{id}/{slug:path}')\r\nasync def view_post(request: Request, id:int, slug: str):\r\n    return dict(request.path_params)\r\n```\r\n\r\n2. Open the browser and try accessing something like `http://127.0.0.1:8000/myblog/posts/42/my_article_is_very_insightful/this_could_be_anything/whatever`\r\n3. See error.\r\n\r\n```json\r\n{\"detail\":[{\"loc\":[\"query\",\"slug\"],\"msg\":\"field required\",\"type\":\"value_error.missing\"}]}\r\n```\r\n\r\nA few things to notice:\r\n* FastAPI throws a validation error about a missing *__query__* parameter.\r\n* Making the signature `view_post(request: Request, id:int):` (no `slug:str` parameter) causes the error to go away\r\n\r\n```json\r\n{\"id\":\"42\",\"slug\":\"my_article_is_very_insightful/this_could_be_anything/whatever\"}\r\n```\r\n\r\n* The returned `request.query_params` object above (which I imagine comes from Starlette because `id` appears to be a string) still contains the value for `slug`, meaning it was recognized at some point but FastAPI didn't catch it.\r\n* Likewise, making the route URL `'/myblog/posts/{id}/{slug}'` (no path converter) fixes the issue as long as the slug does not contain any slashes\r\n\r\n**Expected behavior**\r\nIn the example provided above, the route should work the exact same way whether or not `slug:str` is in the function signature.\r\n\r\n**Environment:**\r\n - OS: Windows\r\n - FastAPI Version: 0.20.0\r\n - Python version: Python 3.6.5\r\n\r\n----\r\n\r\nWhile most Starlette convertors are unlikely to be of much use to FastAPI applications (because of the type validation already being performed by FastAPI) ((as well as being undocumented)), the lack of a path wildcard in FastAPI means there still remains this last use case for them. I wouldn't personally mind if this issuewas closed in favor of a different implementation of path wildcards, although the contents of `request.path_params` raise some interesting questions regarding the way in which FastAPI currently performs route parameter extraction and why there appears to be a mismatch between the request object and that FastAPI sees.", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/230/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/216", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/216/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/216/events", "html_url": "https://github.com/tiangolo/fastapi/issues/216", "id": 443041429, "node_id": "MDU6SXNzdWU0NDMwNDE0Mjk=", "number": 216, "title": "MyPy error when `response_model` is of type `List`", "user": {"login": "sm-Fifteen", "id": 516999, "node_id": "MDQ6VXNlcjUxNjk5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/516999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sm-Fifteen", "html_url": "https://github.com/sm-Fifteen", "followers_url": "https://api.github.com/users/sm-Fifteen/followers", "following_url": "https://api.github.com/users/sm-Fifteen/following{/other_user}", "gists_url": "https://api.github.com/users/sm-Fifteen/gists{/gist_id}", "starred_url": "https://api.github.com/users/sm-Fifteen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sm-Fifteen/subscriptions", "organizations_url": "https://api.github.com/users/sm-Fifteen/orgs", "repos_url": "https://api.github.com/users/sm-Fifteen/repos", "events_url": "https://api.github.com/users/sm-Fifteen/events{/privacy}", "received_events_url": "https://api.github.com/users/sm-Fifteen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-11T22:19:59Z", "updated_at": "2023-02-24T13:25:21Z", "closed_at": "2019-05-30T15:15:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen using mypy to check FastAPI routes, setting `response_model` on any route to be `List[MyModel]` instead of simply `MyModel` causes mypy to raise the following type error:\r\n\r\n```\r\n$ mypy app.py \r\napp.py:11: error: Argument \"response_model\" to \"get\" of \"FastAPI\" has incompatible type \"Type[List[Any]]\"; expected \"Optional[Type[BaseModel]]\"\r\n```\r\n\r\nThe error does not prevent the code from executing correctly and does not result in any runtime error, this is strictly limited to mypy code validation.\r\n\r\n**To Reproduce**\r\nMinimal code to reproduce:\r\n```py\r\nfrom fastapi import FastAPI\r\nfrom typing import List\r\nfrom pydantic import BaseModel\r\n\r\nclass TestModel(BaseModel):\r\n\tfoo: int\r\n\tbar: str\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/test\", response_model=List[TestModel])\r\nasync def test_return_list():\r\n\treturn [TestModel(foo=1, bar=\"baz\")]\r\n```\r\n\r\n**Expected behavior**\r\nNo linting error should occur, meaning `response_model` should be typed to accept both `List[Type[BaseModel]]` and `Type[BaseModel]` arguments, considering FastAPI can indeed accept this and [the documentation actually suggests doing this](https://fastapi.tiangolo.com/tutorial/extra-models/#list-of-models).\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/516999/57575404-8b33ac00-7417-11e9-8580-73ab694ac0cd.png)\r\n\r\n\r\n**Environment:**\r\n - OS: Linux\r\n - FastAPI Version: 0.20.1\r\n - Python version: Python 3.7.2\r\n - mypy version: mypy 0.701\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/216/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/216/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/191", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/191/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/191/events", "html_url": "https://github.com/tiangolo/fastapi/issues/191", "id": 438165126, "node_id": "MDU6SXNzdWU0MzgxNjUxMjY=", "number": 191, "title": "Blocking on ``request.form()`` if middleware consumed it first.", "user": {"login": "yihuang", "id": 236070, "node_id": "MDQ6VXNlcjIzNjA3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/236070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yihuang", "html_url": "https://github.com/yihuang", "followers_url": "https://api.github.com/users/yihuang/followers", "following_url": "https://api.github.com/users/yihuang/following{/other_user}", "gists_url": "https://api.github.com/users/yihuang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yihuang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yihuang/subscriptions", "organizations_url": "https://api.github.com/users/yihuang/orgs", "repos_url": "https://api.github.com/users/yihuang/repos", "events_url": "https://api.github.com/users/yihuang/events{/privacy}", "received_events_url": "https://api.github.com/users/yihuang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-29T06:25:21Z", "updated_at": "2023-02-24T13:25:33Z", "closed_at": "2019-04-30T02:24:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nFastapi hangup when starlette middleware consumed request body first.\r\n\r\n**Environment:**\r\n - OS: macOS\r\n - Python 3.7.3\r\n - FastAPI 0.16.0\r\n - Starlette 0.11.1\r\n\r\n```Python\r\nfrom starlette.requests import Request\r\nfrom starlette.middleware.base import BaseHTTPMiddleware\r\nfrom fastapi import FastAPI, APIRouter, Form\r\n\r\n\r\nclass RateLimitMiddleware(BaseHTTPMiddleware):\r\n    async def dispatch(self, request: Request, call_next):\r\n        _ = await request.form()\r\n        return await call_next(request)\r\n\r\n\r\nrouter = APIRouter()\r\n\r\n\r\n@router.post('/test')\r\ndef test(a: str = Form(None)):\r\n    pass\r\n\r\n\r\napp = FastAPI()\r\napp.add_middleware(RateLimitMiddleware)\r\napp.include_router(router)\r\n```\r\n\r\n```\r\n$ uvicorn test:app --reload\r\n```\r\n\r\n```\r\n$ curl -d \"a=1\" http://127.0.0.1:8000/test\r\n```\r\n\r\nThe reason behind this is the request object in the middleware is different than the one fastapi uses, so it tries to consume request body twice.", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/191/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/180", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/180/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/180/events", "html_url": "https://github.com/tiangolo/fastapi/issues/180", "id": 436292369, "node_id": "MDU6SXNzdWU0MzYyOTIzNjk=", "number": 180, "title": "Response from the server is never received in case of using middleware.", "user": {"login": "ansrivas", "id": 1695056, "node_id": "MDQ6VXNlcjE2OTUwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1695056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ansrivas", "html_url": "https://github.com/ansrivas", "followers_url": "https://api.github.com/users/ansrivas/followers", "following_url": "https://api.github.com/users/ansrivas/following{/other_user}", "gists_url": "https://api.github.com/users/ansrivas/gists{/gist_id}", "starred_url": "https://api.github.com/users/ansrivas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ansrivas/subscriptions", "organizations_url": "https://api.github.com/users/ansrivas/orgs", "repos_url": "https://api.github.com/users/ansrivas/repos", "events_url": "https://api.github.com/users/ansrivas/events{/privacy}", "received_events_url": "https://api.github.com/users/ansrivas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-23T16:56:59Z", "updated_at": "2023-02-24T14:43:12Z", "closed_at": "2019-04-30T12:24:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nResponse from the server is never received in case of using middleware.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n`$ cat main.py`\r\n```python\r\n# !/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\"\"\"Entry point of the application.\"\"\"\r\n\r\n\r\nimport logging\r\n\r\nfrom fastapi import Depends, FastAPI, HTTPException\r\nfrom pydantic import BaseModel\r\nfrom starlette.middleware.base import BaseHTTPMiddleware\r\nfrom starlette.requests import Request\r\nfrom starlette.responses import Response\r\n\r\nlogger = logging.getLogger(__name__)\r\n\r\n\r\nclass AuthMiddleware(BaseHTTPMiddleware):\r\n    async def dispatch(self, request, call_next):\r\n        response = Response(\"Faled to authenticate\", status_code=401)\r\n        try:\r\n            json = await request.json()\r\n            request.state.is_authenticated = True\r\n            logger.info(f\"request.body: {json} \")\r\n            response = await call_next(request)\r\n        finally:\r\n            request.state.is_authenticated = False\r\n        return response\r\n\r\n\r\napp = FastAPI(title=\"Nice Server\",\r\n              description=\"This is a very fancy project, with auto docs for the API and everything\",\r\n              version=\"0.1.0\",\r\n              docs_url=\"/docs\", redoc_url=None)\r\n\r\napp.add_middleware(AuthMiddleware)\r\n\r\n\r\nclass SomeTimestamp(BaseModel):\r\n    ts: int\r\n\r\n\r\nasync def is_authenticated(request: Request):\r\n    return request.state.is_authenticated\r\n\r\n\r\n@app.post(\"/latest\", response_model=SomeTimestamp, summary=\"Returning the latest \")\r\nasync def latest(*, some_timestamp: SomeTimestamp, is_authenticated: bool = Depends(is_authenticated)):\r\n    logger.info(f\"Let's see if this is authenticated: {is_authenticated}\")\r\n    if not is_authenticated:\r\n        raise HTTPException(status_code=401, detail=\"Failed to verify the incoming token\")\r\n\r\n    logger.info(f\"Received for prediction {some_timestamp.ts}\")\r\n    return some_timestamp.ts\r\n```\r\n\r\nNow run the server:\r\n```\r\nuvicorn main_server:app --reload\r\n```\r\n\r\nNow query this using `curl`:\r\n```\r\ncurl --header \"Content-Type: application/json\" \\\r\n  --request POST \\\r\n  --data '{\"ts\":\"123123\"}' \\\r\n  http://127.0.0.1:8000/latest\r\n```\r\n\r\n**Expected behavior**\r\nThe server is stuck before sending response.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment:**\r\n - OS: [ Linux]\r\n - FastAPI Version [e.g. 0.18.0], get it with:\r\n\r\n```Python\r\nimport fastapi\r\nprint(fastapi.__version__)\r\n\r\n0.18.0\r\n```\r\n\r\n- Python version, get it with:\r\n\r\n```bash\r\npython --version\r\n3.7\r\n```\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/180/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/139", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/139/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/139/events", "html_url": "https://github.com/tiangolo/fastapi/issues/139", "id": 429790457, "node_id": "MDU6SXNzdWU0Mjk3OTA0NTc=", "number": 139, "title": "Routes defined with same APIRouter instance share responses", "user": {"login": "kristianvld", "id": 7207116, "node_id": "MDQ6VXNlcjcyMDcxMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/7207116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kristianvld", "html_url": "https://github.com/kristianvld", "followers_url": "https://api.github.com/users/kristianvld/followers", "following_url": "https://api.github.com/users/kristianvld/following{/other_user}", "gists_url": "https://api.github.com/users/kristianvld/gists{/gist_id}", "starred_url": "https://api.github.com/users/kristianvld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kristianvld/subscriptions", "organizations_url": "https://api.github.com/users/kristianvld/orgs", "repos_url": "https://api.github.com/users/kristianvld/repos", "events_url": "https://api.github.com/users/kristianvld/events{/privacy}", "received_events_url": "https://api.github.com/users/kristianvld/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-05T14:41:25Z", "updated_at": "2023-02-24T13:25:46Z", "closed_at": "2019-04-05T17:03:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen defining routes with an API router their alternative responses are shared.\r\n\r\n**To Reproduce**\r\nExample 1:\r\n```\r\nfrom fastapi import FastAPI\r\nfrom fastapi import APIRouter\r\n\r\napp = FastAPI()\r\nrouter = APIRouter()\r\n\r\n@router.get(\"/a\", responses={501: {\"description\": \"Error 1\"}})\r\nasync def a():\r\n    return \"a\"\r\n\r\n@router.get(\"/b\", responses={502: {\"description\": \"Error 2\"}})\r\nasync def b():\r\n    return \"b\"\r\n\r\n@router.get(\"/c\", responses={501: {\"description\": \"Error 1 overwriten\"}})\r\nasync def c():\r\n    return \"c\"\r\n\r\napp.include_router(router)\r\n```\r\n/a will now have a single 501 error as expected.\r\n/b will now have both a 501 and a 502 error (should only be 502). \r\n/c will also have both 501 and 502, but an overwritten description (should only be 501). \r\n\r\nIf you split them into different routers, the problem does not occur:\r\nExample 2:\r\n```\r\nrouter1 = APIRouter()\r\nrouter2 = APIRouter()\r\nrouter3 = APIRouter()\r\n\r\n@router1.get(\"/a\", responses={501: {\"description\": \"Error 1\"}})\r\nasync def a():\r\n    return \"a\"\r\n\r\n@router2.get(\"/b\", responses={502: {\"description\": \"Error 2\"}})\r\nasync def b():\r\n    return \"b\"\r\n\r\n@router3.get(\"/c\", responses={501: {\"description\": \"Error 1 overwriten\"}})\r\nasync def c():\r\n    return \"c\"\r\n\r\napp.include_router(router1)\r\napp.include_router(router2)\r\napp.include_router(router3\r\n```\r\n**Expected behavior**\r\nResponses for different paths should not be merged. This only occurs for APIRouter, not if paths are added directly to the FastAPI app instance.\r\n\r\n**Screenshots**\r\nExample 1:\r\n<img width=\"766\" alt=\"example1\" src=\"https://user-images.githubusercontent.com/7207116/55635392-d75c5280-57c0-11e9-9789-366947609d38.png\">\r\n\r\nExample 2: (different routers)\r\n<img width=\"739\" alt=\"example2\" src=\"https://user-images.githubusercontent.com/7207116/55635426-ecd17c80-57c0-11e9-8c4c-c08738e6d43c.png\">\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/139/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/136", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/136/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/136/events", "html_url": "https://github.com/tiangolo/fastapi/issues/136", "id": 428953418, "node_id": "MDU6SXNzdWU0Mjg5NTM0MTg=", "number": 136, "title": "using alias in response schema", "user": {"login": "sebdiem", "id": 2878137, "node_id": "MDQ6VXNlcjI4NzgxMzc=", "avatar_url": "https://avatars.githubusercontent.com/u/2878137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebdiem", "html_url": "https://github.com/sebdiem", "followers_url": "https://api.github.com/users/sebdiem/followers", "following_url": "https://api.github.com/users/sebdiem/following{/other_user}", "gists_url": "https://api.github.com/users/sebdiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebdiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebdiem/subscriptions", "organizations_url": "https://api.github.com/users/sebdiem/orgs", "repos_url": "https://api.github.com/users/sebdiem/repos", "events_url": "https://api.github.com/users/sebdiem/events{/privacy}", "received_events_url": "https://api.github.com/users/sebdiem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-03T20:12:30Z", "updated_at": "2023-02-24T13:25:47Z", "closed_at": "2019-04-20T20:54:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen using alias in response schema, the documentation uses the alias in the response but the returned response does not use the alias.\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n```python\r\nclass Test(BaseModel):\r\n    test: int = Schema(..., alias=test2)\r\n\r\n@router.get(\"/test\", response_model=Test)\r\ndef test():\r\n    return {\"test\": 1}\r\n\r\n# in test.py\r\n>> response = client.get(\"/test\", \u2026)\r\n>> response.json()\r\n{\"test2\": 1}\r\n```\r\n\r\n**Expected behavior**\r\nI would expect the doc and the code to be consistent.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment:**\r\n - OS: macOS \r\n - FastAPI Version 0.10.1:\r\n\r\n```Python\r\nimport fastapi\r\nprint(fastapi.__version__)\r\n```\r\n\r\n- Python version, get it with: 3.7.2\r\n\r\n```bash\r\npython --version\r\n```\r\n\r\n**Additional context**\r\nN/A", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/136/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/98", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/98/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/98/events", "html_url": "https://github.com/tiangolo/fastapi/issues/98", "id": 424564890, "node_id": "MDU6SXNzdWU0MjQ1NjQ4OTA=", "number": 98, "title": "Websocket Routes Only Work on FastAPI, not APIRouter", "user": {"login": "iwoloschin", "id": 6474586, "node_id": "MDQ6VXNlcjY0NzQ1ODY=", "avatar_url": "https://avatars.githubusercontent.com/u/6474586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iwoloschin", "html_url": "https://github.com/iwoloschin", "followers_url": "https://api.github.com/users/iwoloschin/followers", "following_url": "https://api.github.com/users/iwoloschin/following{/other_user}", "gists_url": "https://api.github.com/users/iwoloschin/gists{/gist_id}", "starred_url": "https://api.github.com/users/iwoloschin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iwoloschin/subscriptions", "organizations_url": "https://api.github.com/users/iwoloschin/orgs", "repos_url": "https://api.github.com/users/iwoloschin/repos", "events_url": "https://api.github.com/users/iwoloschin/events{/privacy}", "received_events_url": "https://api.github.com/users/iwoloschin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 28, "created_at": "2019-03-24T01:51:32Z", "updated_at": "2023-02-24T13:25:58Z", "closed_at": "2019-03-24T20:00:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWebsocket routes appear to only work on the main FastAPI object, not on APIRouter objects.  When the same function is copied from a FastAPI object to an APIRouter object instead of working properly it just throws a 403.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. The following works as expected:\r\n```python\r\nfrom fastapi import FastAPI\r\napp = FastAPI()\r\n\r\n@app.websocket_route(\"/hello\")\r\nasync def hello(websocket):\r\n    await websocket.accept()\r\n    await websocket.send_text(\"Hello!\")\r\n    response = await websocket.receive_text()\r\n    print(response)\r\n    await websocket.close()\r\n    print(\"Closed\")\r\n```\r\n2. Moving `hello` to an APIRouter fails:\r\n```python\r\n# main.py\r\nfrom fastapi import FastAPI\r\nimport other\r\napp = FastAPI()\r\napp.include_router(other.router)\r\n```\r\n\r\n```python\r\n# other.py\r\nfrom fastapi import APIRouter\r\nrouter = APIRouter()\r\n\r\n@router.websocket_route(\"/routerhello\")\r\nasync def hello(websocket):\r\n    await websocket.accept()\r\n    await websocket.send_text(\"Router Hello!\")\r\n    response = await websocket.receive_text()\r\n    print(response)\r\n    await websocket.close()\r\n    print(\"Router Closed\")\r\n```\r\n**Expected behavior**\r\nI expect a websocket route to work on both a FastAPI and APIRouter object.\r\n\r\n**Screenshots**\r\nNot applicable.\r\n\r\n**Environment:**\r\n - OS: macOS 10.14.3\r\n - FastAPI Version: 0.9.0\r\n\r\n- Python version, get it with: 3.7.2\r\n\r\n**Additional context**\r\nTesting websocket client side with `websocat`.", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/98/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/98/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/87", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/87/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/87/events", "html_url": "https://github.com/tiangolo/fastapi/issues/87", "id": 423241872, "node_id": "MDU6SXNzdWU0MjMyNDE4NzI=", "number": 87, "title": "FastAPI does not set additionalProperties correctly when dealing with Dicts.", "user": {"login": "Sean1708", "id": 5058711, "node_id": "MDQ6VXNlcjUwNTg3MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/5058711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sean1708", "html_url": "https://github.com/Sean1708", "followers_url": "https://api.github.com/users/Sean1708/followers", "following_url": "https://api.github.com/users/Sean1708/following{/other_user}", "gists_url": "https://api.github.com/users/Sean1708/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sean1708/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sean1708/subscriptions", "organizations_url": "https://api.github.com/users/Sean1708/orgs", "repos_url": "https://api.github.com/users/Sean1708/repos", "events_url": "https://api.github.com/users/Sean1708/events{/privacy}", "received_events_url": "https://api.github.com/users/Sean1708/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-03-20T13:09:25Z", "updated_at": "2023-02-24T13:26:00Z", "closed_at": "2019-03-31T14:47:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen creating the schema for a `Dict` FastAPI sets `\"additionalProperties\": true` instead of setting it to the schema of the values. This does not appear to be an issue with pydantic.\r\n\r\n**To Reproduce**\r\nA minimal working example is:\r\n\r\n```python\r\nfrom typing import Dict\r\n\r\nfrom fastapi import FastAPI\r\nfrom pydantic import BaseModel\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\nclass Items(BaseModel):\r\n\titems: Dict[str, int]\r\n\r\n\r\n@app.post(\"/foo\")\r\ndef foo(items: Items):\r\n\treturn items.items\r\n```\r\n\r\nPut this in a file called `test.py` and run it with `uvicorn test:app`. The JSON returned from the `openapi.json` endpoint is:\r\n\r\n```json\r\n{\"openapi\":\"3.0.2\",\"info\":{\"title\":\"Fast API\",\"version\":\"0.1.0\"},\"paths\":{\"/foo\":{\"post\":{\"responses\":{\"200\":{\"description\":\"Successful Response\",\"content\":{\"application/json\":{\"schema\":{}}}},\"422\":{\"description\":\"Validation Error\",\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/HTTPValidationError\"}}}}},\"summary\":\"Foo Post\",\"operationId\":\"foo_foo_post\",\"requestBody\":{\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/Items\"}}},\"required\":true}}}},\"components\":{\"schemas\":{\"Items\":{\"title\":\"Items\",\"required\":[\"items\"],\"type\":\"object\",\"properties\":{\"items\":{\"title\":\"Items\",\"type\":\"object\",\"additionalProperties\":true}}},\"ValidationError\":{\"title\":\"ValidationError\",\"required\":[\"loc\",\"msg\",\"type\"],\"type\":\"object\",\"properties\":{\"loc\":{\"title\":\"Location\",\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"msg\":{\"title\":\"Message\",\"type\":\"string\"},\"type\":{\"title\":\"Error Type\",\"type\":\"string\"}}},\"HTTPValidationError\":{\"title\":\"HTTPValidationError\",\"type\":\"object\",\"properties\":{\"detail\":{\"title\":\"Detail\",\"type\":\"array\",\"items\":{\"$ref\":\"#/components/schemas/ValidationError\"}}}}}}}\r\n```\r\n\r\nIn particular the schema for `Items` is:\r\n\r\n```json\r\n{\"title\":\"Items\",\"required\":[\"items\"],\"type\":\"object\",\"properties\":{\"items\":{\"title\":\"Items\",\"type\":\"object\",\"additionalProperties\":true}}}\r\n```\r\n\r\n**Expected behavior**\r\nThe `additionalProperties` should be `{'type': 'integer'}` as it is when using pydantic directly:\r\n\r\n```\r\nPython 3.7.2 (default, Dec 24 2018, 03:41:55) \r\n[GCC 7.4.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import test\r\nWARNING:root:email-validator not installed, email fields will be treated as str.\r\nTo install, run: pip install email-validator\r\n>>> test.Items.schema()\r\n{'title': 'Items', 'type': 'object', 'properties': {'items': {'title': 'Items', 'type': 'object', 'additionalProperties': {'type': 'integer'}}}, 'required': ['items']}\r\n>>>\r\n```\r\n\r\n**Environment:**\r\n - OS: Linux\r\n - FastAPI Version 0.8.0\r\n - Python Version 3.7.2\r\n\r\n```\r\n$ pip list\r\nPackage    Version\r\n---------- -------\r\nClick      7.0    \r\nfastapi    0.8.0  \r\nh11        0.8.1  \r\nhttptools  0.0.13 \r\npip        18.1   \r\npydantic   0.18.2 \r\nsetuptools 40.6.2 \r\nstarlette  0.11.1 \r\nuvicorn    0.6.1  \r\nuvloop     0.12.1 \r\nwebsockets 7.0\r\n```", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/87/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/87/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/36", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/36/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/36/events", "html_url": "https://github.com/tiangolo/fastapi/issues/36", "id": 411206656, "node_id": "MDU6SXNzdWU0MTEyMDY2NTY=", "number": 36, "title": "jsonable_encoder crash", "user": {"login": "euri10", "id": 1104190, "node_id": "MDQ6VXNlcjExMDQxOTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1104190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euri10", "html_url": "https://github.com/euri10", "followers_url": "https://api.github.com/users/euri10/followers", "following_url": "https://api.github.com/users/euri10/following{/other_user}", "gists_url": "https://api.github.com/users/euri10/gists{/gist_id}", "starred_url": "https://api.github.com/users/euri10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euri10/subscriptions", "organizations_url": "https://api.github.com/users/euri10/orgs", "repos_url": "https://api.github.com/users/euri10/repos", "events_url": "https://api.github.com/users/euri10/events{/privacy}", "received_events_url": "https://api.github.com/users/euri10/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-17T16:37:16Z", "updated_at": "2023-02-24T13:26:19Z", "closed_at": "2019-03-25T19:19:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nThe jsonable_encoder crashes rightfully when passing a list of postgres Records, it's certainly a mis usage on my end, but I think that is something that would be interesting maybe to add in that function\r\n<details>\r\n <summary>Crash log</summary>\r\n\r\n```python\r\nConnected to pydev debugger (build 183.5429.31)\r\nbackend_1_f0c43d42b730 | WARNING:root:email-validator not installed, email fields will be treated as str.\r\nbackend_1_f0c43d42b730 | To install, run: pip install email-validator\r\nbackend_1_f0c43d42b730 | DEBUG:app.app:postgresql://postgres:postgres@db:5432/fastapi_dev\r\nbackend_1_f0c43d42b730 | INFO:uvicorn:Started server process [1]\r\nbackend_1_f0c43d42b730 | INFO:uvicorn:Waiting for application startup.\r\nbackend_1_f0c43d42b730 | INFO:uvicorn:Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)\r\nbackend_1_f0c43d42b730 | Traceback (most recent call last):\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 78, in jsonable_encoder\r\nbackend_1_f0c43d42b730 |     encoder = ENCODERS_BY_TYPE[type(obj)]\r\nbackend_1_f0c43d42b730 | KeyError: <class 'sqlalchemy.sql.base.ColumnCollection'>\r\nbackend_1_f0c43d42b730 | \r\nbackend_1_f0c43d42b730 | During handling of the above exception, another exception occurred:\r\nbackend_1_f0c43d42b730 | \r\nbackend_1_f0c43d42b730 | Traceback (most recent call last):\r\nbackend_1_f0c43d42b730 |   File \"/opt/.pycharm_helpers/pydev/_pydevd_bundle/pydevd_trace_dispatch_regular.py\", line 145, in __call__\r\nbackend_1_f0c43d42b730 |     if not is_stepping and cache_key in cache_skips:\r\nbackend_1_f0c43d42b730 | RecursionError: maximum recursion depth exceeded in comparison\r\nbackend_1_f0c43d42b730 | Fatal Python error: Cannot recover from stack overflow.\r\nbackend_1_f0c43d42b730 | \r\nbackend_1_f0c43d42b730 | Thread 0x00007f5d9ffa9ae8 (most recent call first):\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/threading.py\", line 300 in wait\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/threading.py\", line 552 in wait\r\nbackend_1_f0c43d42b730 |   File \"/opt/.pycharm_helpers/pydev/pydevd.py\", line 128 in _on_run\r\nbackend_1_f0c43d42b730 |   File \"/opt/.pycharm_helpers/pydev/_pydevd_bundle/pydevd_comm.py\", line 320 in run\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/threading.py\", line 917 in _bootstrap_inner\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/threading.py\", line 885 in _bootstrap\r\nbackend_1_f0c43d42b730 | \r\nbackend_1_f0c43d42b730 | Thread 0x00007f5da00acae8 (most recent call first):\r\nbackend_1_f0c43d42b730 |   File \"/opt/.pycharm_helpers/pydev/_pydevd_bundle/pydevd_comm.py\", line 382 in _on_run\r\nbackend_1_f0c43d42b730 |   File \"/opt/.pycharm_helpers/pydev/_pydevd_bundle/pydevd_comm.py\", line 320 in run\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/threading.py\", line 917 in _bootstrap_inner\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/threading.py\", line 885 in _bootstrap\r\nbackend_1_f0c43d42b730 | \r\nbackend_1_f0c43d42b730 | Thread 0x00007f5da01afae8 (most recent call first):\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/threading.py\", line 300 in wait\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/queue.py\", line 179 in get\r\nbackend_1_f0c43d42b730 |   File \"/opt/.pycharm_helpers/pydev/_pydevd_bundle/pydevd_comm.py\", line 459 in _on_run\r\nbackend_1_f0c43d42b730 |   File \"/opt/.pycharm_helpers/pydev/_pydevd_bundle/pydevd_comm.py\", line 320 in run\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/threading.py\", line 917 in _bootstrap_inner\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/threading.py\", line 885 in _bootstrap\r\nbackend_1_f0c43d42b730 | \r\nbackend_1_f0c43d42b730 | Current thread 0x00007f5da6097b88 (most recent call first):\r\nbackend_1_f0c43d42b730 |   File \"/opt/.pycharm_helpers/pydev/_pydevd_bundle/pydevd_trace_dispatch_regular.py\", line 145 in __call__\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/sqlalchemy/sql/operators.py\", line 425 in __getitem__\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py\", line 707 in operate\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/sqlalchemy/sql/operators.py\", line 432 in __getitem__\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 83 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 96 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   File \"/usr/local/lib/python3.7/site-packages/fastapi/encoders.py\", line 54 in jsonable_encoder\r\nbackend_1_f0c43d42b730 |   ...\r\nfastapi_appfactory_backend_1_f0c43d42b730 exited with code 139\r\nAborting on container exit...\r\n```\r\n</details>\r\n\r\n\r\n**To Reproduce**\r\n\r\nHere's my simple app, I want to test the databases package from starlette\r\n\r\n```python\r\nimport logging\r\nfrom typing import List\r\n\r\nfrom fastapi import FastAPI\r\n\r\nfrom app import settings\r\nfrom app.settings import database\r\nfrom app.models import notes, NoteIn\r\n\r\n\r\nlogger = logging.getLogger(__name__)\r\nlogger.setLevel(logging.DEBUG)\r\n\r\nlogger.debug(settings.DATABASE_URL)\r\napp = FastAPI()\r\n\r\napp.debug = settings.DEBUG\r\n\r\n\r\n@app.on_event(\"startup\")\r\nasync def startup():\r\n    await database.connect()\r\n\r\n\r\n@app.on_event(\"shutdown\")\r\nasync def shutdown():\r\n    await database.disconnect()\r\n\r\n\r\n@app.get(\"/\")\r\nasync def root():\r\n    logger.debug(database)\r\n    return {\"message\": \"Hello World\"}\r\n\r\n\r\n@app.get(\"/notes\", response_model=List[NoteIn])\r\nasync def list_notes():\r\n    query = notes.select()\r\n    results = await database.fetch_all(query)\r\n    # content = [\r\n    #     {\"text\": result[\"text\"], \"completed\": result[\"completed\"]} for result in results\r\n    # ]\r\n    # return content\r\n    return results\r\n\r\n\r\n@app.post(\"/notes\")\r\nasync def add_note(note: NoteIn):\r\n    query = notes.insert().values(**note.dict())\r\n    await database.execute(query)\r\n    return note\r\n```\r\n\r\nShould you want I may give you the full gitlab repo address that can reproduce it simply with a docker-compose, instead of copying all files :)\r\n\r\n\r\n**Expected behavior**\r\n\r\nIf I return content instead of results in the `list_notes` route I got no problem, so that one workaround.\r\nAnother workaround is to return\r\n`    return [r._row for r in results]`\r\nbut i don't like much using private attributes\r\n\r\nI got the feeling that `results`, being a list of `databases.backends.postgres.Record` it might be rightfully \"parsed\" by `jsonable_encoder` by adding another `if isinstance(obj, blablabla):` check\r\n\r\nSo maybe not a bug, but a possible enhancement ;)\r\n\r\nwhen using DatabaseMiddleware, the fetchall method (note, no underscore in it) return a list of `asyncpg.Records` which the encoder parsed fine: `results = await request.database.fetchall(query)`\r\n\r\nnow we got a list of `databases.backends.postgres.Record`\r\n\r\n**Environment:**\r\n - OS: debian buster\r\n - FastAPI Version [e.g. 0.3.0], get it with: 0.5.0\r\n\r\n```Python\r\nimport fastapi\r\nprint(fastapi.__version__)\r\n```\r\n\r\n- Python version, get it with: 3.7.2\r\n\r\n```bash\r\npython --version\r\n```\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/36/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/36/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/18", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/18/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/18/events", "html_url": "https://github.com/tiangolo/fastapi/issues/18", "id": 405468346, "node_id": "MDU6SXNzdWU0MDU0NjgzNDY=", "number": 18, "title": "Check json_encoders in pydantic model", "user": {"login": "nsidnev", "id": 22559461, "node_id": "MDQ6VXNlcjIyNTU5NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22559461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nsidnev", "html_url": "https://github.com/nsidnev", "followers_url": "https://api.github.com/users/nsidnev/followers", "following_url": "https://api.github.com/users/nsidnev/following{/other_user}", "gists_url": "https://api.github.com/users/nsidnev/gists{/gist_id}", "starred_url": "https://api.github.com/users/nsidnev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nsidnev/subscriptions", "organizations_url": "https://api.github.com/users/nsidnev/orgs", "repos_url": "https://api.github.com/users/nsidnev/repos", "events_url": "https://api.github.com/users/nsidnev/events{/privacy}", "received_events_url": "https://api.github.com/users/nsidnev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-31T22:26:33Z", "updated_at": "2023-02-21T19:01:12Z", "closed_at": "2019-02-08T14:04:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Thanks for your awesome project. It's really great!\r\nI have a model with a datetime field that needs to be in ISO 8601 format in the response. And when I call json method from the model instance I get the right string, but the response from fastapi returns standart output:\r\n```python\r\nfrom datetime import datetime, timezone\r\n\r\nfrom fastapi import FastAPI\r\nfrom pydantic import BaseModel\r\n\r\n\r\nclass ModelWithDatetimeField(BaseModel):\r\n    dt_field: datetime\r\n\r\n    class Config:\r\n        json_encoders = {\r\n            datetime: lambda dt: dt.replace(\r\n                microsecond=0, tzinfo=timezone.utc\r\n            ).isoformat()\r\n        }\r\n\r\n\r\napp = FastAPI()\r\nmodel = ModelWithDatetimeField(dt_field=datetime.utcnow())\r\n\r\n\r\n@app.get(\"/model\")\r\ndef get_model():\r\n    print(model.json())\r\n    return model\r\n```\r\n\r\nSo, in console I'll get right string representation:\r\n`{\"dt_field\": \"2019-01-31T22:00:12+00:00\"}`\r\n\r\nBut in the response from server I'll get this:\r\n`{\"dt_field\": \"2019-01-31T22:00:12.810220\"}`", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/18/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/18/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/10", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/10/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/10/events", "html_url": "https://github.com/tiangolo/fastapi/issues/10", "id": 402178206, "node_id": "MDU6SXNzdWU0MDIxNzgyMDY=", "number": 10, "title": "starlette update breaks routing", "user": {"login": "medecau", "id": 59870, "node_id": "MDQ6VXNlcjU5ODcw", "avatar_url": "https://avatars.githubusercontent.com/u/59870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medecau", "html_url": "https://github.com/medecau", "followers_url": "https://api.github.com/users/medecau/followers", "following_url": "https://api.github.com/users/medecau/following{/other_user}", "gists_url": "https://api.github.com/users/medecau/gists{/gist_id}", "starred_url": "https://api.github.com/users/medecau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medecau/subscriptions", "organizations_url": "https://api.github.com/users/medecau/orgs", "repos_url": "https://api.github.com/users/medecau/repos", "events_url": "https://api.github.com/users/medecau/events{/privacy}", "received_events_url": "https://api.github.com/users/medecau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-23T10:47:12Z", "updated_at": "2023-02-21T19:00:41Z", "closed_at": "2019-02-01T10:14:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "[starlette 0.9.11](https://pypi.org/project/starlette/0.9.11/) breaks fastapi routing\r\nI'm currently working around this by enforcing starlette==0.9.10", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/10/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/10/timeline", "performed_via_github_app": null, "state_reason": "completed"}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/2", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/2/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/2/events", "html_url": "https://github.com/tiangolo/fastapi/issues/2", "id": 396134687, "node_id": "MDU6SXNzdWUzOTYxMzQ2ODc=", "number": 2, "title": "file uploads > 65536 characters, binary blobs/mp4s etc.", "user": {"login": "rcox771", "id": 13604961, "node_id": "MDQ6VXNlcjEzNjA0OTYx", "avatar_url": "https://avatars.githubusercontent.com/u/13604961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcox771", "html_url": "https://github.com/rcox771", "followers_url": "https://api.github.com/users/rcox771/followers", "following_url": "https://api.github.com/users/rcox771/following{/other_user}", "gists_url": "https://api.github.com/users/rcox771/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcox771/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcox771/subscriptions", "organizations_url": "https://api.github.com/users/rcox771/orgs", "repos_url": "https://api.github.com/users/rcox771/repos", "events_url": "https://api.github.com/users/rcox771/events{/privacy}", "received_events_url": "https://api.github.com/users/rcox771/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536357, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 5182257681, "node_id": "LA_kwDOCZduT88AAAABNOL6EQ", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/reviewed", "name": "reviewed", "color": "BFD4F2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-05T05:07:49Z", "updated_at": "2023-02-21T19:00:29Z", "closed_at": "2019-01-05T18:42:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello there,\r\n\r\nFirst, I have to say that I am really impressed by what you guys are doing here. Also, your docs are outstanding and easy to follow. I spotted your project on my recommendations page and immediately fell in love, losing most of my Friday night tinkering around.\r\n\r\nWhen I got to your [file upload section](https://fastapi.tiangolo.com/tutorial/request-forms-and-files/) in the docs, I hit a snag when trying to upload an mp4 file. \r\n\r\n`{\r\n  \"detail\": [\r\n    {\r\n      \"loc\": [\r\n        \"body\",\r\n        \"file\"\r\n      ],\r\n      \"msg\": \"ensure this value has at most 65536 characters\",\r\n      \"type\": \"value_error.any_str.max_length\",\r\n      \"ctx\": {\r\n        \"limit_value\": 65536\r\n      }\r\n    }\r\n  ]\r\n}`\r\n![image](https://user-images.githubusercontent.com/13604961/50720558-6e5c2600-107d-11e9-8918-b6a7457d060c.png)\r\n\r\n\r\nIt seems like the File type expects bytes as strings, which aren't allowed to go past 65536 characters in length. I expect others might run into this too, or be confused like I am when hitting this part.\r\n\r\n\r\n-Russell\r\n", "reactions": {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/2/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tiangolo/fastapi/issues/2/timeline", "performed_via_github_app": null, "state_reason": "completed"}]